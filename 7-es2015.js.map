{"version":3,"sources":["./src/app/+hub/datalink/datalink-edit/custom-function-edit/custom-function-edit.component.ts","./src/app/+hub/datalink/datalink-edit/custom-function-edit/custom-function-edit.component.html","./src/app/+hub/datalink/datalink-edit/custom-function-edit/index.ts","./src/app/+hub/datalink/datalink-edit/datalink-column-edit/datalink-column-edit.component.ts","./src/app/+hub/datalink/datalink-edit/datalink-column-edit/datalink-column-edit.component.html","./src/app/+hub/datalink/datalink-edit/datalink-edit-guard.ts","./src/app/+hub/datalink/datalink-edit/datalink-edit.component.ts","./src/app/+hub/datalink/datalink-edit/datalink-edit.component.html","./src/app/+hub/datalink/datalink-edit/datalink-edit.module.ts","./src/app/+hub/datalink/datalink-edit/datalink-edit.routing.ts","./src/app/+hub/datalink/datalink-edit/datalink-edit.service.ts","./src/app/+hub/datalink/datalink-edit/datalink-table/datalink-table.component.ts","./src/app/+hub/datalink/datalink-edit/datalink-table/datalink-table.component.html","./src/app/+hub/datalink/datalink-edit/input-columns/index.ts","./src/app/+hub/datalink/datalink-edit/input-columns/input-column.component.ts","./src/app/+hub/datalink/datalink-edit/input-columns/input-column.component.html","./src/app/+hub/datalink/datalink-edit/input-columns/input-columns.component.ts","./src/app/+hub/datalink/datalink-edit/input-columns/input-columns.component.html","./src/app/+hub/datalink/datalink-edit/join-columns/index.ts","./src/app/+hub/datalink/datalink-edit/join-columns/join-column.component.ts","./src/app/+hub/datalink/datalink-edit/join-columns/join-column.component.html","./src/app/+hub/datalink/datalink-edit/join-columns/join-columns.component.ts","./src/app/+hub/datalink/datalink-edit/join-columns/join-columns.component.html","./src/app/+hub/datalink/datalink-edit/mapping-edit/index.ts","./src/app/+hub/datalink/datalink-edit/mapping-edit/mapping-edit.component.ts","./src/app/+hub/datalink/datalink-edit/mapping-edit/mapping-edit.component.html","./src/app/+hub/datalink/datalink-edit/mapping/index.ts","./src/app/+hub/datalink/datalink-edit/mapping/mapping-item.component.ts","./src/app/+hub/datalink/datalink-edit/mapping/mapping-item.component.html","./src/app/+hub/datalink/datalink-edit/mapping/mapping.component.ts","./src/app/+hub/datalink/datalink-edit/mapping/mapping.component.html","./src/app/+hub/datalink/datalink-edit/new-transform/datalink-edit-new-transform.component.ts","./src/app/+hub/datalink/datalink-edit/new-transform/datalink-edit-new-transform.component.html","./src/app/+hub/datalink/datalink-edit/output-columns/index.ts","./src/app/+hub/datalink/datalink-edit/output-columns/output-column.component.ts","./src/app/+hub/datalink/datalink-edit/output-columns/output-column.component.html","./src/app/+hub/datalink/datalink-edit/output-columns/output-columns.component.ts","./src/app/+hub/datalink/datalink-edit/output-columns/output-columns.component.html","./src/app/+hub/datalink/datalink-edit/parameters/index.ts","./src/app/+hub/datalink/datalink-edit/parameters/input-parameter.component.ts","./src/app/+hub/datalink/datalink-edit/parameters/input-parameter.component.html","./src/app/+hub/datalink/datalink-edit/parameters/output-parameter.component.ts","./src/app/+hub/datalink/datalink-edit/parameters/output-parameter.component.html","./src/app/+hub/datalink/datalink-edit/preview-data/index.ts","./src/app/+hub/datalink/datalink-edit/preview-data/preview-data.component.ts","./src/app/+hub/datalink/datalink-edit/preview-data/preview-data.component.html","./src/app/+hub/datalink/datalink-edit/preview-table/index.ts","./src/app/+hub/datalink/datalink-edit/preview-table/preview-table.component.ts","./src/app/+hub/datalink/datalink-edit/preview-table/preview-table.component.html","./src/app/+hub/datalink/datalink-edit/profile-rules/profile-rules.component.ts","./src/app/+hub/datalink/datalink-edit/profile-rules/profile-rules.component.html","./src/app/+hub/datalink/datalink-edit/properties/datalink-edit-properties.component.ts","./src/app/+hub/datalink/datalink-edit/properties/datalink-edit-properties.component.html","./src/app/+hub/datalink/datalink-edit/run-plan/datalink-run-plan.component.ts","./src/app/+hub/datalink/datalink-edit/run-plan/datalink-run-plan.component.html","./src/app/+hub/datalink/datalink-edit/save-button/datalink-edit-save-button.component.ts","./src/app/+hub/datalink/datalink-edit/save-button/datalink-edit-save-button.component.html","./src/app/+hub/datalink/datalink-edit/source-table/datalink-edit-source-table.component.ts","./src/app/+hub/datalink/datalink-edit/source-table/datalink-edit-source-table.component.html","./src/app/+hub/datalink/datalink-edit/standard-function-edit/index.ts","./src/app/+hub/datalink/datalink-edit/standard-function-edit/standard-function-edit.component.ts","./src/app/+hub/datalink/datalink-edit/standard-function-edit/standard-function-edit.component.html","./src/app/+hub/datalink/datalink-edit/target-columns/index.ts","./src/app/+hub/datalink/datalink-edit/target-columns/target-column.component.ts","./src/app/+hub/datalink/datalink-edit/target-columns/target-column.component.html","./src/app/+hub/datalink/datalink-edit/target-columns/target-columns.component.ts","./src/app/+hub/datalink/datalink-edit/target-columns/target-columns.component.html","./src/app/+hub/datalink/datalink-edit/target-table-column/target-table-column.component.ts","./src/app/+hub/datalink/datalink-edit/target-table-column/target-table-column.component.html","./src/app/+hub/datalink/datalink-edit/target/datalink-edit-target-table.component.ts","./src/app/+hub/datalink/datalink-edit/target/datalink-edit-target-table.component.html","./src/app/+hub/datalink/datalink-edit/target/datalink-edit-target.component.ts","./src/app/+hub/datalink/datalink-edit/target/datalink-edit-target.component.html","./src/app/+hub/datalink/datalink-edit/transform-step/transform-step.component.ts","./src/app/+hub/datalink/datalink-edit/transform-step/transform-step.component.html","./src/app/+hub/datalink/datalink-edit/transform-table-edit/transform-table-edit.component.ts","./src/app/+hub/datalink/datalink-edit/transform-table-edit/transform-table-edit.component.html","./src/app/+hub/datalink/datalink-edit/transform/datalink-edit-transform.component.ts","./src/app/+hub/datalink/datalink-edit/transform/datalink-edit-transform.component.html","./src/app/+hub/datalink/datalink-edit/unGroup-edit/index.ts","./src/app/+hub/datalink/datalink-edit/unGroup-edit/unGroup-edit.component.ts","./src/app/+hub/datalink/datalink-edit/unGroup-edit/unGroup-edit.component.html","./src/app/+hub/datalink/datalink-edit/validation/datalink-edit-validation.component.ts","./src/app/+hub/datalink/datalink-edit/validation/datalink-edit-validation.component.html"],"names":[],"mappings":"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","file":"7-es2015.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubCache, InvalidActions } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription ,  Observable, combineLatest} from 'rxjs';\nimport { Location } from '@angular/common';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { FormGroup, FormArray, AbstractControl } from '@angular/forms';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { eFunctionType, eParameterDirection, DexihDatalinkColumn, DexihDatalinkTransformItem,\n  eTransformItemType, eTypeCode, DexihFunctionParameter, eErrorActionItems, eInvalidActionItems, FunctionParameter,\n  DexihDatalinkTarget } from '../../../../shared/shared.models';\nimport { CancelToken } from '../../../../+auth/auth.models';\n\n@Component({\n\n  selector: 'dexih-custom-function-edit',\n  templateUrl: './custom-function-edit.component.html'\n})\nexport class CustomFunctionEditComponent implements OnInit, OnDestroy {\n  public hubCache: HubCache;\n\n  public pageTitle: string;\n\n  public cancelToken: CancelToken = new CancelToken();\n\n  private _subscription: Subscription;\n  private _returnParameterSubscription: Subscription;\n  private _parametersSubscription: Subscription;\n  private _saveSubscription: Subscription;\n\n  eFunctionType = eFunctionType;\n  eParameterDirection = eParameterDirection;\n  functionType: eFunctionType;\n\n  eInvalidActionItems = eInvalidActionItems.filter(c => c.key > 0);\n  eErrorActionItems = eErrorActionItems.filter(c => c.key > 0);\n\n  datalinkTransformItemKey: number;\n  datalinkKey: number;\n  datalinkTransformKey: number;\n\n  datalinkForm: FormGroup;\n  datalinkTransformForm: FormGroup;\n  datalinkTransformItemForm: FormGroup;\n  returnParameterForm: FormGroup;\n\n  newDatalinkTransformItemForm: FormGroup;\n\n  parameters: FormArray;\n  inputParameters: AbstractControl[] = [];\n  outputParameters: AbstractControl[] = [];\n\n  inputParameterValues = [];\n  outputParameterValues = [];\n  returnParameterValue;\n\n\n  inputColumns: Array<DexihDatalinkColumn>;\n  outputColumns: Array<DexihDatalinkColumn>;\n  datalinkTargets: Array<DexihDatalinkTarget>;\n\n\n  constructor(\n    private hubService: HubService,\n    private authService: AuthService,\n    private editDatalinkService: DatalinkEditService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n          this.route.data,\n          this.route.params,\n          this.hubService.getHubCacheObservable(),\n          this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n          this.hubService.getRemoteLibrariesObservable()\n      ).subscribe(result => {\n        this.pageTitle = result[0]['pageTitle'];\n        this.hubCache = result[2];\n        this.datalinkForm = result[3];\n\n        this.functionType = result[1]['functionType'];\n        if (this.functionType === eFunctionType.Validate) {\n          this.datalinkTransformForm = this.editDatalinkService.getValidationTransform();\n          this.datalinkTransformKey = this.datalinkTransformForm.value.key;\n        } else {\n          this.datalinkTransformKey = +result[1]['datalinkTransformKey'];\n          this.datalinkTransformForm = this.editDatalinkService.getDatalinkTransform(this.datalinkTransformKey);\n        }\n\n        this.datalinkTransformItemKey = +result[1]['datalinkTransformItemKey'];\n\n        if (this.datalinkTransformForm) {\n          // // if this is a join transform, then the use the join columns for the input.\n          // if (this.datalinkTransformForm.value.transformType === eTransformType.Join ||\n          //   this.datalinkTransformForm.value.transformType === eTransformType.Lookup ) {\n          //   const table = this.datalinkTransformForm.controls.joinDatalinkTable.value;\n          //   if (!table) {\n          //     this.hubService.addHubErrorMessage('The join table could not be found.');\n          //     this.authService.navigateUp();\n          //   }\n          //   table.name = '(Joined) ' + table.name;\n          //   this.sourceTables = this.datalinkTransformForm.controls.runTime.value.inputColumns;\n          //   this.sourceTables.unshift(table);\n          // }  else {\n          //   this.inputColumns = this.datalinkTransformForm.controls.runTime.value.inputColumns;\n          // }\n          // this.outputColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n\n          let nodeDatalinkColumn = <DexihDatalinkColumn> this.datalinkTransformForm.controls.nodeDatalinkColumn.value;\n          let nodeDatalinkColumnKey = nodeDatalinkColumn ? nodeDatalinkColumn.key : null;\n          let io = new InputOutputColumns();\n          if (nodeDatalinkColumnKey) {\n            let inputColumns = <DexihDatalinkColumn[]> this.datalinkTransformForm.controls.runTime.value.inputColumns;\n            this.inputColumns = io.getAvailableColumns(inputColumns, nodeDatalinkColumnKey, 0);\n          } else {\n            this.inputColumns = this.datalinkTransformForm.controls.runTime.value.inputColumns;\n          }\n\n          this.outputColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n          this.datalinkTargets = this.datalinkForm.controls.dexihDatalinkTargets.value;\n\n          if (this.datalinkTransformItemKey) {\n            this.datalinkTransformItemForm = this.editDatalinkService\n              .getDatalinkTransformItem(this.datalinkTransformForm, this.datalinkTransformItemKey);\n\n              // create a copy of the form item to allow for cancel.\n              this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n                .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, this.datalinkTransformItemForm.value);\n\n            if (!this.newDatalinkTransformItemForm) {\n                this.authService.navigateUp();\n                return;\n            }\n          } else {\n\n            let newItem = new DexihDatalinkTransformItem();\n            newItem.datalinkTransformKey = this.datalinkTransformKey;\n            newItem.transformItemType = eTransformItemType.CustomFunction;\n\n            let returnParameter = new DexihFunctionParameter();\n\n            if (this.functionType === eFunctionType.Condition\n              || this.functionType === eFunctionType.JoinCondition || this.functionType === eFunctionType.Validate) {\n                returnParameter.dataType = eTypeCode.Boolean;\n            } else {\n              returnParameter.dataType = eTypeCode.String;\n            }\n            returnParameter.name = 'Return';\n            returnParameter.direction = eParameterDirection.ReturnValue;\n            returnParameter.rank = 0;\n            returnParameter.position = -1;\n            returnParameter.datalinkColumn = null;\n            returnParameter.isValid = true;\n\n            let funcParam = new FunctionParameter();\n            funcParam.name = 'Return';\n            returnParameter['runTime'] = {functionParameter: funcParam};\n\n            newItem.dexihFunctionParameters = new Array<DexihFunctionParameter>();\n            newItem.dexihFunctionParameters.push(returnParameter);\n            this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n              .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, newItem);\n          }\n\n          // this.returnParameterForm = this.editDatalinkService.hubFormsService\n          //   .datalinkFunctionParametersFormGroup(returnParameter);\n\n          // if (this._returnParameterSubscription) { this._returnParameterSubscription.unsubscribe(); }\n          // this._returnParameterSubscription = this.returnParameterForm.valueChanges.subscribe(parameter => {\n          //   this.newDatalinkTransformItemForm.controls.targetDatalinkColumn.setValue(parameter.datalinkColumn);\n          //   this.newDatalinkTransformItemForm.controls.returnType.setValue(parameter.dataType);\n          //   this.newDatalinkTransformItemForm.markAsDirty();\n          // });\n\n          this.parameters = <FormArray>this.newDatalinkTransformItemForm.controls.dexihFunctionParameters;\n\n          this.setParameters(this.parameters.controls);\n\n          if (this._parametersSubscription) { this._parametersSubscription.unsubscribe(); }\n          this._parametersSubscription = this.parameters.valueChanges.subscribe(p => {\n            this.setParameters(p);\n          });\n        }\n\n        if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n        this._saveSubscription = this.editDatalinkService.savingDatalink.subscribe(value => {\n            if(value) {\n                this.apply();\n            }\n        });\n\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Edit Custom Function');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._returnParameterSubscription) { this._returnParameterSubscription.unsubscribe(); }\n    if (this._parametersSubscription) { this._parametersSubscription.unsubscribe(); }\n    if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n    this.cancelToken.cancel();\n  }\n\n  canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      if (this.newDatalinkTransformItemForm && !this.newDatalinkTransformItemForm.pristine) {\n        this.authService.confirmDialog('Function has changed',\n        'The function has changed.  Would you like to discard the changes and return to the previous screen?'\n        ).then(confirm => {\n          resolve(confirm);\n        }).catch(reason => {\n          resolve(false);\n        });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  private setParameters(p: AbstractControl[]) {\n      this.inputParameters = this.parameters.controls.sort((a, b) => a.value.position - b.value.position)\n      .filter(c => c.value.direction === eParameterDirection.Input);\n\n      this.inputParameterValues = new Array(this.inputParameters.length);\n\n    this.outputParameters = this.parameters.controls.sort((a, b) => a.value.position - b.value.position)\n      .filter(c => c.value.direction === eParameterDirection.Output);\n\n      this.outputParameterValues = new Array(this.inputParameters.length);\n\n      this.returnParameterForm = <FormGroup> this.parameters.controls.find(c => c.value.direction === eParameterDirection.ReturnValue);\n    }\n\n  private parametersArray() {\n    return <FormArray>this.newDatalinkTransformItemForm.controls.dexihFunctionParameters;\n  }\n\n  addParameter(parameter: FormGroup, direction: eParameterDirection) {\n    try {\n      let newParameter = new DexihFunctionParameter();\n      if (parameter) {\n        let oldParameter = parameter.value;\n        newParameter.dataType = oldParameter.dataType;\n        newParameter.name = oldParameter.name;\n        newParameter.position = oldParameter.position + 1;\n      }\n\n      newParameter.name = '';\n      newParameter.datalinkColumn = null;\n      newParameter.value = null;\n      newParameter.dataType = eTypeCode.String;\n      newParameter.direction = direction;\n      newParameter.rank = 0;\n      newParameter.isValid = true;\n\n      let parameters = this.parametersArray();\n      let newParameterForm = this.editDatalinkService.hubFormsService\n        .datalinkFunctionParametersFormGroup(newParameter);\n      parameters.push(newParameterForm);\n\n      // reset the positions\n      parameters.controls.sort((a, b) => a.value.position - b.value.position).forEach((p, index) => {\n        (<FormGroup>p).controls.position.setValue(index * 10);\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Edit Custom Function, add parameter');\n    }\n\n  }\n\n  removeParameter(parameter: FormGroup) {\n    try {\n      let inputParameters = this.parametersArray();\n      let index: number = inputParameters.controls.indexOf(parameter);\n      if (index > -1) {\n        inputParameters.removeAt(index);\n      }\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Edit Custom Function, remove parameter');\n    }\n  }\n\n  newDefaultParameter(): DexihFunctionParameter {\n    try {\n      let parameter = new DexihFunctionParameter();\n      parameter.datalinkTransformItemKey = this.newDatalinkTransformItemForm.value.key;\n      parameter.dataType = eTypeCode.String;\n      parameter.rank = 0;\n      parameter.isValid = true;\n      return parameter;\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Edit Custom Function, default parameter');\n    }\n\n  }\n\n  cancel() {\n    this.authService.navigateUp();\n  }\n\n\n  apply() {\n    this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, this.newDatalinkTransformItemForm);\n    this.newDatalinkTransformItemForm.markAsPristine();\n  }\n\n  applyExit() {\n    this.apply();\n    this.authService.navigateUp();\n  }\n\n  downloadCode(parameters = null) {\n    this.hubService.downloadCustomFunction(this.newDatalinkTransformItemForm.value, parameters).catch(reason => {});\n  }\n\n  test(parameters = null) {\n    this.hubService.testCustomFunction(this.newDatalinkTransformItemForm.value, parameters, this.cancelToken).then(result => {\n      this.hubService.addHubSuccessMessage('The function has successfully compiled.');\n\n      if (result && result.length > 0) {\n        result.forEach((value, index) => {\n          if (index === 0) {\n            this.returnParameterValue = value;\n          } else {\n            this.outputParameterValues[index - 1] = value;\n          }\n        });\n      } else {\n        this.returnParameterValue = null;\n        this.outputParameterValues.forEach(c => c = null );\n      }\n    }).catch(reason => {\n      this.returnParameterValue = null;\n      this.outputParameterValues.forEach(c => c = null );\n      this.hubService.addHubMessage(reason);\n    });\n  }\n}\n\n","<div *ngIf=\"newDatalinkTransformItemForm && inputColumns && outputColumns\">\n\n\t<d-widget-section *ngIf=\"datalinkTransformForm\" title=\"Edit Custom Function\" [showExpandButton]=\"true\">\n\t\t<ng-template #header>\n\t\t\t<d-button-validate class=\"mr-1\" (click)=\"test()\" text=\"Syntax Check\"></d-button-validate>\n\t\t\t<d-button-download class=\"mr-1\" (click)=\"downloadCode()\" text=\"Download Code\"></d-button-download>\n\t\t\t<d-button-apply [disabled]=\"newDatalinkTransformItemForm.pristine\"\n\t\t\t\t(click)=\"!newDatalinkTransformItemForm.pristine && applyExit()\" class=\"mr-1\"></d-button-apply>\n\t\t\t<d-button-cancel (click)=\"cancel()\"></d-button-cancel>\n\t\t</ng-template>\n\n\t\t<form *ngIf=\"newDatalinkTransformItemForm\" [formGroup]=\"newDatalinkTransformItemForm\">\n\t\t\t<fieldset>\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section *ngIf=\"functionType != eFunctionType.Validate && functionType != eFunctionType.condition\"\n\t\t\t\t\t\tclass=\"col col-xs-4\" [ngStyle]=\"{'z-index': 305, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Action when null\" formControlName=\"onNull\" [items]=\"eErrorActionItems\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"name\" iconClass=\"fa fa-database\" [enableFilter]=\"false\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"col col-xs-4\" [ngStyle]=\"{'z-index': 304, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Action when error\" formControlName=\"onError\" [items]=\"eErrorActionItems\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"name\" iconClass=\"fa fa-database\" [enableFilter]=\"false\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section *ngIf=\"selectedFunction && selectedFunction?.returnType == 'Boolean'\" class=\"col col-xs-4\"\n\t\t\t\t\t\t[ngStyle]=\"{'z-index': 303, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-checkbox label=\"Return 'NOT' result\" formControlName=\"notCondition\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<div *ngIf=\"functionType == eFunctionType.Validate\" class=\"col col-xs-4\"\n\t\t\t\t\t\t[ngStyle]=\"{'z-index': 302, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Action when false\" formControlName=\"invalidAction\" [items]=\"eInvalidActionItems\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"name\" iconClass=\"fa fa-database\" [enableFilter]=\"false\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div class=\"label\">\n\t\t\t\t\t\tInput Parameters\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngIf=\"inputParameters.length === 0\" class=\"mb-1\">\n\t\t\t\t\t\t<d-button (click)=\"addParameter(null, eParameterDirection.Input)\"\n\t\t\t\t\t\t\ticonClass=\"fa fa-plus-square-o\" title=\"Click to add a parameter\">Add Parameter\n\t\t\t\t\t\t</d-button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngFor=\"let inputParameter of inputParameters; let i = index\" class=\"pl-2\"\n\t\t\t\t\t\t[ngStyle]=\"{'z-index': 200-i, 'position': 'relative'}\">\n\t\t\t\t\t\t<input-parameter [allowNameSelect]=\"true\" [allowDataTypeSelect]=\"true\"\n\t\t\t\t\t\t\t[inputParameterForms]=\"[inputParameter]\" [inputColumns]=\"inputColumns\"\n\t\t\t\t\t\t\t[nodeDatalinkColumnKey]=\"datalinkTransformForm.controls.nodeDatalinkColumn.value?.key\"\n\t\t\t\t\t\t\t(hasChanged)=\"parameterHasChanged($event)\" [updateParameterName]=\"true\"\n\t\t\t\t\t\t\t(addParameter)=\"addParameter($event, eParameterDirection.Input)\"\n\t\t\t\t\t\t\t(removeParameter)=\"removeParameter($event)\" [allowAdd]=\"true\" [allowRemove]=\"true\">\n\t\t\t\t\t\t</input-parameter>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div *ngIf=\"functionType != eFunctionType.Condition && functionType != eFunctionType.JoinCondition\">\n\t\t\t\t\t<div class=\"label mb-1\">\n\t\t\t\t\t\tOutput Parameters\n\t\t\t\t\t</div>\n\t\t\t\t\t<div [ngStyle]=\"{'z-index': 101, 'position': 'relative'}\">\n\t\t\t\t\t\t<output-parameter [allowNameSelect]=\"false\" [allowDataTypeSelect]=\"true\"\n\t\t\t\t\t\t\t[outputParameterForm]=\"returnParameterForm\" [outputColumns]=\"outputColumns\"  [datalinkTargets]=\"datalinkTargets\" \n\t\t\t\t\t\t\t(addParameter)=\"addParameter($event, eParameterDirection.Output)\"></output-parameter>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngIf=\"outputParameters.length === 0\">\n\t\t\t\t\t\t<d-button (click)=\"addParameter(null, eParameterDirection.Output)\"\n\t\t\t\t\t\t\ticonClass=\"fa fa-plus-square-o\" title=\"Click to add a parameter\">Add Parameter\n\t\t\t\t\t\t</d-button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngFor=\"let parameter of outputParameters; let i = index\"\n\t\t\t\t\t\t[ngStyle]=\"{'z-index': 100-i, 'position': 'relative'}\">\n\t\t\t\t\t\t<output-parameter [allowNameSelect]=\"true\" [allowDataTypeSelect]=\"true\"\n\t\t\t\t\t\t\t[outputParameterForm]=\"parameter\" [outputColumns]=\"outputColumns\"  [datalinkTargets]=\"datalinkTargets\" \n\t\t\t\t\t\t\t[updateParameterName]=\"true\"\n\t\t\t\t\t\t\t(addParameter)=\"addParameter($event, eParameterDirection.Output)\"\n\t\t\t\t\t\t\t(removeParameter)=\"removeParameter($event)\" [allowAdd]=\"true\" [allowRemove]=\"true\">\n\t\t\t\t\t\t</output-parameter>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\tFunction Code\n\t\t\t\t<textarea class='form-control' rows=\"20\" width=\"100%\" spellcheck=\"false\"\n\t\t\t\t\tformControlName=\"functionCode\"></textarea>\n\t\t\t</fieldset>\n\t\t</form>\n\t</d-widget-section>\n\n\n\n\t<d-widget-section *ngIf=\"datalinkTransformForm && newDatalinkTransformItemForm\" title=\"Test Function\"\n\t\t[showExpandButton]=\"true\">\n\t\t<ng-template #header>\n\t\t\t<button class=\"btn btn-success mr-1\" (click)=\"test()\">Syntax Check</button>\n\t\t\t<button class=\"btn btn-success mr-1\" (click)=\"test(inputParameterValues)\">Run</button>\n\t\t\t<button class=\"btn btn-success\" (click)=\"downloadCode(inputParameterValues)\">Download Code</button>\n\t\t</ng-template>\n\n\t\t<form>\n\t\t\t<div class=\"label\">\n\t\t\t\tInput Parameters\n\t\t\t</div>\n\t\t\t<div *ngFor=\"let inputParameter of inputParameters; let i = index\"\n\t\t\t\t[ngStyle]=\"{'z-index': 200-i, 'position': 'relative'}\">\n\t\t\t\t<form-input [label]=\"inputParameter.controls.name.value\" [(ngModel)]=\"inputParameterValues[i]\"\n\t\t\t\t\t[name]=\"'inputParameterValues' + i\" type=\"text\" placeholder=\"Enter a test value for the parameter\">\n\t\t\t\t</form-input>\n\t\t\t</div>\n\t\t\t<form-input label=\"Return Value\" [disabled]=\"true\" [(ngModel)]=\"returnParameterValue\"\n\t\t\t\tname=\"returnParameterValue\" type=\"text\"></form-input>\n\t\t\t<div class=\"label\" *ngIf=\"outputParameters.length > 0\">\n\t\t\t\tOutputs Parameters\n\t\t\t</div>\n\t\t\t<div *ngFor=\"let outputParameter of outputParameters; let i = index\"\n\t\t\t\t[ngStyle]=\"{'z-index': 200-i, 'position': 'relative'}\">\n\t\t\t\t<form-input [disabled]=\"true\" [label]=\"outputParameter.controls.name.value\"\n\t\t\t\t\t[(ngModel)]=\"outputParameterValues[i]\" [name]=\"'outputParameterValues' + i\" type=\"text\">\n\t\t\t\t</form-input>\n\t\t\t</div>\n\t\t</form>\n\t</d-widget-section>\n</div>","export * from './custom-function-edit.component';\n","import { Component, OnInit, OnChanges, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HubCache, deltaTypes, securityFlags, } from '../../../hub.models';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubService } from '../../../hub.service';\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\nimport { Subscription ,  combineLatest} from 'rxjs';\nimport { HubFormsService } from '../../../hub.forms.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { TypeCodes } from '../../../hub.remote.models';\nimport { eTypeCode, eParameterDirection, DexihDatalinkColumn } from '../../../../shared/shared.models';\n\n@Component({\n    selector: 'datalink-column-edit',\n    templateUrl: './datalink-column-edit.component.html',\n})\nexport class DatalinkColumnEditComponent implements OnInit, OnChanges, OnDestroy {\n    private _subscription: Subscription;\n    private _saveSubscription: Subscription;\n\n    private hubCache: HubCache;\n    public pageTitle: string;\n    public action: string;\n\n    public datalinkColumnKey: number;\n\n    public errorMessage: string;\n    public successMessage: string;\n    public savingTable: boolean;\n\n    public newColumnForm: FormGroup;\n    private sourceDatalinkTableForm: FormGroup;\n\n    eTypeCode = eTypeCode;\n    typeCodes = TypeCodes;\n    deltaTypes = deltaTypes;\n    securityFlags = securityFlags;\n\n    public columnFormService: HubFormsService;\n    private originalColumnForm: FormGroup;\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        fb: FormBuilder,\n        private route: ActivatedRoute,\n    ) {\n\n        // create a separate formService instance to manage the copied form\n        this.columnFormService = new HubFormsService(fb, hubService, authService);\n    }\n\n    ngOnInit() {\n\n        try {\n            this._subscription = combineLatest(\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                this.pageTitle = result[0]['pageTitle'];\n                this.datalinkColumnKey = + result[0]['datalinkColumnKey'];\n                this.hubCache = result[1];\n\n                this.sourceDatalinkTableForm = <FormGroup>this.editDatalinkService.hubFormsService.currentForm\n                .controls.sourceDatalinkTable;\n\n                this.initializeForm();\n            });\n\n            if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n            this._saveSubscription = this.editDatalinkService.savingDatalink.subscribe(value => {\n                if(value) {\n                    this.applyExit();\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink column edit');\n        }\n    }\n\n    ngOnChanges() {\n        if (this.hubCache) {\n            this.initializeForm();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n    }\n\n    // searches the datalink and transforms for a column\n    findColumn(): FormGroup {\n        // look for column in source table\n        let columnsArray = <FormArray>this.sourceDatalinkTableForm.controls.dexihDatalinkColumns;\n        let column = <FormGroup> columnsArray.controls.find(c => c.value.key === this.datalinkColumnKey);\n        if (column) { return column; }\n\n        // look for column as transform outputs\n        let transformForms = <FormArray>this.editDatalinkService.hubFormsService.currentForm\n            .controls.dexihDatalinkTransforms;\n\n        transformForms.controls.forEach(t => {\n            let datalinkTransformForm = <FormGroup>t\n            let items = <FormArray>datalinkTransformForm.controls.dexihDatalinkTransformItems;\n            items.controls.forEach(i => {\n                if (!column) {\n                    let itemForm = <FormGroup>i;\n                    if (itemForm.controls.targetDatalinkColumn.value &&\n                        itemForm.controls.targetDatalinkColumn.value.key === this.datalinkColumnKey) {\n                        column = <FormGroup> itemForm.controls.targetDatalinkColumn;\n                    }\n\n                    if (!column) {\n                        columnsArray = <FormArray> itemForm.controls.dexihFunctionParameters;\n                        let parameter = <FormGroup> columnsArray.controls.find(c =>\n                            HubCache.parameterIsOutput(c.value) &&\n                            c.value.datalinkColumn &&\n                            c.value.datalinkColumn.key === this.datalinkColumnKey\n                        );\n                        if (parameter) {\n                            column = <FormGroup> parameter.controls.datalinkColumn;\n                        }\n                        if (!column) {\n                            columnsArray.controls.forEach(c => {\n                                let arrayParameters = <FormArray> (<FormGroup> c).controls.arrayParameters;\n                                if (arrayParameters) {\n                                    parameter = <FormGroup> arrayParameters.controls.find(p =>\n                                        HubCache.parameterIsOutput(p.value) &&\n                                        p.value.datalinkColumn &&\n                                        p.value.datalinkColumn.key === this.datalinkColumnKey\n                                    );\n                                    if (parameter) {\n                                        column = <FormGroup> parameter.controls.datalinkColumn;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                }\n            });\n        });\n\n        return column;\n    }\n\n    initializeForm() {\n        let columnForm: FormGroup;\n\n        if (this.datalinkColumnKey) {\n            this.originalColumnForm = this.findColumn();\n            if (!this.originalColumnForm) {\n                this.authService.informationDialog('Cannot Edit', 'The selected column could not be edited.').then(() => {\n                    this.authService.navigateUp();\n                });\n\n                return;\n            }\n            columnForm = this.columnFormService.datalinkTableColumn(null, this.originalColumnForm.value);\n        } else {\n            let column = new DexihDatalinkColumn();\n            column.key = this.hubCache.getNextSequence();\n            column.datalinkTableKey = this.sourceDatalinkTableForm.controls.key.value;\n            let columnsArray = <DexihDatalinkColumn[]>this.sourceDatalinkTableForm.controls.dexihDatalinkColumns.value;\n            let maxPos = 1;\n            columnsArray.forEach(col => {\n                if (col.position > maxPos) { maxPos = col.position; }\n            })\n            column.position = maxPos + 1;\n            columnForm = this.columnFormService.datalinkTableColumn(columnsArray, column);\n        }\n        this.columnFormService.startForm(columnForm);\n    }\n\n    cancel() {\n        this.authService.navigateUp();\n    }\n\n    applyExit() {\n        const columnForm = this.columnFormService.currentForm;\n\n        // if no originalColumn, then add it to the source columns.\n        if (!this.originalColumnForm) {\n            let columnsArray = <FormArray>this.sourceDatalinkTableForm.controls.dexihDatalinkColumns;\n            columnsArray.push(columnForm);\n        } else {\n            this.originalColumnForm.setValue(columnForm.value);\n        }\n\n        this.sourceDatalinkTableForm.markAsDirty();\n        this.authService.navigateUp();\n    }\n}\n","<div *ngIf=\"columnFormService?.currentForm\">\n    <div class=\"list-group-item list-group-item-info rounded-0\">\n        <div class=\"d-flex flex-row\">\n            <h5>Edit Column </h5>\n            <div class=\"ml-auto\">\n                <dexih-invalid-form-details (click)=\"columnFormService.showErrors()\"\n                    [control]=\"columnFormService.currentForm\" class=\"mr-1\"></dexih-invalid-form-details>\n                <d-button-apply [disabled]=\"columnFormService.currentForm.pristine\"\n                    (click)=\"!columnFormService.currentForm.pristine && applyExit()\" class=\"mr-1\"></d-button-apply>\n                <d-button-cancel (click)=\"cancel()\"></d-button-cancel>\n            </div>\n        </div>\n    </div>\n\n\n    <div class=\"container  mt-3 mb-3\">\n        <column-edit-base [columnFormService]=\"columnFormService\" [detailedView]=\"true\"></column-edit-base>\n    </div>\n\n    <table-edit-columns *ngIf=\"columnFormService.currentForm.controls.dataType.value === eTypeCode.Node\"\n        [parentColumnForm]=\"columnFormService.currentForm\"></table-edit-columns>\n</div>","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable, combineLatest} from 'rxjs';\n\nexport interface CanComponentDeactivate {\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\n}\n\n@Injectable()\nexport class DatalinkEditGuard implements CanDeactivate<CanComponentDeactivate> {\n\n  canDeactivate(component: CanComponentDeactivate) {\n    return component && component.canDeactivate ? component.canDeactivate() : true;\n  }\n\n}\n","import { HostListener, Component, OnInit, OnDestroy, ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationEnd, Params } from '@angular/router';\nimport { HubService } from '../../hub.service';\nimport { DatalinkEditService } from './datalink-edit.service';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { FormGroup, FormArray, AbstractControl } from '@angular/forms';\nimport { LogFactory, eLogLevel } from '../../../../logging';\nimport { HubCache, eCacheStatus } from '../../hub.models';\nimport { DexihDatalinkTransform, eTransformWriterMethod, DexihDatalink, eDatalinkType,\n    eSourceType, eTransformType, DexihDatalinkTable } from '../../../shared/shared.models';\nimport { transformTypes } from '../../hub.remote.models';\nimport { NULL_EXPR } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n    selector: 'dexih-datalink-edit-form',\n    templateUrl: './datalink-edit.component.html',\n    styleUrls: ['./datalink-edit.component.scss']\n})\nexport class DatalinkEditComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n\n    private _subscription: Subscription;\n    private _datalinkFormSubscription: Subscription;\n    private _transformsChange: Subscription;\n    private _sourceChange: Subscription;\n    // private _datalinkTransformsSubscription: Subscription;\n\n    private hubCache: HubCache;\n\n    public savingDatalink = false;\n\n    public action: string; // new or edit\n    public pageTitle: string;\n    public params: Params;\n\n    public logger = new LogFactory('datalink-edit.component');\n    public logCount = 0;\n\n    public eSourceType = eSourceType;\n\n    public help: string;\n\n    public datalinkTransforms: {transform: AbstractControl, name: string, icon: string, invalid: boolean}[] = null;\n\n    eTransformWriterMethod = eTransformWriterMethod;\n\n    private isLoaded = false;\n\n    showPage = false;\n    showPageMessage = 'Loading datalink...';\n\n    public validationTransform;\n    public source = {};\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        public editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router) {\n    }\n\n    getHelp() {\n        let route = this.router.routerState.root.snapshot;\n        while (route.firstChild) { route = route.firstChild; }\n        this.help = route.data['help'];\n    }\n\n    ngOnInit() {\n        this.logger.LogC(() => `OnInit`, eLogLevel.Trace);\n\n        try {\n            this.router.events.subscribe(event => {\n                if (event instanceof NavigationEnd) {\n                    this.getHelp();\n                }\n            });\n\n            this.getHelp();\n\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                this.action = result[0]['action'];\n                this.pageTitle = result[0]['pageTitle'];\n                this.params = result[1];\n                this.hubCache = result[2];\n\n                if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded ) { return; }\n\n                this.editDatalinkService.init(this.hubCache);\n\n                if (this.isLoaded && this.action === 'new') { return; }\n\n                if (this.isLoaded && this.editDatalinkService.hubFormsService.hasChanged) {\n                    this.authService.confirmDialog('Datalink synchronization warning',\n                    'The hub was disconnected, meaning the datalink could have been changed by another session.  Would you like to discard the current changes, and reload the latest version of the datalink?')\n                    .then(confirm => {\n                        if (confirm) {\n                            this.load();\n                        }\n                    }).catch(() => {\n                        return;\n                    });\n                } else {\n                    this.load();\n                }\n            });\n\n            this.editDatalinkService.ngOnInit();\n\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Edit');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._datalinkFormSubscription) { this._datalinkFormSubscription.unsubscribe(); }\n        if (this._transformsChange) { this._transformsChange.unsubscribe(); }\n        if (this._sourceChange) { this._sourceChange.unsubscribe(); }\n//        if (this._datalinkTransformsSubscription) { this._datalinkTransformsSubscription.unsubscribe(); }\n\n        // shut down service\n        this.editDatalinkService.ngOnDestroy();\n    }\n\n    private load() {\n        this.logger.LogC(() => `Subscription count: ${this.logCount++}`, eLogLevel.Trace);\n\n        if (this.action === 'edit') {\n\n            // get the hub key from the route data, and update the service.\n            let datalinkKey: number = +this.params['datalinkKey'];\n            if (!datalinkKey) {\n                this.logger.LogC(() => `no datalink found.`, eLogLevel.Warning);\n\n                this.hubService.addHubErrorMessage('There was no datalink specified to edit.');\n                this.showPageMessage = 'Edit failed...';\n                this.editDatalinkService.hubFormsService.datalink(null);\n            } else {\n                let originalDatalink = this.hubCache.hub.dexihDatalinks.find(d => d.key === datalinkKey);\n\n                if (originalDatalink) {\n                    this.editDatalinkService.hubFormsService.datalink(originalDatalink);\n                    this.route.snapshot.data['pageTitle'] = 'Datalink (' + originalDatalink.name + ')';\n\n                } else {\n                    this.logger.LogC(() => `no datalink found. key: ${datalinkKey}`, eLogLevel.Warning);\n                    this.hubService.addHubErrorMessage('A datalink with the key ' +\n                        datalinkKey + ' could not be found in the repository.');\n                    this.showPageMessage = 'Edit failed...';\n                }\n            }\n\n        } else if (!this.isLoaded && this.action === 'new') {\n            let datalink = new DexihDatalink();\n            datalink.sourceDatalinkTable = new DexihDatalinkTable();\n            this.editDatalinkService.hubFormsService.datalink(datalink);\n            this.logger.LogC(() => `new datalink set.`, eLogLevel.Warning);\n        } else if (!this.isLoaded && this.action === 'copy') {\n            // get the hub key from the route data, and update the service.\n            let datalinkKey: number = +this.params['datalinkKey'];\n            if (!datalinkKey) {\n                this.logger.LogC(() => `no datalink found.`, eLogLevel.Warning);\n\n                this.hubService.addHubErrorMessage('There was no datalink specified to copy.');\n                this.showPageMessage = 'Copy failed...';\n                this.editDatalinkService.hubFormsService.datalink(null);\n            } else {\n                let originalDatalink = this.hubCache.hub.dexihDatalinks.find(d => d.key === datalinkKey);\n\n                if (originalDatalink) {\n                    let copyDatalink = this.hubCache.CopyDatalink(originalDatalink);\n                    this.editDatalinkService.hubFormsService.datalink(copyDatalink);\n                    this.editDatalinkService.hubFormsService.hasChanged = true;\n                    this.route.snapshot.data['pageTitle'] = 'Datalink (' + copyDatalink.name + ')';\n\n                } else {\n                    this.logger.LogC(() => `no datalink found. key: ${datalinkKey}`, eLogLevel.Warning);\n                    this.hubService.addHubErrorMessage('A datalink with the key ' +\n                        datalinkKey + ' could not be found in the repository.');\n                    this.showPageMessage = 'Copy failed...';\n                }\n            }\n        } else if (this.action === 'sourceTable') {\n            let datalink = new DexihDatalink();\n            datalink.datalinkType = eDatalinkType.Query;\n            datalink.sourceDatalinkTable = new DexihDatalinkTable();\n            datalink.sourceDatalinkTable.sourceType = eSourceType.Table;\n            datalink.sourceDatalinkTable.sourceTableKey = +this.params['sourceTableKey'];\n            this.editDatalinkService.reBuildDatalinkTable(datalink.sourceDatalinkTable);\n            datalink.name = 'Datalink query for ' + datalink.sourceDatalinkTable.name;\n\n            this.editDatalinkService.hubFormsService.datalink(datalink);\n            this.editDatalinkService.hubFormsService.currentForm.markAsDirty();\n            this.editDatalinkService.hubFormsService.hasChanged = true;\n\n            this.logger.LogC(() => `new source table datalink set.`, eLogLevel.Warning);\n        }\n\n        this.isLoaded = true;\n\n        \n\n        // monitor for any changes to the datalink\n        if (this._datalinkFormSubscription) { this._datalinkFormSubscription.unsubscribe(); }\n        this._datalinkFormSubscription =\n            this.editDatalinkService.hubFormsService.getCurrentFormObservable().subscribe(datalinkForm => {\n                if (!datalinkForm) { return; }\n                this.datalinkForm = datalinkForm;\n\n                this.refreshTransforms();\n\n                this.refreshSource(this.datalinkForm.controls.sourceDatalinkTable.value);\n                if (this._sourceChange) { this._sourceChange.unsubscribe(); }\n                this._sourceChange = this.datalinkForm.controls.sourceDatalinkTable.valueChanges.subscribe(source => {\n                    this.refreshSource(source);\n                });\n                \n\n                if (this._transformsChange) { this._transformsChange.unsubscribe(); }\n                this._transformsChange = this.datalinkForm.controls.dexihDatalinkTransforms.valueChanges\n                    .subscribe(() => this.refreshTransforms());\n\n                let key = datalinkForm.controls.key.value;\n                if (key) {\n                    if (history.pushState) {\n                        let newUrl = window.location.pathname.replace('/new', `/edit/${key}`)\n                        this.router.navigateByUrl(newUrl);\n                    }\n                }\n            });\n\n        this.showPage = true;\n        this.showPageMessage = '';\n    }\n\n    public canDeactivate(): Promise<boolean> {\n        return new Promise<boolean>((resolve) => {\n            if (this.editDatalinkService.hubFormsService.hasChanged) {\n                this.authService.confirmDialog('Datalink changes have not been saved',\n                    'The datalink changes have not been saved.  Do you want to discard the changes and exit?')\n                    .then(confirm => {\n                        resolve(confirm);\n                    }).catch(() => {\n                        resolve(false);\n                    });\n            } else {\n                resolve(true);\n            }\n        });\n    }\n\n    // @HostListener allows us to also guard against browser refresh, close, etc.\n    @HostListener('window:beforeunload', ['$event']) unloadNotification($event: any) {\n        if (this.editDatalinkService.hubFormsService.hasChanged) {\n            $event.returnValue = 'The datalink changes have not been saved.  Do you want to discard the changes and exit?';\n        }\n    }\n\n    enableValidation() {\n        if (!this.validationTransform) {\n            this.validationTransform = this.editDatalinkService.enableValidation();\n        }\n\n        this.router.navigate(['validation'], { relativeTo: this.route });\n    }\n\n    disableValidation() {\n        if (this.validationTransform) {\n            this.editDatalinkService.disableValidation();\n            this.validationTransform = null;\n        }\n    }\n\n    refreshSource(sourceDatalinkTable: DexihDatalinkTable) {\n        this.source = {\n            name: sourceDatalinkTable.name,\n            description: sourceDatalinkTable.description\n        };\n\n        switch(sourceDatalinkTable.sourceType) {\n            case eSourceType.Datalink:\n                this.source['icon'] = 'fa fa-exchange';\n                this.source['link'] = ['source', 'preview-table-data', 'datalink', sourceDatalinkTable.sourceDatalinkKey];\n                break;\n            case eSourceType.Table:\n                this.source['icon'] = 'fa fa-table';\n                this.source['link'] = ['source', 'preview-table-data', 'table', sourceDatalinkTable.sourceTableKey];\n                break;\n            case eSourceType.Rows:\n                this.source['icon'] = 'fa fa-bars';\n                this.source['link'] = null;\n\n        }\n    }\n\n    refreshTransforms() {\n        this.logger.LogC(() => `refreshing transforms list`, eLogLevel.Trace);\n\n        const transformsArray = <FormArray> this.datalinkForm.controls.dexihDatalinkTransforms;\n        const transforms =  transformsArray.controls\n            .filter(c => c.value.transformType !== eTransformType.Validation &&\n                c.value.transformType !== eTransformType.Profile)\n            .sort((a, b) => a.value.position - b.value.position);\n\n        const datalinkTransforms = transforms.map(transform => {\n            const type = transformTypes.find(c => c.key === transform.value.transformType);\n            let icon = '';\n            if (type) {\n                icon = type.icon\n            }\n            const name = this.hubCache.getTransformName(transform.value);\n            return {transform: transform, icon: icon, name: name, invalid: transform.invalid};\n        });\n\n        this.datalinkTransforms = datalinkTransforms;\n    }\n\n    deleteTransform(datalinkTransform: DexihDatalinkTransform) {\n        this.logger.LogC(() => `deleteTransform`, eLogLevel.Trace);\n        this.editDatalinkService.deleteDatalinkTransform(datalinkTransform).then(() => {\n            this.refreshTransforms();\n        });\n    }\n\n    previewData(datalinkTransform: DexihDatalinkTransform) {\n        this.router.navigate(['transform', datalinkTransform.key, 'preview-transform-data'], { relativeTo: this.route });\n    }\n\n    saveDatalink() {\n        this.editDatalinkService.hubFormsService.save();\n    }\n\n    cancel() {\n        this.editDatalinkService.hubFormsService.cancel();\n    }\n\n}\n","<div class=\"container-fluid\" *ngIf=\"datalinkForm && !datalinkForm.pending\">\n\t<d-widget title=\"Edit Datalink\" iconClass=\"fa fa-lg fa-fw fa-exchange\" [showCloseButton]=\"true\"\n\t\t[padding]=\"false\" (close)=\"cancel()\">\n\t\t<ng-template #header>\n\t\t\t<datalink-status class=\"d-none d-xl-inline\" [datalinkKey]='datalinkForm?.controls.key.value'>\n\t\t\t</datalink-status>\n\t\t\t<div class=\"ml-auto\">\n\t\t\t\t<d-button-dropdown class=\"mr-1\" iconClass=\"fa fa-plus\" text=\"Options\">\n\t\t\t\t\t<d-dropdown-item *ngIf=\"!validationTransform\" iconClass=\"fa fa-check-square-o\" text=\"Enable target table validation\" (click)=\"enableValidation()\"></d-dropdown-item>\n\t\t\t\t\t<d-dropdown-item  iconClass=\"fa fa-arrow-circle-right\" text=\"Add a target table.\" [routerLink]=\"['target', 'table-new']\"></d-dropdown-item>\n\t\t\t\t</d-button-dropdown>\n\t\t\t\t<datalink-save-button></datalink-save-button>\n\t\t\t</div>\n\t\t</ng-template>\n\n\t\t<div *ngIf=\"datalinkTransforms\" class=\"bg-light pt-1 pb-1 d-flex\">\n\t\t\t<ul class=\"transform-container\">\n\t\t\t\t<div class=\"d-flex m-3\">\n\t\t\t\t\t<transform-step \n\t\t\t\t\t\t[routerLinkCurrent]=\"['properties']\"\n\t\t\t\t\t\t[name]=\"'Properties'\"\n\t\t\t\t\t\t[title]=\"'Edit the properties.'\"\n\t\t\t\t\t\t[icon]=\"'fa fa-cog'\"\n\t\t\t\t\t\t[control]=\"\"\n\t\t\t\t\t\t[showDelete]=\"false\"\n\t\t\t\t\t\t[showArrow]=\"false\" >\n\t\t\t\t\t</transform-step>\n\t\t\t\t\t\n\t\t\t\t\t<transform-step \n\t\t\t\t\t\t[routerLinkAfter]=\"['new', 1]\"\n\t\t\t\t\t\t[routerLinkCurrent]=\"['source']\"\n\t\t\t\t\t\t[routerLinkPreview]=\"source.link\"\n\t\t\t\t\t\t[name]=\"source.name\"\n\t\t\t\t\t\t[title]=\"source.name + ' ' + (source.description ? source.description : '')\"\n\t\t\t\t\t\t[icon]=\"source.icon\"\n\t\t\t\t\t\t[control]=\"\"\n\t\t\t\t\t\t[showDelete]=\"false\" >\n\t\t\t\t\t</transform-step>\n\t\t\t\t\n\t\t\t\t\t<ng-template ngFor let-datalinkTransform [ngForOf]=\"datalinkTransforms\" let-isLast=\"last\" let-isFirst=\"first\">\n\t\n\t\t\t\t\t\t<transform-step \n\t\t\t\t\t\t\t[routerLinkBefore]=\"['new', datalinkTransform.transform.value.position - 1]\"\n\t\t\t\t\t\t\t[routerLinkAfter]=\"['new', datalinkTransform.transform.value.position + 1]\"\n\t\t\t\t\t\t\t[routerLinkCurrent]=\"['transform', datalinkTransform.transform.value.key]\"\n\t\t\t\t\t\t\t[routerLinkPreview]=\"['transform', datalinkTransform.transform.value.key, 'preview-transform-data']\"\n\t\t\t\t\t\t\t[name]=\"datalinkTransform.name\"\n\t\t\t\t\t\t\t[title]=\"datalinkTransform.name + ' transform.'\"\n\t\t\t\t\t\t\t[icon]=\"datalinkTransform.icon\"\n\t\t\t\t\t\t\t[control]=\"datalinkTransform.transform\"\n\t\t\t\t\t\t\t[showDelete]=\"true\"\n\t\t\t\t\t\t\t(onDelete)=\"deleteTransform(datalinkTransform.transform.value)\">\n\t\t\t\t\t\t</transform-step>\n\t\n\t\t\t\t\t</ng-template>\n\t\n\t\t\t\t\t<transform-step *ngIf=\"datalinkTransforms.length === 0\"\n\t\t\t\t\t\t[routerLinkBefore]=\"['new', 1]\"\n\t\t\t\t\t\t[routerLinkAfter]=\"['new', 1]\"\n\t\t\t\t\t\t[routerLinkCurrent]=\"['new', 1]\"\n\t\t\t\t\t\t[name]=\"'Add Transform'\"\n\t\t\t\t\t\t[title]=\"'Add new transform'\"\n\t\t\t\t\t\t[icon]=\"'fa fa-plus'\"\n\t\t\t\t\t\t[showDelete]=\"false\"\n\t\t\t\t\t></transform-step>\n\t\t\t\t\t\n\t\t\t\t\t<transform-step *ngIf=\"validationTransform\"\n\t\t\t\t\t\t[routerLinkBefore]=\"['new', datalinkTransforms.length === 0 ? 1 : datalinkTransforms[datalinkTransforms.length-1].transform.value.position+1]\"\n\t\t\t\t\t\t[routerLinkCurrent]=\"['validation']\"\n\t\t\t\t\t\t[name]=\"'Validation'\"\n\t\t\t\t\t\t[title]=\"'Validate Data'\"\n\t\t\t\t\t\t[icon]=\"'fa fa-check-square-o'\"\n\t\t\t\t\t\t[showDelete]=\"true\"\n\t\t\t\t\t\t(onDelete)=\"disableValidation()\">\n\t\t\t\t\t</transform-step>\n\t\n\t\t\t\t\t<transform-step \n\t\t\t\t\t\t[routerLinkBefore]=\"['new', datalinkTransforms.length === 0 ? 1 : datalinkTransforms[datalinkTransforms.length-1].transform.value.position+1]\"\n\t\t\t\t\t\t[routerLinkCurrent]=\"['target']\"\n\t\t\t\t\t\t[name]=\"'Target'\"\n\t\t\t\t\t\t[title]=\"'Target tables(s)'\"\n\t\t\t\t\t\t[icon]=\"'fa fa-arrow-circle-right'\"\n\t\t\t\t\t\t[control]=\"\"\n\t\t\t\t\t\t[showArrow]=\"false\"\n\t\t\t\t\t\t[showDelete]=\"false\">\n\t\t\t\t\t</transform-step>\n\t\n\t\t\t\t\t<transform-step \n\t\t\t\t\t[routerLinkCurrent]=\"['profiles']\"\n\t\t\t\t\t[name]=\"'Profiles'\"\n\t\t\t\t\t[title]=\"'Edit the profiles.'\"\n\t\t\t\t\t[icon]=\"'fa fa-bug'\"\n\t\t\t\t\t[control]=\"\"\n\t\t\t\t\t[showDelete]=\"false\"\n\t\t\t\t\t[isLast]=\"true\" >\n\t\t\t\t</transform-step>\n\t\t\t\t</div>\n\t\n\t\t\t</ul>\n\t\t</div>\n\t\n\t\t<router-outlet></router-outlet>\n\n\t</d-widget>\n\n\t<dexih-help class=\"m-3\" *ngIf=\"help\" title=\"Datalinks\" path=\"/assets/help/reference/{{help}}\"></dexih-help>\n\n</div>","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routing } from './datalink-edit.routing';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { DatalinkEditService } from './datalink-edit.service';\nimport { HubFormsService } from '../../hub.forms.service';\n\nimport { DatalinkEditComponent } from './datalink-edit.component';\nimport { DatalinkEditPropertiesComponent } from './properties/datalink-edit-properties.component';\nimport { DatalinkEditSourceTableComponent } from './source-table/datalink-edit-source-table.component';\nimport { DatalinkEditTargetTableComponent } from './target/datalink-edit-target-table.component';\nimport { DatalinkEditTargetComponent } from './target/datalink-edit-target.component';\nimport { DatalinkEditTransformComponent } from './transform/datalink-edit-transform.component';\nimport { DatalinkEditValidationComponent } from './validation/datalink-edit-validation.component';\nimport { DatalinkEditProfileRulesComponent } from './profile-rules/profile-rules.component';\nimport { DatalinkEditSaveButtonComponent } from './save-button/datalink-edit-save-button.component';\nimport { DatalinkRunPlanComponent } from './run-plan/datalink-run-plan.component';\nimport { DatalinkEditNewTransformComponent } from './new-transform/datalink-edit-new-transform.component';\nimport { StandardFunctionEditComponent }  from './standard-function-edit';\nimport { CustomFunctionEditComponent } from './custom-function-edit';\nimport { UnGroupEditComponent } from './unGroup-edit';\nimport { OutputColumnComponent, OutputColumnsComponent } from './output-columns';\nimport { JoinColumnComponent, JoinColumnsComponent } from './join-columns';\nimport { InputColumnsComponent, InputColumnComponent } from './input-columns';\nimport { MappingEditComponent } from './mapping-edit';\nimport { MappingComponent, MappingItemComponent } from './mapping';\nimport { PreviewDataComponent } from './preview-data';\nimport { PreviewTableComponent} from './preview-table';\nimport { DatalinkEditGuard } from './datalink-edit-guard';\nimport { TransformTableEditComponent } from './transform-table-edit/transform-table-edit.component';\nimport { HubSharedModule } from '../../hub.shared.module';\nimport { TargetTableColumnComponent } from './target-table-column/target-table-column.component';\nimport { TableSharedModule } from '../../table/table.shared.module';\nimport { DatalinkTableComponent } from './datalink-table/datalink-table.component'\nimport { DatalinkColumnEditComponent } from './datalink-column-edit/datalink-column-edit.component'\nimport { ResultsViewModule } from '../../results/results-view/results-view.module';\nimport { InputParameterComponent, OutputParameterComponent} from './parameters'\nimport { TargetColumnsComponent, TargetColumnComponent} from './target-columns';\nimport { DatalinkPreviewDataComponent } from '../datalink-preview-data';\nimport { TransformStepComponent} from './transform-step/transform-step.component';\n\n@NgModule({\n    imports: [\n        SharedModule,\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        Routing,\n        HubSharedModule,\n        TableSharedModule,\n        ResultsViewModule\n    ],\n    declarations: [\n        DatalinkEditComponent,\n        DatalinkEditPropertiesComponent,\n        DatalinkEditSourceTableComponent,\n        DatalinkEditTargetTableComponent,\n        DatalinkEditTargetComponent,\n        DatalinkEditTransformComponent,\n        DatalinkEditValidationComponent,\n        DatalinkEditProfileRulesComponent,\n        DatalinkRunPlanComponent,\n        StandardFunctionEditComponent,\n        CustomFunctionEditComponent,\n        OutputColumnComponent, OutputColumnsComponent,\n        JoinColumnComponent, JoinColumnsComponent,\n        InputColumnsComponent, InputColumnComponent,\n        TargetColumnsComponent, TargetColumnComponent,\n        MappingEditComponent,\n        MappingComponent, MappingItemComponent,\n        PreviewDataComponent,\n        PreviewTableComponent,\n        TransformTableEditComponent,\n        DatalinkEditSaveButtonComponent,\n        DatalinkEditNewTransformComponent,\n        TargetTableColumnComponent,\n        DatalinkTableComponent,\n        DatalinkColumnEditComponent,\n        InputParameterComponent, OutputParameterComponent,\n        UnGroupEditComponent,\n        TransformStepComponent,\n    ],\n    providers: [ DatalinkEditService, HubFormsService, DatalinkEditGuard ],\n    exports: []\n})\nexport class DatalinkEditModule {\n\n    static forRoot(): ModuleWithProviders<DatalinkEditModule> {\n        return {\n            ngModule: DatalinkEditModule,\n            providers: [ DatalinkEditService, HubFormsService ]\n        };\n    }\n}\n","import { Routes, RouterModule } from '@angular/router';\nimport { DatalinkEditPropertiesComponent } from './properties/datalink-edit-properties.component';\nimport { DatalinkEditComponent } from './datalink-edit.component';\nimport { DatalinkEditSourceTableComponent } from './source-table/datalink-edit-source-table.component';\nimport { DatalinkEditTargetComponent } from './target/datalink-edit-target.component';\nimport { DatalinkEditTransformComponent } from './transform/datalink-edit-transform.component';\nimport { DatalinkEditProfileRulesComponent } from './profile-rules/profile-rules.component';\nimport { DatalinkEditValidationComponent } from './validation/datalink-edit-validation.component';\nimport { DatalinkRunPlanComponent } from './run-plan/datalink-run-plan.component';\n\nimport { StandardFunctionEditComponent }  from './standard-function-edit';\nimport { CustomFunctionEditComponent }  from './custom-function-edit';\nimport { MappingEditComponent } from './mapping-edit';\nimport { DatalinkEditGuard } from './datalink-edit-guard';\nimport { PreviewDataComponent } from './preview-data';\nimport { PreviewTableComponent} from './preview-table';\nimport { TransformTableEditComponent } from './transform-table-edit/transform-table-edit.component';\nimport { DatalinkEditNewTransformComponent } from './new-transform/datalink-edit-new-transform.component';\nimport { TargetTableColumnComponent } from './target-table-column/target-table-column.component';\nimport { DatalinkColumnEditComponent } from './datalink-column-edit/datalink-column-edit.component'\nimport { ResultsIndexComponent, ResultsViewComponent } from '../../results';\nimport { UnGroupEditComponent } from './unGroup-edit';\nimport { DatalinkEditTargetTableComponent } from './target/datalink-edit-target-table.component';\n\nexport const standardFunctionRoutes: Routes = [\n    {path: '', canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent, data: { pageTitle: 'Standard Function' }},\n    {path: ':functionType', canDeactivate: [DatalinkEditGuard],\n        component: StandardFunctionEditComponent, data: { pageTitle: 'Standard Function' }},\n    {path: ':functionType/:datalinkTransformItemKey',\n        canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent, data: { pageTitle: 'Standard Function' }},\n//    {path: 'edit-column/:columnKey', component: TableColumnEditComponent, data: { pageTitle: 'Edit Column', action: 'edit'}}\n]\n\nexport const customFunctionRoutes: Routes = [\n    {path: '', canDeactivate: [DatalinkEditGuard], component: CustomFunctionEditComponent, data: { pageTitle: 'Custom Function' }},\n//    {path: 'edit-column/:columnKey', component: TableColumnEditComponent, data: { pageTitle: 'Edit Column', action: 'edit'}}\n]\n\nexport const mappingEditRoutes: Routes = [\n    {path: '', canDeactivate: [DatalinkEditGuard], component: MappingEditComponent, data: { pageTitle: 'Mapping' }},\n//    {path: 'edit-column/:columnKey', component: TableColumnEditComponent, data: { pageTitle: 'Edit Column', action: 'edit'}}\n]\n\nexport const sourceTableRoutes: Routes = [\n    { path: '', pathMatch: 'full', component: DatalinkEditSourceTableComponent},\n    { path: 'preview-table-data/table/:tableKey', component: PreviewTableComponent,\n        data: { pageTitle: 'Preview Table', action: 'preview'} },\n    { path: 'preview-table-data/datalink/:datalinkKey', component: PreviewTableComponent,\n        data: { pageTitle: 'Preview Datalink', action: 'preview'} },\n    { path: 'column/:datalinkColumnKey', component: DatalinkColumnEditComponent,\n        data: { pageTitle: 'Edit Column', action: 'edit'} },\n    { path: 'newcolumn', component: DatalinkColumnEditComponent,\n        data: { pageTitle: 'New Column', action: 'new'} },\n    { path: 'table-edit/:tableKey', data: { pageTitle: 'Edit Table', action: 'edit'},\n            loadChildren: () => import('../../table/table-edit/table-edit.module').then(m => m.TableEditModule)},\n];\n\nexport const targetRoutes: Routes = [\n    { path: '', pathMatch: 'full', component: DatalinkEditTargetComponent},\n    { path: 'table-edit/:targetKey', data: { pageTitle: 'Edit Target Table', action: 'edit'}, children: [\n        { path: '', pathMatch: 'full', canDeactivate: [DatalinkEditGuard], component: DatalinkEditTargetTableComponent },\n        { path: 'preview-table-data/:tableKey', component: PreviewTableComponent,\n            data: { pageTitle: 'Preview Table', action: 'preview'} },\n        ]},\n    { path: 'table-new', data: { pageTitle: 'New Target Table', action: 'new'}, children: [\n        { path: '', pathMatch: 'full', canDeactivate: [DatalinkEditGuard], component: DatalinkEditTargetTableComponent },\n        { path: 'preview-table-data/:tableKey', component: PreviewTableComponent,\n            data: { pageTitle: 'Preview Table', action: 'preview'} },\n        ]},\n];\n\nexport const validationRoutes: Routes = [\n    {path: '', pathMatch: 'full', component: DatalinkEditValidationComponent, data: { pageTitle: 'Validation' } },\n    { path: 'standard-function-edit', data: { pageTitle: 'Standard Function' },\n        canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent },\n    { path: 'standard-function-edit/:functionType', data: { pageTitle: 'Standard Function' },\n        canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent },\n    { path: 'standard-function-edit/:functionType/:datalinkTransformItemKey', data: { pageTitle: 'Standard Function' },\n        canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent },\n    { path: 'custom-function-edit', data: { pageTitle: 'Custom Function' },\n        canDeactivate: [DatalinkEditGuard], component: CustomFunctionEditComponent },\n    { path: 'custom-function-edit/:functionType', data: { pageTitle: 'Custom Function' },\n        canDeactivate: [DatalinkEditGuard], component: CustomFunctionEditComponent },\n    { path: 'column/:datalinkColumnKey', component: DatalinkColumnEditComponent,\n        data: { pageTitle: 'Edit Column', action: 'edit'} },\n];\n\nexport const datalinkEditRoutes: Routes = [\n    { path: '', redirectTo: 'properties'},\n\n    { path: 'properties', component: DatalinkEditPropertiesComponent, data: { pageTitle: 'Properties', help: 'datalink.md' } },\n    { path: 'source', data: { pageTitle: 'Source'}, children: sourceTableRoutes },\n    { path: 'target', data: { pageTitle: 'Target'}, children: targetRoutes },\n    { path: 'validation', data: { pageTitle: 'Validation' }, children: validationRoutes},\n    { path: 'profiles', component: DatalinkEditProfileRulesComponent, data: { pageTitle: 'Profile Rules' } },\n    { path: 'new/:position', component: DatalinkEditNewTransformComponent, data: {pageTitle: 'New Transform'}},\n    { path: 'transform/:datalinkTransformKey', data: { pageTitle: 'Transform' } , children: [\n        { path: '', pathMatch: 'full', component: DatalinkEditTransformComponent },\n        { path: 'table-edit/:tableKey', data: { pageTitle: 'Edit Table', action: 'edit'},\n                loadChildren: () => import('../../table/table-edit/table-edit.module').then(m => m.TableEditModule)},\n        { path: 'standard-function-edit', data: { pageTitle: 'Standard Function' },\n            canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent },\n        { path: 'standard-function-edit/:functionType', data: { pageTitle: 'Standard Function' },\n            canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent },\n        { path: 'standard-function-edit/:functionType/:datalinkTransformItemKey', data: { pageTitle: 'Standard Function' },\n            canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent },\n        { path: 'custom-function-edit', data: { pageTitle: 'Custom Function', help: 'function.md' },\n            canDeactivate: [DatalinkEditGuard], component: CustomFunctionEditComponent },\n        { path: 'custom-function-edit/:functionType', data: { pageTitle: 'Custom Function', help: 'function.md' },\n            canDeactivate: [DatalinkEditGuard], component: CustomFunctionEditComponent },\n        { path: 'custom-function-edit/:functionType/:datalinkTransformItemKey',\n            data: { pageTitle: 'Custom Function', help: 'function.md' },\n            canDeactivate: [DatalinkEditGuard], component: CustomFunctionEditComponent },\n        { path: 'mapping-edit/:type', data: { pageTitle: 'Mapping Edit' },\n            component: MappingEditComponent },\n        { path: 'mapping-edit/:type/:datalinkTransformItemKey', data: { pageTitle: 'Mapping Edit' },\n            component: MappingEditComponent },\n        { path: 'unGroup-edit', data: { pageTitle: 'Un-Group Edit' },\n            component: UnGroupEditComponent },\n        { path: 'unGroup-edit/:datalinkTransformItemKey', data: { pageTitle: 'Un-Group Edit' },\n            component: UnGroupEditComponent },\n        { path: 'preview-transform-data', data: { pageTitle: 'Preview Data' },\n            component: PreviewDataComponent },\n        { path: 'transform-table-edit', data: { pageTitle: 'Transform Table Edit' },\n            component: TransformTableEditComponent },\n        { path: 'column/:datalinkColumnKey', component: DatalinkColumnEditComponent,\n            data: { pageTitle: 'Edit Column', action: 'edit'} },\n    ] },\n\n    { path: 'run-plan', component: DatalinkRunPlanComponent, data: { pageTitle: 'Run Plan' } },\n    { path: 'result-view/:auditConnectionKey/:auditKey', component: ResultsViewComponent, data: { pageTitle: 'Detailed Result' } }\n];\n\nexport const routes: Routes = [\n        { path: 'new', component: DatalinkEditComponent, canDeactivate: [DatalinkEditGuard],\n            data: { action: 'new', navigateSkip: true, pageTitle: 'New Datalink' }, children: datalinkEditRoutes},\n        { path: 'edit/:datalinkKey', component: DatalinkEditComponent, canDeactivate: [DatalinkEditGuard],\n            data: { action: 'edit', navigateSkip: true, pageTitle: 'Edit Datalink' }, children: datalinkEditRoutes},\n        { path: 'copy/:datalinkKey', component: DatalinkEditComponent, canDeactivate: [DatalinkEditGuard],\n            data: { action: 'copy', navigateSkip: true, pageTitle: 'Copy Datalink' }, children: datalinkEditRoutes},\n        { path: 'sourceTable/:sourceTableKey', component: DatalinkEditComponent, canDeactivate: [DatalinkEditGuard],\n            data: { action: 'sourceTable', navigateSkip: true, pageTitle: 'Edit Datalink' }, children: datalinkEditRoutes}\n];\n\nexport const Routing = RouterModule.forChild(routes);\n","import { Injectable, OnDestroy, OnInit } from '@angular/core';\nimport { FormArray, FormGroup } from '@angular/forms';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { eLogLevel, LogFactory } from '../../../../logging';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { InputOutputColumns } from '../../hub.lineage.models';\nimport { HubService } from '../../hub.service';\nimport { TransformReference } from '../../hub.remote.models';\nimport { CancelToken } from '../../../+auth/auth.models';\nimport { HubCache } from '../../hub.models';\nimport { eTransformType, DexihDatalinkColumn, eParameterDirection, eTypeCode, DexihDatalinkTransformItem,\n    DexihDatalinkTransform, DexihDatalinkTable, eTransformItemType, eSourceType, eFunctionType, RemoteLibraries } from '../../../shared/shared.models';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n// contains shared objects used to edit the datalink.\n\n@Injectable()\nexport class DatalinkEditService implements OnInit, OnDestroy {\n\n    private _hubCache: HubCache;\n\n    public showAllErrors = false;\n\n    public datalinkKey: number;\n\n    public logger = new LogFactory('datalink-edit.service');\n\n    public remoteLibraries: RemoteLibraries;\n\n    // used to stop save occurring when changing functions and target ables.\n    savingDatalink = new BehaviorSubject(false);\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        public hubFormsService: HubFormsService) {\n    }\n\n    ngOnInit() {\n    }\n\n    public init(hubCache: HubCache) {\n        this._hubCache = hubCache;\n\n        this.hubService.getRemoteLibrariesPromise().then(remoteLibraries => this.remoteLibraries = remoteLibraries)\n    }\n\n    ngOnDestroy() {\n        this.hubFormsService.ngOnDestroy();\n    }\n\n    savingDataLinkObservable(): Observable<boolean> {\n        return this.savingDatalink.asObservable();\n    }\n\n    getValidationTransform(): FormGroup {\n        this.logger.LogC(() => `getValidationTransform`, eLogLevel.Trace);\n\n        let datalinkForm = this.hubFormsService.currentForm;\n        let datalinkTransforms = <FormArray>datalinkForm.controls['dexihDatalinkTransforms'];\n        let datalinkTransform = <FormGroup>datalinkTransforms.controls\n            .find(c => c.value.transformType === eTransformType.Validation);\n\n        return datalinkTransform;\n    }\n    \n    enableValidation(): FormGroup {\n        let transform = this.getValidationTransform();\n        if (!transform) {\n            let transform = this.remoteLibraries.transforms.find(c => c.transformType === eTransformType.Validation);\n            return this.insertDatalinkTransform(1, transform);\n        }\n\n        return transform;\n    }\n\n    disableValidation() {\n        let transform = this.getValidationTransform();\n        if (transform) {\n            this.deleteDatalinkTransform(transform.value);\n        }\n    }\n\n    getDatalinkTransform(datalinkTransformKey: number): FormGroup {\n        this.logger.LogC(() => `getDatalinkTransform`, eLogLevel.Trace);\n\n        let datalinkForm = this.hubFormsService.currentForm;\n        let datalinkTransforms = <FormArray>datalinkForm.controls['dexihDatalinkTransforms'];\n\n        let datalinkTransform = <FormGroup>datalinkTransforms.controls\n            .find(c => c.value.key === datalinkTransformKey);\n\n        return datalinkTransform;\n    }\n\n    getDatalinkTransformItem(datalinkTransformForm: FormGroup, datalinkTransformItemKey: number): FormGroup {\n        this.logger.LogC(() => `getDatalinkTransformItem, key:${datalinkTransformItemKey}.`, eLogLevel.Trace);\n\n        let datalinkTransformItems = <FormArray>datalinkTransformForm.controls['dexihDatalinkTransformItems'];\n        let datalinkTransformItem = <FormGroup>datalinkTransformItems.controls\n            .find(c => c.value.key === datalinkTransformItemKey);\n\n        this.logger.LogC(() => `getDatalinkTransformItem finished.`, eLogLevel.Trace);\n\n        return datalinkTransformItem;\n    }\n\n     // fixes the key mappings when a transform is removed or columns are refreshed\n     fixMappings(datalinkForm: FormGroup) {\n        let io = new InputOutputColumns();\n        let datalinkTransforms = <FormArray> datalinkForm.controls.dexihDatalinkTransforms;\n        datalinkTransforms.controls.forEach((datalinkTransformForm: FormGroup) => {\n            let inputColumns = <DexihDatalinkColumn[]> datalinkTransformForm.controls.runTime.value.inputColumns;\n            let joinColumns = null;\n            if (datalinkTransformForm.value.joinDatalinkTable) {\n                joinColumns = datalinkTransformForm.value.joinDatalinkTable.dexihDatalinkColumns;\n            }\n\n            let nodeColumns = this.getNodeColumns(inputColumns);\n\n            this.fixMapping(nodeColumns, <FormGroup> datalinkTransformForm.controls.nodeDatalinkColumn);\n            this.fixMapping(joinColumns, <FormGroup> datalinkTransformForm.controls.joinSortDatalinkColumn);\n\n            // set the inputcolumns to the current node level.\n            if (datalinkTransformForm.controls.nodeDatalinkColumn.value) {\n                inputColumns = io.getAvailableColumns(inputColumns, datalinkTransformForm.controls.nodeDatalinkColumn.value.key , 0)\n            }\n\n            let items = <FormArray> datalinkTransformForm.controls.dexihDatalinkTransformItems;\n            items.controls.forEach((item: FormGroup) => {\n                this.fixMapping(inputColumns, <FormGroup> item.controls.sourceDatalinkColumn);\n                this.fixMapping(joinColumns, <FormGroup> item.controls.joinDatalinkColumn);\n                this.fixMapping(inputColumns, <FormGroup> item.controls.filterDatalinkColumn);\n\n                let parameters = <FormArray> item.controls.dexihFunctionParameters;\n                parameters.controls.forEach((parameter: FormGroup) => {\n                    switch (parameter.controls.direction.value) {\n                        case eParameterDirection.Input:\n                            this.fixMapping(inputColumns, <FormGroup> parameter.controls.datalinkColumn);\n                            break;\n                        case eParameterDirection.Join:\n                            this.fixMapping(joinColumns, <FormGroup> parameter.controls.datalinkColumn);\n                            break;\n                    }\n\n                    let arrayParameters = <FormArray> parameter.controls.arrayParameters;\n                    arrayParameters.controls.forEach((arrayParameter: FormGroup) => {\n                        switch (arrayParameter.controls.direction.value) {\n                            case eParameterDirection.Input:\n                                this.fixMapping(inputColumns, <FormGroup> arrayParameter.controls.datalinkColumn);\n                                break;\n                            case eParameterDirection.Join:\n                                this.fixMapping(joinColumns, <FormGroup> arrayParameter.controls.datalinkColumn);\n                                break;\n                        }\n                    });\n                });\n            });\n        });\n    }\n\n    private getNodeColumns(columns: DexihDatalinkColumn[]): DexihDatalinkColumn[] {\n        let nodes: DexihDatalinkColumn[] = [];\n        if (columns) {\n            columns.filter(c => c.dataType === eTypeCode.Node && c.isValid).forEach(col => {\n                nodes.push(col);\n                if (col.childColumns && col.childColumns.length > 0) {\n                    nodes = nodes.concat(this.getNodeColumns(col.childColumns));\n                }\n            });\n        }\n\n        return nodes;\n    }\n\n    private fixMapping(inputColumns: DexihDatalinkColumn[], columnForm: FormGroup) {\n        let column  = <DexihDatalinkColumn> columnForm.value;\n        if (!inputColumns || !column) { return; }\n\n        if (inputColumns.findIndex(c => c.key === column.key) < 0) {\n            let inputColumn = inputColumns\n                .find(c => c.name === column.name && c.columnGroup === column.columnGroup);\n            if (!inputColumn) {\n                inputColumn = inputColumns.find(c => c.name === column.name);\n            }\n\n            if (inputColumn) {\n                columnForm.setValue(inputColumn);\n            }\n        }\n    }\n\n    public getFunctionType(datalinkTransform: DexihDatalinkTransform): eFunctionType {\n        let functionType: eFunctionType;\n        switch (datalinkTransform.transformType) {\n            case eTransformType.Filter:\n                functionType = eFunctionType.Condition;\n                break;\n            case eTransformType.Mapping:\n                functionType = eFunctionType.Map;\n                break;\n            case eTransformType.Join:\n                functionType = eFunctionType.JoinCondition;\n                break;\n            case eTransformType.Group:\n            case eTransformType.Aggregate:\n                functionType = eFunctionType.Aggregate;\n                break;\n            case eTransformType.Series:\n                functionType = eFunctionType.Series;\n                break;\n            case eTransformType.Sort:\n                functionType = eFunctionType.Sort;\n                break;\n            case eTransformType.Validation:\n                functionType = eFunctionType.Validate;\n                break;\n            case eTransformType.Rows:\n                functionType = eFunctionType.Rows;\n                break;\n            case eTransformType.Lookup:\n                functionType = eFunctionType.JoinCondition;\n                break;\n            case eTransformType.Delta:\n                break;\n        }\n\n        return functionType;\n    }\n\n    public getVariables(): string[] {\n        let variables = this.hubFormsService.currentForm.controls.parameters.value.map(c => '{' + c.name + '}')\n        .concat(this._hubCache.hub.dexihHubVariables.map(c => '{' + c.name + '}'));\n\n        return variables;\n    }\n\n    public getColumnGroups(columns: DexihDatalinkColumn[]): Array<{ group: string, columns: Array<DexihDatalinkColumn> }> {\n        let previousGroup: string = null;\n\n        let columnGroups: Array<{ group: string, columns: Array<DexihDatalinkColumn> }> = [];\n        let cols: Array<DexihDatalinkColumn> = null;\n\n        columns\n            .filter(c => c.isValid)\n            .sort((a, b) => a.position - b.position)\n            .forEach(column => {\n                let group = column.columnGroup ? column.columnGroup : '(un-grouped)';\n                if (group !== previousGroup) {\n                    if (cols) {\n                        columnGroups.push({ group: previousGroup, columns: cols });\n                    }\n                    previousGroup = group;\n                    cols = [];\n                }\n                cols.push(column);\n            });\n\n        if (cols && cols.length > 0) {\n            columnGroups.push({ group: previousGroup, columns: cols });\n        }\n\n        return columnGroups;\n    }\n\n    insertDatalinkTransformItem(datalinkTransformForm: FormGroup, datalinkTransformItemForm: FormGroup): DexihDatalinkTransformItem {\n        this.logger.LogC(() => `insertDatalinkTransformItem`, eLogLevel.Trace);\n\n        let datalinkTransformItem = <DexihDatalinkTransformItem> datalinkTransformItemForm.value;\n\n        let datalinkTransformItemsArray = (<FormArray>datalinkTransformForm.controls['dexihDatalinkTransformItems']);\n        // use temporary negative keys for items which have not been saved.\n        if (!datalinkTransformItem.key) {\n            datalinkTransformItem.key = this._hubCache.getNextSequence();\n            if (datalinkTransformItemsArray.controls.length === 0) {\n                datalinkTransformItem.position = 1;\n            } else {\n                datalinkTransformItem.position = Math.max.apply(Math, datalinkTransformItemsArray.controls.map(o => o.value.position)) + 1;\n            }\n            let form = this.hubFormsService.datalinkDatalinkTransformItemFormGroup(datalinkTransformForm, datalinkTransformItem);\n            datalinkTransformItemsArray.push(form);\n        } else {\n            // existing item? lookup previous item and copy the updated values across.\n            let currentIndex = datalinkTransformItemsArray.controls\n                .findIndex(c => c.value['key'] === datalinkTransformItem.key);\n            datalinkTransformItemsArray.removeAt(currentIndex);\n\n            let form = this.hubFormsService.datalinkDatalinkTransformItemFormGroup(datalinkTransformForm, datalinkTransformItem);\n            datalinkTransformItemsArray.push(form);\n        }\n\n        this.fixMappings(this.hubFormsService.currentForm);\n\n        this.logger.LogC(() => `insertDatalinkTransformItem finished`, eLogLevel.Trace);\n\n        return datalinkTransformItem;\n    }\n\n    deleteDatalinkTransformItem(datalinkTransformForm: FormGroup, datalinkTransformItemForm: FormGroup) {\n        this.logger.LogC(() => `deleteDatalinkTransformItem`, eLogLevel.Trace);\n\n        let datalinkTransformItems = <FormArray>datalinkTransformForm.controls['dexihDatalinkTransformItems'];\n        let index = datalinkTransformItems.controls.indexOf(datalinkTransformItemForm);\n        datalinkTransformItems.removeAt(index);\n\n        this.fixMappings(this.hubFormsService.currentForm);\n    }\n\n    deleteDatalinkTarget(datalinkForm: FormGroup, datalinkTargetKey: Number) {\n        this.logger.LogC(() => `deleteDatalinkTarget`, eLogLevel.Trace);\n\n        let datalinkTargets = <FormArray>datalinkForm.controls['dexihDatalinkTargets'];\n        let index = datalinkTargets.controls.findIndex(c => c.value.key === datalinkTargetKey);\n        if (index >= 0) {\n            datalinkTargets.removeAt(index);\n        }\n    }\n\n    insertDatalinkTransform(position: number, transform: TransformReference): FormGroup {\n        this.logger.LogC(() => `insertDatalinkTransform`, eLogLevel.Trace);\n\n        let datalinkForm = this.hubFormsService.currentForm;\n        let datalinkTransforms = <FormArray>datalinkForm.controls['dexihDatalinkTransforms'];\n\n        let newDatalinkTransform = new DexihDatalinkTransform();\n\n        // use temporary negative keys for datalink transforms which have not been saved.\n        let minKey = -1;\n        datalinkTransforms.controls.forEach(dt => {\n            if (dt.value['key'] <= minKey) {\n                minKey = dt.value['key'] - 1;\n            }\n        });\n\n        this.logger.LogC(() => `insertDatalinkTransform key:${minKey}`, eLogLevel.Trace);\n\n        newDatalinkTransform.key = minKey;\n        newDatalinkTransform.transformType = transform.transformType;\n        newDatalinkTransform.transformAssemblyName = transform.transformAssemblyName;\n        newDatalinkTransform.transformClassName = transform.transformClassName;\n        // newDatalinkTransform.name = transform.name;\n        // newDatalinkTransform.description = transform.description;\n        newDatalinkTransform.dexihDatalinkTransformItems = new Array<DexihDatalinkTransformItem>();\n        newDatalinkTransform.isValid = true;\n\n        // default pass-through columns off for map, group, and row transforms.\n        switch (transform.transformType) {\n            case eTransformType.Group:\n            case eTransformType.Rows:\n            case eTransformType.Mapping:\n                newDatalinkTransform.passThroughColumns = false;\n                break;\n            default:\n                newDatalinkTransform.passThroughColumns = true;\n        }\n\n        if (transform.transformType === eTransformType.Join\n            || transform.transformType === eTransformType.Lookup || transform.transformType === eTransformType.Concatenate) {\n            newDatalinkTransform.joinDatalinkTable = new DexihDatalinkTable();\n            newDatalinkTransform.joinDatalinkTable.key = this._hubCache.getNextSequence();\n        }\n\n        if (transform.transformType === eTransformType.Series) {\n            let seriesItem = new DexihDatalinkTransformItem();\n            seriesItem.transformItemType = eTransformItemType.Series;\n            seriesItem.position = 0;\n            seriesItem.isValid = true;\n            newDatalinkTransform.dexihDatalinkTransformItems.push(seriesItem);\n        }\n\n        newDatalinkTransform.position = position;\n\n        let datalinkTransformForm = this.hubFormsService.datalinkTransformFormGroup(newDatalinkTransform);\n        datalinkTransforms.push(datalinkTransformForm);\n\n        this.resetDatalinkTransformPositions();\n\n        this.logger.LogC(() => `insertDatalinkTransform finished.`, eLogLevel.Trace);\n\n        return datalinkTransformForm;\n    }\n\n    deleteDatalinkTransform(datalinkTransform: DexihDatalinkTransform): Promise<boolean> {\n        return new Promise<boolean>((resolve) => {\n            this.authService.confirmDialog('Delete Transform',\n                `Are you sure you would like to remove the transform ${datalinkTransform.name}?`)\n                .then(confirm => {\n                    if (confirm) {\n                        let datalinkForm = this.hubFormsService.currentForm;\n                        let datalinkTransforms = <FormArray>datalinkForm.controls['dexihDatalinkTransforms'];\n                        let index = datalinkTransforms.controls\n                            .findIndex(c => c.value.key === datalinkTransform.key);\n                        datalinkTransforms.removeAt(index);\n                        this.resetDatalinkTransformPositions();\n                    }\n                    resolve(confirm);\n                }).catch(() => {\n                    resolve(false);\n                });\n        });\n    }\n\n    async resetDatalinkTransformPositions() {\n        const datalinkForm = this.hubFormsService.currentForm;\n        const datalinkTransforms = <FormArray>datalinkForm.controls.dexihDatalinkTransforms;\n\n        let userConfigTransforms = await this.hubService.GetUserConfigTransformReference();\n\n        let position = 10;\n        datalinkTransforms.controls.sort((a, b) => a.value.position - b.value.position).forEach(datalinkTransform => {\n            const dt = <FormGroup>datalinkTransform;\n\n            let transformReference = userConfigTransforms.find(e => e.transformClassName === datalinkTransform.value.transformClassName);\n\n            // if the transform is a validation/delta, then position at the end.\n            if (transformReference) {\n                dt.controls.position.setValue(position);\n                position += 10;\n            } else {\n                dt.controls.position.setValue(1000000);\n            }\n        });\n    }\n\n    importFunctionMappings(datalinkTransformKey: number, item: DexihDatalinkTransformItem, cancelToken: CancelToken):\n        Promise<string[]> {\n\n        let datalink = this.hubFormsService.getDatalinkValue();\n        const cache = this._hubCache;\n\n        return this.hubService.hubPostRemote<string[]>('/api/Hub/ImportFunctionMappings', {\n            hubKey: cache.hub.hubKey,\n            remoteAgentId: this.hubService.getCurrentRemoteAgentId(),\n            datalink: datalink,\n            datalinkTransformKey: datalinkTransformKey,\n            datalinkTransformItem: item\n        }, 'Importing function mappings...', cancelToken);\n    }\n\n    reBuildDatalinkTable(datalinkTable: DexihDatalinkTable, confirm = false) {\n        if (confirm) {\n            // tslint:disable-next-line:max-line-length\n            this.authService.confirmDialog('Rebuild Columns?', `This action will load the selected table columns, and replace or delete any existing columns.  This may require fixing some mappings.  Do you want to proceed?`)\n                .then((confirm2) => {\n                    if (confirm2) {\n                    this.doRebuildDatalinkTable(datalinkTable)\n                    }\n                }).catch();\n        } else {\n            this.doRebuildDatalinkTable(datalinkTable);\n        }\n    }\n\n    private doRebuildDatalinkTable(datalinkTable: DexihDatalinkTable) {\n\n        datalinkTable.dexihDatalinkColumns.forEach(datalinkColumn => datalinkColumn.isValid = false);\n\n        switch (datalinkTable.sourceType) {\n            case eSourceType.Table:\n                let sourceTable = this._hubCache.getTable(datalinkTable.sourceTableKey);\n                if (sourceTable) {\n                    datalinkTable.name = sourceTable.name;\n\n                    datalinkTable.dexihDatalinkColumns = this.mergeDatalinkColumns(\n                        datalinkTable.name, datalinkTable.key,\n                        sourceTable.dexihTableColumns, datalinkTable.dexihDatalinkColumns);\n\n                }\n                break;\n            case eSourceType.Datalink:\n                let datalink = this._hubCache.hub.dexihDatalinks.find(c => c.key === datalinkTable.sourceDatalinkKey);\n                if (datalink) {\n                    datalinkTable.name = datalink.name;\n\n                    let io = new InputOutputColumns();\n                    // const datalinkColumns = io.getInputColumns(this._hubCache, datalink, null, []);\n                    io.buildInputOutput(this._hubCache, datalink);\n\n                    let datalinkColumns: DexihDatalinkColumn[];\n\n                    if (datalink.dexihDatalinkTransforms.length === 0) {\n                        datalinkColumns = datalink.sourceDatalinkTable.dexihDatalinkColumns;\n                    } else {\n                        let transforms = datalink.dexihDatalinkTransforms.sort((a, b) => a.position - b.position);\n                        let transform = transforms[transforms.length - 1];\n                        datalinkColumns = transform['runTime'].outputColumns;\n                    }\n\n                    datalinkTable.dexihDatalinkColumns = this.mergeDatalinkColumns(\n                        datalinkTable.name, datalinkTable.key,\n                        datalinkColumns, datalinkTable.dexihDatalinkColumns);\n                }\n                break;\n            case eSourceType.Rows:\n                datalinkTable.name = 'Static Row Set';\n\n                let rowDatalinkColumn = datalinkTable.dexihDatalinkColumns.find(c => c.name === 'RowNumber');\n                if (!rowDatalinkColumn) {\n                    rowDatalinkColumn = new DexihDatalinkColumn();\n                    rowDatalinkColumn.key = this._hubCache.getNextSequence();\n                    rowDatalinkColumn.datalinkTableKey = datalinkTable.key;\n                    datalinkTable.dexihDatalinkColumns.push(rowDatalinkColumn);\n                }\n\n                rowDatalinkColumn.name = 'RowNumber';\n                rowDatalinkColumn.logicalName = rowDatalinkColumn.name;\n                rowDatalinkColumn.dataType = eTypeCode.Int32;\n                rowDatalinkColumn.isMandatory = true;\n                rowDatalinkColumn.isValid = true;\n                rowDatalinkColumn.description = 'The generated row number of the static row set';\n\n                break;\n        }\n    }\n\n    private mergeDatalinkColumns(groupName: string, datalinkTableKey: number,\n            newColumns: any, existingColumns: DexihDatalinkColumn[]): DexihDatalinkColumn[] {\n        newColumns.forEach(column => {\n            let datalinkColumn = existingColumns.find(c => c.name === column.name && c.columnGroup === groupName);\n            if (!datalinkColumn) {\n                datalinkColumn = existingColumns.find(c => c.name === column.name);\n            }\n            if (!datalinkColumn) {\n                datalinkColumn = new DexihDatalinkColumn();\n                datalinkColumn.key = this._hubCache.getNextSequence();\n                datalinkColumn.datalinkTableKey = datalinkTableKey;\n                existingColumns.push(datalinkColumn);\n            }\n\n            Object.keys(datalinkColumn).forEach(key => {\n                if (key === 'childColumns') {\n                    if (column[key] && column[key].length > 0) {\n                        datalinkColumn[key] = this.mergeDatalinkColumns(groupName, datalinkTableKey, column[key], datalinkColumn[key]);\n                    } else {\n                        datalinkColumn[key] = [];\n                    }\n                } else if (key !== 'key' && column[key]) {\n                    datalinkColumn[key] = column[key];\n                } else if (key === 'columnGroup') {\n                    if (groupName) {\n                        if (datalinkColumn[key] && datalinkColumn[key] !== groupName) {\n                            datalinkColumn[key] = groupName + '.' + datalinkColumn[key];\n                        } else {\n                            datalinkColumn[key] = groupName;\n                        }\n                    }\n                }\n            });\n        });\n\n        return existingColumns;\n    }\n\n}\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubCache, sourceTypes, ConnectionTables } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { Subscription, combineLatest, merge} from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { eSourceType, DexihDatalink, DexihDatalinkTable } from '../../../../shared/shared.models';\n\n@Component({\n    selector: 'datalink-table',\n    templateUrl: './datalink-table.component.html'\n})\n\nexport class DatalinkTableComponent implements OnInit, OnDestroy {\n    @Input() datalinkTableForm: FormGroup;\n\n    public errors: {};\n\n    private _subscription: Subscription;\n    private _datalinkTableSubscription: Subscription;\n\n    private hubCache: HubCache;\n\n    public eSourceType = eSourceType;\n    public sourceTypes = sourceTypes;\n\n    public connectionTables: ConnectionTables[] = [];\n    public datalinks: DexihDatalink[] = [];\n\n    public isVersioned = false;\n\n    constructor(\n        private hubService: HubService,\n        public datalinkEditService: DatalinkEditService) {\n        }\n\n    ngOnInit() {\n        this.errors = this.datalinkEditService.hubFormsService.getFormErrorMessages(this.datalinkTableForm, true);\n\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                this.hubCache = result[0];\n\n                this.subscribeDatalinkChanges();\n\n                if (this.hubCache && this.hubCache.isLoaded() && this.datalinkTableForm) {\n                    this.connectionTables = this.hubCache.getConnectionTables();\n                    this.datalinks = this.hubCache.hub.dexihDatalinks;\n                    this.updateIsVersioned();\n                }\n            });\n\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Selected datalink table');\n        }\n    }\n\n    updateIsVersioned() {\n        if (this.datalinkTableForm.controls.sourceType.value === eSourceType.Table) {\n            var table = this.hubCache.getTable(this.datalinkTableForm.controls.sourceTableKey.value);\n            if (table) {\n                this.isVersioned = table.isVersioned\n            }\n        }\n    }\n\n    subscribeDatalinkChanges() {\n        if (this._datalinkTableSubscription) { this._datalinkTableSubscription.unsubscribe(); }\n        this._datalinkTableSubscription = merge(\n            this.datalinkTableForm.controls.sourceType.valueChanges,\n            this.datalinkTableForm.controls.sourceTableKey.valueChanges,\n            this.datalinkTableForm.controls.sourceDatalinkKey.valueChanges,\n        ).subscribe(() => {\n            this.errors = this.datalinkEditService.hubFormsService.getFormErrorMessages(this.datalinkTableForm, true);\n            this.refreshColumns();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._datalinkTableSubscription) { this._datalinkTableSubscription.unsubscribe(); }\n    }\n\n    refreshColumns() {\n        try {\n            // temporarily unsubscribe to avoid a recursive loop.\n            if (this._datalinkTableSubscription) { this._datalinkTableSubscription.unsubscribe(); }\n\n            let datalinkTable = <DexihDatalinkTable>this.datalinkTableForm.value;\n            datalinkTable.sourceType = this.datalinkTableForm.controls.sourceType.value;\n            datalinkTable.sourceTableKey = this.datalinkTableForm.controls.sourceTableKey.value;\n            datalinkTable.sourceDatalinkKey = this.datalinkTableForm.controls.sourceDatalinkKey.value;\n\n            this.datalinkEditService.reBuildDatalinkTable(datalinkTable);\n            this.datalinkEditService.fixMappings(this.datalinkEditService.hubFormsService.currentForm);\n\n            this.datalinkTableForm.controls.name.setValue(datalinkTable.name);\n            this.datalinkTableForm.controls.rowsEndAt.setValue(datalinkTable.rowsEndAt);\n            this.datalinkTableForm.controls.rowsStartAt.setValue(datalinkTable.rowsStartAt);\n            this.datalinkTableForm.controls.rowsIncrement.setValue(datalinkTable.rowsIncrement);\n            this.datalinkTableForm.controls.sourceType.setValue(datalinkTable.sourceType);\n\n            this.updateIsVersioned();\n\n            let tableColumnsForm = <FormArray>this.datalinkTableForm.controls.dexihDatalinkColumns;\n            while (tableColumnsForm.length > 0) {\n                tableColumnsForm.removeAt(0);\n            }\n\n            datalinkTable.dexihDatalinkColumns.sort((a, b) => a.position - b.position).filter(c => c.isValid).forEach(column => {\n                tableColumnsForm.push(this.datalinkEditService.hubFormsService.datalinkTableColumn(tableColumnsForm.value, column));\n            });\n\n            this.subscribeDatalinkChanges();\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Refresh datalink columns');\n        }\n    }\n\n\n}\n","<form *ngIf=\"datalinkTableForm\"  [formGroup]=\"datalinkTableForm\">\n    <fieldset>\n        <section >\n            <form-select label=\"Data Source Type\" formControlName=\"sourceType\" [items]=\"sourceTypes\" itemKey=\"key\" itemName=\"name\"\n                iconClass=\"fa fa-database\"  note='Specify the source type for this table' [enableFilter]=\"false\">\n            </form-select>\n        </section>\n\n        <section *ngIf=\"datalinkTableForm.value.sourceType == eSourceType.Table\" >\n            <form-select label=\"Source Table\" formControlName=\"sourceTableKey\" [errors]=\"errors?.sourceTableKey\" [items]=\"connectionTables\" parentName=\"name\" childItems=\"dexihTables\" itemKey=\"key\" itemName=\"logicalName\"\n                note=\"Select the source table\" >\n                <table-edit-button [key]=\"datalinkTableForm.controls.sourceTableKey.value\"></table-edit-button>\n            </form-select>\n        </section>\n\n        <section *ngIf=\"datalinkTableForm.value.sourceType == eSourceType.Datalink\">\n            <form-select label=\"Source Datalink\" formControlName=\"sourceDatalinkKey\" [errors]=\"errors?.sourceDatalinkKey\" [items]=\"datalinks\" itemKey=\"key\" itemName=\"name\"\n                note='Select the source datalink'>\n                <datalink-edit-button [key]=\"datalinkTableForm.controls.sourceDatalinkKey.value\"></datalink-edit-button>\n            </form-select>\n        </section>\n\n        <section *ngIf=\"datalinkTableForm.value.sourceType == eSourceType.Rows\">\n            <div class=\"row\">\n                <div class=\"col-4\">\n                    <form-input label=\"Start At\" type=\"number\" formControlName=\"rowsStartAt\" placeholder=\"Enter start row number\"\n                        iconClass=\"fa fa-list\">\n                    </form-input>\n                </div>\n                <div class=\"col-4\">\n                    <form-input label=\"End At\" type=\"number\" formControlName=\"rowsEndAt\" placeholder=\"Enter end row number\"\n                        iconClass=\"fa fa-list\">\n                    </form-input>\n                </div>\n                <div class=\"col-4\">\n            \n                    <form-input label=\"Increment By\" type=\"number\" formControlName=\"rowsIncrement\"\n                        placeholder=\"Enter increment value\" iconClass=\"fa fa-list\">\n                    </form-input>\n                </div>\n            </div>\n        </section>\n\n        <section >\n            <form-checkbox label=\"Disable query logic being pushed down to the database\" formControlName=\"disablePushDown\"></form-checkbox>\n            <form-checkbox *ngIf=\"isVersioned\" label=\"Disable source table versions\" formControlName=\"disableVersioning\"></form-checkbox>\n\n            <form-input label=\"Table Alias\" formControlName=\"name\" \n                note='An alias that can be used to describe the table instance (this is generally used to differentiate self-joined tables).'>\n            </form-input>\n        </section>\n\n        <d-button-refresh (click)=\"refreshColumns()\" tooltip=\"Refresh the columns from the source table.\" ></d-button-refresh>\n    </fieldset>\n</form>","export { InputColumnsComponent } from './input-columns.component';\nexport { InputColumnComponent } from './input-column.component';\n","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { HubCache, eMappingStatus,\n    MappingStatusInfo, impactMappingStatuses, lineageMappingStatuses } from '../../../hub.models';\nimport { eObjectUse, ColumnUsageNode, InputOutputColumns, eDatalinkObjectType } from '../../../hub.lineage.models';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { DexihDatalinkColumn, eTypeCode } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'input-column',\n    templateUrl: './input-column.component.html'\n})\nexport class InputColumnComponent implements OnInit, OnDestroy {\n    @Input() public column: DexihDatalinkColumn = null;\n    @Input() public datalinkTransformForm: FormGroup;\n\n    private _subscription: Subscription;\n\n    private hubCache: HubCache;\n    private datalinkForm: FormGroup;\n\n    eMappingStatus = eMappingStatus;\n    eTypeCode = eTypeCode;\n\n    mappingStatusInfoImpact: MappingStatusInfo;\n    mappingStatusInfoLineage: MappingStatusInfo;\n\n    childColumns: DexihDatalinkColumn[];\n\n    constructor(\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n                this.hubCache = result[0];\n                this.datalinkForm = result[1];\n\n                let datalinkTransform = this.datalinkTransformForm.value;\n\n                let columnUsage: ColumnUsageNode = new ColumnUsageNode(\n                    eDatalinkObjectType.Transform,\n                    eObjectUse.Target,\n                    this.datalinkForm.value,\n                    this.column,\n                    null,\n                    datalinkTransform,\n                    null,\n                    eMappingStatus.NotMapped,\n                    this.hubCache\n                );\n\n                let mappingStatusImpact = columnUsage.createDatalinkImpact(false);\n                this.mappingStatusInfoImpact = impactMappingStatuses.find(c => c.key === mappingStatusImpact);\n\n                let mappingStatusLineage = columnUsage.createDatalinkLineage(true);\n                this.mappingStatusInfoLineage = lineageMappingStatuses.find(c => c.key === mappingStatusLineage);\n\n                let io = new InputOutputColumns();\n                if (io.findColumn(this.column,\n                    datalinkTransform.nodeDatalinkColumn ? datalinkTransform.nodeDatalinkColumn.key : null)) {\n                    this.childColumns = this.column.childColumns;\n                }\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Input Column');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n\n}\n","<div class=\"list-group-item p-0 rounded-0\" dragZone zone=\"input-column\" [data]=\"column\" zone=\"input-column\" >\n    <div class=\"d-flex flex-row\">\n        <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoLineage.statusClass\" [title]=\"mappingStatusInfoLineage.name\"></i>\n\n        <a class=\"flex-fill input-group-text ellipsis-overflow rounded-0 border-0\" style=\"overflow:hidden; text-overflow :ellipsis;\" \n         [title]=\"column.logicalName + ' ' + eTypeCode[column.dataType]\" >\n            {{column.logicalName}}\n        </a>\n        <i class=\"input-group-text rounded-0  border-0 border-l1\" [ngClass]=\"mappingStatusInfoImpact.statusClass\" [title]=\"mappingStatusInfoImpact.name\"></i>\n    </div>\n</div>\n<div *ngIf=\"childColumns?.length > 0\" class=\"p-2\">\n    <input-column *ngFor=\"let childColumn of childColumns\" [column]=\"childColumn\" [datalinkTransformForm]=\"datalinkTransformForm\"></input-column>\n</div>","import { Component, Input, OnInit, OnDestroy, OnChanges } from '@angular/core';\nimport { Subscription} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { DexihDatalinkColumn } from '../../../../shared/shared.models';\nimport { DatalinkEditService } from '../datalink-edit.service';\n\n@Component({\n\n    selector: 'input-columns',\n    templateUrl: './input-columns.component.html'\n})\nexport class InputColumnsComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() public datalinkTransformForm: FormGroup;\n\n    private _inputColumnsSubscribe: Subscription;\n    columns: Array<DexihDatalinkColumn> = [];\n    columnGroups: Array<{group: string, columns: Array<DexihDatalinkColumn>}> = [];\n\n    constructor(private editDatalinkService: DatalinkEditService) {\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnChanges() {\n        if (this._inputColumnsSubscribe) { this._inputColumnsSubscribe.unsubscribe(); }\n\n        this.columnGroups = this.editDatalinkService.getColumnGroups(this.datalinkTransformForm.controls.runTime.value.inputColumns);\n\n        this._inputColumnsSubscribe =  this.datalinkTransformForm.controls.runTime.valueChanges.subscribe(() => {\n            this.columnGroups = this.editDatalinkService.getColumnGroups(this.datalinkTransformForm.controls.runTime.value.inputColumns);\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._inputColumnsSubscribe) { this._inputColumnsSubscribe.unsubscribe(); }\n    }\n}\n","<div *ngIf=\"datalinkTransformForm\" cdkDropList #cdkDropList=\"cdkDropList\">\n    <span *ngFor=\"let table of inputTables; let tableIndex = index\">\n        <d-widget-section *ngIf=\"table.dexihDatalinkColumns.length > 0\" [title]=\"table.name\" [padding]=\"false\" [showExpandButton]=\"true\">\n            <div class=\"list-group\">\n                <input-column\n                    *ngFor=\"let column of table.dexihDatalinkColumns | fieldSort : 'position' | isValidFilter \"\n                    [datalinkTransformForm]='datalinkTransformForm' [column]='column'>\n                </input-column>\n            </div>\n        </d-widget-section>\n    </span>\n    <d-widget-section *ngFor=\"let columnGroup of columnGroups\" [title]=\"columnGroup.group\" [padding]=\"false\"  [showExpandButton]=\"true\" >\n        <div *ngFor=\"let column of columnGroup.columns | fieldSort : 'position' | isValidFilter; let i = index\">\n            <input-column [datalinkTransformForm]='datalinkTransformForm' [column]='column'>\n            </input-column>\n        </div>\n    </d-widget-section>\n</div>\n","export { JoinColumnComponent } from './join-column.component';\nexport { JoinColumnsComponent } from './join-columns.component';\n","import { Component, Input, Output, OnInit, OnDestroy, EventEmitter } from '@angular/core';\nimport { HubCache, eMappingStatus, MappingStatusInfo, lineageMappingStatuses, impactMappingStatuses } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { eObjectUse, ColumnUsageNode, eDatalinkObjectType } from '../../../hub.lineage.models';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { DexihDatalinkColumn, DexihTable, eTypeCode } from '../../../../shared/shared.models';\n\n\n@Component({\n    selector: 'join-column',\n    templateUrl: './join-column.component.html'\n})\nexport class JoinColumnComponent implements OnInit, OnDestroy {\n\n    @Input() public column: DexihDatalinkColumn = null;\n    @Input() public datalinkTransformForm: FormGroup;\n    @Input() public datalinkForm: FormGroup;\n    @Input() public inputTables: Array<DexihTable> = null;\n    @Output() public inputJoinDrop: EventEmitter<{inputColumn: DexihDatalinkColumn, joinColumn: DexihDatalinkColumn}>\n            = new EventEmitter<{inputColumn: DexihDatalinkColumn, joinColumn: DexihDatalinkColumn}>();\n\n    private _hubCacheSubscription: Subscription;\n\n    private hubCache: HubCache;\n\n    eMappingStatus = eMappingStatus;\n    eTypeCode = eTypeCode;\n\n    columnLineageStatusIcon: string;\n    columnLineageStatusColor: string;\n\n    public mappingStatusInfoImpact: MappingStatusInfo;\n    public mappingStatusInfoLineage: MappingStatusInfo;\n\n    constructor(private hubService: HubService) {\n    }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(hubCache => {\n            if (hubCache.isLoaded()) {\n                this.hubCache = hubCache;\n\n                let columnUsage = new ColumnUsageNode(\n                    eDatalinkObjectType.Transform,\n                    eObjectUse.Target,\n                    this.datalinkForm.value,\n                    this.column,\n                    null,\n                    this.datalinkTransformForm.value,\n                    null,\n                    eMappingStatus.NotMapped,\n                    this.hubCache\n                    );\n                let lineageMappingStatus = columnUsage.createDatalinkLineage(false);\n                this.mappingStatusInfoLineage = lineageMappingStatuses.find(c => c.key === lineageMappingStatus);\n\n                let impactMappingStatus = columnUsage.createDatalinkImpact(false);\n                this.mappingStatusInfoImpact = impactMappingStatuses.find(c => c.key === impactMappingStatus);\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n    }\n\n}\n","<div class=\"list-group-item p-0 rounded-0\">\n    <div class=\"d-flex flex-row\">\n        <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoLineage.statusClass\" [title]=\"mappingStatusInfoLineage.name\"></i>\n\n        <a *ngIf=\"mappingStatusInfoLineage.key != eMappingStatus.Joined\" class=\"flex-fill input-group-text ellipsis-overflow rounded-0 border-0\"\n            style=\"overflow:hidden; text-overflow :ellipsis;\" \n            [title]=\"column.logicalName + ' ' + eTypeCode[column.dataType]\">\n            {{column.logicalName}}\n        </a>\n        <a *ngIf=\"mappingStatusInfoLineage.key == eMappingStatus.Joined\" class=\"flex-fill input-group-text ellipsis-overflow rounded-0 border-0\"\n            style=\"overflow:hidden; text-overflow :ellipsis;\" [title]=\"column.logicalName + ' ' + eTypeCode[column.dataType]\">\n            {{column.logicalName}}\n        </a>\n        <i class=\"input-group-text rounded-0  border-0 border-l1\" [ngClass]=\"mappingStatusInfoImpact.statusClass\" [title]=\"mappingStatusInfoImpact.name\"></i>\n    </div>\n</div>","import { Component, Input, Output, OnInit, OnChanges, OnDestroy, EventEmitter } from '@angular/core';\nimport { HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { DexihDatalinkColumn, eTransformType } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'join-columns',\n    templateUrl: './join-columns.component.html'\n})\nexport class JoinColumnsComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() public datalinkTransformForm: FormGroup;\n\n    @Output() public inputJoinDrop: EventEmitter<{ inputColumn: DexihDatalinkColumn, joinColumn: DexihDatalinkColumn }>\n        = new EventEmitter<{ inputColumn: DexihDatalinkColumn, joinColumn: DexihDatalinkColumn }>();\n\n    private _subscription: Subscription;\n    private _changesSubscription: Subscription;\n\n    public joinTable;\n\n    public eTransformType = eTransformType;\n\n    public datalinkForm: FormGroup;\n\n    public joinColumns: Array<DexihDatalinkColumn>;\n\n    constructor(\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n    ) {\n    }\n\n    ngOnInit() {\n        try {\n\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n                this.datalinkForm = result[1];\n\n                if (this.datalinkForm) {\n                    this.updateTableData();\n                }\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Edit Custom Function');\n        }\n    }\n\n    ngOnChanges() {\n        this.updateTableData();\n        if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n        this._changesSubscription = this.datalinkTransformForm.controls.joinDatalinkTable.valueChanges.subscribe(() => {\n            this.updateTableData();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n    }\n\n    updateTableData() {\n        if (this.datalinkTransformForm && this.datalinkTransformForm.controls.joinDatalinkTable.value) {\n            this.joinTable = this.datalinkTransformForm.controls.joinDatalinkTable.value;\n            if (this.joinTable) {\n                this.joinColumns = new Array<DexihDatalinkColumn>();\n                this.joinTable.dexihDatalinkColumns.forEach(column => {\n                    this.joinColumns.push(column)\n                });\n            } else {\n                this.joinColumns = null;\n            }\n        } else {\n            this.joinColumns = null;\n        }\n    }\n\n    newInputJoinDrop(inputColumn: DexihDatalinkColumn, joinColumn: DexihDatalinkColumn) {\n        this.inputJoinDrop.emit({inputColumn, joinColumn});\n    }\n}\n","<div *ngIf=\"joinColumns\">\n    <d-widget-section [title]=\"joinTable?.name + '(' + eTransformType[this.datalinkTransformForm.value.transformType] + ')'\" [padding]=\"false\" [showExpandButton]=\"true\">\n        <join-column *ngFor=\"let column of joinColumns | fieldSort : 'position' | isValidFilter\"\n            [datalinkForm]='datalinkForm' [datalinkTransformForm]='datalinkTransformForm' [column]='column' dropZone\n            (dropData)=\"newInputJoinDrop($event, column)\" zone=\"input-column\" dropAllowedClass=\"drop-zone-green\">\n        </join-column>\n    </d-widget-section>\n</div>","export * from './mapping-edit.component';","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HubCache, sortDirections } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { FormGroup } from '@angular/forms';\nimport { compare } from '../../../hub.query.models';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { eTransformItemType, DexihDatalinkColumn, eAggregate, eCompare, \n  DexihDatalinkTransformItem, eTypeCode, DexihDatalinkTarget, DexihTable, DexihTableColumn, eAggregateItems } from '../../../../shared/shared.models';\n\n@Component({\n  selector: 'mapping-edit',\n  templateUrl: './mapping-edit.component.html'\n})\nexport class MappingEditComponent implements OnInit, OnDestroy {\n  // public hubCache: HubCache;\n\n  public pageTitle: string;\n\n  private _subscription: Subscription;\n  private _formChangesObserve: Subscription;\n  private _saveSubscription: Subscription;\n\n  datalinkTransformItemKey: number;\n  datalinkKey: number;\n  datalinkTransformKey: number;\n\n  public hubCache: HubCache;\n\n  datalinkForm: FormGroup;\n  datalinkTransformForm: FormGroup;\n  datalinkTransformItemForm: FormGroup;\n  transformItemType: eTransformItemType;\n  eTransformItemType = eTransformItemType;\n\n  variables: string[];\n\n  newDatalinkTransformItemForm: FormGroup;\n  newColumn: DexihDatalinkColumn;\n  filterValue: any;\n  sourceValue: any;\n\n  inputColumns: Array<{group: string, columns: Array<DexihDatalinkColumn>}> = [];\n  outputColumns: Array<DexihDatalinkColumn>;\n  joinColumns: Array<DexihDatalinkColumn>;\n  datalinkTargets: Array<DexihDatalinkTarget>;\n  outputTables: Array<DexihTable>;\n  showInput = true;\n  showOutput = true;\n\n  eAggregate = eAggregate;\n  eAggregateItems = eAggregateItems.filter(c => c.key > 0);\n  compare = compare;\n  eCompare = eCompare;\n\n  sourceErrors: string;\n  targetErrors: string;\n  joinErrors: string;\n\n  sortDirections = sortDirections;\n\n  constructor(\n    private hubService: HubService,\n    private authService: AuthService,\n    private editDatalinkService: DatalinkEditService,\n    private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n        this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n        this.hubService.getRemoteLibrariesObservable()\n      ).subscribe(result => {\n        this.pageTitle = result[0]['pageTitle'];\n        let params = result[1];\n        this.hubCache = result[2];\n        let datalinkForm = result[3];\n\n        if (!this.hubCache.isLoaded()) { return; }\n\n        this.datalinkForm = datalinkForm;\n\n        this.variables = this.editDatalinkService.getVariables();\n\n        this.datalinkTransformItemKey = +params['datalinkTransformItemKey'];\n        this.datalinkTransformKey = +params['datalinkTransformKey'];\n        this.transformItemType = +params['type'];\n\n        if (this.datalinkForm) {\n          this.datalinkTransformForm = this.editDatalinkService.getDatalinkTransform(this.datalinkTransformKey);\n\n          switch (this.transformItemType) {\n              case eTransformItemType.JoinPair:\n                this.showInput = true;\n                this.showOutput = false;\n                this.pageTitle = 'Edit Join';\n                break;\n              case eTransformItemType.Column:\n              this.showInput = true;\n              this.showOutput = false;\n              this.pageTitle = 'Edit Group';\n                break;\n              case eTransformItemType.JoinNode:\n              this.showInput = false;\n              this.showOutput = true;\n                this.pageTitle = 'Edit Join Node';\n                break;\n              case eTransformItemType.GroupNode:\n              this.showInput = false;\n              this.showOutput = true;\n                this.pageTitle = 'Edit Group Node';\n                break;\n              case eTransformItemType.Sort:\n              this.showInput = true;\n              this.showOutput = false;\n                this.pageTitle = 'Edit Sort';\n                break;\n              case eTransformItemType.FilterPair:\n              this.showInput = true;\n              this.showOutput = false;\n                this.pageTitle = 'Edit Condition';\n                break;\n              case eTransformItemType.AggregatePair:\n                this.pageTitle = 'Edit Aggregate';\n                this.showInput = true;\n                this.showOutput = true;\n                break;\n              default:\n                this.pageTitle = 'Edit Mapping';\n                this.showInput = true;\n                this.showOutput = true;\n          }\n\n          let nodeDatalinkColumn = this.datalinkTransformForm.controls.nodeDatalinkColumn.value;\n          let nodeDatalinkColumnKey = nodeDatalinkColumn ? nodeDatalinkColumn.key : null;\n          let io = new InputOutputColumns();\n          if (nodeDatalinkColumnKey) {\n            let inputColumns = <DexihDatalinkColumn[]> this.datalinkTransformForm.controls.runTime.value.inputColumns;\n            let nodeColumns = io.getAvailableColumns(inputColumns, nodeDatalinkColumnKey, 0);\n            this.inputColumns = this.editDatalinkService.getColumnGroups(nodeColumns);\n            this.outputColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n          } else {\n            this.inputColumns = this.editDatalinkService.getColumnGroups(this.datalinkTransformForm.controls.runTime.value.inputColumns);\n            this.outputColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n          }\n          if (this.datalinkTransformForm.value.joinDatalinkTable) {\n            this.joinColumns = this.datalinkTransformForm.value.joinDatalinkTable.dexihDatalinkColumns;\n          }\n\n          this.datalinkTargets = this.datalinkForm.controls.dexihDatalinkTargets.value;\n          let table = new DexihTable() \n          table.name = \"Output Columns\";\n          table.dexihTableColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n          this.outputTables = [table];\n\n          if(this.datalinkTargets) {\n              this.datalinkTargets.forEach(target => {\n                  this.outputTables.push(target['table']);\n              });\n          }\n\n\n          if (this.datalinkTransformItemKey) {\n            this.datalinkTransformItemForm = this.editDatalinkService\n              .getDatalinkTransformItem(this.datalinkTransformForm, this.datalinkTransformItemKey);\n\n              this.filterValue = this.datalinkTransformItemForm.controls.filterValue.value;\n              this.sourceValue = this.datalinkTransformItemForm.controls.sourceValue.value;\n\n              // create a copy of the form item to allow for cancel.\n            this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n              .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, this.datalinkTransformItemForm.value);\n          } else {\n            let newItem = new DexihDatalinkTransformItem();\n            newItem.datalinkTransformKey = this.datalinkTransformKey;\n            newItem.transformItemType = this.transformItemType;\n\n            this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n              .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, newItem);\n          }\n\n          this.getErrors();\n          if (this._formChangesObserve) { this._formChangesObserve.unsubscribe(); }\n          this._formChangesObserve = this.newDatalinkTransformItemForm.statusChanges.subscribe(() => {\n            this.getErrors();\n          })\n        }\n\n        if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n        this._saveSubscription = this.editDatalinkService.savingDatalink.subscribe(value => {\n            if(value) {\n                this.apply();\n            }\n        });\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Edit Mapping Function');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._formChangesObserve) { this._formChangesObserve.unsubscribe(); }\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n  }\n\n  cancel() {\n    this.authService.navigateUp();\n  }\n\n  getErrors() {\n    this.targetErrors = this.editDatalinkService.hubFormsService.getErrorMessage(\n      this.newDatalinkTransformItemForm.controls.targetDatalinkColumn);\n    this.sourceErrors = this.editDatalinkService.hubFormsService.getErrorMessage(\n      this.newDatalinkTransformItemForm.controls.sourceDatalinkColumn);\n    this.joinErrors = this.editDatalinkService.hubFormsService.getErrorMessage(\n      this.newDatalinkTransformItemForm.controls.sourceDatalinkColumn);\n  }\n\n  apply() {\n    // this.datalinkTransformItemForm.setValue(this.newDatalinkTransformItemForm.value);\n    this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, this.newDatalinkTransformItemForm);\n  }\n\n  updateNewColumn(value: string) {\n    let current = this.newDatalinkTransformItemForm.controls.targetDatalinkColumn.value;\n    if (value && (!current || current.name !== value )) {\n      let key: number;\n      if (this.newColumn) {\n        key = this.newColumn.key;\n      } else {\n        key = this.hubService.getHubCache().getNextSequence();\n      }\n\n      let sourceColumn = <DexihDatalinkColumn>this.newDatalinkTransformItemForm.controls.sourceDatalinkColumn.value;\n\n      if (sourceColumn) {\n        let io = new InputOutputColumns();\n        this.newColumn = io.copyDatalinkColumn(sourceColumn, 1000 - key, 'mapping');\n      } else {\n        this.newColumn = new DexihDatalinkColumn();\n        this.newColumn.position = 1000 - key;\n\n        if (this.transformItemType === eTransformItemType.JoinNode) {\n          this.newColumn.dataType = eTypeCode.Node;\n          this.newColumn.childColumns = this.joinColumns;\n        } else {\n          this.newColumn.dataType = eTypeCode.String;\n        }\n      }\n\n      this.newColumn.name = value;\n      this.newColumn.logicalName = value;\n      this.newColumn.columnGroup = 'mapping';\n      this.newColumn.key = key;\n\n      this.newDatalinkTransformItemForm.controls.targetDatalinkColumn.setValue(this.newColumn);\n    }\n  }\n\n  updateFilterValue(value: string) {\n      this.newDatalinkTransformItemForm.controls.filterValue.setValue(value);\n  }\n\n  updateSourceValue(value: string) {\n    this.newDatalinkTransformItemForm.controls.sourceValue.setValue(value);\n  }\n\n  applyExit() {\n    this.apply();\n    this.authService.navigateUp();\n  }\n}\n\n","<div *ngIf=\"newDatalinkTransformItemForm && inputColumns && outputColumns\">\n\n\t<d-widget-section [title]=\"pageTitle\" [showExpandButton]=\"false\">\n\t\t<ng-template #header>\n\t\t\t<d-button-apply [disabled]=\"newDatalinkTransformItemForm.pristine\"\n\t\t\t\t(click)=\"!newDatalinkTransformItemForm.pristine && applyExit()\" class=\"mr-1\"></d-button-apply>\n\t\t\t<d-button-cancel (click)=\"cancel()\"></d-button-cancel>\n\t\t</ng-template>\n\t\t<form [formGroup]=\"newDatalinkTransformItemForm\">\n\t\t\t<fieldset>\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section *ngIf=\"transformItemType == eTransformItemType.AggregatePair\" class=\"form-group col-md-4\">\n\t\t\t\t\t\t<form-select label=\"Aggregate\" formControlName=\"aggregate\" [items]=\"eAggregateItems\" itemKey=\"key\"\n\t\t\t\t\t\t\titemName=\"name\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<section *ngIf=\"showInput\" class=\"form-group col-md-4\">\n\t\t\t\t\t\t<form-select label=\"Input Column\" formControlName=\"sourceDatalinkColumn\" [items]=\"inputColumns\"\n\t\t\t\t\t\t\tparentName=\"group\" childItems=\"columns\"\n\t\t\t\t\t\t\t[(textValue)]=\"sourceValue\" (textValueChange)=\"updateSourceValue($event)\"\n\t\t\t\t\t\t\t[enableKeySelect]=\"false\"\n\t\t\t\t\t\t\t[enableTextEntry]=\"true\" [enableTextEntryMatch]=\"false\" itemName=\"logicalName\" itemKey=\"key\"\n\t\t\t\t\t\t\t[errors]=\"sourceErrors\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section *ngIf=\"transformItemType == eTransformItemType.FilterPair || transformItemType == eTransformItemType.JoinPair\" class=\"form-group col-md-4\">\n\t\t\t\t\t\t<form-select label=\"Compare\" formControlName=\"filterCompare\" [items]=\"compare\" itemKey=\"key\"\n\t\t\t\t\t\t\titemName=\"name\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section *ngIf=\"transformItemType == eTransformItemType.FilterPair && newDatalinkTransformItemForm.controls.filterCompare.value != eCompare.IsNotNull && newDatalinkTransformItemForm.controls.filterCompare.value != eCompare.IsNull\" class=\"form-group col-md-4\">\n\t\t\t\t\t\t<form-select\n\t\t\t\t\t\t\tlabel=\"Compare Column/Value\" formControlName=\"filterDatalinkColumn\"  [items]=\"inputColumns\"\n\t\t\t\t\t\t\tparentName=\"group\" childItems=\"columns\"\n\t\t\t\t\t\t\t[enableTextEntry]=\"true\" [(textValue)]=\"filterValue\"\n\t\t\t\t\t\t\t(textValueChange)=\"updateFilterValue($event)\" [enableTextEntryMatch]=\"false\" [enableKeySelect]=\"false\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"logicalName\" [errors]=\"filterValueErrors\"\n\t\t\t\t\t\t\t[textEntryItems]=\"variables\" textEntryItemsTitle=\"Variables\" [setTextEntryToValue]=\"false\"\n\t\t\t\t\t\t\tnote=\"Note: For static date values use format YYYY-MM-DD (e.g. 2018-01-30)\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section *ngIf=\"showOutput\" class=\"form-group col-md-4\">\n\t\t\t\t\t\t<form-select label=\"Output Column\" formControlName=\"targetDatalinkColumn\" [items]=\"outputTables\" parentName=\"name\" childItems=\"dexihTableColumns\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"logicalName\" note=\"Enter new column, or select existing\"\n\t\t\t\t\t\t\t[enableKeySelect]=\"false\" (textValueChange)=\"updateNewColumn($event)\" [enableTextEntry]=\"true\" [setTextEntryToValue]=\"false\"\n\t\t\t\t\t\t\ttextEntryNote=\"Enter new column name, or select existing\" [errors]=\"targetErrors\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section *ngIf=\"transformItemType == eTransformItemType.Sort\" class=\"form-group col-md-4\">\n\t\t\t\t\t\t<form-select label=\"Direction\" formControlName=\"sortDirection\" [items]=\"sortDirections\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"name\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section *ngIf=\"transformItemType == eTransformItemType.JoinPair\" class=\"form-group col-md-4\">\n\t\t\t\t\t\t<form-select label=\"Join Column\" formControlName=\"joinDatalinkColumn\" [items]=\"joinColumns\"\n\t\t\t\t\t\t\t[enableKeySelect]=\"false\" itemKey=\"key\" itemName=\"logicalName\" note=\"Select a join column\"\n\t\t\t\t\t\t\ttextEntryNote=\"Enter a value to add a new column\" [errors]=\"joinErrors\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t</form>\n\t</d-widget-section>\n</div>","export { MappingComponent } from './mapping.component';\nexport { MappingItemComponent } from './mapping-item.component';\n","import { Component, OnInit, Input } from '@angular/core';\nimport {HubCache, transformItemTypes } from '../../../hub.models';\nimport { HubService } from '../../..';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { compare } from '../../../hub.query.models';\nimport { DexihDatalinkTransform, DexihDatalinkTransformItem, eTransformItemType, eCompare,\n    DexihDatalinkColumn, FunctionReference, eParameterDirection, eAggregate, eSortDirection, eTypeCode } from '../../../../shared/shared.models';\n\nexport class ValidValue {\n    public valid: boolean;\n    public text: string;\n    public error: string;\n}\n\nexport class ValidParameter {\n    public values: ValidValue[];\n    public name: string;\n}\n\nexport class ValidMapping {\n    public name: string;\n    public parameters: ValidParameter[];\n}\n\n@Component({\n    selector: 'mapping-item',\n    templateUrl: 'mapping-item.component.html'\n})\n\nexport class MappingItemComponent implements OnInit {\n    @Input() transform: DexihDatalinkTransform;\n    @Input() transformItem: DexihDatalinkTransformItem;\n    @Input() allowCondition: boolean;\n\n    private _subscription: Subscription;\n\n    private hubCache: HubCache;\n\n    public label: string;\n    public error: string;\n\n    public source: ValidValue;\n    public target: ValidValue;\n    public compare: string;\n    public inputParameters: ValidParameter[];\n    public outputParameters: ValidParameter[];\n\n    public mapParameters: ValidMapping[];\n\n    constructor(\n        private hubService: HubService) { }\n\n    ngOnInit() {\n        try {\n\n            if (this._subscription) { this._subscription.unsubscribe(); }\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.hubService.getRemoteLibrariesObservable()\n            ).subscribe(result => {\n                this.hubCache = result[0];\n                this.updateMapping();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Mappings');\n        }\n    }\n\n    async updateMapping() {\n        let item = this.transformItem;\n        let itemType = transformItemTypes.find(c => c.key === item.transformItemType);\n\n        switch (item.transformItemType) {\n            case eTransformItemType.BuiltInFunction:\n                if (item.functionClassName) {\n                    let func = await this.hubService.GetFunctionReference(item);\n                    if (func) {\n                        this.label = func.name;\n                        this.addBuiltInFunctionParameters(func);\n                    } else {\n                        this.error = `Error, function ${item.functionClassName}.${item.functionMethodName} not found.`;\n                    }\n                } else if (item.customFunctionKey) {\n                    let func = this.hubCache.hub.dexihCustomFunctions.find(c => c.key === item.customFunctionKey);\n                    if (func) {\n                        this.label = func.name;\n                        this.addCustomFunctionParameters();\n                    } else {\n                        this.error = 'Error, function not found.';\n                    }\n                } else {\n                    this.error = 'Error, function not found';\n                }\n                break;\n            case eTransformItemType.CustomFunction:\n                this.addCustomFunctionParameters();\n                break;\n            case eTransformItemType.AggregatePair:\n                this.label = eAggregate[item.aggregate];\n                break;\n            case eTransformItemType.Sort:\n                this.label = eSortDirection[item.sortDirection];\n                break;\n            case eTransformItemType.UnGroup:\n                this.label = 'UnGroup'\n                this.addUnGroupParameters();\n                break;\n            default:\n                this.label = itemType.name;\n                break;\n        }\n\n        if (itemType.useSource) { this.source = this.columnOrValue(null, item.sourceDatalinkColumn, item.sourceValue); }\n        if (itemType.useTarget) { this.target = this.describeDatalinkColumn(null, item.targetDatalinkColumn); }\n        if (itemType.useJoin) { this.target = this.describeDatalinkColumn(null, item.joinDatalinkColumn); }\n        if (itemType.useFilter) { this.target = this.columnOrValue(null, item.filterDatalinkColumn, item.filterValue)};\n\n        if (itemType.useFilter || itemType.useJoin) {\n            let filterCompare = item.filterCompare;\n            if (filterCompare === null) { filterCompare = eCompare.IsEqual };\n            this.compare = compare.find(c => c.key === filterCompare).name;\n        } else {\n            this.compare = null;\n        }\n    }\n\n    private columnOrValue(expectedDataType: eTypeCode, column: DexihDatalinkColumn, value: string): ValidValue {\n        if (column) {\n            return this.describeDatalinkColumn(expectedDataType, column);\n        } else {\n            return {text: this.describeStaticValue(value), valid: true, error: ''};\n        }\n    }\n\n    // concatenates the arrays together.\n    // node: .concat will append null arrays, where this ignores null arrays.\n    private concat<T>(...args: T[][]): T[] {\n        let array: T[] = [];\n        args.forEach(arg => {\n            if ( arg ) {\n                array = array.concat(arg);\n            }\n        });\n        return array;\n    }\n\n    private addBuiltInFunctionParameters(func: FunctionReference) {\n        let functionInputs = this.concat(func.inputParameters, func.resultInputParameters);\n        let functionOutputs = this.concat(func.outputParameters, func.returnParameters, func.resultOutputParameters,\n            func.resultReturnParameters);\n\n        let inputParams = this.transformItem.dexihFunctionParameters\n            .filter(c =>\n                c.direction === eParameterDirection.Input ||\n                c.direction === eParameterDirection.ResultInput ||\n                c.direction === eParameterDirection.Join);\n\n        this.inputParameters = functionInputs.filter(c => c && !c.linkedName).map<ValidParameter>(param => {\n            let p = inputParams.find(c => c.name === param.parameterName);\n            if (p) {\n                if (p.rank === 0) {\n                    let value = this.columnOrValue(p.dataType, p.datalinkColumn, p.value);\n                    return {name: this.describeParameterName(p), values: [value] };\n                } else {\n                    let values = p.arrayParameters.sort( (a, b) => a.position - b.position).map(ap => {\n                        return this.columnOrValue(ap.dataType, ap.datalinkColumn, ap.value);\n                    });\n                    return {name: this.describeParameterName(p), values: values};\n                }\n            } else {\n                return {name: this.describeParameterName(p), values: [{valid: false, error: 'Not Mapped', text: ''}]  };\n            }\n        });\n\n        let outputParams = this.transformItem.dexihFunctionParameters\n            .filter(\n                c => HubCache.parameterIsOutput(c));\n\n        this.outputParameters = functionOutputs.filter(c => c &&  !c.linkedName).map<ValidParameter>(param => {\n            let p = outputParams.find(c => c.name === param.parameterName);\n            if (p) {\n                if (this.allowCondition &&\n                    (p.direction === eParameterDirection.ReturnValue || p.direction === eParameterDirection.ResultReturnValue)) {\n                    return null;\n                }\n                if (p.rank === 0 || p.datalinkColumn !== null) {\n                    let value = this.describeDatalinkColumn(p.dataType, p.datalinkColumn);\n                    return {name: this.describeParameterName(p), values: [value]};\n                } else {\n                    let values = p.arrayParameters.sort( (a, b) => a.position - b.position).map(ap => {\n                        return this.describeDatalinkColumn(ap.dataType, ap.datalinkColumn);\n                    });\n                    return {name: this.describeParameterName(p), values: values};\n                }\n            } else {\n                // return {name: param.name, values: [{valid: false, text: 'Not mapped'}]  };\n                return null;\n            }\n        }).filter(c => c !== null);\n\n        let linkedNames = Array.from(new Set(this.concat(functionInputs, functionOutputs).map(c => c &&  c.linkedName).filter(c => c)));\n        this.mapParameters = linkedNames.map(name => {\n            let parameters: ValidParameter[] = functionInputs.filter(c => c.linkedName === name).map(param => {\n                let p = inputParams.find(c => c.name === param.parameterName);\n                let values = p.arrayParameters.sort( (a, b) => a.position - b.position).map(ap => {\n                    return this.columnOrValue(ap.dataType, ap.datalinkColumn, ap.value);\n                });\n                return {name: this.describeParameterName(param), values: values};\n            });\n\n            let parameters2: ValidParameter[] = functionOutputs.filter(c => c.linkedName === name).map(param => {\n                let p = outputParams.find(c => c.name === param.parameterName);\n                let values = p.arrayParameters.sort( (a, b) => a.position - b.position).map(ap => {\n                    return this.describeDatalinkColumn(ap.dataType, ap.datalinkColumn);\n                });\n                return {name: this.describeParameterName(param), values: values};\n            });\n\n            return {name: name, parameters: this.concat(parameters, parameters2)};\n        });\n    }\n\n    private addCustomFunctionParameters() {\n\n        let inputParams = this.transformItem.dexihFunctionParameters\n            .filter(c =>\n                c.direction === eParameterDirection.Input ||\n                c.direction === eParameterDirection.ResultInput ||\n                c.direction === eParameterDirection.Join);\n\n        this.inputParameters = inputParams.map<ValidParameter>(p => {\n            if (p.rank === 0) {\n                let value = this.columnOrValue(p.dataType, p.datalinkColumn, p.value);\n                return { name: this.describeParameterName(p), values: [value] };\n            } else {\n                let values = p.arrayParameters.sort((a, b) => a.position - b.position).map(ap => {\n                    return this.columnOrValue(ap.dataType, ap.datalinkColumn, ap.value);\n                });\n                return { name: this.describeParameterName(p), values: values };\n            }\n        });\n\n        let outputParams = this.transformItem.dexihFunctionParameters\n            .filter(c => HubCache.parameterIsOutput(c));\n\n        this.outputParameters = outputParams.map<ValidParameter>(p => {\n            if (p.rank === 0) {\n                let value = this.describeDatalinkColumn(p.dataType, p.datalinkColumn);\n                return { name: this.describeParameterName(p), values: [value] };\n            } else {\n                let values = p.arrayParameters.sort((a, b) => a.position - b.position).map(ap => {\n                    return this.describeDatalinkColumn(ap.dataType, ap.datalinkColumn);\n                });\n                return { name: this.describeParameterName(p), values: values };\n            }\n        });\n    }\n\n    private addUnGroupParameters() {\n\n        let parameters = this.transformItem.dexihFunctionParameters;\n\n        let runTime = this.transform['runTime'];\n        let inputColumns = runTime.inputColumns;\n\n        let sourceColumn = <DexihDatalinkColumn> inputColumns.find(c => c.key === this.transformItem.sourceDatalinkColumn.key);\n\n        if (sourceColumn) {\n            this.outputParameters = parameters.map<ValidParameter>(p => {\n                if (p.datalinkColumn) {\n                    let find = sourceColumn.childColumns.find(c => c.key === p.datalinkColumn.key);\n                    if (find) {\n                        return {name: this.describeParameterName(p), values: [{valid: true, error: '', text: p.datalinkColumn.name}]};\n                    }\n                    return {name: this.describeParameterName(p),\n                        values: [{valid: false, error: '(Invalid column) ', text: p.datalinkColumn.name}]};\n                } else {\n                    return {name: this.describeParameterName(p), values: [{valid: false, error: '(No column)', text: ''}]};\n                }\n            });\n        }\n    }\n\n    private describeParameterName(param): string {\n        return param.name + ' (' + eTypeCode[param.dataType] + ')';\n    }\n\n    private describeDatalinkColumn(expectedDataType: eTypeCode, value: DexihDatalinkColumn): ValidValue {\n        if (!value) {\n            return { error: '(not mapped)', text: '', valid: false };\n        }\n\n        let runTime = this.transform['runTime'];\n        let inputColumns = runTime.inputColumns;\n        let nodeDatalinkColumn = this.transform.nodeDatalinkColumn ? this.transform.nodeDatalinkColumn : null;\n        let nodeDatalinkColumnKey = nodeDatalinkColumn ? nodeDatalinkColumn.key : null;\n\n        let returnValue: string = null;\n\n        let io = new InputOutputColumns();\n        let col = io.findValidColumn(value, nodeDatalinkColumnKey, inputColumns);\n        if (col) {\n            returnValue = (value.columnGroup ? ('(' + value.columnGroup + ')') : '') + value.logicalName;\n        }\n\n        if (!returnValue) {\n            runTime.transformColumns.forEach(column => {\n                if (!returnValue && column.key === value.key) {\n                    returnValue = value.logicalName;\n                }\n            });\n        }\n\n        if (!returnValue && this.transform.joinDatalinkTable) {\n            let joinTable = this.transform.joinDatalinkTable;\n            joinTable.dexihDatalinkColumns.forEach(column => {\n                if (!returnValue && column.key === value.key) {\n                    returnValue = '(' + joinTable.name + ') ' + value.logicalName;\n                }\n            });\n        }\n\n        if (returnValue) {\n            if (expectedDataType == null || value.dataType === expectedDataType) {\n                return { text: returnValue, valid: true, error: '' }\n            } else {\n                return { text: returnValue, error: '(inconsistent datatype ' + eTypeCode[value.dataType] + ')', valid: false }\n            }\n        } else {\n            return { text: value.logicalName, error: '(Invalid column) ', valid: false }\n        }\n    }\n\n    private describeStaticValue(value: string): string {\n        if (value === ' ') {\n            return '<space>';\n        }\n        if (!value) {\n            return '<null>';\n        }\n        return '\"' + value + '\"';\n    }\n}\n","<div class=\"container\">\n    <div *ngIf=\"!outputParameters\" class=\"row justify-content-start\">\n        <div class=\"col-auto\">\n            <h5>{{label}}</h5>\n            <div *ngIf=\"error\" class=\"text-danger\">\n                <i class=\"fa fa-exclamation-circle text-danger\" ></i>\n                {{error}}\n            </div>\n        </div>\n        <div *ngIf=\"source\" class=\"col-auto\"><i *ngIf=\"!source.valid\"\n                class=\"fa fa-exclamation-circle text-danger\" [title]=\"source.error\"></i>{{source.text}}</div>\n        <div *ngIf=\"target\" class=\"col-auto\">\n            <i *ngIf=\"source && !compare\" class=\"fa fa-arrow-right mr-2\"></i>\n            <i *ngIf=\"!target.valid\" class=\"fa fa-exclamation-circle text-danger\" [title]=\"target.error\"></i>\n            <span class=\"mr-2\" *ngIf=\"compare\">{{compare}}</span>\n            {{target.text}}\n        </div>\n    </div>\n\n    <ng-template [ngIf]=\"outputParameters\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <h5>{{label}}</h5>\n            </div>\n        </div>\n\n        <div *ngIf=\"source\"><i *ngIf=\"!source.valid\"\n            class=\"fa fa-exclamation-circle text-danger\" [title]=\"source.error\"></i>Source = {{source.text}}\n        </div>\n\n        <ng-template [ngIf]=\"inputParameters?.length > 0\">\n            <div class=\"row pt-2\">\n                <div class=\"col\">\n                    <h5>Inputs</h5>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col border bg-primary text-white font-weight-bold text-truncate\">Parameter</div>\n                <div class=\"col border bg-primary text-white font-weight-bold text-truncate\">Column / Value</div>\n            </div>\n            <ng-template ngFor let-parameter [ngForOf]=\"inputParameters\">\n                <div *ngFor=\"let value of parameter.values; let i = index;\" class=\"row\">\n                    <div class=\"col border bg-secondary text-white text-truncate\">\n                        <div *ngIf=\"i == 0\">{{ parameter.name}}</div>\n                    </div>\n                    <div class=\"col border border text-white bg-secondary text-truncate\" [title]=\"value.error\">\n                        <i *ngIf=\"!value.valid\" class=\"fa fa-exclamation-circle text-danger\" ></i>\n                        {{(parameter.values.length > 1 ? '[' + i + '] ' : '') + value.text}}\n                    </div>\n                </div>\n            </ng-template>\n        </ng-template>\n\n        <ng-template [ngIf]=\"mapParameters\">\n            <div *ngFor=\"let mapParameter of mapParameters\">\n                <div class=\"row pt-2\">\n                    <div class=\"col text-truncate\">\n                        <h5>{{mapParameter.name}}</h5>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div *ngFor=\"let parameter of mapParameter.parameters\"\n                        class=\"col border bg-primary text-white font-weight-bold text-truncate\">{{parameter.name}}</div>\n                </div>\n\n                <div *ngFor=\"let pValues of mapParameter.parameters[0].values; let i = index;\" class=\"row\">\n                    <div *ngFor=\"let parameter of mapParameter.parameters\"\n                        class=\"col border bg-secondary text-white text-truncate\" [title]=\"parameter.values[i].error\">\n                        <i *ngIf=\"!parameter.values[i].valid\" class=\"fa fa-exclamation-circle text-danger\" ></i>\n                        {{parameter.values[i].text}}\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template [ngIf]=\"outputParameters?.length > 0\">\n            <div class=\"row  pt-2\">\n                <div class=\"col\">\n                    <h5>Outputs</h5>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col border bg-primary text-white font-weight-bold text-truncate\">Parameter</div>\n                <div class=\"col border bg-primary text-white font-weight-bold text-truncate\">Column / Value</div>\n            </div>\n\n            <ng-template ngFor let-parameter [ngForOf]=\"outputParameters\">\n                <div *ngFor=\"let value of parameter.values; let i = index;\" class=\"row\">\n                    <div class=\"col border bg-secondary text-white text-truncate\">\n                        <div *ngIf=\"i == 0\">{{parameter.name}}</div>\n                    </div>\n                    <div class=\"col border border bg-secondary text-white text-truncate\" [title]=\"value.error\">\n                        <i *ngIf=\"!value.valid\" class=\"fa fa-exclamation-circle text-danger\" ></i>\n                        {{(parameter.values.length > 1 ? '[' + i + '] ' : '') + value.text}}\n                    </div>\n                </div>\n            </ng-template>\n        </ng-template>\n    </ng-template>\n</div>","import { Component, Input, Output, ViewChild, OnInit, OnChanges, OnDestroy, EventEmitter, ElementRef } from '@angular/core';\nimport { Observable, BehaviorSubject, Subscription, combineLatest } from 'rxjs';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { eFunctionType, eTransformType, eTransformItemType, DexihDatalinkTransformItem,\n    DexihDatalinkTransform, DexihDatalinkColumn, eTypeCode, DexihDatalinkTable, eDeltaType, eCleanActionItems, eCompare } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'mapping',\n    templateUrl: './mapping.component.html'\n})\nexport class MappingComponent implements OnInit, OnDestroy, OnChanges {\n    @Input() public datalinkTransformForm: FormGroup;\n    @Input() public allowStandard = false;\n    @Input() public allowMapping = false;\n    @Input() public allowAggregate = false;\n    @Input() public allowRow = false;\n    @Input() public allowCondition = false;\n    @Input() public allowValidation = false;\n    @Input() public allowOutput = false;\n    @Input() public allowGroup = false;\n    @Input() public allowJoin = false;\n    @Input() public allowSort = false;\n    @Input() public allowSeries = false;\n    @Input() public allowJoinNode = false;\n    @Input() public title: string;\n\n    @Output() public addMapping: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public removeMapping: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public updateMapping: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public hasChanged: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public onColumnDrop: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChild('mappingTable', { static: true }) public mappingTable: ElementRef;\n\n    private _subscription: Subscription;\n    private _changesSubscription: Subscription;\n\n    columns: Array<any>;\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    public functionType: eFunctionType;\n    public transformType: eTransformType;\n    public eTransformType = eTransformType;\n    public eTransformItemType = eTransformItemType;\n\n    columnGroups: Array<{group: string, columns: Array<DexihDatalinkColumn>}> = [];\n    inputDateColumns: DexihDatalinkColumn[];\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        private router: Router,\n        private route: ActivatedRoute\n    ) {\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n    }\n\n    ngOnChanges() {\n        try {\n            // this.columns = [{ name: 'function', title: 'Mapping', format: 'Md', class: 'functionClass' }];\n            this.columns = [];\n\n            // if (!this.allowSort) {\n            //     this.columns.push({ name: 'function', title: 'Function Name', format: '', class: 'functionClass' });\n            // }\n\n            // this.columns.push({ name: 'input', title: 'Input(s)', format: 'Md', class: 'inputClass' });\n\n            // if (this.allowOutput || this.allowJoinNode) {\n            //     this.columns.push({ name: 'output', title: 'Output(s)', format: 'Md', class: 'outputClass' });\n            // }\n\n            // if (this.allowSort) {\n            //     this.columns.push({ name: 'sortDirection', title: 'Direction', format: '' });\n            // }\n\n            if (this._subscription) { this._subscription.unsubscribe(); }\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.hubService.getRemoteLibrariesObservable()\n            ).subscribe(() => {\n\n                this.functionType = this.editDatalinkService.getFunctionType(this.datalinkTransformForm.value);\n                this.transformType = this.datalinkTransformForm.value.transformType;\n\n                this.updateTableData();\n\n                if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n                this._changesSubscription = this.datalinkTransformForm.valueChanges.subscribe(() => this.updateTableData());\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Mappings');\n        }\n    }\n\n    updateTableData() {\n        try {\n            if (this.datalinkTransformForm) {\n                let runTime = this.datalinkTransformForm.controls['runTime'].value;\n                let inputColumns = <DexihDatalinkColumn[]> runTime.inputColumns;\n                this.inputDateColumns = inputColumns.filter(c => c.dataType === eTypeCode.DateTime || c.dataType === eTypeCode.Date);\n                this.columnGroups = this.editDatalinkService.getColumnGroups(inputColumns);\n\n                let data = [];\n                let items = <FormArray>this.datalinkTransformForm.controls.dexihDatalinkTransformItems;\n                let filteredItems: Array<any> = [];\n\n                if (this.allowJoinNode) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.JoinNode));\n                }\n\n                if (this.allowGroup) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.Column));\n                }\n\n                if (this.allowStandard || this.allowJoin) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.BuiltInFunction\n                            || d.value.transformItemType === eTransformItemType.CustomFunction));\n                }\n\n                if (this.allowAggregate) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.AggregatePair));\n                }\n\n                if (this.allowMapping) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.ColumnPair));\n                }\n\n                if (this.allowCondition) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.FilterPair));\n                }\n\n                if (this.allowJoin) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.JoinPair));\n                }\n\n                if (this.allowRow) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.UnGroup));\n                }\n\n                if (this.allowSort) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.Sort));\n                }\n\n                filteredItems.sort((a, b) => a.value.position - b.value.position).forEach(item => {\n                    const transformItem: DexihDatalinkTransformItem = item.value;\n                    let functionItem = {\n                        datalinkTransformItem: transformItem,\n                        key: transformItem.key,\n                    }\n\n                    data.push(functionItem);\n                });\n\n                this._tableData.next(data);\n            }\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Mappings, update data');\n        }\n\n    }\n\n    private getItemFormGroup(datalinkTransformItemKey: number): FormGroup {\n        let items = <FormArray>this.datalinkTransformForm.controls['dexihDatalinkTransformItems'];\n        let item = <FormGroup>items.controls.find(c => c.value.key === datalinkTransformItemKey);\n        return item;\n    }\n\n    editMapping(item: DexihDatalinkTransformItem) {\n        let key = item.key;\n        let itemForm = this.getItemFormGroup(key);\n        let transformItemType = itemForm.value.transformItemType;\n\n        switch (transformItemType) {\n            case eTransformItemType.BuiltInFunction:\n                this.router.navigate(\n                    ['standard-function-edit', this.functionType, key],\n                    { relativeTo: this.route.parent });\n                break;\n            case eTransformItemType.CustomFunction:\n                this.router.navigate(\n                    ['custom-function-edit', this.functionType, key],\n                    { relativeTo: this.route.parent });\n                break;\n            case eTransformItemType.Column:\n            case eTransformItemType.JoinNode:\n            case eTransformItemType.GroupNode:\n            case eTransformItemType.ColumnPair:\n            case eTransformItemType.Sort:\n            case eTransformItemType.JoinPair:\n            case eTransformItemType.FilterPair:\n            case eTransformItemType.AggregatePair:\n            case eTransformItemType.Series:\n                this.router.navigate(['mapping-edit', transformItemType, key],\n                    { relativeTo: this.route.parent });\n                break;\n            case eTransformItemType.UnGroup:\n                this.router.navigate(['unGroup-edit', key], { relativeTo: this.route.parent });\n                break;\n}\n    }\n\n    deleteMapping(item: DexihDatalinkTransformItem) {\n        this.deleteSelected([item]);\n    }\n\n    deleteSelected(items: Array<DexihDatalinkTransformItem>) {\n        items.forEach(item => {\n            let key = item.key;\n            let itemForm = this.getItemFormGroup(key);\n            this.editDatalinkService.deleteDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n        });\n    }\n\n    // if a sort event has triggered from the table, then reset the positions of the datalink transform items.\n    datalinkItemSortChange(items: Array<DexihDatalinkTransformItem>) {\n        items.forEach((item, index) => {\n            let existingItems = <FormArray>this.datalinkTransformForm.controls.dexihDatalinkTransformItems;\n            let datalinkTransformItem = <FormGroup>existingItems.controls\n                .find(c => c.value.key === item.key);\n            if (datalinkTransformItem) {\n                datalinkTransformItem.controls.position.setValue(index);\n            }\n        });\n    }\n\n    // triggered when a source column is dropped onto the output column\n    newOutputDrop(inputColumn: DexihDatalinkColumn) {\n        this.onColumnDrop.emit({\n            inputColumn: inputColumn,\n            outputColumn: null\n        });\n    }\n\n    createJoinNode() {\n        let items = <FormArray>this.datalinkTransformForm.controls.dexihDatalinkTransformItems;\n        if (items.controls.find(d => d.value.transformItemType === eTransformItemType.JoinNode)) {\n            this.authService.informationDialog('Can not add node',  'Only one join node can be added.');\n            return;\n        }\n\n        let joinTable = this.datalinkTransformForm.value.joinDatalinkTable;\n\n        let item = new DexihDatalinkTransformItem();\n        let outputColumn: DexihDatalinkColumn = new DexihDatalinkColumn();\n        outputColumn.position = 0;\n        outputColumn.key = this.hubService.getHubCache().getNextSequence();\n        outputColumn.name = joinTable.name;\n        outputColumn.logicalName = joinTable.name;\n        let io = new InputOutputColumns();\n        let columns = joinTable.dexihDatalinkColumns.map((col, index) => {\n            let childColumn = io.copyDatalinkColumn(col, index, 'Join Node');\n            childColumn.key = this.hubService.getHubCache().getNextSequence();\n            childColumn.datalinkTableKey = null;\n            return childColumn;\n        });\n        outputColumn.childColumns = columns;\n        outputColumn.dataType = eTypeCode.Node;\n\n        item.position = -1;\n        item.datalinkTransformKey = this.datalinkTransformForm.value.key;\n        item.targetDatalinkColumn = outputColumn;\n        item.isValid = true;\n        item.transformItemType = eTransformItemType.JoinNode;\n\n        let itemForm = this.editDatalinkService.hubFormsService.datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n        this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n    }\n\n    createGroupNode() {\n        let items = <FormArray>this.datalinkTransformForm.controls.dexihDatalinkTransformItems;\n        if (items.controls.find(d => d.value.transformItemType === eTransformItemType.GroupNode)) {\n            this.authService.informationDialog('Can not add node',  'Only one group node can be added.');\n            return;\n        }\n\n        let item = new DexihDatalinkTransformItem();\n        let outputColumn: DexihDatalinkColumn = new DexihDatalinkColumn();\n        outputColumn.position = 0;\n        outputColumn.key = this.hubService.getHubCache().getNextSequence();\n        outputColumn.name = 'Group';\n        outputColumn.logicalName = 'Group';\n        outputColumn.dataType = eTypeCode.Node;\n\n        item.position = -1;\n        item.datalinkTransformKey = this.datalinkTransformForm.value.key;\n        item.targetDatalinkColumn = outputColumn;\n        item.isValid = true;\n        item.transformItemType = eTransformItemType.GroupNode;\n\n        let itemForm = this.editDatalinkService.hubFormsService.datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n        this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n    }\n\n    newMapping(itemType: eTransformItemType) {\n        this.router.navigate(['mapping-edit', itemType], { relativeTo: this.route });\n    }\n\n    addAll() {\n        let runTime = this.datalinkTransformForm.controls['runTime'].value;\n        let inputColumns = <DexihDatalinkColumn[]> runTime.inputColumns;\n\n        inputColumns.forEach(inputColumn => {\n            this.createMapping(inputColumn);\n        });\n    }\n\n    addGroup(group: {group: string, columns: Array<DexihDatalinkColumn>}) {\n        group.columns.forEach(inputColumn => {\n            this.createMapping(inputColumn);\n        });\n    }\n\n    private createMapping(inputColumn: DexihDatalinkColumn) {\n        let runTime = this.datalinkTransformForm.controls['runTime'].value;\n        let outputColumns = <DexihDatalinkColumn[]> runTime.outputColumns;\n\n        if ( outputColumns.findIndex(c => c.name === inputColumn.name) >= 0) {\n            return;\n        }\n\n        let item = new DexihDatalinkTransformItem();\n        let io = new InputOutputColumns();\n        let outputColumn = io.copyDatalinkColumn(inputColumn, 0, 'mapping');\n        outputColumn.key = this.hubService.getHubCache().getNextSequence();\n        if (outputColumn.childColumns) {\n            outputColumn.childColumns.forEach(col => {\n                col.key = this.hubService.getHubCache().getNextSequence();\n            });\n        }\n        outputColumn.datalinkTableKey = null;\n        item.datalinkTransformKey = this.datalinkTransformForm.value.key;\n        item.sourceDatalinkColumn = inputColumn;\n        item.targetDatalinkColumn = outputColumn;\n        item.transformItemType = eTransformItemType.ColumnPair;\n        item.isValid = true;\n        let itemForm = this.editDatalinkService.hubFormsService\n            .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n        this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n    }\n\n    // joins the column to the valid from/to columns\n    addValidFromTo(column: DexihDatalinkColumn) {\n        let joinTable = <DexihDatalinkTable> this.datalinkTransformForm.value.joinDatalinkTable;\n        let validFrom = joinTable.dexihDatalinkColumns.find(c => c.deltaType === eDeltaType.ValidFromDate);\n        let validTo = joinTable.dexihDatalinkColumns.find(c => c.deltaType === eDeltaType.ValidToDate);\n        if ( !validFrom || !validTo ) {\n            this.authService.informationDialog('No valid from',  'The join table does not contain a columns with a valid from/to delta type.');\n            return;\n        }\n\n        let item = new DexihDatalinkTransformItem();\n        item.sourceDatalinkColumn = column;\n        item.joinDatalinkColumn = validFrom;\n        item.transformItemType = eTransformItemType.JoinPair;\n        item.filterCompare = eCompare.GreaterThanEqual;\n        let itemForm = this.editDatalinkService.hubFormsService.datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n        this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n\n        item = new DexihDatalinkTransformItem();\n        item.sourceDatalinkColumn = column;\n        item.joinDatalinkColumn = validTo;\n        item.transformItemType = eTransformItemType.JoinPair;\n        item.filterCompare = eCompare.LessThan;\n        itemForm = this.editDatalinkService.hubFormsService.datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n        this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n\n    }\n}\n","<d-widget [title]=\"title\" [scrollable]=\"true\" [showExpandButton]=\"true\">\n\n    <d-table [enableMultiSelect]=\"true\" [enableManualSort]=\"true\" [columns]=\"columns\" [dataObservable]=\"tableData\" [enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n        (rowClick)=\"editMapping($event)\" (onSortChanged)=\"datalinkItemSortChange($event)\"\n        tableClass=\"table table-striped table-hover m-0\" #mappingTable dropZone (dropData)=\"newOutputDrop($event)\"\n        zone=\"input-column\" dropAllowedClass=\"drop-zone-green\" actionHeading=\"Mappings\">\n\n        <ng-template #selectedItemAction select=\"selectedItemAction\" let-datalinkTransformItem=\"item\">\n            <d-button-edit class=\"mr-1 \" (click)=\"editMapping(datalinkTransformItem)\" title=\"Edit this mapping\">\n            </d-button-edit>\n        </ng-template>\n\n        <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n            <d-button-delete class=\"mr-1 \" (click)=\"deleteSelected(items)\"\n                title=\"Delete selected mapping functions\"></d-button-delete>\n        </ng-template>\n\n        <ng-template #rowAction let-item=\"item\">\n            <mapping-item (click)=\"editMapping(item)\" [transform]=\"datalinkTransformForm.value\"\n                [transformItem]=\"item.datalinkTransformItem\" [allowCondition]=\"allowCondition\"></mapping-item>\n        </ng-template>\n\n        <ng-template #actions let-items=\"items\">\n            <ng-template [ngIf]=\"allowMapping\">\n                <d-button-splitdropdown class=\"mr-1\" (buttonClick)=\"newMapping(eTransformItemType.ColumnPair)\"\n                    buttonClass=\"btn-primary\" iconClass=\"fa fa-map\"\n                    title=\"Create a new mapping, or drop a column to create new mapping.\" text='Mapping'>\n                    <li><a class=\"dropdown-item\"  title=\"Add all\" (click)=\"addAll()\">Add all input columns</a></li>\n                    <li *ngFor=\"let columnGroup of columnGroups\"><a class=\"dropdown-item\"  [title]=\"'Add all ' + columnGroup.group\" (click)=\"addGroup(columnGroup)\">Add all {{columnGroup.group}}</a></li>\n                </d-button-splitdropdown>\n            </ng-template>\n            <ng-template [ngIf]=\"allowCondition && !allowValidation\">\n                <d-button routerLink='mapping-edit/{{eTransformItemType.FilterPair}}'\n                    buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-filter\" title=\"Create a simple filter\">Filter\n                </d-button>\n            </ng-template>\n            <ng-template [ngIf]=\"allowAggregate\">\n                <d-button routerLink='mapping-edit/{{eTransformItemType.AggregatePair}}'\n                    buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-cubes\" title=\"Create a simple aggregate\">\n                    Aggregate</d-button>\n            </ng-template>\n            <ng-template [ngIf]=\"allowStandard || allowAggregate || allowCondition || allowRow || allowValidation\">\n                <d-button [routerLink]=\"['standard-function-edit', functionType]\"\n                    buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-dollar\" title=\"Create a new standard function\">\n                    Standard</d-button>\n                <d-button [routerLink]=\"['custom-function-edit', functionType]\" buttonClass=\"btn-primary mr-1 \"\n                    iconClass=\"fa fa-code\" title=\"Create a new custom function\">Custom</d-button>\n            </ng-template>\n            <ng-template [ngIf]=\"allowRow\">\n                <d-button routerLink='unGroup-edit' buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-map\"\n                    title=\"Un-Group a Node\">Un-Group</d-button>\n            </ng-template>\n            <ng-template [ngIf]=\"allowJoin\">\n                <d-button routerLink='mapping-edit/{{eTransformItemType.JoinPair}}'\n                    buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-link\" title=\"Create a new join\">Join\n                </d-button>\n                <d-button [routerLink]=\"['standard-function-edit', functionType]\"\n                    buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-dollar\" title=\"Create a new standard filter\">\n                    Filter</d-button>\n                <d-button [routerLink]=\"['custom-function-edit', functionType]\" buttonClass=\"btn-primary mr-1 \"\n                    iconClass=\"fa fa-code\" title=\"Create a new custom filter\">Custom Filter</d-button>\n\n                    <d-button-dropdown class=\"mr-1\" buttonClass=\"btn-primary\" iconClass=\"fa fa-calendar\"\n                    title=\"Add a joins between the column and the valid from/to\" text='Valid From/To'>\n                    <li *ngFor=\"let column of inputDateColumns\"><a class=\"dropdown-item\"  [title]=\"column.name\" (click)=\"addValidFromTo(column)\">{{column.name}}</a></li>\n                </d-button-dropdown>\n            </ng-template>\n            <ng-template [ngIf]=\"allowSort\">\n                <d-button routerLink='mapping-edit/{{eTransformItemType.Sort}}' buttonClass=\"btn-primary mr-1 \"\n                    iconClass=\"fa fa-sort-alpha-asc\" title=\"New Sort\">Sort</d-button>\n            </ng-template>\n            <ng-template [ngIf]=\"allowGroup\">\n                <d-button routerLink='mapping-edit/{{eTransformItemType.Column}}'\n                    buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-list\" title=\"New Group\">Group</d-button>\n            </ng-template>\n            <ng-template [ngIf]=\"allowJoinNode\">\n                <d-button (click)=\"createJoinNode()\" buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-list\"\n                    title=\"Join Node\">Node</d-button>\n            </ng-template>\n        </ng-template>\n    </d-table>\n</d-widget>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { TransformReference, transformTypes } from '../../../hub.remote.models';\n\n\n@Component({\n    selector: 'datalink-edit-new-transform',\n    templateUrl: './datalink-edit-new-transform.component.html'\n})\n\nexport class DatalinkEditNewTransformComponent implements OnInit, OnDestroy {\n\n    private _subscription: Subscription;\n\n    public transforms: Array<{transformReference: TransformReference, icon: string}>;\n    public position: number;\n\n    constructor(\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        private authService: AuthService,\n        private route: ActivatedRoute,\n        private router: Router\n\n    ) { }\n\n    ngOnInit() {\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n            ).subscribe(async result => {\n                this.transforms = [];\n                let userConfigTransforms = await this.hubService.GetUserConfigTransformReference();\n\n                userConfigTransforms.forEach(transform => {\n                    let transformType = transformTypes.find(c => c.key === transform.transformType);\n\n                    let icon = '';\n                    if (transformType) {\n                        icon = transformType.icon;\n                    }\n\n                    this.transforms.push({transformReference: transform, icon: icon })\n                })\n\n                this.position = + result[1]['position'];\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'New Transform');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n\n    insert(transform: TransformReference) {\n        let newDatalinkTransformForm = this.editDatalinkService.insertDatalinkTransform(this.position, transform);\n        this.router.navigate(['transform', newDatalinkTransformForm.value.key], { relativeTo: this.route.parent });\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n}\n","<d-widget-section title='Select a Transform' [padding]=\"true\">\n    <div class=\"d-flex flex-wrap justify-content-around\">\n            <a *ngFor=\"let transform of transforms\" (click)=\"insert(transform.transformReference)\" href=\"javascript:void(0)\" \n            class=\"btn btn-outline-primary p-0 m-3\" style=\"width:400px\">\n                <div class=\"d-flex h-100\">\n                    <div class=\"border-right border-primary p-3\" style=\"min-width:140px\">\n                        <div class=\"d-block\">\n                            {{transform.transformReference.name}}\n                        </div>\n                        <i class=\"fa fa-4x\" [ngClass]=\"transform.icon\"></i>\n                    </div>\n                    <div class=\"p-3 text-left\">\n                        {{transform.transformReference.description}}\n                    </div>\n                </div>\n            </a>\n    </div>\n</d-widget-section>","export { OutputColumnComponent } from './output-column.component';\nexport { OutputColumnsComponent } from './output-columns.component';\n","import { Component, Input, Output, OnInit, OnChanges, EventEmitter, OnDestroy } from '@angular/core';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { HubCache, eMappingStatus, MappingStatusInfo, lineageMappingStatuses, impactMappingStatuses } from '../../../hub.models';\nimport { eObjectUse, ColumnUsageNode, eDatalinkObjectType } from '../../../hub.lineage.models';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { LogFactory, eLogLevel } from '../../../../../logging';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { DexihDatalinkColumn, DexihTable, eTypeCode } from '../../../../shared/shared.models';\n\n\n@Component({\n\n    selector: 'output-column',\n    templateUrl: './output-column.component.html'\n})\nexport class OutputColumnComponent implements OnInit, OnDestroy, OnChanges {\n    @Input() public column: DexihDatalinkColumn = null;\n    @Input() public datalinkTransformForm: FormGroup;\n    @Input() public inputTables: Array<DexihTable> = null;\n    @Output() public inputOutputDrop: EventEmitter<{inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn}>\n            = new EventEmitter<{inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn}>();\n\n    private _subscription: Subscription;\n\n    private hubCache: HubCache;\n    private datalinkForm: FormGroup;\n\n    eMappingStatus = eMappingStatus;\n\n    public mappingStatusInfoLineage: MappingStatusInfo;\n    public mappingStatusInfoImpact: MappingStatusInfo;\n\n    public mappingStatusLineage: eMappingStatus;\n\n    childColumns: DexihDatalinkColumn[];\n\n    public logger = new LogFactory('output-column.component');\n    public logCount = 0;\n\n    public eTypeCode = eTypeCode;\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n              this.hubCache = result[0];\n              this.datalinkForm = result[1];\n\n              this.logger.LogC(() => `Subscription count: ${this.logCount++}`, eLogLevel.Trace);\n\n\n            this.childColumns = this.column.childColumns;\n\n              this.refreshStatus();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Output Column');\n        }\n    }\n\n    ngOnChanges() {\n        this.refreshStatus();\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    refreshStatus() {\n        if (this.datalinkForm) {\n            let columnUsage = new ColumnUsageNode(\n                eDatalinkObjectType.Transform,\n                eObjectUse.Target,\n                this.datalinkForm.value,\n                this.column,\n                null,\n                this.datalinkTransformForm.value,\n                null,\n                eMappingStatus.NotMapped,\n                this.hubCache\n                );\n\n                this.mappingStatusLineage = columnUsage.createDatalinkLineage(false);\n                this.mappingStatusInfoLineage = lineageMappingStatuses.find(c => c.key === this.mappingStatusLineage);\n\n                let mappingStatusImpact = columnUsage.createDatalinkImpact(true);\n\n                if (this.mappingStatusLineage === eMappingStatus.NotMapped && mappingStatusImpact !== eMappingStatus.AutoGenerate) {\n                    mappingStatusImpact = eMappingStatus.NotMapped;\n                }\n                this.mappingStatusInfoImpact = impactMappingStatuses.find(c => c.key === mappingStatusImpact);\n        }\n    }\n\n\n  editColumn() {\n      if (this.column.key && (this.mappingStatusLineage === eMappingStatus.Mapped\n        || this.mappingStatusLineage === eMappingStatus.MappedToNothing)) {\n        this.router.navigate(['column', this.column.key], { relativeTo: this.route.parent });\n      } else {\n          this.authService.informationDialog('Can not edit column',\n          // tslint:disable-next-line:max-line-length\n          'This column is not created by the current transform (i.e. a pass-through or target column).  To edit a column first create a mapping.')\n      }\n    }\n}\n","<div class=\"list-group-item p-0 rounded-0\" *ngIf=\"mappingStatusInfoLineage.key != eMappingStatus.Mapped\" [title]=\"column.logicalName + ' ' + column.dataType\" (click)=\"editColumn()\">\n    <div class=\"d-flex flex-row\">\n\n        <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoLineage.statusClass\" [title]=\"mappingStatusInfoLineage.name\"></i>\n        <span class=\"flex-fill input-group-text ellipsis-overflow rounded-0 border-0\">\n            {{column.logicalName}}\n        </span>\n        <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoImpact.statusClass\" [title]=\"mappingStatusInfoImpact.name\"></i>\n    </div>\n</div>\n<div class=\"list-group-item p-0 rounded-0\" *ngIf=\"mappingStatusInfoLineage.key == eMappingStatus.Mapped\" [title]=\"column.logicalName + ' ' + eTypeCode[column.dataType]\"\n    (click)=\"editColumn()\">\n    <div class=\"d-flex flex-row\">\n\n        <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoLineage.statusClass\" [title]=\"mappingStatusInfoLineage.name\"></i>\n        <span class=\"flex-fill input-group-text ellipsis-overflow rounded-0 border-0\">\n            {{column.logicalName}}\n        </span>\n\n        <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoImpact.statusClass\" [title]=\"mappingStatusInfoImpact.name\"></i>\n    </div>\n</div>\n<!-- <div *ngIf=\"childColumns?.length > 0\" class=\"p-2\">\n    <output-column *ngFor=\"let childColumn of childColumns\" [column]=\"childColumn\" [datalinkTransformForm]=\"datalinkTransformForm\"></output-column>\n</div> -->","import { Component, Input, Output, OnInit, OnChanges, OnDestroy, EventEmitter } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { DexihDatalinkColumn } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'output-columns',\n    templateUrl: './output-columns.component.html'\n})\nexport class OutputColumnsComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() public datalinkTransformForm: FormGroup;\n    @Input() public allowMappingOutputs = true;\n\n    @Output() public inputOutputDrop: EventEmitter<{ inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn }>\n        = new EventEmitter<{ inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn }>();\n\n    private _outputColumnsSubscribe: Subscription;\n    columns: Array<DexihDatalinkColumn> = [];\n    columnGroups: Array<{group: string, columns: Array<DexihDatalinkColumn>}> = [];\n\n    constructor(\n    ) {\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnChanges() {\n        if (this._outputColumnsSubscribe) { this._outputColumnsSubscribe.unsubscribe(); }\n        this.refreshColumns(this.datalinkTransformForm.controls.runTime.value.transformColumns);\n        this._outputColumnsSubscribe = this.datalinkTransformForm.controls.runTime.valueChanges.subscribe(() => {\n            this.refreshColumns(this.datalinkTransformForm.controls.runTime.value.transformColumns);\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._outputColumnsSubscribe) { this._outputColumnsSubscribe.unsubscribe(); }\n    }\n\n    refreshColumns(columns: DexihDatalinkColumn[]) {\n        let previousGroup: string = null;\n\n        let columnGroups: Array<{group: string, columns: Array<DexihDatalinkColumn>}> = [];\n        let cols: Array<DexihDatalinkColumn> = null;\n\n        columns\n            .filter(c => c.isValid)\n            .sort((a, b) => a.position - b.position)\n            .forEach(column => {\n            let group = column.columnGroup ? column.columnGroup : '(un-grouped)';\n            if (group !== previousGroup) {\n                if (cols) {\n                    columnGroups.push({group: previousGroup, columns: cols});\n                }\n                previousGroup = group;\n                cols = [];\n            }\n            cols.push(column);\n        });\n\n        if (cols && cols.length > 0) {\n            columnGroups.push({group: previousGroup, columns: cols});\n        }\n\n        this.columnGroups = columnGroups;\n    }\n\n    // triggered when a source column is dropped onto the output column\n    newOutputDrop(inputColumn: DexihDatalinkColumn) {\n        let outputColumn = this.columns.find(c => c.name === inputColumn.name);\n        this.inputOutputDrop.emit({\n            inputColumn: inputColumn,\n            outputColumn: outputColumn\n        });\n    }\n\n    newInputOutputDrop(inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn) {\n        this.inputOutputDrop.emit({\n            inputColumn: inputColumn,\n            outputColumn: outputColumn\n        });\n    }\n}\n","<div *ngIf=\"datalinkTransformForm\" cdkDropList #cdkDropList=\"cdkDropList\">\n    <li *ngIf=\"allowMappingOutputs\" class=\"list-group-item p-1 dexih-overflow b-0\" style=\"height: 40px;\" title=\"drop to create new mapping...\" dropZone (dropData)=\"newOutputDrop($event)\" [zone]=\"allowMappingOutputs ? 'input-column' : ''\" dropAllowedClass=\"drop-zone-green\">\n        &nbsp;(Drop&nbsp;Column)\n    </li>\n    <d-widget-section *ngFor=\"let columnGroup of columnGroups\" [title]=\"columnGroup.group\" [padding]=\"false\" [showExpandButton]=\"true\">\n        <div *ngFor=\"let column of columnGroup.columns | fieldSort : 'position' | isValidFilter; let i = index\" dropZone (dropData)=\"newInputOutputDrop($event, column)\" [zone]=\"allowMappingOutputs ? 'input-column' : ''\" dropAllowedClass=\"drop-zone-green\" >\n            <output-column [datalinkTransformForm]='datalinkTransformForm' [column]='column'></output-column>\n        </div>\n    </d-widget-section>\n</div>","export * from './input-parameter.component';\nexport * from './output-parameter.component';\n","import { Component, Input, Output, OnInit, OnDestroy, EventEmitter, OnChanges } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Subscription} from 'rxjs';\nimport { TypeCodes, eBasicType, TypeFunctions } from '../../../hub.remote.models';\nimport { HubService } from '../../../hub.service';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { DexihDatalinkColumn, DexihTableColumn, DexihFunctionParameter, eTypeCode, DexihTable, DexihDatalinkTarget } from '../../../../shared/shared.models';\nimport { DatalinkEditService } from '../datalink-edit.service';\n\nexport class InputValues {\n    public staticValue: string;\n    public textItems: string[];\n    public name: string;\n    public inputParameterSubscription: Subscription;\n    public datalinkColumnSubscription: Subscription;\n}\n\n@Component({\n\n    selector: 'input-parameter',\n    templateUrl: './input-parameter.component.html'\n})\nexport class InputParameterComponent implements OnInit, OnDestroy, OnChanges {\n\n    @Input() public allowDataTypeSelect = false;\n    @Input() public allowNameSelect = false;\n    @Input() public allowAdd = false;\n    @Input() public allowRemove = false;\n    @Input() public inputParameterForms: FormGroup[] = [];\n    @Input() public inputColumns: Array<DexihDatalinkColumn> = null;\n    @Input() public updateParameterName = false;\n    @Input() public rank = 0;\n    @Input() public nodeDatalinkColumnKey = null;\n\n    @Input() public outputParameterForms: FormGroup[] = null;\n    @Input() public outputColumns: Array<DexihTableColumn> = null;\n    @Input() public datalinkTargets: Array<DexihDatalinkTarget> = null;\n    @Input() public variables = [];\n\n    @Output() public addParameter: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n    @Output() public removeParameter: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n\n    private type: TypeFunctions;\n    eBasicType = eBasicType;\n    typeCodes = TypeCodes;\n    eTypeCode = eTypeCode;\n\n    public columns: Array<DexihTableColumn>;\n    inputColumnGroups: Array<{group: string, columns: Array<DexihDatalinkColumn>}> = [];\n\n    outputTables: Array<DexihTable>;\n\n    public inputs: InputValues[] = [];\n\n    ignoreChanges = false;\n\n    newColumn: DexihDatalinkColumn;\n\n    public errors;\n\n    constructor(public hubService: HubService, public editDatalinkService: DatalinkEditService) {\n    }\n\n    ngOnInit() {\n        this.inputs = this.inputParameterForms.map(param => new InputValues());\n        this.errors = this.inputParameterForms.map(a => this.editDatalinkService.hubFormsService.getFormErrorMessages(a, true));\n\n        let io = new InputOutputColumns();\n        if (this.nodeDatalinkColumnKey) {\n            this.inputColumns = io.getAvailableColumns(this.inputColumns, this.nodeDatalinkColumnKey, 0);\n        }\n\n        if (this.rank > 0 && this.inputColumns) {\n            let tables = [];\n            this.inputColumns = this.inputColumns.filter(c => c.rank > 0);\n        }\n\n        if (this.inputColumns) {\n            this.inputColumnGroups = this.editDatalinkService.getColumnGroups(this.inputColumns);\n        } else {\n            this.inputColumnGroups = [];\n        }\n\n        for ( let i = 0; i < this.inputParameterForms.length; i++) {\n            let inputParameter: DexihFunctionParameter = this.inputParameterForms[i].value;\n\n            if (inputParameter.datalinkColumn || inputParameter.value === null || inputParameter.value === undefined) {\n                this.inputs[i].staticValue = '';\n            } else {\n                this.inputs[i].staticValue = inputParameter.value;\n            }\n\n            this.inputs[i].textItems = [];\n\n            if (inputParameter.dataType === eTypeCode.Boolean) {\n                this.inputs[i].textItems = this.inputs[i].textItems.concat(['true', 'false' ]);\n                this.inputs[i].staticValue = this.inputs[i].staticValue.toString();\n            }\n\n            if (inputParameter['runTime'] && inputParameter['runTime'].functionParameter.listOfValues) {\n                this.inputs[i].textItems = this.inputs[i].textItems.concat(inputParameter['runTime'].functionParameter.listOfValues);\n            }\n\n            this.inputs[i].textItems = this.inputs[i].textItems.concat(this.variables);\n        }\n\n        this.updateItems();\n\n        for ( let i = 0; i < this.inputParameterForms.length; i++) {\n            let runTime = this.inputParameterForms[i].value.runTime;\n            if (!runTime || !runTime.functionParameter || !runTime.functionParameter.listOfValues) {\n                this.inputs[i].inputParameterSubscription = this.inputParameterForms[i].valueChanges.subscribe(() => {\n                    if (!this.ignoreChanges) {\n                        this.updateItems();\n                        this.ignoreChanges = true;\n                        if (this.inputParameterForms[i].controls.datalinkColumn.value) {\n                            this.inputParameterForms[i].controls.value.setValue(null);\n                        } else {\n                            this.inputParameterForms[i].controls.value.setValue(this.inputs[i].staticValue);\n                        }\n                        this.ignoreChanges = false;\n                    }\n                    this.errors[i] = this.editDatalinkService.hubFormsService.getFormErrorMessages(this.inputParameterForms[i], true);\n                });\n            }\n\n            if (this.updateParameterName) {\n                this.inputs[i].datalinkColumnSubscription\n                    = this.inputParameterForms[i].controls.datalinkColumn.valueChanges.subscribe(value => {\n                    if (value) {\n                        this.inputParameterForms[i].controls.dataType.setValue(value.dataType);\n                        this.inputParameterForms[i].controls.name.setValue(value.name);\n                    } else {\n                        this.inputParameterForms[i].controls.dataType.setValue(eTypeCode.String);\n                        this.inputParameterForms[i].controls.name.setValue('');\n                    }\n                    this.errors[i] = this.editDatalinkService.hubFormsService.getFormErrorMessages(this.inputParameterForms[i], true);\n                });\n            }\n        }\n    }\n\n    updateStatic(event: any, i: number) {\n        this.inputParameterForms[i].controls.value.setValue(event);\n    }\n\n    ngOnDestroy() {\n        if (this.inputs) {\n            this.inputs.forEach(input => {\n                if (input.datalinkColumnSubscription) { input.datalinkColumnSubscription.unsubscribe(); }\n                if (input.inputParameterSubscription) { input.inputParameterSubscription.unsubscribe(); }\n            });\n        }\n    }\n\n    ngOnChanges() {\n        let table = new DexihTable();\n        table.name = 'Output Columns';\n        table.dexihTableColumns = this.outputColumns;\n\n        this.outputTables = [table];\n\n        if (this.datalinkTargets) {\n            this.datalinkTargets.forEach(target => {\n                this.outputTables.push(target['table']);\n            });\n        }\n    }\n\n    updateItems() {\n        for ( let i = 0; i < this.inputParameterForms.length; i++) {\n            let inputParameter: DexihFunctionParameter = this.inputParameterForms[i].value;\n            this.type = new TypeFunctions(inputParameter.dataType, null, null, null);\n\n            if (!this.allowDataTypeSelect && !this.allowNameSelect) {\n                this.inputs[i].name = inputParameter.name + '(' + this.type.dataType + ')' + (this.rank > 0 ? '[]' : '')\n            } else {\n                this.inputs[i].name = inputParameter.name\n            }\n        }\n    }\n\n    add() {\n        this.addParameter.emit(this.inputParameterForms[0]);\n    }\n\n    remove() {\n        this.removeParameter.emit(this.inputParameterForms[0]);\n    }\n\n    updateNewColumn(value: string, i: number) {\n        let current = this.outputParameterForms[i].controls.targetDatalinkColumn.value;\n        if (value && (!current || value !== current.name) ) {\n            if (!this.newColumn) {\n                this.newColumn = new DexihDatalinkColumn();\n                this.newColumn.position = 1000 - this.newColumn.key;\n                this.newColumn.key = this.hubService.getHubCache().getNextSequence();\n            }\n\n            this.newColumn.dataType = this.outputParameterForms[i].controls.dataType.value;\n            this.newColumn.name = value;\n            this.newColumn.logicalName = value;\n\n            this.outputParameterForms[i].controls.datalinkColumn.setValue(this.newColumn);\n\n            this.updateItems();\n        }\n    }\n\n}\n","    <section>\n        <div class=\"input-group d-flex\">\n            <form *ngFor=\"let inputParameterForm of inputParameterForms; let i = index;\" [formGroup]=\"inputParameterForm\" class=\"flex-fill\">\n                <div class=\"input-group\">\n                    <div *ngIf=\"!allowNameSelect\" class=\"input-group-prepend\">\n                        <div class=\"input-group-text\">\n                            {{inputParameterForm.value.runTime?.functionParameter?.name + \"(\" + eTypeCode[type.dataType] + \")\"}} {{rank > 0 ? \"[]\" : \"\"}}\n                        </div>\n                    </div>\n\n                    <div *ngIf=\"allowNameSelect == true\" class=\"form-control p-0\">\n                        <form-input [border]=\"false\" formControlName=\"name\" type=\"text\"\n                            placeholder=\"Enter a name for the parameter\">\n                        </form-input>\n                    </div>\n\n                    <div *ngIf=\"!inputParameterForm.value.runTime?.functionParameter?.isLabel\" class=\"form-control p-0\">\n                        <form-select formControlName=\"datalinkColumn\" [border]=\"false\"\n                            [items]=\"inputColumnGroups\" parentName=\"group\" childItems=\"columns\" itemKey=\"key\" itemName=\"logicalName\" [(textValue)]=\"inputs[i].staticValue\"\n                            [enableKeySelect]=\"false\" [enableTextEntry]=\"rank === 0\" [enableTextEntryMatch]=\"false\" [setTextEntryToValue]=\"false\"\n                            (textValueChange)=\"updateStatic($event, i)\"\n                            [textEntryNote]=\"rank > 0 ? 'Select an array type source (otherwise select add to build an array)' : 'Select a column or enter a static value.'\" \n                            [textEntryItems]=\"inputs[i].textItems\" textEntryItemsTitle=\"Variables\"\n                            [errors]=\"errors[i].datalinkColumn\"\n                            >\n                        </form-select>\n                    </div>\n\n                    <div *ngIf=\"inputParameterForm.value.runTime?.functionParameter?.isLabel\" class=\"form-control p-0\">\n                        <form-input [border]=\"false\" [(ngModel)]=\"inputs[i].staticValue\" [ngModelOptions]=\"{standalone: true}\"\n                            type=\"text\" placeholder=\"Enter a static value.\">\n                        </form-input>\n                    </div>\n\n                    <div *ngIf=\"allowDataTypeSelect == false && allowNameSelect == true\" class=\"input-group-text\">\n                        {{\"(\" + eTypeCode[type.dataType] + \")\"}}\n                    </div>\n\n                    <div *ngIf=\"allowDataTypeSelect == true\" class=\"form-control p-0\">\n                        <form-select [border]=\"false\" formControlName=\"dataType\" [items]=\"typeCodes\" itemKey=\"key\"\n                            itemName=\"name\" >\n                        </form-select>\n                    </div>\n                    <div *ngIf=\"allowDataTypeSelect == true\" class=\"form-control\">\n                        <form-checkbox label=\"Allow Null\" [border]=\"false\" formControlName=\"allowNull\"></form-checkbox>\n                    </div>\n\n                </div>\n            </form>\n\n            <form *ngFor=\"let outputParameterForm of outputParameterForms; let i = index;\" [formGroup]=\"outputParameterForm\" class=\"ml-1  flex-fill\">\n                <!-- <form-select class=\"flex-grow-1\" [border]=\"false\" class=\"form-control p-0\"\n                    formControlName=\"datalinkColumn\" [items]=\"outputColumns\" itemName=\"logicalName\" itemKey=\"key\"\n                    [enableKeySelect]=\"false\" [enableTextEntry]=\"true\" textEntryNote=\"Enter a value to add a new column\"\n                    (textValueChange)=\"updateNewColumn($event, i)\">\n                </form-select> -->\n                <form-select class=\"flex-grow-1\" [border]=\"false\" class=\"form-control p-0\" \n                    formControlName=\"datalinkColumn\" [items]=\"outputTables\" parentName=\"name\" childItems=\"dexihTableColumns\" itemKey=\"key\"\n                    itemName=\"logicalName\" [enableKeySelect]=\"false\" [enableTextEntry]=\"true\" [setTextEntryToValue]=\"false\"\n                    textEntryNote=\"Enter new column name, or select existing\"\n                    (textValueChange)=\"updateNewColumn($event, i)\">\n                </form-select>\n            </form>\n\n            <div *ngIf=\"allowAdd && allowRemove\" class=\"input-group-append flex-shrink-1 ml-1 \">\n                <button *ngIf=\"allowAdd\" class=\"btn btn-light\" type=\"button\" (click)=\"add()\" [disabled]=\"!allowAdd\" value=\"Add\">\n                    <i class=\"fa fa-plus-square-o\"></i>\n                </button>\n                <button *ngIf=\"allowRemove\" class=\"btn btn-light\" type=\"button\" (click)=\"remove()\" [disabled]=\"!allowRemove\" value=\"Remove\">\n                    <i class=\"fa fa-minus-square-o\"></i>\n                </button>\n            </div>\n        </div>\n        <small *ngIf=\"!allowAdd && inputParameterForms[0].value.runTime?.functionParameter?.description\" class=\"form-text text-muted\">\n            <markdown [data]=\"inputParameterForms[0].value.runTime.functionParameter.description\"></markdown>\n        </small>\n    </section>\n","import { Component, Input, Output, ViewChild, OnInit, OnDestroy, EventEmitter, OnChanges } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { HubService } from '../../../hub.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { TypeFunctions, TypeCodes, eBasicType } from '../../../hub.remote.models';\nimport { DexihTableColumn, DexihDatalinkColumn, eTypeCode, DexihDatalinkTarget, DexihDatalinkTable, DexihTable } from '../../../../shared/shared.models';\nimport { DatalinkEditService } from '../datalink-edit.service';\n\n@Component({\n\n    selector: 'output-parameter',\n    templateUrl: './output-parameter.component.html'\n})\nexport class OutputParameterComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input() public allowDataTypeSelect = false;\n    @Input() public allowNameSelect = false;\n    @Input() public allowAdd = false;\n    @Input() public allowRemove = false;\n    @Input() public outputParameterForm: FormGroup = null;\n    @Input() public outputColumns: Array<DexihTableColumn> = null;\n    @Input() public datalinkTargets: Array<DexihDatalinkTarget> = null;\n    @Input() public updateParameterName = false;\n    @Input() public rank = 0;\n\n    @Output() public addParameter: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public removeParameter: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public hasChanged: EventEmitter<any> = new EventEmitter<any>();\n\n    private _datalinkColumnSubscription: Subscription;\n    private _parameterSubscription: Subscription;\n    private _dataTypeSubscription: Subscription;\n\n    newColumn: DexihDatalinkColumn;\n    tmpColumnKey: number;\n\n    outputTables: Array<DexihTable>;\n\n    type: TypeFunctions;\n    eBasicType = eBasicType;\n    eTypeCode = eTypeCode;\n\n    typeCodes = TypeCodes;\n\n    public errors;\n\n    ignoreChanges = false;\n\n    constructor(public hubService: HubService, public editDatalinkService: DatalinkEditService) {\n    }\n\n    ngOnInit() {\n        this.updateItems();\n        this.errors = this.editDatalinkService.hubFormsService.getFormErrorMessages(this.outputParameterForm, true);\n\n        if (this.updateParameterName) {\n            this._datalinkColumnSubscription = this.outputParameterForm.controls.datalinkColumn.valueChanges.subscribe(value => {\n                this.outputParameterForm.controls.dataType.setValue(value.dataType);\n                this.outputParameterForm.controls.name.setValue(value.name);\n            });\n        }\n        this._parameterSubscription = this.outputParameterForm.valueChanges.subscribe(param => {\n            this.errors = this.editDatalinkService.hubFormsService.getFormErrorMessages(this.outputParameterForm, true);\n            this.updateItems();\n        });\n\n        this._dataTypeSubscription = this.outputParameterForm.controls.dataType.valueChanges.subscribe(dataType => {\n            if (this.newColumn) {\n                this.newColumn.dataType = dataType;\n            }\n        });\n    }\n\n    ngOnChanges() {\n        let table = new DexihTable();\n        table.name = 'Output Columns';\n        table.dexihTableColumns = this.outputColumns;\n\n        this.outputTables = [table];\n\n        if (this.datalinkTargets) {\n            this.datalinkTargets.forEach(target => {\n                this.outputTables.push(target['table']);\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._datalinkColumnSubscription) { this._datalinkColumnSubscription.unsubscribe(); }\n        if (this._parameterSubscription) { this._parameterSubscription.unsubscribe(); }\n        if (this._dataTypeSubscription) { this._dataTypeSubscription.unsubscribe(); }\n    }\n\n    updateItems() {\n        this.type = new TypeFunctions(this.outputParameterForm.value.dataType, null, null, null);\n    }\n\n    add() {\n        this.addParameter.emit(this.outputParameterForm);\n    }\n\n    remove() {\n        this.removeParameter.emit(this.outputParameterForm);\n    }\n\n    fixDataType() {\n        const column = this.outputParameterForm.controls.datalinkColumn.value;\n        column.dataType = this.outputParameterForm.controls.dataType.value;\n    }\n\n    updateNewColumn(value: string) {\n        let current = this.outputParameterForm.controls.datalinkColumn.value;\n        if (value && (!current || current.name !== value)) {\n            if (!this.newColumn) {\n                this.newColumn = new DexihDatalinkColumn();\n                this.newColumn.key = this.hubService.getHubCache().getNextSequence();\n                this.newColumn.position = 1000 - this.newColumn.key;\n            }\n\n            this.newColumn.dataType = this.outputParameterForm.controls.dataType.value;\n            this.newColumn.allowDbNull = true;\n            this.newColumn.name = value;\n            this.newColumn.logicalName = value;\n            this.newColumn.rank = this.rank;\n            this.newColumn.columnGroup = 'mapping';\n\n            this.outputParameterForm.controls.datalinkColumn.setValue(this.newColumn);\n\n            this.updateItems();\n        }\n    }\n}\n","<form [formGroup]=\"outputParameterForm\" class=\"mb-1\">\n    <section>\n        <div class=\"input-group\">\n\n            <div *ngIf=\"allowDataTypeSelect == false && allowNameSelect == false\" class=\"input-group-prepend\">\n                <div class=\"input-group-text\">\n                    {{outputParameterForm.value.runTime?.functionParameter?.name + \"(\" + eTypeCode[type.dataType] + \")\"}}\n                    {{rank > 0 ? \"[]\" : \"\"}}\n                </div>\n            </div>\n\n            <div *ngIf=\"allowDataTypeSelect == true && allowNameSelect == false\" class=\"input-group-prepend\">\n                <div class=\"input-group-text\">\n                    {{outputParameterForm.value.runTime?.functionParameter?.name }}\n                </div>\n            </div>\n\n            <div *ngIf=\"allowNameSelect\" class=\"form-control p-0\">\n                <form-input formControlName=\"name\" [border]=\"false\" type=\"text\" name=\"name\"\n                    placeholder=\"Enter a name for the parameter\">\n                </form-input>\n                <span class=\"input-group-btn\" style=\"width:0px;\"></span>\n            </div>\n\n            <div *ngIf=\"allowDataTypeSelect == false && allowNameSelect == true\" class=\"input-group-text\">\n                {{\"(\" + eTypeCode[type.dataType] + \")\"}}\n            </div>\n\n            <div class=\"form-control p-0\">\n                <form-select [border]=\"false\" formControlName=\"datalinkColumn\" [items]=\"outputTables\" parentName=\"name\" childItems=\"dexihTableColumns\" itemKey=\"key\"\n                    itemName=\"logicalName\" [enableKeySelect]=\"false\" [enableTextEntry]=\"true\" [setTextEntryToValue]=\"false\"\n                    textEntryNote=\"Enter new column name, or select existing\"\n                    (textValueChange)=\"updateNewColumn($event)\"\n                    [errors]=\"errors.datalinkColumn\">\n                </form-select>\n            </div>\n\n            <div *ngIf=\"allowDataTypeSelect == true\" class=\"form-control p-0\">\n                <form-select formControlName=\"dataType\" [border]=\"false\" [items]=\"typeCodes\" itemKey=\"key\"\n                    itemName=\"name\">\n                </form-select>\n            </div>\n            <div *ngIf=\"allowDataTypeSelect == true\" class=\"form-control\">\n                <form-checkbox label=\"Allow Null\" [border]=\"false\" formControlName=\"allowNull\"></form-checkbox>\n            </div>\n\n            <div class=\"input-group-append\">\n                <button *ngIf=\"outputParameterForm.controls.datalinkColumn?.value && outputParameterForm.controls.dataType.value !== outputParameterForm.controls.datalinkColumn?.value?.dataType\" class=\"btn btn-danger\" type=\"button\" (click)=\"fixDataType()\" title=\"fix target column datatype\">\n                    <i class=\"fa fa-medkit\"></i>\n                </button>\n                <button class=\"btn btn-light\" type=\"button\" (click)=\"add()\" [disabled]=\"!allowAdd\" value=\"Add\">\n                    <i class=\"fa fa-plus-square-o\"></i>\n                </button>\n                <button class=\"btn btn-light\" type=\"button\" (click)=\"remove()\" [disabled]=\"!allowRemove\" value=\"Remove\">\n                    <i class=\"fa fa-minus-square-o\"></i>\n                </button>\n            </div>\n        </div>\n\n        <small *ngIf=\"outputParameterForm.value.runTime?.functionParameter?.description\" class=\"form-text text-muted\">\n            <markdown [data]=\"outputParameterForm.value.runTime.functionParameter.description\"></markdown>\n        </small>\n\n    </section>\n</form>","export { PreviewDataComponent } from './preview-data.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup } from '@angular/forms';\nimport { eDataObjectType } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'datalink-preview-data',\n    templateUrl: './preview-data.component.html'\n})\nexport class PreviewDataComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n\n    public datalinkForm: FormGroup;\n    public datalinkTransformForm: FormGroup;\n\n    private hubCache: HubCache;\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    public eDataObjectType = eDataObjectType;\n\n    public error: string;\n\n    datalinkTransformKey: number;\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.hubService.getRemoteAgentObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n                this.datalinkForm = result[4];\n\n                this.action = data['action'];\n                this.pageTitle = data['pageTitle'];\n\n                // load the cache first\n                if (this.hubCache.isLoaded()) {\n                    // get the hub key from the route data, and update the service.\n                    this.datalinkTransformKey = + params['datalinkTransformKey'];\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Preview Transform Data');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n}\n","<d-widget-section title=\"Preview Transform Data\" [showExpandButton]=\"true\" [padding]=\"false\">\n    <ng-template #header>\n        <d-button-close (click)=\"close()\"></d-button-close>\n    </ng-template>\n    <preview-data [datalink]='datalinkForm?.value' [datalinkTransformKey]=\"datalinkTransformKey\" [viewSource]='eDataObjectType.Datalink'></preview-data>\n</d-widget-section>\n","export { PreviewTableComponent } from './preview-table.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { FormGroup } from '@angular/forms';\nimport { eDataObjectType, DexihTable } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'datalink-preview-table',\n    templateUrl: './preview-table.component.html'\n})\nexport class PreviewTableComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n\n    public datalinkForm: FormGroup;\n    public datalinkTransformForm: FormGroup;\n\n    private hubCache: HubCache;\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    public eDataObjectType = eDataObjectType;\n\n    public error: string;\n\n    tableKey: number;\n    datalinkKey: number;\n    \n    name: string;\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n\n                this.action = data['action'];\n                this.pageTitle = data['pageTitle'];\n\n                // load the cache first\n                if (this.hubCache.isLoaded()) {\n                    // get the hub key from the route data, and update the service.\n                    if (params['tableKey']) {\n                        this.tableKey = +params['tableKey'];\n                        let table = this.hubCache.getTable(this.tableKey);\n                        if (table) {\n                            this.name = table.name;\n                        }\n                    } else {\n                        this.datalinkKey = +params['datalinkKey'];\n                        let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key == this.datalinkKey);\n                        if (datalink) {\n                            this.name = datalink.name;\n                        }\n                    }\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Preview Table Data');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n}\n","<d-widget-section [title]=\"'Preview ' + name\" [showExpandButton]=\"false\" [padding]=\"false\">\n    <ng-template #header>\n        <d-button-close (click)=\"close()\"></d-button-close>\n    </ng-template>\n    <preview-data *ngIf=\"tableKey\" [key]='tableKey' [viewSource]='eDataObjectType.Table'></preview-data>\n    <preview-data *ngIf=\"datalinkKey\" [key]='datalinkKey' [viewSource]='eDataObjectType.Datalink'></preview-data>\n</d-widget-section>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { Observable, BehaviorSubject, Subscription, combineLatest} from 'rxjs';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { DexihDatalinkProfile, eFunctionType } from '../../../../shared/shared.models';\n\n@Component({\n    selector: 'profile-rules',\n    templateUrl: './profile-rules.component.html'\n})\n\n\nexport class DatalinkEditProfileRulesComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n\n    private hubCache: HubCache;\n\n    private _subscription: Subscription;\n\n    selectedProfileRules: Array<DexihDatalinkProfile> = new Array<DexihDatalinkProfile>();\n\n    columns = [\n        { name: 'name', title: 'Profile Name', format: '' },\n        { name: 'description', title: 'Description', format: '' }\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<DexihDatalinkProfile>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router\n    ) { }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n            ).subscribe(async result => {\n                this.hubCache = result[0];\n                this.datalinkForm = result[1];\n\n                if (this.datalinkForm) {\n                    // load the cache first\n                    if (this.hubCache.isLoaded()) {\n                        this.selectedProfileRules = this.datalinkForm.value.dexihDatalinkProfiles;\n                        let profileRules = (await this.hubService.GetFunctionsByType(eFunctionType.Profile))\n                            .map(profile => {\n\n                                let profileRuleForm = this.selectedProfileRules.find(c =>\n                                    c.functionAssemblyName === profile.functionAssemblyName\n                                    && c.functionClassName === profile.functionClassName\n                                    && c.functionMethodName === profile.functionMethodName);\n\n                                return {\n                                    name: profile.name,\n                                    description: profile.description,\n                                    functionAssemblyName: profile.functionAssemblyName,\n                                    functionClassName: profile.functionClassName,\n                                    functionMethodName: profile.functionMethodName,\n                                    detailedResults: profileRuleForm ? profileRuleForm.detailedResults : false\n                                }\n                        });\n                        this._tableData.next(profileRules);\n                    }\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Edit Custom Function');\n        }\n\n    }\n\n    updateProfileRules() {\n        if (this.datalinkForm) {\n            let profiles = <FormArray>this.datalinkForm.controls.dexihDatalinkProfiles;\n\n            // reset existing profiles.\n            profiles.controls.forEach(profile => {\n                let profileFormGroup = <FormGroup>profile;\n                profileFormGroup.controls.isValid.setValue(false);\n            });\n\n            // add the selected profiles, with isValid = true\n            this.selectedProfileRules.forEach(profile => {\n                let profileRuleForm = <FormGroup>profiles.controls.find(c => c.value.functionAssemblyName === profile.functionAssemblyName\n                    && c.value.functionClassName === profile.functionClassName\n                    && c.value.functionMethodName === profile.functionMethodName);\n\n                if (!profileRuleForm) {\n                    let profileRule = new DexihDatalinkProfile();\n                    profileRule.key = this.hubCache.getNextSequence();\n                    profileRule.datalinkKey = this.datalinkForm.value.key;\n                    profileRule.functionAssemblyName = profile.functionAssemblyName;\n                    profileRule.functionClassName = profile.functionClassName;\n                    profileRule.functionMethodName = profile.functionMethodName;\n                    profileRule.detailedResults = profile.detailedResults;\n                    profileRule.isValid = true;\n                    profileRuleForm = this.editDatalinkService.hubFormsService.datalinkProfileFormGroup(profileRule);\n                    profiles.push(profileRuleForm);\n                } else {\n                    profileRuleForm.controls.isValid.setValue(true);\n                }\n            });\n\n            for (let i = profiles.controls.length - 1; i >= 0; i--) {\n                if (!profiles.controls[i].value.isValid) {\n                    profiles.removeAt(i);\n                }\n            }\n        }\n    }\n\n    updateProfileRule(profile: DexihDatalinkProfile) {\n        let profiles = <FormArray>this.datalinkForm.controls.dexihDatalinkProfiles;\n\n        let profileRuleForm = <FormGroup>profiles.controls.find(c => c.value.functionAssemblyName === profile.functionAssemblyName\n            && c.value.functionClassName === profile.functionClassName\n            && c.value.functionMethodName === profile.functionMethodName);\n\n        profileRuleForm.controls.detailedResults.setValue(profile.detailedResults);\n        this.editDatalinkService.hubFormsService.hasChanged = true;\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.updateProfileRules();\n    }\n\n    hasChanged(items) {\n        if (items) {\n            this.selectedProfileRules = items;\n        }\n        this.updateProfileRules();\n        this.editDatalinkService.hubFormsService.hasChanged = true;\n    }\n\n}\n","<d-widget-section title=\"Profile Rules\" [showExpandButton]=\"true\">\n        <form *ngIf=\"datalinkForm\"  [formGroup]=\"datalinkForm\" >\n    <fieldset>\n        <section>\n            <form-input label=\"Profile Table Name\" formControlName=\"profileTableName\" placeholder=\"Enter the profile table name.\" [autocapitalize]=\"true\" iconClass=\"fa fa-list\" \n            note=\"Specify the table name in the 'Audit Connection' to send the profile results to.  If this table does not exist, it will be created on first run.\">\n            </form-input>\n        </section>\n    </fieldset>\n</form>\n\n<d-table \n    [enableMultiSelect]=\"true\" \n    [enableManualSort]=\"false\"\n    [enableFilter]=\"false\"\n    [columns]=\"columns\" \n    [dataObservable]=\"tableData\" \n    [(selectedItems)]=\"selectedProfileRules\" \n    (onSelectedChange)=\"hasChanged($event)\"\n    keyColumn=\"functionMethodName\">\n\n    <ng-template #rowAction select=\"rowAction\" let-item=\"item\">\n        <form-checkbox label=\"Capture Detailed Distribution\" [(ngModel)]=\"item.detailedResults\" name=\"detailedResults\" (change)=\"updateProfileRule(item)\" ></form-checkbox>\n    </ng-template>\n</d-table>\n</d-widget-section>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { eConnectionPurpose, eDatalinkTypeItems, eAlertLevelItems, eAlertLevel } from '../../../../shared/shared.models';\n\n@Component({\n    selector: 'dexih-datalink-edit-properties-form',\n    templateUrl: './datalink-edit-properties.component.html'\n})\nexport class DatalinkEditPropertiesComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n\n    public pageTitle: string;\n    public message: string;\n\n    private _subscription: Subscription;\n\n    public eConnectionPurpose = eConnectionPurpose;\n    eDatalinkTypeItems = eDatalinkTypeItems.filter(c => c.key > 0);\n\n    public eAlertLevelItems = eAlertLevelItems;\n    public eAlertLevel = eAlertLevel;\n\n    constructor(\n        private hubService: HubService,\n        public editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n                this.pageTitle = result[0]['pageTitle'];\n                this.datalinkForm = result[3];\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Properties');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n\n}\n","<d-widget-section title='Properties' [showExpandButton]=\"true\">\n    <form *ngIf=\"datalinkForm\" [formGroup]=\"datalinkForm\">\n        <fieldset>\n            <section>\n                <form-select label=\"Datalink Type\" formControlName=\"datalinkType\" [items]=\"eDatalinkTypeItems\" itemKey=\"key\" itemName=\"description\" iconClass=\"fa fa-database\"\n                    note='Categorize the type of function this datalink is performing.' [enableFilter]=\"false\">\n                </form-select>\n            </section>\n\n            <section>\n                <form-input label=\"Datalink Name\" formControlName=\"name\" placeholder=\"Enter the datalink name.\" iconClass=\"fa fa-list\" [autocapitalize]=\"true\" [errors]=\"editDatalinkService.hubFormsService.formErrors.name\">\n                </form-input>\n            </section>\n\n            <section>\n                <form-textarea label=\"Description\" [showPreview]=\"true\" formControlName=\"description\" placeholder=\"Enter the description.\"\n                    [errors]=\"editDatalinkService.hubFormsService.formErrors.description\">\n                </form-textarea>\n            </section>\n\n            <section>\n                <form-select label=\"Alerting Level\" formControlName=\"alertLevel\" [items]=\"eAlertLevelItems\"\n                    itemKey=\"key\" itemName=\"description\" iconClass=\"fa fa-bell\"\n                    [errors]=\"editDatalinkService.hubFormsService.formErrors.alertLevel\" note=\"When alerts should be sent.\"\n                    [enableFilter]=\"false\">\n                </form-select>\n            </section>\n            \n            <section>\n                <form-checkbox label=\"Datalink is shared in the catalog to users with read access.\" formControlName=\"isShared\">\n                </form-checkbox>\n            </section>\n\n        </fieldset>\n    </form>\n\n</d-widget-section> \n\n<d-widget-section title='Input Parameters' [showExpandButton]=\"true\">\n    <input-parameters [showEdit]=\"true\" [parameters]=\"datalinkForm.controls.parameters\" [formsService]=\"editDatalinkService.hubFormsService\"></input-parameters>\n</d-widget-section>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'dexih-datalink-run-plan',\n    templateUrl: './datalink-run-plan.component.html'\n})\nexport class DatalinkRunPlanComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n\n    public pageTitle: string;\n    public message: string;\n\n    private _subscription: Subscription;\n\n    public allowSave = false;\n\n    constructor(\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n                this.pageTitle = result[0]['pageTitle'];\n                this.datalinkForm = result[3];\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Run Plan');\n        }\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n}\n","<div class=\"no-padding\">\n    <div class=\"widget-body\">\n\n        <div section class=\"widget-body-toolbar\">\n\n            <div class=\"form-row\">\n                <div class=\"col-sm-6\">\n                    <h4>Run Plan</h4>\n                </div>\n                <div class=\"col-sm-6 text-right\">\n                </div>\n            </div>\n        </div>\n\n        NOT COMPLETED\n\n    </div>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { BehaviorSubject, Subscription, combineLatest} from 'rxjs';\nimport { eUpdateStrategy, DownloadObject, eSourceType, eDownloadFormat, eDataObjectType } from '../../../../shared/shared.models';\nimport { CancelToken } from '../../../../+auth/auth.models';\n\n@Component({\n    selector: 'datalink-save-button',\n    templateUrl: './datalink-edit-save-button.component.html'\n})\n\nexport class DatalinkEditSaveButtonComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n    private cancelToken: CancelToken = new CancelToken();\n\n    datalinkForm: FormGroup;\n    \n\n    hubCache: HubCache;\n    eUpdateStrategy = eUpdateStrategy;\n\n    constructor(\n        public hubService: HubService,\n        public editDatalinkService: DatalinkEditService,\n        public authService: AuthService,\n        public router: Router,\n        public route: ActivatedRoute\n    ) { }\n\n    ngOnInit() {\n\n        try {\n            this._subscription = combineLatest(\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                this.datalinkForm = result[0];\n                this.hubCache = result[1];\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'datalink save button');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    async saveDatalink(saveAs = false) {\n        this.editDatalinkService.savingDatalink.next(true);\n\n        if (this.datalinkForm.controls.dexihDatalinkTargets.dirty) {\n            let targets = <FormArray>this.datalinkForm.controls.dexihDatalinkTargets;\n            let tables = targets.controls.map(c => {\n                let target = <FormGroup>c;\n                let table = target.controls.table;\n                if (table) {\n                    return table;\n                }\n            });\n\n            let tableNames = tables.filter(c => c.value.key > 0 && c.dirty).map(c => c.value.name).join(', ');\n\n            let doSave = async () => {\n                for (let t of targets.controls) {\n                    if (t.dirty) {\n                        let target = <FormGroup>t;\n                        let savedTable = await this.hubService.saveTables([target.controls.table.value]);\n                        target.setControl('table', this.editDatalinkService.hubFormsService.tableForm(savedTable[0]));\n                        target.controls.tableKey.setValue(savedTable[0].key);\n                    }\n                }\n\n                this.editDatalinkService.hubFormsService.save(false, saveAs);\n                this.editDatalinkService.savingDatalink.next(false);\n            }\n\n            // if no tables with key > 0 they are all new, so no need to prompt.\n            if (tableNames.length === 0) {\n                await doSave();\n            } else {\n            this.authService\n                .confirmDialog(`Save Target Tables?`, `The existing target table(s)\n                ${tableNames} have changed.\n                This is a shared object, and may impact other dependencies if changed.\n                Note, this will only save the metadata, use the 'Create Table' function to overwrite the physical table.`)\n                .then(async (confirm) => {\n                    if (confirm) {\n                        await doSave();\n                    }\n                }).catch(() => this.editDatalinkService.savingDatalink.next(false))\n            }\n        } else {\n            this.editDatalinkService.hubFormsService.save(false, saveAs);\n            this.editDatalinkService.savingDatalink.next(false);\n        }\n    }\n\n    preview() {\n        const transformsArray = <FormArray>this.datalinkForm.controls.dexihDatalinkTransforms;\n        let transforms = transformsArray.controls\n//            .filter(c => c.value.transform.allowUserConfig)\n            .sort((a, b) => b.value.position - a.value.position);\n\n        if (transforms.length > 0) {\n            this.router.navigate(['transforms/transform', transforms[0].value.key,\n            'preview-transform-data'], { relativeTo: this.route });\n        }\n    }\n\n    download() {\n        if (this.datalinkForm.dirty) {\n            this.authService.confirmDialog\n                ('Save Datalink',\n                    'The datalink must be saved before a data download task can be started.  Do you want to save the datalink?')\n                .then(saveDatalink => {\n                    if (saveDatalink) {\n                        this.saveDatalink();\n                        this.doDownload();\n                    }\n                })\n        } else {\n            this.doDownload();\n        }\n    }\n\n    doDownload() {\n        let downloadItems = new Array<DownloadObject>();\n        let downloadObject = new DownloadObject();\n        downloadObject.objectKey = this.datalinkForm.controls.key.value;\n        downloadObject.objectType = eDataObjectType.Datalink;\n        downloadItems.push(downloadObject);\n        this.hubService.downloadData(downloadItems, true, eDownloadFormat.Csv, this.cancelToken)\n    }\n\n    cancel() {\n        this.editDatalinkService.hubFormsService.cancel();\n    }\n\n    runDatalink(truncateTarget: boolean, resetIncremental: boolean) {\n        if (this.editDatalinkService.hubFormsService.hasChanged) {\n            this.authService.confirmDialog('Save Datalink', 'The datalink must be saved before running.  Would you like to save now?')\n                .then(confirm => {\n                    if (confirm) {\n                        this.saveDatalink();\n                        this.editDatalinkService.savingDatalink.toPromise().then(value => {\n                            if (value) {\n                                this.hubService\n                                    .runDatalinks([this.datalinkForm.controls.key.value], truncateTarget, resetIncremental\n                                        , null, null, null, this.cancelToken);\n                            }\n                        });\n                    }\n                });\n        } else {\n            this.hubService.runDatalinks([this.datalinkForm.controls.key.value], truncateTarget, resetIncremental,\n                null, null, null, this.cancelToken);\n        }\n    }\n\n    fixMappings() {\n        this.editDatalinkService.fixMappings(this.datalinkForm);\n    }\n}\n\n","<!--<button class=\"btn btn-primary\" [ngClass]=\"{disabled : savingDatalink || datalinkForm?.pristine }\" (click)=\"!savingDatalink && saveDatalink()\"><i *ngIf=\"savingDatalink\" class=\"fa fa-spin fa-cog\"></i> Save Changes</button>\n<button class=\"btn btn-warning\" [ngClass]=\"{disabled : savingDatalink}\" (click)=\"!savingDatalink && cancel()\">Cancel</button>-->\n<dexih-invalid-form-details class=\"mr-1\" [control]=\"datalinkForm\"></dexih-invalid-form-details>\n<d-button-splitdropdown *ngIf=\"hubCache.canWrite\" [disabled]=\"!editDatalinkService.hubFormsService.hasChanged\" buttonClass=\"btn-primary\" iconClass=\"fa fa-save\" text=\"Save\" (buttonClick)=\"saveDatalink(false)\" class=\"mr-1\">\n    <li><a class=\"dropdown-item\" (click)=\"saveDatalink(false)\" title=\"Save in the hub\"><i class=\"fa fa-cloud\"></i> Save</a></li>\n    <li><a class=\"dropdown-item\" (click)=\"editDatalinkService.hubFormsService.saveLocal()\" title=\"Export as a local file\"><i class=\"fa fa-floppy-o\"></i> Save as file</a></li>\n    <li><a class=\"dropdown-item\" (click)=\"saveDatalink(true)\" title=\"Save another version\"><i class=\"fa fa-plus-circle\"></i> Save As...</a></li>\n</d-button-splitdropdown>\n<d-button-dropdown class=\"mr-1\" *ngIf=\"hubCache.canWrite && datalinkForm?.controls.dexihDatalinkTargets.value.length > 0\" text=\"Actions\" iconClass=\"fa fa-bolt\" buttonClass=\"btn-primary\" [pullRight]=\"true\">\n    <a class=\"dropdown-item\" (click)=\"fixMappings()\" title=\"Attempt to fix mappings broken when removing/inserting transforms.\">Fix Mappings</a>\n    <a class=\"dropdown-item\" (click)=\"runDatalink(false, false)\" title=\"Run datalink, truncating the target table for each.\">Run</a>\n    <a class=\"dropdown-item\" (click)=\"runDatalink(true, true)\" title=\"Run datalink, truncating the target table for each.\">Run (with truncate)</a>\n    <a class=\"dropdown-item\" (click)=\"runDatalink(false, true)\" title=\"Run datalink, resetting the incremental (i.e. reload all source data rows) \">Run (reset incremental)</a>\n    <a class=\"dropdown-item\" (click)=\"preview()\" title=\"Preview the output of this datalink\">Preview Datalink</a>\n    <a class=\"dropdown-item\" (click)=\"download()\" title=\"Download the output from this datalink\">Download Datalink Data</a>\n</d-button-dropdown>\n<cancel-button [formsService]=\"editDatalinkService.hubFormsService\"></cancel-button>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubCache, sourceTypes, eMappingStatus, impactMappingStatuses } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { Observable, Subscription, BehaviorSubject , combineLatest} from 'rxjs';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { eObjectUse, ColumnUsageNode, eDatalinkObjectType } from '../../../hub.lineage.models';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { DexihDatalinkTable, eSourceType, DexihDatalinkColumn, eSecurityFlag, eDeltaType } from '../../../../shared/shared.models';\nimport { AuthService } from '../../../../+auth/auth.service';\n\n@Component({\n    selector: 'dexih-datalink-edit-source-table-form',\n    templateUrl: './datalink-edit-source-table.component.html'\n})\nexport class DatalinkEditSourceTableComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n\n    private _subscription: Subscription;\n    private _sourceSubscription: Subscription;\n\n    public sourceTables: DexihDatalinkTable[];\n    private hubCache: HubCache;\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    public eMappingStatus = eMappingStatus;\n\n    public eSourceType = eSourceType;\n    public sourceTypes = sourceTypes;\n\n    columns = [\n        { name: 'position', title: '#', format: '' },\n        { name: 'columnStatus', title: 'Impact', format: 'Html' },\n        { name: 'columnGroup', title: 'Group', format: '' },\n        { name: 'name', title: 'Name', format: '' },\n        { name: 'logicalName', title: 'Logical', format: '' },\n        { name: 'dataType', title: 'Data Type', format: '' },\n        { name: 'deltaType', title: 'Delta Type', format: 'Enum', enum: eDeltaType },\n        { name: 'allowDbNull', title: 'Null?', format: 'Boolean' },\n        { name: 'isIncrementalUpdate', title: 'Incremental?', format: 'Boolean' },\n        { name: 'securityFlag', title: 'Security Flag', format: 'Enum', enum: eSecurityFlag },\n        { name: 'isInput', title: 'Input?', format: 'Boolean' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n                this.pageTitle = result[0]['pageTitle'];\n                this.hubCache = result[2];\n                this.datalinkForm = result[3];\n\n                if (this.datalinkForm) {\n                    this.updateData();\n\n                    if (this._sourceSubscription) { this._sourceSubscription.unsubscribe(); }\n                    this._sourceSubscription = this.datalinkForm.controls.sourceDatalinkTable.valueChanges.subscribe(() => {\n                        this.updateData();\n                    });\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Edit Source Table');\n        }\n\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._sourceSubscription) { this._sourceSubscription.unsubscribe(); }\n    }\n\n    previewData() {\n        let sourceDatalinkTable = <DexihDatalinkTable> this.datalinkForm.controls.sourceDatalinkTable.value;\n\n        switch (sourceDatalinkTable.sourceType) {\n            case eSourceType.Table:\n                let sourceTableKey = sourceDatalinkTable.sourceTableKey;\n                this.router.navigate(['preview-table-data', 'table', sourceTableKey], { relativeTo: this.route });\n                break;\n            case eSourceType.Datalink:\n                let datalinkKey = sourceDatalinkTable.sourceDatalinkKey;\n                this.router.navigate(['preview-table-data', 'datalink', datalinkKey], { relativeTo: this.route });\n                break;\n            default:\n                this.authService.informationDialog('Cannot Preview', 'Previews are only available for tables and datalinks.');\n                break;\n        }\n    }\n\n    columnStatus(column: DexihDatalinkColumn): string {\n        let columnUsage: ColumnUsageNode = new ColumnUsageNode(\n            eDatalinkObjectType.SourceTable,\n            eObjectUse.Source,\n            this.datalinkForm.value,\n            column,\n            null,\n            null,\n            null,\n            eMappingStatus.PassThroughMap,\n            this.hubCache\n        );\n        const lineage = columnUsage.createDatalinkImpact(true);\n        const mappingStatus = impactMappingStatuses.find(c => c.key === lineage);\n        if (mappingStatus) {\n            return `${mappingStatus.name}<i class=\"float-right ${mappingStatus.statusClass}\"></i>`\n        }\n    }\n\n    updateData() {\n        let sourceDatalinkTable = <FormGroup>this.datalinkForm.controls.sourceDatalinkTable;\n        let columnData = [];\n\n        let columnsArray = <FormArray>sourceDatalinkTable.controls.dexihDatalinkColumns;\n\n        columnsArray.controls.filter(c => c.value.isValid)\n            .sort((a, b) => a.value.position - b.value.position)\n            .forEach(columnForm => {\n                let column = <DexihDatalinkColumn> columnForm.value;\n                let newColumn = {\n                    key: column.key,\n                    position: column.position,\n                    columnStatus: this.columnStatus(column),\n                    columnGroup: column.columnGroup,\n                    name: column.name,\n                    dataType: this.hubCache.dataTypeToString(column),\n                    deltaType: column.deltaType,\n                    allowDbNull: column.allowDbNull,\n                    logicalName: column.logicalName,\n                    isIncrementalUpdate: column.isIncrementalUpdate,\n                    securityFlag: column.securityFlag,\n                    isInput: column.isInput\n                };\n\n            columnData.push(newColumn);\n        });\n\n        this._tableData.next(columnData);\n    }\n\n    deleteSelected(columns: Array<DexihDatalinkColumn>) {\n        let sourceDatalinkTable = <FormGroup>this.datalinkForm.controls.sourceDatalinkTable;\n        let columnsArray = <FormArray>sourceDatalinkTable.controls.dexihDatalinkColumns;\n\n        columns.forEach(column => {\n            let index = columnsArray.controls.findIndex(c => c.value.key === column.key);\n            columnsArray.removeAt(index);\n        });\n\n        this.updateData();\n    }\n\n    newColumn() {\n        this.router.navigate(['newcolumn'], { relativeTo: this.route.parent });\n    }\n\n    editColumn(column: DexihDatalinkColumn) {\n        this.router.navigate(['column', column.key], { relativeTo: this.route.parent });\n    }\n\n    columnSortChange(items: Array<DexihDatalinkColumn>) {\n        let sourceDatalinkTable = <FormGroup>this.datalinkForm.controls.sourceDatalinkTable;\n        let existingItems = <FormArray>sourceDatalinkTable.controls.dexihDatalinkColumns;\n\n        let position = 1;\n        items.forEach(item => {\n            let column = <FormGroup>existingItems.controls.find(c => c.value.key === item.key);\n            if (column) {\n                column.controls.position.setValue(position++);\n            }\n        });\n\n        this.updateData();\n    }\n}\n","<d-widget-section title='Source Type' [showExpandButton]=\"true\">\n    <ng-template #header>\n        <d-button-edit class=\"mr-1\"\n            *ngIf=\"datalinkForm.controls.sourceDatalinkTable.value.sourceType == eSourceType.Table && datalinkForm.controls.sourceDatalinkTable.value.sourceTableKey\"\n            [routerLink]=\"['table-edit', datalinkForm.controls.sourceDatalinkTable.value.sourceTableKey]\"> Table\n        </d-button-edit>\n        <d-button-edit class=\"mr-1\"\n            *ngIf=\"datalinkForm.controls.sourceDatalinkTable.value.sourceType == eSourceType.Datalink && datalinkForm.controls.sourceDatalinkTable.value.sourceDatalinkKey\"\n            [routerLink]=\"['../../edit', datalinkForm.controls.sourceDatalinkTable.value.sourceDatalinkKey]\"> Datalink\n        </d-button-edit>\n        <d-button-preview (click)=\"previewData()\"></d-button-preview>\n    </ng-template>\n\n    <datalink-table *ngIf=\"datalinkForm\" [datalinkTableForm]=\"datalinkForm.controls.sourceDatalinkTable\">\n    </datalink-table>\n</d-widget-section>\n\n<d-widget-section title='Columns' [showExpandButton]=\"true\" [padding]=\"false\">\n    <d-table [enableMultiSelect]=\"true\" [enableManualSort]=\"true\" (onSortChanged)=\"columnSortChange($event)\"\n        [columns]=\"columns\" [dataObservable]=\"tableData\" (rowClick)=\"editColumn($event)\">\n\n        <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n            <d-button-delete (click)=\"deleteSelected(items)\" title=\"Delete selected columns\"></d-button-delete>\n        </ng-template>\n\n        <ng-template #actions select=\"actionsTemplate\" let-items=\"items\">\n            <d-button-new (click)=\"newColumn()\" title=\"Create a new column\"></d-button-new>\n        </ng-template>\n\n        <ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n            <d-button-edit (click)=\"editColumn(item)\" title=\"Edit selected column\"></d-button-edit>\n        </ng-template>\n\n    </d-table>\n</d-widget-section>","export * from './standard-function-edit.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HubCache, InvalidActions, FunctionCache} from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { LogFactory, eLogLevel } from '../../../../../logging';\nimport { TypeCodes } from '../../../hub.remote.models';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { FunctionParameter, eFunctionType, eParameterDirection, eGenericType, DexihDatalinkColumn, FunctionReference,\n  DexihCustomFunction, eTransformType, DexihDatalinkTable, DexihDatalinkTransformItem, eTransformItemType,\n  DexihFunctionParameter, eTypeCode, DexihCustomFunctionParameter,\n  DexihFunctionArrayParameter, RemoteLibraries, eInvalidActionItems, eErrorActionItems, DexihDatalinkTarget } from '../../../../shared/shared.models';\nimport { CancelToken } from '../../../../+auth/auth.models';\n\nexport class ArrayParameter {\n  public name: string;\n  public functionParameter: FunctionParameter;\n\n  public inputParameterForms: FormGroup[] = [];\n  public outputParameterForms: FormGroup[] = [];\n\n  public parameterItems: ArrayParameterItem[] = [];\n\n  public resetItems() {\n    let inputArray = <FormArray>this.inputParameterForms[0].controls.arrayParameters;\n    for (let i = 0; i < inputArray.controls.length; i++) {\n      let item = new ArrayParameterItem();\n      this.inputParameterForms.forEach(inputParameterForm => {\n        let array = <FormArray>inputParameterForm.controls.arrayParameters;\n        item.inputItems.push(<FormGroup>array.controls[i]);\n      });\n      this.outputParameterForms.forEach(outputParameterForm => {\n        let array = <FormArray>outputParameterForm.controls.arrayParameters;\n        item.outputItems.push(<FormGroup>array.controls[i]);\n      });\n\n      this.parameterItems.push(item);\n    }\n  }\n}\n\nexport class ArrayParameterItem {\n  public inputItems: FormGroup[] = [];\n  public outputItems: FormGroup[] = [];\n}\n\n\n@Component({\n\n  selector: 'dexih-function-edit',\n  templateUrl: './standard-function-edit.component.html'\n})\nexport class StandardFunctionEditComponent implements OnInit, OnDestroy {\n  public hubCache: HubCache;\n  public remoteLibraries: RemoteLibraries;\n\n  eFunctionType = eFunctionType;\n  eParameterDirection = eParameterDirection;\n  typeCodes = TypeCodes;\n\n  public pageTitle: string;\n\n  private _subscription: Subscription;\n  private _returnParameterSubscription: Subscription;\n  private _functionSubscription: Subscription;\n  private _saveSubscription: Subscription;\n\n  private cancelToken: CancelToken = new CancelToken();\n\n  transformFunctionType: eFunctionType;\n  datalinkTransformItemKey: number;\n  datalinkKey: number;\n  datalinkTransformKey: number;\n\n  datalinkForm: FormGroup;\n  datalinkTransformForm: FormGroup;\n  datalinkTransformItemForm: FormGroup;\n  // returnParameterForm: FormGroup;\n  resultReturnParameterForm: FormGroup;\n\n  useCustomFunction: boolean;\n\n  invalidActions = InvalidActions;\n  functionCache = FunctionCache;\n  eGenericType = eGenericType;\n\n  newDatalinkTransformItemForm: FormGroup;\n\n  inputColumns: Array<DexihDatalinkColumn>;\n  outputColumns: Array<DexihDatalinkColumn>;\n  datalinkTargets: Array<DexihDatalinkTarget>;\n\n  functionCategory: string;\n  functionCategories: Array<string>;\n  functions: Array<FunctionReference>;\n  filteredFunctions: Array<FunctionReference>;\n  selectedFunction: FunctionReference;\n  customFunctions: Array<DexihCustomFunction>;\n  selectedCustomFunction: DexihCustomFunction;\n\n  variables = [];\n\n  allowOutput = false;\n  allowReturn = true;\n\n  inputParameterControls: Array<FormGroup>;\n  outputParameterControls: Array<FormGroup>;\n\n  arrayParameters: ArrayParameter[] = [];\n\n  eInvalidActionItems = eInvalidActionItems.filter(c => c.key > 0);\n  eErrorActionItems = eErrorActionItems.filter(c => c.key > 0);\n\n  logger = new LogFactory('standard-function-edit');\n\n  isJoin = false;\n\n  constructor(\n    private hubService: HubService,\n    private authService: AuthService,\n    private editDatalinkService: DatalinkEditService,\n    private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n        this.hubService.getRemoteLibrariesObservable(),\n        this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n      ).subscribe(result => {\n        this.pageTitle = result[0]['pageTitle'];\n        let params = result[1];\n        this.hubCache = result[2];\n        this.remoteLibraries = result[3]\n        this.datalinkForm = result[4];\n\n        this.logger.LogC(() => `OnInit`, eLogLevel.Trace);\n\n        if (this.hubCache && this.hubCache.isLoaded() && this.datalinkForm\n          && this.remoteLibraries && this.remoteLibraries.functions.length > 0) {\n\n          this.transformFunctionType = +params['functionType'];\n          if (this.transformFunctionType === eFunctionType.Validate) {\n            this.datalinkTransformForm = this.editDatalinkService.getValidationTransform();\n            this.datalinkTransformKey = this.datalinkTransformForm.value.key;\n          } else {\n            this.datalinkTransformKey = +params['datalinkTransformKey'];\n            this.datalinkTransformForm = this.editDatalinkService.getDatalinkTransform(this.datalinkTransformKey);\n          }\n\n          this.variables = this.editDatalinkService.getVariables();\n\n          this.useCustomFunction = this.datalinkTransformForm.controls.customFunctionKey ? true : false;\n          this.datalinkTransformItemKey = +params['datalinkTransformItemKey'];\n\n          this.isJoin = this.datalinkTransformForm.value.transformType === eTransformType.Join ||\n            this.datalinkTransformForm.value.transformType === eTransformType.Lookup;\n\n          // if this is a join transform, then the use the join columns for the input.\n          if (this.isJoin) {\n            const table = <DexihDatalinkTable>this.datalinkTransformForm.controls.joinDatalinkTable.value;\n            if (!table) {\n              this.hubService.addHubErrorMessage('The join table could not be found.');\n              this.authService.navigateUp();\n              return;\n            }\n\n            this.inputColumns = table.dexihDatalinkColumns;\n          } else {\n            let nodeDatalinkColumn = <DexihDatalinkColumn> this.datalinkTransformForm.controls.nodeDatalinkColumn.value;\n            let nodeDatalinkColumnKey = nodeDatalinkColumn ? nodeDatalinkColumn.key : null;\n            let io = new InputOutputColumns();\n            if (nodeDatalinkColumnKey) {\n              let inputColumns = <DexihDatalinkColumn[]> this.datalinkTransformForm.controls.runTime.value.inputColumns;\n              this.inputColumns = io.getAvailableColumns(inputColumns, nodeDatalinkColumnKey, 0);\n            } else {\n              this.inputColumns = this.datalinkTransformForm.controls.runTime.value.inputColumns;\n            }\n          }\n\n          this.outputColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n          this.datalinkTargets = this.datalinkForm.controls.dexihDatalinkTargets.value;\n\n          if (this.datalinkTransformItemKey) {\n            this.datalinkTransformItemForm = this.editDatalinkService\n              .getDatalinkTransformItem(this.datalinkTransformForm, this.datalinkTransformItemKey);\n\n            if (!this.datalinkTransformItemForm) {\n              this.authService.navigateUp();\n              return;\n            }\n\n            // create a copy of the form item to allow for cancel.\n            this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n              .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, this.datalinkTransformItemForm.value);\n\n            if (this.datalinkTransformItemForm.controls.customFunctionKey.value) {\n                this.selectCustomFunction(this.datalinkTransformItemForm.value.customFunctionKey, false);\n            } else {\n            let selectedFunction = this.remoteLibraries.functions.find(c =>\n              c.functionClassName === this.datalinkTransformItemForm.value.functionClassName &&\n              c.functionMethodName === this.datalinkTransformItemForm.value.functionMethodName &&\n              c.functionAssemblyName === this.datalinkTransformItemForm.value.functionAssemblyName\n            );\n\n            // this.selectedFunction = selectedFunction;\n              this.selectFunction(selectedFunction, false);\n            // this.refreshParameters();\n            }\n\n          } else {\n            let newItem = new DexihDatalinkTransformItem();\n            newItem.datalinkTransformKey = this.datalinkTransformKey;\n            newItem.transformItemType = eTransformItemType.BuiltInFunction;\n\n            this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n              .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, newItem);\n          }\n\n          switch (this.transformFunctionType) {\n            case eFunctionType.Condition:\n            case eFunctionType.JoinCondition:\n              this.functions = this.remoteLibraries.functions.filter(c => c.functionType === eFunctionType.Condition);\n              this.allowOutput = false;\n              break;\n            case eFunctionType.Validate:\n              this.functions = this.remoteLibraries.functions\n                .filter(c => c.functionType === eFunctionType.Condition || c.functionType === eFunctionType.Validate);\n              this.allowOutput = true;\n              break;\n            case eFunctionType.Map:\n              this.functions = this.remoteLibraries.functions\n                .filter(c => c.functionType === eFunctionType.Condition ||\n                  c.functionType === eFunctionType.Validate ||\n                  c.functionType === eFunctionType.Map);\n\n              this.allowOutput = true;\n              break;\n            case eFunctionType.Aggregate:\n              this.functions = this.remoteLibraries.functions.filter(c => c.functionType === eFunctionType.Aggregate);\n              this.allowOutput = true;\n              break;\n            case eFunctionType.Series:\n              this.functions = this.remoteLibraries.functions.filter(c => c.functionType === eFunctionType.Series ||\n                c.functionType === eFunctionType.Aggregate);\n              this.allowOutput = true;\n              break;\n            case eFunctionType.Rows:\n              this.functions = this.remoteLibraries.functions.filter(c => c.functionType === eFunctionType.Rows);\n              this.allowOutput = true;\n              this.allowReturn = false;\n              break;\n            case eFunctionType.Profile:\n              this.functions = this.remoteLibraries.functions.filter(c => c.functionType === eFunctionType.Profile);\n              this.allowOutput = false;\n              break;\n            default:\n              this.functions = null;\n          }\n\n          this.functionCategories = Array.from(new Set(this.functions.map(c => c.category)));\n          this.filteredFunctions = this.functions;\n          this.customFunctions = this.hubCache.hub.dexihCustomFunctions;\n          if (this.datalinkTransformItemForm && this.datalinkTransformItemForm.value.customFunctionKey) {\n            this.useCustomFunction = true;\n            this.selectedCustomFunction = this.hubCache.hub.dexihCustomFunctions\n              .find(c => c.key === this.datalinkTransformItemForm.value.customFunctionKey);\n          }\n\n          if (this._functionSubscription) { this._functionSubscription.unsubscribe(); }\n          this._functionSubscription = this.newDatalinkTransformItemForm.controls.customFunctionKey.valueChanges\n            .subscribe(customFunctionKey => {\n              this.selectCustomFunction(customFunctionKey, false);\n            });\n        }\n\n        if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n        this._saveSubscription = this.editDatalinkService.savingDatalink.subscribe(value => {\n            if(value) {\n                this.apply();\n            }\n        });\n\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Standard Function Edit');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._returnParameterSubscription) { this._returnParameterSubscription.unsubscribe(); }\n    if (this._functionSubscription) { this._functionSubscription.unsubscribe(); }\n    if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n    this.cancelToken.cancel();\n  }\n\n  updateCategory(value) {\n    if (value) {\n      this.filteredFunctions = this.functions.filter(c => c.category === value);\n    } else {\n      this.filteredFunctions = this.functions;\n    }\n  }\n\n  canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      if (this.newDatalinkTransformItemForm && !this.newDatalinkTransformItemForm.pristine) {\n        this.authService.confirmDialog('The function has changed',\n          'The function has changed.  Do you want to discard the changes and continue?')\n          .then((confirm) => {\n              resolve(confirm);\n            }).catch(() => {\n              resolve(false);\n            });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  private parametersArray() {\n    return <FormArray>this.newDatalinkTransformItemForm.controls.dexihFunctionParameters;\n  }\n\n  refreshParameters() {\n    let parametersArray = this.parametersArray();\n\n    // convoluted sort below allows sorting by the direction then the position\n    this.inputParameterControls = <FormGroup[]>parametersArray.controls\n      .sort((a, b) => a.value.position - b.value.position)\n      .filter(c => (c.value.direction === eParameterDirection.Input || c.value.direction === eParameterDirection.ResultInput\n        || c.value.direction === eParameterDirection.Join));\n\n    // convoluted sort below allows sorting by the direction then the position\n    this.outputParameterControls = <FormGroup[]>parametersArray.controls\n      .sort((a, b) => a.value.position - b.value.position)\n      .filter(c => HubCache.parameterIsOutput(c.value));\n\n    // don't include return value (which will determine pass/fail) for validation transforms.\n    if (this.transformFunctionType === eFunctionType.Validate) {\n      this.outputParameterControls = this.outputParameterControls.filter(c => c.value.direction !== eParameterDirection.ReturnValue);\n    }\n\n    this.arrayParameters = [];\n\n    if (this.selectedFunction) {\n\n      this.selectedFunction.inputParameters?.filter(c => c.linkedName).forEach(parameter => {\n        this.addArrayParameter(parameter, true);\n      });\n\n      this.selectedFunction.outputParameters?.filter(c => c.linkedName).forEach(parameter => {\n        this.addArrayParameter(parameter, false);\n      });\n\n      this.selectedFunction.resultInputParameters?.filter(c => c.linkedName).forEach(parameter => {\n        this.addArrayParameter(parameter, true);\n      });\n\n      this.selectedFunction.resultOutputParameters?.filter(c => c.linkedName).forEach(parameter => {\n        this.addArrayParameter(parameter, false);\n      });\n\n      this.selectedFunction.resultReturnParameters?.filter(c => c.linkedName).forEach(parameter => {\n        this.addArrayParameter(parameter, false);\n      });\n\n    }\n\n    this.arrayParameters.forEach(arrayParameter => arrayParameter.resetItems());\n  }\n\n  private addArrayParameter(parameter: FunctionParameter, isInput: boolean) {\n    let arrayParameter = this.arrayParameters.find(c => c.name === parameter.linkedName);\n    if (!arrayParameter) {\n      arrayParameter = new ArrayParameter();\n      arrayParameter.name = parameter.linkedName;\n      arrayParameter.functionParameter = parameter;\n      this.arrayParameters.push(arrayParameter);\n    }\n\n    if (isInput) {\n      let controls = this.inputParameterControls.find(c => c.controls.name.value === parameter.name);\n      arrayParameter.inputParameterForms.push(controls);\n    } else {\n      let controls = this.outputParameterControls.find(c => c.controls.name.value === parameter.name);\n      arrayParameter.outputParameterForms.push(controls);\n    }\n\n  }\n\n  // when a new standard function is selected\n  // reset all the parameters\n  selectFunction(value: FunctionReference, markAsDirty: boolean) {\n    this.selectedFunction = value;\n\n    if (value === null || value === undefined) { return; }\n\n    this.newDatalinkTransformItemForm.controls.functionAssemblyName.setValue(this.selectedFunction.functionAssemblyName);\n    this.newDatalinkTransformItemForm.controls.functionClassName.setValue(this.selectedFunction.functionClassName);\n    this.newDatalinkTransformItemForm.controls.functionMethodName.setValue(this.selectedFunction.functionMethodName);\n    this.newDatalinkTransformItemForm.controls.targetDatalinkColumn.setValue(null);\n\n    if (!this.newDatalinkTransformItemForm.controls.genericTypeCode.value) {\n      if (this.selectedFunction.genericTypeDefault) {\n        this.newDatalinkTransformItemForm.controls.genericTypeCode.setValue(this.selectedFunction.genericTypeDefault);\n      } else {\n        if (this.selectedFunction.genericType === eGenericType.Numeric) {\n          this.newDatalinkTransformItemForm.controls.genericTypeCode.setValue(eTypeCode.Decimal);\n        } else {\n          this.newDatalinkTransformItemForm.controls.genericTypeCode.setValue(eTypeCode.String);\n        }\n      }\n    }\n\n    switch (this.selectedFunction.genericType) {\n      case eGenericType.All:\n        this.typeCodes = TypeCodes;\n        break;\n      case eGenericType.Numeric:\n        this.typeCodes = TypeCodes.filter(c => c.isNumeric);\n        break;\n      case eGenericType.String:\n        this.typeCodes = TypeCodes.filter(c => c.isString);\n        break;\n      case eGenericType.None:\n        this.typeCodes = [];\n    }\n\n    if (this.selectedFunction) {\n      let parameters = this.parametersArray();\n      let existingParameters: any[] = [];\n\n      while (parameters.length) {\n        existingParameters.push(parameters.value[0])\n        parameters.removeAt(0);\n      }\n\n      if (this.selectedFunction.inputParameters) {\n        this.selectedFunction.inputParameters.forEach((param: FunctionParameter, index: number) => {\n          if (param) {\n            parameters.push(\n                this.newParameter(existingParameters, param, index, this.isJoin ? eParameterDirection.Join : eParameterDirection.Input,\n                    this.selectedFunction.genericTypeDefault));\n          }\n        });\n      }\n\n      if (this.selectedFunction.outputParameters) {\n        this.selectedFunction.outputParameters.forEach((param: FunctionParameter, index: number) => {\n          if (param) {\n            if (param) {\n              parameters.push(this.newParameter(existingParameters, param, index + 100, eParameterDirection.Output,\n                this.selectedFunction.genericTypeDefault));\n            }\n          }\n        });\n      }\n\n      if (this.selectedFunction.resultInputParameters) {\n        this.selectedFunction.resultInputParameters.forEach((param: FunctionParameter, index: number) => {\n          if (param) {\n            parameters.push(\n                this.newParameter(existingParameters, param, index + 200, eParameterDirection.ResultInput,\n                  this.selectedFunction.genericTypeDefault));\n          }\n        });\n      }\n\n      if (this.selectedFunction.resultOutputParameters) {\n        this.selectedFunction.resultOutputParameters.forEach((param: FunctionParameter, index: number) => {\n          if (param) {\n            if (param) {\n              parameters.push(\n                  this.newParameter(existingParameters, param, index + 300, eParameterDirection.ResultOutput,\n                    this.selectedFunction.genericTypeDefault));\n            }\n          }\n        });\n      }\n\n      if (this.selectedFunction.returnParameters) {\n        if (this.allowReturn && this.selectedFunction.returnParameters.length > 0) {\n          this.selectedFunction.returnParameters.forEach((parameter: FunctionParameter, index: number) => {\n            parameters.push(this.newParameter(existingParameters, parameter, index + 400,\n              eParameterDirection.ReturnValue, this.selectedFunction.genericTypeDefault ));\n          });\n        }\n      }\n\n      if (this.selectedFunction.resultReturnParameters) {\n        if (this.allowReturn && this.selectedFunction.resultReturnParameters.length > 0) {\n            this.selectedFunction.resultReturnParameters.forEach(parameter => {\n            parameters.push(this.newParameter(existingParameters, parameter, 0,\n                eParameterDirection.ResultReturnValue, this.selectedFunction.genericTypeDefault));\n          });\n        }\n      }\n\n      this.refreshParameters();\n\n      if (markAsDirty) {\n        this.newDatalinkTransformItemForm.markAsDirty();\n      }\n    } else {\n      this.selectedFunction = null;\n    }\n  }\n\n  private newParameter(existingParameters: DexihFunctionParameter[],\n    param: any, index: number, direction: eParameterDirection, genericTypeDefault: eTypeCode): FormGroup {\n\n    let existingValue = existingParameters.find(c => c.name === param.parameterName)\n\n    let newParameter = new DexihFunctionParameter();\n    // newParameter.datalinkTransformItemKey = this.datalinkTransformItemKey;\n    newParameter.name = param.parameterName;\n    newParameter.rank = param.rank;\n    newParameter.direction = direction;\n    newParameter.isGeneric = param.isGeneric;\n    newParameter.position = index;\n    newParameter.key = this.hubCache.getNextSequence();\n    newParameter['runTime'] = {functionParameter: param};\n\n    if (existingValue) {\n      newParameter.key = existingValue.key;\n      newParameter.datalinkColumn = existingValue.datalinkColumn;\n      newParameter.value = existingValue.value;\n      newParameter.dataType = param.isGeneric ? existingValue.dataType : param.dataType;\n      existingValue.arrayParameters.forEach(p => {\n        p['runTime'] = {functionParameter: param};\n      });\n      newParameter.arrayParameters = existingValue.arrayParameters;\n    } else {\n      newParameter.value = param.defaultValue;\n      newParameter.dataType = param.isGeneric ? genericTypeDefault : param.dataType;\n    }\n\n    newParameter.isValid = true;\n\n    let newParameterForm = this.editDatalinkService.hubFormsService.datalinkFunctionParametersFormGroup(newParameter);\n    return newParameterForm;\n  }\n\n  // when a new standard function is selected\n  // reset all the parameters\n  selectCustomFunction(customFunctionKey: number, markAsDirty: boolean) {\n    this.selectedCustomFunction = this.hubCache.hub.dexihCustomFunctions.find(c => c.key === customFunctionKey);\n\n    if (this.selectedCustomFunction) {\n      let parameters = this.parametersArray();\n      let existingParameters: any[] = [];\n\n      while (parameters.length) {\n        existingParameters.push(parameters.value[0]);\n        parameters.removeAt(0);\n      }\n\n      this.selectedCustomFunction.dexihCustomFunctionParameters\n        .filter(c => (c.direction === eParameterDirection.Input || c.direction === eParameterDirection.Join)  && c.isValid)\n        .forEach((param: DexihCustomFunctionParameter, index: number) => {\n          if (param) {\n            let newParameterForm =\n              this.newParameter(existingParameters, param, index, this.isJoin ? eParameterDirection.Join : eParameterDirection.Input,\n                this.selectedCustomFunction.genericTypeDefault);\n            parameters.push(newParameterForm);\n          }\n        });\n\n      this.selectedCustomFunction.dexihCustomFunctionParameters.filter(c => c.direction === eParameterDirection.Output && c.isValid)\n        .forEach((param: DexihCustomFunctionParameter, index: number) => {\n          if (param) {\n            let newParameterForm =\n              this.newParameter(existingParameters, param, index, eParameterDirection.Output,\n                this.selectedCustomFunction.genericTypeDefault);\n            parameters.push(newParameterForm);\n          }\n        });\n\n        let returnParameter = new DexihFunctionParameter();\n        returnParameter.dataType = this.selectedCustomFunction.returnType;\n        returnParameter.name = 'Return';\n        returnParameter.direction = eParameterDirection.Output;\n        returnParameter.rank = 0;\n        returnParameter.position = -1;\n        returnParameter.isValid = true;\n        let newParameterForm2 = this.newParameter(existingParameters, returnParameter, 0, eParameterDirection.ReturnValue,\n          this.selectedCustomFunction.genericTypeDefault);\n        parameters.push(newParameterForm2);\n\n      this.refreshParameters();\n\n      if (markAsDirty) {\n        this.newDatalinkTransformItemForm.markAsDirty();\n      }\n    }\n  }\n\n  private createArrayParameter(parentParameter: DexihFunctionArrayParameter,\n    direction: eParameterDirection, position: number = null, genericTypeDefault: eTypeCode):\n    DexihFunctionArrayParameter {\n    let param = parentParameter['runTime'].functionParameter;\n    let newParameter = new DexihFunctionArrayParameter();\n    newParameter.isGeneric = param.isGeneric;\n    newParameter.dataType = param.isGeneric ? genericTypeDefault : parentParameter.dataType;\n    newParameter.position = position ? position + 1 : 10000000;\n    newParameter.name = param.name;\n    newParameter.direction = direction;\n    newParameter.rank = 0;\n    newParameter.key = this.hubCache.getNextSequence();\n    newParameter.datalinkColumn = null;\n    newParameter.isValid = true;\n    newParameter['runTime'] = {functionParameter: param};\n\n    return newParameter;\n  }\n\n  addParameter(parentParameterForm: FormGroup, direction: eParameterDirection, position: number = null): FormGroup {\n    if (direction === eParameterDirection.Input && this.isJoin) { direction = eParameterDirection.Join; }\n    let parentParameter = parentParameterForm.value;\n    let newParameter = this.createArrayParameter(parentParameter, direction, 0,\n      this.newDatalinkTransformItemForm.controls.genericTypeCode.value);\n    let newParameterForm = this.editDatalinkService.hubFormsService.datalinkFunctionArrayParametersFormGroup(newParameter);\n    let arrayForm = <FormArray>parentParameterForm.controls.arrayParameters;\n    if (position !== null) {\n      arrayForm.insert(position + 1, newParameterForm);\n    } else {\n      arrayForm.push(newParameterForm);\n    }\n\n    // reset the positions\n    arrayForm.controls.forEach((p, index) => {\n      (<FormGroup>p).controls.position.setValue(index * 10);\n    });\n\n    this.refreshParameters()\n    return newParameterForm;\n  }\n\n  addInputOutputParameter(arrayParameter: ArrayParameter, position: number = null) {\n    let item = new ArrayParameterItem();\n\n    arrayParameter.inputParameterForms.forEach(parameterForm => {\n      let parameter = this.addParameter(parameterForm, this.isJoin ? eParameterDirection.Join : eParameterDirection.Input, position);\n      item.inputItems.push(parameter);\n    });\n\n    arrayParameter.outputParameterForms.forEach(parameterForm => {\n      let parameter = this.addParameter(parameterForm, eParameterDirection.Output, position);\n      item.outputItems.push(parameter);\n    });\n\n    if (position !== null) {\n      arrayParameter.parameterItems.splice(position, 0, item);\n    } else {\n      arrayParameter.parameterItems.push(item);\n    }\n  }\n\n  removeParameter(parentParameterForm: FormGroup, position: number) {\n    let arrayForm = <FormArray>parentParameterForm.controls.arrayParameters;\n    if (position > -1) {\n      arrayForm.removeAt(position);\n      this.newDatalinkTransformItemForm.markAsDirty();\n      this.refreshParameters();\n    }\n  }\n\n  removeInputOutputParameter(arrayParameter: ArrayParameter, position: number = null) {\n\n    arrayParameter.inputParameterForms.forEach(parameterForm => {\n      this.removeParameter(parameterForm, position);\n    });\n\n    arrayParameter.outputParameterForms.forEach(parameterForm => {\n      this.removeParameter(parameterForm, position);\n    });\n\n    if (position !== null) {\n      arrayParameter.parameterItems.splice(position, 1);\n    } else {\n      arrayParameter.parameterItems.splice(arrayParameter.parameterItems.length - 1, 1);\n    }\n  }\n\n  addAllColumns(parentParameterForm: FormGroup) {\n    this.clearArray(parentParameterForm);\n\n    let isLabel = parentParameterForm.value.runTime.functionParameter.isLabel;\n    let parentParameter = parentParameterForm.value;\n    let arrayForm = <FormArray>parentParameterForm.controls.arrayParameters;\n    let position = 1;\n    this.inputColumns.forEach(column => {\n      let newParameter = this.createArrayParameter(parentParameter,\n        this.isJoin ? eParameterDirection.Join : eParameterDirection.Input, position++, this.selectedFunction.genericTypeDefault);\n        if (isLabel) {\n          newParameter.value = column.name;\n        } else {\n          newParameter.datalinkColumn = column;\n        }\n\n      let newParameterForm = this.editDatalinkService.hubFormsService.datalinkFunctionArrayParametersFormGroup(newParameter);\n      arrayForm.push(newParameterForm);\n    });\n    this.refreshParameters();\n  }\n\n  addAllInputOutputColumns(arrayParameter: ArrayParameter) {\n    // add the first parameter\n    this.addAllColumns(arrayParameter.inputParameterForms[0]);\n    let inputArrayForm = <FormArray>arrayParameter.inputParameterForms[0].controls.arrayParameters;\n\n    if (arrayParameter.inputParameterForms.length > 1) {\n      this.clearArray(arrayParameter.inputParameterForms[1]);\n      for (let i = 0; i < inputArrayForm.length; i++) {\n        let parameter = this.addParameter(arrayParameter.inputParameterForms[1],\n          this.isJoin ? eParameterDirection.Join : eParameterDirection.Input);\n\n        // if the first parameter is a label, then map the matching column to the second input parameter\n        if (arrayParameter.inputParameterForms[0].value.runTime.functionParameter.isLabel) {\n          parameter.controls.datalinkColumn.setValue(this.inputColumns[i]);\n        }\n      }\n\n      // add any other parameters with default values.\n      for (let i = 2; i < arrayParameter.inputParameterForms.length; i++) {\n        this.clearArray(arrayParameter.inputParameterForms[i]);\n        for (let j = 0; j < inputArrayForm.length; j++) {\n          let parameter = this.addParameter(arrayParameter.inputParameterForms[i],\n            this.isJoin ? eParameterDirection.Join : eParameterDirection.Input);\n            parameter.controls.value.setValue(arrayParameter.inputParameterForms[i].value.runTime.functionParameter.defaultValue);\n        }\n      }\n    }\n\n    // add any output columns of the same length.\n    if (arrayParameter.outputParameterForms.length > 0) {\n      for (let i = 0; i < arrayParameter.outputParameterForms.length; i++) {\n        this.clearArray(arrayParameter.outputParameterForms[i]);\n        for (let j = 0; j < inputArrayForm.length; j++) {\n        }\n      }\n    }\n\n    arrayParameter.resetItems();\n  }\n\n  clearArray(parameterForm: FormGroup) {\n    let arrayForm = <FormArray>parameterForm.controls.arrayParameters;\n    for (let i = arrayForm.controls.length - 1; i >= 0; i--) {\n      arrayForm.removeAt(i);\n    }\n    this.refreshParameters();\n  }\n\n  clearInputOutputArray(arrayParameter: ArrayParameter) {\n    arrayParameter.inputParameterForms.forEach(form => {\n      this.clearArray(form);\n    });\n\n    arrayParameter.outputParameterForms.forEach(form => {\n      this.clearArray(form);\n    });\n  }\n\n\n  async importInputOutputMappings(arrayParameter: ArrayParameter) {\n    let result = await this.editDatalinkService\n      .importFunctionMappings(this.datalinkTransformKey, this.newDatalinkTransformItemForm.value, this.cancelToken);\n\n      if (result === null) { return; }\n\n      let inputArrayForm = <FormArray>arrayParameter.inputParameterForms[0].controls.arrayParameters;\n\n      this.clearArray(arrayParameter.inputParameterForms[0]);\n      for (let i = 0; i < result.length; i++) {\n        let parameter = this.addParameter(arrayParameter.inputParameterForms[0],\n          this.isJoin ? eParameterDirection.Join : eParameterDirection.Input);\n\n          parameter.controls.value.setValue(result[i]);\n\n        // // if the first parameter is a label, then map the matching column to the second input parameter\n        // if (arrayParameter.inputParameterForms[0].value.runTime.functionParameter.isLabel) {\n        //   parameter.controls.datalinkColumn.setValue(this.inputColumns[i]);\n        // }\n      }\n\n      // add any other parameters with default values.\n      for (let i = 1; i < arrayParameter.inputParameterForms.length; i++) {\n        this.clearArray(arrayParameter.inputParameterForms[i]);\n        for (let j = 0; j < inputArrayForm.length; j++) {\n          let parameter = this.addParameter(arrayParameter.inputParameterForms[i],\n            this.isJoin ? eParameterDirection.Join : eParameterDirection.Input);\n            parameter.controls.value.setValue(arrayParameter.inputParameterForms[i].value.runTime.functionParameter.defaultValue);\n        }\n      }\n\n      // add any output columns of the same length.\n      if (arrayParameter.outputParameterForms.length > 0) {\n        for (let i = 0; i < arrayParameter.outputParameterForms.length; i++) {\n          this.clearArray(arrayParameter.outputParameterForms[i]);\n          for (let j = 0; j < inputArrayForm.length; j++) {\n          }\n        }\n      }\n\n      arrayParameter.resetItems();\n  }\n\n  autoMap() {\n    this.outputParameterControls.forEach(param => {\n      let newColumn = new DexihDatalinkColumn();\n      newColumn.key = this.hubService.getHubCache().getNextSequence();\n      newColumn.position = 1000 - newColumn.key;\n\n      let paramValue = <DexihFunctionParameter> param.value;\n\n      newColumn.dataType = paramValue.dataType;\n      newColumn.allowDbNull = true;\n      newColumn.name = paramValue['runTime'].functionParameter.name;\n      newColumn.logicalName = paramValue['runTime'].functionParameter.name;\n      newColumn.rank = paramValue.rank;\n\n      param.controls.datalinkColumn.setValue(newColumn);\n      this.newDatalinkTransformItemForm.markAsDirty();\n    })\n  }\n\n  cancel() {\n    this.authService.navigateUp();\n  }\n\n  apply() {\n    this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, this.newDatalinkTransformItemForm);\n    this.newDatalinkTransformItemForm.markAsPristine();\n  }\n\n  applyExit() {\n    this.apply();\n    this.authService.navigateUp();\n  }\n\n}\n\n","<div *ngIf=\"newDatalinkTransformItemForm && inputColumns && outputColumns\">\n\n\t<d-widget-section  title=\"Edit Function\" [showExpandButton]=\"false\">\n\t\t<ng-template #header>\n\t\t\t<d-button-apply [disabled]=\"newDatalinkTransformItemForm.pristine\" (click)=\"!newDatalinkTransformItemForm.pristine && applyExit()\"\n\t\t\tclass=\"mr-1\"></d-button-apply>\n\t\t\t<d-button-cancel (click)=\"cancel()\"></d-button-cancel>\n\t\t</ng-template>\n\n\t\t<form *ngIf=\"datalinkTransformForm\" [formGroup]=\"newDatalinkTransformItemForm\">\n\t\t\t<fieldset>\n\n\t\t\t\t<section *ngIf=\"hubCache?.hub.dexihCustomFunctions.length > 0\">\n\t\t\t\t\t<form-checkbox label=\"Use a custom function\" [(ngModel)]=\"useCustomFunction\" [ngModelOptions]=\"{standalone: true}\">\n\t\t\t\t\t</form-checkbox>\n\t\t\t\t</section>\n\n\t\t\t\t<ng-template [ngIf]=\"useCustomFunction\">\n\t\t\t\t\t<section [ngStyle]=\"{'z-index': 499, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Select a hub function\" formControlName=\"customFunctionKey\" [items]=\"customFunctions\" itemKey=\"key\"\n\t\t\t\t\t\t itemName=\"name\" itemTitle=\"description\">\n\t\t\t\t\t\t \t<customFunction-edit-button [key]=\"newDatalinkTransformItemForm.controls.customFunctionKey.value\"></customFunction-edit-button>\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template [ngIf]=\"!useCustomFunction\">\n\t\t\t\t\t<section [ngStyle]=\"{'z-index': 500, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Category\" [items]=\"functionCategories\" [allowNullSelect]=\"true\" selectNullMessage=\"(All functions)\"\n\t\t\t\t\t\t [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"functionCategory\" (ngModelChange)=\"updateCategory($event)\" [sortItems]=\"true\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<section [ngStyle]=\"{'z-index': 499, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Select a standard function\" (ngModelChange)=\"selectFunction($event, true)\" [(ngModel)]=\"selectedFunction\"\n\t\t\t\t\t\t [ngModelOptions]=\"{standalone: true}\" [items]=\"filteredFunctions\" [enableKeySelect]=\"false\" itemKey=\"name\" itemName=\"name\" itemTitle=\"description\" [note]=\"selectedFunction?.description\"\n\t\t\t\t\t\t [sortItems]=\"true\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t</ng-template>\n\t\t\t\t<div *ngIf=\"selectedFunction || selectedCustomFunction\" class=\"form-row\">\n\t\t\t\t\t<section *ngIf=\"transformFunctionType != eFunctionType.Validate && transformFunctionType != eFunctionType.condition\"\n\t\t\t\t\t class=\"col-xs-12 col-sm-6 col-md-3\" [ngStyle]=\"{'z-index': 405, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Action when null\" formControlName=\"onNull\" [items]=\"eErrorActionItems\" itemKey=\"key\" itemName=\"name\"\n\t\t\t\t\t\t iconClass=\"fa fa-database\" [enableFilter]=\"false\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"col-xs-12 col-sm-6 col-md-3\" [ngStyle]=\"{'z-index': 404, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Action when error\" formControlName=\"onError\" [items]=\"eErrorActionItems\" itemKey=\"key\" itemName=\"name\"\n\t\t\t\t\t\t iconClass=\"fa fa-database\" [enableFilter]=\"false\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t\n\t\t\t\t\t<div *ngIf=\"transformFunctionType == eFunctionType.Validate\" class=\"col-xs-12 col-sm-6 col-md-3\" [ngStyle]=\"{'z-index': 402, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Action when false\" formControlName=\"invalidAction\" [items]=\"eInvalidActionItems\" itemKey=\"key\"\n\t\t\t\t\t\t itemName=\"name\" [enableFilter]=\"false\" iconClass=\"fa fa-database\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<section *ngIf=\"(selectedFunction?.returnType == 'Boolean') || (selectedCustomFunction && selectedCustomFunction?.returnType == 'Boolean')\" class=\"col-xs-12 col-sm-6 col-md-4\">\n\t\t\t\t\t\t<form-checkbox label=\"Return 'NOT' result\" formControlName=\"notCondition\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\n\t\t\t\t\t<section *ngIf=\"selectedFunction?.genericType !== eGenericType.None\" class=\"col-xs-12 col-sm-6 col-md-3\">\n\t\t\t\t\t\t<form-select label=\"Data Type\" formControlName=\"genericTypeCode\" [items]=\"typeCodes\" itemKey=\"key\" itemName=\"name\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<section  class=\"col-xs-12 col-sm-6 col-md-3\">\n\t\t\t\t\t\t<form-select label=\"Cache Options\" formControlName=\"functionCaching\" [items]=\"functionCache\" itemKey=\"key\" itemName=\"name\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div *ngIf=\"(selectedFunction || selectedCustomFunction) && inputParameterControls.length > 0\" class=\"mt-1\">\n\t\t\t\t\t<div class=\"d-flex flex-row mb-1\">\n\t\t\t\t\t\tInput Parameters\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngFor=\"let inputParameter of inputParameterControls; let i = index\" [ngStyle]=\"{'z-index': 300-i, 'position': 'relative'}\" class=\"mb-1\">\n\t\t\t\t\t\t<div *ngIf=\"inputParameter.value.rank > 0 && !inputParameter.value.runTime.functionParameter.linkedName\">\n\t\t\t\t\t\t\t<div class=\"d-flex flex-row mb-1\">\n\t\t\t\t\t\t\t\t<div class=\"input-group-text\">\n\t\t\t\t\t\t\t\t\tArray - {{inputParameter.value.name}}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"ml-auto\">\n\t\t\t\t\t\t\t\t\t<d-button *ngIf=\"selectedFunction.importMethodName\" iconClass=\"fa fa-download\" text=\"Import Mappings\" (click)=\"importMappings(inputParameter)\"\n\t\t\t\t\t\t\t\t\t title=\"Attempt to import the mappings from the source data\" class=\"mr-1\"></d-button>\n\t\t\t\t\t\t\t\t\t<d-button iconClass=\"fa fa-plus\" text=\"Add Parameter\" (click)=\"addParameter(inputParameter, eParameterDirection.Input)\" title=\"Add a parameter to the array\"\n\t\t\t\t\t\t\t\t\t class=\"mr-1\"></d-button>\n\t\t\t\t\t\t\t\t\t<d-button iconClass=\"fa fa-columns\" text=\"Add All Inputs\" (click)=\"addAllColumns(inputParameter)\" title=\"Add all the input columns to the array\"\n\t\t\t\t\t\t\t\t\t class=\"mr-1\"></d-button>\n\t\t\t\t\t\t\t\t\t<d-button iconClass=\"fa fa-eraser\" text=\"Clear\" (click)=\"clearArray(inputParameter)\"></d-button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<input-parameter *ngIf=\"inputParameter.controls.arrayParameters.controls.length === 0\" [inputParameterForms]=\"[inputParameter]\" [nodeDatalinkColumnKey]=\"datalinkTransformForm.controls.nodeDatalinkColumn.value?.key\"\n\t\t\t\t\t\t\t [inputColumns]=\"inputColumns\" [allowAdd]=\"false\" [allowRemove]=\"false\" [updateParameterName]=\"false\" [rank]=\"inputParameter.value.rank\"\n\t\t\t\t\t\t\t [variables]=\"variables\">\n\t\t\t\t\t\t\t</input-parameter>\n\t\t\t\t\t\t\t<div *ngFor=\"let arrayParameter of inputParameter.controls.arrayParameters.controls; let j = index, let last = last\" class=\"pl-2 mb-1\"\n\t\t\t\t\t\t\t [ngStyle]=\"{'z-index': 300-j, 'position': 'relative'}\">\n\t\t\t\t\t\t\t\t<input-parameter [inputParameterForms]=\"[arrayParameter]\" [inputColumns]=\"inputColumns\" [allowAdd]=\"true\" [nodeDatalinkColumnKey]=\"datalinkTransformForm.controls.nodeDatalinkColumn.value?.key\"\n\t\t\t\t\t\t\t\t [allowRemove]=\"true\" [updateParameterName]=\"false\" (addParameter)=\"addParameter(inputParameter, eParameterDirection.Input, j)\"\n\t\t\t\t\t\t\t\t (removeParameter)=\"removeParameter(inputParameter, j)\" [variables]=\"variables\">\n\t\t\t\t\t\t\t\t</input-parameter>\n\t\t\t\t\t\t\t\t<small *ngIf=\"last && arrayParameter.value.runTime?.functionParameter?.description\" class=\"form-text text-muted\">\n\t\t\t\t\t\t\t\t\t<markdown [data]=\"arrayParameter.value.runTime.functionParameter.description\"></markdown>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<input-parameter *ngIf=\"inputParameter.value.rank == 0 && !inputParameter.value.runTime.functionParameter.linkedName\" [inputParameterForms]=\"[inputParameter]\" [inputColumns]=\"inputColumns\" [nodeDatalinkColumnKey]=\"datalinkTransformForm.controls.nodeDatalinkColumn.value?.key\"\n\t\t\t\t\t\t [allowAdd]=\"false\" [allowRemove]=\"false\" [updateParameterName]=\"false\" [variables]=\"variables\">\n\t\t\t\t\t\t</input-parameter>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- When linked array, then place parameters side/side -->\n\t\t\t\t<div *ngFor=\"let arrayParameter of arrayParameters\" class=\"mt-1\">\n\t\t\t\t\t<div class=\"d-flex flex-row mb-1\">\n\t\t\t\t\t\t{{arrayParameter.name}}\n\t\t\t\t\t\t<div class=\"ml-auto\">\n\t\t\t\t\t\t\t<d-button *ngIf=\"selectedFunction.importMethodName\" iconClass=\"fa fa-download\" text=\"Import Mappings\" (click)=\"importInputOutputMappings(arrayParameter)\"\n\t\t\t\t\t\t\t title=\"Attempt to import the mappings from the source data\" class=\"mr-1\"></d-button>\n\t\t\t\t\t\t\t<d-button iconClass=\"fa fa-plus\" text=\"Add Mapping\" (click)=\"addInputOutputParameter(arrayParameter)\"\n\t\t\t\t\t\t\t title=\"Add a parameter to the array\" class=\"mr-1\"></d-button>\n\t\t\t\t\t\t\t<d-button iconClass=\"fa fa-columns\" text=\"Add All Inputs\" (click)=\"addAllInputOutputColumns(arrayParameter)\"\n\t\t\t\t\t\t\t title=\"Add all the input columns to the array\" class=\"mr-1\"></d-button>\n\t\t\t\t\t\t\t<d-button iconClass=\"fa fa-eraser\" text=\"Clear\" (click)=\"clearInputOutputArray(arrayParameter)\"></d-button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngFor=\"let parameterItem of arrayParameter.parameterItems; let j = index\" class=\"pl-2\"\n\t\t\t\t\t [ngStyle]=\"{'z-index': 200-j, 'position': 'relative'}\">\n\t\t\t\t\t\t<input-parameter \n\t\t\t\t\t\t [inputParameterForms]=\"parameterItem.inputItems\" \n\t\t\t\t\t\t [outputParameterForms]=\"parameterItem.outputItems\" \n\t\t\t\t\t\t [nodeDatalinkColumnKey]=\"datalinkTransformForm.controls.nodeDatalinkColumn.value?.key\"\n\t\t\t\t\t\t [inputColumns]=\"inputColumns\" [outputColumns]=\"outputColumns\" [datalinkTargets]=\"datalinkTargets\" [allowAdd]=\"true\" [allowRemove]=\"true\"\n\t\t\t\t\t\t [updateParameterName]=\"false\" (addParameter)=\"addInputOutputParameter(arrayParameter, j)\"\n\t\t\t\t\t\t (removeParameter)=\"removeInputOutputParameter(arrayParameter, j)\"\n\t\t\t\t\t\t [variables]=\"variables\">\n\t\t\t\t\t\t</input-parameter>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div *ngIf=\"(selectedFunction || selectedCustomFunction) && allowOutput\" class=\"mt-1\">\n\t\t\t\t\t<label class=\"d-flex flex-row\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\tOutput Parameters\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"ml-auto\">\n\t\t\t\t\t\t\t<d-button text=\"Auto Map\" buttonClass=\"btn-sm btn-outline-primary\" (click)=\"autoMap(outputParameter)\"></d-button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</label>\n\t\t\t\t\t<div *ngFor=\"let outputParameter of outputParameterControls; let i = index\" [ngStyle]=\"{'z-index': 100-i, 'position': 'relative'}\">\n\t\t\t\t\t\t<div *ngIf=\"outputParameter.value.rank > 0 && !outputParameter.value.runTime.functionParameter.linkedName\">\n\t\t\t\t\t\t\t<div class=\"d-flex flex-row mb-1\">\n\t\t\t\t\t\t\t\t<div class=\"input-group-text\">\n\t\t\t\t\t\t\t\t\tArray - {{outputParameter.value.name}}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"ml-auto\">\n\t\t\t\t\t\t\t\t\t<d-button iconClass=\"fa fa-plus\"  text=\"Add Parameter\" (click)=\"addParameter(outputParameter, eParameterDirection.Output)\" title=\"Add a parameter to the array\"\n\t\t\t\t\t\t\t\t\t class=\"mr-1\"></d-button>\n\t\t\t\t\t\t\t\t\t<d-button iconClass=\"fa fa-eraser\"  text=\"Clear\" (click)=\"clearArray(outputParameter)\"></d-button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<output-parameter *ngIf=\"outputParameter.controls.arrayParameters.controls.length === 0\" [outputParameterForm]=\"outputParameter\"\n\t\t\t\t\t\t\t [outputColumns]=\"outputColumns\" [datalinkTargets]=\"datalinkTargets\" [allowAdd]=\"false\" [allowRemove]=\"false\" [rank]=\"outputParameter.value.rank\">\n\t\t\t\t\t\t\t</output-parameter>\n\t\t\t\t\t\t\t<div *ngFor=\"let arrayParameter of outputParameter.controls.arrayParameters.controls; let j = index\" class=\"pl-2\"\n\t\t\t\t\t\t\t [ngStyle]=\"{'z-index': 200-j, 'position': 'relative'}\">\n\t\t\t\t\t\t\t\t<output-parameter [outputParameterForm]=\"arrayParameter\" [outputColumns]=\"outputColumns\" [datalinkTargets]=\"datalinkTargets\" [allowAdd]=\"true\"\n\t\t\t\t\t\t\t\t [allowRemove]=\"true\" (addParameter)=\"addParameter(outputParameter, eParameterDirection.Output, j)\"\n\t\t\t\t\t\t\t\t (removeParameter)=\"removeParameter(outputParameter, j)\">\n\t\t\t\t\t\t\t\t</output-parameter>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<output-parameter *ngIf=\"outputParameter.value.rank == 0\" [outputParameterForm]=\"outputParameter\" [outputColumns]=\"outputColumns\" [datalinkTargets]=\"datalinkTargets\" \n\t\t\t\t\t\t [allowAdd]=\"false\" [allowRemove]=\"false\">\n\t\t\t\t\t\t</output-parameter>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t</form>\n\t</d-widget-section>\n</div>","export { TargetColumnComponent } from './target-column.component';\nexport { TargetColumnsComponent } from './target-columns.component';\n","import { Component, Input, Output, OnInit, OnChanges, EventEmitter, OnDestroy } from '@angular/core';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { HubCache, eMappingStatus, MappingStatusInfo, lineageMappingStatuses } from '../../../hub.models';\nimport { eObjectUse, ColumnUsageNode, eDatalinkObjectType } from '../../../hub.lineage.models';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { LogFactory, eLogLevel } from '../../../../../logging';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { DexihTableColumn, DexihTable, DexihDatalinkColumn, eTypeCode } from '../../../../shared/shared.models';\n\n\n@Component({\n\n    selector: 'target-column',\n    templateUrl: './target-column.component.html'\n})\nexport class TargetColumnComponent implements OnInit, OnDestroy, OnChanges {\n    @Input() public column: DexihTableColumn = null;\n    @Input() public datalinkTransformForm: FormGroup;\n    @Input() public inputTables: Array<DexihTable> = null;\n    @Output() public inputOutputDrop: EventEmitter<{inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn}>\n            = new EventEmitter<{inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn}>();\n\n    private _subscription: Subscription;\n\n    private hubCache: HubCache;\n    private datalinkForm: FormGroup;\n\n    eMappingStatus = eMappingStatus;\n\n    eTypeCode = eTypeCode;\n\n    public mappingStatusInfoLineage: MappingStatusInfo;\n    public mappingStatusInfoImpact: MappingStatusInfo;\n\n    public mappingStatusLineage: eMappingStatus;\n\n    childColumns: DexihTableColumn[];\n\n    public logger = new LogFactory('output-column.component');\n    public logCount = 0;\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n              this.hubCache = result[0];\n              this.datalinkForm = result[1];\n\n              this.logger.LogC(() => `Subscription count: ${this.logCount++}`, eLogLevel.Trace);\n\n\n            this.childColumns = this.column.childColumns;\n\n              this.refreshStatus();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Output Column');\n        }\n    }\n\n    ngOnChanges() {\n        this.refreshStatus();\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    refreshStatus() {\n        if (this.datalinkForm) {\n            let columnUsage: ColumnUsageNode = new ColumnUsageNode(\n            eDatalinkObjectType.TargetTable, eObjectUse.Target,\n            this.datalinkForm.value, null, this.column, null, null, eMappingStatus.NotMapped, this.hubCache);\n            this.mappingStatusLineage = columnUsage.createDatalinkLineage(true);\n            this.mappingStatusInfoLineage = lineageMappingStatuses.find(c => c.key === this.mappingStatusLineage);\n        }\n    }\n\n\n  editColumn() {\n      if (this.column.key && (this.mappingStatusLineage === eMappingStatus.Mapped\n        || this.mappingStatusLineage === eMappingStatus.MappedToNothing)) {\n        this.router.navigate(['column', this.column.key], { relativeTo: this.route.parent });\n      } else {\n          this.authService.informationDialog('Can not edit column',\n          // tslint:disable-next-line:max-line-length\n          'This column is not created by the current transform (i.e. a pass-through or target column).  To edit a column first create a mapping.')\n      }\n    }\n}\n","<div class=\"list-group-item p-0 rounded-0\" *ngIf=\"mappingStatusInfoLineage.key != eMappingStatus.Mapped\" [title]=\"column.logicalName + ' ' + eTypeCode[column.dataType]\" (click)=\"editColumn()\">\n    <div class=\"d-flex flex-row\">\n\n        <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoLineage.statusClass\" [title]=\"mappingStatusInfoLineage.name\"></i>\n        <span class=\"flex-fill input-group-text ellipsis-overflow rounded-0 border-0\">\n            {{column.logicalName}}\n        </span>\n    </div>\n</div>\n<div class=\"list-group-item p-0 rounded-0\" *ngIf=\"mappingStatusInfoLineage.key == eMappingStatus.Mapped\" [title]=\"column.logicalName + ' ' + eTypeCode[column.dataType]\"\n    (click)=\"editColumn()\">\n    <div class=\"d-flex flex-row\">\n\n        <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoLineage.statusClass\" [title]=\"mappingStatusInfoLineage.name\"></i>\n        <span class=\"flex-fill input-group-text ellipsis-overflow rounded-0 border-0\">\n            {{column.logicalName}}\n        </span>\n    </div>\n</div>\n<!-- <div *ngIf=\"childColumns?.length > 0\" class=\"p-2\">\n    <output-column *ngFor=\"let childColumn of childColumns\" [column]=\"childColumn\" [datalinkTransformForm]=\"datalinkTransformForm\"></output-column>\n</div> -->","import { Component, Input, Output, OnInit, OnChanges, OnDestroy, EventEmitter } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { CdkDragDrop } from '@angular/cdk/drag-drop';\nimport { DexihTable, DexihDatalinkColumn } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'target-columns',\n    templateUrl: './target-columns.component.html'\n})\nexport class TargetColumnsComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() public datalinkTransformForm: FormGroup;\n    @Input() public targets: DexihTable[];\n    @Input() public allowMappingOutputs = true;\n\n    @Output() public inputOutputDrop: EventEmitter<{ inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn }>\n        = new EventEmitter<{ inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn }>();\n\n    private _outputColumnsSubscribe: Subscription;\n\n    constructor(\n    ) {\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnChanges() {\n    }\n\n    ngOnDestroy() {\n    }\n\n    newInputOutputDrop(inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn) {\n        this.inputOutputDrop.emit({\n            inputColumn: inputColumn,\n            outputColumn: outputColumn\n        });\n    }\n}\n","<div *ngIf=\"targets\" cdkDropList #cdkDropList=\"cdkDropList\">\n    <d-widget-section *ngFor=\"let target of targets\" [title]=\"'Target (' + target.table.name + ')'\" [padding]=\"false\" [showExpandButton]=\"true\">\n        <div *ngFor=\"let column of target.table.dexihTableColumns | fieldSort : 'position' | isValidFilter; let i = index\" dropZone (dropData)=\"newInputOutputDrop($event, column)\" [zone]=\"allowMappingOutputs ? 'input-column' : ''\" dropAllowedClass=\"drop-zone-green\" >\n            <target-column [datalinkTransformForm]='datalinkTransformForm' [column]='column'></target-column>\n        </div>\n    </d-widget-section>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubFormsService } from '../../../hub.forms.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { eDeltaType } from '../../../../shared/shared.models';\n\n@Component({\n    selector: 'target-table-column',\n    templateUrl: './target-table-column.component.html'\n})\n\nexport class TargetTableColumnComponent implements OnInit, OnDestroy {\n    private _currentFormSubscription: Subscription;\n\n    public targetKey: number;\n    public columnKey: number;\n    public deltaType: eDeltaType;\n    public tableForm: FormGroup;\n\n    constructor(\n        private authService: AuthService,\n        private formsService: HubFormsService,\n        private route: ActivatedRoute,\n    ) { }\n\n    ngOnInit() {\n        this._currentFormSubscription = this.route.params.subscribe(params => {\n            this.targetKey = + params['targetKey'];\n            this.columnKey = + params['columnKey'];\n            this.deltaType = params['deltaType'];\n\n            this.formsService.getCurrentFormObservable().subscribe(datalinkForm => {\n                if (datalinkForm) {\n                    let targets = <FormArray> datalinkForm.controls.dexihDatalinkTargets;\n\n                    let targetForm = <FormGroup> targets.controls.find(c => c.value.key === this.targetKey);\n                    this.tableForm = <FormGroup>targetForm.controls.table;\n                }\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._currentFormSubscription) { this._currentFormSubscription.unsubscribe(); }\n    }\n\n    columnUpdated() {\n        this.authService.navigateUp();\n    }\n}\n","<column-edit [columnKey]=\"columnKey\" [tableForm]=\"tableForm\" [deltaType]='deltaType' (isUpdated)=\"columnUpdated()\"></column-edit>","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { InputOutputColumns, eObjectUse, ColumnUsageNode, eDatalinkObjectType } from '../../../hub.lineage.models';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Observable, Subscription, BehaviorSubject , combineLatest} from 'rxjs';\nimport { FormGroup, FormArray, FormBuilder } from '@angular/forms';\nimport { HubFormsService } from '../../../hub.forms.service';\nimport { LogFactory, eLogLevel } from '../../../../../logging';\nimport { HubCache, eMappingStatus, updateStrategies, loadStrategies, ConnectionTables, lineageMappingStatuses, deltaTypes } from '../../../hub.models';\nimport { eDeltaType, eUpdateStrategy, eTransformWriterMethod, DexihConnection,\n    DexihDatalinkColumn, DexihDatalinkTarget, DexihTable, DexihTableColumn, DexihDatalinkTable, eTypeCode, eSecurityFlag } from '../../../../shared/shared.models';\nimport { CancelToken } from '../../../../+auth/auth.models';\n\n@Component({\n\n    selector: 'dexih-datalink-edit-target-table',\n    templateUrl: './datalink-edit-target-table.component.html'\n})\nexport class DatalinkEditTargetTableComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n    private hubCache: HubCache;\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    private _subscription: Subscription;\n    private _loadStrategySubscription: Subscription;\n    private _tableFormSubscription: Subscription;\n    private _saveSubscription: Subscription;\n\n    private cancelToken: CancelToken = new CancelToken();\n\n    public eMappingStatus = eMappingStatus;\n    public eDeltaType = eDeltaType;\n\n    public tableFormService: HubFormsService;\n\n    public eUpdateStrategy = eUpdateStrategy;\n    public updateStrategies = updateStrategies;\n\n    public eTransformWriterMethod = eTransformWriterMethod;\n    public loadStrategies = loadStrategies;\n\n    public managedConnections: DexihConnection[];\n    public connectionTables: ConnectionTables[];\n\n    public showTableProperties = false;\n    public showColumn = false;\n\n    private ignoreUpdateTable = false;\n\n    public nodes = [];\n\n    public newTable = false;\n\n    public inputColumns: DexihDatalinkColumn[];\n\n    public targetKey: number;\n    public targetTableForm: FormGroup;\n\n    public columnKey: number;\n    public deltaType: eDeltaType;\n\n    public showBulkEdit = false;\n\n    private canExit = false;\n\n    public logger = new LogFactory('datalink-edit-target-table');\n\n    columns = [\n        { name: 'position', title: '#', format: '' },\n        { name: 'columnStatus', title: 'Lineage', format: 'Html' },\n        { name: 'name', title: 'Name', format: '' },\n        { name: 'logicalName', title: 'Logical', format: '' },\n        { name: 'dataType', title: 'Data Type', format: '' },\n        { name: 'deltaType', title: 'Delta Type', format: '' },\n        { name: 'allowDbNull', title: 'Null?', format: 'Boolean' },\n        { name: 'defaultValue', title: 'Default Value', format: '' },\n        { name: 'securityFlag', title: 'Security Flag', format: 'Enum', enum: eSecurityFlag },\n        { name: 'columnValidation', title: 'Validation', format: '', class: 'columnValidationClass', tooltip: 'columnValidationTooltip' }\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    private _missingColumnsData = new BehaviorSubject<Array<any>>(null);\n    missingColumnsData: Observable<Array<any>> = this._missingColumnsData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private fb: FormBuilder) {\n\n        this.tableFormService = new HubFormsService(fb, hubService, authService);\n    }\n\n    ngOnInit() {\n        this.logger.LogC(() => `ngOnInit`, eLogLevel.Trace);\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n                this.datalinkForm = result[3];\n\n                this.action = data['action'];\n                this.pageTitle = data['pageTitle'];\n\n                const ioColumns = new InputOutputColumns();\n                this.inputColumns = ioColumns.getDatalinkOutputColumns(this.datalinkForm.value);\n\n                if (this.action === 'edit') {\n                    this.targetKey = +params['targetKey'];\n                    let targets = <FormArray>this.datalinkForm.controls.dexihDatalinkTargets;\n\n                    // create a copy of the target form.\n                    let originalTargetTableForm = <FormGroup> targets.controls.find(c => c.value.key === this.targetKey);\n\n                    if (originalTargetTableForm && originalTargetTableForm.controls.key.value <= 0) {\n                        this.newTable = true;\n                    }\n\n                    // if the table is not found, then navigate back to the parent.\n                    if (originalTargetTableForm === undefined) {\n                        this.canExit = true;\n                        this.authService.navigateUp();\n                        return;\n                    }\n\n                    this.targetTableForm = this.editDatalinkService.hubFormsService\n                        .datalinkTargetFormGroup(originalTargetTableForm.value, originalTargetTableForm.controls.table.value);\n\n                } else if (this.action === 'new') {\n                    let target = new DexihDatalinkTarget();\n                    target.key = this.hubCache.getNextSequence();\n                    this.targetTableForm = this.editDatalinkService.hubFormsService.datalinkTargetFormGroup(target);\n\n                } else {\n                    this.hubService.addHubErrorMessage('Invalid action ' + this.action);\n                }\n\n                if (this.hubCache.isLoaded() && this.datalinkForm) {\n                    this.connectionTables = this.hubCache.getConnectionTables();\n                    this.managedConnections = this.hubCache.getManagedConnections();\n\n                    this.updateData();\n                    this.resetSubscription();\n\n\n                    this.logger.LogC(() => `ngOnInit - completed`, eLogLevel.Trace);\n                }\n\n                if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n                this._saveSubscription = this.editDatalinkService.savingDatalink.subscribe(value => {\n                    if(value) {\n                        this.apply();\n                    }\n                });\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Edit Target Table');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._loadStrategySubscription) { this._loadStrategySubscription.unsubscribe(); }\n        if (this._tableFormSubscription) { this._tableFormSubscription.unsubscribe(); }\n        if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n    }\n\n    canDeactivate(): Promise<boolean> {\n        return new Promise<boolean>(resolve => {\n          if (!this.canExit && this.targetTableForm?.dirty) {\n            this.authService.confirmDialog('Target Table Changed',\n            'The table has changed.  Would you like to discard the changes and return to the previous screen?  Otherwise, use the apply button to save the changes.'\n            ).then(confirm => {\n              resolve(confirm);\n            }).catch(reason => {\n              resolve(false);\n            });\n          } else {\n            resolve(true);\n          }\n        });\n      }\n\n    resetSubscription() {\n        if (this._tableFormSubscription) { this._tableFormSubscription.unsubscribe(); }\n        this._tableFormSubscription = this.targetTableForm.controls.tableKey.valueChanges.subscribe(() => {\n            this.updateData();\n        });\n    }\n\n    previewData() {\n        this.router.navigate(['preview-table-data', this.targetTableForm.controls.tableKey.value], { relativeTo: this.route });\n    }\n\n    columnStatus(table: DexihTable, column: DexihTableColumn): string {\n        let columnUsage: ColumnUsageNode = new ColumnUsageNode(\n            eDatalinkObjectType.TargetTable, eObjectUse.Target,\n            this.datalinkForm.value, null, column, null, null, eMappingStatus.NotMapped, this.hubCache);\n        const lineage = columnUsage.createDatalinkLineage(true);\n        const mappingStatus = lineageMappingStatuses.find(c => c.key === lineage);\n        if (mappingStatus) {\n            return `<i class=\"${mappingStatus.statusClass}\"></i>&nbsp;${mappingStatus.name}`\n        }\n    }\n\n    datalinkColumnStatus(table: DexihDatalinkTable, column: DexihDatalinkColumn): string {\n        let columnUsage: ColumnUsageNode = new ColumnUsageNode(\n            eDatalinkObjectType.TargetTable, eObjectUse.Target,\n            this.datalinkForm.value, column, null, null, null, eMappingStatus.NotMapped, this.hubCache);\n        const lineage = columnUsage.createDatalinkLineage(true);\n        const mappingStatus = lineageMappingStatuses.find(c => c.key === lineage);\n        if (mappingStatus) {\n            return `<i class=\"${mappingStatus.statusClass}\"></i>&nbsp;${mappingStatus.name}`\n        }\n    }\n\n    private addNodeColumns(columns: DexihDatalinkColumn[], path: string) {\n        if (!path) {\n            this.nodes = [];\n        }\n        if (columns) {\n            columns.filter(c => c.dataType === eTypeCode.Node && c.isValid).forEach(col => {\n                let name = path ? (path + '.' + col.logicalName) : col.logicalName;\n                this.nodes.push({key: col.key, name: name});\n\n                if (col.childColumns && col.childColumns.length > 0) {\n                    this.addNodeColumns(col.childColumns, name);\n                }\n            });\n        }\n    }\n\n    updateData() {\n        if (this.ignoreUpdateTable) {\n            return;\n        }\n\n        this.logger.LogC(() => `updateData started`, eLogLevel.Trace);\n        this.showBulkEdit = false;\n\n        let validation = this.editDatalinkService.getValidationTransform()\n\n        this.tableFormService.startForm(<FormGroup>this.targetTableForm.controls.table)\n        if (this.targetTableForm.controls.table) {\n\n            if (!this.targetTableForm.controls.table.value) {\n                this.logger.LogC(() => `updateData no targetTable specified.`, eLogLevel.Trace);\n                this._tableData.next(null);\n            } else {\n                const table = this.targetTableForm.controls.table.value;\n                this.logger.LogC(() => `updateData targetTable ${table.name}`, eLogLevel.Trace);\n\n                let columnData = [];\n                table.dexihTableColumns\n                    .filter(c => c.isValid)\n                    .sort((a, b) => a.position - b.position)\n                    .forEach(column => {\n                        let deltaType = deltaTypes.find(c => c.key === column.deltaType);\n                        let newColumn = {\n                            key: column.key,\n                            position: column.position,\n                            columnStatus: this.columnStatus(table, column),\n                            name: column.name,\n                            dataType: this.hubCache.dataTypeToString(column),\n                            deltaType: deltaType ? deltaType.name : 'Not specified',\n                            allowDbNull: column.allowDbNull,\n                            logicalName: column.logicalName,\n                            isIncrementalUpdate: column.isIncrementalUpdate,\n                            securityFlag: column.securityFlag,\n                            defaultValue: column.defaultValue,\n                            columnValidation: this.hubCache.getColumnValidation(column.columnValidationKey).name,\n                            columnValidationClass: column.columnValidationKey && !validation ? 'dexih-error-icon' : '',\n                            columnValidationTooltip: column.columnValidationKey && !validation ?\n                                'Enabled the validation transform for this to function' : '',\n                        };\n\n                        columnData.push(newColumn);\n                    });\n\n                this._tableData.next(columnData);\n\n                let validColumns = this.validColumns();\n\n                if (validColumns) {\n                    this.addNodeColumns(validColumns, '');\n\n                    let missingColumnData = [];\n                    let position = 0;\n                    validColumns.forEach(column => {\n                        if (table.dexihTableColumns.findIndex(c => c.name === column.name) < 0 &&\n                            missingColumnData.findIndex(c => c.name === column.name) < 0) {\n                            let deltaType = deltaTypes.find(c => c.key === column.deltaType);\n                            let newColumn = {\n                                key: column.key,\n                                position: column.position + position,\n                                columnStatus: this.datalinkColumnStatus(table, column),\n                                name: column.name,\n                                dataType: this.hubCache\n                                    .dataTypeToString(column),\n                                deltaType: deltaType ? deltaType.name : 'Not specified',\n                                allowDbNull: column.allowDbNull,\n                                logicalName: column.logicalName,\n                                isIncrementalUpdate: column.isIncrementalUpdate,\n                                securityFlag: column.securityFlag,\n                                defaultValue: column.defaultValue,\n                                columnValidation: '',\n                            };\n                            missingColumnData.push(newColumn);\n                        }\n                        position += 1000;\n                    });\n                    this._missingColumnsData.next(missingColumnData);\n                }\n\n                this.logger.LogC(() => `updateData columns loaded`, eLogLevel.Trace);\n            }\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    validColumns(): DexihDatalinkColumn[] {\n        let validColumns = this.inputColumns;\n\n        if (this.targetTableForm.controls.nodeDatalinkColumn && this.targetTableForm.controls.nodeDatalinkColumn.value) {\n            let io = new InputOutputColumns();\n            validColumns =  io.validColumns(this.targetTableForm.controls.nodeDatalinkColumn.value.key,\n                    this.inputColumns);\n        }\n\n        return validColumns;\n    }\n\n    addMissing(items: Array<DexihDatalinkColumn>) {\n        this.logger.LogC(() => `addMissing started`, eLogLevel.Trace);\n\n        const tableForm = <FormGroup>this.targetTableForm.controls.table;\n\n        // const ioColumns = new InputOutputColumns();\n        // const outputColumns = ioColumns.getDatalinkOutputColumns(this.datalinkForm.value);\n\n        const outputColumns = this.validColumns();\n\n        if (tableForm && outputColumns) {\n            const tableColumns = <FormArray>tableForm.controls.dexihTableColumns;\n            items.forEach(item => {\n                let missingColumn: DexihDatalinkColumn = null;\n                outputColumns.forEach(column => {\n                    if (!missingColumn && item.key === column.key) {\n                        missingColumn = column;\n                    }\n                });\n                if (missingColumn) {\n                    const newColumn = new DexihTableColumn();\n\n                    Object.assign(newColumn, missingColumn);\n\n                    this.resetColumnKeys(newColumn);\n                    let positions = tableColumns.controls.map<number>(c => <number>c.value.position);\n                    let position = positions.length === 0 ? 0 : Math.max(...positions) + 1; // add the the last position\n                    newColumn.position = position;\n                    const columnForm = this.editDatalinkService.hubFormsService.tableColumn(tableColumns.value, newColumn);\n                    tableColumns.push(columnForm);\n                    tableForm.markAsDirty();\n                    this.targetTableForm.markAsDirty();\n                }\n            });\n            this.updateData();\n        }\n        this.logger.LogC(() => `addMissing completed`, eLogLevel.Trace);\n    }\n\n    resetColumnKeys(column: DexihTableColumn) {\n        column.key = this.hubCache.getNextSequence();\n\n        if (column.childColumns) {\n            column.childColumns.forEach(childColumn => this.resetColumnKeys(childColumn));\n        }\n    }\n\n    toggleNewTable() {\n        this.logger.LogC(() => `newTable started`, eLogLevel.Trace);\n\n        if (this.newTable) {\n            const newTable = new DexihTable();\n            this.targetTableForm.setControl('table', this.editDatalinkService.hubFormsService.tableForm(newTable));\n            this.targetTableForm.controls.tableKey.setValue(0);\n            this.resetSubscription();\n            this.addMissing(this._missingColumnsData.value);\n\n            this.showTableProperties = true;\n        }\n\n        this.logger.LogC(() => `newTable completed`, eLogLevel.Trace);\n    }\n\n    editColumn(column: DexihTableColumn) {\n        this.columnKey = column.key;\n        this.showColumn = true;\n    }\n\n    newColumn(deltaType: eDeltaType) {\n        if (deltaType !== null) {\n            const tableForm = <FormGroup>this.targetTableForm.controls.table;\n            const tableColumns = <FormArray>tableForm.controls.dexihTableColumns;\n            let newColumn = this.hubCache.newColumn(tableForm.value, deltaType);\n            if (newColumn === null) {\n                this.authService.informationDialog('Invalid column.', `The column ${deltaType} could not be added as it already exists.`);\n                return;\n            }\n            const columnForm = this.editDatalinkService.hubFormsService.tableColumn(tableColumns.value, newColumn);\n            tableColumns.push(columnForm);\n            tableForm.markAsDirty();\n            this.targetTableForm.markAsDirty();\n        } else {\n            this.columnKey = null;\n            this.deltaType = deltaType;\n            this.showColumn = true;\n        }\n    }\n\n    async resetColumns() {\n        let confirm = await this.authService.confirmDialog('Warning reset columns',\n            'This will remove and reload all the columns in this table using the last mapped outputs.  Continue?')\n\n        if (confirm) {\n            const tableForm = <FormGroup>this.targetTableForm.controls.table;\n            const tableColumns = <FormArray>tableForm.controls.dexihTableColumns;\n\n            while (tableColumns.length !== 0) {\n                tableColumns.removeAt(0)\n              }\n            }\n\n            this.addMissing(this.validColumns());\n    }\n\n    deleteColumns(columns: Array<DexihTableColumn>) {\n        columns.forEach(column => {\n            const tableForm = <FormGroup>this.targetTableForm.controls.table;\n            const tableColumns = <FormArray>tableForm.controls.dexihTableColumns;\n            const index = tableColumns.controls.findIndex(c => c.value.key === column.key);\n            if (index >= 0) {\n                tableColumns.removeAt(index);\n                tableForm.markAsDirty();\n            }\n        });\n\n        this.updateData();\n    }\n\n    importTable() {\n        const table: DexihTable = this.targetTableForm.controls.table.value;\n        const connection = this.hubCache.getConnection(table.connectionKey)\n        this.hubService.importTables([table], false, this.cancelToken)\n            .then(tables => {\n                if (!tables || tables.length === 0) { return; }\n                const returnTable: any = tables[0];\n                returnTable.useLogical =\n                    this.hubCache.defaultTableLogicalName(returnTable.schema, returnTable.name) !== returnTable.logicalName;\n                let tableForm = this.editDatalinkService.hubFormsService.tableForm(returnTable);\n                this.targetTableForm.controls.tableKey.setValue(returnTable.key);\n                this.targetTableForm.setControl('table', tableForm);\n            }).catch(reason => {\n                // this.hubService.addHubErrorMessage(reason);\n            });\n    }\n\n    createTable() {\n        const table: DexihTable = this.targetTableForm.controls.table.value;\n        const connection = this.hubCache.getConnection(table.connectionKey)\n        this.hubService.createTables([table], this.cancelToken)\n            .then(tables => {\n                this.hubService.addHubSuccessMessage('The table was created successfully.');\n                // this.targetTableForm.controls.table.setValue(returnTable);\n            }).catch(reason => {\n                // this.hubService.addHubErrorMessage(reason);\n            });\n    }\n\n    columnSortChange(items: Array<DexihTableColumn>) {\n        this.logger.LogC(() => `columns sort change - started `, eLogLevel.Trace);\n        this.tableFormService.IgnoreFormChange = true;\n        this.editDatalinkService.hubFormsService.IgnoreFormChange = true;\n        this.ignoreUpdateTable = true;\n        const tableForm = <FormGroup>this.targetTableForm.controls.table;\n        let columnsArray = <FormArray>tableForm.controls.dexihTableColumns;\n        let position = 1;\n        items.forEach(c => {\n            let column = <FormGroup>columnsArray.controls.find(control => control.value.key === c.key);\n            column.controls.position.setValue(position++);\n        });\n\n        tableForm.markAsDirty();\n        this.editDatalinkService.hubFormsService.IgnoreFormChange = false;\n        this.tableFormService.IgnoreFormChange = false;\n        this.ignoreUpdateTable = false;\n        this.updateData();\n        this.logger.LogC(() => `columns sort change - finished `, eLogLevel.Trace);\n    }\n\n    columnUpdated() {\n        this.showColumn = false;\n        this.updateData();\n    }\n\n    saveTable() {\n        const table: DexihTable = this.targetTableForm.controls.table.value;\n        this.hubService.saveTables([table]).then(savedTables => {\n            let savedTable = savedTables[0];\n            this.targetTableForm.setControl('table', this.editDatalinkService.hubFormsService.tableForm(savedTable));\n            this.targetTableForm.controls.tableKey.setValue(savedTable.key);\n            this.resetSubscription();\n            this.editDatalinkService.hubFormsService.save(false);\n        });\n    }\n\n    apply() {\n        if (this.targetTableForm.dirty) {\n            let targets = <FormArray>this.datalinkForm.controls.dexihDatalinkTargets;\n            let index = targets.length;\n            if (this.action === 'edit') {\n                index = targets.controls.findIndex(c => c.value.key === this.targetKey);\n                targets.removeAt(index);\n            }\n            targets.insert(index, this.targetTableForm);\n            targets.markAsDirty();\n            this.canExit = true;\n            this.authService.navigateUp();\n        }\n    }\n}\n","<div *ngIf=\"!showColumn\">\n\n<d-widget-section title=\"Edit Target Table\" [showExpandButton]=\"true\">\n    <ng-template #header>\n        <d-button-preview class=\"mr-1\" (click)=\"previewData()\"></d-button-preview>\n        <d-button class=\"mr-1\" (click)=\"importTable()\" buttonClass=\"btn-primary\" iconClass=\"fa fa-refresh\" title=\"Re-import table from connection.\">\n            Re-Import\n        </d-button>\n        <d-button (click)=\"createTable()\" class=\"mr-1\" buttonClass=\"btn-primary\" iconClass=\"fa fa-bullseye\" title=\"Drop & re-create the table on the connection.  Warning: This remove all data from the table!\">\n            Drop & Create\n        </d-button>\n\n        <d-button-apply class=\"mr-1\" (click)=\"apply()\" [disabled]=\"!this.targetTableForm?.dirty\"></d-button-apply>\n        <cancel-button [formsService]=\"tableFormService\"></cancel-button>\n    </ng-template>\n\n    <form *ngIf=\"targetTableForm\"  [formGroup]=\"targetTableForm\">\n        <fieldset>\n            <section>\n                <form-checkbox label=\"Create a new table\" [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"newTable\" (ngModelChange)=\"toggleNewTable($event)\"></form-checkbox>\n            </section>\n            <section *ngIf=\"!newTable\">\n                <form-select label=\"Target Table\" formControlName=\"tableKey\" [items]=\"connectionTables\" parentName=\"name\" childItems=\"dexihTables\"\n                    itemKey=\"key\" itemName=\"logicalName\" note='Select the target table'>\n                </form-select>\n            </section>\n            <section *ngIf=\"nodes?.length > 0\">\n                <form-select label=\"Node level\" formControlName=\"nodeDatalinkColumn\" [items]=\"nodes\" [enableKeySelect]=\"false\" itemKey=\"key\" itemName=\"name\" node='Specify the node where the transform should be applied to.' [allowNullSelect]=\"true\" selectNullMessage='Use top level'>\n                </form-select>\n            </section>\n        </fieldset>\n    </form>\n</d-widget-section>\n\n<datalink-table-edit-properties *ngIf=\"tableFormService.currentForm.value\" [formsService]=\"tableFormService\" [isExpanded]=\"newTable\"></datalink-table-edit-properties>\n\n<ng-template [ngIf]=\"targetTableForm?.controls.table.value\">\n        <d-widget-section title=\"Columns\" [showExpandButton]=\"true\" [padding]=\"false\">\n        <d-table [enableMultiSelect]=\"true\"\n            [enableManualSort]=\"true\" [enableSort]=\"false\" [enableFilter]=\"false\" (onSortChanged)=\"columnSortChange($event)\" [columns]=\"columns\"\n            [dataObservable]=\"tableData\" (rowClick)=\"editColumn($event)\" [enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\">\n    \n            <ng-template #actions let-items=\"items\">\n                <d-button-splitdropdown text=\"Add Column\" title=\"Create a new column\" iconClass=\"fa fa-plus-square\" buttonClass=\"btn-primary\"\n                    (buttonClick)=\"newColumn(null)\">\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.AutoIncrement)\">Add Auto Incrementing Key Column</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.ValidFromDate)\">Add Valid from Date</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.ValidToDate)\">Add Valid to Date</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.IsCurrentField)\">Add Is Current Column</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.CreateAuditKey)\">Add Create Audit Key</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.UpdateAuditKey)\">Add Update Audit Key</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.CreateDate)\">Add Create Date</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.UpdateDate)\">Add Update Date</a>\n                    </li>\n                </d-button-splitdropdown>\n\n                <column-edit-bulk *ngIf=\"showBulkEdit && items.length > 0\" [columns]=\"items\" [columnsFormArray]=\"targetTableForm.controls.table.controls.dexihTableColumns\" (updated)=\"updateData()\" ></column-edit-bulk>\n                <d-button iconClass=\"fa fa-retweet\" class=\"ml-1\" (click)=\"resetColumns()\">Reset All Columns</d-button>\n                <d-button-preview class=\"ml-1\" (click)=\"previewData()\"></d-button-preview>\n                <d-button class=\"ml-1\" (click)=\"importTable()\" buttonClass=\"btn-primary\" iconClass=\"fa fa-refresh\" title=\"Re-import table from connection.\">\n                    Re-Import\n                </d-button>\n                <d-button (click)=\"createTable()\" class=\"ml-1\" buttonClass=\"btn-primary\" iconClass=\"fa fa-bullseye\" title=\"Drop & re-create the table on the connection.  Warning: This remove all data from the table!\">\n                    Drop & Create\n                </d-button>\n            </ng-template>\n    \n            <ng-template #selectedItemAction select=\"selectedItemAction\" let-column=\"item\">\n                <d-button-edit (click)=\"editColumn(column)\" class=\"ml-1\"></d-button-edit>\n            </ng-template>\n    \n            <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n                <d-button-delete (click)=\"deleteColumns(items)\" class=\"ml-1\"></d-button-delete>\n                <d-button iconClass=\"fa fa-th-list\" class=\"ml-1\" (click)=\"showBulkEdit=!showBulkEdit\">{{showBulkEdit ? 'Hide Bulk Edit' : 'Show Bulk Edit'}} </d-button>\n            </ng-template>\n    \n    \n        </d-table>\n        </d-widget-section>\n\n        <d-widget-section title=\"Unused Columns\" [showExpandButton]=\"true\" [padding]=\"false\">\n        <d-table [enableMultiSelect]=\"true\"\n            sortColumn=\"position\" [enableFilter]=\"false\" [columns]=\"columns\" [dataObservable]=\"missingColumnsData\"\n            [enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\">\n            <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n                <d-button (click)=\"addMissing(items)\" buttonClass=\"btn-primary\" iconClass=\"fa fa-plus-square\" title=\"Add selected outputs to the target table\">Add To Table</d-button>\n            </ng-template>\n    \n        </d-table>\n        </d-widget-section>\n    </ng-template>\n</div>\n\n<div *ngIf=\"showColumn\">\n    <column-edit [columnKey]=\"columnKey\" [tableForm]=\"this.targetTableForm.controls.table\" [deltaType]='deltaType' (isUpdated)=\"columnUpdated()\"></column-edit>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { HubFormsService } from '../../../hub.forms.service';\nimport { LogFactory, eLogLevel } from '../../../../../logging';\nimport { HubCache, eMappingStatus, updateStrategies, loadStrategies, ConnectionTables } from '../../../hub.models';\nimport { eDeltaType, eUpdateStrategy, eTransformWriterMethod,\n    DexihConnection, DexihDatalinkTarget } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'dexih-datalink-edit-target-form',\n    templateUrl: './datalink-edit-target.component.html'\n})\nexport class DatalinkEditTargetComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n    private hubCache: HubCache;\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    private _subscription: Subscription;\n    private _loadStrategySubscription: Subscription;\n\n    public eMappingStatus = eMappingStatus;\n    public eDeltaType = eDeltaType;\n\n    public tableFormService: HubFormsService;\n\n    public eUpdateStrategy = eUpdateStrategy;\n    public updateStrategies = updateStrategies;\n\n    public eTransformWriterMethod = eTransformWriterMethod;\n    public loadStrategies = loadStrategies;\n\n    public managedConnections: DexihConnection[];\n    public connectionTables: ConnectionTables[];\n\n    public showTableProperties = false;\n\n    public targets: DexihDatalinkTarget[] = [];\n\n    public logger = new LogFactory('datalink-edit-target-table');\n\n    public targetTableColumns = [\n        { name: 'table.name', title: 'Name', format: '' },\n        { name: 'table.logicalName', title: 'Logical', format: '' },\n        { name: 'nodeDatalinkColumn.logicalName', title: 'Node', format: ''}\n    ];\n\n    constructor(\n        private hubService: HubService,\n        authService: AuthService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router,\n        fb: FormBuilder) {\n\n        this.tableFormService = new HubFormsService(fb, hubService, authService);\n    }\n\n    ngOnInit() {\n        this.logger.LogC(() => `ngOnInit`, eLogLevel.Trace);\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n                this.hubService.getRemoteLibrariesObservable()\n            ).subscribe(result => {\n                let data = result[0];\n                this.hubCache = result[2];\n                this.datalinkForm = result[3];\n\n                this.action = data['action'];\n                this.pageTitle = data['pageTitle'];\n\n                if (this.hubCache.isLoaded() && this.datalinkForm) {\n                    this.connectionTables = this.hubCache.getConnectionTables();\n                    this.managedConnections = this.hubCache.getManagedConnections();\n                    this.logger.LogC(() => `ngOnInit - completed`, eLogLevel.Trace);\n                }\n\n                this.updateTargets();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Edit Target Table');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._loadStrategySubscription) { this._loadStrategySubscription.unsubscribe(); }\n    }\n\n    private updateTargets() {\n        this.targets = this.datalinkForm.controls.dexihDatalinkTargets.value.sort((a, b) => a.position - b.position);\n    }\n\n    editTable(target: DexihDatalinkTarget) {\n        this.router.navigate(['table-edit', target.key], { relativeTo: this.route });\n    }\n\n    addTable() {\n        this.router.navigate(['table-new'], { relativeTo: this.route });\n    }\n\n    deleteTables(targets: DexihDatalinkTarget[]) {\n        targets.forEach(target => {\n            this.editDatalinkService.deleteDatalinkTarget(this.datalinkForm, target.key);\n            this.updateTargets();\n        });\n    }\n\n    targetSortChange(targets: DexihDatalinkTarget[]) {\n        let position = 1;\n        targets.forEach(target => {\n            target.position = position++;\n        });\n        this.updateTargets();\n    }\n\n}\n","\n<d-widget-section title=\"Target Load Rules\" [showExpandButton]=\"true\">\n    <form *ngIf=\"datalinkForm\" [formGroup]=\"datalinkForm\">\n        <fieldset>\n            <form-checkbox label=\"Datalink is a query and does not populate target tables.\"\n                formControlName=\"isQuery\" [errors]=\"editDatalinkService.hubFormsService.formErrors.isQuery\">\n            </form-checkbox>\n\n            <span *ngIf=\"!datalinkForm?.controls.isQuery.value\">\n                <section>\n                    <form-select label=\"Load Strategy\" formControlName=\"loadStrategy\" [items]=\"loadStrategies\" itemKey=\"key\"\n                        itemName=\"description\" iconClass=\"fa fa-database\" note='Specify processing method for target table(s).'\n                        [errors]=\"editDatalinkService.hubFormsService.formErrors.loadStrategy\">\n                    </form-select>\n                </section>\n                    <section>\n                    <form-select label=\"Update Strategy\" formControlName=\"updateStrategy\" [items]=\"updateStrategies\"\n                        itemKey=\"key\" itemName=\"description\" iconClass=\"fa fa-database\" note='Specify how records should be inserted/updated in the target table.'\n                        [errors]=\"editDatalinkService.hubFormsService.formErrors.updateStrategy\">\n                    </form-select>\n                </section>\n\n                <section>\n                    <form-select label=\"Audit Connection\" formControlName=\"auditConnectionKey\" [items]=\"this.managedConnections\"\n                        itemKey=\"key\" itemName=\"name\" iconClass=\"fa fa-database\" [errors]=\"editDatalinkService.hubFormsService.formErrors.auditConnectionKey\"\n                        note='Specify the connection where audit data (such as job results) should be written to.'>\n                        <connection-edit-button [key]=\"datalinkForm.controls.auditConnectionKey.value\"></connection-edit-button>\n                    </form-select>\n                </section>\n\n                <div class=\"form-row\">\n                    <section class=\"form-group col-md-6\">\n                        <form-input label=\"Maximum Rows Per Commit\" type=\"number\" formControlName=\"rowsPerCommit\"\n                            placeholder=\"Enter maximum rows per commit\" iconClass=\"fa fa-list\" [errors]=\"editDatalinkService.hubFormsService.formErrors.rowsPerCommit\">\n                        </form-input>\n                    </section>\n                    <section class=\"form-group col-md-6\">\n                        <form-input label=\"Maximum Rows Per Progress Update\" type=\"number\" formControlName=\"rowsPerProgress\"\n                            placeholder=\"Enter maximum rows per progress update\" iconClass=\"fa fa-list\" [errors]=\"editDatalinkService.hubFormsService.formErrors.rowsPerProgress\">\n                        </form-input>\n                    </section>\n                </div>\n\n                <div class=\"form-row mb-2\">\n                    <form-checkbox label=\"Add a default row to the target table.  Edit the 'Default Value' of the target columns determine the value to populate.\"\n                        formControlName=\"addDefaultRow\" [errors]=\"editDatalinkService.hubFormsService.formErrors.addDefaultRow\">\n                    </form-checkbox>\n                </div>\n            </span>\n        </fieldset>\n    </form>\n</d-widget-section>\n\n\n<d-widget-section title=\"Tables\" [showExpandButton]=\"true\" [padding]=\"false\" *ngIf=\"!datalinkForm?.controls.isQuery.value\">\n    <d-table [enableMultiSelect]=\"true\" [enableManualSort]=\"true\" [enableSort]=\"false\"\n        [enableFilter]=\"false\" (onSortChanged)=\"targetSortChange($event)\" [columns]=\"targetTableColumns\" [data]=\"targets\"\n        (rowClick)=\"editTable($event)\">\n\n        <ng-template #actions let-items=\"items\">\n            <d-button-new class=\"mr-1\" (click)=\"addTable()\"></d-button-new>\n        </ng-template>\n\n        <ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n            <d-button-edit class=\"mr-1\" (click)=\"editTable(item)\"></d-button-edit>\n        </ng-template>\n\n        <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n            <d-button-delete class=\"mr-1\" (click)=\"deleteTables(items)\"></d-button-delete>\n        </ng-template>\n\n    </d-table>\n</d-widget-section>\n\n<router-outlet></router-outlet>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'transform-step',\n    templateUrl: 'transform-step.component.html',\n    styleUrls: ['./transforms.scss']\n\n})\nexport class TransformStepComponent implements OnInit {\n    @Input() routerLinkBefore: any;\n    @Input() routerLinkAfter: any;\n    @Input() routerLinkCurrent: any;\n    @Input() routerLinkPreview: any;\n    @Input() name: string;\n    @Input() title: string;\n    @Input() icon: string;\n    @Input() control;\n    @Input() showArrow = true;\n\n    @Input() showDelete = false;\n    @Input() isLast = false;\n\n    @Output() onDelete = new EventEmitter();\n    \n    \n    constructor() { }\n\n    ngOnInit() { \n    }\n}","<div class=\"d-flex\">\n    <li class=\"d-flex align-items-stretch p-0\">\n        <a *ngIf=\"routerLinkBefore\" [routerLink]=\"routerLinkBefore\" class=\"insert-before btn btn-sm btn-primary\"\n            title=\"Insert a transform before this\"><i class=\"fa fa-plus\"></i>\n        </a>\n\n        <a *ngIf=\"routerLinkAfter\" [routerLink]=\"routerLinkAfter\" class=\"insert-after btn btn-sm btn-primary\"\n            title=\"Insert a transform after this\"><i class=\"fa fa-plus\"></i>\n        </a>\n\n        <a *ngIf=\"showDelete\" class=\"delete btn btn-sm btn-danger mr-1\" href=\"javascript:void(0)\"\n            (click)=\"onDelete.emit()\" title=\"Delete\"><i class=\"fa fa-remove\"></i>\n        </a>\n\n        <a [routerLink]=\"routerLinkCurrent\" routerLinkActive=\"btn-outline-success\" class=\"btn btn-outline-primary\"\n            style=\"width:100%\" [title]=\"title\">\n            <div class=\"d-block\">\n                <div class=\"text-truncate\" style=\"max-width: 150px;\">\n                    {{name}}\n                </div>\n                <div>\n                    <span class=\"fa-4x\" [ngClass]=\"icon\"></span>\n                    <dexih-invalid-form-icon [control]=\"control\">\n                    </dexih-invalid-form-icon>\n                </div>\n            </div>\n        </a>\n    </li>\n\n    <li *ngIf=\"!isLast && showArrow\">\n        <div class=\"bg-primary\" [ngClass]=\"{'arrow': !isLast, 'arrow-last': isLast }\">\n            <a *ngIf=\"routerLinkPreview\" class=\"btn btn-sm btn-primary  mr-1\"\n                [ngClass]=\"{'preview': !isLast, 'preview-last': isLast}\" [routerLink]=\"routerLinkPreview\"\n                title=\"Preview transform data\"><i class=\"fa fa-search\"></i></a>\n\n            <div *ngIf=\"!isLast\" class=\"arrow-head\">\n\n            </div>\n        </div>\n    </li>\n    <li *ngIf=\"!showArrow\" class=\"no-arrow\">\n    </li>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { deltaTypes, securityFlags, HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { AuthService} from '../../../../+auth/auth.service';\nimport { Observable, Subscription, BehaviorSubject, combineLatest} from 'rxjs';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { TypeCodes } from '../../../hub.remote.models';\nimport { DexihTableColumn, eConnectionPurpose } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'transform-table-edit-form',\n    templateUrl: './transform-table-edit.component.html',\n})\nexport class TransformTableEditComponent implements OnInit, OnDestroy {\n\n    private _subscription: Subscription;\n\n    public canEdit = false;\n    public tableKey: number;\n\n    private hubCache: HubCache;\n    public action: string; // new or edit\n    public pageTitle: string;\n\n    public mainForm: FormGroup;\n\n    typeCodes = TypeCodes;\n    deltaTypes = deltaTypes;\n    securityFlags = securityFlags;\n\n    inputColumns: Array<DexihTableColumn>;\n\n    eConnectionPurpose = eConnectionPurpose;\n\n    datalinkTransformKey: number;\n    datalinkTransformForm: FormGroup;\n    transformTableForm: FormGroup;\n\n    columns = [\n        { name: 'position', title: '#', format: ''},\n        { control: 'name', title: 'Column Name', format: '', tooltip: 'description'},\n        { name: 'dataType', title: 'Data Type', format: ''},\n        { name: 'allowDbNull', title: 'Null?', format: 'Boolean'},\n        { name: 'logicalName', title: 'Logical Name', format: ''},\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar'},\n    ];\n\n    private _columnData = new BehaviorSubject<Array<DexihTableColumn>>(null);\n    columnData: Observable<Array<DexihTableColumn>> = this._columnData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router,\n        ) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                this.pageTitle = result[0]['pageTitle'];\n                let params = result[1];\n                this.hubCache = result[2];\n\n                this.datalinkTransformKey = +params['datalinkTransformKey'];\n                this.datalinkTransformForm = this.editDatalinkService.getDatalinkTransform(this.datalinkTransformKey);\n\n                this.transformTableForm = <FormGroup>this.datalinkTransformForm.controls.transformTable\n                this.updateColumnData();\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Transform Table Edit');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    updateColumnData() {\n        let tableData = [];\n\n        let tableColumns = <FormArray>this.transformTableForm.controls.dexihTableColumns;\n        tableColumns.controls\n        .filter(c => c.value.isValid)\n        .sort((a, b) => a.value.position - b.value.position)\n        .forEach(column => {\n            const columnForm = <FormGroup>column;\n            tableData.push({\n                key: column.value.key,\n                position: column.value.position,\n                name: columnForm.controls.name,\n                description: column.value.description,\n                dataType: column.value.dataType,\n                allowDbNull: column.value.allowDbNull,\n                logicalName: column.value.logicalName,\n                updateDate: column.value.updateDate,\n            });\n        });\n        this._columnData.next(tableData);\n    }\n\n  deleteColumn(column: DexihTableColumn) {\n      this.deleteSelected([column]);\n  }\n\n  deleteSelected(columns: Array<DexihTableColumn>) {\n      const columnsArray = <FormArray>this.transformTableForm.controls.dexihTableColumns;\n\n    columns.forEach(column => {\n        let columnIndex = columnsArray.controls.findIndex(c => c.value.key === column.key);\n        if (columnIndex >= 0) {\n            columnsArray.removeAt(columnIndex);\n        }\n        this.updateColumnData();\n    });\n  }\n\n  newColumn() {\n    this.router.navigate(['column'], { relativeTo: this.route.parent });\n  }\n\n  editColumn(column: DexihTableColumn) {\n    this.router.navigate(['column', column.key], { relativeTo: this.route.parent });\n  }\n\n  columnSortChange(items: Array<any>) {\n        let columnsArray = <FormArray>this.transformTableForm.controls.dexihTableColumns;\n      let position = 1;\n      items.forEach(c => {\n        let column = <FormGroup>columnsArray.controls.find(control => control.value.key === c.key);\n        column.controls.position.setValue(position++);\n      });\n\n      this.updateColumnData();\n  }\n\n  close() {\n      this.authService.navigateUp();\n  }\n\n}\n","<div>\n\t<div class=\"widget-body-toolbar\">\n\t\t<div class=\"form-row\">\n\t\t\t<div class=\"col-sm-6\">\n\t\t\t\t<h5>Transform Output Columns</h5>\n\t\t\t</div>\n\t\t\t<div class=\"col-sm-6 text-right\">\n                <d-button-close (click)=\"close()\"></d-button-close>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n    <d-table \n        [enableMultiSelect]=\"true\"\n        [enableManualSort]=\"true\"\n        (onSortChanged)=\"columnSortChange($event)\"\n        sortColumn=\"position\"\n        [columns]=\"columns\"\n        [dataObservable]=\"columnData\"\n        >\n            <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n                <d-button-delete (click)=\"deleteSelected(items)\" title=\"Delete selected columns\"></d-button-delete>\n            </ng-template>\n\n            <ng-template #selectedItemAction select=\"selectedItemAction\" let-column=\"item\">\n                <d-button-edit (click)=\"editColumn(column)\" title=\"Edit the column\"></d-button-edit>\n            </ng-template>\n\n            <ng-template #actions select=\"actionsTemplate\" let-items=\"items\">\n                <d-button-new (click)=\"deleteSelected(items)\" title=\"Create a new column\"></d-button-new>\n            </ng-template>\n\n    </d-table>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { seriesGrains } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Observable, Subscription, combineLatest } from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { LogFactory, eLogLevel } from '../../../../../logging';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { eTransformType, eTransformItemType, DexihDatalinkColumn, DexihDatalinkTransform,\n    eTypeCode, DexihDatalinkTransformItem, eAggregate, eSortDirection, eJoinNotFoundStrategyItems,\n    eDuplicateStrategyItems, eSeriesGrain } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'dexih-datalink-edit-transform-form',\n    templateUrl: './datalink-edit-transform.component.html',\n})\nexport class DatalinkEditTransformComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n    public datalinkTransformForm: FormGroup;\n    public seriesForm: FormGroup;\n\n    private _subscription: Subscription;\n    private _datalinkFormSubscription: Subscription;\n    private _transformsArraySubscription: Subscription;\n\n    public action: string; // new or edit\n    public pageTitle = 'Transform';\n    public message: string;\n    public datalinkTransformKey: number;\n\n    public showName = false;\n    public showDescription = false;\n\n    eTransformType = eTransformType;\n    eTransformItemType = eTransformItemType;\n    eDuplicateStrategyItems = eDuplicateStrategyItems;\n    eJoinNotFoundStrategyItems = eJoinNotFoundStrategyItems;\n\n    public allowMappingOutputs: boolean;\n    inputColumns: Array<DexihDatalinkColumn>;\n\n    eSeriesGrain = eSeriesGrain;\n    seriesGrains = seriesGrains;\n\n    public allowNode = false;\n    public nodeName = '';\n    public nodeType: eTransformItemType;\n\n    public logger = new LogFactory('datalink-edit-transform');\n\n    public nodes = [];\n\n    public formErrors = {};\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router\n    ) { }\n\n    ngOnInit() {\n        this.logger.LogC(() => `OnInit`, eLogLevel.Trace);\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n            ).subscribe(result => {\n\n                this.action = result[0]['action'];\n                this.pageTitle = result[0]['pageTitle'];\n                this.datalinkTransformKey = + result[1]['datalinkTransformKey'];\n                this.datalinkForm = result[2];\n\n                if (this.datalinkForm) {\n\n                    let transformsArray = (<FormArray>this.datalinkForm.controls.dexihDatalinkTransforms);\n\n                    if (this._transformsArraySubscription) { this._transformsArraySubscription.unsubscribe(); }\n                    this._transformsArraySubscription = transformsArray.valueChanges.subscribe(transforms => {\n                        let tmpDatalinkTransformForm = transforms\n                            .find(c => c.datalinkTransformKey === this.datalinkTransformKey);\n\n                        if (!tmpDatalinkTransformForm) {\n                            this.router.navigate(['properties'], { relativeTo: this.route.parent.parent });\n                        }\n                    });\n\n                    this.datalinkTransformForm = <FormGroup>transformsArray.controls\n                        .find(c => c.value.key === this.datalinkTransformKey);\n\n                    // if the transform isn't found, this is probably due to a save/reload which changes the keys.\n                    // navigate up one level when this happens.\n                    if (!this.datalinkTransformForm) {\n                        this.router.navigate(['properties'], { relativeTo: this.route.parent.parent });\n//                        this.authService.navigateUp();\n                        return;\n                    }\n\n                    let datalinkTransform = <DexihDatalinkTransform> this.datalinkTransformForm.value;\n\n                    let items = <FormArray>this.datalinkTransformForm.controls.dexihDatalinkTransformItems;\n\n                    if (datalinkTransform.transformType === eTransformType.Series) {\n                        this.seriesForm = <FormGroup>items.controls\n                            .filter(d => d.value.transformItemType === eTransformItemType.Series)[0];\n                    }\n\n                    if (datalinkTransform.transformType === eTransformType.Aggregate) {\n                        this.nodeType = eTransformItemType.GroupNode;\n                    }\n\n                    if (datalinkTransform.transformType === eTransformType.Lookup\n                        || datalinkTransform.transformType === eTransformType.Join) {\n                        this.nodeType = eTransformItemType.JoinNode;\n                    }\n\n                    if (this.nodeType) {\n                        let node = datalinkTransform.dexihDatalinkTransformItems\n                        .find(d => d.transformItemType === this.nodeType);\n\n                        if (node) {\n                            this.allowNode = true;\n                            this.nodeName = node.targetDatalinkColumn.name;\n                        } else {\n                            this.allowNode = false;\n                        }\n                    }\n\n                    this.inputColumns = datalinkTransform['runTime'].inputColumns;\n\n                    this.nodes = [];\n                    this.addNodeColumns(this.inputColumns, '');\n\n                    let transformType = datalinkTransform.transformType;\n                    this.allowMappingOutputs =\n                        // transformType === eTransformType.Group ||\n                        transformType === eTransformType.Series ||\n                        // transformType === eTransformType.Aggregate ||\n                        transformType === eTransformType.Rows ||\n                        transformType === eTransformType.Mapping ||\n                        transformType === eTransformType.Validation;\n\n                    if (this._datalinkFormSubscription) { this._datalinkFormSubscription.unsubscribe(); }\n                    this._datalinkFormSubscription = this.datalinkForm.valueChanges.subscribe(value => {\n                        this.formErrors = this.editDatalinkService.hubFormsService.getFormErrorMessages(this.datalinkForm, true);\n                    });\n\n                    if (!this.datalinkTransformForm) {\n                        this.router.navigate(['properties'], { relativeTo: this.route.parent.parent });\n                    }\n\n                    this.logger.LogC(() => `datalink form is loaded`, eLogLevel.Trace);\n                }\n            });\n\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Edit Transform');\n        }\n    }\n\n    private addNodeColumns(columns: DexihDatalinkColumn[], path: string) {\n        if (columns) {\n            columns.filter(c => c.dataType === eTypeCode.Node && c.isValid).forEach(col => {\n                let name = path ? (path + '.' + col.logicalName) : col.logicalName;\n                this.nodes.push({key: col.key, name: name});\n\n                if (col.childColumns && col.childColumns.length > 0) {\n                    this.addNodeColumns(col.childColumns, name);\n                }\n            });\n        }\n    }\n\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._transformsArraySubscription) { this._transformsArraySubscription.unsubscribe(); }\n        if (this._datalinkFormSubscription) { this._datalinkFormSubscription.unsubscribe(); }\n    }\n\n    // deleteTransform() {\n    //     this.logger.LogC(() => `deleteTransform`, eLogLevel.Trace);\n    //     this.editDatalinkService.deleteDatalinkTransform(this.datalinkTransformForm.value);\n    //     this.router.navigate(['properties'], { relativeTo: this.route });\n    // }\n\n    previewData() {\n        this.router.navigate(['preview-transform-data'], { relativeTo: this.route.parent });\n    }\n\n    toggleNode(allowNode: boolean) {\n        let items = <FormArray>this.datalinkTransformForm.controls.dexihDatalinkTransformItems;\n        let nodeItem = <FormGroup> items.controls.find(d => d.value.transformItemType === this.nodeType);\n        if (allowNode) {\n            if (!this.nodeName) {\n                this.nodeName = eTransformItemType[this.nodeType];\n            }\n\n            if (nodeItem) {\n                this.authService.informationDialog('Can not add node',  'Only one node can be added per transform.');\n                return;\n            }\n\n            let item = new DexihDatalinkTransformItem();\n            let outputColumn: DexihDatalinkColumn = new DexihDatalinkColumn();\n            outputColumn.position = 0;\n            outputColumn.key = this.hubService.getHubCache().getNextSequence();\n            outputColumn.name = this.nodeName;\n            outputColumn.logicalName = this.nodeName;\n            outputColumn.dataType = eTypeCode.Node;\n\n            item.position = -1;\n            item.datalinkTransformKey = this.datalinkTransformForm.value.key;\n            item.targetDatalinkColumn = outputColumn;\n            item.isValid = true;\n            item.transformItemType = this.nodeType;\n\n            let itemForm = this.editDatalinkService.hubFormsService\n                .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n            this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n        } else {\n            this.editDatalinkService.deleteDatalinkTransformItem(this.datalinkTransformForm, nodeItem);\n        }\n    }\n\n    updateNode(name: string) {\n        let items = <FormArray>this.datalinkTransformForm.controls.dexihDatalinkTransformItems;\n        let nodeItem = <FormGroup> items.controls.find(d => d.value.transformItemType === this.nodeType);\n        if (nodeItem) {\n            let column = <DexihDatalinkColumn> nodeItem.controls.targetDatalinkColumn.value;\n            if (column) {\n                column.name = name;\n                column.logicalName = name;\n                nodeItem.controls.targetDatalinkColumn.setValue(column);\n            }\n        }\n    }\n\n    newDragDropMapping(itemType: eTransformItemType, $event) {\n        let item = new DexihDatalinkTransformItem();\n        let outputColumn: DexihDatalinkColumn = $event.outputColumn;\n        let inputColumn: DexihDatalinkColumn = $event.inputColumn;\n        let io = new InputOutputColumns();\n\n\n        switch (itemType) {\n            case eTransformItemType.ColumnPair:\n                if (!outputColumn) {\n                    outputColumn = io.copyDatalinkColumn(inputColumn, 0, 'mapping');\n                }\n\n                outputColumn.key = this.hubService.getHubCache().getNextSequence();\n                if (outputColumn.childColumns) {\n                    outputColumn.childColumns.forEach(col => {\n                        col.key = this.hubService.getHubCache().getNextSequence();\n                    });\n                }\n                outputColumn.datalinkTableKey = null;\n                break;\n            case eTransformItemType.Sort:\n                item.sortDirection = eSortDirection.Ascending;\n                break;\n            case eTransformItemType.AggregatePair:\n                if (!outputColumn) {\n                    outputColumn = io.copyDatalinkColumn(inputColumn, 0, 'mapping');\n                }\n\n                outputColumn.key = this.hubService.getHubCache().getNextSequence();\n                if (outputColumn.childColumns) {\n                    outputColumn.childColumns.forEach(col => {\n                        col.key = this.hubService.getHubCache().getNextSequence();\n                    });\n                }\n                outputColumn.datalinkTableKey = null;\n                // outputColumn.name = 'Sum ' + outputColumn.name;\n                item.aggregate = eAggregate.Sum;\n                break;\n        }\n\n        if (itemType) {\n\n            item.datalinkTransformKey = this.datalinkTransformForm.value.key;\n            item.sourceDatalinkColumn = inputColumn;\n            item.targetDatalinkColumn = outputColumn;\n            item.isValid = true;\n\n            item.transformItemType = itemType;\n            let itemForm = this.editDatalinkService.hubFormsService\n                .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n            this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n        }\n    }\n\n    newDragDropJoin($event) {\n        let transformType = this.datalinkTransformForm.value.transformType;\n\n        if (transformType === eTransformType.Join\n            || transformType === eTransformType.Lookup) {\n            let joinColumn: DexihDatalinkColumn = $event.joinColumn;\n            let inputColumn: DexihDatalinkColumn = $event.inputColumn;\n            let item = new DexihDatalinkTransformItem();\n            item.transformItemType = eTransformItemType.JoinPair;\n            item.datalinkTransformKey = this.datalinkTransformForm.value.key;\n            item.sourceDatalinkColumn = inputColumn;\n            item.joinDatalinkColumn = joinColumn;\n            item.isValid = true;\n            let itemForm = this.editDatalinkService.hubFormsService\n                .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n\n            this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n        }\n    }\n}\n","\n<d-widget-section title=\"Properties\" [showExpandButton]=\"true\" [isExpanded]=\"false\">\n<form *ngIf=\"datalinkTransformForm\"  [formGroup]=\"datalinkTransformForm\">\n        <fieldset>\n            <section>\n                <form-input label=\"Transform Name\" formControlName=\"name\" placeholder=\"Enter a name for the transform\" [autocapitalize]=\"true\" iconClass=\"fa fa-list\"\n                    [errors]=\"formErrors.name\">\n                </form-input>\n            </section>\n            <section>\n                <form-textarea  label=\"Description\" formControlName=\"description\" placeholder=\"Enter the description.\"\n                    [errors]=\"formErrors.description\">\n                </form-textarea>\n            </section>\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Aggregate || this.datalinkTransformForm.value.transformType == eTransformType.Series || this.datalinkTransformForm.value.transformType == eTransformType.Rows || this.datalinkTransformForm.value.transformType == eTransformType.Mapping\">\n                <section>\n                    <form-checkbox label=\"Allow unmapped input columns to pass through to the next transform.\" formControlName=\"passThroughColumns\">\n                    </form-checkbox>\n                </section>\n            </div>\n            \n            <section *ngIf=\"nodes?.length > 0\">\n                <form-select label=\"Node level\" formControlName=\"nodeDatalinkColumn\" [items]=\"nodes\" [enableKeySelect]=\"false\" itemKey=\"key\" itemName=\"name\" node='Specify the node where the transform should be applied to.' [allowNullSelect]=\"true\" selectNullMessage='Use top level'>\n                </form-select>\n            </section>\n\n            <div class=\"form-row\">\n                <section class=\"form-group col-md-6\">\n                    <form-input type=\"number\" formControlName=\"maxInputRows\" label=\"Maximum number of rows to input into the transform (0 = unlimited)\"></form-input>\n                </section>\n                <section class=\"form-group col-md-6\">\n                    <form-input type=\"number\" formControlName=\"maxOutputRows\" label=\"Maximum number of rows to output into the transform (0 = unlimited)\"></form-input>\n                </section>\n            </div>\n        </fieldset>\n    </form>\n</d-widget-section>\n\n<d-widget-section *ngIf=\"datalinkTransformForm && (this.datalinkTransformForm.value.transformType == eTransformType.Join || this.datalinkTransformForm.value.transformType == eTransformType.Lookup)\" title=\"Join Settings\" [showExpandButton]=\"true\">\n    <form [formGroup]=\"datalinkTransformForm\">\n        <fieldset>\n            <datalink-table [datalinkTableForm]=\"datalinkTransformForm.controls.joinDatalinkTable\"></datalink-table>\n\n            <div class=\"form-row\">\n                <section class=\"form-group col-md-6\">\n                    <form-select [label]=\"'Strategy when ' + eTransformType[this.datalinkTransformForm.value.transformType] + ' produces duplicate matches'\" formControlName=\"joinDuplicateStrategy\" [items]=\"eDuplicateStrategyItems\"\n                        itemKey=\"key\" itemName=\"name\">\n                    </form-select>\n                </section>\n\n                <section class=\"form-group col-md-6\">\n                    <form-select [label]=\"'Strategy when ' + eTransformType[this.datalinkTransformForm.value.transformType] + ' produces no match '\" formControlName=\"joinNotFoundStrategy\" [items]=\"eJoinNotFoundStrategyItems\"\n                        itemKey=\"key\" itemName=\"description\">\n                    </form-select>\n                </section>\n            </div>\n        </fieldset>\n    </form>\n</d-widget-section>\n\n<d-widget-section *ngIf=\"datalinkTransformForm && this.datalinkTransformForm.value.transformType == eTransformType.Concatenate\" title=\"Concatenate Settings\" [showExpandButton]=\"true\">\n    <form [formGroup]=\"datalinkTransformForm\">\n        <fieldset>\n            <datalink-table [datalinkTableForm]=\"datalinkTransformForm.controls.joinDatalinkTable\"></datalink-table>\n        </fieldset>\n    </form>\n</d-widget-section>\n\n<d-widget-section *ngIf=\"datalinkTransformForm && this.datalinkTransformForm.value.transformType == eTransformType.Series\" title=\"Series Settings\" [showExpandButton]=\"true\">\n    <form [formGroup]=\"seriesForm\">\n        <fieldset>\n            <div class=\"form-row\">\n                <section class=\"form-group col-md-6\">\n                    <form-select label=\"Series Grain\" formControlName=\"seriesGrain\" [items]=\"seriesGrains\" itemKey=\"key\" itemName=\"name\">\n                    </form-select>\n                </section>\n                <section class=\"form-group col-md-6\">\n                    <form-select label=\"Input Column\" formControlName=\"sourceDatalinkColumn\" [items]=\"inputColumns\" [(textValue)]=\"sourceValue\"\n                    [enableKeySelect]=\"false\" itemKey=\"key\" itemName=\"name\" [errors]=\"sourceErrors\">\n                    </form-select>\n                </section>\n            </div>\n\n            <form-checkbox label=\"Fill empty series values\" formControlName=\"seriesFill\"></form-checkbox>\n\n            <div class=\"form-row\" *ngIf=\"seriesForm.controls.seriesFill.value && seriesForm.controls.seriesGrain.value !== eSeriesGrain.Number\">\n                <section class=\"form-group col-md-6\">\n                    <form-input type=\"date\" formControlName=\"seriesStart\" label=\"Series Start Date (empty to use first value)\"></form-input>\n                </section>\n                <section class=\"form-group col-md-6\">\n                    <form-input type=\"date\" formControlName=\"seriesFinish\" label=\"Series Finish Date (empty to use last value)\"></form-input>\n                </section>\n            </div>\n\n            <div class=\"form-row\" *ngIf=\"seriesForm.controls.seriesFill.value && seriesForm.controls.seriesGrain.value === eSeriesGrain.Number\">\n                <section class=\"form-group col-md-6\">\n                    <form-input formControlName=\"seriesStart\" label=\"Series Start Number (empty to use first value)\"></form-input>\n                </section>\n                <section class=\"form-group col-md-6\">\n                    <form-input formControlName=\"seriesFinish\" label=\"Series Finish Number (empty to use last value)\"></form-input>\n                </section>\n            </div>\n        </fieldset>\n    </form>\n</d-widget-section>\n\n<d-widget-section *ngIf=\"datalinkTransformForm && this.nodeType\" title=\"Group Node\" [showExpandButton]=\"true\">\n    <form>\n        <fieldset>\n            <form-checkbox label=\"Group rows under a node\" [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"allowNode\" (ngModelChange)=\"toggleNode($event)\"></form-checkbox>\n            <section *ngIf=\"allowNode\" class=\"form-group col-md-6\">\n                <form-input [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"nodeName\" (ngModelChange)=\"updateNode($event)\" label=\"Name of the node\"></form-input>\n            </section>\n        </fieldset>\n    </form>\n</d-widget-section>\n\n<div class=\"list-group-item p-1\">\n\n<div *ngIf=\"datalinkTransformForm\" class=\"d-flex\" cdkDropListGroup>\n        <d-widget class=\"d-none d-lg-inline\" title=\"Inputs\" height=\"80vh\" style=\"width:300px\" [scrollable]=\"true\">\n            <input-columns [datalinkTransformForm]='datalinkTransformForm'></input-columns>\n\n            <div class=\"mt-1\"  *ngIf=\"datalinkTransformForm.controls.joinDatalinkTable.value\">\n                <join-columns [datalinkTransformForm]='datalinkTransformForm' (inputJoinDrop)=\"newDragDropJoin($event)\"></join-columns>\n            </div>\n        </d-widget>\n\n        <div class=\"w-100 mr-1 ml-1\">\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Join || this.datalinkTransformForm.value.transformType == eTransformType.Lookup\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowJoin]=\"true\" title=\"{{eTransformType[this.datalinkTransformForm.value.transformType]}} Table\"  >\n                </mapping>\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Mapping\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowStandard]=\"true\" [allowMapping]=\"true\" [allowOutput]=\"true\" title=\"Mapping Functions\" (onColumnDrop)=\"newDragDropMapping(eTransformItemType.ColumnPair, $event)\">\n                </mapping>\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Sort\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowSort]=\"true\" title=\"Sort Columns\" (onColumnDrop)=\"newDragDropMapping(eTransformItemType.Sort, $event)\">\n                </mapping>\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Group || this.datalinkTransformForm.value.transformType == eTransformType.Aggregate  || this.datalinkTransformForm.value.transformType == eTransformType.Series  || this.datalinkTransformForm.value.transformType == eTransformType.Rows\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" title=\"Group Columns\"  [allowGroup]=\"true\" [allowSeries]=\"this.datalinkTransformForm.value.transformType == eTransformType.Series\"\n                    (onColumnDrop)=\"newDragDropMapping(eTransformItemType.Column, $event)\">\n                </mapping>\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Group\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowStandard]=\"true\" [allowAggregate]=\"true\" [allowOutput]=\"true\" title=\"Aggregate Functions\" (onColumnDrop)=\"newDragDropMapping(eTransformItemType.AggregatePair, $event)\">\n                </mapping>\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Series\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowStandard]=\"true\" [allowAggregate]=\"true\" [allowSeries]=\"true\" [allowOutput]=\"true\" title=\"Series/Aggregate Functions\" (onColumnDrop)=\"newDragDropMapping(eTransformItemType.AggregatePair, $event)\">\n                </mapping>\n\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowMapping]=\"true\" [allowOutput]=\"true\" title=\"Mappings\" (onColumnDrop)=\"newDragDropMapping(eTransformItemType.ColumnPair, $event)\">\n                </mapping>\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Aggregate\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowStandard]=\"true\" [allowAggregate]=\"true\" [allowOutput]=\"true\" title=\"Aggregate Functions\" (onColumnDrop)=\"newDragDropMapping(eTransformItemType.AggregatePair, $event)\">\n                </mapping>\n\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowMapping]=\"true\" [allowOutput]=\"true\" title=\"Mappings\" (onColumnDrop)=\"newDragDropMapping(eTransformItemType.ColumnPair, $event)\">\n                </mapping>\n\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Filter\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowStandard]=\"true\" [allowCondition]=\"true\" [allowOutput]=\"false\" title=\"Filters\" >\n                </mapping>\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Rows\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowRow]=\"true\" [allowStandard]=\"true\" [allowJoinNode]=\"false\" [allowOutput]=\"true\" [allowCondition]=\"true\" title=\"Row Functions\">\n                </mapping>\n            </div>\n        </div>\n\n        <d-widget class=\"d-none d-lg-inline\" [title]=\"'Outputs' + (datalinkTransformForm.controls.nodeDatalinkColumn?.value ? '(@' + datalinkTransformForm.controls.nodeDatalinkColumn.value.name + ')' : '')\"  height=\"80vh\" style=\"width:300px\"  [scrollable]=\"true\">\n            <output-columns [datalinkTransformForm]='datalinkTransformForm' [allowMappingOutputs]=\"allowMappingOutputs\" (inputOutputDrop)=\"newDragDropMapping(eTransformItemType.ColumnPair, $event)\"></output-columns>\n            <target-columns [datalinkTransformForm]='datalinkTransformForm' [targets]=\"datalinkForm.controls.dexihDatalinkTargets.value\" [allowMappingOutputs]=\"allowMappingOutputs\" (inputOutputDrop)=\"newDragDropMapping(eTransformItemType.ColumnPair, $event)\"></target-columns>\n        </d-widget>\n    </div>\n</div>","export * from './unGroup-edit.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { LogFactory, eLogLevel } from '../../../../../logging';\nimport { TypeCodes } from '../../../hub.remote.models';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { eFunctionType, eParameterDirection, DexihDatalinkColumn, DexihDatalinkTransformItem, eTransformItemType, DexihFunctionParameter, FunctionParameter, eTypeCode } from '../../../../shared/shared.models';\n\n@Component({\n\n  selector: 'dexih-unGroup-edit',\n  templateUrl: './unGroup-edit.component.html'\n})\nexport class UnGroupEditComponent implements OnInit, OnDestroy {\n  public hubCache: HubCache;\n\n  eFunctionType = eFunctionType;\n  eParameterDirection = eParameterDirection;\n  typeCodes = TypeCodes;\n\n  public pageTitle: string;\n\n  private _subscription: Subscription;\n  private _nodeSubscription: Subscription;\n\n  transformFunctionType: eFunctionType;\n  datalinkTransformItemKey: number;\n  datalinkKey: number;\n  datalinkTransformKey: number;\n\n  datalinkForm: FormGroup;\n  datalinkTransformForm: FormGroup;\n  datalinkTransformItemForm: FormGroup;\n\n  newDatalinkTransformItemForm: FormGroup;\n\n  inputColumns: Array<DexihDatalinkColumn>;\n  outputColumns: Array<DexihDatalinkColumn>;\n\n  variables = [];\n\n  allowOutput = false;\n  allowReturn = true;\n\n  logger = new LogFactory('unGroup-edit');\n\n  constructor(\n    private hubService: HubService,\n    private authService: AuthService,\n    private editDatalinkService: DatalinkEditService,\n    private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n        this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n      ).subscribe(result => {\n        this.pageTitle = result[0]['pageTitle'];\n        let params = result[1];\n        this.hubCache = result[2];\n        this.datalinkForm = result[3];\n\n        this.logger.LogC(() => `OnInit`, eLogLevel.Trace);\n\n        if (this.hubCache && this.hubCache.isLoaded() && this.datalinkForm) {\n            this.datalinkTransformKey = +params['datalinkTransformKey'];\n            this.datalinkTransformItemKey = +params['datalinkTransformItemKey'];\n            this.datalinkTransformForm = this.editDatalinkService.getDatalinkTransform(this.datalinkTransformKey);\n\n            this.variables = this.editDatalinkService.getVariables();\n\n            let nodeDatalinkColumn = this.datalinkTransformForm.controls.nodeDatalinkColumn.value;\n            let nodeDatalinkColumnKey = nodeDatalinkColumn ? nodeDatalinkColumn.key : null;\n            let io = new InputOutputColumns();\n            if (nodeDatalinkColumnKey) {\n              let inputColumns = <DexihDatalinkColumn[]> this.datalinkTransformForm.controls.runTime.value.inputColumns;\n              this.inputColumns = io.getAvailableColumns(inputColumns, nodeDatalinkColumnKey, 0);\n              this.outputColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n            } else {\n              this.inputColumns = this.datalinkTransformForm.controls.runTime.value.inputColumns;\n              this.outputColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n            }\n\n            this.inputColumns = this.inputColumns.filter(c => c.dataType === eTypeCode.Node);\n\n            if (this.datalinkTransformItemKey) {\n            this.datalinkTransformItemForm = this.editDatalinkService\n              .getDatalinkTransformItem(this.datalinkTransformForm, this.datalinkTransformItemKey);\n\n            if (!this.datalinkTransformItemForm) {\n              this.authService.navigateUp();\n              return;\n            }\n\n            // create a copy of the form item to allow for cancel.\n            this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n              .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, this.datalinkTransformItemForm.value);\n\n              let parameters = <FormArray>this.newDatalinkTransformItemForm.controls.dexihFunctionParameters;\n              parameters.controls.forEach((control: FormGroup) => {\n                let runTime = {};\n                runTime['functionParameter'] = new FunctionParameter();\n                if (control.value.datalinkColumn) {\n                  runTime['functionParameter'].name = control.value.datalinkColumn.name;\n                }\n                control.controls['runTime'].setValue(runTime);\n              });\n\n          } else {\n            let newItem = new DexihDatalinkTransformItem();\n            newItem.datalinkTransformKey = this.datalinkTransformKey;\n            newItem.transformItemType = eTransformItemType.UnGroup;\n            this.datalinkTransformItemKey = 0;\n\n            this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n              .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, newItem);\n          }\n\n          if (this._nodeSubscription) { this._nodeSubscription.unsubscribe(); }\n          this._nodeSubscription = this.newDatalinkTransformItemForm.controls.sourceDatalinkColumn.valueChanges\n            .subscribe(sourceDatalinkColumn => {\n              let parameters = <FormArray>this.newDatalinkTransformItemForm.controls.dexihFunctionParameters;\n              // clear previous parameters\n              while (parameters.length) {\n                parameters.removeAt(0);\n              }\n              let column = <DexihDatalinkColumn> sourceDatalinkColumn;\n              // add a paramter for each childColumn\n              if (column.childColumns && column.childColumns.length > 0) {\n                column.childColumns.forEach((childColumn, index) => {\n                  let outputColumn = io.copyDatalinkColumn(childColumn, 0, 'un-group')\n                  let newParameter = new DexihFunctionParameter();\n                  newParameter.datalinkTransformItemKey = this.datalinkTransformItemKey;\n                  newParameter.name = childColumn.name;\n                  newParameter.rank = childColumn.rank;\n                  newParameter.direction = eParameterDirection.Output;\n                  newParameter.dataType = childColumn.dataType;\n                  newParameter.position = index;\n                  newParameter.key = this.hubCache.getNextSequence();\n                  newParameter.datalinkColumn = outputColumn\n                  newParameter.isValid = true;\n                  newParameter['runTime'] = {};\n                  newParameter['runTime'].functionParameter = new FunctionParameter();\n                  newParameter['runTime'].functionParameter.name = childColumn.name;\n\n                  let newParameterForm = this.editDatalinkService.hubFormsService.datalinkFunctionParametersFormGroup(newParameter);\n                  parameters.push(newParameterForm);\n                });\n              }\n            });\n        }\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'UnGroup Node Edit');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._nodeSubscription) { this._nodeSubscription.unsubscribe(); }\n  }\n\n  canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      if (this.newDatalinkTransformItemForm && !this.newDatalinkTransformItemForm.pristine) {\n        this.authService.confirmDialog('The function has changed',\n          'The function has changed.  Do you want to discard the changes and continue?')\n          .then((confirm) => {\n              resolve(confirm);\n            }).catch(() => {\n              resolve(false);\n            });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  cancel() {\n    this.authService.navigateUp();\n  }\n\n  apply() {\n    this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, this.newDatalinkTransformItemForm);\n    this.newDatalinkTransformItemForm.markAsPristine();\n  }\n\n  applyExit() {\n    this.apply();\n    this.authService.navigateUp();\n  }\n\n}\n\n","<div *ngIf=\"newDatalinkTransformItemForm && inputColumns && outputColumns\">\n\n\t<div class=\"list-group-item list-group-item-info rounded-0\">\n\t\t<div class=\"d-flex flex-row\">\n\t\t\t<h5>Un-Group Column Node</h5>\n\t\t\t<div class=\"ml-auto\">\n\t\t\t\t<d-button-apply [disabled]=\"newDatalinkTransformItemForm.pristine\" (click)=\"!newDatalinkTransformItemForm.pristine && applyExit()\"\n\t\t\t\t class=\"mr-1\"></d-button-apply>\n\t\t\t\t<d-button-cancel (click)=\"cancel()\"></d-button-cancel>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<div class=\"container  mt-3 mb-3\" *ngIf=\"datalinkTransformForm\">\n\n\t\t<form [formGroup]=\"newDatalinkTransformItemForm\">\n\t\t\t<fieldset>\n\t\t\t\t<section class=\"col col-xs-12\">\n\t\t\t\t\t<form-select label=\"Column Node\" \n\t\t\t\t\t\tformControlName=\"sourceDatalinkColumn\" \n\t\t\t\t\t\t[items]=\"inputColumns\" \n\t\t\t\t\t\t[(textValue)]=\"sourceValue\"\n\t\t\t\t\t\t[enableTextEntry]=\"true\"\n\t\t\t\t\t\t[enableTextEntryMatch]=\"false\"\n\t\t\t\t\t\t[enableKeySelect]=\"false\"\n\t\t\t\t\t\titemKey=\"key\"\n\t\t\t\t\t\titemName=\"logicalName\"\n\t\t\t\t\t\t[errors]=\"sourceErrors\"\n\t\t\t\t\t\t>\n\t\t\t\t\t</form-select>\n\t\t\t\t</section>\n\n\t\t\t\t<div class=\"mt-1\">\n\n\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<div class=\"col border bg-primary text-white font-weight-bold text-truncate\">UnGroup Column</div>\n\t\t\t\t\t\t</div>\n\t\t\t\n\t\t\t\t\t\t<div *ngFor=\"let parameter of newDatalinkTransformItemForm.controls.dexihFunctionParameters.controls; let i = index;\" class=\"row\">\n\t\t\t\t\t\t\t<div class=\"col border bg-secondary text-white text-truncate\">\n\t\t\t\t\t\t\t\t<div>{{parameter.controls.name.value}}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t</form>\n\t</div>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { FormGroup } from '@angular/forms';\nimport { HubCache } from '../../../hub.models';\nimport { DexihTable, DexihTableColumn, eTransformType, RemoteLibraries } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'dexih-datalink-edit-validation-form',\n    templateUrl: './datalink-edit-validation.component.html',\n})\nexport class DatalinkEditValidationComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n    public datalinkTransformForm: FormGroup;\n\n    private _subscription: Subscription;\n    private _transformsChange: Subscription;\n\n    private hubCache: HubCache;\n    private remoteLibraries: RemoteLibraries;\n    public action: string; // new or edit\n    public pageTitle = 'Validation';\n    public message: string;\n\n    public showName = false;\n    public showDescription = false;\n\n    public inputColumns: Array<DexihTable>;\n    public outputColumns: Array<DexihTableColumn>;\n\n    constructor(\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute    ) { }\n\n    ngOnInit() {\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n                this.hubService.getRemoteLibrariesObservable()\n            ).subscribe(result => {\n                this.pageTitle = result[0]['pageTitle'];\n                this.hubCache = result[1];\n                this.datalinkForm = result[2];\n                this.remoteLibraries = result[3];\n\n                if (this.hubCache.isLoaded() && this.datalinkForm) {\n                    this.datalinkTransformForm = this.editDatalinkService.getValidationTransform();\n\n                    this._transformsChange = this.datalinkForm.controls.dexihDatalinkTransforms.valueChanges\n                    .subscribe(() => this.datalinkTransformForm = this.editDatalinkService.getValidationTransform());\n                }\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Edit Validation');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._transformsChange) { this._transformsChange.unsubscribe(); }\n    }\n\n    enableValidation() {\n        let transform = this.remoteLibraries.transforms.find(c => c.transformType === eTransformType.Validation);\n        this.datalinkTransformForm = this.editDatalinkService.insertDatalinkTransform(1, transform);\n    }\n\n    disableValidation() {\n        this.editDatalinkService.deleteDatalinkTransform(this.datalinkTransformForm.value);\n        this.datalinkTransformForm = null;\n    }\n}\n","<d-widget-section title='Validation' [showExpandButton]=\"false\">\n<div *ngIf=\"!datalinkTransformForm\">\n    <div class=\"alert alert-danger m-3\">\n        Target column validation is not enabled.\n        <hr>\n        <d-button *ngIf=\"!datalinkTransformForm\" (click)=\"enableValidation()\" buttonClass=\"btn btn-success\" iconClass=\"fa fa-check\"  [autoCompact]=\"false\"\n            title=\"Enable the validation on the target table.\">Enable</d-button>\n    </div>\n</div>\n\n<div *ngIf=\"datalinkTransformForm\">\n\n    <form *ngIf=\"datalinkTransformForm\" [formGroup]=\"datalinkTransformForm\">\n        <fieldset>\n            <section>\n                <d-button (click)=\"disableValidation()\" buttonClass=\"btn btn-success\" iconClass=\"fa fa-check\" [autoCompact]=\"false\"\n                    title=\"Enable the validation on the target table.\">Disable Validation</d-button>\n            </section>\n            <section>\n                <form-textarea label=\"Description\" formControlName=\"description\" placeholder=\"Enter the description.\">\n                </form-textarea>\n            </section>\n        </fieldset>\n    </form>\n</div>\n</d-widget-section>\n\n<div class=\"list-group-item p-1\">\n\n    <div *ngIf=\"datalinkTransformForm\" class=\"d-flex\">\n        <div class=\"mr-1 d-none d-md-inline\">\n            <div>\n                <div class=\"alert alert-primary mb-1\">\n                    <h4>Inputs</h4>\n                </div>\n                <div>\n                    <input-columns [datalinkTransformForm]='datalinkTransformForm'></input-columns>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"w-100\">\n            <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowCondition]=\"true\" [allowOutput]=\"true\"\n               [allowStandard]=\"true\" [allowValidation]=\"true\" title=\"Validation\">\n            </mapping>\n        </div>\n\n        <div class=\"ml-1 d-none d-md-inline\">\n            <div class=\"alert alert-primary mb-1\">\n                <h4>Outputs\n                    <div class=\"float-right\">\n                    </div>\n                </h4>\n            </div>\n            <output-columns [datalinkTransformForm]='datalinkTransformForm' [allowMappingOutputs]=\"allowMappingOutputs\"\n                (inputOutputDrop)=\"newDragDropMapping(eTransformItemType.ColumnPair, $event)\"></output-columns>\n        </div>\n\n    </div>\n</div>\n"],"sourceRoot":"webpack:///"}