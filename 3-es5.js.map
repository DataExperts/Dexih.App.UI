{"version":3,"sources":["webpack:///src/app/+hub/datajob/datajob-edit/datajob-edit-guard.ts","webpack:///src/app/+hub/datajob/datajob-edit/datajob-edit.module.ts","webpack:///src/app/+hub/datajob/datajob-edit/datajob-edit.routing.ts","webpack:///src/app/+hub/datajob/datajob-edit/properties/datajob-edit-properties.component.ts","webpack:///src/app/+hub/datajob/datajob-edit/properties/datajob-edit-properties.component.html","webpack:///src/app/+hub/datajob/datajob-edit/step-edit/datajob-edit-step.component.ts","webpack:///src/app/+hub/datajob/datajob-edit/step-edit/datajob-edit-step.component.html","webpack:///src/app/+hub/datajob/datajob-edit/steps-add/datajob-add-steps.component.ts","webpack:///src/app/+hub/datajob/datajob-edit/steps-add/datajob-add-steps.component.html","webpack:///src/app/+hub/datajob/datajob-edit/trigger-edit/datajob-edit-trigger.component.ts","webpack:///src/app/+hub/datajob/datajob-edit/trigger-edit/datajob-edit-trigger.component.html","webpack:///src/app/+hub/datajob/datajob-edit/trigger-edit/dexih-form-daysofweek.component.ts","webpack:///src/app/+hub/datajob/datajob-edit/trigger-edit/dexih-form-daysofweek.component.html"],"names":["DatajobEditGuard","component","canDeactivate","DatajobEditModule","ngModule","providers","imports","declarations","exports","datajobEditRoutes","path","redirectTo","data","navigateSkip","pageTitle","routes","children","Routing","forChild","DatajobEditPropertiesComponent","hubService","formService","route","router","hasChanged","showAllErrors","failActions","key","Continue","name","ContinueNonDependent","Abend","datajobChanged","triggerColumns","title","format","_triggerTableData","triggerTableData","asObservable","stepColumns","tags","_stepTableData","stepTableData","eAlertLevelItems","eAlertLevel","isFirst","_subscription","getHubCacheObservable","getCurrentFormObservable","subscribe","result","hubCache","mainForm","isLoaded","managedConnections","getManagedConnections","updateTriggers","updateSteps","controls","value","steps","updateDependencies","e","addHubClientErrorMessage","unsubscribe","triggerData","triggers","forEach","triggerControl","trigger","push","details","getTriggerDetails","updateDate","errors","valid","next","stepData","sort","a","b","position","stepControl","step","datalink","hub","dexihDatalinks","find","c","datalinkKey","getObjectTags","Datalink","dependencies","getDependencies","dexihDatalinkDependencies","inputs","getInputs","dexihDatalinkStepColumns","items","item","index","setValue","depString","dep","dexihDatalinkSteps","dependentDatalinkStepKey","columns","column","defaultValue","navigate","relativeTo","parent","triggersArray","dexihTriggers","findIndex","removeAt","stepsArray","clear","allSteps","stepTargets","minKey","tables","getDatalinkTargetTables","sourceTables","getDatalinkSourceTables","stepTarget","t","indexOf","datalinkStepKey","datalinkDependencyFormGroup","dexihDatalinkTargets","map","tableKey","getDatalinkTable","sourceDatalinkTable","dexihDatalinkTransforms","transform","joinDatalinkTable","joinTables","datalinkTable","sourceType","Table","sourceTableKey","sourceDatalinkKey","editTrigger","stepSortChanged","editDatalinkStep","selector","templateUrl","DatajobEditStepComponent","authService","fb","stepFormService","params","datajobForm","navigateUp","stepForm","datalinkStepFormGroup","startForm","_datalinkSubscription","valueChanges","updateDatalinkStepColumns","currentForm","stepParameters","parameters","currentParameters","parameter","currentParameter","newParameter","newFormParameter","stepColumnsForm","length","inputColumns","dexihDatalinkColumns","filter","isInput","col","stepColumn","dataType","logicalName","columnGroup","rank","maxLength","deltaType","allowDbNull","isUnicode","isValid","stepColumnForm","datalinkStepColumnFormGroup","datalinkDependencies","newDep","oldDep","insert","DatajobAddStepsComponent","_tableData","tableData","updateDatalinks","_hubCacheChangeSubscription","$event","newDatalinks","Array","datalinks","d","sourceTable","getTable","datalinkType","sourceTableName","targetTableName","target","table","join","getHubCacheChangeObservable","hubCacheChange","changeClass","existingDatalinks","formDexihDatalinkSteps","exists","names","confirmDialog","then","confirm","addSelectedConfirmed","reason","newDatalinkStep","i","toString","datajobKey","stepFormGroup","DatajobEditTriggerComponent","location","triggerFormService","action","triggerKey","triggerForm","originalTrigger","triggerFormGroup","sharedFunctions","DexihFormDaysOfWeekComponent","_changeDetectionRef","eDayOfWeek","daysOfWeek","id","Math","random","substr","onChange","onTouched","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","detectChanges","fn","provide","useExisting","multi","selectAllDays","selectNoDays","selectWeekend","selectWeekDays"],"mappings":"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","file":"3-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable, combineLatest} from 'rxjs';\n\nexport interface CanComponentDeactivate {\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\n}\n\n@Injectable()\nexport class DatajobEditGuard implements CanDeactivate<CanComponentDeactivate> {\n\n  canDeactivate(component: CanComponentDeactivate) {\n    return component && component.canDeactivate ? component.canDeactivate() : true;\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routing } from './datajob-edit.routing';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { DatajobEditComponent } from './datajob-edit.component';\nimport { DatajobEditPropertiesComponent } from './properties/datajob-edit-properties.component';\nimport { DatajobEditTriggerComponent } from './trigger-edit/datajob-edit-trigger.component';\nimport { DatajobEditStepComponent } from './step-edit/datajob-edit-step.component';\nimport { DatajobAddStepsComponent } from './steps-add/datajob-add-steps.component';\n\nimport { DexihFormDaysOfWeekComponent } from './trigger-edit/dexih-form-daysofweek.component';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { DatajobEditGuard } from './datajob-edit-guard';\nimport { HubSharedModule } from '../../hub.shared.module';\n\n@NgModule({\n    imports: [\n        SharedModule,\n        CommonModule,\n        FormsModule,\n        Routing,\n        ReactiveFormsModule,\n        HubSharedModule\n    ],\n    declarations: [\n        DatajobEditComponent,\n        DatajobEditPropertiesComponent,\n        DatajobEditTriggerComponent,\n        DatajobEditStepComponent,\n        DatajobAddStepsComponent,\n        DexihFormDaysOfWeekComponent\n    ],\n    providers: [ HubFormsService, DatajobEditGuard ],\n    exports: []\n})\nexport class DatajobEditModule {\n\n    static forRoot(): ModuleWithProviders<DatajobEditModule> {\n        return {\n            ngModule: DatajobEditModule,\n            providers: [ HubFormsService ]\n        };\n    }\n}\n","import { Routes, RouterModule } from '@angular/router';\nimport { DatajobEditComponent } from './datajob-edit.component';\nimport { DatajobEditPropertiesComponent } from './properties/datajob-edit-properties.component';\nimport { DatajobEditTriggerComponent } from './trigger-edit/datajob-edit-trigger.component';\nimport { DatajobEditStepComponent } from './step-edit/datajob-edit-step.component';\nimport { DatajobAddStepsComponent } from './steps-add/datajob-add-steps.component';\nimport { DatajobEditGuard} from './datajob-edit-guard';\n\nexport const datajobEditRoutes = [\n        { path: '', redirectTo: 'properties',  data: { navigateSkip: true}},\n        { path: 'properties', component: DatajobEditPropertiesComponent, data: { navigateSkip: true, pageTitle: 'Properties' } },\n        { path: 'trigger', component: DatajobEditTriggerComponent, data: { pageTitle: 'New Trigger' } },\n        { path: 'trigger/:triggerKey', component: DatajobEditTriggerComponent, data: { pageTitle: 'Edit Trigger' }  },\n        { path: 'step', component: DatajobEditStepComponent, data: { pageTitle: 'New Step' }  },\n        { path: 'step/:datalinkStepKey', component: DatajobEditStepComponent, data: { pageTitle: 'Edit Step' }  },\n        { path: 'add-steps', component: DatajobAddStepsComponent, data: { pageTitle: 'Add Multiple Steps' }  }\n];\n\nexport const routes: Routes = [\n        { path: '', component: DatajobEditComponent, canDeactivate: [DatajobEditGuard], children: datajobEditRoutes},\n];\n\n\nexport const Routing = RouterModule.forChild(routes);\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubService } from '../../../hub.service';\nimport { HubFormsService } from '../../../hub.forms.service';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { HubCache } from '../../../hub.models';\nimport { DexihConnection, eFailAction, DexihDatalinkStep, DexihDatalinkDependency, DexihDatalinkStepColumn, DexihTrigger,\n  DexihDatalinkTable, eSourceType, eSharedObjectType, eAlertLevelItems, eAlertLevel } from '../../../../shared/shared.models';\n\n@Component({\n\n  selector: 'dexih-datajob-edit-form',\n  templateUrl: './datajob-edit-properties.component.html'\n})\nexport class DatajobEditPropertiesComponent implements OnInit, OnDestroy {\n  public hubCache: HubCache;\n\n  private _subscription: Subscription;\n\n  hasChangedObserve: Observable<boolean>;\n\n  public managedConnections: DexihConnection[];\n\n  hasChanged = false;\n  showAllErrors = false;\n\n  failActions = [\n    { key: eFailAction.Continue, name: 'Continue Execution' },\n    { key: eFailAction.ContinueNonDependent, name: 'Continue execution (non dependent datalinks only)' },\n    { key: eFailAction.Abend, name: 'Abend' },\n  ];\n\n  public datajobChanged = false;\n  public mainForm: FormGroup;\n\n  triggerColumns = [\n    { name: 'details', title: 'Details', format: 'Html' },\n    { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    { name: 'errors', title: 'Errors', format: '' },\n  ];\n\n  private _triggerTableData = new BehaviorSubject<Array<any>>(null);\n  triggerTableData: Observable<Array<any>> = this._triggerTableData.asObservable();\n\n  stepColumns = [\n    { name: 'name', title: 'Name', format: '' },\n    { name: 'datalink', title: 'Datalink', format: '', tags: 'tags' },\n    { name: 'dependencies', title: 'Dependencies', format: 'Html' },\n    { name: 'inputs', title: 'Inputs', format: 'Html'},\n    { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    { name: 'errors', title: 'Errors', format: '' },\n  ];\n\n  private _stepTableData = new BehaviorSubject<Array<any>>(null);\n  stepTableData: Observable<Array<any>> = this._stepTableData.asObservable();\n\n  eAlertLevelItems = eAlertLevelItems;\n  eAlertLevel = eAlertLevel;\n\n  constructor(private hubService: HubService,\n    public formService: HubFormsService,\n    private route: ActivatedRoute,\n    private router: Router) {\n  }\n\n  ngOnInit() {\n    let isFirst = true;\n\n    try {\n      this._subscription = combineLatest(\n        this.hubService.getHubCacheObservable(),\n        this.formService.getCurrentFormObservable(),\n      ).subscribe(result => {\n        this.hubCache = result[0];\n        this.mainForm = result[1];\n\n        if (!this.hubCache.isLoaded()) { return; }\n\n        this.managedConnections = this.hubCache.getManagedConnections();\n        this.updateTriggers();\n        this.updateSteps();\n\n        \n        // if this is first load of new form, then reset the dependencies.\n        if (this.mainForm.controls['key'].value <= 0 && isFirst) {\n          isFirst = false;\n          let steps = this.mainForm.controls['dexihDatalinkSteps'].value;\n          this.updateDependencies(steps);\n        }\n\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Data Job Edit Properties');\n    }\n\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n  }\n\n  updateTriggers() {\n    let triggerData = [];\n    if (this.mainForm) {\n      let triggers = (<FormArray>this.mainForm.controls['dexihTriggers']);\n      triggers.controls.forEach(triggerControl => {\n        let trigger = triggerControl.value;\n        triggerData.push({\n          key: trigger.key,\n          details: this.hubCache.getTriggerDetails(trigger),\n          updateDate: trigger.updateDate,\n          errors: triggerControl.valid ? 'No errors' : 'Errors'\n        });\n      });\n    }\n\n    this._triggerTableData.next(triggerData);\n  }\n\n  updateSteps() {\n    let stepData = [];\n    if (this.mainForm) {\n      let steps = (<FormArray>this.mainForm.controls['dexihDatalinkSteps']);\n      steps.controls.sort((a: FormGroup, b: FormGroup) => a.controls.position.value - b.controls.position.value)\n        .forEach(stepControl => {\n        let step = <DexihDatalinkStep> stepControl.value;\n        let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === step.datalinkKey);\n        stepData.push({\n          key: step.key,\n          name: step.name,\n          datalinkKey: datalink.key,\n          datalink: datalink ? datalink.name : 'Not specified',\n          tags: this.hubCache.getObjectTags(eSharedObjectType.Datalink, datalink.key),\n          dependencies: this.getDependencies(step.dexihDatalinkDependencies),\n          inputs: this.getInputs(step.dexihDatalinkStepColumns),\n          updateDate: step.updateDate,\n          errors: stepControl.valid ? 'No errors' : 'Errors'\n        });\n      });\n    }\n\n    this._stepTableData.next(stepData);\n  }\n\n  stepSortChanged(items: Array<DexihDatalinkStep>) {\n    let steps = (<FormArray>this.mainForm.controls['dexihDatalinkSteps']);\n    items.forEach((item, index) => {\n        let step = <FormGroup>steps.controls\n            .find(c => c.value.key === item.key);\n        if (step) {\n          step.controls.position.setValue(index);\n        }\n    });\n}\n\n  getDependencies(dependencies: Array<DexihDatalinkDependency>) {\n    let depString = '';\n\n    if (dependencies) {\n      dependencies.forEach(dep => {\n        let step = this.mainForm.value.dexihDatalinkSteps.find(c => c.key === dep.dependentDatalinkStepKey);\n        if (step) {\n          depString = depString + step.name + '<br>';\n        } else {\n          depString = depString + 'Error: step not found.<br>';\n        }\n      });\n    }\n    return depString;\n\n  }\n\n  getInputs(columns: Array<DexihDatalinkStepColumn>) {\n    let depString = '';\n\n    if (columns) {\n      columns.forEach(column => {\n        depString = depString + column.name + ' = ' + column.defaultValue + '<br>';\n      });\n    }\n    return depString;\n\n  }\n\n  newTrigger() {\n    this.router.navigate(['trigger'], { relativeTo: this.route.parent });\n  }\n\n  addDatalinkSteps() {\n    this.router.navigate(['add-steps'], { relativeTo: this.route.parent });\n  }\n\n  editTrigger(trigger: DexihTrigger) {\n    this.router.navigate(['trigger', trigger.key], { relativeTo: this.route.parent });\n  }\n\n  deleteTriggers(triggers: Array<DexihTrigger>) {\n    let triggersArray = <FormArray>this.mainForm.controls.dexihTriggers;\n\n    triggers.forEach(trigger => {\n      let index = triggersArray.controls.findIndex(c => c.value.key === trigger.key);\n      triggersArray.removeAt(index);\n    });\n    this.updateTriggers();\n  }\n\n  newDatalinkStep() {\n    this.router.navigate(['step'], { relativeTo: this.route.parent });\n  }\n\n  editDatalinkStep(step: DexihDatalinkStep) {\n    this.router.navigate(['step', step.key], { relativeTo: this.route.parent });\n  }\n\n  deleteDatalinkSteps(steps: Array<DexihDatalinkStep>) {\n    let stepsArray = <FormArray>this.mainForm.controls.dexihDatalinkSteps;\n\n    steps.forEach(step => {\n      let index = stepsArray.controls.findIndex(c => c.value.key === step.key);\n      stepsArray.removeAt(index);\n    });\n    this.updateSteps();\n  }\n\n  clearDependencies(steps: Array<DexihDatalinkStep>) {\n    let stepsArray = <FormArray>this.mainForm.controls.dexihDatalinkSteps;\n    steps.forEach(step => {\n      let stepControl = <FormGroup> stepsArray.controls.find(c => c.value.key === step.key);\n      let dependencies = <FormArray> stepControl.controls['dexihDatalinkDependencies'];\n      dependencies.clear();\n    });\n\n    this.updateSteps();\n  }\n\n  updateDependencies(steps: Array<DexihDatalinkStep>) {\n    let stepsArray = <FormArray>this.mainForm.controls.dexihDatalinkSteps;\n    let allSteps = stepsArray.value;\n\n    let stepTargets: Array<{key: number, tables: Array<number>}> = [];\n    let minKey = -1;\n\n    allSteps.forEach(step => {\n      stepTargets.push( {key: step.key, tables:this.getDatalinkTargetTables(step.datalinkKey)});\n    });\n\n    steps.forEach(step => {\n      let stepControl = <FormGroup> stepsArray.controls.find(c => c.value.key === step.key);\n      let dependencies = <FormArray> stepControl.controls['dexihDatalinkDependencies'];\n      dependencies.clear();\n\n      let sourceTables = this.getDatalinkSourceTables(step.datalinkKey);\n\n      stepTargets.forEach(stepTarget => {\n        for( let t of stepTarget.tables) {\n          if (sourceTables.indexOf(t) >= 0) {\n            let dep = new DexihDatalinkDependency();\n            dep.key = minKey;\n            dep.datalinkStepKey =step.key;\n            dep.dependentDatalinkStepKey = stepTarget.key;\n            dependencies.push(this.formService.datalinkDependencyFormGroup(dep));\n            minKey--;\n            break;\n          }\n        }\n      });\n\n    });\n\n    this.updateSteps();\n  }\n\n  getDatalinkTargetTables(datalinkKey: number): Array<number> {\n    let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === datalinkKey);\n    if (!datalink) { return []; }\n\n    return datalink.dexihDatalinkTargets.map(c => c.tableKey);\n  }\n\n  // gets any dependent source tables from the given datalink key.\n  getDatalinkSourceTables(datalinkKey: number): Array<number> {\n    let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === datalinkKey);\n    if (!datalink) { return []; }\n\n    let tables = this.getDatalinkTable(datalink.sourceDatalinkTable);\n\n    datalink.dexihDatalinkTransforms.forEach(transform => {\n      if (transform.joinDatalinkTable) {\n        let joinTables = this.getDatalinkTable(transform.joinDatalinkTable);\n        joinTables.forEach(t => {\n          if (tables.indexOf(t) < 0) {\n            tables.push(t);\n          }\n        });\n      }\n    });\n    \n    return tables;\n  }\n\n  getDatalinkTable(datalinkTable: DexihDatalinkTable) : Array<number> {\n    if (!datalinkTable) {\n      return [];\n    }\n\n    switch(datalinkTable.sourceType) {\n      case eSourceType.Table: {\n        return [datalinkTable.sourceTableKey];\n      }\n      case eSourceType.Datalink: {\n        return this.getDatalinkSourceTables(datalinkTable.sourceDatalinkKey);\n      }\n    }\n\n    return [];\n  }\n\n}\n","<d-widget-section title=\"Properties\" [showExpandButton]=\"true\">\n    <form *ngIf=\"mainForm\" [formGroup]=\"mainForm\">\n        <fieldset>\n            <section>\n                <form-input label=\"Data Job Name\" formControlName=\"name\" placeholder=\"Enter the job name.\"\n                    [autocapitalize]=\"true\" iconClass=\"fa fa-list\" [errors]=\"formService.formErrors.name\">\n                </form-input>\n            </section>\n\n            <section>\n                <form-textarea label=\"Description\" [showPreview]=\"true\" formControlName=\"description\"\n                    placeholder=\"Enter the description.\" [errors]=\"formService.formErrors.description\">\n                </form-textarea>\n            </section>\n\n            <section>\n                <form-select label=\"Datalink Fail Action\" formControlName=\"failAction\" [items]=\"failActions\"\n                    itemKey=\"key\" itemName=\"name\" iconClass=\"fa fa-database\"\n                    [errors]=\"formService.formErrors.failAction\" note=\"Action to take when a datalink execution fails.\"\n                    [enableFilter]=\"false\">\n                </form-select>\n            </section>\n\n            <section>\n                <form-select label=\"Alerting Level\" formControlName=\"alertLevel\" [items]=\"eAlertLevelItems\"\n                    itemKey=\"key\" itemName=\"description\" iconClass=\"fa fa-bell\"\n                    [errors]=\"formService.formErrors.alertLevel\" note=\"When alerts should be sent.\"\n                    [enableFilter]=\"false\">\n                </form-select>\n            </section>\n\n            <section>\n                <form-select label=\"Audit Connection\" formControlName=\"auditConnectionKey\" [items]=\"managedConnections\"\n                    itemKey=\"key\" itemName=\"name\" iconClass=\"fa fa-database\"\n                    [errors]=\"formService.formErrors.auditConnectionKey\"\n                    note='Specify the connection where audit data (such as job results) should be written to.'\n                    [errors]=\"formService.formErrors.auditConnectionKey\">\n                    <connection-edit-button [key]=\"mainForm.controls.auditConnectionKey.value\"></connection-edit-button>\n                </form-select>\n            </section>\n\n            <section class=\"col col-12\">\n                <form-checkbox label=\"Trigger datajob when new files arrive\" formControlName=\"fileWatch\">\n                </form-checkbox>\n            </section>\n\n            <section class=\"col col-12\">\n                <form-checkbox label=\"Auto Start\" formControlName=\"autoStart\"\n                    note=\"Re-activate the datajob when the remote agent is restarted.\">\n                </form-checkbox>\n            </section>\n        </fieldset>\n    </form>\n</d-widget-section>\n\n<d-widget-section title=\"Parameters\" [showExpandButton]=\"true\" [padding]=\"true\" [padding]=\"true\">\n    <input-parameters *ngIf=\"mainForm\" [showEdit]=\"true\" [parameters]=\"mainForm?.controls.parameters\" [formsService]=\"formService\">\n    </input-parameters>\n</d-widget-section>\n\n<d-widget-section title=\"Triggers\" [showExpandButton]=\"true\" [padding]=\"false\">\n    <d-table [enableMultiSelect]=\"true\" [enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\" [enableManualSort]=\"true\" sortColumn=\"position\" [columns]=\"triggerColumns\"\n        [dataObservable]=\"triggerTableData\" (rowClick)='editTrigger($event)'>\n        <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n            <d-button-delete (click)=\"deleteTriggers(items)\"></d-button-delete>\n        </ng-template>\n\n        <ng-template #selectedItemAction select=\"selectedItemAction\" let-trigger=\"item\">\n            <d-button-edit (click)=\"editTrigger(trigger)\"></d-button-edit>\n        </ng-template>\n\n        <ng-template #actions select=\"actionsTemplate\" let-items=\"items\">\n            <d-button-new (click)=\"newTrigger()\" title=\"New Trigger\"></d-button-new>\n        </ng-template>\n\n    </d-table>\n</d-widget-section>\n\n<d-widget-section title=\"Steps\" [showExpandButton]=\"true\" [padding]=\"false\">\n    <d-table [enableMultiSelect]=\"true\" [enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\" [enableManualSort]=\"true\" (onSortChanged)=\"stepSortChanged($event)\" sortColumn=\"position\" [columns]=\"stepColumns\" [tags]=\"this.hubCache.hub.dexihTags\"\n        [dataObservable]=\"stepTableData\" (rowClick)='editDatalinkStep($event)'>\n        <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n            <d-button  iconClass=\"fa fa-magic\" (click)=\"updateDependencies(items)\" text=\"AutoSet Dependencies\"></d-button>\n            <d-button class=\"ml-1\" iconClass=\"fa fa-eraser\" (click)=\"clearDependencies(items)\" text=\"Clear Dependencies\"></d-button>\n            <d-button-delete class=\"ml-1\" (click)=\"deleteDatalinkSteps(items)\"></d-button-delete>\n        </ng-template>\n\n        <ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n            <d-button-edit class=\"mr-1\" (click)=\"editDatalinkStep(item)\"></d-button-edit>\n        </ng-template>\n\n        <ng-template #actions select=\"actionsTemplate\" let-items=\"items\">\n            <d-button-new class=\"mr-1\" (click)=\"newDatalinkStep()\" title=\"Create a new step\"></d-button-new>\n            <d-button class=\"mr-1\" (click)=\"addDatalinkSteps()\" iconClass=\"fa fa-plus-square\" buttonClass=\"btn-primary\"\n                title=\"Select multiple datalinks to add as steps\">Add</d-button>\n        </ng-template>\n    </d-table>\n</d-widget-section>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HubService } from '../../../hub.service';\nimport { Observable, BehaviorSubject, Subscription, combineLatest} from 'rxjs';\nimport { FormGroup, FormArray, FormBuilder } from '@angular/forms';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubFormsService } from '../../../hub.forms.service';\nimport { HubCache, DexihInputParameter } from '../../../hub.models';\nimport { InputColumn, DexihDatalinkStep, DexihDatalinkStepColumn, DexihDatalinkDependency, InputParameterBase, eSharedObjectType } from '../../../../shared/shared.models';\n\n@Component({\n    selector: 'datajob-edit-step',\n    templateUrl: './datajob-edit-step.component.html'\n})\nexport class DatajobEditStepComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n    private _datalinkSubscription: Subscription;\n\n    public hubCache: HubCache;\n\n    private datalinkStepKey: number;\n    datajobKey: number;\n\n    datajobForm: FormGroup;\n\n    stepFormService: HubFormsService;\n    showAllErrors = false;\n\n    public inputColumns: InputColumn[];\n\n    stepColumns = [\n        { name: 'name', title: 'Name', format: '', tags: 'tags' },\n        { name: 'datalink', title: 'Datalink', format: '' },\n        { name: 'dependencies', title: 'Dependencies', format: '' },\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    private _stepTableData = new BehaviorSubject<Array<any>>(null);\n    stepTableData: Observable<Array<any>> = this._stepTableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private formService: HubFormsService,\n        private route: ActivatedRoute,\n        fb: FormBuilder) {\n        // create a separate formService instance to manage the copied form\n        this.stepFormService = new HubFormsService(fb, hubService, authService);\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.formService.getCurrentFormObservable(),\n            ).subscribe(result => {\n                let params = result[1];\n                this.hubCache = result[2];\n                let mainForm = result[3];\n\n                this.datalinkStepKey = +params['datalinkStepKey'];\n\n                if (mainForm) {\n                    this.datajobForm = mainForm;\n                    let step: DexihDatalinkStep;\n\n                    if (this.datalinkStepKey) {\n                        step = mainForm.value.dexihDatalinkSteps\n                            .find(c => c.key === this.datalinkStepKey);\n\n                        if (!step) {\n                            this.authService.navigateUp();\n                            return;\n                        }\n                    } else {\n                        step = new DexihDatalinkStep();\n                        // if new step, then set a temporary key of -1 or lower.\n                        let minKey = -1;\n                        this.datajobForm.value.dexihDatalinkSteps.forEach(t => {\n                            if (t.key <= minKey) {\n                                minKey = t.key - 1;\n                            }\n                        });\n                        step.key = minKey;\n                        this.datalinkStepKey = minKey;\n                    }\n\n                    const stepForm = this.stepFormService.datalinkStepFormGroup(mainForm, step);\n                    this.stepFormService.startForm(stepForm);\n                    this.updateSteps();\n\n                    this._datalinkSubscription = stepForm.controls.datalinkKey.valueChanges.subscribe(datalinkKey => {\n                        this.updateDatalinkStepColumns(datalinkKey);\n                    });\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datajob Edit Step');\n        }\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._datalinkSubscription) { this._datalinkSubscription.unsubscribe(); }\n    }\n\n    updateSteps() {\n        let stepData = [];\n        if (this.datajobForm.value.dexihDatalinkSteps) {\n            this.datajobForm.value.dexihDatalinkSteps.forEach(step => {\n                if (step.key !== this.stepFormService.currentForm.value.key) {\n                    let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === step.datalinkKey);\n                    stepData.push({\n                        key: step.key,\n                        name: step.name,\n                        datalink: datalink ? datalink.name : 'Not specified',\n                        tags: this.hubCache.getObjectTags(eSharedObjectType.Datalink, datalink.key),\n                        dependencies: '',\n                        updateDate: step.updateDate\n                    });\n                }\n            });\n        }\n\n        this._stepTableData.next(stepData);\n    }\n\n    updateDatalinkStepColumns(datalinkKey: number) {\n\n        let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === datalinkKey);\n        let stepForm = <FormGroup>this.stepFormService.currentForm;\n        let stepParameters = <FormArray>stepForm.controls.parameters;\n\n        let currentParameters = <DexihInputParameter[]> stepParameters.value;\n        stepParameters.clear();\n\n        datalink.parameters.forEach(parameter => {\n            let currentParameter = currentParameters.find( c => c.name === parameter.name);\n            let newParameter = new InputParameterBase();\n            if (currentParameter) {\n                newParameter.name = currentParameter.name;\n                newParameter.value = currentParameter.value;\n            } else {\n                newParameter.name = parameter.name;\n                newParameter.value = parameter.value;\n            }\n            let newFormParameter = this.formService.parameter(newParameter);\n            stepParameters.push(newFormParameter);\n        });\n\n\n\n        let stepColumnsForm = <FormArray>stepForm.controls.dexihDatalinkStepColumns;\n        let stepColumns = <DexihDatalinkStepColumn[]> stepColumnsForm.value;\n\n        while (stepColumnsForm.length !== 0) {\n            stepColumnsForm.removeAt(0)\n        }\n\n        let inputColumns = datalink.sourceDatalinkTable.dexihDatalinkColumns.filter(c => c.isInput);\n\n        inputColumns.forEach(col => {\n            let stepColumn = stepColumns.find(c => c.name === col.name);\n            if (!stepColumn) {\n                stepColumn = new DexihDatalinkStepColumn();\n                stepColumn.defaultValue = col.defaultValue;\n            }\n            stepColumn.dataType = col.dataType;\n            stepColumn.name = col.name;\n            stepColumn.logicalName = col.logicalName;\n            stepColumn.columnGroup = col.columnGroup;\n            stepColumn.rank = col.rank;\n            stepColumn.maxLength = col.maxLength;\n            stepColumn.deltaType = col.deltaType;\n            stepColumn.allowDbNull = col.allowDbNull;\n            stepColumn.isUnicode = col.isUnicode;\n            stepColumn.isValid = true;\n\n            let stepColumnForm = this.formService.datalinkStepColumnFormGroup(stepColumn);\n            stepColumnsForm.push(stepColumnForm);\n        });\n\n        if (!stepForm.controls.name.value) {\n            stepForm.controls.name.setValue(datalink.name);\n        }\n    }\n\n    dependentStepsChange(items) {\n        let datalinkDependencies = <FormArray>this.stepFormService.currentForm.controls.dexihDatalinkDependencies;\n        let minKey = -1;\n        if (datalinkDependencies) {\n            datalinkDependencies.controls.forEach(dep => {\n                if (dep.valid['key'] <= minKey) {\n                    minKey = dep['key'] - 1;\n                }\n            });\n        }\n\n        while (datalinkDependencies.length > 0) {\n            datalinkDependencies.removeAt(0);\n        }\n\n        items.forEach(newDep => {\n            let oldDep = datalinkDependencies ?\n                datalinkDependencies.controls.find(c => c.value.datalinkStepKey === newDep.datalinkStepKey)\n                : null;\n            if (oldDep) {\n                datalinkDependencies.push(oldDep);\n            } else {\n                let dep = new DexihDatalinkDependency();\n                dep.key = minKey;\n                dep.datalinkStepKey = this.datalinkStepKey;\n                dep.dependentDatalinkStepKey = newDep.key;\n                datalinkDependencies.push(this.stepFormService.datalinkDependencyFormGroup(dep));\n                minKey--;\n            }\n        });\n\n        this.stepFormService.hasChanged = true;\n    }\n\n    cancel() {\n        this.authService.navigateUp();\n    }\n\n    applyExit() {\n        const stepForm = this.stepFormService.currentForm;\n        const stepsArray = <FormArray>this.datajobForm.controls.dexihDatalinkSteps;\n\n        const index = stepsArray.controls\n            .findIndex(c => c.value.key === stepForm.value.key && c.value.isValid);\n\n        if (index < 0) {\n            stepsArray.push(stepForm);\n        } else {\n            stepsArray.removeAt(index);\n            stepsArray.insert(index, stepForm);\n        }\n\n        this.authService.navigateUp();\n    }\n}\n","<d-widget-section *ngIf=\"stepFormService.currentForm\" title=\"Add Datalink Step\" [showExpandButton]=\"false\">\n\t<ng-template #header>\n\t\t<d-button-apply class=\"mr-1\" [disabled]=\"!stepFormService.hasChanged\" (click)=\"applyExit()\">\n\t\t</d-button-apply>\n\t\t<d-button-cancel (click)=\"cancel()\"></d-button-cancel>\n\t</ng-template>\n\t<form [formGroup]=\"stepFormService.currentForm\">\n\t\t<fieldset>\n\t\t\t<section>\n\t\t\t\t<form-input label=\"Data Step Name\" formControlName=\"name\" placeholder=\"Enter the step name.\"\n\t\t\t\t\t[autocapitalize]=\"true\" iconClass=\"fa fa-list\" [errors]=\"stepFormService.formErrors.name\"\n\t\t\t\t\tnote=\"Enter a name for the data step, blank will use datalink name.\">\n\t\t\t\t</form-input>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<form-select label=\"Data Link\" formControlName=\"datalinkKey\" [items]=\"hubCache.hub.dexihDatalinks\"\n\t\t\t\t\titemKey=\"key\" itemName=\"name\" [errors]=\"stepFormService.formErrors.datalinkKey\"\n\t\t\t\t\ticonClass=\"fa fa-database\">\n\t\t\t\t\t<datalink-edit-button [key]=\"stepFormService.currentForm.controls.datalinkKey.value\"></datalink-edit-button>\n\t\t\t\t</form-select>\n\t\t\t</section>\n\t\t</fieldset>\n\n\t\t<div class=\"d-flex flex-wrap pt-1\"\n\t\t\t*ngIf=\"stepFormService.currentForm.controls.dexihDatalinkStepColumns.controls.length > 0\">\n\t\t\t<div>\n\t\t\t\tInput Values\n\t\t\t</div>\n\n\t\t\t<span\n\t\t\t\t*ngFor=\"let column of stepFormService.currentForm.controls.dexihDatalinkStepColumns.controls; let i = index\"\n\t\t\t\tclass=\"input-group\">\n\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t<div class=\"input-group-text\">\n\t\t\t\t\t\t{{column.value.logicalName}}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<form-input class=\"form-control p-0\" [placeholder]=\"column.value.logicalName\" [autocapitalize]=\"true\"\n\t\t\t\t\t[formControl]=\"column.controls.defaultValue\"></form-input>\n\t\t\t</span>\n\t\t</div>\n\t</form>\n</d-widget-section>\n\n<d-widget-section *ngIf=\"stepFormService.currentForm\" title=\"Parameters\" [showExpandButton]=\"true\" [padding]=\"false\" [padding]=\"true\">\n\t<input-parameters [showEdit]=\"true\" [parameters]=\"stepFormService.currentForm.controls.parameters\" [formsService]=\"formService\" [parentParameters]=\"formService.currentForm.controls.parameters.value\">\n\t</input-parameters>\n</d-widget-section>\n\n<d-widget-section *ngIf=\"stepFormService.currentForm\" title=\"Dependent Steps\" [showExpandButton]=\"false\"\n\t[padding]=\"false\">\n\t<d-table *ngIf=\"stepFormService.currentForm\" [enableMultiSelect]=\"true\" [columns]=\"stepColumns\"\n\t\t[dataObservable]=\"stepTableData\" [(selectedItems)]=\"stepFormService.currentForm.value.dexihDatalinkDependencies\"\n\t\t(onSelectedChange)=\"dependentStepsChange($event)\" keyColumn=\"key\" selectedKeyColumn=\"dependentDatalinkStepKey\" [tags]=\"this.hubCache.hub.dexihTags\">\n\t</d-table>\n</d-widget-section>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubService } from '../../../hub.service';\nimport { Observable, BehaviorSubject, Subscription, combineLatest} from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubFormsService } from '../../../hub.forms.service';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { HubCache } from '../../../hub.models';\nimport { DexihDatalink, eSharedObjectType, DexihDatalinkStep, eDatalinkType } from '../../../../shared/shared.models';\n\n@Component({\n    selector: 'datajob-add-steps',\n    templateUrl: './datajob-add-steps.component.html'\n})\nexport class DatajobAddStepsComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n\n    public hubCache: HubCache;\n\n    hasChanged = false;\n\n    columns = [\n        { name: 'name', title: 'Name', format: '', tags: 'tags' },\n        { name: 'datalinkType', title: 'Datalink Type', enum: eDatalinkType, format: 'Enum' },\n        { name: 'sourceTableName', title: 'Source Table', format: '' },\n        { name: 'targetTableName', title: 'Target Table', format: '' },\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n  public mainForm: FormGroup;\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private formService: HubFormsService,\n        private route: ActivatedRoute,\n        private router: Router) { }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.formService.getCurrentFormObservable()\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n                this.mainForm = result[3];\n\n                this.updateDatalinks();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Index');\n        }\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n    }\n\n    changeEvent($event) {\n        this.hasChanged = true;\n    }\n\n    private updateDatalinks() {\n        let newDatalinks: Array<DexihDatalink>;\n        if (this.hubCache) {\n            if (!this.hubCache.hub.dexihDatalinks) {\n                this._tableData.next(new Array<DexihDatalink>());\n            } else {\n                let datalinks = this.hubCache.hub.dexihDatalinks.map(d => {\n                    let sourceTable = this.hubCache.getTable(d.sourceDatalinkTable.sourceTableKey);\n                    return {\n                        key: d.key,\n                        name: d.name,\n                        datalinkType: d.datalinkType,\n                        sourceTableName: sourceTable ? sourceTable.name : 'No source table',\n                        targetTableName:  d.dexihDatalinkTargets.map(target => {\n                            let table = this.hubCache.getTable(target.tableKey);\n                            if (table) {\n                                return table.name;\n                            }\n                        }).join(', '),\n                        updateDate: d.updateDate,\n                        tags: this.hubCache.getObjectTags(eSharedObjectType.Datalink, d.key),\n                    };\n                });\n\n                this._tableData.next(datalinks);\n            }\n        }\n\n    }\n\n    watchChanges() {\n        // watch the current connection in case it is changed in another session.\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n            if (hubCacheChange.changeClass === eSharedObjectType.Datalink) {\n                this.updateDatalinks();\n            }\n        });\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    addSelected(items: Array<DexihDatalink>) {\n        let existingDatalinks = new Array<string>();\n        let formDexihDatalinkSteps = this.mainForm.value.dexihDatalinkSteps;\n        items.forEach(item => {\n            let exists = formDexihDatalinkSteps.find(c => c.datalinkKey === item.key);\n            if (exists) {\n                existingDatalinks.push(item.name);\n            }\n        });\n\n        if (existingDatalinks.length > 0) {\n            let names = existingDatalinks.join(', ');\n            this.authService.confirmDialog('Warning duplicate datalinks',\n            'The following datalinks already exist as steps within the job.  ' + names +\n            '.<br />Are you sure you want these datalinks added to the job').then( confirm => {\n                if (confirm) {\n                this.addSelectedConfirmed(items);\n                }\n            }).catch(reason => {});\n        } else {\n            this.addSelectedConfirmed(items);\n        }\n\n    }\n\n    addSelectedConfirmed(items: Array<DexihDatalink>) {\n        let formDexihDatalinkSteps = <Array<DexihDatalinkStep>> this.mainForm.value.dexihDatalinkSteps;\n\n        let minKey = -1;\n        formDexihDatalinkSteps.forEach(t => {\n            if (t.key <= minKey) {\n                minKey = t.key - 1;\n            }\n        });\n\n        let stepsArray = (<FormArray>this.mainForm.controls['dexihDatalinkSteps']);\n\n        items.forEach(datalink => {\n            let newDatalinkStep = new DexihDatalinkStep();\n            newDatalinkStep.name = datalink.name;\n            // ensure the name is unique by appending a count to the end.\n            let i = 0;\n            while (true) {\n                if (!formDexihDatalinkSteps.find(c => c.name === newDatalinkStep.name)) {\n                    break;\n                }\n                newDatalinkStep.name = datalink.name + '_' + i.toString();\n                i++;\n            }\n            newDatalinkStep.key = minKey;\n            newDatalinkStep.datalinkKey = datalink.key;\n            newDatalinkStep.datajobKey = this.mainForm.value.key;\n            newDatalinkStep.isValid = true;\n\n            let stepFormGroup = this.formService.datalinkStepFormGroup(this.mainForm, newDatalinkStep);\n            stepsArray.push(stepFormGroup);\n\n            minKey--;\n        });\n\n        this.authService.navigateUp();\n    }\n}\n","<d-widget-section title=\"Add Datalinks to Job\" [showExpandButton]=\"false\" [padding]=\"false\">\n\t<ng-template #header>\n\t\t<d-button-close (click)=\"close()\"></d-button-close>\n\t</ng-template>\n\t<d-table [enableMultiSelect]=\"true\" [columns]=\"columns\" [dataObservable]=\"tableData\" [tags]=\"this.hubCache.hub.dexihTags\">\n\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t<d-button (click)=\"addSelected(items)\" iconClass=\"fa fa-plus\" buttonClass=\"btn-primary\"\n\t\t\t\ttitle=\"Add selected datalinks to the job\">Add</d-button>\n\t\t</ng-template>\n\n\t</d-table>\n</d-widget-section>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable ,  Subscription, combineLatest} from 'rxjs';\nimport { Location } from '@angular/common';\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubFormsService } from '../../../hub.forms.service';\nimport { HubService } from '../../../hub.service';\nimport { DexihTrigger } from '../../../../shared/shared.models';\n\n@Component({\n  selector: 'datajob-edit-trigger',\n  templateUrl: './datajob-edit-trigger.component.html'\n})\nexport class DatajobEditTriggerComponent implements OnInit, OnDestroy {\n  public pageTitle: string;\n  public action: string;\n\n  private _subscription: Subscription;\n\n  triggerFormService: HubFormsService;\n  triggerKey: number;\n  datajobKey: number;\n\n  originalTrigger: DexihTrigger;\n\n  mainForm: FormGroup;\n\n  constructor(\n    private authService: AuthService,\n    private hubService: HubService,\n    private formService: HubFormsService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private fb: FormBuilder) {\n\n    // create a seperate formService instance to manage the copied form\n    this.triggerFormService = new HubFormsService(fb, hubService, authService);\n  }\n\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.formService.getCurrentFormObservable(),\n      ).subscribe(result => {\n        let data = result[0];\n        let params = result[1];\n        this.mainForm = result[2];\n\n        if (!this.mainForm) { return; }\n\n        this.pageTitle = data['pageTitle'];\n        this.action = data['action'];\n\n        this.triggerKey = +params['triggerKey'];\n\n        let triggerForm: FormGroup;\n\n        if (this.triggerKey) {\n          this.originalTrigger = this.mainForm.value.dexihTriggers.find(c => c.key === this.triggerKey);\n          if (!this.originalTrigger) {\n            this.authService.navigateUp();\n            return;\n          }\n          triggerForm = this.triggerFormService.triggerFormGroup(this.originalTrigger);\n        } else {\n          let trigger = new DexihTrigger();\n          // if new trigger, then set a temporary key of -1 or lower.\n          let minKey = -1;\n          this.mainForm.value.dexihTriggers.forEach(t => {\n            if (t.key <= minKey) {\n              minKey = t.key - 1;\n            }\n          });\n          trigger.key = minKey;\n          triggerForm = this.triggerFormService.triggerFormGroup(trigger);\n        }\n        this.triggerFormService.startForm(triggerForm);\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Datajob Edit Trigger');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n  }\n\n  cancel() {\n    this.authService.navigateUp();\n  }\n\n  applyExit() {\n    const triggerForm = this.triggerFormService.currentForm;\n    const triggersArray = <FormArray>this.mainForm.controls.dexihTriggers;\n\n    if (!this.originalTrigger) {\n      triggersArray.push(triggerForm);\n    } else {\n      const originalTrigger = triggersArray.controls.find(c => c.value.key === triggerForm.value.key);\n      originalTrigger.setValue(triggerForm.value);\n    }\n\n    this.authService.navigateUp();\n  }\n}\n\n","<d-widget-section *ngIf=\"triggerFormService.currentForm\" title=\"Edit Trigger\" [showExpandButton]=\"false\" >\n\t<ng-template #header>\n\t\t\t<d-button-apply [disabled]=\"!triggerFormService.hasChanged\" class=\"mr-1\" (click)=\"applyExit()\"></d-button-apply>\n\t\t\t<d-button-cancel (click)=\"cancel()\"></d-button-cancel>\n\t</ng-template>\n\t<form  [formGroup]=\"triggerFormService.currentForm\">\n\t\t<fieldset>\n\t\t\t<div class=\"form-row\">\n\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t<form-date label=\"Start Date\" formControlName=\"startDate\" [errors]=\"triggerFormService.formErrors.startDate\" note=\"This is the date that the trigger will start.  Leave blank for immediate start.\">\n\t\t\t\t\t</form-date>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t\t<div class=\"form-row\">\n\t\t\t\t<section class=\"form-group col-md-3\">\n\t\t\t\t\t<form-time label=\"Interval\" [disableNative]=\"true\" formControlName=\"intervalTime\" [errors]=\"triggerFormService.formErrors.intervalTime\"\n\t\t\t\t\t note=\"The intra-day interval which the trigger restarts.  Leave blank for once a day jobs.\">\n\t\t\t\t\t</form-time>\n\t\t\t\t</section>\n\t\t\t\t<section class=\"form-group col-md-3\">\n\t\t\t\t\t<form-input type=\"number\" label=\"Max Recurrences\" formControlName=\"maxRecurs\" placeholder=\"Enter the max recurrences\"\n\t\t\t\t\t iconClass=\"fa fa-refresh\" [errors]=\"triggerFormService.formErrors.maxRecurs\" note=\" The maximum number of times job can recur in one day.\">\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\t\t\t\t<section class=\"form-group col-md-3\">\n\t\t\t\t\t<form-time label=\"Start Time\" formControlName=\"startTime\" [errors]=\"triggerFormService.formErrors.startTime\" note=\"Time of the day the job will activate.\">\n\t\t\t\t\t</form-time>\n\t\t\t\t</section>\n\t\t\t\t<section class=\"form-group col-md-3\">\n\t\t\t\t\t<form-time label=\"End Time\" formControlName=\"endTime\" [errors]=\"triggerFormService.formErrors.endTime\" note=\"Time of the day the triggers will deactivate.\">\n\t\t\t\t\t</form-time>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t\t<section>\n\t\t\t\t<daysofweek label=\"Days of the week\" formControlName=\"daysOfWeek\" note=\" The days of the week the trigger is valid.\">\n\t\t\t\t</daysofweek>\n\t\t\t</section>\n\t\t\t<div class=\"form-row\">\n\n\t\t</div>\n\t\t</fieldset>\n\t</form>\n</d-widget-section>","import { Component, forwardRef, Input, AfterViewInit, ChangeDetectorRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { eDayOfWeek } from '../../../../shared/shared.models';\n\n@Component({\n    selector: 'daysofweek',\n    templateUrl: './dexih-form-daysofweek.component.html',\n    providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => DexihFormDaysOfWeekComponent), multi: true }]\n})\nexport class DexihFormDaysOfWeekComponent implements ControlValueAccessor, AfterViewInit {\n    @Input() label: string;\n    @Input() labelLeft: string;\n    @Input() note: string;\n    @Input() errors: string;\n    @Input() value: eDayOfWeek[];\n\n    eDayOfWeek = eDayOfWeek;\n    daysOfWeek = new Array<Boolean>(7);\n    id = 'input_' + Math.random().toString(36).substr(2, 9);\n\n    onChange: any = () => { };\n    onTouched: any = () => { };\n\n    constructor(private _changeDetectionRef: ChangeDetectorRef) {\n\n    }\n\n    ngAfterViewInit()  {\n        if (this.value) {\n            this.value.forEach(value => {\n                switch (value) {\n                    case eDayOfWeek.Sunday: this.daysOfWeek[0] = true; break;\n                    case eDayOfWeek.Monday: this.daysOfWeek[1] = true; break;\n                    case eDayOfWeek.Tuesday: this.daysOfWeek[2] = true; break;\n                    case eDayOfWeek.Wednesday: this.daysOfWeek[3] = true; break;\n                    case eDayOfWeek.Thursday: this.daysOfWeek[4] = true; break;\n                    case eDayOfWeek.Friday: this.daysOfWeek[5] = true; break;\n                    case eDayOfWeek.Saturday: this.daysOfWeek[6] = true; break;\n                }\n            });\n        }\n\n        // workaround for change detection required when using Afterview Init https://github.com/angular/angular/issues/6005\n        this._changeDetectionRef.detectChanges();\n    }\n\n    hasChanged($event: any) {\n        let daysOfWeek = new Array<eDayOfWeek>();\n        if (this.daysOfWeek[0]) { daysOfWeek.push(eDayOfWeek.Sunday); }\n        if (this.daysOfWeek[1]) { daysOfWeek.push(eDayOfWeek.Monday); }\n        if (this.daysOfWeek[2]) { daysOfWeek.push(eDayOfWeek.Tuesday); }\n        if (this.daysOfWeek[3]) { daysOfWeek.push(eDayOfWeek.Wednesday); }\n        if (this.daysOfWeek[4]) { daysOfWeek.push(eDayOfWeek.Thursday); }\n        if (this.daysOfWeek[5]) { daysOfWeek.push(eDayOfWeek.Friday); }\n        if (this.daysOfWeek[6]) { daysOfWeek.push(eDayOfWeek.Saturday); }\n\n        this.value = daysOfWeek;\n\n        this.onChange(this.value);\n        this.onTouched();\n    }\n\n    registerOnChange(fn: any) {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    writeValue(value: any) {\n        if (value) {\n            this.value = value;\n        }\n    }\n\n    selectWeekend() {\n      this.daysOfWeek[0] = true;\n      this.daysOfWeek[1] = false;\n      this.daysOfWeek[2] = false;\n      this.daysOfWeek[3] = false;\n      this.daysOfWeek[4] = false;\n      this.daysOfWeek[5] = false;\n      this.daysOfWeek[6] = true;\n      this.hasChanged(null);\n  }\n\n  selectWeekDays() {\n      this.daysOfWeek[0] = false;\n      this.daysOfWeek[1] = true;\n      this.daysOfWeek[2] = true;\n      this.daysOfWeek[3] = true;\n      this.daysOfWeek[4] = true;\n      this.daysOfWeek[5] = true;\n      this.daysOfWeek[6] = false;\n      this.hasChanged(null);\n  }\n\n    selectAllDays() {\n      this.daysOfWeek[0] = true;\n      this.daysOfWeek[1] = true;\n      this.daysOfWeek[2] = true;\n      this.daysOfWeek[3] = true;\n      this.daysOfWeek[4] = true;\n      this.daysOfWeek[5] = true;\n      this.daysOfWeek[6] = true;\n      this.hasChanged(null);\n  }\n\n    selectNoDays() {\n      this.daysOfWeek[0] = false;\n      this.daysOfWeek[1] = false;\n      this.daysOfWeek[2] = false;\n      this.daysOfWeek[3] = false;\n      this.daysOfWeek[4] = false;\n      this.daysOfWeek[5] = false;\n      this.daysOfWeek[6] = false;\n      this.hasChanged(null);\n    }\n}\n","<div class=\"form-group\">\n    <label [for]=\"id\" class=\"mt-1\">{{label}}\n        <div class=\"input-group\">\n            <div class=\"input-group-prepend\">\n                <a class=\"btn btn-outline-primary btn-sm\" (click)=\"selectAllDays()\">All</a>\n                <a class=\"btn btn-outline-primary btn-sm\" (click)=\"selectNoDays()\">None</a>\n                <a class=\"btn btn-outline-primary btn-sm\" (click)=\"selectWeekend()\">Weekend</a>\n            </div>\n            <div class=\"input-group-append\">\n                <a class=\"btn btn-outline-primary btn-sm\" (click)=\"selectWeekDays()\">Weekdays</a>\n            </div>\n        </div>\n        <ng-content></ng-content>\n    </label>\n\n    <div class=\"input-group\">\n        <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\" type=\"checkbox\" [id]=\"id + '1'\" [(ngModel)]=\"daysOfWeek[0]\"\n                (ngModelChange)=\"hasChanged($event)\">\n            <label class=\"form-check-label\" [for]=\"id + '1'\">Sunday</label>\n        </div>\n        <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\" type=\"checkbox\" [id]=\"id + '2'\" [(ngModel)]=\"daysOfWeek[1]\"\n                (ngModelChange)=\"hasChanged($event)\">\n            <label class=\"form-check-label\" [for]=\"id + '2'\">Monday</label>\n        </div>\n        <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\" type=\"checkbox\" [id]=\"id + '3'\" [(ngModel)]=\"daysOfWeek[2]\"\n                (ngModelChange)=\"hasChanged($event)\">\n            <label class=\"form-check-label\" [for]=\"id + '3'\">Tuesday</label>\n        </div>\n        <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\" type=\"checkbox\" [id]=\"id + '4'\" [(ngModel)]=\"daysOfWeek[3]\"\n                (ngModelChange)=\"hasChanged($event)\">\n            <label class=\"form-check-label\" [for]=\"id + '4'\">Wednesday</label>\n        </div>\n        <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\" type=\"checkbox\" [id]=\"id + '5'\" [(ngModel)]=\"daysOfWeek[4]\"\n                (ngModelChange)=\"hasChanged($event)\">\n            <label class=\"form-check-label\" [for]=\"id + '5'\">Thursday</label>\n        </div>\n        <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\" type=\"checkbox\" [id]=\"id + '6'\" [(ngModel)]=\"daysOfWeek[5]\"\n                (ngModelChange)=\"hasChanged($event)\">\n            <label class=\"form-check-label\" [for]=\"id + '6'\">Friday</label>\n        </div>\n        <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\" type=\"checkbox\" [id]=\"id + '7'\" [(ngModel)]=\"daysOfWeek[6]\"\n                (ngModelChange)=\"hasChanged($event)\">\n            <label class=\"form-check-label\" [for]=\"id + '7'\">Saturday</label>\n        </div>\n\n    </div>\n    <div *ngIf=\"errors\" class=\"invalid-feedback d-block\">\n        {{ errors }}\n    </div>\n\n\n    <small *ngIf=\"note\" class=\"form-text text-muted\">\n        <markdown (click)=\"sharedFunctions.getRoute($event)\" [data]=\"note\"></markdown>\n    </small>\n</div>"]}