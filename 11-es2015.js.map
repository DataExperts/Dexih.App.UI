{"version":3,"sources":["./src/app/+public/public.component.ts","./src/app/+public/public.component.html","./src/app/+public/public.module.ts","./src/app/+public/public.routing.ts","./src/app/+public/public.service.ts"],"names":[],"mappings":"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","file":"11-es2015.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription} from 'rxjs';\nimport { logoUrl } from '../+auth/auth.models';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n    selector: 'dexih-public',\n    templateUrl: './public.component.html'\n})\nexport class PublicComponent implements OnInit, OnDestroy {\n    _subscription: Subscription;\n\n    logoUrl = logoUrl;\n    embedded = false;\n\n    constructor(private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this._subscription = this.route.queryParams.subscribe(p => {\n            if (p['embed'] === 'true') {\n                this.embedded = true;\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n}\n","<div *ngIf=\"!embedded\" id=\"content\">\n    <nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\n        <div id=\"logo-group\">\n            <span id=\"logo\">\n                <img [src]='logoUrl' alt=\"Data Experts Group\"> </span>\n        </div>\n    \n        <div class=\"collapse navbar-collapse mr-sm-2\">\n        </div>\n        <form class=\"form-inline\">\n            <div>\n                <span class=\"d-none d-md-inline text-white m-1\" >\n                    Need an account?\n                </span>\n                <a routerLink=\"/auth/register\" class=\"btn btn-success mr-1\">Sign Up</a>\n            </div>\n    \n            <div>\n                <span class=\"d-none d-md-inline text-white m-1\" >\n                    Already Registered?\n                </span>\n                <a routerLink=\"/auth/login\" class=\"btn btn-success mr-1\">Sign In</a>\n            </div>\n    \n            <a routerLink=\"/auth/help\" class=\"d-none d-md-inline btn btn-secondary text-white mr-1\">Help</a>\n    \n            <dexih-button-dropdown [pullRight]=\"true\" [hideCarrot]=\"true\" buttonClass=\"btn-primary\" iconClass=\"fa fa-navicon\">\n                <a class=\"dropdown-item\" routerLink=\"/auth/register\">Sign Up</a>\n                <a class=\"dropdown-item\" routerLink=\"/auth/login\">Sign In</a>\n                <div class=\"dropdown-divider\"></div>\t\n                <a class=\"dropdown-item\" routerLink=\"/auth/forgot-password\">Forgot password</a>\n                <a class=\"dropdown-item\" routerLink=\"/auth/verifyemail\">Verify password</a>\n                <div class=\"dropdown-divider\"></div>\t\n                <a class=\"dropdown-item\" routerLink=\"/auth/privacy\">Privacy Policy</a>\n                <a class=\"dropdown-item\" routerLink=\"/auth/terms\">Terms and Conditions</a>\n                <a class=\"dropdown-item\" routerLink=\"/auth/help\">Help</a>\n            </dexih-button-dropdown>\n        </form>\n    </nav>\n    \n    <dexih-ribbon></dexih-ribbon>\n\n    <router-outlet></router-outlet>\n</div>\n\n<router-outlet *ngIf=\"embedded\"></router-outlet>\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { Routing } from './public.routing';\nimport { SharedModule } from '../shared/shared.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { PublicService } from './public.service';\nimport { PublicComponent } from './public.component';\nimport { RibbonModule } from '../shared/layout/ribbon';\n\n@NgModule({\n    imports: [\n        SharedModule,\n        Routing,\n        ReactiveFormsModule,\n        RibbonModule\n    ],\n    declarations: [\n        PublicComponent,\n    ],\n    providers: [PublicService],\n    exports: []\n})\nexport class PublicModule {\n\n    static forRoot(): ModuleWithProviders<PublicModule> {\n        return {\n            ngModule: PublicModule,\n            providers: [PublicService]\n        };\n    }\n}\n","import { Routes, RouterModule } from '@angular/router';\nimport { PublicComponent } from './public.component';\nimport { SharedDataComponent, PreviewComponent, PreviewDashboardComponent } from '../shared/ui/sharedData';\n\n// insert the \"hubs\" routes once for the base, and once under the summary section to ensure the\n// breadcrumbs are accurate.\nexport const routes: Routes = [\n    {\n        path: '',\n        component: PublicComponent,\n        children: [\n            { path: '', redirectTo: 'index' },\n            { path: 'index', data: { pageTitle: 'Shared Data' }, children : [\n                { path: '', component: SharedDataComponent, data: { pageTitle: 'Shared Data' } },\n                { path: 'preview/:hubKey/:objectType/:objectKey', component: PreviewComponent, data: { pageTitle: 'Preview' } },\n                { path: 'previewDashboard/:hubKey/:dashboardKey', component: PreviewDashboardComponent, data: { pageTitle: 'Preview Dashboard' } },\n            ] },\n        ]\n    }\n];\n\nexport const Routing = RouterModule.forChild(routes);\n","import { Message, CancelToken } from '../+auth/auth.models';\nimport { eLogLevel, LogFactory } from '../../logging';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { AuthService } from '../+auth/auth.service';\nimport { BehaviorSubject, Observable} from 'rxjs';\nimport { eDownloadFormat, DexihActiveAgent, InputColumn, SelectQuery,\n    SharedData, eDataObjectType, DexihDashboard, InputParameterBase, ManagedTask, ListOfValuesItem } from '../shared/shared.models';\nimport { PreviewResults } from '../+hub/hub.models';\n\n@Injectable()\nexport class PublicService implements OnDestroy {\n\n    private logger = new LogFactory('public.service');\n    private _hubMessages = new BehaviorSubject<Array<Message>>([]);\n\n\n    private sharedItemsIndex: SharedData[];\n\n    constructor(\n        private authService: AuthService\n        ) {\n    }\n\n    ngOnDestroy() {\n    }\n\n    getHubMessagesObservable(): Observable<Array<Message>> {\n        return this._hubMessages.asObservable();\n    }\n\n    getHubMessages(): Array<Message> {\n        return this._hubMessages.value;\n    }\n\n    addHubMessage(message: Message) {\n        this.authService.addUpdateNotification(message, false);\n        let messages = this.getHubMessages();\n        messages.push(message);\n        this._hubMessages.next(messages);\n    }\n\n    addHubErrorMessage(message: string) {\n        let newMessage = new Message(false, message, null, null);\n        this.addHubMessage(newMessage);\n    }\n\n    addHubClientErrorMessage(error: Error, context: string) {\n        let message = context + '.  The following error occurred on the client: ' + error.message;\n        let newMessage = new Message(false, message, error.stack, null);\n        this.addHubMessage(newMessage);\n    }\n\n    addHubSuccessMessage(message: string) {\n        let newMessage = new Message(true, message, null, null);\n        this.addHubMessage(newMessage);\n    }\n\n    // gets all shared data items\n    getSharedDataIndex(searchString: string, hubKeys: number[], maxResults: number, reload: boolean): Promise<SharedData[]> {\n        if (reload || !this.sharedItemsIndex) {\n            return this.authService.post<SharedData[]>('/api/SharedData/SharedDataIndex', {\n                searchString, hubKeys, maxResults\n            }, 'Getting shared data index...');\n        } else {\n            Promise.resolve(this.sharedItemsIndex);\n        }\n    }\n\n    downloadData(sharedItems: Array<SharedData>, zipFiles: boolean, downloadFormat: eDownloadFormat, cancelToken: CancelToken):\n        Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n\n            // get distinct list of hubKeys\n            let flags = [], hubKeys = []\n            for (let i = 0; i < sharedItems.length; i++) {\n                if (flags[sharedItems[i].hubKey]) { continue };\n                flags[sharedItems[i].hubKey] = true;\n                hubKeys.push(sharedItems[i].hubKey);\n            }\n\n            hubKeys.forEach(hubKey => {\n                this.authService.post<DexihActiveAgent>('/api/SharedData/GetActiveAgent', { hubKey: hubKey}, 'Getting active remote agent...')\n                .then(activeAgent => {\n\n                    this.authService.postRemote<ManagedTask>('/api/SharedData/DownloadData', {\n                        hubKey: hubKey,\n                        clientId: this.authService.getWebSocketConnectionId(),\n                        downloadFormat: downloadFormat,\n                        zipFiles: zipFiles,\n                        sharedItems: sharedItems.filter(c => c.hubKey === hubKey),\n                        remoteAgentId: activeAgent.instanceId,\n                    }, activeAgent, 'Downloading data...', cancelToken)\n                        .then(task => {\n                        this.authService.addUpdateTask(task);\n                        resolve(true);\n                    }).catch(reason => {\n                        this.logger.LogC(() => `downloadData, error: ${reason.message}.`, eLogLevel.Error);\n                        reject(reason);\n                    });\n                });\n            });\n        });\n    }\n\n    // starts a preview, and returns the url to get the download stream.\n    previewData(hubKey: number, objectKey: number, objectType: eDataObjectType,\n        inputColumns: InputColumn[], selectQuery: SelectQuery, parameters: InputParameterBase[], cancelToken: CancelToken):\n        Promise<PreviewResults> {\n\n        return new Promise<PreviewResults>((resolve, reject) => {\n            this.authService.post<DexihActiveAgent>('/api/SharedData/GetActiveAgent', { hubKey: hubKey }, 'Getting active remote agent...')\n            .then(activeAgent => {\n                this.authService.postRemote<PreviewResults>('/api/SharedData/PreviewData', {\n                    hubKey: hubKey,\n                    objectType: objectType,\n                    objectKey: objectKey,\n                    selectQuery: selectQuery,\n                    remoteAgentId: activeAgent.instanceId,\n                    inputColumns: inputColumns,\n                    parameters: parameters\n                }, activeAgent, 'Previewing data...', cancelToken).then(result => {\n                    result.columns = this.authService.constructDataTableColumns(result.columns);\n                    resolve(result);\n                }).catch(reason => {\n                    reject(reason);\n                })\n            }).catch(reason => {\n                reject(reason);\n            });\n        });\n    }\n\n      // starts a preview, and returns the url to get the download stream.\n      previewListOfValues(hubKey: number, objectKey: number, objectType: eDataObjectType, parameterName,\n        resetCache: boolean, cancelToken: CancelToken):\n        Promise<ListOfValuesItem[]> {\n\n        return new Promise<ListOfValuesItem[]>((resolve, reject) => {\n            this.authService.post<DexihActiveAgent>('/api/SharedData/GetActiveAgent', { hubKey: hubKey }, 'Getting active remote agent...')\n            .then(activeAgent => {\n                this.authService.postRemote<ListOfValuesItem[]>('/api/SharedData/PreviewListOfValues', {\n                    hubKey: hubKey,\n                    objectType: objectType,\n                    objectKey: objectKey,\n                    parameterName: parameterName,\n                    resetCache: resetCache,\n                    remoteAgentId: activeAgent.instanceId,\n                }, activeAgent, 'Previewing list of values...', cancelToken).then(result => {\n                    resolve(result);\n                }).catch(reason => {\n                    reject(reason);\n                })\n            }).catch(reason => {\n                reject(reason);\n            });\n        });\n    }\n\n    getDashboard(hubKey: number, dashboardKey: number): Promise<DexihDashboard> {\n\n        return new Promise<DexihDashboard>((resolve, reject) => {\n            this.authService.post<DexihDashboard>('/api/SharedData/PreviewDashboard', {\n                hubKey: hubKey,\n                dashboardKey: dashboardKey,\n            }, 'Getting dashboard download locations...').then(dashboard => {\n                resolve(dashboard);\n            }).catch(reason => reject(reason));\n        });\n    }\n\n\n\n}\n\n\n\n\n"],"sourceRoot":"webpack:///"}