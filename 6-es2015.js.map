{"version":3,"sources":["./src/app/+hub/api/api-edit/api-edit.component.ts","./src/app/+hub/api/api-edit/api-edit.component.html","./src/app/+hub/api/api-edit/index.ts","./src/app/+hub/api/api-index/api-index.component.ts","./src/app/+hub/api/api-index/api-index.component.html","./src/app/+hub/api/api-index/index.ts","./src/app/+hub/columnValidation/columnValidation-edit/columnValidation-edit.component.ts","./src/app/+hub/columnValidation/columnValidation-edit/columnValidation-edit.component.html","./src/app/+hub/columnValidation/columnValidation-index/columnValidation-index.component.ts","./src/app/+hub/columnValidation/columnValidation-index/columnValidation-index.component.html","./src/app/+hub/columnValidation/index.ts","./src/app/+hub/connection/connection-edit/connection-edit.component.ts","./src/app/+hub/connection/connection-edit/connection-edit.component.html","./src/app/+hub/connection/connection-edit/index.ts","./src/app/+hub/connection/connection-import/connection-import.component.ts","./src/app/+hub/connection/connection-import/connection-import.component.html","./src/app/+hub/connection/connection-import/index.ts","./src/app/+hub/connection/connection-index/connection-index.component.ts","./src/app/+hub/connection/connection-index/connection-index.component.html","./src/app/+hub/connection/connection-index/index.ts","./src/app/+hub/connection/index.ts","./src/app/+hub/copy/export/export.component.ts","./src/app/+hub/copy/export/export.component.html","./src/app/+hub/copy/import/import.component.ts","./src/app/+hub/copy/import/import.component.html","./src/app/+hub/copy/index.ts","./src/app/+hub/customFunction/customFunction-edit/customFunction-edit.component.ts","./src/app/+hub/customFunction/customFunction-edit/customFunction-edit.component.html","./src/app/+hub/customFunction/customFunction-edit/customFunction-parameter.component.ts","./src/app/+hub/customFunction/customFunction-edit/customFunction-parameter.component.html","./src/app/+hub/customFunction/customFunction-edit/index.ts","./src/app/+hub/customFunction/customFunction-index/customFunction-index.component.ts","./src/app/+hub/customFunction/customFunction-index/customFunction-index.component.html","./src/app/+hub/customFunction/index.ts","./src/app/+hub/dashboard/dashboard-edit/dashboard-edit.component.ts","./src/app/+hub/dashboard/dashboard-edit/dashboard-edit.component.html","./src/app/+hub/dashboard/dashboard-edit/index.ts","./src/app/+hub/dashboard/dashboard-edit/item/dashboard-item.component.ts","./src/app/+hub/dashboard/dashboard-edit/item/dashboard-item.component.html","./src/app/+hub/dashboard/dashboard-index/dashboard-index.component.ts","./src/app/+hub/dashboard/dashboard-index/dashboard-index.component.html","./src/app/+hub/dashboard/dashboard-index/index.ts","./src/app/+hub/dashboard/index.ts","./src/app/+hub/datajob/datajob-edit/datajob-edit.component.ts","./src/app/+hub/datajob/datajob-edit/datajob-edit.component.html","./src/app/+hub/datajob/datajob-index/datajob-index.component.ts","./src/app/+hub/datajob/datajob-index/datajob-index.component.html","./src/app/+hub/datajob/datajob-index/index.ts","./src/app/+hub/datajob/datajob-run/datajob-run.component.ts","./src/app/+hub/datajob/datajob-run/datajob-run.component.html","./src/app/+hub/datajob/index.ts","./src/app/+hub/datalink/datalink-index/datalink-index.component.ts","./src/app/+hub/datalink/datalink-index/datalink-index.component.html","./src/app/+hub/datalink/datalink-index/index.ts","./src/app/+hub/datalink/datalink-new/datalink-new.component.ts","./src/app/+hub/datalink/datalink-new/datalink-new.component.html","./src/app/+hub/datalink/datalink-new/index.ts","./src/app/+hub/datalink/datalink-preview-data/datalink-preview-data.component.ts","./src/app/+hub/datalink/datalink-preview-data/datalink-preview-data.component.html","./src/app/+hub/datalink/datalink-preview-data/index.ts","./src/app/+hub/datalink/datalink-run/datalink-run.component.ts","./src/app/+hub/datalink/datalink-run/datalink-run.component.html","./src/app/+hub/datalink/index.ts","./src/app/+hub/files/files-bulk-load/files-bulk-load.component.ts","./src/app/+hub/files/files-bulk-load/files-bulk-load.component.html","./src/app/+hub/files/files-manage/files-manage.component.ts","./src/app/+hub/files/files-manage/files-manage.component.html","./src/app/+hub/files/index.ts","./src/app/+hub/hub.base.module.ts","./src/app/+hub/hub.base.routing.ts","./src/app/+hub/hubVariable/hubVariable-edit/hubVariable-edit.component.ts","./src/app/+hub/hubVariable/hubVariable-edit/hubVariable-edit.component.html","./src/app/+hub/hubVariable/hubVariable-index/hubVariable-index.component.ts","./src/app/+hub/hubVariable/hubVariable-index/hubVariable-index.component.html","./src/app/+hub/hubVariable/index.ts","./src/app/+hub/listOfValues/listOfValues-edit/index.ts","./src/app/+hub/listOfValues/listOfValues-edit/listOfValues-edit.component.ts","./src/app/+hub/listOfValues/listOfValues-edit/listOfValues-edit.component.html","./src/app/+hub/listOfValues/listOfValues-index/index.ts","./src/app/+hub/listOfValues/listOfValues-index/listOfValues-index.component.ts","./src/app/+hub/listOfValues/listOfValues-index/listOfValues-index.component.html","./src/app/+hub/manage/manage-users-index/manage-users-index.component.ts","./src/app/+hub/manage/manage-users-index/manage-users-index.component.html","./src/app/+hub/remoteAgent/index.ts","./src/app/+hub/remoteAgent/remoteAgent-edit/remoteAgent-edit.component.ts","./src/app/+hub/remoteAgent/remoteAgent-edit/remoteAgent-edit.component.html","./src/app/+hub/remoteAgent/remoteAgent-index/remoteAgent-index.component.ts","./src/app/+hub/remoteAgent/remoteAgent-index/remoteAgent-index.component.html","./src/app/+hub/results/index.ts","./src/app/+hub/results/results-index/index.ts","./src/app/+hub/results/results-index/results-index.component.ts","./src/app/+hub/results/results-index/results-index.component.html","./src/app/+hub/results/results-view/index.ts","./src/app/+hub/results/results-view/preview-results.component.ts","./src/app/+hub/results/results-view/preview-results.component.html","./src/app/+hub/results/results-view/profile-results.component.ts","./src/app/+hub/results/results-view/profile-results.component.html","./src/app/+hub/results/results-view/progress.component.ts","./src/app/+hub/results/results-view/progress.component.html","./src/app/+hub/results/results-view/results-view.component.ts","./src/app/+hub/results/results-view/results-view.component.html","./src/app/+hub/results/results-view/results-view.module.ts","./src/app/+hub/results/results-view/stats.component.ts","./src/app/+hub/results/results-view/stats.component.html","./src/app/+hub/search/index.ts","./src/app/+hub/search/object-type.pipe.ts","./src/app/+hub/search/search.component.ts","./src/app/+hub/search/search.component.html","./src/app/+hub/search/search.module.ts","./src/app/+hub/sharedData/sharedData-index.component.ts","./src/app/+hub/sharedData/sharedData-index.component.html","./src/app/+hub/table/table-index/index.ts","./src/app/+hub/table/table-index/table-index.component.ts","./src/app/+hub/table/table-index/table-index.component.html","./src/app/+hub/table/table-preview-data/index.ts","./src/app/+hub/tags/tags.component.ts","./src/app/+hub/tags/tags.component.html","./src/app/+hub/test/datalinkTest-index/datalinkTest-index.component.ts","./src/app/+hub/test/datalinkTest-index/datalinkTest-index.component.html","./src/app/+hub/test/datalinkTest-new/datalinkTest-new.component.ts","./src/app/+hub/test/datalinkTest-new/datalinkTest-new.component.html","./src/app/+hub/test/index.ts","./src/app/+hub/view/view-edit/index.ts","./src/app/+hub/view/view-index/index.ts"],"names":[],"mappings":"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","file":"6-es2015.js","sourcesContent":["import { Component, OnInit, OnDestroy, HostListener } from '@angular/core';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\nimport { HubCache, eCacheStatus, ConnectionTables } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { Subscription, combineLatest, merge, Subject} from 'rxjs';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { InputOutputColumns } from '../../hub.lineage.models';\nimport { CancelToken } from '../../../+auth/auth.models';\nimport { eSourceType, DexihDatalink, InputColumn, DexihColumnBase, SelectQuery, DexihApi, DownloadObject, eDataObjectType } from '../../../shared/shared.models';\n\n@Component({\n  selector: 'dexih-api-edit-form',\n  templateUrl: './api-edit.component.html',\n  providers: [HubFormsService]\n})\nexport class ApiEditComponent implements OnInit, OnDestroy {\n  public apiKey: number;\n\n  private hubCache: HubCache;\n  public action: string; // new or edit\n  public pageTitle: string;\n  public params: Params;\n\n  private _subscription: Subscription;\n  private _formChangeSubscription: Subscription;\n  private _changesSubscription: Subscription;\n\n  public refreshDataSubject: Subject<void> = new Subject<void>();\n\n  sourceTypes = [\n    { key: eSourceType.Datalink, name: 'Datalink' },\n    { key: eSourceType.Table, name: 'Table' }\n  ];\n\n  eSourceType = eSourceType;\n\n  public connectionTables: ConnectionTables[] = [];\n  public datalinks: DexihDatalink[] = [];\n\n  public inputColumns: InputColumn[];\n  public tableColumns: DexihColumnBase[];\n  selectQuery: SelectQuery = new SelectQuery();\n\n  columns: Array<any>;\n  public data: Array<any> = [];\n  private isLoaded = false;\n\n  private cancelToken = new CancelToken();\n\n  constructor(\n    private hubService: HubService,\n    private authService: AuthService,\n    public formsService: HubFormsService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n      ).subscribe(result => {\n        let data = result[0];\n        this.params = result[1];\n        this.hubCache = result[2];\n\n        this.action = data['action'];\n        this.pageTitle = data['pageTitle'];\n\n        if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded ) { return; }\n\n        if (this.hubCache && this.hubCache.isLoaded()) {\n          this.connectionTables = this.hubCache.getConnectionTables();\n          this.datalinks = this.hubCache.hub.dexihDatalinks;\n        }\n\n        if (this.isLoaded && this.action === 'new') { return; }\n\n        if (this.isLoaded && this.formsService.hasChanged) {\n            this.authService.confirmDialog('Synchronization warning',\n            'The hub was disconnected, meaning this edit could have been changed by another session.  Would you like to discard the current changes, and reload the latest version?')\n            .then(confirm => {\n                if (confirm) {\n                    this.load();\n                }\n            }).catch(reason => {\n                return;\n            });\n        } else {\n            this.load();\n        }\n\n        if (this.hubCache.isLoaded()) {\n          if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded || this.isLoaded) { return; }\n          this.isLoaded = true;\n        }\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Api Edit');\n    }\n  }\n\n  load() {\n    if (this.action === 'edit') {\n      // get the hub key from the route data, and update the service.\n      this.apiKey = + this.params['apiKey'];\n\n      if (!this.apiKey) {\n        this.hubService.addHubErrorMessage('There was no api specified to edit.');\n      } else {\n        if (!this.hubCache.hub || !this.hubCache.hub.dexihApis) {\n          this.hubService.addHubErrorMessage('The hub cache is not loaded.');\n        } else {\n\n          let api = this.hubCache.hub.dexihApis.find(c => c.key === this.apiKey);\n\n          this.selectQuery = api.selectQuery;\n          if (!this.selectQuery) { this.selectQuery = new SelectQuery(); }\n\n          this.formsService.api(api);\n          this.watchChanges();\n\n          this.getColumns();\n          // this.refresh();\n        }\n      }\n    }\n\n    if (this.action === 'new') {\n      let api = new DexihApi();\n      this.formsService.api(api);\n      this.watchChanges();\n\n      // update the url with the saved key\n      this._formChangeSubscription = this.formsService.getCurrentFormObservable().subscribe(form => {\n        let key = form.controls.key.value;\n        if (key) {\n          if (history.pushState) {\n            let newUrl = window.location.pathname.replace('/api-new', `/api-edit/${key}`)\n            this.router.navigateByUrl(newUrl);\n            this._formChangeSubscription.unsubscribe();\n          }\n        }\n      });\n    }\n  }\n\n  watchChanges() {\n    if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n    this._changesSubscription = merge(\n      this.formsService.currentForm.controls.sourceDatalinkKey.valueChanges,\n      this.formsService.currentForm.controls.sourceTableKey.valueChanges\n    ).subscribe(() => {\n      this.reset();\n      this.selectQuery = new SelectQuery();\n      this.getColumns();\n  //    this.refresh();\n  });\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._formChangeSubscription) { this._formChangeSubscription.unsubscribe(); }\n    if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n    this.cancelToken.cancel();\n  }\n\n  close() {\n    this.authService.navigateUp();\n  }\n\n  getColumns() {\n    let apiForm = this.formsService.currentForm;\n\n    if (apiForm.controls.sourceType.value === eSourceType.Table && apiForm.controls.sourceTableKey.value > 0) {\n      let table = this.hubCache.getTable(apiForm.controls.sourceTableKey.value);\n      if (table) {\n        this.tableColumns = table.dexihTableColumns;\n        this.inputColumns = this.getInputColumns(table.dexihTableColumns);\n        return;\n      } else {\n        this.reset();\n      }\n    } else {\n      this.reset();\n    }\n\n    if (apiForm.controls.sourceType.value === eSourceType.Datalink && apiForm.controls.sourceDatalinkKey.value > 0) {\n      let datalink = this.datalinks.find(c => c.key === apiForm.controls.sourceDatalinkKey.value);\n      if (datalink) {\n        const ioColumns = new InputOutputColumns();\n        ioColumns.buildInputOutput(this.hubCache, datalink);\n        this.tableColumns = ioColumns.getDatalinkOutputColumns(datalink);\n        this.inputColumns = this.getInputColumns(datalink.sourceDatalinkTable.dexihDatalinkColumns);\n      } else {\n        this.reset();\n      }\n    } else {\n      this.reset();\n    }\n  }\n\n  getInputColumns(columns: DexihColumnBase[]): InputColumn[] {\n    let inputColumns = columns.filter(c => c.isInput).map(c => {\n      return <InputColumn>  {\n          name: c.name, logicalName: c.logicalName, dataType: c.dataType, rank: c.rank, value: c.defaultValue};\n    });\n\n    return inputColumns;\n  }\n\n  reset() {\n    this.tableColumns = [];\n    this.inputColumns = [];\n    this.columns = null;\n    this.data = null;\n  }\n\n  refresh() {\n    let apiForm = this.formsService.currentForm;\n    if (apiForm.controls.sourceType.value === eSourceType.Datalink) {\n      this.hubService.previewDatalinkKeyData(apiForm.controls.sourceDatalinkKey.value, false,\n        this.selectQuery, this.inputColumns, apiForm.controls.parameters.value, this.cancelToken).then((result) => {\n        this.refreshDataSubject.next();\n        this.columns = result.columns;\n        this.data = result.data;\n      }).catch(() => {\n      });\n\n    }\n    if (apiForm.controls.sourceType.value === eSourceType.Table) {\n      this.hubService.previewTableKeyData(apiForm.controls.sourceTableKey.value,\n          false, this.selectQuery, this.inputColumns, apiForm.controls.parameters.value, this.cancelToken).then((result) => {\n        this.columns = result.columns;\n        this.data = result.data;\n      }).catch(() => {\n      });\n    }\n  }\n\n  download(format) {\n    let api = <DexihApi>this.formsService.currentForm.value;\n    let downloadObject = new DownloadObject();\n    if (api.sourceType === eSourceType.Table) {\n      downloadObject.objectKey = api.sourceDatalinkKey;\n      downloadObject.objectType = eDataObjectType.Datalink;\n    }\n    if (api.sourceType === eSourceType.Table) {\n      downloadObject.objectKey = api.sourceTableKey;\n      downloadObject.objectType = eDataObjectType.Table;\n    }\n\n    downloadObject.query = this.selectQuery;\n    this.hubService.downloadData([downloadObject], false, format, this.cancelToken)\n  }\n\n  public canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>((resolve) => {\n      if (this.formsService.hasChanged) {\n        this.authService.confirmDialog('The api has not been saved',\n          'The api changes have not been saved.  Do you want to discard the changes and exit?')\n          .then((confirm) => {\n              resolve(confirm);\n            }).catch(() => {\n              resolve(false);\n            });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  // @HostListener allows is to guard against browser refresh, close, etc.\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.formsService.hasChanged) {\n      $event.returnValue = 'The api changes have not been saved.  Do you want to discard the changes and exit?';\n    }\n  }\n}\n","<div class=\"container\">\n\t<dexih-widget title=\"Edit API\" iconClass=\"fa fa-lg fa-fw fa-feed\" [showCloseButton]=\"true\" [padding]=\"false\"\n\t\t(close)=\"close()\">\n\t\t<ng-template #header>\n\t\t\t<dexih-invalid-form-details [control]=\"formsService.currentForm\" (click)=\"formsService.showErrors()\"\n\t\t\t\tclass=\"mr-1\"></dexih-invalid-form-details>\n\t\t\t<download-button class=\"mr-1\" (download)=\"download($event)\"></download-button>\n\t\t\t<save-button *ngIf=\"hubCache.canWrite\" [formsService]=\"formsService\" class=\"mr-1\"></save-button>\n\t\t\t<cancel-button [formsService]=\"formsService\"></cancel-button>\n\t\t</ng-template>\n\n\t\t<dexih-widget-section title=\"Properties\" [showExpandButton]=\"true\">\n\t\t\t<form *ngIf=\"formsService.currentForm\" [formGroup]=\"formsService.currentForm\">\n\t\t\t\t<fieldset>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<form-input label=\"Api Name\" formControlName=\"name\" placeholder=\"Enter the api name.\"\n\t\t\t\t\t\t\t[autocapitalize]=\"true\" iconClass=\"fa fa-list\" [errors]=\"formsService.formErrors['name']\">\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<form-textarea label=\"Description\" [showMarkdown]=\"true\" formControlName=\"description\"\n\t\t\t\t\t\t\tplaceholder=\"Enter the description.\">\n\t\t\t\t\t\t</form-textarea>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t\t<form-checkbox label=\"Auto Start\" formControlName=\"autoStart\"\n\t\t\t\t\t\t\t\t\tnote=\"Re-start the API when the remote agent is restarted.\">\n\t\t\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t\t<form-input label=\"Log Directory\" formControlName=\"logDirectory\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter a directory to log api updates.\" iconClass=\"fa fa-list\"\n\t\t\t\t\t\t\t\t\t[errors]=\"formsService.formErrors['logDirectory']\"\n\t\t\t\t\t\t\t\t\tnote=\"Directory to create detailed logs of API calls.  Leave blank to exclude file logging.\">\n\t\t\t\t\t\t\t\t</form-input>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t\t<form-checkbox label=\"Cache Queries\" formControlName=\"cacheQueries\"\n\t\t\t\t\t\t\t\t\tnote=\"Cache API called to improve performance\">\n\t\t\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t\t<form-time label=\"Reset Cache Interval\" formControlName=\"cacheResetInterval\"\n\t\t\t\t\t\t\t\t\t[errors]=\"formsService.formErrors['resetCacheInterval']\"\n\t\t\t\t\t\t\t\t\tnote=\"The interval to reset the cache (forcing a reload of new data).\">\n\t\t\t\t\t\t\t\t</form-time>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t\t<form-select label=\"Data Source Type\" formControlName=\"sourceType\" [items]=\"sourceTypes\"\n\t\t\t\t\t\t\t\t\titemKey=\"key\" itemName=\"name\" iconClass=\"fa fa-database\"\n\t\t\t\t\t\t\t\t\tnote='Specify the source type for this view' [enableFilter]=\"false\">\n\t\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t<section class=\"form-group col-md-6\"\n\t\t\t\t\t\t\t\t*ngIf=\"formsService.currentForm.value.sourceType == eSourceType.Table\">\n\t\t\t\t\t\t\t\t<form-select label=\"Source Table\" formControlName=\"sourceTableKey\"\n\t\t\t\t\t\t\t\t\t[errors]=\"errors?.sourceTableKey\" [items]=\"connectionTables\" parentName=\"name\"\n\t\t\t\t\t\t\t\t\tchildItems=\"dexihTables\" itemKey=\"key\" itemName=\"logicalName\"\n\t\t\t\t\t\t\t\t\tnote=\"Select the source table\">\n\t\t\t\t\t\t\t\t\t<table-edit-button [key]=\"formsService.currentForm.controls.sourceTableKey.value\"></table-edit-button>\n\t\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t<section class=\"form-group col-md-6\"\n\t\t\t\t\t\t\t\t*ngIf=\"formsService.currentForm.value.sourceType == eSourceType.Datalink\">\n\t\t\t\t\t\t\t\t<form-select label=\"Source Datalink\" formControlName=\"sourceDatalinkKey\"\n\t\t\t\t\t\t\t\t\t[errors]=\"errors?.sourceDatalinkKey\" [items]=\"datalinks\" itemKey=\"key\"\n\t\t\t\t\t\t\t\t\titemName=\"name\" note='Select the source datalink'>\n\t\t\t\t\t\t\t\t\t<datalink-edit-button [key]=\"formsService.currentForm.controls.sourceDatalinkKey.value\"></datalink-edit-button>\n\t\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t</fieldset>\n\t\t\t</form>\n\t\t</dexih-widget-section>\n\n\t\t<dexih-widget-section *ngIf=\"formsService.currentForm\"  title=\"Parameters\" [showExpandButton]=\"true\" [padding]=\"true\">\n\t\t\t<input-parameters [showEdit]=\"true\" [parameters]=\"formsService.currentForm.controls.parameters\"\n\t\t\t\t[formsService]=\"formsService\">\n\t\t\t</input-parameters>\n\t\t</dexih-widget-section>\n\n\t\t<dexih-widget-section title=\"Data\" [showExpandButton]=\"true\">\n\n\t\t\t<div class=\"d-flex flex-wrap pt-1\" *ngIf=\"inputColumns && inputColumns.length > 0\">\n\t\t\t\t<span *ngFor=\"let column of inputColumns; let i = index\" class=\"input-group\">\n\t\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t\t<div class=\"input-group-text\">\n\t\t\t\t\t\t\t{{column.logicalName}}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<form-input name=\"column{{i}}\" class=\"form-control p-0\"\n\t\t\t\t\t\t[placeholder]=\"'Enter ' + column.logicalName\" [(ngModel)]=\"column.value\"></form-input>\n\t\t\t\t</span>\n\t\t\t</div>\n\n\t\t\t<section>\n\t\t\t\t<h5>Data Configuration</h5>\n\t\t\t\t<query-builder [selectQuery]=\"selectQuery\" [columns]=\"tableColumns\" [inputColumns]=\"inputColumns\" [parameters]=\"formsService?.currentForm?.controls.parameters.value\" [refreshEvent]=\"refreshDataSubject.asObservable()\" (onRefreshData)=\"refresh()\">\n\t\t\t\t</query-builder>\n\t\t\t</section>\n\n\t\t\t<dexih-table [enableMultiSelect]=\"false\" [enableSaveCsv]=\"true\" [columns]=\"columns\" [data]=\"data\">\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<dexih-button-refresh class=\"mr-1\" (click)=\"refresh()\" text=\"Reload\"></dexih-button-refresh>\n\t\t\t\t</ng-template>\n\t\t\t</dexih-table>\n\t\t</dexih-widget-section>\n\t</dexih-widget>\n\n\t<dexih-help class=\"m-3\" title=\"Connections\" path=\"/assets/help/reference/api.md\"></dexih-help>\n</div>","export * from './api-edit.component';\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { HubCache } from '../../hub.models';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { DexihApi, eSourceType, eSharedObjectType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'apis',\n    templateUrl: './api-index.component.html',\n    styles: []\n})\nexport class ApiIndexComponent implements OnInit, OnDestroy {\n    @Input() public hubKey: number;\n\n    private _subscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n\n    hubCache: HubCache;\n\n    apis: Array<DexihApi>;\n\n    public eSharedObjectType = eSharedObjectType;\n\n    columns = [\n        { iconClass: 'sharedIcon', tooltip: 'sharedToolTip', width: '1%', align: 'center' },\n        { name: 'name', title: 'Name', footer: 'description', format: 'Md', tags: 'tags' },\n        { name: 'apiSource', title: 'Api Source' },\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        // watch for any changes in the validations.\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n\n                this.updateApis();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'View Index');\n        }\n\n\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    editApi(api: DexihApi) {\n        this.router.navigate(['api-edit', api.key], { relativeTo: this.route });\n    }\n\n    updateApis() {\n        if (this.hubCache.isLoaded()) {\n            let apis: Array<DexihApi>;\n            apis = this.hubCache.hub.dexihApis.filter(c => c.isValid);\n\n            let tableData = apis.map(api => {\n                return {\n                    key: api.key,\n                    name: api.name,\n                    apiSource: this.getSourceDetails(api),\n                    updateDate: api.updateDate,\n                    sharedIcon: api.isShared ? 'fa fa-group' : 'fa fa-user-secret',\n                    sharedToolTip: api.isShared ? 'Table is shared' : 'Table is private',\n                    tags: this.hubCache.getObjectTags(eSharedObjectType.ColumnValidation, api.key)\n                };\n            });\n            this._tableData.next(tableData);\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    getSourceDetails(api: DexihApi): string {\n        if (api.sourceType === eSourceType.Table) {\n            let table = this.hubCache.getTable(api.sourceTableKey);\n            if (table) {\n                return 'Table: ' + table.name;\n            } else {\n                return 'Error: Table not found';\n            }\n        } else {\n            let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === api.sourceDatalinkKey);\n            if (datalink) {\n                return 'Datalink: ' + datalink.name;\n            } else {\n                return 'Error: Datalink not found';\n            }\n        }\n\n        return 'Error: Source not configured';\n    }\n\n\n\n    watchChanges() {\n        // watch the current validation in case it is changed in another session.\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n            if (hubCacheChange.changeClass === eSharedObjectType.Api || hubCacheChange.changeClass === eSharedObjectType.TagObjects) {\n                this.updateApis();\n            }\n        });\n    }\n}\n","<div class=\"container-fluid\">\n    <dexih-widget title=\"Api's\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-feed\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\t>\n\t\t\t<dexih-table \n\t\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t\t[columns]=\"columns\"\n\t\t\t\t[dataObservable]=\"tableData\"\n\t\t\t\t(rowClick)=\"editApi($event)\"\n\t\t\t\t[tags]=\"this.hubCache.hub.dexihTags\"\n\t\t\t\t>\n\t\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t\t<tags-update-button class=\"ml-1\" [objectType]=\"eSharedObjectType.ColumnValidation\" [objects]=\"items\" ></tags-update-button>\n\t\t\t\t\t</ng-template>\n\n\t\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n\t\t\t\t\t\t<dependent-items-button class=\"ml-1\" [key]=\"item.key\" [objectType]='eSharedObjectType.Api'></dependent-items-button>\n\t\t\t\t\t</ng-template>\n\t\n\n\t\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t\t<actions-api-button [apis]=\"items\"></actions-api-button>\n\t\t\t\t\t</ng-template>\n\n\t\t\t\t\t<ng-template #rowStatus select=\"rowStatus\" let-item=\"item\">\n\t\t\t\t\t\t<api-status [apiKey]='item?.key'></api-status>\n\t\t\t\t\t</ng-template>\n\t\t\t</dexih-table>\n\n\t\t</dexih-widget>\n\t\t\n\t\t<dexih-help class=\"m-3\"  title=\"Connections\" path=\"/assets/help/reference/api.md\"></dexih-help>\n</div>\n\n\n","export * from './api-index.component';\n","import { Component, OnInit, OnDestroy, HostListener } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { HubCache, InvalidActions, CleanActions, eCacheStatus } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { TypeCodes } from '../../hub.remote.models';\nimport { eInvalidAction, eCleanAction, eTypeCode, DexihConnection, DexihColumnValidation } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n\n  selector: 'dexih-columnValidation-edit-form',\n  templateUrl: './columnValidation-edit.component.html',\n  providers: [HubFormsService]\n})\nexport class ColumnValidationEditComponent implements OnInit, OnDestroy {\n\n  private columnValidationKey: number;\n\n  private hubCache: HubCache;\n  public action: string; // new or edit\n  public params: Params;\n  public pageTitle: string;\n\n  eInvalidAction = eInvalidAction;\n  eCleanAction = eCleanAction;\n  eTypeCode = eTypeCode;\n  InvalidActions = InvalidActions;\n  CleanActions = CleanActions;\n\n  typeCodes = TypeCodes;\n  invalidActions = InvalidActions;\n  cleanActions = CleanActions;\n\n  public testValue: string;\n  public testResult: any;\n\n  public lookupColumnValue = '';\n\n  public connections: Array<DexihConnection>;\n  private isLoaded = false;\n\n  public eCacheStatus = eCacheStatus;\n  public cancelToken: CancelToken = new CancelToken();\n\n  private _subscription: Subscription;\n  private _formChangeSubscription: Subscription;\n  private _hubCacheChangeSubscription: Subscription;\n  private _lookupColumnSubscription: Subscription;\n\n  constructor(private hubService: HubService,\n    private authService: AuthService,\n    public formsService: HubFormsService,\n    private route: ActivatedRoute,\n    private router: Router) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n      ).subscribe(result => {\n        let data = result[0];\n        this.params = result[1];\n        this.hubCache = result[2];\n\n        this.action = data['action'];\n        this.pageTitle = data['pageTitle'];\n\n        if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded ) { return; }\n\n        if (this.isLoaded && this.action === 'new') { return; }\n\n        if (this.isLoaded && this.formsService.hasChanged) {\n            this.authService.confirmDialog('Synchronization warning',\n            'The hub was disconnected, meaning this edit could have been changed by another session.  Would you like to discard the current changes, and reload the latest version?')\n            .then(confirm => {\n                if (confirm) {\n                    this.load();\n                }\n            }).catch(reason => {\n                return;\n            });\n        } else {\n            this.load();\n        }\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Column Validation');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._formChangeSubscription) { this._formChangeSubscription.unsubscribe(); }\n    if (this._lookupColumnSubscription) { this._lookupColumnSubscription.unsubscribe(); }\n    this.cancelToken.cancel();\n  }\n\n  private load() {\n    this.connections = this.hubCache.getConnectionTables();\n\n    if (this.action === 'edit') {\n      // get the hub key from the route data, and update the service.\n      this.columnValidationKey = +this.params['validationKey'];\n\n      if (!this.columnValidationKey) {\n        this.hubService.addHubErrorMessage('There was no validation specified to edit.');\n        // this.errorMessage = 'There was no validation specified to edit.';\n      } else {\n        if (!this.hubCache.hub || !this.hubCache.hub.dexihColumnValidations) {\n          this.hubService.addHubErrorMessage('The hub cache is not loaded.');\n        } else {\n          let validation = this.hubCache.hub.dexihColumnValidations.find(c => c.key === this.columnValidationKey);\n          this.formsService.validation(validation);\n        }\n      }\n    }\n\n    if (this.action === 'new') {\n      let validation = new DexihColumnValidation();\n      this.formsService.validation(validation);\n\n      // update the url with the saved key\n      this._formChangeSubscription = this.formsService.getCurrentFormObservable().subscribe(form => {\n        let key = form.controls.key.value;\n        if (key) {\n          if (history.pushState) {\n            let newUrl = window.location.pathname.replace('/columnValidation-new', `/columnValidation-edit/${key}`)\n            this.router.navigateByUrl(newUrl);\n            this._formChangeSubscription.unsubscribe();\n          }\n        }\n      });\n    }\n\n    this.isLoaded = true;\n\n    this.getValidationLookupColumn();\n    if (this._lookupColumnSubscription) { this._lookupColumnSubscription.unsubscribe(); }\n    this._lookupColumnSubscription = this.formsService.currentForm.controls.lookupColumnKey.valueChanges.subscribe(() => {\n      this.getValidationLookupColumn();\n    });\n  }\n\n  getValidationLookupColumn() {\n    let lookupColumnKey = this.formsService.currentForm.controls.lookupColumnKey.value;\n    if (lookupColumnKey) {\n      let column = this.hubCache.getColumn(lookupColumnKey);\n      if (column) {\n        let table = this.hubCache.getTable(column.tableKey);\n        this.lookupColumnValue = 'Exists in table:' + table.name + ', column:' + column.name;\n      } else {\n        this.lookupColumnValue = 'Column not found.  Re-select a valid column.';\n      }\n    } else {\n      this.lookupColumnValue = '';\n    }\n  }\n\n  test() {\n    this.hubService.testColumnValidation(this.formsService.currentForm.value, this.testValue, this.cancelToken).then(result => {\n      this.testResult = result;\n    });\n  }\n\n  close() {\n    this.authService.navigateUp();\n  }\n\n  public canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>((resolve) => {\n      if (this.formsService.hasChanged) {\n        this.authService.confirmDialog('The view has not been saved',\n          'The column validation changes have not been saved.  Do you want to discard the changes and exit?')\n          .then((confirm) => {\n              resolve(confirm);\n            }).catch(() => {\n              resolve(false);\n            });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  // @HostListener allows is to guard against browser refresh, close, etc.\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.formsService.hasChanged) {\n      $event.returnValue = 'The column validation changes have not been saved.  Do you want to discard the changes and exit?';\n    }\n  }\n}\n","\t<div class=\"container\">\n\t<dexih-widget \n\ttitle=\"Edit Validation\" \n\ticonClass=\"fa fa-lg fa-fw fa-check-square-o\" \n\t[showCloseButton]=\"true\"\n\t(close)=\"close()\"\n\t[padding]=\"true\"\n\t>\n        <ng-template #header>\n\t\t\t<div class=\"d-inline-flex\">\n\t\t\t\t<ng-template [ngIf]=\"hubCache && hubCache.status === eCacheStatus.Loaded\">\n\t\t\t\t\t<dexih-invalid-form-details class=\"mr-1\" [control]=\"formsService.currentForm\" (click)=\"formsService.showErrors()\"></dexih-invalid-form-details>\n\t\t\t\t\t<div *ngIf=\"hubCache.canWrite\" >\n\t\t\t\t\t\t<div class=\"input-group mr-1\">\n\t\t\t\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t\t\t\t<button class=\"btn btn-primary\" type=\"button\" (click)=\"test()\"><i\tclass=\"fa fa-check-circle-o\"></i></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" placeholder=\"Test value\" [(ngModel)]=\"testValue\" style=\"max-width: 100px\" aria-label=\"\" aria-describedby=\"basic-addon1\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<save-button class=\"mr-1\" *ngIf=\"hubCache.canWrite\" [formsService]=\"formsService\"></save-button>\n\t\t\t\t</ng-template>\n\t\t\t\t<cancel-button class=\"mr-1\" [formsService]=\"formsService\"></cancel-button>\n\t\t\t</div>\n        </ng-template>\n\n\t\t<form *ngIf=\"formsService.currentForm\"  [formGroup]=\"formsService.currentForm\">\n\t\t\t<fieldset>\n\t\t\t\t<section *ngIf=\"testResult\">\n\t\t\t\t\t<div class=\"alert \" [class.alert-danger]=\"testResult.success == false\" [class.alert-success]=\"testResult.success == true\">\n\t\t\t\t\t\tTest Result = {{testResult.success}} \n\t\t\t\t\t\t<div *ngIf=\"testResult.cleanedValue\">Cleaned Value = {{testResult.cleanedValue}} </div>\n\t\t\t\t\t\t<div *ngIf=\"testResult.rejectReason\">Reject Reason = {{testResult.rejectReason}} </div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Column Validation Name\" formControlName=\"name\" placeholder=\"Enter the name.\" iconClass=\"fa fa-list\" [autocapitalize]=\"true\" [errors]=\"formsService.formErrors['name']\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-select label=\"Data Type\" formControlName=\"dataType\" [items]=\"typeCodes\" itemKey=\"key\" itemName=\"name\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t<section>\n\t\t\t\t<form-textarea label=\"Description\" [showMarkdown]=\"true\"  formControlName=\"description\" placeholder=\"Enter the description.\" >\n\t\t\t\t</form-textarea>\n\t\t\t</section>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-select label=\"Validation Fail Action\" formControlName=\"invalidAction\" [items]=\"InvalidActions\" itemKey=\"key\" itemName=\"name\"\n\t\t\t\t\t\t\tnote='Action to take when the validation fails.'>\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section *ngIf=\"formsService.currentForm.value.invalidAction==eInvalidAction.Clean || formsService.currentForm.value.invalidAction==eInvalidAction.RejectClean\" class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-select label=\"Clean Action\" formControlName=\"cleanAction\" [items]=\"cleanActions\" itemKey=\"key\" itemName=\"name\"\n\t\t\t\t\t\t\tnote='Clean Action to apply'>\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<section *ngIf=\"(formsService.currentForm.value.invalidAction == eInvalidAction.RejectClean || formsService.currentForm.value.invalidAction == eInvalidAction.Clean) && formsService.currentForm.value.cleanAction == eCleanAction.CleanValue\" >\n\t\t\t\t\t<form-input label=\"Clean Value\" formControlName=\"cleanValue\" placeholder=\"Enter the clean value.\" iconClass=\"fa fa-list\" >\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\n\t\t\t\t<section >\n\t\t\t\t\t<form-checkbox label=\"Ignore null values.\" formControlName=\"allowDbNull\" >\n\t\t\t\t\t</form-checkbox>\n\t\t\t\t</section>\n\n\t\t\t\t<div class=\"form-row\" *ngIf=\"formsService.currentForm.value.dataType==eTypeCode.String || formsService.currentForm.value.dataType==eTypeCode.Char\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Minimum String Length\" formControlName=\"minLength\" placeholder=\"Enter the minimum string length\" type=\"number\" iconClass=\"fa fa-list\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Maximum String Length\" formControlName=\"maxLength\" placeholder=\"Enter the maximum string length\" type=\"number\" iconClass=\"fa fa-list\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<section *ngIf=\"formsService.currentForm.value.dataType==eTypeCode.String || formsService.currentForm.value.dataType==eTypeCode.Char\" >\n\t\t\t\t\t\t<form-input label=\"Simple Pattern Match\" formControlName=\"patternMatch\" placeholder=\"Provide a match string\" iconClass=\"fa fa-list\"\n\t\t\t\t\t\tnote=\"Simple pattern match, use the format - A=Upper, a=Lower, Z=Any Character, 9=numeric.  (For example: AA999 matches AS123)\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\t\t\t\t<section *ngIf=\"formsService.currentForm.value.dataType==eTypeCode.String || formsService.currentForm.value.dataType==eTypeCode.Char\" >\n\t\t\t\t\t\t<form-input label=\"Regular Expression Match\" formControlName=\"regexMatch\" placeholder=\"Provide a regular expression\" iconClass=\"fa fa-list\"\n\t\t\t\t\t\tnote=\"Use a standard regular expression to validate.  For example [A-Za-z0-9] will ensure string only contains characters and numbers.\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\n\n\t\t\t\t<div class=\"form-row\" *ngIf=\"formsService.currentForm.value.dataType!=eTypeCode.String && formsService.currentForm.value.dataType!=eTypeCode.Char\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Minimum Value\" formControlName=\"minValue\" placeholder=\"Enter the minimum value\" type=\"number\" iconClass=\"fa fa-list\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Maximum Value\" formControlName=\"maxValue\" placeholder=\"Enter the maximum value\" type=\"number\" iconClass=\"fa fa-list\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-tags label=\"Restrict to list of values\" formControlName=\"listOfValues\" placeholder=\"Provide a list of values which are valid.\" >\n\t\t\t\t\t</form-tags>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-tags label=\"Excluded list of values\" formControlName=\"listOfNotValues\" placeholder=\"Provide a list of values which are valid.\" >\n\t\t\t\t\t</form-tags>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-select label=\"Restrict to values that exist in a lookup table column\" \n\t\t\t\t\t\tformControlName=\"lookupColumnKey\" \n\t\t\t\t\t\t[items]=\"connections\" \n\t\t\t\t\t\tgrandParentName=\"name\"\n\t\t\t\t\t\tparentName=\"name\"\n\t\t\t\t\t\titemKey=\"key\"\n\t\t\t\t\t\titemName=\"name\"\n\t\t\t\t\t\tchildItems=\"dexihTables\"\n\t\t\t\t\t\tgrandChildItems=\"dexihTableColumns\"\n\t\t\t\t\t\t[allowNullSelect]=\"true\"\n\t\t\t\t\t\tnote='Checks the selected table column, and ensures the value contains at least one match.'>\n\t\t\t\t\t</form-select>\n\t\t\t\t</section>\n\n\t\t\t\t<section >\n\t\t\t\t\t<form-checkbox label=\"Only lookup values where the 'is current' column is true.\" formControlName=\"lookupIsValid\" >\n\t\t\t\t\t</form-checkbox>\n\t\t\t\t</section>\n\n\t\t\t\t<section >\n\t\t\t\t\t<form-checkbox label=\"Allow valid when lookup returns multiple rows.\" formControlName=\"lookupMultipleRecords\" >\n\t\t\t\t\t</form-checkbox>\n\t\t\t\t</section>\n\t\t\t\t\n\t\t\t</fieldset>\n\t\t</form>\n \n    </dexih-widget>\n\n</div>","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { HubCache } from '../../hub.models';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { DexihColumnValidation, DexihHub, eSharedObjectType } from '../../../shared/shared.models';\n\n@Component({\n  selector: 'columnValidations',\n  templateUrl: './columnValidation-index.component.html',\n  styles: []\n})\nexport class ColumnValidationIndexComponent implements OnInit, OnDestroy {\n    @Input() public hubKey: number;\n\n  private _subscription: Subscription;\n  private _hubCacheChangeSubscription: Subscription;\n\n    hubCache: HubCache;\n\n    validations: Array<DexihColumnValidation>;\n    public eSharedObjectType = eSharedObjectType;\n\n    columns = [\n        { name: 'name', title: 'Name', footer: 'description', format: 'Md', tags: 'tags' },\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar'},\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        // watch for any changes in the validations.\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                this.hubCache = result[0];\n                this.updateValidations();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Column Validation Index');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    deleteValidations(validations: Array<DexihColumnValidation>) {\n        this.hubService.deleteColumnValidations(validations);\n    }\n\n    updateValidations() {\n        if (this.hubCache && this.hubCache.isLoaded()) {\n            let validations = this.hubCache.hub.dexihColumnValidations.filter(c => c.isValid)\n                .map(c => {\n                    return {\n                        key: c.key,\n                        name: c.name,\n                        description: c.description,\n                        updateDate: c.updateDate,\n                        tags: this.hubCache.getObjectTags(eSharedObjectType.ColumnValidation, c.key)\n                    }\n                });\n            this._tableData.next(validations);\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    edit(validation: DexihColumnValidation) {\n        this.router.navigate(['columnValidation-edit', validation.key], { relativeTo: this.route});\n    }\n\n    export(items: Array<DexihColumnValidation>) {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        items.forEach(item => { this.hubCache.cacheAddColumnValidation(item.key, hub); });\n\n        let filename = items.length === 1 ? 'ColumnValidation - ' + items[0].name + '.json' : 'columnValidations.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    watchChanges() {\n      // watch the current validation in case it is changed in another session.\n      this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n          if (hubCacheChange.changeClass === eSharedObjectType.ColumnValidation\n            || hubCacheChange.changeClass === eSharedObjectType.TagObjects) {\n            this.updateValidations();\n          }\n      });\n  }\n}\n","<div class=\"container-fluid\">\n    <dexih-widget title=\"Validation Rules\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-check-square-o\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\t>\n\t\t<dexih-table \n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[dataObservable]=\"tableData\"\n\t\t\t(rowClick)=\"edit($event)\"\n\t\t\t[tags]=\"this.hubCache.hub.dexihTags\"\n\t\t\t>\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n\t\t\t\t\t<actions-columnValidation-button [columnValidation]=\"item\" class=\"mr-1\"></actions-columnValidation-button>\n\t\t\t\t\t<dependent-items-button class=\"mr-1\" [key]=\"item.key\" [objectType]='eSharedObjectType.ColumnValidation'></dependent-items-button>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t<dexih-button-save-local class=\"mr-1\" (click)=\"export(items)\"></dexih-button-save-local>\n\t\t\t\t\t<dexih-button-delete class=\"mr-1\" *ngIf=\"hubCache.canWrite\" (click)=\"deleteValidations(items)\"></dexih-button-delete>\n\t\t\t\t\t<tags-update-button class=\"mr-1\" [objectType]=\"eSharedObjectType.ColumnValidation\" [objects]=\"items\" ></tags-update-button>\n\t\t\t\t</ng-template>\n\t\t\t\t\n\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<dexih-button-new *ngIf=\"hubCache.canWrite\" [routerLink]=\"['columnValidation-new']\" class=\"mr-1\"></dexih-button-new>\n\t\t\t\t</ng-template>\n\t\t</dexih-table>\n\n    </dexih-widget>\n</div>\n\n\n","export * from './columnValidation-index/columnValidation-index.component';\nexport * from './columnValidation-edit/columnValidation-edit.component';\n","import { Component, OnInit, OnDestroy, HostListener } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { HubCache, eCacheStatus } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { LogFactory, eLogLevel } from '../../../../logging';\nimport { eConnectionPurpose, eConnectionCategory, ConnectionReference, DexihConnection, RemoteLibraries, eConnectionPurposeItems } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n\n  selector: 'dexih-connection-edit-form',\n  templateUrl: './connection-edit.component.html',\n  providers: [HubFormsService]\n})\nexport class ConnectionEditComponent implements OnInit, OnDestroy {\n\n  public connectionKey: number;\n  private connectionTypes: Array<ConnectionReference>;\n  private hubCache: HubCache;\n  private remoteLibraries: RemoteLibraries;\n  public action: string; // new or edit\n  public pageTitle: string;\n  public params: Params\n\n  private _subscription: Subscription;\n  private _formChangeSubscription: Subscription;\n  private _purposeSubscription: Subscription;\n\n  public savingConnection = false;\n  public refreshingConnection = false;\n  public revealingConnectionString = false;\n  public creatingDatabase = false;\n\n  public databases: Array<string> = [];\n\n  public eConnectionPurposeItems = eConnectionPurposeItems.filter( c => c.key > 0);\n  public eConnectionPurpose = eConnectionPurpose;\n  public eConnectionCategory = eConnectionCategory;\n\n  public cancelToken: CancelToken = new CancelToken();\n\n  public connectionReference: ConnectionReference;\n  private isLoaded = false;\n\n  public variables = [];\n\n  private logger = new LogFactory('connection-edit');\n\n  constructor(private hubService: HubService,\n    private authService: AuthService,\n    public formsService: HubFormsService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit() {\n    this.logger.LogC(() => `OnInit`, eLogLevel.Trace);\n\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n        this.hubService.getRemoteLibrariesObservable()\n      ).subscribe(async result => {\n        let data = result[0];\n        this.params = result[1];\n        this.hubCache = result[2];\n        this.remoteLibraries = result[3];\n\n        this.action = data['action'];\n        this.pageTitle = data['pageTitle'];\n\n        this.variables = this.hubCache.hub.dexihHubVariables.map(c => '{' + c.name + '}');\n\n        if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded ) { return; }\n\n        if (this.isLoaded && this.action === 'new') { return; }\n\n        if (this.isLoaded && this.formsService.hasChanged) {\n            this.authService.confirmDialog('Synchronization warning',\n            'The hub was disconnected, meaning this edit could have been changed by another session.  Would you like to discard the current changes, and reload the latest version?')\n            .then(async confirm => {\n                if (confirm) {\n                    await this.load();\n                }\n            }).catch(reason => {\n                return;\n            });\n        } else {\n            await this.load();\n        }\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Connection Edit');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._formChangeSubscription) { this._formChangeSubscription.unsubscribe(); }\n    if (this._purposeSubscription) { this._purposeSubscription.unsubscribe(); }\n    this.cancelToken.cancel();\n  }\n\n  private async load() {\n    this.isLoaded = true;\n\n    if (this.action === 'edit') {\n      // get the hub key from the route data, and update the service.\n      this.connectionKey = + this.params['connectionKey'];\n\n      this.logger.LogC(() => `edit connection key ${this.connectionKey}.`, eLogLevel.Trace);\n\n      if (!this.connectionKey) {\n        this.hubService.addHubErrorMessage('There was no connection specified to edit.');\n      } else {\n        if (!this.hubCache.hub || !this.hubCache.hub.dexihConnections) {\n          this.hubService.addHubErrorMessage('The hub cache is not loaded.');\n        } else {\n          let connection = this.hubCache.hub.dexihConnections.find(c => c.key === this.connectionKey);\n          if (!connection) {\n            this.hubService.addHubErrorMessage('The specified connection could not be found.');\n            this.logger.LogC(() => `edit connection with key ${this.connectionKey} not found.`, eLogLevel.Warning);\n          } else {\n            this.updateDatabaseTypes(connection.purpose);\n            this.connectionReference = await this.hubService.GetConnectionReference(connection);\n            this.formsService.connection(connection);\n            if (connection.defaultDatabase) {\n              this.databases = [connection.defaultDatabase];\n            }\n            this.logger.LogC(() => `edit connection, form loaded.`, eLogLevel.Trace);\n          }\n        }\n      }\n    }\n\n    if (this.action === 'new') {\n      let connection = new DexihConnection();\n      connection.purpose = +this.params['purpose'];\n\n      this.logger.LogC(() => `new connection, purpose ${connection.purpose}.`, eLogLevel.Trace);\n\n      this.updateDatabaseTypes(connection.purpose);\n      this.formsService.connection(connection);\n\n      this.updateUrl();\n\n      this.logger.LogC(() => `new connection, form loaded.`, eLogLevel.Trace);\n    }\n\n    if (this.action === 'copy') {\n\n      let connection = new DexihConnection();\n\n      let previousConnectionKey = + this.params['connectionKey'];\n      let previousConnection = this.hubCache.hub.dexihConnections.find(c => c.key === previousConnectionKey);\n      Object.assign(connection, previousConnection);\n      connection.name += ' (copy)';\n      connection.key = null;\n      this.connectionReference = await this.hubService.GetConnectionReference(connection);\n\n      this.logger.LogC(() => `copy connection, connectionKey ${previousConnectionKey}.`, eLogLevel.Trace);\n      this.updateDatabaseTypes(connection.purpose);\n      this.formsService.connection(connection);\n\n      this.updateUrl();\n\n      this.logger.LogC(() => `new connection, form loaded.`, eLogLevel.Trace);\n    }\n\n    if (this._purposeSubscription) { this._purposeSubscription.unsubscribe(); }\n    this._purposeSubscription = this.formsService.currentForm.controls.purpose.valueChanges.subscribe(purpose => {\n        this.updateDatabaseTypes(purpose);\n    });\n  }\n\n  private updateUrl() {\n      // update the url with the saved key\n      this._formChangeSubscription = this.formsService.getCurrentFormObservable().subscribe(form => {\n        let key = form.controls.key.value;\n        if (key) {\n          if (history.pushState) {\n            let url = window.location.pathname;\n            let index = url.indexOf('/connection-new');\n            if (index > 0) {\n              let newUrl = url.substr(0, index) + `/connection-edit/${key}`;\n              this.router.navigateByUrl(newUrl);\n            }\n            this._formChangeSubscription.unsubscribe();\n          }\n        }\n      });\n  }\n\n  private updateDatabaseTypes(purpose: eConnectionPurpose) {\n    this.connectionTypes = this.remoteLibraries.connections.filter(d =>\n      (purpose === eConnectionPurpose.Source && d.allowsSourceConnection) ||\n      (purpose === eConnectionPurpose.Managed && d.allowsManagedConnection) ||\n      (purpose === eConnectionPurpose.Target && d.allowsTargetConnection));\n  }\n\n  async selectDatabaseType(connectionReference: ConnectionReference) {\n    this.formsService.currentForm.controls.connectionClassName.setValue(connectionReference.connectionClassName);\n    this.formsService.currentForm.controls.connectionAssemblyName.setValue(connectionReference.connectionAssemblyName);\n\n    // For integration hub connections, pre-fill some information.\n    if (this.connectionReference.connectionCategory === eConnectionCategory.Hub) {\n      if (!this.formsService.currentForm.controls.server.value) {\n        const uri = location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '');\n        this.formsService.currentForm.controls.server.setValue(uri);\n      }\n      if (!this.formsService.currentForm.controls.username.value) {\n        const user = this.authService.getUser()\n        if (user) {\n          this.formsService.currentForm.controls.username.setValue(user.email);\n        }\n      }\n    }\n  }\n\n  connectionStringChanged() {\n    this.logger.LogC(() => `connectionStringChanged.`, eLogLevel.Trace);\n    if (this.formsService.currentForm.controls.connectionString.value) {\n      this.formsService.currentForm.controls.connectionString.setValue(null);\n      this.formsService.currentForm.controls.connectionStringDisplay.setValue('');\n    }\n  }\n\n  clearConnectionString() {\n    this.formsService.currentForm.controls.connectionString.setValue(null);\n    this.formsService.currentForm.controls.connectionStringDisplay.setValue('');\n  }\n\n  revealConnectionString() {\n    this.logger.LogC(() => `revealConnectionString.`, eLogLevel.Trace);\n    this.revealingConnectionString = true;\n\n    this.hubService.decrypt(this.formsService.currentForm.controls.connectionString.value, this.cancelToken)\n      .then(result => {\n        this.formsService.currentForm.controls.connectionStringDisplay.setValue(result);\n        this.revealingConnectionString = false;\n      }).catch(reason => {\n        this.hubService.addHubMessage(reason);\n        this.revealingConnectionString = false;\n      });\n  }\n\n  passwordChanged() {\n    this.logger.LogC(() => `passwordChanged.`, eLogLevel.Trace);\n\n    if (this.formsService.currentForm.controls.password.value) {\n      this.formsService.currentForm.controls.password.setValue(null);\n      this.formsService.currentForm.controls.passwordDisplay.setValue('');\n    }\n  }\n\n  clearPassword() {\n    this.formsService.currentForm.controls.password.setValue(null);\n    this.formsService.currentForm.controls.passwordDisplay.setValue('');\n  }\n\n  async refreshConnection() {\n    this.logger.LogC(() => `refreshConnection.`, eLogLevel.Trace);\n\n    await this.encryptConnection();\n\n    this.refreshingConnection = true;\n    this.hubService.refreshConnection(this.formsService.currentForm.value, this.cancelToken)\n      .then(result => {\n        this.hubService.addHubSuccessMessage('The connection was successful.');\n        this.databases = result;\n        this.refreshingConnection = false;\n      }).catch(reason => {\n        this.hubService.addHubMessage(reason);\n        this.refreshingConnection = false;\n      });\n  }\n\n  newDatabaseName(value: string) {\n    this.formsService.currentForm.controls.defaultDatabase.setValue(value);\n  }\n\n  createDatabase() {\n    this.creatingDatabase = true;\n\n    this.authService.promptDialog('Create Database', 'Enter the name for the new database?').then(async result => {\n      if (result) {\n        await this.encryptConnection();\n\n        let connection = Object.assign({}, this.formsService.currentForm.value);\n        connection.defaultDatabase = result;\n\n        this.hubService.createDatabase(connection, this.cancelToken)\n          .then(() => {\n            this.hubService.addHubSuccessMessage('The database was created successfully.');\n            this.databases = [result];\n            this.formsService.currentForm.controls.defaultDatabase.setValue(result);\n            this.creatingDatabase = false;\n          }).catch(reason => {\n            this.hubService.addHubMessage(reason);\n            this.creatingDatabase = false;\n          });\n      } else {\n        this.creatingDatabase = false;\n      }\n    }).catch(() => {\n      this.creatingDatabase = false;\n    });\n  }\n\n  async encryptConnection() {\n    let form = this.formsService.currentForm;\n\n    let passwordRaw = form.controls.passwordRaw.value;\n    if (passwordRaw) {\n      let password = await this.hubService.encrypt(passwordRaw, this.cancelToken);\n      form.controls.password.setValue(password);\n      form.controls.passwordRaw.setValue(null);\n    }\n\n    let connectionStringRaw = form.controls.connectionStringRaw.value;\n    if (connectionStringRaw) {\n      let connectionString = await this.hubService.encrypt(connectionStringRaw, this.cancelToken);\n      form.controls.connectionString.setValue(connectionString);\n      form.controls.connectionStringRaw.setValue(null);\n    }\n  }\n\n  async save() {\n    await this.encryptConnection();\n    await this.formsService.save();\n  }\n\n  close() {\n    this.authService.navigateUp();\n  }\n\n  public canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>((resolve) => {\n      if (this.formsService.hasChanged) {\n        this.authService.confirmDialog('The connection has not been saved',\n          'The connection changes have not been saved.  Do you want to discard the changes and exit?')\n          .then((confirm) => {\n              resolve(confirm);\n            }).catch(() => {\n              resolve(false);\n            });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  public getRoute(event) {\n    this.authService.getRoute(event);\n  }\n\n  // @HostListener allows is to guard against browser refresh, close, etc.\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.formsService.hasChanged) {\n      $event.returnValue = 'The connection changes have not been saved.  Do you want to discard the changes and exit?';\n    }\n  }\n}\n","<div class=\"container\">\n\t<dexih-widget \n\t\ttitle=\"Edit Connection\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-database\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\t\t[padding]=\"true\"\n\t\t>\n        <ng-template #header>\n\t\t\t<dexih-invalid-form-details class=\"mr-1\" [control]=\"formsService.currentForm\" (click)=\"formsService.showErrors()\"></dexih-invalid-form-details>\n\t\t\t<dexih-button class=\"mr-1\" *ngIf=\"hubCache.canWrite\" buttonClass=\"btn btn-success\" [busy]=\"refreshingConnection\" iconClass=\"fa fa-thumbs-o-up\" (click)=\"!refreshingConnection && refreshConnection()\" title=\"Test the connection against the source.\">Test</dexih-button>\n\t\t\t<save-button *ngIf=\"hubCache.canWrite\" [formsService]=\"formsService\" class=\"mr-1\"></save-button>\n\n\t\t\t<ng-template [ngIf]=\"hubCache.canWrite && connectionReference\">\n\t\t\t\t<ng-template [ngIf]=\"connectionReference.connectionCategory == eConnectionCategory.SqlDatabase || connectionReference.connectionCategory == eConnectionCategory.DatabaseFile || connectionReference.connectionCategory == eConnectionCategory.NoSqlDatabase || connectionReference.connectionCategory == eConnectionCategory.Hub\">\n\t\t\t\t\t<dexih-button class=\"mr-1\" *ngIf=\"formsService.currentForm.controls.key.value\" [routerLink]=\"['../../connection-import', formsService.currentForm.controls.key.value]\" iconClass=\"fa fa-plus\">Import Tables</dexih-button>\n\t\t\t\t</ng-template>\n\t\t\t\t<ng-template [ngIf]=\"connectionReference.connectionCategory == eConnectionCategory.File\">\n\t\t\t\t\t<dexih-button class=\"mr-1\" *ngIf=\"formsService.currentForm.controls.key.value\" [routerLink]=\"['../../../tables', 'table-new', formsService.currentForm.controls.key.value]\" iconClass=\"fa fa-plus\">New File</dexih-button>\n\t\t\t\t</ng-template>\n\t\t\t\t<ng-template [ngIf]=\"connectionReference.connectionCategory == eConnectionCategory.WebService\">\n\t\t\t\t\t<dexih-button class=\"mr-1\" *ngIf=\"formsService.currentForm.controls.key.value\" [routerLink]=\"['../../../tables', 'table-new', formsService.currentForm.controls.key.value]\"  iconClass=\"fa fa-plus\">New WebService</dexih-button>\n\t\t\t\t</ng-template>\n\t\t\t</ng-template>\n\n\t\t\t<cancel-button [formsService]=\"formsService\"></cancel-button>\n        </ng-template>\n\n\t\t<form *ngIf=\"formsService.currentForm\"  [formGroup]=\"formsService.currentForm\">\n\t\t\t<!--dummy hidden password to stop chrome/firefox/safari autocompletion password.-->\n\t\t\t<input id=\"fake_user_name\" name=\"fake_user[name]\" style=\"position:absolute; top:-5000px;\" type=\"text\" value=\"Fake Auto-fill\">\n\t\t\t<input id=\"fake_password\" type=\"password\" name=\"fake_password[password]\" style=\"position:absolute; top:-5000px;\" type=\"text\" value=\"Fake Auto-fill\">\n\n\t\t\t<fieldset>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<form-select label=\"Purpose\" formControlName=\"purpose\" placeholder=\"Connection purpose\" iconClass=\"fa fa-database\"\n\t\t\t\t\t\t\t[items]=\"eConnectionPurposeItems\" itemName=\"name\" itemKey=\"key\" [enableFilter]=\"false\"\n\t\t\t\t\t\t\t[errors]=\"formsService.formErrors.purpose\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Name\" formControlName=\"name\" placeholder=\"Enter a name for the connection\" [autocapitalize]=\"true\" iconClass=\"fa fa-database\"\n\t\t\t\t\t\t\t[errors]=\"formsService.formErrors.name\">\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-select label=\"Database Type\" [(ngModel)]=\"connectionReference\" [ngModelOptions]=\"{standalone: true}\" (ngModelChange)=\"selectDatabaseType($event)\" \n\t\t\t\t\t\t\t[items]=\"connectionTypes\" itemName=\"name\" itemKey=\"name\" [enableKeySelect]=\"false\"\n\t\t\t\t\t\t\ticonClass=\"fa fa-database\" [sortItems]=\"true\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<section>\n                    <form-textarea label=\"Description\" formControlName=\"description\" [showMarkdown]=\"true\" placeholder=\"Enter the description.\"  [errors]=\"formsService.formErrors.description\">\n                    </form-textarea>\n                </section>\n\n\t\t\t\t<span *ngIf=\"connectionReference\">\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<markdown [data]=\"connectionReference.description\" (click)=\"getRoute($event)\"></markdown>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<span *ngIf=\"connectionReference.allowsConnectionString == true\">\n\t\t\t\t\t\t<section >\n\t\t\t\t\t\t\t<form-checkbox label=\"Use a connection string\" formControlName=\"useConnectionString\" >\n\t\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t\t</section>\n\n\t\t\t\t\t\t<section *ngIf=\"formsService.currentForm.controls.useConnectionString.value == true\">\n\t\t\t\t\t\t\t<form-input *ngIf=\"!formsService.currentForm.controls.useConnectionStringVariable.value\"\n\t\t\t\t\t\t\t\tlabel=\"Connection String\" (keydown)=\"connectionStringChanged()\" formControlName=\"connectionStringDisplay\" placeholder=\"Enter a the connection string\" iconClass=\"fa fa-database\" [errors]=\"formsService.formErrors.connectionStringDisplay\">\n\t\t\t\t\t\t\t\t<span *ngIf=\"!formsService.formErrors.connectionStringRaw\"> (<a href=\"javascript:void(0)\" *ngIf=\"revealingConnectionString == false\" (click)=\"revealConnectionString()\"> <i class=\"fa fa-refresh\"></i> Reveal </a>\n\t\t\t\t\t\t\t\t<span *ngIf=\"revealingConnectionString == true\" > <i class=\"fa fa-spin fa-refresh\"></i> Revealing... please wait </span>)</span>\n\t\t\t\t\t\t\t</form-input>\n\n\t\t\t\t\t\t\t<form-select *ngIf=\"formsService.currentForm.controls.useConnectionStringVariable.value\"\n\t\t\t\t\t\t\t\tlabel=\"Connection String\" \n\t\t\t\t\t\t\t\tformControlName=\"connectionString\" \n\t\t\t\t\t\t\t\t[items]=\"variables\" \n\t\t\t\t\t\t\t\ticonClass=\"fa fa-at\" \n\t\t\t\t\t\t\t\t[sortItems]=\"true\" \n\t\t\t\t\t\t\t\t[enableTextEntry]=\"true\"\n\t\t\t\t\t\t\t\ttextEntryNote=\"Enter the variable name surrounded by {}\">\n\t\t\t\t\t\t\t</form-select>\n\n\t\t\t\t\t\t\t<form-checkbox label=\"Use a variable for connection string\" formControlName=\"useConnectionStringVariable\" (click)=\"clearConnectionString()\" >\n\t\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t</span>\n\n\t\t\t\t\t<span *ngIf=\"formsService.currentForm.controls.useConnectionString.value == false\">\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<form-select \n\t\t\t\t\t\t\t\t[enableTextEntry]=\"true\" \n\t\t\t\t\t\t\t\t[label]=\"connectionReference.serverDescription\" \n\t\t\t\t\t\t\t\tformControlName=\"server\" \n\t\t\t\t\t\t\t\tplaceholder=\"Enter the details.\" \n\t\t\t\t\t\t\t\ticonClass=\"fa fa-server\" \n\t\t\t\t\t\t\t\t[errors]=\"formsService.formErrors.server\"\n\t\t\t\t\t\t\t\t[items]=\"variables\" \n\t\t\t\t\t\t\t\t[enableFilter]=\"true\"\n\t\t\t\t\t\t\t\t[note]=\"connectionReference.serverHelp\"\n\t\t\t\t\t\t\t></form-select> \n\t\t\t\t\t\t</section>\n\n\t\t\t\t\t\t<section *ngIf=\"connectionReference.allowsWindowsAuth == true\">\n\t\t\t\t\t\t\t<form-checkbox label=\"Use windows authentication\" formControlName=\"useWindowsAuth\">\n\t\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t\t</section>\n\n\t\t\t\t\t\t<div *ngIf=\"connectionReference.allowsUserPassword && (formsService.currentForm.controls.useWindowsAuth.value == false || connectionReference.allowsWindowsAuth == false)\" class=\"form-row\">\n\t\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t\t<form-select \n\t\t\t\t\t\t\t\t\t[enableTextEntry]=\"true\" \n\t\t\t\t\t\t\t\t\tlabel=\"User Name\" \n\t\t\t\t\t\t\t\t\tformControlName=\"username\" \n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter user name\" \n\t\t\t\t\t\t\t\t\ticonClass=\"fa fa-user\" \n\t\t\t\t\t\t\t\t\t[errors]=\"formsService.formErrors.username\"\n\t\t\t\t\t\t\t\t\t[items]=\"variables\" \n\t\t\t\t\t\t\t\t\t[enableFilter]=\"true\"\n\t\t\t\t\t\t\t\t></form-select> \n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t\t<form-input *ngIf=\"formsService.currentForm.controls.usePasswordVariable.value == false\" label=\"Password\" (keydown)=\"passwordChanged()\" formControlName=\"passwordDisplay\" type=\"password\" placeholder=\"Enter a password\"  iconClass=\"fa fa-lock\" [errors]=\"formsService.formErrors.password\">\n\t\t\t\t\t\t\t\t</form-input>\n\n\t\t\t\t\t\t\t\t<form-select *ngIf=\"formsService.currentForm.controls.usePasswordVariable.value\"\n\t\t\t\t\t\t\t\t\tlabel=\"Password\" \n\t\t\t\t\t\t\t\t\tformControlName=\"password\" \n\t\t\t\t\t\t\t\t\t[items]=\"variables\" \n\t\t\t\t\t\t\t\t\ticonClass=\"fa fa-at\" \n\t\t\t\t\t\t\t\t\t[sortItems]=\"true\" \n\t\t\t\t\t\t\t\t\t[enableTextEntry]=\"true\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t</form-select>\n\n\t\t\t\t\t\t\t\t<form-checkbox label=\"Use a variable for password\" formControlName=\"usePasswordVariable\" (click)=\"clearPassword()\" >\n\t\t\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div *ngIf=\"connectionReference.allowsToken && (formsService.currentForm.controls.useWindowsAuth.value == false || connectionReference.allowsWindowsAuth == false)\" class=\"form-row\">\n\t\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t\t<form-input *ngIf=\"formsService.currentForm.controls.usePasswordVariable.value == false\" label=\"Secure Token\" (keydown)=\"passwordChanged()\" formControlName=\"passwordDisplay\" type=\"password\" placeholder=\"Enter secure token\"  iconClass=\"fa fa-lock\" [errors]=\"formsService.formErrors.password\">\n\t\t\t\t\t\t\t\t</form-input>\n\n\t\t\t\t\t\t\t\t<form-select *ngIf=\"formsService.currentForm.controls.usePasswordVariable.value\"\n\t\t\t\t\t\t\t\t\tlabel=\"Secure Token\" \n\t\t\t\t\t\t\t\t\tformControlName=\"password\" \n\t\t\t\t\t\t\t\t\t[items]=\"variables\" \n\t\t\t\t\t\t\t\t\ticonClass=\"fa fa-at\" \n\t\t\t\t\t\t\t\t\t[sortItems]=\"true\" \n\t\t\t\t\t\t\t\t\t[enableTextEntry]=\"true\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t</form-select>\n\n\t\t\t\t\t\t\t\t<form-checkbox label=\"Use a variable for token\" formControlName=\"usePasswordVariable\" (click)=\"clearPassword()\" >\n\t\t\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<section *ngIf=\"connectionReference.requiresDatabase\" ng-disabled=\"refreshingConnection || creatingDatabase\" >\n\t\t\t\t\t\t\t<form-select \n\t\t\t\t\t\t\t\t[label]=\"connectionReference.databaseDescription\" \n\t\t\t\t\t\t\t\tformControlName=\"defaultDatabase\" \n\t\t\t\t\t\t\t\t[items]=\"databases\" \n\t\t\t\t\t\t\t\t[defaultItem]=\"formsService.currentForm.value.defaultDatabase\" \n\t\t\t\t\t\t\t\ticonClass=\"fa fa-database\" \n\t\t\t\t\t\t\t\t[sortItems]=\"true\" \n\t\t\t\t\t\t\t\t[enableTextEntry]=\"true\"\n\t\t\t\t\t\t\t\ttextEntryNote=\"Enter the database name\"\n\t\t\t\t\t\t\t\t(textValueChange)=\"newDatabaseName($event)\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t(<a href=\"javascript:void(0)\" *ngIf=\"refreshingConnection == false\" (click)=\"refreshConnection()\"> <i class=\"fa fa-refresh\"></i> Refresh </a>\n\t\t\t\t\t\t\t<span *ngIf=\"refreshingConnection == true\" > <i class=\"fa fa-spin fa-refresh\"></i> Refreshing... please wait </span>) (\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" *ngIf=\"creatingDatabase == false\" (click)=\"createDatabase()\"> <i class=\"fa fa-edit\"></i> New Database </a>\n\t\t\t\t\t\t\t\t<span *ngIf=\"creatingDatabase == true\"> <i class=\"fa fa-spin fa-refresh\"></i> Creating database... please wait </span>)\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</span>\n\n\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t<form-input  type=\"number\" label=\"Connection Timeout\" formControlName=\"connectionTimeout\" iconClass=\"fa fa-clock-o\"\t[errors]=\"formsService.formErrors.connectionTimeout\"\n\t\t\t\t\t\t\tnote=\"The duration in seconds the remote agent will wait to establish a connection.\">\n\t\t\t\t\t\t\t</form-input>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t<form-input type=\"number\" label=\"Command Timeout\" formControlName=\"commandTimeout\" iconClass=\"fa fa-clock-o\"\t[errors]=\"formsService.formErrors.commandTimeout\"\n\t\t\t\t\t\t\tnote=\"The duration in seconds the remote agent will for a command to start returning a result.\">\n\t\t\t\t\t\t\t</form-input>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<section *ngIf=\"formsService.currentForm.controls.purpose.value == 'Managed'\">\n\t\t\t\t\t\t<form-checkbox label=\"Multi-use Managed Database (table keys will be added to table names to allow multiple hubs to use same database)\"\n\t\t\t\t\t\t\tformControlName=\"embedTableKey\" [errors]=\"formsService.formErrors.embedTableKey\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\n\t\t\t\t</span>\n\t\t\t</fieldset>\n\n\t\t</form>\n\t</dexih-widget>\n\t\n\t<dexih-help class=\"m-3\" title=\"Connections\" path=\"/assets/help/reference/connection.md\"></dexih-help>\n\n</div>","export * from './connection-edit.component';\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { HubCache, EntityStatus } from '../../hub.models';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable, BehaviorSubject, Subscription, combineLatest} from 'rxjs';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { DexihConnection, DexihTable, eTableType, eStatus, eImportAction, eSharedObjectType, ConnectionReference } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n    selector: 'connections',\n    templateUrl: './connection-import.component.html',\n    styles: []\n})\nexport class ConnectionImportComponent implements OnInit, OnDestroy {\n    @Input() public hubKey: number;\n\n    private _subscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n\n    hubCache: HubCache;\n    connectionKey: number;\n    connection: DexihConnection;\n    connectionReference: ConnectionReference;\n    names: Array<string>;\n    tables: Array<DexihTable>;\n\n    showPage = false;\n    showPageMessage = 'Loading...';\n\n    tableFilter: string;\n    viewFilter: string;\n\n    private cancelToken = new CancelToken();\n\n    columns = [\n        { name: 'schema', title: 'Schema', format: '' },\n        { name: 'name', title: 'Name', format: '' },\n        { name: 'tableType', title: 'Type', enum: eTableType, format: 'Enum' },\n        { name: 'entityStatus.message', title: 'Latest Status' },\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<DexihTable>> = this._tableData.asObservable();\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private router: Router,\n        private route: ActivatedRoute\n    ) {\n        this.tableFilter = 'All';\n        this.viewFilter = 'Tables';\n    }\n\n    ngOnInit() {\n        this.showPageMessage = 'Querying source database tables.  Please wait...';\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.hubService.getRemoteAgentObservable()\n            ).subscribe(async result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n                let remoteAgent = result[3];\n\n                this.connectionKey = + params['connectionKey'];\n\n                if (!this.connectionKey) {\n                    this.hubService.addHubErrorMessage('There was no connection specified to import tables.');\n                    this.close();\n                } else {\n                    if (this.hubCache.isLoaded()) {\n                        this.connection = this.hubCache.hub.dexihConnections\n                            .find(connection => connection.key === this.connectionKey);\n\n                        this.connectionReference = await this.hubService.GetConnectionReference(this.connection);\n\n                        this.showPage = false;\n\n                        if (remoteAgent) {\n                            if (this.connection) {\n                                this.getTables(this.connection);\n                            } else {\n                                this.hubService.addHubErrorMessage('The connection could not be found.');\n                                this.close();\n                            }\n                        } else {\n                            this.showPageMessage = 'Waiting for an active remote agent...';\n                        }\n                    }\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Connection Import');\n        }\n\n        // watch for any changes in the connections.\n        this.watchChanges();\n    }\n\n    setTableFilter(tableFilter) {\n        this.tableFilter = tableFilter;\n        this.updateFilter();\n    }\n\n    setViewFilter(viewFilter) {\n        this.viewFilter = viewFilter;\n        this.updateFilter();\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    updateFilter() {\n        let tables;\n        switch (this.tableFilter) {\n            case 'Imported':\n                tables = this.tables.filter(c => c.key > 0);\n                break;\n            case 'NonImported':\n                tables = this.tables.filter(c => c.key === 0 || !c.key);\n                break;\n            default:\n                tables = this.tables;\n                break;\n        }\n\n        switch (this.viewFilter) {\n            case 'Views':\n                tables = tables.filter(c => c.tableType === eTableType.View);\n                break;\n            case 'Tables':\n                tables = tables.filter(c => c.tableType === eTableType.Table);\n                break;\n        }\n\n        this._tableData.next(tables);\n    }\n\n    getTables(connection: DexihConnection) {\n        this.showPage = false;\n        this.showPageMessage = 'Importing tables from remote database...';\n\n        this.hubService.getDatabaseTableNames(connection, this.cancelToken)\n            .then(tables => {\n                this.tables = tables;\n\n                let cacheTables = this.hubCache.hub.dexihTables.filter(c => c.connectionKey === connection.key);\n\n                for (let i = 0; i < tables.length; i++) {\n                    let cacheTable = null;\n                    let table = tables[i];\n\n                    if (cacheTables) {\n                        cacheTable = cacheTables.find(t => t.name === table.name && t.schema === table.schema);\n\n                        if (!cacheTable && this.connectionReference && this.connectionReference.defaultSchema === table.schema) {\n                            cacheTable = cacheTables.find(t => t.name === table.name && !t.schema)\n                        }\n                    }\n\n                    if (cacheTable) {\n                        this.tables[i] = cacheTable;\n                    } else {\n                        table.connectionKey = connection.key;\n                        table.tableType = <eTableType>table.tableType;\n                        table.entityStatus = new EntityStatus();\n                    }\n                }\n\n                this.showPage = true;\n                this.showPageMessage = '';\n\n                this.updateFilter();\n\n\n            }).catch(reason => {\n                this.hubService.addHubMessage(reason);\n            });\n    }\n\n\n    import(table: DexihTable) {\n        this.hubService.importTables([table], true, this.cancelToken).then(importResult => {\n            this.mergeTables(importResult);\n            // if (importResult) {\n            //     importResult[0].entityStatus.isBusy = false;\n            // }\n        }).catch(reason => {\n            table.entityStatus.isBusy = false;\n            table.entityStatus.lastStatus = eStatus.Error;\n            table.entityStatus.message = reason.message;\n        });\n    }\n\n    deleteTable(table: DexihTable) {\n        this.hubService.deleteTables([table]).then(result => {\n            table.entityStatus.isBusy = false;\n        }).catch(reason => {\n            table.entityStatus.isBusy = false;\n            table.entityStatus.lastStatus = eStatus.Error;\n            table.entityStatus.message = reason.message;\n        });\n    }\n\n    importSelected(selected: Array<DexihTable>) {\n        let selectedTables = selected.filter(t => !t.entityStatus.isBusy);\n        selectedTables.forEach(t => t.entityStatus.isBusy = true);\n        this.hubService.importTables(selectedTables, true, this.cancelToken).then(result => {\n            this.mergeTables(result);\n            // selectedTables.forEach(t => t.entityStatus.isBusy = false);\n        }).catch(reason => {\n            selectedTables.forEach(t => t.entityStatus.isBusy = false);\n        });\n    }\n\n    mergeTables(tables: Array<DexihTable>) {\n        if (!tables) { return; }\n        tables.forEach(table => {\n            let index = this.tables.findIndex(t => t.name === table.name && t.schema === table.schema);\n\n            if (index >= 0) {\n                this.tables[index] = table;\n            }\n        });\n\n        this.updateFilter();\n    }\n\n    deleteSelected(selected: Array<DexihTable>) {\n        let selectedTables = selected.filter(t => !t.entityStatus.isBusy && t.key > 0);\n\n        if (selectedTables.length === 0) {\n            this.authService.informationDialog(\n                'Can not delete', 'None of the selected tables can be deleted, as they are either busy, or have not been imported.');\n        }\n        selectedTables.forEach(t => t.entityStatus.isBusy = true);\n        this.hubService.deleteTables(selectedTables).then(result => {\n            selectedTables.forEach(t => t.entityStatus.isBusy = false);\n        }).catch(reason => {\n            selectedTables.forEach(t => t.entityStatus.isBusy = false);\n        });\n    }\n\n    editTable(table: DexihTable) {\n        if (table && table.key) {\n            this.router.navigate(['table-edit', table.key], { relativeTo: this.route.parent });\n        }\n    }\n\n    newDatalinks(items: Array<DexihTable>) {\n        let selectedTables = items.filter(t => !t.entityStatus.isBusy);\n        selectedTables.forEach(t => t.entityStatus.isBusy = true);\n        this.hubService.importTables(selectedTables, true, this.cancelToken).then(result => {\n            this.mergeTables(result);\n\n            let tableKeys = result.map(c => c.key).join('|');\n            this.router.navigate(['datalink-new', tableKeys, 0], { relativeTo: this.route.parent });\n\n        }).catch(reason => {\n            selectedTables.forEach(t => t.entityStatus.isBusy = false);\n        });\n\n    }\n\n    watchChanges() {\n        // watch the current connection in case it is changed in another session.\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n            if (hubCacheChange.changeClass === eSharedObjectType.Table) {\n                if (hubCacheChange.changeType === eImportAction.Replace || hubCacheChange.changeType === eImportAction.New) {\n                    let table: DexihTable = hubCacheChange.data;\n\n                    if (table.connectionKey === this.connectionKey) {\n                        let index = this.tables.findIndex(t => t.name === table.name && t.schema === table.schema);\n                        if (index >= 0) {\n                            this.tables[index] = table;\n                            this.updateFilter();\n                        }\n                    }\n                }\n                if (hubCacheChange.changeType === eImportAction.Delete) {\n                    let deletedTable: DexihTable = hubCacheChange.data;\n                    if (deletedTable.connectionKey === this.connectionKey) {\n                        let previousTable = this.tables.find(t => t.key === deletedTable.key);\n                        if (previousTable) {\n                            // table has been delete, so clear key attributes so it appears deleted.\n                            previousTable.key = null;\n                            previousTable.entityStatus.isBusy = false;\n                            previousTable.updateDate = null;\n                            previousTable.createDate = null;\n                            this.updateFilter();\n                        }\n                    }\n                }\n            }\n        });\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n}\n","<div class=\"container-fluid\">\n    <dexih-widget [title]=\"'Import Tables for ' + connection?.name\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-database\" \n\t\t[showIf]=\"showPage\"\n\t\t[loadingMessage]=\"showPageMessage\"\n\t\t[showCloseButton] = \"true\"\n\t\t(close)=\"close()\"\n\t\t[padding]=\"false\"\n\t>\n\t\t<ng-template #header>\n\n\t\t</ng-template>\n\n\t\t<dexih-table \n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[dataObservable]=\"tableData\"\n\t\t\t(rowClick)=\"editTable($event)\"\n\t\t\t>\n\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t<dexih-button-splitdropdown class=\"mr-1\" *ngIf=\"hubCache.canWrite\" text=\"Import\" buttonClass=\"btn btn-success\" iconClass=\"fa fa-cloud-download\" (buttonClick)=\"importSelected(items)\" title=\"Import selected tables\" >\n\t\t\t\t\t\t<a class=\"dropdown-item\" (click)=\"newDatalinks(items)\" title=\"Import tables and create default staging datalinks\">Import &amp; Create Datalinks</a>\n\t\t\t\t\t</dexih-button-splitdropdown>\n\t\t\t\t\t\t\t\n\t\t\t\t\t<dexih-button-delete (click)=\"deleteSelected(items)\" title=\"Delete selected tables\"></dexih-button-delete>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-table=\"item\">\n\t\t\t\t\t<dexih-button-edit class=\"mr-1\"  *ngIf=\"table.key\" [routerLink]=\"['table-edit', table.key]\" queryParamsHandling preserveFragment (click)=\"deleteSelected(items)\" title=\"Edit this table\"></dexih-button-edit>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #filter select=\"filter\" let-items=\"items\">\n\t\t\t\t\t<dexih-button-dropdown class=\"mr-1\" buttonClass=\"btn-primary\" iconClass=\"fa fa-download\" [text]=\"tableFilter\" title=\"Filter by import status\" [pullRight]=\"true\">\n\t\t\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"tableFilter=='All'\" (click)=\"setTableFilter('All')\">All</a>\n\t\t\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"tableFilter=='Imported'\" (click)=\"setTableFilter('Imported')\">Imported</a>\n\t\t\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"tableFilter=='NonImported'\" (click)=\"setTableFilter('NonImported')\">Non Imported</a>\n\t\t\t\t\t</dexih-button-dropdown>\n\t\n\t\t\t\t\t<dexih-button-dropdown class=\"mr-1\" buttonClass=\"btn-primary\" iconClass=\"fa fa-table\" [text]=\"viewFilter\" title=\"Filter by tables/views\" [pullRight]=\"true\">\n\t\t\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"viewFilter=='All'\" (click)=\"setViewFilter('All')\">All</a>\n\t\t\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"viewFilter=='Imported'\" (click)=\"setViewFilter('Tables')\">Tables</a>\n\t\t\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"viewFilter=='NonImported'\" (click)=\"setViewFilter('Views')\">Views</a>\n\t\t\t\t\t</dexih-button-dropdown>\n\t\t\t\t</ng-template>\n\t\t</dexih-table>\n\n    </dexih-widget>\n</div>\n","export * from './connection-import.component';\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { HubCache } from '../../hub.models';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { DexihConnection, eConnectionPurpose, DexihHub, eSharedObjectType, eConnectionPurposeItems } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'connections',\n    templateUrl: './connection-index.component.html',\n    styles: []\n})\nexport class ConnectionIndexComponent implements OnInit, OnDestroy {\n    @Input() public hubKey: number;\n\n    private _subscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n\n    pageTitle: string;\n\n    hubCache: HubCache;\n    purposeFilter: eConnectionPurpose;\n    eConnectionPurpose = eConnectionPurpose;\n    eConnectionPurposeItems = eConnectionPurposeItems;\n    public eSharedObjectType = eSharedObjectType;\n    connections: Array<DexihConnection>;\n\n    columns = [\n        { name: 'name', title: 'Name', format: 'Md', footer: 'description', tags: 'tags' },\n        { name: 'purpose', title: 'Purpose', format: '' },\n        { name: 'type', title: 'Type', format: '' },\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        // watch for any changes in the connections.\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.route.queryParams,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                let queryParams = result[2];\n                this.hubCache = result[3];\n\n                this.purposeFilter = + queryParams['purposeFilter'];\n                if (!this.purposeFilter) { this.purposeFilter = 0; }\n\n                this.pageTitle = eConnectionPurpose[this.purposeFilter] + ' Connections';\n                this.updateConnections();\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Connection Index');\n        }\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    deleteConnection(connection: DexihConnection) {\n        this.hubService.deleteConnections([connection]).catch(reason => {\n        });\n    }\n\n    deleteConnections(connections: Array<DexihConnection>) {\n        this.hubService.deleteConnections(connections);\n    }\n\n    editConnection(connection) {\n        this.router.navigate(['connection-edit', connection.key], { relativeTo: this.route });\n    }\n\n    async updateConnections() {\n        if (this.hubCache && this.hubCache.isLoaded()) {\n            let connections: Array<DexihConnection>;\n            if (this.purposeFilter === 0 || !this.purposeFilter) {\n                connections = this.hubCache.hub.dexihConnections;\n            } else {\n                connections = this.hubCache.hub.dexihConnections\n                    .filter(c => c.purpose === this.purposeFilter);\n            }\n\n            let tableData = []\n            for await (const connection of connections)  {\n                let connectionReference = await this.hubService.GetConnectionReference(connection);\n                tableData.push({\n                    key: connection.key,\n                    connectionAssemblyName: connection.connectionAssemblyName,\n                    connectionClassName: connection.connectionClassName,\n                    purpose: eConnectionPurpose[connection.purpose],\n                    type: connectionReference ? connectionReference.name : 'Unknown (' + connection.connectionClassName + ')',\n                    name: connection.name,\n                    tags: this.hubCache.getObjectTags(eSharedObjectType.Connection, connection.key),\n                    description: connection.description,\n                    updateDate: connection.updateDate\n                });\n            };\n            this._tableData.next(tableData);\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    export(connections: Array<DexihConnection>) {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        connections.forEach(connection => { this.hubCache.cacheAddConnection(connection.key, hub); });\n\n        let filename = connections.length === 1 ? 'Connection - ' + connections[0].name + '.json' : 'connections.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    watchChanges() {\n        // watch the current connection in case it is changed in another session.\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n            if (hubCacheChange.changeClass === eSharedObjectType.Connection\n                || hubCacheChange.changeClass === eSharedObjectType.TagObjects) {\n                this.updateConnections();\n            }\n        });\n    }\n}\n","<div class=\"container-fluid\">\n\t<dexih-widget title=\"Connections\" iconClass=\"fa fa-lg fa-fw fa-database\" [showCloseButton]=\"true\" (close)=\"close()\">\n\t\t<dexih-table \n\t\t\t[enableMultiSelect]=\"true\" \n\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t[columns]=\"columns\" \n\t\t\t[dataObservable]=\"tableData\" \n\t\t\t(rowClick)=\"editConnection($event)\" \t\t\t\n\t\t\t[tags]=\"this.hubCache.hub.dexihTags\"\n\t\t>\n\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t<actions-connection-button [connections]=\"items\"></actions-connection-button>\n\t\t\t</ng-template>\n\n\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t<tags-update-button class=\"ml-1\" [objectType]=\"eSharedObjectType.Connection\" [objects]=\"items\" ></tags-update-button>\n\t\t\t</ng-template>\n\n\t\t\t<ng-template #filter select=\"filter\" let-items=\"items\">\n\t\t\t\t<dexih-button-dropdown class=\"mr-1\" [autoCompact]=\"false\" buttonClass=\"btn-primary\" iconClass=\"fa fa-filter\" [text]=\"eConnectionPurpose[purposeFilter]\" title=\"Filter by a purpose\"\n\t\t\t\t[pullRight]=\"true\">\n\t\t\t\t   <a class=\"dropdown-item\" [class.active]=\"purposeFilter=='All'\" routerLink='.' [queryParams]=\"{purposeFilter: 'All'}\" title=\"All Connections\">All</a>\n\t\t\t\t   <a *ngFor=\"let purpose of eConnectionPurposeItems | gtFilter:'key':0\" [class.active]=\"purposeFilter==purpose.key\" class=\"dropdown-item\" routerLink='.'\n\t\t\t\t\t[queryParams]=\"{purposeFilter: purpose.key}\" [title]=\"purpose.name\">{{purpose.name}}</a>\n\t\t\t   </dexih-button-dropdown>\t\t\t</ng-template>\n\n\t\t</dexih-table>\n\n\t</dexih-widget>\n\n\t<dexih-help class=\"m-3\"  title=\"Connections\" path=\"/assets/help/reference/connection.md\"></dexih-help>\n\n</div>","export * from './connection-index.component';\n","export * from './connection-index/connection-index.component';\nexport * from './connection-edit/connection-edit.component';\nexport * from './connection-import/connection-import.component';\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { HubCache, SharedObject } from '../../hub.models';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { DexihApi, DexihHub } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'export',\n    templateUrl: './export.component.html',\n    styles: []\n})\nexport class ExportComponent implements OnInit, OnDestroy {\n    @Input() public hubKey: number;\n\n    private _subscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n\n    hubCache: HubCache;\n\n    columns = [\n        { name: 'name', title: 'Name', footer: 'description', format: 'Md', tags: 'tags' },\n        { name: 'label', title: 'Item Type'},\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    public data: Array<SharedObject>;\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                this.hubCache = result[0];\n\n                if (!this.hubCache.isLoaded()) { return; }\n\n\n                let data: SharedObject[] = this.hubCache.getSharedObjects();\n                this.data = data;\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'View Index');\n        }\n    }\n\n    exportAll() {\n        this.export(this.data);\n    }\n\n    export(items: Array<SharedObject>) {\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        items.forEach(item => {\n            this.hubCache.cacheAddObject(item.type, item.item, hub);\n        });\n\n        let filename = items.length === 1 ? `${items[0].label}-${items[0].type}.json` : `hub-${this.hubCache.hub.name}.json`;\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n}\n","<div class=\"container-fluid\">\n    <dexih-widget title=\"Export\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-feed\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\t>\n\t\t\t<dexih-table \n\t\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t\t[columns]=\"columns\"\n\t\t\t\t[data]=\"data\"\n\t\t\t\t[tags]=\"this.hubCache.hub.dexihTags\"\n\t\t\t\t>\n\t\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t\t\t<dexih-button-save-local class=\"mr-1\" text=\"Export Selected\" (click)=\"export(items)\"></dexih-button-save-local>\n\t\t\t\t\t\t</ng-template>\n\n\t\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-api=\"item\">\n\t\t\t\t\t</ng-template>\n\n\t\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t\t\t<dexih-button-save-local class=\"mr-1\" text=\"Export All\" (click)=\"exportAll()\"></dexih-button-save-local>\n\t\t\t\t\t</ng-template>\n\n\t\t\t</dexih-table>\n\n\t\t</dexih-widget>\n\t\t\n</div>\n\n\n","import { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubService } from '../../hub.service';\nimport { Observable, BehaviorSubject, Subscription} from 'rxjs';\nimport { importActions, HubCache, sharedObjectProperties } from '../../hub.models';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { Import, eImportAction, ImportAction, eSharedObjectType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'import',\n    templateUrl: './import.component.html',\n    providers: [HubFormsService]\n})\n\nexport class ImportComponent implements OnInit, OnDestroy {\n    @ViewChild('fileInput', { static: true }) fileInput: ElementRef;\n\n    private _hubCacheSubscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n\n    private hubCache: HubCache;\n\n    public automaticUpload = true;\n\n    pageTitle = 'Import Objects';\n    showPage = false;\n    showPageMessage = 'Loading...';\n    messageId: string;\n\n    importActions = importActions;\n\n    public import: Import;\n    public importOptions: ImportAction[];\n    eSharedObjectType = eSharedObjectType;\n\n    columns = [\n        { name: 'name', title: 'Name', format: 'Md', description: 'description' },\n        { name: 'objectType', title: 'Type', format: '' },\n        { name: 'importAction', title: 'Action', format: 'Enum', enum: eImportAction },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        public hubFormsService: HubFormsService\n    ) { }\n\n    ngOnInit() {\n        this.importOptions = sharedObjectProperties.map(c => <ImportAction> { action: eImportAction.Replace, objectType: c.type })\n\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheObservable().subscribe(hubCache => {\n            this.hubCache = hubCache;\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    public doImport(file: File) {\n\n        const form: FormData = new FormData();\n        form.append('file', file, file.name);\n        form.append('hubKey', this.hubCache.hub.hubKey.toString());\n\n        for (let i = 0; i < this.importOptions.length; i++) {\n            form.append(`ImportActions[${i}].Action`, this.importOptions[i].action.toString());\n            form.append(`ImportActions[${i}].ObjectType`, this.importOptions[i].objectType.toString());\n        }\n\n        this.authService.postForm('/api/Hub/ImportPlan', form).then(result => {\n            this.import = result;\n            this.refreshImport();\n        });\n    }\n\n    public uploadFile(event) {\n        let files = event.srcElement.files;\n        this.doImport(files[0]);\n        // this.fileInput.nativeElement.value = '';\n    }\n\n    public filesDrop(files: any) {\n        this.doImport(files[0]);\n    }\n\n    public refreshImport() {\n        let objects = [];\n\n        sharedObjectProperties.forEach(o => {\n            let items = this.import[o.property];\n\n            items.forEach(item => {\n                objects.push({\n                    objectType: o.property,\n                    name: item.item.name,\n                    importAction: item.importAction,\n                    item: item,\n                })\n            });\n        });\n\n        this._tableData.next(objects);\n    }\n\n    public reset() {\n        this._tableData.next(null);\n    }\n\n    public importSelected(items) {\n        let newImport = new Import();\n\n        items.forEach(item => {\n            if (!newImport[item.objectType]) {\n                newImport[item.objectType] = [];\n            }\n            newImport[item.objectType].push(item.item);\n        });\n\n        this.hubService.importPackage(newImport).then(() => {\n            this.authService.navigateUp();\n        });\n    }\n\n    public importAll() {\n        this.hubService.importPackage(this.import).then(() => {\n            this.authService.navigateUp();\n        });\n    }\n\n}\n","<div class=\"container\">\n    <dexih-widget *ngIf=\"!(tableData | async)?.length\" title=\"Import Objects\"  iconClass=\"fa fa-lg fa-fw fa-level-down\"  [showCloseButton]=\"true\"\n        (close)=\"close()\"     >\n        <ul class=\"list-group\">\n            <li class=\"list-group-item list-group-item-info rounded-0\">\n                <h5>Drop Export Files</h5>\n            </li>\n            <li class=\"list-group-item \">\n                <div class=\"well my-drop-zone\" dropZone [requireFiles]=\"true\" (dropFiles)=\"filesDrop($event)\" dropAllowedClass=\"nv-file-over\">\n                    <div class=\"form-row\">\n                        <section class=\"form-group col-md-6\">\n                            Drop import files\n                        </section>\n                        <section class=\"form-group col-md-6\">\n                            <div class=\"custom-file w-auto pull-right\">\n                                <input #fileInput type=\"file\" class=\"custom-file-input \" (change)=\"uploadFile($event)\">\n                                <label class=\"custom-file-label\" for=\"inputGroupFile01\">Choose file</label>\n                            </div>\n                        </section>\n                    </div>\n                </div>\n            </li>\n            <li class=\"list-group-item list-group-item-info\">\n                <h5>Import Options</h5>\n            </li>\n            <li class=\"list-group-item \">\n                    <fieldset>\n                        <div class=\"form-row\">\n                            <section *ngFor=\"let action of importOptions\" class=\"form-group col-md-6\">\n                                <form-select label=\"{{eSharedObjectType[action.objectType]}} Action\" [(ngModel)]=\"action.action\" [items]=\"importActions\" itemKey=\"key\" itemName=\"name\"\n                                    note='Action when importing {{eSharedObjectType[action.objectType]}}'>\n                                </form-select>\n                            </section>\n                        </div>\n                    </fieldset>\n            </li>\n        </ul>\n\n    </dexih-widget>\n\n    <dexih-widget *ngIf=\"(tableData | async)?.length > 0\" title=\"Import Package\" iconClass=\"fa fa-lg fa-fw fa-level-down\" [showCloseButton]=\"true\" (close)=\"reset()\">\n        <div *ngIf=\"import?.warnings?.length > 0\" class=\"alert alert-warning\" >\n            <ul *ngFor=\"let warning of import.warnings\" class=\"list-item\">\n                Warning: {{warning}}\n            </ul>\n        </div>\n\n        <dexih-table [enableMultiSelect]=\"true\" [columns]=\"columns\" [dataObservable]=\"tableData\">\n            <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n                <dexih-button iconClass=\"fa fa-upload\" buttonClass=\"btn-primary\" (click)=\"importSelected(items)\" text=\"Import Selected\" class=\"ml-1\"></dexih-button>\n            </ng-template>\n            \n            <ng-template #actions let-items=\"items\">\n                    <dexih-button iconClass=\"fa fa-cloud-upload\" buttonClass=\"btn-primary\" (click)=\"importAll()\" text=\"Import All\"></dexih-button>\n                    <dexih-button-close class=\"ml-1\" (click)=\"reset()\"></dexih-button-close>\n                </ng-template>\n            </dexih-table>\n\n    </dexih-widget>\n\n</div>","export { ImportComponent } from './import/import.component';\nexport { ExportComponent } from './export/export.component';\n","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { HubCache, eCacheStatus} from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Observable ,  Subscription, combineLatest} from 'rxjs';\nimport { Location } from '@angular/common';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { TypeCodes, functionTypes } from '../../hub.remote.models';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { Message, CancelToken } from '../../../+auth/auth.models';\nimport { eParameterDirection, eFunctionType, DexihCustomFunction, eTypeCode,\n  DexihCustomFunctionParameter, DexihDatalinkTransformItem, eTransformItemType, DexihFunctionParameter } from '../../../shared/shared.models';\n\n@Component({\n\n  selector: 'dexih-customFunction-edit-form',\n  templateUrl: './customFunction-edit.component.html',\n  providers: [HubFormsService]\n})\nexport class CustomFunctionEditComponent implements OnInit, OnDestroy {\n\n  private customFunctionKey: number;\n\n  private hubCache: HubCache;\n  public action: string; // new or edit\n  public pageTitle: string;\n  public params: Params;\n\n  typeCodes = TypeCodes;\n  eParameterDirection = eParameterDirection;\n\n  outputParameters = [];\n  inputParameters = [];\n\n  outputParameterValues = [];\n  inputParameterValues = [];\n  returnParameterValue;\n\n  functionType: eFunctionType;\n  functionTypes = functionTypes;\n  eFunctionType = eFunctionType;\n\n  syntaxMessage: Message;\n\n  public testValue: string;\n  public testResult: any;\n\n  public lookupColumnValue = '';\n  private isLoaded = false;\n\n  public cancelToken: CancelToken = new CancelToken();\n\n  private _subscription: Subscription;\n  private _formChangeSubscription: Subscription;\n  private _functionTypeSubscription: Subscription;\n  private _hubCacheChangeSubscription: Subscription;\n\n  constructor(private hubService: HubService,\n    private authService: AuthService,\n    public formsService: HubFormsService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n      ).subscribe(result => {\n        let data = result[0];\n        this.params = result[1];\n        this.hubCache = result[2];\n\n        this.action = data['action'];\n        this.pageTitle = data['pageTitle'];\n\n        if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded ) { return; }\n\n        if (this.isLoaded && this.action === 'new') { return; }\n\n        if (this.isLoaded && this.formsService.hasChanged) {\n            this.authService.confirmDialog('Synchronization warning',\n            'The hub was disconnected, meaning this edit could have been changed by another session.  Would you like to discard the current changes, and reload the latest version?')\n            .then(confirm => {\n                if (confirm) {\n                    this.load();\n                }\n            }).catch(reason => {\n                return;\n            });\n        } else {\n            this.load();\n        }\n\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Column Validation');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._formChangeSubscription) { this._formChangeSubscription.unsubscribe(); }\n    if (this._functionTypeSubscription) { this._functionTypeSubscription.unsubscribe(); }\n    this.cancelToken.cancel();\n  }\n\n  private load() {\n    this.isLoaded = true;\n\n    if (this.action === 'edit') {\n      // get the hub key from the route data, and update the service.\n      this.customFunctionKey = + this.params['customFunctionKey'];\n\n      if (!this.customFunctionKey) {\n        this.hubService.addHubErrorMessage('There was no custom function specified to edit.');\n        // this.errorMessage = 'There was no validation specified to edit.';\n      } else {\n        if (!this.hubCache.hub || !this.hubCache.hub.dexihCustomFunctions) {\n          this.hubService.addHubErrorMessage('The hub cache is not loaded.');\n        } else {\n          let customFunction = this.hubCache.hub.dexihCustomFunctions.find(c => c.key === this.customFunctionKey);\n          this.formsService.customFunction(customFunction);\n          this.functionType = this.formsService.currentForm.controls.functionType.value;\n        }\n      }\n    }\n\n    if (this.action === 'new') {\n      let customFunction = new DexihCustomFunction();\n      customFunction.key = this.hubCache.getNextSequence();\n      this.formsService.customFunction(customFunction);\n\n      // update the url with the saved key\n      this._formChangeSubscription = this.formsService.getCurrentFormObservable().subscribe(form => {\n        let key = form.controls.key.value;\n        if (key >= 0) {\n          if (history.pushState) {\n            let newUrl = window.location.pathname.replace('/customFunction-new', `/customFunction-edit/${key}`)\n            this.router.navigateByUrl(newUrl);\n            this._formChangeSubscription.unsubscribe();\n          }\n        }\n      });\n\n      this.functionType = this.formsService.currentForm.controls.functionType.value;\n    }\n\n    this._functionTypeSubscription = this.formsService.currentForm.controls.functionType.valueChanges.subscribe(functionType => {\n      this.functionType = functionType;\n      if (this.functionType === eFunctionType.Condition\n        || this.functionType === eFunctionType.JoinCondition || this.functionType === eFunctionType.Validate) {\n        this.formsService.currentForm.controls.returnType.setValue(eTypeCode.Boolean);\n        this.updateParameters();\n      }\n    });\n\n    this.updateParameters();\n  }\n\n  canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      if (this.formsService.currentForm && !this.formsService.currentForm.pristine) {\n        this.authService.confirmDialog('Function has changed',\n        'The function has changed.  Would you like to discard the changes and return to the previous screen?'\n        ).then(confirm => {\n          resolve(confirm);\n        }).catch(reason => {\n          resolve(false);\n        });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  parametersArray(): FormArray {\n    return <FormArray> this.formsService.currentForm.controls.dexihCustomFunctionParameters;\n  }\n\n  private updateParameters() {\n    let parameters = this.parametersArray();\n    this.inputParameters = parameters.controls.sort((a, b) => a.value.position - b.value.position)\n      .filter(c => c.value.direction === eParameterDirection.Input);\n\n  this.outputParameters = parameters.controls.sort((a, b) => a.value.position - b.value.position)\n    .filter(c => c.value.direction === eParameterDirection.Output);\n\n    this.inputParameterValues.length = this.inputParameters.length;\n    this.outputParameterValues.length = this.outputParameters.length;\n  }\n\n  addParameter(parameter: FormGroup, direction: eParameterDirection) {\n    try {\n      let newParameter = new DexihCustomFunctionParameter();\n      if (parameter) {\n        let oldParameter = parameter.value;\n        newParameter.dataType = oldParameter.dataType;\n        newParameter.name = oldParameter.name;\n        newParameter.position = oldParameter.position + 1;\n      }\n\n      newParameter.key = this.hubCache.getNextSequence();\n      newParameter.name = '';\n      newParameter.direction = direction;\n      newParameter.rank = 0;\n      newParameter.isValid = true;\n\n      let parameters = this.parametersArray();\n      let newParameterForm = this.formsService.customFunctionParametersFormGroup(newParameter);\n      parameters.push(newParameterForm);\n\n      // reset the positions\n      parameters.controls.sort((a, b) => a.value.position - b.value.position).forEach((p, index) => {\n        (<FormGroup>p).controls.position.setValue(index * 10);\n      });\n\n      this.updateParameters();\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Edit Custom Function, add parameter');\n    }\n\n  }\n\n  addParameterValue(index: number, valueIndex: number) {\n    if (Array.isArray(this.inputParameterValues[index])) {\n      this.inputParameterValues[index].splice(valueIndex + 1, 0, '');\n    } else {\n      this.inputParameterValues[index] = new Array(1);\n    }\n  }\n\n  removeParameterValue(index: number, valueIndex: number) {\n    this.inputParameterValues[index].splice(valueIndex, 1);\n  }\n\n  removeParameter(parameter: FormGroup) {\n    try {\n      let inputParameters = this.parametersArray();\n      let index: number = inputParameters.controls.indexOf(parameter);\n      if (index > -1) {\n        inputParameters.removeAt(index);\n      }\n\n      this.updateParameters();\n\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Edit Custom Function, remove parameter');\n    }\n  }\n\n  downloadCode(parameters = null) {\n    let tmpTransform = this.createDataTransformItem();\n\n    this.hubService.downloadCustomFunction(tmpTransform, parameters);\n  }\n\n  test(parameters = null) {\n    let tmpTransform = this.createDataTransformItem();\n\n    this.hubService.testCustomFunction(tmpTransform, parameters, this.cancelToken).then(result => {\n      this.syntaxMessage = new Message(true, 'The function has successfully compiled.', null, null);\n\n      if (result && result.length > 0) {\n        result.forEach((value, index) => {\n          if (index === 0) {\n            this.returnParameterValue = value;\n          } else {\n            this.outputParameterValues[index - 1] = value;\n          }\n        });\n      } else {\n        this.returnParameterValue = null;\n        this.outputParameterValues.forEach(c => c = null );\n     }\n    }).catch(reason => {\n      let converted = reason;\n      if (reason.stack) {\n          converted = new Message(false, 'Client Error: ' + reason.message, reason.stack, '');\n      }\n      this.syntaxMessage = converted;\n      this.returnParameterValue = null;\n      this.outputParameterValues.forEach(c => c = null );\n    });\n  }\n\n  createDataTransformItem(): DexihDatalinkTransformItem {\n    let selectedCustomFunction: DexihCustomFunction = this.formsService.currentForm.value;\n\n    let item = new DexihDatalinkTransformItem();\n    item.functionCode = selectedCustomFunction.methodCode;\n    item.functionResultCode = selectedCustomFunction.resultCode;\n    item.transformItemType = eTransformItemType.CustomFunction;\n\n    let parameters: DexihFunctionParameter[] = [];\n\n      selectedCustomFunction.dexihCustomFunctionParameters.sort((a, b) => a.position - b.position)\n        .forEach((param: DexihCustomFunctionParameter, index: number) => {\n        if (param) {\n          let newParameter = new DexihFunctionParameter();\n          newParameter.key = 0;\n          newParameter.datalinkTransformItemKey = 0;\n          newParameter.name = param.name;\n          newParameter.rank = param.rank;\n          newParameter.direction = param.direction;\n          newParameter.dataType = param.dataType;\n          newParameter.position = index;\n          newParameter.isValid = true;\n\n          parameters.push(newParameter);\n        }\n      });\n\n      let returnParam = new DexihFunctionParameter();\n      returnParam.key = 0;\n      returnParam.datalinkTransformItemKey = 0;\n      returnParam.name = 'Return';\n      returnParam.rank = 0;\n      returnParam.direction = eParameterDirection.ReturnValue;\n      returnParam.dataType = selectedCustomFunction.returnType;\n      returnParam.position = 0;\n      returnParam.isValid = true;\n      parameters.push(returnParam);\n\n      // item.returnType = selectedCustomFunction.returnType;\n      item.dexihFunctionParameters = parameters;\n\n      return item;\n\n  }\n\n  close() {\n    this.authService.navigateUp();\n  }\n\n}\n","<div class=\"container\">\n\t<dexih-widget-vertical>\n\t<dexih-widget \n\t\ttitle=\"Edit Function\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-code\" \n\t\t[showCloseButton]=\"true\"\n\t\t[padding]=\"true\"\n\t\t(close)=\"close()\"\n\t>\n\t\t<ng-template #header>\n\t\t\t<dexih-invalid-form-details [control]=\"formsService.currentForm\" (click)=\"formsService.showErrors()\" class=\"mr-1\"></dexih-invalid-form-details>\n\t\t\t<save-button *ngIf=\"hubCache.canWrite\" [formsService]=\"formsService\" class=\"mr-1\"></save-button>\n\t\t\t<cancel-button [formsService]=\"formsService\"></cancel-button>\n\t\t</ng-template>\n\n\t\t<form *ngIf=\"formsService.currentForm\"  [formGroup]=\"formsService.currentForm\">\n\t\t\t<fieldset>\n\t\t\t\t<section *ngIf=\"testResult\">\n\t\t\t\t\t<div class=\"alert \" [class.alert-danger]=\"testResult.success == false\" [class.alert-success]=\"testResult.success == true\">\n\t\t\t\t\t\tTest Result = {{testResult.success}}\n\t\t\t\t\t\t<div *ngIf=\"testResult.cleanedValue\">Cleaned Value = {{testResult.cleanedValue}} </div>\n\t\t\t\t\t\t<div *ngIf=\"testResult.rejectReason\">Reject Reason = {{testResult.rejectReason}} </div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-select label=\"Function Type\" formControlName=\"functionType\" [items]=\"functionTypes\" itemKey=\"key\" itemName=\"name\" iconClass=\"fa fa-question\">\n\t\t\t\t\t</form-select>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-input label=\"Custom Function Name\" formControlName=\"name\" placeholder=\"Enter the name.\" iconClass=\"fa fa-list\" [autocapitalize]=\"true\" [errors]=\"formsService.formErrors['name']\">\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-textarea label=\"Description\" [showMarkdown]=\"true\" formControlName=\"description\" placeholder=\"Enter the description.\">\n\t\t\t\t\t</form-textarea>\n\t\t\t\t</section>\n\n\t\t\t\t<ng-template [ngIf]=\"functionType\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div class=\"label mb-1\">\n\t\t\t\t\t\t\tInput Parameters\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div *ngIf=\"inputParameters.length === 0\" class=\"mb-1\">\n\t\t\t\t\t\t\t<dexih-button\n\t\t\t\t\t\t\t\t(click)=\"addParameter(null, eParameterDirection.Input)\"\n\t\t\t\t\t\t\t\ticonClass=\"fa fa-plus-square-o\"\n\t\t\t\t\t\t\t\ttitle=\"Click to add a parameter\" >Add Parameter\n\t\t\t\t\t\t\t</dexih-button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div *ngFor=\"let parameter of inputParameters; let i = index\" [ngStyle]=\"{'z-index': 200-i, 'position': 'relative'}\">\n\t\t\t\t\t\t\t<customFunction-parameter [customFunctionParameterForm]=\"parameter\" (addParameter)=\"addParameter($event, eParameterDirection.Input)\"\n\t\t\t\t\t\t\t (removeParameter)=\"removeParameter($event)\"></customFunction-parameter>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngIf=\"functionType != eFunctionType.Condition\">\n\t\t\t\t\t\t<div class=\"label mb-1\">\n\t\t\t\t\t\t\tOutput Parameters\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div [ngStyle]=\"{'z-index': 101, 'position': 'relative'}\">\n\t\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t\t<div class=\"input-group mb-1\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<input class=\"form-control\" readonly value=\"Return Data Type\" />\n\t\t\t\t\t\t\t\t\t<form-select [border]=\"false\" class=\"form-control p-0\"  formControlName=\"returnType\" [items]=\"typeCodes\" itemKey=\"key\" itemName=\"name\">\n\t\t\t\t\t\t\t\t\t\t</form-select>\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</section>\n\n\t\t\t\t\t\t\t<div *ngIf=\"outputParameters.length === 0\">\n\t\t\t\t\t\t\t\t\t<dexih-button\n\t\t\t\t\t\t\t\t\t(click)=\"addParameter(null, eParameterDirection.Output)\"\n\t\t\t\t\t\t\t\t\ticonClass=\"fa fa-plus-square-o\"\n\t\t\t\t\t\t\t\t\ttitle=\"Click to add a parameter\" >Add Parameter</dexih-button>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div *ngFor=\"let parameter of outputParameters; let i = index\" [ngStyle]=\"{'z-index': 100-i, 'position': 'relative'}\">\n\t\t\t\t\t\t\t\t<customFunction-parameter [customFunctionParameterForm]=\"parameter\" (addParameter)=\"addParameter($event, eParameterDirection.Output)\"\n\t\t\t\t\t\t\t\t (removeParameter)=\"removeParameter($event)\"></customFunction-parameter>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<br>\n\t\t\t\t\t</div>\n\t\t\t\t\tFunction Code\n\t\t\t\t\t<textarea class='form-control' rows=\"20\" width=\"100%\" spellcheck=\"false\" formControlName=\"methodCode\"></textarea>\n\t\t\t</ng-template>\n\t\t\t</fieldset>\n\t\t</form>\n\t\t</dexih-widget>\n\t\t<dexih-widget title=\"Test Function\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-code\" [padding]=\"true\" >\n\n\t\t<ng-template #header>\n\t\t\t<dexih-button class=\"mr-1\" buttonClass=\"btn btn-success\" (click)=\"test()\">Syntax Check</dexih-button>\n\t\t\t<dexih-button class=\"mr-1\" buttonClass=\"btn btn-success\" (click)=\"test(inputParameterValues)\">Run</dexih-button>\n\t\t\t<dexih-button-save-local (click)=\"downloadCode(inputParameterValues)\" text=\"Sample Code\"></dexih-button-save-local>\n\t\t</ng-template>\n\n\t\t<dexih-message [message]=\"syntaxMessage\"></dexih-message>\n\n\t\t<form>\n\t\t\t<fieldset>\n\t\t\t\t<div>\n\t\t\t\t\t<div class=\"label\" *ngIf=\"inputParameters.length > 0\">\n\t\t\t\t\t\tInput Parameters\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngFor=\"let inputParameter of inputParameters; let i = index\" [ngStyle]=\"{'z-index': 200-i, 'position': 'relative'}\">\n\t\t\t\t\t\t<div *ngIf=\"inputParameter.controls.rank.value > 0; else showValue\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<dexih-button\n\t\t\t\t\t\t\t\t\t(click)=\"addParameterValue(i)\"\n\t\t\t\t\t\t\t\t\ticonClass=\"fa fa-plus-square-o\"\n\t\t\t\t\t\t\t\t\ttitle=\"Click to add a parameter\" >\n\t\t\t\t\t\t\t\t\tAdd {{inputParameter.controls.name.value}} value\n\t\t\t\t\t\t\t\t</dexih-button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div *ngFor=\"let value of inputParameterValues[i]; let j = index\">\n\n\t\t\t\t\t\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-control\">\n\t\t\t\t\t\t\t\t\t\t\t{{inputParameter.controls.name.value + '[' + j + ']'}}\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t<form-input [border]=\"false\" class=\"form-control p-0\" [(ngModel)]=\"inputParameterValues[i][j]\" [name]=\"'inputParameterValues-' + i + '-' + j\" type=\"text\" placeholder=\"Enter a test value for the parameter\"></form-input>\n\n\t\t\t\t\t\t\t\t\t\t<div class=\"input-group-text p-0\">\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" (click)=\"addParameterValue(i, j)\" class=\"btn btn-sm border-0 bg-transparent\" value=\"Add\">\n\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-plus-square-o\"></i>\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"input-group-text p-0\">\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" (click)=\"removeParameterValue(i, j)\" class=\"btn btn-sm border-0 bg-transparent\" value=\"Remove\">\n\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-minus-square-o\"></i>\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<ng-template #showValue>\n\t\t\t\t\t\t\t<form-input [label]=\"inputParameter.controls.name.value\" [(ngModel)]=\"inputParameterValues[i]\" [name]=\"'inputParameterValues' + i\"\n\t\t\t\t\t\t\t type=\"text\" placeholder=\"Enter a test value for the parameter\"></form-input>\n\t\t\t\t\t\t</ng-template>\n\t\t\t\t\t</div>\n\t\t\t\t\t<form-input label=\"Return Value\" [disabled]=\"true\" [(ngModel)]=\"returnParameterValue\" name=\"returnParameterValue\" type=\"text\"></form-input>\n\t\t\t\t\t<div class=\"label\" *ngIf=\"outputParameters.length > 0\">\n\t\t\t\t\t\tOutputs Parameters\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngFor=\"let outputParameter of outputParameters; let i = index\" [ngStyle]=\"{'z-index': 200-i, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-input [disabled]=\"true\" [label]=\"outputParameter.controls.name.value\" [(ngModel)]=\"outputParameterValues[i]\"\n\t\t\t\t\t\t [name]=\"'outputParameterValues' + i\" type=\"text\"></form-input>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t</form>\n\t</dexih-widget>\n\n\t<dexih-help class=\"m-3\" title=\"Custom Functions\" path=\"/assets/help/reference/function.md\"></dexih-help>\n\n</dexih-widget-vertical>\n</div>","import { Component, Input, Output, ViewChild, OnInit, OnDestroy, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { TypeFunctions, TypeCodes, eBasicType } from '../../hub.remote.models';\n\n@Component({\n\n    selector: 'customFunction-parameter',\n    templateUrl: './customFunction-parameter.component.html'\n})\nexport class CustomFunctionParameterComponent implements OnInit, OnDestroy {\n\n    @Input() public customFunctionParameterForm: FormGroup = null;\n\n    @Output() public addParameter: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n    @Output() public removeParameter: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n\n\n    private type: TypeFunctions;\n    eBasicType = eBasicType;\n    typeCodes = TypeCodes;\n\n    public staticValue: string;\n\n    ignoreChanges = false;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnDestroy() {\n    }\n\n    add() {\n        this.addParameter.emit(this.customFunctionParameterForm);\n    }\n\n    remove() {\n        this.removeParameter.emit(this.customFunctionParameterForm);\n    }\n\n}\n","<form [formGroup]=\"customFunctionParameterForm\" class=\"mb-1\">\n        <div class=\"input-group\">\n            <input type=\"text\" class=\"form-control\" formControlName=\"name\" placeholder=\"Enter a name for the parameter\">\n\n            <!-- <form-input [border]=\"false\" class=\"form-control p-0\" formControlName=\"name\" type=\"text\" placeholder=\"Enter a name for the parameter\"></form-input> -->\n\n            <form-select [border]=\"false\" class=\"form-control p-0\" formControlName=\"dataType\" [items]=\"typeCodes\" itemKey=\"key\" itemName=\"name\">\n            </form-select>\n\n            <div class=\"input-group-append\">\n                <div class=\"input-group-text p-0\">\n                    <span class=\"p-1\">Array Dimensions (0-non array)</span>\n                    <input class=\" mx-1\" type=\"number\" formControlName=\"rank\">\n                </div>\n                <div class=\"input-group-text p-0\">\n                    <button type=\"button\" (click)=\"add()\" class=\"btn btn-sm border-0 bg-transparent\" value=\"Add\">\n                        <i class=\"fa fa-plus-square-o\"></i>\n                    </button>\n                </div>\n                <div class=\"input-group-text p-0\">\n                    <button type=\"button\" (click)=\"remove()\" class=\"btn btn-sm border-0 bg-transparent\" value=\"Remove\">\n                        <i class=\"fa fa-minus-square-o\"></i>\n                    </button>\n                </div>\n            </div>\n        </div>\n</form>","export {CustomFunctionEditComponent} from './customFunction-edit.component';\nexport {CustomFunctionParameterComponent} from './customFunction-parameter.component';\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { HubCache } from '../../hub.models';\nimport { DexihCustomFunction, DexihHub, eSharedObjectType } from '../../../shared/shared.models';\n\n@Component({\n  selector: 'customFunction',\n  templateUrl: './customFunction-index.component.html',\n  styles: []\n})\nexport class CustomFunctionIndexComponent implements OnInit, OnDestroy {\n    @Input() public hubKey: number;\n\n  private _subscription: Subscription;\n  private _hubCacheChangeSubscription: Subscription;\n\n    hubCache: HubCache;\n\n    customFunctions: Array<DexihCustomFunction>;\n    public eSharedObjectType = eSharedObjectType;\n\n    columns = [\n        { name: 'name', title: 'Name', footer: 'description', format: 'Md', tags: 'tags'},\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar'},\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        // watch for any changes in the validations.\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                this.hubCache = result[0];\n                this.updateCustomFunctions();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Column Validation Index');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    deleteCustomFunctions(functions: Array<DexihCustomFunction>) {\n        this.hubService.deleteCustomFunctions(functions);\n    }\n\n    updateCustomFunctions() {\n        if (this.hubCache && this.hubCache.isLoaded()) {\n            let functions = this.hubCache.hub.dexihCustomFunctions.filter(c => c.isValid)\n                .map(c => {\n                    return {\n                        key: c.key,\n                        name: c.name,\n                        description: c.description,\n                        updateDate: c.updateDate,\n                        tags: this.hubCache.getObjectTags(eSharedObjectType.CustomFunction, c.key)\n                    }\n                });\n            this._tableData.next(functions);\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    edit(customFunction: DexihCustomFunction) {\n        this.router.navigate(['customFunction-edit', customFunction.key], { relativeTo: this.route});\n    }\n\n    export(items: Array<DexihCustomFunction>) {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        items.forEach(item => { this.hubCache.cacheAddCustomFunction(item.key, hub); });\n\n        let filename = items.length === 1 ? 'CustomFunction - ' + items[0].name + '.json' : 'customFunctions.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    watchChanges() {\n      // watch the current validation in case it is changed in another session.\n      this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n          if (hubCacheChange.changeClass === eSharedObjectType.CustomFunction ||\n            hubCacheChange.changeClass === eSharedObjectType.TagObjects) {\n            this.updateCustomFunctions();\n          }\n      });\n  }\n}\n","<div class=\"container-fluid\">\n    <dexih-widget title=\"Custom Functions\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-code\" \n\t\t[showCloseButton]=\"true\"\n\t\t[padding]=\"false\"\n\t\t(close)=\"close()\"\n\t>\n\t\t<dexih-table \n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[dataObservable]=\"tableData\"\n\t\t\t(rowClick)=\"edit($event)\"\n\t\t\t[tags]=\"this.hubCache.hub.dexihTags\"\n\t\t\t>\n\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t<dexih-button-save-local class=\"mr-1\" (click)=\"export(items)\"></dexih-button-save-local>\n\t\t\t\t\t<dexih-button-delete class=\"mr-1\" *ngIf=\"hubCache.canWrite\" (click)=\"deleteCustomFunctions(items)\"></dexih-button-delete>\n\t\t\t\t\t<tags-update-button class=\"ml-1\" [objectType]=\"eSharedObjectType.CustomFunction\" [objects]=\"items\" ></tags-update-button>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<dexih-button-new *ngIf=\"hubCache.canWrite\" class=\"mr-1\" [routerLink]=\"['customFunction-new']\"></dexih-button-new>\n\t\t\t\t</ng-template>\n\t\t</dexih-table>\n\n\t</dexih-widget>\n\t\n\t<dexih-help class=\"m-3\" title=\"Custom Functions\" path=\"/assets/help/reference/function.md\"></dexih-help>\n\n</div>\n\n\n","export * from './customFunction-index/customFunction-index.component';\nexport {CustomFunctionEditComponent, CustomFunctionParameterComponent} from './customFunction-edit';\n","import { Component, OnInit, OnDestroy, HostListener, QueryList, ViewChildren } from '@angular/core';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\nimport { HubService } from '../../hub.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { FormArray, FormGroup } from '@angular/forms';\nimport { DashboardItemComponent } from './item/dashboard-item.component';\nimport { EventEmitter } from 'selenium-webdriver';\nimport { CancelToken } from '../../../+auth/auth.models';\nimport { HubCache, eCacheStatus, DataCache, PreviewResults } from '../../hub.models';\nimport { DexihView, DexihDashboard, DexihDashboardItem, DexihActiveAgent, DownloadObject, eDataObjectType } from '../../../shared/shared.models';\n\n@Component({\n  selector: 'dexih-dashboard-edit-form',\n  templateUrl: './dashboard-edit.component.html',\n  providers: [HubFormsService]\n})\nexport class DashboardEditComponent implements OnInit, OnDestroy {\n  @ViewChildren('dashboardItem') dashboardItems: QueryList<DashboardItemComponent>;\n\n  public dashboardKey: number;\n\n  private hubCache: HubCache;\n  public action: string; // new or edit\n  public pageTitle: string;\n  public params: Params;\n  public remoteAgent: DexihActiveAgent;\n\n  private _subscription: Subscription;\n  private _formChangeSubscription: Subscription;\n  private isLoaded = false;\n\n  public isRefreshing = false;\n  private refreshComplete = false;\n  private cancelToken = new CancelToken();\n\n  views: DexihView[];\n\n  constructor(\n    private hubService: HubService,\n    private authService: AuthService,\n    public formsService: HubFormsService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n        this.hubService.getRemoteAgentObservable()\n      ).subscribe(result => {\n        let data = result[0];\n        this.params = result[1];\n        this.hubCache = result[2];\n        this.remoteAgent = result[3];\n\n        this.action = data['action'];\n        this.pageTitle = data['pageTitle'];\n\n        if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded ) { return; }\n\n        if (this.isLoaded && this.action === 'new') { return; }\n\n        this.views = this.hubCache.hub.dexihViews;\n\n        if (this.isLoaded && this.formsService.hasChanged) {\n            this.authService.confirmDialog('Synchronization warning',\n            'The hub was disconnected, meaning this edit could have been changed by another session.  Would you like to discard the current changes, and reload the latest version?')\n            .then(confirm => {\n                if (confirm) {\n                    this.load();\n                }\n            }).catch(reason => {\n                return;\n            });\n        } else {\n            this.load();\n        }\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Dashboard Edit');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._formChangeSubscription) { this._formChangeSubscription.unsubscribe(); }\n    this.cancelToken.cancel();\n  }\n\n  close() {\n    this.authService.navigateUp();\n  }\n\n  load() {\n    this.isLoaded = true;\n\n\n    if (this.action === 'edit') {\n      // get the hub key from the route data, and update the service.\n      this.dashboardKey = +this.params['dashboardKey'];\n\n      if (!this.dashboardKey) {\n        this.hubService.addHubErrorMessage('There was no dashboard specified to edit.');\n      } else {\n        if (!this.hubCache.hub || !this.hubCache.hub.dexihColumnValidations) {\n          this.hubService.addHubErrorMessage('The hub cache is not loaded.');\n        } else {\n          let dashboard = this.hubCache.hub.dexihDashboards.find(c => c.key === this.dashboardKey);\n\n          // create a copy of the dashboard to avoid changes to the hub cache.\n          dashboard = JSON.parse(JSON.stringify(dashboard));\n          this.formsService.dashboard(dashboard);\n        }\n      }\n    }\n\n    if (this.action === 'new') {\n      this.refreshComplete = true;\n      let dashboard = new DexihDashboard();\n      dashboard.minCols = 4;\n      dashboard.maxCols = 100;\n      dashboard.minRows = 4;\n      dashboard.maxRows = 100;\n      dashboard.autoRefresh = true;\n\n      this.formsService.dashboard(dashboard);\n      let runTime = this.formsService.currentForm.controls.runTime.value;\n      runTime.showEdit = true;\n      // this.formsService.currentForm.controls.runTime.setValue(runTime);\n      // this.add();\n\n      // update the url with the saved key\n      this._formChangeSubscription = this.formsService.getCurrentFormObservable().subscribe(form => {\n        let key = form.controls.key.value;\n        if (key) {\n          if (history.pushState) {\n            let newUrl = window.location.pathname.replace('/dashboard-new', `/dashboard-edit/${key}`)\n            this.router.navigateByUrl(newUrl);\n            this._formChangeSubscription.unsubscribe();\n          }\n        }\n      });\n    }\n\n    if (this.formsService.currentForm.controls.autoRefresh.value && this.remoteAgent && !this.refreshComplete) {\n      this.refreshComplete = true;\n      this.refresh();\n    }\n  }\n\n  // add() {\n  //   let form = this.formsService.currentForm;\n  //   let items = <FormArray> form.controls.dexihDashboardItems;\n  //   let item = new DexihDashboardItem();\n  //   item.cols = 1;\n  //   item.rows = 1;\n  //   item.x = 0;\n  //   item.y = 0;\n  //   let control = this.formsService.dashboardItem(item);\n  //   items.push(control);\n  // }\n\n  refresh() {\n    this.hubService.previewDashboard(this.formsService.currentForm.value,\n      this.formsService.currentForm.value.parameters, this.cancelToken).then(keys => {\n      let items = <FormArray> this.formsService.currentForm.controls.dexihDashboardItems;\n\n      keys.forEach(url => {\n        let item = <FormGroup> items.controls.find((form: FormGroup) => form.controls.key.value === url.dashboardItemKey);\n        if (item) {\n          let data = <DataCache> item.controls.runTime.value.data;\n          data.isRefreshing = true;\n          this.hubService.getRemoteResponse<PreviewResults>(url.dataKey, this.cancelToken).then(result => {\n            result.columns = this.authService.constructDataTableColumns(result.columns);\n            data.data.next(result);\n            data.isRefreshing = false;\n          }).catch();\n        }\n      });\n    });\n  }\n\n  public toggleEdit() {\n    let runTime = this.formsService.currentForm.controls.runTime.value;\n    runTime.showEdit = !runTime.showEdit;\n    this.formsService.currentForm.controls.runTime.setValue(runTime);\n  }\n\n  public toggleLock() {\n    let runTime = this.formsService.currentForm.controls.runTime.value;\n    runTime.lock = !runTime.lock;\n    this.formsService.currentForm.controls.runTime.setValue(runTime);\n  }\n\n  add(viewKey) {\n    let view = this.hubCache.hub.dexihViews.find(c => c.key === viewKey);\n    if (!view) { return; }\n    let form = this.formsService.currentForm;\n    let items = <FormArray> form.controls.dexihDashboardItems;\n    let item = new DexihDashboardItem();\n    item.key = this.hubCache.getNextSequence();\n\n    item.cols = 1;\n    item.rows = 1;\n    item.x = -1;\n    item.y = -1;\n\n    // look for an empty cell\n    found:\n    for (let row = 0; row < form.controls.maxRows.value; row++) {\n      for (let col = 0; col < form.controls.maxCols.value; col++) {\n        let occupied = false;\n        for (let i = 0; i < items.controls.length; i++) {\n          let currentItem = <DexihDashboardItem> items.controls[i].value;\n          if (currentItem.x <= col && (currentItem.x + currentItem.cols) > col &&\n            currentItem.y <= row && (currentItem.y + currentItem.rows) > row) {\n              occupied = true;\n              break;\n          }\n        }\n\n        if (!occupied) {\n          item.x = col;\n          item.y = row;\n\n          break found;\n        }\n      }\n    }\n    item.viewKey = viewKey;\n    item.name = view.name;\n    let formGroup = this.formsService.dashboardItem(item);\n    this.formsService.updateDashboardItemView(formGroup);\n    items.push(formGroup);\n  }\n\n  public newView() {\n    this.router.navigate(['view-new'], { relativeTo: this.route } )\n  }\n\n  download(format) {\n    let items = <DexihDashboardItem[]> this.formsService.currentForm.controls.dexihDashboardItems.value;\n\n    let downloadObjects = items.filter(c => c.viewKey).map(item => {\n      let view = this.hubCache.hub.dexihViews.find(c => c.key === item.viewKey);\n\n      let downloadObject = new DownloadObject();\n      if (view.sourceType === eDataObjectType.Datalink) {\n        downloadObject.objectKey = view.sourceDatalinkKey;\n        downloadObject.objectType = eDataObjectType.Datalink;\n      }\n      if (view.sourceType === eDataObjectType.Table) {\n        downloadObject.objectKey = view.sourceTableKey;\n        downloadObject.objectType = eDataObjectType.Table;\n      }\n      downloadObject.query = view.selectQuery;\n\n      return downloadObject;\n    })\n\n    this.hubService.downloadData(downloadObjects, false, format, this.cancelToken)\n  }\n\n  public canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>((resolve) => {\n      if (this.formsService.hasChanged) {\n        this.authService.confirmDialog('The dashboard has not been saved',\n          'The dashboard changes have not been saved.  Do you want to discard the changes and exit?')\n          .then((confirm) => {\n              resolve(confirm);\n            }).catch(() => {\n              resolve(false);\n            });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  // @HostListener allows is to guard against browser refresh, close, etc.\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.formsService.hasChanged) {\n      $event.returnValue = 'The dashboard changes have not been saved.  Do you want to discard the changes and exit?';\n    }\n  }\n}\n","<div class=\"container-fluid\" >\n\t<dexih-widget title=\"Dashboard - {{formsService?.currentForm?.controls.name.value}}\" iconClass=\"fa fa-lg fa-fw fa-pie-chart\" [showCloseButton]=\"true\" [padding]=\"false\"\n\t (close)=\"close()\">\n\t\t<ng-template #header>\n\t\t\t<dexih-invalid-form-details [control]=\"formsService.currentForm\" (click)=\"formsService.showErrors()\" class=\"mr-1\"></dexih-invalid-form-details>\n\t\t\t<dexih-button-edit class=\"mr-1\" (click)=\"toggleEdit()\" [text]=\"formsService.currentForm?.controls.runTime.value.showEdit ? 'Hide Edit' : 'Edit'\"></dexih-button-edit>\n\t\t\t<dexih-button [iconClass]=\"formsService.currentForm?.controls.runTime.value.lock ? 'fa fa-lock' : 'fa fa-unlock'\" class=\"mr-1\" (click)=\"toggleLock()\" [text]=\"formsService.currentForm?.controls.runTime.value.lock ? 'Unlock' : 'Lock'\"></dexih-button>\n\t\t\t<dexih-button-refresh class=\"mr-1\"  (click)=\"refresh()\"></dexih-button-refresh>\n\t\t\t<dexih-button-dropdown class=\"mr-1\" iconClass=\"fa fa-plus\" text=\"Add\">\n\t\t\t\t<a class=\"dropdown-item\" (click)=\"newView()\">(New View)</a>\n\t\t\t\t<li *ngFor=\"let view of views\"><a class=\"dropdown-item\" (click)=\"add(view.key)\">{{view.name}}</a></li>\n\t\t\t</dexih-button-dropdown>\n\t\t\t<download-button class=\"mr-1\" (download)=\"download($event)\"></download-button>\n\t\t\t<save-button *ngIf=\"hubCache.canWrite\" [formsService]=\"formsService\" class=\"mr-1\"></save-button>\n\t\t\t<cancel-button [formsService]=\"formsService\"></cancel-button>\n\t\t</ng-template>\n\n\t\t<router-outlet></router-outlet>\n\n\t</dexih-widget>\n</div>","export {DashboardEditComponent} from './dashboard-edit.component';\nexport {DashboardItemComponent} from './item/dashboard-item.component';\n","import { Component, OnInit, Input, OnDestroy, Output, EventEmitter,\n    ViewChild, OnChanges, SimpleChanges } from '@angular/core';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { HubService } from '../../..';\nimport { Subscription, combineLatest, Subject } from 'rxjs';\nimport { HubCache, DexihInputParameter, DataCache, PreviewResults } from '../../../hub.models';\nimport { HubFormsService } from '../../../hub.forms.service';\nimport { DexihWidgetComponent } from 'dexih-ngx-components';\nimport { CancelToken } from '../../../../+auth/auth.models';\nimport { DexihView, InputParameterBase, InputParameter, eDataObjectType, eViewType, DexihActiveAgent } from '../../../../shared/shared.models';\nimport { AuthService } from '../../../../+auth/auth.service';\n\n@Component({\n    selector: 'dashboard-item',\n    templateUrl: 'dashboard-item.component.html',\n    styleUrls: ['./dashboard-item.component.scss']\n})\n\nexport class DashboardItemComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() item: FormGroup;\n    @Input() showEdit = true;\n    @Input() showPreview = false;\n    @Input() refreshData: EventEmitter<string>;\n    @Input() isMaximized = false;\n\n    @Output() onRemove = new EventEmitter();\n    @Output() onMaximize = new EventEmitter<FormGroup>();\n\n    @ViewChild('widget', {static: true}) public widget: DexihWidgetComponent;\n\n    private _subscription: Subscription;\n    private _viewKeySubscription: Subscription;\n    private _refreshDataSubscription: Subscription;\n    private _parametersSubscription: Subscription;\n\n    hubCache: HubCache;\n    remoteAgent: DexihActiveAgent;\n\n    eViewType = eViewType;\n\n    views: DexihView[];\n    view: DexihView;\n    parameters: DexihInputParameter[];\n\n    private firstLoad = true;\n    private dialogOpen = false;\n\n    data: DataCache;\n    dataResult: PreviewResults;\n    public dataRows = [];\n\n    private refreshDataSubject: Subject<void> = new Subject<void>();\n\n    private cancelToken = new CancelToken();\n\n    public parentParameters;\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private formsService: HubFormsService) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.hubService.getRemoteAgentObservable()\n            ).subscribe(result => {\n                this.hubCache = result[0];\n                this.remoteAgent = result[1];\n\n                if (this.hubService.isHubCacheLoaded) {\n                    this.views = this.hubCache.hub.dexihViews;\n                    if (this.item?.controls.viewKey) {\n                        this.view = this.hubCache.hub.dexihViews.find(c => c.key === this.item.controls.viewKey.value);\n\n                        this.data = <DataCache> this.item.controls.runTime.value.data;\n\n                        if (this.data) {\n                            this._refreshDataSubscription = this.data.data.subscribe(dataResult => {\n                                if (!dataResult) {\n                                    return;\n                                }\n\n                                this.dataResult = dataResult;\n\n                                if (!dataResult.viewConfig.animateConfig) {\n                                    this.dataRows = this.dataResult.data;\n                                }\n\n                                if (dataResult.status) {\n                                    this.hubService.addHubMessage(dataResult.status, false, this.view.name);\n                                }\n                            });\n\n                        } else if (this.remoteAgent) {\n                            if (!this.firstLoad) {\n                                if (!this.dialogOpen) {\n                                    this.dialogOpen = true;\n                                    this.authService.confirmDialog('Remote Agent Available',\n                                        'A remote agent is available, would you like to refresh the data?').then(confirm => {\n                                            if (confirm) {\n                                                this.refresh();\n                                            }\n                                            this.dialogOpen = false;\n                                        });\n                                }\n                            } else {\n                                this.refresh();\n                            }\n\n                            this.firstLoad = false;\n                        }\n                    }\n\n                    this.parentParameters = this.formsService.currentForm.controls.parameters.value;\n                    if (this._parametersSubscription) { this._parametersSubscription.unsubscribe(); }\n                    this._parametersSubscription = this.formsService.currentForm.controls.parameters.valueChanges.subscribe(value => {\n                        this.parentParameters = value;\n                    });\n                }\n            });\n\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'View Index');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._viewKeySubscription) { this._viewKeySubscription.unsubscribe(); }\n        if (this._refreshDataSubscription) { this._refreshDataSubscription.unsubscribe(); }\n        if (this._parametersSubscription) { this._parametersSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        let itemChange = changes['item'];\n        if (itemChange) {\n            let newItem = <FormGroup> itemChange.currentValue;\n\n            if (this.views && newItem.value) {\n                this.view = this.hubCache.hub.dexihViews.find(c => c.key === newItem.value);\n            }\n            if (this._viewKeySubscription) { this._viewKeySubscription.unsubscribe(); }\n            this._viewKeySubscription = newItem.controls.viewKey.valueChanges.subscribe(viewKey => {\n                this.formsService.updateDashboardItemView(newItem);\n            });\n        }\n    }\n\n    // public updateView(viewKey) {\n    //     if (this.views && viewKey) {\n    //         this.view = this.hubCache.hub.dexihViews.find(c => c.key === viewKey);\n    //         if (this.view) {\n    //             this.item.controls.name.setValue(this.view.name);\n    //             this.item.controls.runTime.value.data = new DataCache();\n\n    //             // reset parameters.\n    //             let formParameters = <FormArray> this.item.controls.parameters;\n    //             let currentParameters = <DexihInputParameter[]> formParameters.value;\n\n    //             formParameters.clear();\n\n    //             let parameters = <InputParameterBase[]> this.view.parameters;\n    //             if (this.view.sourceType === eDataObjectType.Datalink) {\n    //                 let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === this.view.sourceDatalinkKey);\n    //                 if (datalink && datalink.parameters) {\n    //                     parameters = parameters.concat(datalink.parameters);\n    //                 }\n    //             }\n\n    //             parameters.forEach(parameter => {\n    //                 let currentParameter = currentParameters.find( c => c.name === parameter.name);\n    //                 let newParameter = new InputParameterBase();\n    //                 if (currentParameter) {\n    //                     newParameter.name = currentParameter.name;\n    //                     newParameter.value = currentParameter.value;\n    //                 } else {\n    //                     newParameter.name = parameter.name;\n    //                     newParameter.value = parameter.value;\n    //                 }\n    //                 let newFormParameter = this.formsService.parameter(newParameter);\n    //                 formParameters.push(newFormParameter);\n    //             });\n    //         }\n    //     }\n    // }\n\n    public refresh() {\n        let preview = this.hubService.previewViewKey(this.item.controls.viewKey.value, null,\n            this.formsService.currentForm.controls.parameters.value,\n        this.item.controls.parameters.value, this.cancelToken);\n        this.data = <DataCache> this.item.controls.runTime.value.data;\n        this.data.refresh(preview);\n        preview.then(results => {\n            this.refreshDataSubject.next();\n            this.dataResult = results;\n            if (!this.dataResult.viewConfig.animateConfig) {\n                this.dataRows = this.dataResult.data;\n            }\n        }).catch(reason => {\n            this.hubService.addHubMessage(reason);\n        });\n    }\n\n    parameterChange() {\n        this.refresh();\n    }\n\n    public toggleEdit() {\n        this.showEdit = !this.showEdit;\n    }\n\n    removeItem($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        this.onRemove.emit();\n    }\n\n    public maximise() {\n        this.onMaximize.emit(this.item);\n    }\n}\n","<div class=\"side-menu\">\n    <div class=\"side-menu-content\">\n        <div class=\"spin-icon\">\n            <i class=\"fa fa-cog fa-spin\"></i>\n        </div>\n        <div class=\"side-menu-box\">\n            <div class=\"bg-light rounded p-1\">\n                <div>\n                    <dexih-button-refresh [compact]=\"true\" (click)=\"refresh()\"></dexih-button-refresh>\n                    <dexih-button-edit *ngIf=\"!this.showEdit\" class=\"ml-1\" [compact]=\"true\" (click)=\"toggleEdit()\">\n                    </dexih-button-edit>\n                    <dexih-button-preview *ngIf=\"this.showEdit\" class=\"ml-1\" [compact]=\"true\" (click)=\"toggleEdit()\">\n                    </dexih-button-preview>\n                    <dexih-button *ngIf=\"!isMaximized\" class=\"ml-1\" buttonClass=\"btn btn-primary\"\n                        iconClass=\"fa fa-window-maximize text-white\" (click)=\"maximise()\" tooltip=\"Maximize window\">\n                    </dexih-button>\n                    <dexih-button *ngIf=\"isMaximized\" class=\"ml-1\" buttonClass=\"btn btn-primary\"\n                        iconClass=\"fa fa-window-minimize text-white\" (click)=\"maximise()\" tooltip=\"Minimize window\">\n                    </dexih-button>\n                    <dexih-button-delete class=\"ml-1\" (click)=\"removeItem($event)\" [compact]=\"true\">\n                    </dexih-button-delete>\n                </div>\n\n                <div *ngIf=\"!showEdit && !showPreview && view\">\n\n                    <div class=\"m-1\" *ngIf=\"inputColumns && inputColumns.length > 0\">\n                        <span *ngFor=\"let column of inputColumns; let i = index\" class=\"input-group\">\n                            <div class=\"input-group-prepend\">\n                                <div class=\"input-group-text\">\n                                    {{column.logicalName}}\n                                </div>\n                            </div>\n                            <form-input name=\"column{{i}}\" class=\"form-control p-0\"\n                                [placeholder]=\"'Enter ' + column.logicalName\" [(ngModel)]=\"column.value\"></form-input>\n                        </span>\n                    </div>\n\n                    <div class=\"m-1\" *ngIf=\"item.controls.parameters.length > 0\">\n                        <input-parameters [showEdit]=\"false\" [parameters]=\"item.controls.parameters\"\n                            [formsService]=\"formsService\" [parentParameters]=\"parentParameters\"\n                            (onRefreshData)=\"refresh()\" [refreshEvent]=\"refreshDataSubject.asObservable()\">\n                        </input-parameters>\n                    </div>\n\n                    <div *ngIf=\"!data?.isRefreshing && dataResult?.columns?.length > 0 && dataResult?.viewConfig && dataResult?.data\"\n                        class=\"m-1\" style=\"z-index: 99999;\">\n                        <series-animate [showEdit]=\"false\" [showFrame]=\"false\"\n                            [animateConfig]=\"dataResult?.viewConfig.animateConfig\" [columns]=\"dataResult?.columns\"\n                            (hasChanged)=\"hasChanged()\" [baseData]=\"dataResult?.data\" [(data)]=\"dataRows\">\n                        </series-animate>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"showEdit\" class=\"p-3 gridster-item-content\">\n    <form [formGroup]=\"item\">\n        <section>\n            <form-input label=\"Item Name\" formControlName=\"name\" placeholder=\"Enter the dashboard item name.\"\n                [autocapitalize]=\"on\" iconClass=\"fa fa-list\">\n            </form-input>\n        </section>\n        <section>\n            <form-textarea label=\"Description\" [showMarkdown]=\"true\" formControlName=\"description\"\n                placeholder=\"Enter the description.\">\n            </form-textarea>\n        </section>\n        <section>\n            <form-select label=\"Select View\" formControlName=\"viewKey\" [items]=\"views\" itemKey=\"key\" itemName=\"name\">\n                <view-edit-button [key]=\"item.controls.viewKey.value\"></view-edit-button>\n            </form-select>\n        </section>\n        <section>\n            <form-checkbox label=\"Show Header\" formControlName=\"header\">\n            </form-checkbox>\n            <form-checkbox label=\"Allow Scrolling\" formControlName=\"scrollable\">\n            </form-checkbox>\n        </section>\n    </form>\n\n    <input-parameters [showEdit]=\"showEdit\" [allowAddRemove]=\"false\" [parameters]=\"item.controls.parameters\" [formsService]=\"formsService\"\n        [parentParameters]=\"parentParameters\" (onRefreshData)=\"refresh()\" [refreshEvent]=\"refreshDataSubject.asObservable()\">\n    </input-parameters>\n\n</div>\n\n<ng-template [ngIf]=\"!showEdit\">\n\n    <div *ngIf=\"!showPreview && view\" class=\"box\" [ngStyle]=\"{'overflow': item.controls.scrollable.value ? 'scroll' : 'hidden'}\">\n        <div *ngIf=\"data?.isRefreshing; else notRefreshing\" class=\"p-3\">\n            <div class=\"dexih-loader\"></div> Refreshing, please wait...\n        </div>\n        \n        <ng-template #notRefreshing>\n\n            <div *ngIf=\"item.controls.header.value\" class=\"box-header bg-secondary text-white\">\n                <div class=\"m-3\">\n                    <b>{{item.controls.name.value}}</b>\n                </div>\n            </div>\n        \n            <div *ngIf=\"item.controls.description.value\" class=\"box-header\">\n                <div class=\"m-1\">\n                    <ngx-md [data]=\"item.controls.description.value\"></ngx-md>\n                </div>\n            </div>\n    \n\n            <div class=\"box-content\"\n                *ngIf=\"!data?.isRefreshing && dataResult?.columns?.length > 0 && dataResult?.data?.length > 0; else elseBlock\">\n\n                <dexih-table *ngIf=\"view.viewType == eViewType.Table\" [enableMultiSelect]=\"false\" [enableResponsive]=\"false\"\n                    [enableSaveCsv]=\"false\" [enableFilter]=\"false\" [columns]=\"dataResult.columns\" [data]=\"dataRows\">\n                </dexih-table>\n\n                <div class=\"h-100\">\n                <chart-view [responsive]=\"true\" *ngIf=\"view.viewType == eViewType.Chart\" [columns]=\"dataResult.columns\"\n                    [data]=\"dataRows\" [config]=\"view.chartConfig\">\n                </chart-view>\n            </div>\n            </div>\n            <ng-template #elseBlock>\n                <div class=\"alert alert-info\" (click)=\"refresh()\">\n                    <i class=\"fa fa-warning\"></i>\n                    Select to refresh the view.\n                </div>\n            </ng-template>\n        </ng-template>\n    </div>\n</ng-template>","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { HubCache } from '../../hub.models';\nimport { DexihDashboard, DexihHub, eSharedObjectType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'dashboards',\n    templateUrl: './dashboard-index.component.html',\n    styles: []\n})\nexport class DashboardIndexComponent implements OnInit, OnDestroy {\n    @Input() public hubKey: number;\n\n    private _subscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n\n    hubCache: HubCache;\n\n    dashboards: Array<DexihDashboard>;\n    public eSharedObjectType = eSharedObjectType;\n\n    columns = [\n        { name: 'name', title: 'Name', footer: 'description', format: 'Md', tags: 'tags' },\n        { iconClass: 'sharedIcon', tooltip: 'sharedToolTip', width: '1%', align: 'center' },\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        // watch for any changes in the validations.\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n\n                this.updateDashboards();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Dashboard Index');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    delete(dashboard: Array<DexihDashboard>) {\n        // TDB\n        this.hubService.deleteDashboards(dashboard);\n    }\n\n    updateDashboards() {\n        if (this.hubCache && this.hubCache.isLoaded()) {\n            let dashboards: Array<DexihDashboard>;\n            dashboards = this.hubCache.hub.dexihDashboards.filter(c => c.isValid);\n            let tableData = dashboards.map(dashboard => {\n                return {\n                    key: dashboard.key,\n                    name: dashboard.name,\n                    tags: this.hubCache.getObjectTags(eSharedObjectType.Dashboard, dashboard.key),\n                    updateDate: dashboard.updateDate,\n                    sharedIcon: dashboard.isShared ? 'fa fa-group' : 'fa fa-user-secret',\n                    sharedToolTip: dashboard.isShared ? 'Table is shared' : 'Table is private'\n                };\n            });\n            this._tableData.next(tableData);\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    edit(dashboard: DexihDashboard) {\n        this.router.navigate(['dashboard-edit', dashboard.key], { relativeTo: this.route });\n    }\n\n    // TBD\n    export(items: Array<DexihDashboard>) {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(cache.hub.hubKey, '');\n        items.forEach(item => { cache.cacheAddDashboard(item.key, hub); });\n\n        let filename = items.length === 1 ? 'Dashboard - ' + items[0].name + '.json' : 'dashboards.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    // TBD\n    watchChanges() {\n        // watch the current validation in case it is changed in another session.\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n            if (hubCacheChange.changeClass === eSharedObjectType.Dashboard || hubCacheChange.changeClass === eSharedObjectType.TagObjects) {\n                this.updateDashboards();\n            }\n        });\n    }\n}\n","<div class=\"container-fluid\">\n    <dexih-widget title=\"Dashboards\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-pie-chart\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\t>\n\t\t\t<dexih-table \n\t\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t\t[columns]=\"columns\"\n\t\t\t\t[dataObservable]=\"tableData\"\n\t\t\t\t(rowClick)=\"edit($event)\"\n\t\t\t\t[tags]=\"this.hubCache.hub.dexihTags\"\n\t\t\t\t>\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n\t\t\t\t\t<dependent-items-button class=\"ml-1\" [key]=\"item.key\" [objectType]='eSharedObjectType.Dashboard'></dependent-items-button>\n\t\t\t\t</ng-template>\n\n\t\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t\t<tags-update-button class=\"ml-1\" [objectType]=\"eSharedObjectType.Dashboard\" [objects]=\"items\" ></tags-update-button>\n\t\t\t\t\t</ng-template>\n\n\t\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t\t<actions-dashboard-button [dashboards]=\"items\"></actions-dashboard-button>\n\t\t\t\t\t</ng-template>\n\t\t\t</dexih-table>\n\n\t</dexih-widget>\n\t\n\t<dexih-help class=\"m-3\" title=\"Dashboards\" path=\"/assets/help/reference/dashboard.md\"></dexih-help>\n</div>\n\n\n","export * from './dashboard-index.component';\n","export * from './dashboard-index/';\nexport {DashboardEditComponent, DashboardItemComponent} from './dashboard-edit/';\n","import { HostListener, Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Route, Router, Params } from '@angular/router';\nimport { HubCache, eCacheStatus } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { DexihDatajob } from '../../../shared/shared.models';\n\n@Component({\n  selector: 'dexih-datajob-edit-form',\n  templateUrl: './datajob-edit.component.html'\n})\nexport class DatajobEditComponent implements OnInit, OnDestroy {\n  public datajobKey: number;\n\n  public hubCache: HubCache;\n  public action: string; // new or edit\n  public pageTitle: string;\n  public params: Params;\n\n  private _subscription: Subscription;\n  private _formChangeSubscription: Subscription;\n  private _hubCacheChangeSubscription: Subscription;\n  private isLoaded = false;\n\n\n  constructor(private hubService: HubService,\n    public formsService: HubFormsService,\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router: Router) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(true),\n      ).subscribe(result => {\n        let data = result[0];\n        this.params = result[1];\n        this.hubCache = result[2];\n\n        this.action = data['action'];\n        this.pageTitle = data['pageTitle'];\n\n        if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded ) { return; }\n\n        if (this.isLoaded && this.action === 'new') { return; }\n\n        if (this.isLoaded && this.formsService.hasChanged) {\n            this.authService.confirmDialog('Synchronization warning',\n            'The hub was disconnected, meaning this edit could have been changed by another session.  Would you like to discard the current changes, and reload the latest version?')\n            .then(confirm => {\n                if (confirm) {\n                    this.load();\n                }\n            }).catch(reason => {\n                return;\n            });\n        } else {\n            this.load();\n        }\n\n\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Datajob Edit');\n    }\n\n\n  }\n\n  ngOnDestroy() {\n    if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._formChangeSubscription) { this._formChangeSubscription.unsubscribe(); }\n\n    this.formsService.ngOnDestroy();\n  }\n\n  load() {\n    this.isLoaded = true;\n\n    if (this.action === 'edit') {\n      // get the hub key from the route data, and update the service.\n      this.datajobKey = + this.params['datajobKey'];\n\n      if (!this.datajobKey) {\n        this.hubService.addHubErrorMessage('There was no datajob specified to edit.');\n      } else {\n        if (!this.hubCache.hub || !this.hubCache.hub.dexihDatajobs) {\n          this.hubService.addHubErrorMessage('The hub cache is not loaded.');\n        } else {\n\n          let datajob = this.hubCache.hub.dexihDatajobs.find(c => c.key === this.datajobKey);\n          if (!datajob) {\n            this.hubService.addHubErrorMessage('The specified datajob could not be found.');\n          } else {\n            this.formsService.datajob(datajob);\n          }\n        }\n      }\n    }\n\n    if (this.action === 'new') {\n      let datajob: DexihDatajob;\n      if (this.hubService.newDatajob) {\n        datajob = this.hubService.newDatajob;\n        this.hubService.newDatajob = null;\n      } else {\n        datajob = this.hubService.createDefaultDatajob();\n        datajob.key = 0;\n      }\n\n      this.formsService.datajob(datajob);\n\n      // update the url with the saved key\n      this._formChangeSubscription = this.formsService.getCurrentFormObservable().subscribe(form => {\n        let key = form.controls.key.value;\n        if (key) {\n          if (history.pushState) {\n            let newUrl = window.location.pathname.replace('/datajob-new', `/datajob-edit/${key}`)\n            this.router.navigateByUrl(newUrl);\n            this._formChangeSubscription.unsubscribe();\n          }\n        }\n      });\n    }\n  }\n\n  public canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>((resolve) => {\n      if (this.formsService.hasChanged) {\n        this.authService.confirmDialog('The data job has not been saved',\n          'The datajob changes have not been saved.  Do you want to discard the changes and exit?')\n          .then((confirm) => {\n              resolve(confirm);\n            }).catch(() => {\n              resolve(false);\n            });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  // @HostListener allows is to guard against browser refresh, close, etc.\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.formsService.hasChanged) {\n      $event.returnValue = 'The datajob changes have not been saved.  Do you want to discard the changes and exit?';\n    }\n  }\n}\n","<div class=\"container\">\n    <dexih-widget title=\"Edit Job\" iconClass=\"fa fa-lg fa-fw fa-cog\">\n\n        <ng-template #header>\n            <dexih-invalid-form-details class=\"mr-1\" [control]=\"formsService.currentForm\"\n                (click)=\"formsService.showErrors()\"></dexih-invalid-form-details>\n            <save-button *ngIf=\"hubCache?.canWrite\" class=\"mr-1\" [formsService]=\"formsService\"></save-button>\n            <cancel-button class=\"mr-1\" [formsService]=\"formsService\"></cancel-button>\n        </ng-template>\n\n        <div>\n            <router-outlet></router-outlet>\n        </div>\n    </dexih-widget>\n</div>\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { HubCache } from '../../hub.models';\nimport { DexihDatajob, eSharedObjectType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'datajobs',\n    templateUrl: './datajob-index.component.html',\n    styles: []\n})\nexport class DatajobIndexComponent implements OnInit, OnDestroy {\n    @Input() public hubKey: number;\n\n    private _subscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n\n    hubCache: HubCache;\n\n    datajobs: Array<DexihDatajob>;\n    public eSharedObjectType = eSharedObjectType;\n\n    columns = [\n        { name: 'name', title: 'Name', footer: 'description', format: 'Md', tags: 'tags' },\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        // watch for any changes in the datajobs.\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n\n                this.updateDatajobs();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datajob Index');\n        }\n\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    // deleteDatajob(datajob: DexihDatajob) {\n    //     this.hubService.deleteDatajobs([datajob]).catch(reason => {\n    //     });\n    // }\n\n    // deleteDatajobs(datajobs: Array<DexihDatajob>) {\n    //     this.hubService.deleteDatajobs(datajobs);\n    // }\n\n    updateDatajobs() {\n        if (this.hubCache && this.hubCache.isLoaded()) {\n            let datajobs = this.hubCache.hub.dexihDatajobs\n            .filter(c => c.isValid)\n            .map(c => {\n                return {\n                    key: c.key,\n                    name: c.name,\n                    description: c.description,\n                    updateDate: c.updateDate,\n                    tags: this.hubCache.getObjectTags(eSharedObjectType.Datajob, c.key)\n                }\n            });\n            this._tableData.next(datajobs);\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    // runDatajobs(datajobs, truncateTarget, resetIncremental) {\n    //     this.hubService.runDatajobs(datajobs, truncateTarget, resetIncremental, null);\n    // }\n\n    // activateDatajobs(datajobs) {\n    //     this.hubService.activateDatajobs(datajobs);\n    // }\n\n    // cancelDatajobs(datajobs: Array<DexihDatajob>) {\n    //     this.hubService.deactivateDatajobs(datajobs.map(c => c.key));\n    // }\n\n    editDatajob(datajob: DexihDatajob) {\n        this.router.navigate(['datajob-edit', datajob.key], { relativeTo: this.route });\n    }\n\n    // exportDatajobs(datajobs: Array<DexihDatajob>) {\n    //     const cache = this.hubCache;\n    //     const hub = new DexihHub(this.hubCache.hub.hubKey, '');\n    //     datajobs.forEach(datajob => { this.hubCache.cacheAddDatajob(datajob.key, hub); });\n\n    //     let filename = datajobs.length === 1 ? 'Datajob - ' + datajobs[0].name + '.json' : 'datajobs.json';\n\n    //     this.hubService.exportHub(hub, filename);\n    // }\n\n    watchChanges() {\n        // watch the current datajob in case it is changed in another session.\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n            if (hubCacheChange.changeClass === eSharedObjectType.Datajob || hubCacheChange.changeClass === eSharedObjectType.TagObjects) {\n                this.updateDatajobs();\n            }\n        });\n    }\n}\n","<div class=\"container-fluid\">\n\t<dexih-widget title=\"Data Jobs\" iconClass=\"fa fa-lg fa-fw fa-calendar\"\n\t[showCloseButton]=\"true\"\n\t(close)=\"close()\"\n\t>\n\n\n\t\t<dexih-table \n\t\t\t[enableMultiSelect]=\"true\" \n\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t[columns]=\"columns\" \n\t\t\t[dataObservable]=\"tableData\" \n\t\t\t(rowClick)=\"editDatajob($event)\"\n\t\t\t[tags]=\"this.hubCache.hub.dexihTags\"\n\t\t>\n\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n\t\t\t<dependent-items-button class=\"ml-1\" [key]=\"item.key\" [objectType]='eSharedObjectType.Datajob'></dependent-items-button>\n\t\t</ng-template>\n\n\t\t\t<ng-template #rowStatus select=\"rowStatus\" let-datajob=\"item\">\n\t\t\t\t<datalink-status [datajobKey]='datajob?.key'></datalink-status>\n\t\t\t</ng-template>\n\n\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t<tags-update-button class=\"ml-1\" [objectType]=\"eSharedObjectType.Datajob\" [objects]=\"items\" ></tags-update-button>\n\t\t\t</ng-template>\n\n\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t<actions-datajob-button [datajobs]=\"items\"></actions-datajob-button>\n\t\t\t</ng-template>\n\t\t</dexih-table>\n\n\t</dexih-widget>\n\n\t<dexih-help class=\"m-3\" title=\"Datalinks\" path=\"/assets/help/reference/datajob.md\"></dexih-help>\n\n</div>","export * from './datajob-index.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { DexihDatajob, InputParameter } from '../../../shared/shared.models';\nimport { HubCache } from '../../hub.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n\n    selector: 'datajob-run',\n    templateUrl: './datajob-run.component.html'\n})\nexport class DatajobRunComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n    private cancelToken: CancelToken = new CancelToken();\n\n    private datajobs: DexihDatajob[];\n    private hubCache: HubCache;\n\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n\n    public truncateTable = false;\n    public resetIncremental = false;\n    public resetValue = '';\n\n    parameters: InputParameter[];\n\n    isRefreshing = false;\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private route: ActivatedRoute) {\n\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.hubService.getRemoteAgentObservable()\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n\n                this.action = data['action'];\n                this.pageTitle = data['pageTitle'];\n\n                if (this.hubCache.isLoaded()) {\n                    let datajobKeys: string = params['datajobKeys'];\n                    this.datajobs = new Array<DexihDatajob>();\n\n                    if (datajobKeys) {\n                        this.parameters = [];\n                        let datajobKeyArray = datajobKeys.split('|').map(c => +c);\n                        datajobKeyArray.forEach(datajobKey => {\n                            let datajob = this.hubCache.hub.dexihDatajobs.find(c => c.key === datajobKey);\n                            this.datajobs.push(datajob);\n                            datajob.parameters.forEach(c => {\n                                if (this.parameters.findIndex(p => c.name === p.name) < 0) {\n                                    this.parameters.push({name: c.name, value: c.value, rank: c.rank});\n                                }\n                            });\n                        });\n                    }\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datajob Run');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    run() {\n        this.hubService.runDatajobs(this.datajobs, this.truncateTable,\n            this.resetIncremental, this.resetValue, this.parameters, this.cancelToken);\n        this.authService.navigateUp();\n    }\n\n    activate() {\n        this.hubService.activateDatajobs(this.datajobs, this.parameters, this.cancelToken);\n        this.authService.navigateUp();\n    }\n\n}\n","<div class=\"container\">\n    <dexih-widget title=\"Datajob Options\" iconClass=\"fa fa-lg fa-fw fa-exchange\"  [showCloseButton]=\"true\" (close)=\"close()\" [padding]=\"true\">\n            <ng-template #header>\n                <dexih-button-refresh class=\"mr-1\" (click)=\"run()\" text=\"Run Now\"></dexih-button-refresh>\n                <dexih-button-refresh class=\"mr-1\" (click)=\"activate()\" text=\"Activate Triggers\"></dexih-button-refresh>\n                <dexih-button-cancel (click)=\"cancel()\"></dexih-button-cancel>\n            </ng-template>\n\n        <ng-template #subHeader>\n            <label class=\"label\">Run the following datajobs(s):</label>\n            <div>\n                <div class=\"row\">\n                    <span class=\"col alert alert-primary m-1\" *ngFor=\"let datajob of datajobs | fieldSort: 'name'\">\n                        {{datajob.name}}\n                    </span>\n                </div>\n            </div>\n        </ng-template>\n            \n\t\t<form>\n\t\t\t<fieldset>\n\t\t\t\t<section>\n\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t<section class=\"col\">\n\t\t\t\t\t\t\t<form-checkbox label=\"Truncate all target tables before execution.\" [(ngModel)]=\"truncateTable\" [ngModelOptions]=\"{standalone: true}\"></form-checkbox>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\n                    <div class=\"form-row\">\n                        <section class=\"col\">\n                                <form-checkbox label=\"Reset the source incremental value, and load all source rows.\" [(ngModel)]=\"resetIncremental\" [ngModelOptions]=\"{standalone: true}\"></form-checkbox>\n                            </section>\n                        </div>\n\n                    <div class=\"form-row\">\n                        <section class=\"col\">\n                            <form-input label=\"Incremental Value\" [(ngModel)]=\"resetValue\" [ngModelOptions]=\"{standalone: true}\" placeholder=\"\" iconClass=\"fa fa-list\" note=\"Use a specific incremental value to start loading source rows from (leave empty for null value)\" >\n                                </form-input>\n                        </section>\n                    </div>\n    \n    \n                    <div class=\"d-flex flex-wrap pt-1\" *ngIf=\"parameters && parameters.length > 0\" >\n                        <div class=\"input-group-text\">\n                            Input Parameters\n                        </div>\n                \n                        <input-parameters-view [parameters]=\"parameters\"></input-parameters-view>\n                    </div>\n\t\t\t\t</section>\n\t\t\t</fieldset>\n\t\t</form>\n\n    </dexih-widget>\n</div>","export * from './datajob-index/datajob-index.component';\nexport * from './datajob-edit/datajob-edit.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { HubCache } from '../../hub.models';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable, BehaviorSubject, Subscription, combineLatest} from 'rxjs';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { eDatalinkType, DexihDatalink, eSourceType, eSharedObjectType, eDatalinkTypeItems, DexihTag } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'datalink-index',\n    templateUrl: './datalink-index.component.html',\n    styles: []\n})\nexport class DatalinkIndexComponent implements OnInit, OnDestroy {\n    hubCache: HubCache;\n    typeFilter: number;\n\n    private _subscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n\n    public eSharedObjectType = eSharedObjectType;\n    public eDatalinkType = eDatalinkType;\n    public eDatalinkTypeItems = eDatalinkTypeItems;\n\n    columns = [\n        { name: 'name', title: 'Name', format: 'Md', footer: 'description', tags: 'tags' },\n        { iconClass: 'sharedIcon', tooltip: 'sharedToolTip', width: '1%', align: 'center' },\n        { name: 'datalinkType', title: 'Datalink Type', format: '' },\n        { name: 'sourceName', title: 'Source', format: '' },\n        { name: 'targetName', title: 'Target', format: '' },\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<DexihDatalink>>(null);\n    tableData: Observable<Array<DexihDatalink>> = this._tableData.asObservable();\n\n    constructor(private hubService: HubService, private authService: AuthService, private router: Router, private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.route.queryParams,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                let queryParams = result[2];\n                this.hubCache = result[3];\n\n                if (!this.hubCache.isLoaded()) { return; }\n\n                this.typeFilter = + queryParams['typeFilter'];\n                if (!this.typeFilter) {\n                    this.typeFilter = 0;\n                }\n                this.updateDatalinks();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Index');\n        }\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    private updateDatalinks() {\n        let newDatalinks: Array<DexihDatalink>;\n        if (this.hubCache.isLoaded()) {\n            if (!this.hubCache.hub.dexihDatalinks) {\n                this._tableData.next(new Array<DexihDatalink>());\n            } else {\n\n                if (this.typeFilter === 0 || !this.typeFilter) {\n                    newDatalinks = this.hubCache.hub.dexihDatalinks;\n                } else {\n                    newDatalinks = this.hubCache.hub.dexihDatalinks.filter(d => d.datalinkType === this.typeFilter);\n                }\n\n                let datalinkData = new Array<any>();\n\n                newDatalinks.forEach(d => {\n                    let sourceName = '';\n                    let targetName = '';\n\n                    switch (d.sourceDatalinkTable.sourceType) {\n                        case eSourceType.Table:\n                            let sourceTable = this.hubCache.getTable(d.sourceDatalinkTable.sourceTableKey);\n                            sourceName = sourceTable ? sourceTable.logicalName : 'Error, not found';\n                            break;\n                        case eSourceType.Datalink:\n                            let sourceDatalink = this.hubCache.hub.dexihDatalinks\n                                .find(c => c.key === d.sourceDatalinkTable.sourceDatalinkKey);\n                            sourceName = sourceDatalink ? 'Datalink: ' + sourceDatalink.name : 'Error, not found';\n                            break;\n                        case eSourceType.Rows:\n                            sourceName = 'Static Rows';\n                            break;\n                    }\n\n                    if (d.isQuery) {\n                        targetName = 'None specified.';\n                    } else {\n                        targetName = d.dexihDatalinkTargets.filter(t => t.isValid).map(c => {\n                            let table = this.hubCache.getTable(c.tableKey);\n                            return table && table.logicalName || 'Error, not found';\n                        }).join(', ');\n                    }\n\n                    datalinkData.push({\n                        key: d.key,\n                        datalinkType: this.eDatalinkType[d.datalinkType],\n                        name: d.name,\n                        tags: this.hubCache.getObjectTags(eSharedObjectType.Datalink, d.key),\n                        description: d.description,\n                        sourceName: sourceName,\n                        targetName: targetName,\n                        updateDate: d.updateDate,\n                        sharedIcon: d.isShared ? 'fa fa-group' : 'fa fa-user-secret',\n                        sharedToolTip: d.isShared ? 'Table is shared' : 'Table is private'\n                    });\n                });\n\n                this._tableData.next(datalinkData);\n            }\n        }\n\n    }\n\n    // ngOnDestroy() {\n    //    this.hubSubscription.unsubscribe();\n    // }\n\n    editDatalink(datalink: DexihDatalink) {\n        this.router.navigate(['datalink-edit', 'edit', datalink.key],\n            { queryParamsHandling: 'merge', relativeTo: this.route.parent });\n    }\n\n    watchChanges() {\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n\n        // watch the current connection in case it is changed in another session.\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n            if (hubCacheChange.changeClass === eSharedObjectType.Datalink || hubCacheChange.changeClass === eSharedObjectType.TagObjects) {\n                this.updateDatalinks();\n            }\n        });\n    }\n}\n\n\n","<div class=\"container-fluid\">\n    <dexih-widget title=\"Datalinks\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-exchange\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\t>\n\t\t<dexih-table \n\t\t\ttableClass=\"table table-striped table-hover m-0\"\n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[enableStickyToolbar]=\"true\" [toolbarZIndex]=\"100\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[dataObservable]=\"tableData\"\n\t\t\t(rowClick)=\"editDatalink($event)\"\n\t\t\t[tags]=\"this.hubCache.hub.dexihTags\"\n\t\t\t>\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<actions-datalink-button [datalinks]=\"items\" ></actions-datalink-button>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #filter select=\"filter\" let-items=\"items\">\n\t\t\t\t\t<dexih-button-dropdown class=\"mr-1\" [autoCompact]=\"false\" buttonClass=\"btn btn-primary\" iconClass=\"fa fa-filter\" [text]=\"eDatalinkType[typeFilter]\" title=\"Filter by a purpose\" [pullRight]=\"true\">\n\t\t\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"typeFilter=='All'\" routerLink='.' [queryParams]=\"{typeFilter: 'All'}\" title=\"All Datalinks\">All</a>\n\t\t\t\t\t\t<a *ngFor=\"let datalinkType of eDatalinkTypeItems | gtFilter: 'key': 0\" [class.active]=\"typeFilter==datalinkType.key\" class=\"dropdown-item\" routerLink='.' [queryParams]=\"{typeFilter: datalinkType.key}\" [title]=\"datalinkType.name\">{{datalinkType.name}}</a>\n\t\t\t\t\t</dexih-button-dropdown>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t<tags-update-button class=\"ml-1\" [objectType]=\"eSharedObjectType.Datalink\" [objects]=\"items\" ></tags-update-button>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #rowStatus select=\"rowStatus\" let-item=\"item\">\n\t\t\t\t\t<datalink-status [datalinkKey]='item?.key'></datalink-status>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n\t\t\t\t\t<dependent-items-button class=\"ml-1\" [key]=\"item.key\" [objectType]='eSharedObjectType.Datalink'></dependent-items-button>\n\t\t\t\t</ng-template>\n\t\t</dexih-table>\n\n\t</dexih-widget>\n\t\n\t<dexih-help class=\"m-3\" title=\"Datalinks\" path=\"/assets/help/reference/datalink.md\"></dexih-help>\n</div>\n\n","export * from './datalink-index.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HubService } from '../../hub.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { Location } from '@angular/common';\nimport { HubCache, eCacheStatus } from '../../hub.models';\nimport { eDatalinkType, DexihConnection, DexihTable, eConnectionPurpose, eDeltaType, eSharedObjectType, eDatalinkTypeItems } from '../../../shared/shared.models';\n\n@Component({\n\n  selector: 'dexih-datalink-new-form',\n  templateUrl: './datalink-new.component.html'\n})\nexport class DatalinkNewComponent implements OnInit, OnDestroy {\n\n  private _subscription: Subscription;\n  private _valueChangesSubscription: Subscription;\n  private _hubCacheChangeSubscription: Subscription;\n\n  private hubCache: HubCache;\n\n  public pageTitle: string;\n\n  hasChanged = false;\n  showAllErrors = false;\n\n  private tableKeys: Array<number>;\n\n  public sourceTableKeys: Array<number>;\n  public name: string;\n  public datalinkType: eDatalinkType;\n  public targetConnectionKey: number;\n  public auditConnectionKey: number;\n  public addSourceColumns = true;\n\n  public managedTargetConnections: Array<DexihConnection>;\n  public managedConnections: Array<DexihConnection>;\n\n  public sourceTables: Array<DexihTable>;\n\n  public eConnectionPurpose = eConnectionPurpose;\n\n  public auditColumnTypes = [\n    { key: eDeltaType.AutoIncrement, name: 'Auto Incrementing Key', value: false },\n    { key: eDeltaType.IsCurrentField, name: 'Is Current Flag', value: false },\n    { key: eDeltaType.Version, name: 'Record Version', value: false },\n    { key: eDeltaType.ValidFromDate, name: 'Valid From Date', value: false },\n    { key: eDeltaType.ValidToDate, name: 'Valid To Date', value: false },\n    { key: eDeltaType.CreateDate, name: 'Created Date', value: false },\n    { key: eDeltaType.UpdateDate, name: 'Updated Date', value: false },\n    { key: eDeltaType.CreateAuditKey, name: 'Created by AuditKey Reference', value: false },\n    { key: eDeltaType.UpdateAuditKey, name: 'Updated by AuditKey Reference', value: false }\n  ];\n\n  public allAuditColumns = false;\n\n  eDatalinkTypeItems = eDatalinkTypeItems;\n\n  public savingDatalink = false;\n\n  mainForm: FormGroup;\n\n  formErrors = {\n    'name': '',\n    'targetConnectionKey': '',\n    'auditConnectionKey': '',\n    'datalinkType': ''\n  };\n\n  validationMessages = {\n    'name': {\n      'required': 'Name is required.',\n      'minlength': 'Name must be at least 4 characters long.',\n      'maxlength': 'Name cannot be more than 50 characters long.',\n    },\n    'targetConnectionKey': {\n    },\n    'auditConnectionKey': {\n    },\n    'datalinkType': {\n      'required': 'Datalink Type is required.',\n    },\n  };\n\n\n  constructor(\n    private hubService: HubService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private fb: FormBuilder) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n      ).subscribe(result => {\n        let params = result[1];\n        this.hubCache = result[2];\n\n        this.managedTargetConnections = this.hubCache.hub.dexihConnections\n          .filter(c => c.purpose === eConnectionPurpose.Managed || c.purpose === eConnectionPurpose.Target)\n\n        this.managedConnections = this.hubCache.hub.dexihConnections\n          .filter(c => c.purpose === eConnectionPurpose.Managed)\n\n        let tableKeys: string = params['sourceTableKeys'];\n        this.tableKeys = tableKeys.split('|').map(c => +c);\n\n        if (this.hubCache.status === eCacheStatus.Loaded) {\n          this.updateTables();\n\n          this.targetConnectionKey = +params['targetConnectionKey'];\n\n          if (!this.targetConnectionKey) {\n            let targetConnection = this.hubCache.hub.dexihConnections.find(c => c.purpose === eConnectionPurpose.Managed);\n            if (targetConnection) {\n              this.targetConnectionKey = targetConnection.key;\n            }\n          }\n          this.auditConnectionKey = this.targetConnectionKey;\n          this.datalinkType = eDatalinkType.General;\n\n          this.buildForm();\n\n          this.watchChanges();\n        }\n\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Datalink New');\n    }\n\n\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._valueChangesSubscription) { this._valueChangesSubscription.unsubscribe(); }\n    if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n  }\n\n  updateTables() {\n\n    this.sourceTableKeys = new Array<number>();\n    this.sourceTables = new Array<DexihTable>();\n\n    if (this.tableKeys && this.hubCache.hub.dexihConnections) {\n      this.hubCache.hub.dexihTables.forEach(table => {\n        if (this.tableKeys.findIndex(t => t === table.key) >= 0) {\n          this.sourceTableKeys.push(table.key);\n          this.sourceTables.push(table);\n        }\n      });\n    }\n  }\n\n  buildForm(): void {\n    this.mainForm = this.fb.group({\n      'name': [this.name, [\n      ]],\n      'targetConnectionKey': [this.targetConnectionKey > 0 ? this.targetConnectionKey : null, [\n        // Validators.required,\n      ]],\n      'auditConnectionKey': [this.auditConnectionKey > 0 ? this.auditConnectionKey : null, [\n        // Validators.required,\n      ]],\n      'datalinkType': [this.datalinkType, [\n        Validators.required,\n      ]],\n    });\n\n    if (this._valueChangesSubscription) { this._valueChangesSubscription.unsubscribe(); }\n    this._valueChangesSubscription = this.mainForm.valueChanges.subscribe(data => this.onValueChanged());\n    this.onValueChanged(); // (re)set validation messages now\n\n\n    this.hasChanged = false;\n  }\n\n  onValueChanged() {\n    if (!this.mainForm) { return; }\n    const form = this.mainForm;\n\n    this.hasChanged = true;\n\n    for (const field of Object.keys(this.formErrors)) {\n      // clear previous error message (if any)\n      this.formErrors[field] = '';\n      const control = form.get(field);\n\n      if (control && (control.dirty || this.showAllErrors) && !control.valid) {\n        const messages = this.validationMessages[field];\n        for (const key of Object.keys(control.errors)) {\n          this.formErrors[field] += messages[key] + ' ';\n        }\n      }\n    }\n  }\n\n  selectAllAuditColumns() {\n    this.allAuditColumns = !this.allAuditColumns;\n    this.auditColumnTypes.forEach(c => c.value = this.allAuditColumns);\n  }\n\n  saveDatalink() {\n    if (this.mainForm.valid) {\n\n      let value = this.mainForm.value;\n      this.savingDatalink = true;\n      let auditColumns = this.auditColumnTypes.filter(c => c.value).map(c => c.key);\n      this.hubService.createDatalinks(\n        this.sourceTableKeys,\n        value.name,\n        value.datalinkType,\n        value.targetConnectionKey,\n        null,\n        null,\n        value.auditConnectionKey,\n        this.addSourceColumns,\n        auditColumns).then(result => {\n          this.savingDatalink = false;\n          if (result.length === 1) {\n            this.openDatalink(result[0].key);\n          } else {\n            this.router.navigate(['/hub', this.hubCache.hub.hubKey, 'datalinks'], { relativeTo: this.route.root });\n          }\n        }).catch(() => {\n          this.savingDatalink = false;\n        });\n    } else {\n      this.showAllErrors = true;\n      this.onValueChanged();\n    }\n  }\n\n  cancel() {\n    this.location.back();\n  }\n\n  // delay the open datalink until the hub cache is updated with the new datalink.\n  openDatalink(key: number, iteration = 0) {\n    if (iteration >= 10 ) {\n      this.router.navigate(['/hub', this.hubCache.hub.hubKey, 'datalinks'], { relativeTo: this.route.root });\n    }\n    setTimeout(() => {\n      if (this.hubCache.hub.dexihDatalinks.findIndex(c => c.key === key) >= 0) {\n        this.router.navigate(['/hub', this.hubCache.hub.hubKey, 'datalinks', 'datalink-edit', 'edit', key],\n        { relativeTo: this.route.root });\n      } else {\n        this.openDatalink(key, iteration++);\n      }\n    }, 500);\n  }\n\n  watchChanges() {\n    // watch the current connection in case it is changed in another session.\n    this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n        if (hubCacheChange.changeClass === eSharedObjectType.Table) {\n            this.updateTables();\n        }\n    });\n}\n}\n","<div class=\"container\">\n\t<dexih-widget title=\"New Datalink(s)\"  \n\t\ticonClass=\"fa fa-lg fa-fw fa-exchange\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"!savingDatalink && cancel()\"\n\t\t[padding]=\"true\"\n\t\t>\n\t\t<ng-template #header>\n\t\t\t<dexih-button-save class=\"mr-1\" (click)=\"!savingDatalink && saveDatalink()\" [busy]=\"savingDatalink\"></dexih-button-save>\n\t\t\t<dexih-button-cancel (click)=\"!savingDatalink && cancel()\" [busy]=\"savingDatalink\"></dexih-button-cancel>\n\t\t</ng-template>\n\n\t\t<ng-template #subHeader>\n\t\t\t<label class=\"label\">Create datalinks for the following source table(s):</label>\n\t\t\t<div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<span class=\"col alert alert-primary m-1\" *ngFor=\"let sourceTable of sourceTables | fieldSort: 'name'\">\n\t\t\t\t\t\t{{sourceTable.name}}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</ng-template>\n\n\t\t<form *ngIf=\"sourceTableKeys\"  [formGroup]=\"mainForm\">\n\n\t\t\t<fieldset>\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input *ngIf=\"sourceTables.length == 1\" label=\"Datalink Name\" formControlName=\"name\" placeholder=\"Datalink name (leave blank for auto naming)\" [autocapitalize]=\"true\"\n\t\t\t\t\t\t iconClass=\"fa fa-comment\" [errors]=\"formErrors.name\"></form-input>\n\t\t\t\t\t\t<form-input *ngIf=\"sourceTables.length > 1\" disabled label=\"Datalink Name\" placeholder=\"Datalink name can not be specified when creating multiple datalinks.\"\n\t\t\t\t\t\t iconClass=\"fa fa-comment\"></form-input>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-select formControlName=\"datalinkType\" label=\"Type\" [items]=\"eDatalinkTypeItems\" itemKey=\"key\" itemName=\"description\" [errors]=\"formErrors.datalinkType\"></form-select>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-select formControlName=\"targetConnectionKey\" label=\"Target Connection\" [items]=\"managedConnections\" itemKey=\"key\"\n\t\t\t\t\t\t itemName=\"name\" note=\"Specify the connection for the target table.\" [errors]=\"formErrors.targetConnectionKey\" [allowNullSelect]=\"true\" selectNullMessage=\"No target table\"></form-select>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-select formControlName=\"auditConnectionKey\" label=\"Audit Connection\" [items]=\"managedConnections\" itemKey=\"key\"\n\t\t\t\t\t\t itemName=\"name\" note=\"Specify the connection to store execution results.\" [errors]=\"formErrors.auditConnectionKey\"\n\t\t\t\t\t\t [allowNullSelect]=\"true\" selectNullMessage=\"No datalink auditing\"></form-select>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t</form>\n\n\t\t<form *ngIf=\"sourceTableKeys\" >\n\t\t\t<fieldset>\n\t\t\t\t<section>\n\n\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t<section class=\"col col-11\">\n\t\t\t\t\t\t\t<form-checkbox label=\"Include source columns in target table\" [ngModel]=\"addSourceColumns\" name=\"addSourceColumns\"></form-checkbox>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t<section class=\"col col-11\">\n\t\t\t\t\t\t\t<label class=\"label\">\n\t\t\t\t\t\t\t\tSpecify the audit columns (in addition to source columns) to be included in the target table.\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<form-checkbox label=\"Select All/None\" (ngModelChange)=\"selectAllAuditColumns()\" [ngModel]=\"allAuditColumns\" name=\"selectAllAuditColumns\"></form-checkbox>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t<section *ngFor=\"let auditColumnType of auditColumnTypes\" class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t<form-checkbox [label]=\"auditColumnType.name\" [(ngModel)]=\"auditColumnType.value\" [ngModelOptions]=\"{standalone: true}\"></form-checkbox>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t</fieldset>\n\t\t</form>\n\t</dexih-widget>\n</div>","export * from './datalink-new.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { eDataObjectType } from '../../../shared/shared.models';\n\n@Component({\n\n    selector: 'datalink-preview-data',\n    templateUrl: './datalink-preview-data.component.html'\n})\nexport class DatalinkPreviewDataComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n\n    public key: number;\n    public previewUpdates: boolean;\n\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    public eDataObjectType = eDataObjectType;\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private route: ActivatedRoute) {\n\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n\n                this.action = data['action'];\n                this.pageTitle = data['pageTitle'];\n                this.key = +params['datalinkKey'];\n                this.previewUpdates = params['previewUpdates'] === 'true';\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Preview');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n}\n","<div class=\"container-fluid\">\n\n    <dexih-widget title=\"Preview Datalink\" iconClass=\"fa fa-lg fa-fw fa-exchange\" [showCloseButton]=\"true\"\n        (close)=\"close()\">\n        <preview-data [key]='key' [previewUpdates]='previewUpdates' [viewSource]='eDataObjectType.Datalink'></preview-data>\n    </dexih-widget>\n</div>","export { DatalinkPreviewDataComponent } from './datalink-preview-data.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubCache } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { DexihDatalink, InputColumn, InputParameter, InputParameterBase } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n\n    selector: 'datalink-run',\n    templateUrl: './datalink-run.component.html'\n})\nexport class DatalinkRunComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n    private cancelToken: CancelToken = new CancelToken();\n\n    private datalinks: DexihDatalink[];\n    private hubCache: HubCache;\n\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    public inputColumns: InputColumn[];\n    public parameters: InputParameterBase[];\n\n    public truncateTable = false;\n    public resetIncremental = false;\n    public resetValue = '';\n\n    isRefreshing = false;\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private route: ActivatedRoute) {\n\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.hubService.getRemoteAgentObservable()\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n\n                this.action = data['action'];\n                this.pageTitle = data['pageTitle'];\n\n                if (this.hubCache.isLoaded()) {\n                    let datalinkKeys: string = params['datalinkKeys'];\n                    this.datalinks = new Array<DexihDatalink>();\n\n                    if (datalinkKeys) {\n                        this.inputColumns = [];\n                        this.parameters = [];\n                        let datalinkKeyArray = datalinkKeys.split('|').map(c => +c);\n                        datalinkKeyArray.forEach(datalinkKey => {\n                            let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === datalinkKey);\n                            this.datalinks.push(datalink);\n                            datalink.sourceDatalinkTable.dexihDatalinkColumns.filter(c => c.isInput).forEach(c => {\n                                this.inputColumns.push({datalinkKey: datalinkKey, datalinkName: datalink.name,\n                                    name: c.name, logicalName: c.logicalName,\n                                    dataType: c.dataType, rank: c.rank, value: c.defaultValue, defaultValue: c.defaultValue });\n                            });\n                            datalink.parameters.forEach( c => {\n                                if (this.parameters.findIndex( p => p.name === c.name ) < 0) {\n                                    this.parameters.push(c);\n                                }\n                            });\n                        });\n                    }\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Preview');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    runDatalinks() {\n        this.hubService.runDatalinks(this.datalinks.map(c => c.key), this.truncateTable,\n            this.resetIncremental, this.resetValue, this.inputColumns, this.parameters, this.cancelToken);\n        this.authService.navigateUp();\n    }\n}\n","<div class=\"container\">\n    <dexih-widget title=\"Datalink Options\" iconClass=\"fa fa-lg fa-fw fa-exchange\"  [showCloseButton]=\"true\" (close)=\"close()\" [padding]=\"true\">\n            <ng-template #header>\n                <dexih-button-refresh class=\"mr-1\" (click)=\"runDatalinks()\" text=\"Run Now\"></dexih-button-refresh>\n                <dexih-button-cancel (click)=\"cancel()\"></dexih-button-cancel>\n            </ng-template>\n\n        <ng-template #subHeader>\n            <label class=\"label\">Run the following datalink(s):</label>\n            <div class=\"d-flex flex-wrap\">\n                <div class=\"alert alert-primary m-1\" *ngFor=\"let datalink of datalinks | fieldSort: 'name'\">\n                    {{datalink.name}}\n                </div>\n            </div>\n        </ng-template>\n            \n\t\t<form>\n\t\t\t<fieldset>\n\t\t\t\t<section>\n\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t<section class=\"col\">\n\t\t\t\t\t\t\t<form-checkbox label=\"Truncate all target tables before execution.\" [(ngModel)]=\"truncateTable\" [ngModelOptions]=\"{standalone: true}\"></form-checkbox>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\n                    <div class=\"form-row\">\n                        <section class=\"col\">\n                                <form-checkbox label=\"Reset the source incremental value, and load all source rows.\" [(ngModel)]=\"resetIncremental\" [ngModelOptions]=\"{standalone: true}\"></form-checkbox>\n                            </section>\n                        </div>\n\n                    <div class=\"form-row\">\n                        <section class=\"col\">\n                            <form-input label=\"Incremental Value\" [(ngModel)]=\"resetValue\" [ngModelOptions]=\"{standalone: true}\" placeholder=\"\" iconClass=\"fa fa-list\" note=\"Use a specific incremental value to start loading source rows from (leave empty for null value)\" >\n                                </form-input>\n                        </section>\n                    </div>\n    \n    \n                    <div class=\"d-flex flex-wrap pt-1\" *ngIf=\"inputColumns && inputColumns.length > 0\" >\n                        <div class=\"input-group-text\">\n                            Input Values\n                        </div>\n                \n                        <span *ngFor=\"let column of inputColumns; let i = index\" class=\"input-group\">\n                            <div class=\"input-group-prepend\">\n                                <div class=\"input-group-text\">\n                                    {{column.logicalName}}\n                                </div>\n                            </div>\n                            <form-input name=\"column{{i}}\" class=\"form-control p-0\" [placeholder]=\"column.logicalName\" [(ngModel)]=\"column.value\"></form-input>\n                        </span>\n                    </div>\n\n                    <div *ngIf=\"parameters && parameters.length > 0\" >\n                        <label class=\"label\">Parameters:</label>\n                        <input-parameters-view [parameters]=\"parameters\"></input-parameters-view>\n                    </div>\n\t\t\t\t</section>\n\t\t\t</fieldset>\n\t\t</form>\n\n    </dexih-widget>\n</div>","export { DatalinkIndexComponent } from './datalink-index';\nexport { DatalinkNewComponent } from './datalink-new/datalink-new.component';\nexport { DatalinkPreviewDataComponent } from './datalink-preview-data';\n\n","import { Component, OnInit, OnDestroy, HostListener } from '@angular/core';\nimport { FileHandler, eFileStatus, CancelToken } from '../../../+auth/auth.models';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { HubCache, eCacheStatus, formatTypes } from '../../hub.models';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubService } from '../..';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { DexihConnection, eTypeCode, DexihTable, eConnectionCategory, eConnectionPurpose } from '../../../shared/shared.models';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'files-bulk-load',\n    templateUrl: 'files-bulk-load.component.html'\n})\n\nexport class FilesBulkLoadComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n    private _connectionKeySubscription: Subscription;\n    private _flatFilesSubscription: Subscription;\n\n    public entityType = 'Table';\n\n    public canEdit = false;\n    public connection: DexihConnection;\n\n    public bulkLoadForm: FormGroup;\n\n    public formatTypes = formatTypes;\n    public eTypeCode = eTypeCode;\n    public eFileStatus = eFileStatus;\n\n    public hubCache: HubCache;\n\n    public automaticUpload = true;\n\n    public uploadedFiles: FileHandler[] = [];\n\n    private reference: string = null;\n    public tables: DexihTable[] = []\n\n    public currentTable: DexihTable = null;\n\n    private cancelToken = new CancelToken();\n\n    pageTitle = 'Manage Files';\n    showPage = false;\n    showPageMessage = 'Loading...';\n\n    tableColumns = [\n        { name: 'logicalName', title: 'Logical Name', format: 'Md', footer: 'description' },\n        { name: 'name', title: 'Table Name'  },\n    ];\n\n    uploadColumns = [\n        { name: 'file.name', title: 'File Name', format: '' },\n        { name: 'file.size', title: 'Size', format: '' },\n    ];\n\n    public fileConnections: DexihConnection[];\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private route: ActivatedRoute,\n        private router: Router,\n        public formsService: HubFormsService,\n        private fb: FormBuilder) { }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.queryParams,\n                this.hubService.getHubCacheObservable(true),\n                this.hubService.getRemoteLibrariesObservable()\n            ).subscribe(result => {\n                let queryParams = result[0];\n                this.hubCache = result[1];\n                let remoteLibraries = result[2];\n\n                this.fileConnections = this.hubCache.hub.dexihConnections\n                    .filter(c => {\n                        let ref = remoteLibraries.connections.find(con =>\n                            c.connectionAssemblyName === con.connectionAssemblyName\n                            && c.connectionClassName === con.connectionClassName);\n\n                        if (ref) {\n                            return (ref.connectionCategory === eConnectionCategory.File || c.purpose !== eConnectionPurpose.Source);\n                        } else {\n                            return false;\n                        }\n                    });\n\n                let connectionKey = +queryParams['connectionKey'];\n                if (!connectionKey) {\n                    if (this.fileConnections.length > 0) {\n                        connectionKey = this.fileConnections[0].key;\n                    }\n                }\n\n                this.bulkLoadForm = this.fb.group({\n                    'connectionKey': [connectionKey],\n                    'formatType': [eTypeCode.Text],\n                    'fileFormatKey': [],\n                    'includeFileName': [false],\n                    'includeFileDate': [false],\n                    'includeFileRowNumber': [false]\n                  });\n\n                this.updateConnection(connectionKey);\n\n                if (this._connectionKeySubscription) { this._connectionKeySubscription.unsubscribe(); }\n                this._connectionKeySubscription = this.bulkLoadForm.controls.connectionKey.valueChanges.subscribe(key => {\n                    this.updateConnection(key);\n                });\n            });\n\n            if (this._flatFilesSubscription) { this._flatFilesSubscription.unsubscribe(); }\n            this._flatFilesSubscription = this.hubService.getFlatFilesObservable().subscribe(flatFileReady => {\n                if (flatFileReady.reference === this.reference) {\n                    this.tables = flatFileReady.tables;\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Files Manage');\n        }\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._flatFilesSubscription) { this._flatFilesSubscription.unsubscribe(); }\n        if (this._connectionKeySubscription) { this._connectionKeySubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    public close() {\n        this.authService.navigateUp();\n    }\n\n    private updateConnection(connectionKey) {\n        this.connection = this.hubCache.getConnection(connectionKey);\n\n        if (!this.connection && connectionKey) {\n            this.hubService.addHubErrorMessage(`The connection with the key ${connectionKey} could not be found.`);\n        } else if (this.connection) {\n            this.pageTitle = 'Load files for ' + this.connection.name;\n            this.showPage = true;\n        }\n    }\n\n    public uploadFile(event) {\n        let files = event.srcElement.files;\n        this.doUpload(files);\n        return false;\n    }\n\n    public filesDrop(files: any) {\n        this.doUpload(files);\n    }\n\n    public doUpload(files) {\n        Array.prototype.forEach.call(files, file => {\n            let bulkLoad = this.bulkLoadForm.value;\n            this.hubService.bulkUploadFiles(bulkLoad.connectionKey, bulkLoad.fileFormatKey, bulkLoad.formatType,\n                bulkLoad.includeFileName, bulkLoad.includeFileDate, bulkLoad.includeFileRowNumber, file.name,\n                this.cancelToken).then(result => {\n                let url = result.url;\n                this.reference = result.reference;\n\n                let fileHandler = new FileHandler(file, url);\n                this.uploadedFiles = this.uploadedFiles.concat(fileHandler);\n                // this.uploadedFiles.push(fileHandler);\n\n                if (this.automaticUpload) {\n                    this.authService.upload(fileHandler).then(status => {\n                        if (status.success) {\n                            this.hubService.addHubSuccessMessage(file.name + ' uploaded.');\n                        } else {\n                            this.hubService.addHubMessage(status);\n                        }\n                    }).catch(reason => {\n                        this.hubService.addHubMessage(reason);\n                    });\n                }\n            }).catch(reason => {\n                this.hubService.addHubMessage(reason);\n            });\n        });\n    }\n\n    public editTable(table: DexihTable) {\n        this.currentTable = table;\n        this.formsService.table(table);\n        this.router.navigate(['table-edit'], { relativeTo: this.route });\n    }\n\n    public applyChanges() {\n        if (this.formsService.hasChanged) {\n            let table = this.formsService.currentForm.value;\n            Object.assign(this.currentTable, table);\n        }\n        this.currentTable = null;\n        this.authService.navigateUp();\n    }\n\n    public cancel() {\n        this.currentTable = null;\n        this.authService.navigateUp();\n    }\n\n    public async saveTables(items: DexihTable[]): Promise<number[]> {\n        let newTables = Object.assign([], this.tables);\n        let keys: number[] = [];\n        for (let i = 0; i < items.length; i++ ) {\n            let table = items[i];\n            let savedTable = await this.hubService.saveTables([table]);\n\n            keys.push(savedTable[0].key);\n\n            // after table is saved, remove from unsaved list.\n            let index = this.tables.findIndex(t => table.key === t.key);\n            newTables.splice(index, 1);\n        };\n\n        this.tables = newTables;\n        return keys;\n    }\n\n    public async createDatalinks(items: DexihTable[]) {\n        let keys = await this.saveTables(items);\n        let tableKeys = keys.join('|');\n        this.router.navigate(['/hub', this.hubCache.hub.hubKey, 'tables', 'datalink-new', tableKeys, 0],\n            { relativeTo: this.route.root });\n    }\n\n    public discardTables(items: DexihTable[]) {\n        let newTables = Object.assign([], this.tables);\n        for (let i = 0; i < items.length; i++ ) {\n            let table = items[i];\n            let index = this.tables.findIndex(t => table.key === t.key);\n            newTables.splice(index, 1);\n        };\n        this.tables = newTables;\n    }\n\n\n    public uploadSelected(items: Array<FileHandler>) {\n        items.forEach(item => {\n            this.authService.upload(item).then(status => {\n                this.hubService.addHubMessage(status);\n            }).catch(reason => {\n                this.hubService.addHubMessage(reason);\n            });\n        });\n    }\n\n    public removeSelected(items: Array<FileHandler>) {\n        items.forEach(item => {\n            let index = this.uploadedFiles.findIndex(c => c.id === item.id);\n            if (index >= 0) {\n                this.uploadedFiles.splice(index, 1);\n            }\n        });\n    }\n\n    public cancelSelected(items: Array<FileHandler>) {\n        items.forEach(item => item.cancel());\n    }\n\n    public canDeactivate(): Promise<boolean> {\n        return new Promise<boolean>((resolve) => {\n            if (this.tables.length > 0) {\n                this.authService.confirmDialog('Unsaved tables!',\n              'Table(s) have not been saved, this action will discard unsaved tables.  Do you want to discard the changes and exit?')\n              .then((confirm) => {\n                  resolve(confirm);\n                }).catch(() => {\n                  resolve(false);\n                });\n          } else {\n            resolve(true);\n          }\n        });\n      }\n\n      // @HostListener allows is to guard against browser refresh, close, etc.\n      @HostListener('window:beforeunload', ['$event'])\n      unloadNotification($event: any) {\n        if (this.tables.length > 0) {\n          $event.returnValue =\n            'Table(s) have not been saved, this action will discard unsaved tables.  Do you want to discard the changes and exit?';\n        }\n      }\n}\n","<section *ngIf=\"hubCache?.hub && (!fileConnections || fileConnections.length === 0)\">\n    <div class=\"alert alert-danger m-3\">\n        There are no files configured.  Create a file based connection, and add at least one file definition.\n        <hr>\n        <div>\n            <a class=\"btn btn-sm btn-primary text-white\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/connections/connection-new/Source\" [title]=\"\">New Connection</a>\n        </div>\n    </div>\n</section>\n\n<div *ngIf=\"fileConnections && fileConnections.length > 0\" class=\"container\">\n    <dexih-widget *ngIf=\"!currentTable\" [title]=\"'Bulk Load: ' + connection?.name\" iconClass=\"fa fa-lg fa-fw fa-files-o\" [showCloseButton]=\"true\" (close)=\"close()\">\n        <form *ngIf=\"bulkLoadForm\" [formGroup]=\"bulkLoadForm\">\n        <div class=\"m-3\">\n            <section>\n                <form-select label=\"Connection\" formControlName=\"connectionKey\" [items]=\"fileConnections\" itemKey=\"key\"\n                    itemName=\"name\" iconClass=\"fa fa-database\" note='The connection where the files will be uploaded to.'>\n                    <a routerLink=\"//hub/{{hubCache.hub.hubKey}}/connections/connection-new/Source\">(<i class=\"fa fa-sticky-note-o\"></i> New )</a>\n                </form-select>\n            </section>\n\n            <div class=\"form-row\">\n                <section class=\"col-md-6\">\n                    <form-select label=\"Format Type\" formControlName=\"formatType\" [items]=\"formatTypes\" itemKey=\"key\"\n                        itemName=\"name\" iconClass=\"fa fa-text\" note='The format of data.'>\n                    </form-select>\n                </section>\n\n                <section class=\"col-md-6\" *ngIf=\"bulkLoadForm.controls.formatType.value == eTypeCode.Text\">\n                    <form-select label=\"File Format\" formControlName=\"fileFormatKey\" placeholder=\"File Format\"\n                        [items]=\"hubCache.hub.dexihFileFormats\" itemKey=\"key\" itemName=\"name\" [enableFilter]=\"false\"\n                        note=\"Specify the file format to use, if not specified, a csv (command separated) format will be used.\"\n                        [allowNullSelect]=\"true\" selectNullMessage=\"Use default (csv) format\">\n                        <a routerLink=\"/hub/{{hubCache.hub.hubKey}}/fileFormats/fileFormat-new\">(<i class=\"fa fa-sticky-note-o\"></i> New )</a>\n                    </form-select>\n                </section>\n            </div>\n\n            <section >\n                <form-checkbox label=\"Include file name field\" formControlName=\"includeFileName\"></form-checkbox>\n                <form-checkbox label=\"Include file date field\" formControlName=\"includeFileDate\"></form-checkbox>\n                <form-checkbox label=\"Include file row field\" formControlName=\"includeFileRowNumber\"></form-checkbox>\n            </section>\n        </div>\n    </form>\n\n        <ul *ngIf=\"connection\" class=\"list-group\">\n            <dexih-widget-section title='Drop Files to Load' [showExpandButton]=\"true\">\n                <div class=\"well my-drop-zone\" dropZone [requireFiles]=\"true\" (dropFiles)=\"filesDrop($event)\" dropAllowedClass=\"nv-file-over\">\n                    Drop Files to Load Here\n                    <div class=\"custom-file w-25 float-right\">\n                        <input type=\"file\" class=\"custom-file-input\" onclick=\"this.value=null\" (change)=\"uploadFile($event)\">\n                        <label class=\"custom-file-label\" for=\"inputGroupFile01\">Choose files</label>\n                    </div>\n                </div>\n            </dexih-widget-section>\n\n            <dexih-widget-section title='Upload Queues' [showExpandButton]=\"true\" [padding]=\"false\">\n                <dexih-table [enableMultiSelect]=\"true\" [columns]=\"uploadColumns\" [data]=\"uploadedFiles\">\n\n                    <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n                        <dexih-button class=\"mr-1\" iconClass=\"fa fa-upload\" buttonClass='btn-primary' (click)=\"uploadSelected(items)\">Upload</dexih-button>\n                        <dexih-button-cancel class=\"mr-1\" (click)=\"cancelSelected(items)\"></dexih-button-cancel>\n                        <dexih-button-delete (click)=\"removeSelected(items)\" text=\"Remove\"></dexih-button-delete>\n                    </ng-template>\n\n                    <ng-template #actions let-items=\"items\">\n                        <div class=\"d-flex align-items-center h-100\">\n                        <form-checkbox [(ngModel)]=\"automaticUpload\" label=\"Automatically upload files when added to the queue.\"></form-checkbox>\n                        </div>\n                    </ng-template>\n\n                    <ng-template #rowStatus select=\"rowStatus\" let-item=\"item\">\n                        <div *ngIf=\"item.isRunning()\" class=\"progress\" style=\"margin-bottom: 0;\">\n                            <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': item.progress + '%' }\"></div>\n                        </div>\n                        <span>\n                            <i class='fa' [ngClass]=\"{\n                                'fa-check': item.status === eFileStatus.Complete, \n                                'fa-exclamation-circle': item.status === eFileStatus.Error,\n                                'fa-ban': item.status === eFileStatus.Cancelled}\"></i>{{item.status}}</span>\n                    </ng-template>\n                </dexih-table>            \n            </dexih-widget-section>\n    \n            <dexih-widget-section title='Tables Created' [showExpandButton]=\"true\" [padding]=\"false\">\n                <dexih-table [enableMultiSelect]=\"true\" [columns]=\"tableColumns\" [data]=\"tables\" (rowClick)=\"editTable($event)\">\n\n                    <ng-template select=\"selectedItemsAction\" #selectedItemsAction let-items=\"items\">\n                        <dexih-button class=\"ml-1\" (click)=\"saveTables(items)\" iconClass=\"fa fa-table\" title=\"Save the selected tables.\">Create Tables</dexih-button>\n                        <dexih-button class=\"ml-1\" (click)=\"createDatalinks(items)\" iconClass=\"fa fa-exchange\" title=\"Save the selected tables, and create datalinks to load them into a staging area.\">Create Datalinks</dexih-button>\n                        <dexih-button-delete class=\"ml-1\"  (click)=\"discardTables(items)\" title=\"Discard the selected tables.\" text=\"Discard\"></dexih-button-delete>\n                    </ng-template>\n    \n                </dexih-table>\n            </dexih-widget-section>\n        </ul>\n    </dexih-widget>\n\n    <dexih-widget *ngIf=\"currentTable\" [title]=\"'Edit table: ' + formsService.currentForm.controls.name.value\" [showCloseButton]=\"true\" (close)=\"closeTable()\">\n        <ng-template #header>\n            <dexih-button-apply (click)=\"applyChanges()\"></dexih-button-apply>\n            <dexih-button-cancel class=\"ml-1\" (click)=\"cancel()\"></dexih-button-cancel>\n        </ng-template>\n        <router-outlet></router-outlet>\n    </dexih-widget>\n</div>","import { Component, OnInit, OnDestroy, HostListener } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubService } from '../../hub.service';\nimport { Observable, BehaviorSubject, Subscription, combineLatest} from 'rxjs';\nimport { HubCache, FileProperties, eCacheStatus, ConnectionTables, updateStrategies } from '../../hub.models';\nimport { Message, FileHandler, eFileStatus, CancelToken } from '../../../+auth/auth.models';\nimport { DexihTable, eFlatFilePath, DexihConnection, eConnectionCategory, eFlatFilePathItems, eConnectionPurpose,\n    ConnectionReference, RemoteLibraries, eUpdateStrategy, eUpdateStrategyItems } from '../../../shared/shared.models';\n\n\n@Component({\n    selector: 'files-manage',\n    templateUrl: './files-manage.component.html'\n})\nexport class FilesManageComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n\n    public entityType = 'Table';\n\n    public canEdit = false;\n    public tableKey: number;\n    public table: DexihTable;\n    public connectionReference: ConnectionReference;\n    public updateStrategy: eUpdateStrategy = eUpdateStrategy.Reload;\n\n    public updateStrategies = updateStrategies;\n\n    public path = eFlatFilePath.None;\n    public localPath: string;\n    public eFlatFilePath = eFlatFilePath;\n    public eFlatFilePathItems = eFlatFilePathItems.filter(c => c.key > 0);\n    public eFileStatus = eFileStatus;\n\n    public connectionTables: ConnectionTables[];\n\n    public remoteLibraries: RemoteLibraries;\n\n    public hubCache: HubCache;\n\n    public automaticUpload = true;\n\n    public uploadedFiles: FileHandler[] = [];\n    public cancelToken: CancelToken = new CancelToken();\n\n    pageTitle = 'Manage Files';\n    showPage = false;\n    showPageMessage = 'Loading...';\n\n    columns = [\n        { name: 'fileName', title: 'File Name', format: '' },\n        { name: 'length', title: 'Size', format: '' },\n        { name: 'lastModified', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<FileProperties>>(null);\n    tableData: Observable<Array<FileProperties>> = this._tableData.asObservable();\n\n    uploadColumns = [\n        { name: 'file.name', title: 'File Name', format: '' },\n        { name: 'file.size', title: 'Size', format: '' },\n    ];\n\n    public fileConnections: DexihConnection[];\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private route: ActivatedRoute,\n        private router: Router) { }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.params,\n                this.route.queryParams,\n                this.hubService.getHubCacheObservable(true),\n                this.hubService.getRemoteLibrariesObservable(),\n            ).subscribe(result => {\n                let params = result[0];\n                let queryParams = result[1];\n                this.hubCache = result[2];\n                this.remoteLibraries = result[3];\n\n                // if (this.hubCache.status !== eCacheStatus.Loaded) { return; }\n\n                // if the connection is a file connection or not a source connection\n                this.fileConnections = this.hubCache.hub.dexihConnections\n                    .filter(c => {\n                        let ref = this.remoteLibraries.connections.find(con =>\n                            c.connectionAssemblyName === con.connectionAssemblyName\n                            && c.connectionClassName === con.connectionClassName);\n                        if (ref) {\n                            return (ref.connectionCategory === eConnectionCategory.File || c.purpose !== eConnectionPurpose.Source);\n                        } else {\n                            return false;\n                        }\n                    });\n\n                let connectionTables = this.hubCache.getConnectionTables();\n\n                this.connectionTables = connectionTables.filter(c => {\n                    if (c.dexihTables.length > 0) {\n                        return this.fileConnections.find(fc => c.key === fc.key) == null ? false : true;\n                    }\n                });\n\n                let hasChanged = false;\n                this.tableKey = +queryParams['tableKey'];\n                if (!this.tableKey) {\n                    if (this.connectionTables.length > 0 && this.connectionTables[0].dexihTables.length > 0) {\n                        this.tableKey = this.connectionTables[0].dexihTables[0].key;\n                        hasChanged = true;\n                    }\n                }\n\n                this.path = +queryParams['path'];\n                if (!this.path) {\n                    this.path = eFlatFilePath.Incoming;\n                    hasChanged = true;\n                }\n\n                if (hasChanged) {\n                    this.router.navigate(\n                        [],\n                        {\n                          relativeTo: this.route,\n                          queryParams: { tableKey: this.tableKey, path: this.path},\n                          queryParamsHandling: 'merge', // remove to replace all query params by provided\n                        });\n                        return;\n                }\n\n                this.table = this.hubCache.getTable(this.tableKey);\n                let connection = this.hubCache.getConnection(this.table.connectionKey);\n                this.connectionReference = this.remoteLibraries.connections.find(con =>\n                    connection.connectionAssemblyName === con.connectionAssemblyName\n                    && connection.connectionClassName === con.connectionClassName);\n\n                if (!this.table && this.tableKey) {\n                    this.hubService.addHubErrorMessage(`The table with the key ${this.tableKey} could not be found.`);\n                } else if (this.table) {\n                    this.pageTitle = 'Manage files for ' + this.table.name;\n                    this.showPage = true;\n                    this.refreshFiles();\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Files Manage');\n        }\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    updateTable(tableKey: number) {\n        this.router.navigate(\n            [],\n            {\n              relativeTo: this.route,\n              queryParams: { tableKey: tableKey, path: 'incoming'},\n              queryParamsHandling: 'merge', // remove to replace all query params by provided\n            });\n    }\n\n    refreshFiles() {\n        if (this.connectionReference.allowsFlatFiles) {\n            this.hubService.getFileList(this.table, this.path, this.cancelToken).then(result => {\n                this._tableData.next(result);\n            }).catch(reason => {\n                this._tableData.next([]);\n            });\n        }\n    }\n\n    public uploadSelected(items: Array<FileHandler>) {\n        items.forEach(item => {\n            this.authService.upload(item).then(status => {\n                if (status.success) {\n                    this.hubService.addHubSuccessMessage(`File ${item.file.name} uploaded successfully.`)\n                    this.refreshFiles();\n                } else {\n                    this.hubService.addHubMessage(status);\n                }\n            }).catch(reason => {\n                this.hubService.addHubMessage(reason);\n            });\n        });\n    }\n\n    public removeSelected(items: Array<FileHandler>) {\n        items.forEach(item => {\n            let index = this.uploadedFiles.findIndex(c => c.id === item.id);\n            if (index >= 0) {\n                this.uploadedFiles.splice(index, 1);\n            }\n        });\n    }\n\n    public cancelSelected(items: Array<FileHandler>) {\n        items.forEach(item => item.cancel());\n    }\n\n    public deleteSelected(items: Array<FileProperties>) {\n        let files = items.map(c => c.fileName);\n        this.hubService.deleteFiles(this.table, this.path, files, this.cancelToken).then(c => {\n            if (c) {\n                this.refreshFiles();\n            }\n        }).catch();\n    }\n\n    public moveSelected(items: Array<FileProperties>, toPath: eFlatFilePath) {\n        let files = items.map(c => c.fileName);\n        this.hubService.moveFiles(this.table, this.path, toPath, files, this.cancelToken).then(c => {\n            if (c) {\n                this.refreshFiles();\n            }\n        }).catch(reason => {\n            this.hubService.addHubMessage(status);\n        });\n}\n\n    public downloadSelected(items: Array<FileProperties>) {\n        let files = items.map(c => c.fileName);\n        this.hubService.downloadFiles(this.table, this.path, files, this.cancelToken).then(c => {\n            if (c) {\n                this.refreshFiles();\n            }\n        }).catch();\n    }\n\n    public preview(item: FileProperties) {\n        this.router.navigate(['hub', this.hubCache.hub.hubKey, 'summary', 'files', 'manage', this.tableKey, this.path, item.fileName]);\n    }\n\n    public close() {\n        this.authService.navigateUp();\n    }\n\n    public uploadFile(event) {\n        let files = event.srcElement.files;\n        this.doUpload(files);\n        return false;\n    }\n\n    public doUpload(files) {\n        Array.prototype.forEach.call(files, file => {\n            this.hubService.uploadFile(this.table, this.path, this.updateStrategy, file.name, this.cancelToken).then(url => {\n                let fileHandler = new FileHandler(file, url);\n                if (this.automaticUpload) {\n                    this.authService.upload(fileHandler).then(status => {\n                        if (status.success) {\n                            this.hubService.addHubSuccessMessage(`File ${file.name} uploaded successfully.`)\n                            this.refreshFiles();\n                        } else {\n                            this.hubService.addHubMessage(status);\n                        }\n                    }).catch(reason => {\n                        this.hubService.addHubMessage(reason);\n                    });\n\n                }\n                this.uploadedFiles.push(fileHandler);\n                this.uploadedFiles = [...this.uploadedFiles];\n            }).catch(reason => {\n                this.hubService.addHubMessage(reason);\n            });\n        });\n    }\n\n    public filesDrop(files: any) {\n        this.doUpload(files);\n    }\n}\n","<div *ngIf=\"!connectionTables || connectionTables.length === 0\" class=\"alert alert-danger m-3\">\n    There are no files configured.  Create a file based connection, and add at least one file definition.\n    <hr>\n    <div>\n        <dexih-button-new routerLink=\"/hub/{{hubCache?.hub.hubKey}}/connections/connection-new/Source\" text=\"New Connection\" [autoCompact]=\"false\"></dexih-button-new>\n        <dexih-button *ngFor=\"let connection of fileConnections\" routerLink=\"/hub/{{hubCache?.hub.hubKey}}/connections/tables/table-new/{{connection.key}}\" [autoCompact]=\"false\" [title]=\"\">New Table ({{connection.name}})</dexih-button>\n    </div>\n</div>\n\n<div *ngIf=\"connectionTables && connectionTables.length > 0\" class=\"container\">\n    <dexih-widget [title]=\"'Manage Files: ' + table?.name\" iconClass=\"fa fa-lg fa-fw fa-table\" [showCloseButton]=\"true\"\n        (close)=\"close()\"     >\n        <ng-template #header>\n            <dexih-button-dropdown class=\"mr-1\" iconClass=\"fa fa-file-o\" text=\"New File\">\n                    <a *ngFor=\"let connection of fileConnections\" class=\"dropdown-item\" routerLink=\"/hub/{{hubCache?.hub.hubKey}}/connections/tables/table-new/{{connection.key}}\" [title]=\"\">{{connection.name}}</a>\n            </dexih-button-dropdown>\n            <dexih-button-dropdown *ngIf=\"connectionReference?.allowFlatFiles && table?.autoManageFiles\" iconClass=\"fa fa-filter\" [text]=\"eFlatFilePath[path]\" title=\"Select the file location\" [pullRight]=\"true\">\n                    <a *ngFor=\"let item of eFlatFilePathItems\" class=\"dropdown-item\" [class.active]=\"path=='item.name'\" routerLinkActive=\"active\" data-toggle=\"tab\" routerLink=\".\" [queryParams]=\"{tableKey: tableKey, path: item.key}\">\n                            <i class=\"fa fa-elipsis-h\"></i>{{item.name}}</a>\n            </dexih-button-dropdown>\n        </ng-template>\n\n        <ul *ngIf=\"table\" class=\"list-group\">\n            <li class=\"list-group-item\">\n                <section>\n                    <form-select label=\"Flat File\" [(ngModel)]=\"tableKey\" [ngModelOptions]=\"{standalone: true}\"\n                        (ngModelChange)=\"updateTable($event)\" [items]=\"connectionTables\" parentName=\"name\" childItems=\"dexihTables\"\n                        itemKey=\"key\" itemName=\"logicalName\" note=\"Select the flat file to manage\">\n                    </form-select>\n                </section>\n                <section *ngIf=\"!connectionReference?.allowFlatFiles\">\n                    <form-select label=\"Update Strategy\" [(ngModel)]=\"updateStrategy\" [ngModelOptions]=\"{standalone: true}\"\n                        [items]=\"updateStrategies\" itemKey=\"key\" itemName=\"description\" iconClass=\"fa fa-database\"\n                        note='Specify how records should be inserted/updated in the target table.'\n                        >\n                    </form-select>\n                </section>\n            </li>\n            <li class=\"list-group-item list-group-item-info rounded-0\">\n                <h5>Drop Files to Upload</h5>\n            </li>\n            <li class=\"list-group-item \">\n                <div class=\"well my-drop-zone\" dropZone [requireFiles]=\"true\" (dropFiles)=\"filesDrop($event)\" dropAllowedClass=\"nv-file-over\">\n                    Drop Files to Upload Here\n                    <div class=\"custom-file w-25 float-right\">\n                        <input type=\"file\" class=\"custom-file-input\" onclick=\"this.value=null\" (change)=\"uploadFile($event)\">\n                        <label class=\"custom-file-label\" for=\"inputGroupFile01\">Choose files</label>\n                    </div>\n                </div>\n            </li>\n            <li class=\"list-group-item list-group-item-info  rounded-0\">\n                <h5>Upload Queue</h5>\n            </li>\n            <li class=\"list-group-item p-0\">\n                <dexih-table [enableMultiSelect]=\"true\" [columns]=\"uploadColumns\" [data]=\"uploadedFiles\">\n\n                    <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n                        <dexih-button class=\"mr-1\" iconClass=\"fa fa-upload\" buttonClass='btn-primary' (click)=\"uploadSelected(items)\">Upload</dexih-button>\n                        <dexih-button-cancel class=\"mr-1\" (click)=\"cancelSelected(items)\"></dexih-button-cancel>\n                        <dexih-button-delete (click)=\"removeSelected(items)\" text=\"Remove\"></dexih-button-delete>\n                    </ng-template>\n\n                    <ng-template #actions let-items=\"items\">\n                        <section>\n                            <form-checkbox [(ngModel)]=\"automaticUpload\" label=\"Automatically upload files when added to the queue.\"></form-checkbox>\n                        </section>\n                    </ng-template>\n\n                    <ng-template #rowStatus select=\"rowStatus\" let-item=\"item\">\n                        <div *ngIf=\"item.isRunning()\" class=\"progress\" style=\"margin-bottom: 0;\">\n                            <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': item.progress + '%' }\"></div>\n                        </div>\n                        <span >\n                            <i class='fa' [ngClass]=\"{\n                                'fa-check': item.status === eFileStatus.Complete, \n                                'fa-exclamation-circle': item.status === eFileStatus.Error,\n                                'fa-ban': item.status === eFileStatus.Cancelled}\"></i>{{item.status}}</span>\n                    </ng-template>\n                </dexih-table>\n            </li>\n            <ng-template [ngIf]=\"connectionReference?.allowFlatFiles\">\n            <li class=\"list-group-item list-group-item-info rounded-0\">\n                <h5>Files (Local directory:\n                    <a href='file://///{{localPath}}'>{{localPath}}</a>)</h5>\n\n            </li>\n            <li class=\"list-group-item p-0\">\n                <dexih-table [enableMultiSelect]=\"true\" [columns]=\"columns\" [dataObservable]=\"tableData\">\n\n                    <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n                        <dexih-button-delete class=\"mr-1\" (click)=\"deleteSelected(items)\"></dexih-button-delete>\n                        <dexih-button-download class=\"mr-1\" (click)=\"downloadSelected(items)\"></dexih-button-download>\n                        <dexih-button-dropdown class=\"mr-1\" iconClass=\"fa fa-mail-forward\" text=\"Move\" [pullRight]=\"true\">\n                            <a class=\"dropdown-item\" *ngIf=\"path != eFlatFilePath.Incoming\" (click)=\"moveSelected(items, eFlatFilePath.Incoming)\">To Incoming</a>\n                            <a class=\"dropdown-item\" *ngIf=\"path != eFlatFilePath.Outgoing\" (click)=\"moveSelected(items, eFlatFilePath.Outgoing)\">To Processed</a>\n                            <a class=\"dropdown-item\" *ngIf=\"path != eFlatFilePath.Processed\" (click)=\"moveSelected(items, eFlatFilePath.Processed)\">To Processed</a>\n                            <a class=\"dropdown-item\" *ngIf=\"path != eFlatFilePath.Rejected\" (click)=\"moveSelected(items, eFlatFilePath.Rejected)\">To Rejected</a>\n                        </dexih-button-dropdown>\n                    </ng-template>\n\n                    <ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n                        <dexih-button-preview [routerLink]=\"['/hub', hubCache?.hub.hubKey, 'summary', 'files', 'manage', tableKey, 'file-preview', path, item.fileName]\"></dexih-button-preview>\n                    </ng-template>\n\n                    <ng-template #actions let-items=\"items\">\n                        <dexih-button-dropdown *ngIf=\"table?.autoManageFiles\" class=\"mr-1\" buttonClass=\"btn-primary\" iconClass=\"fa fa-filter\" [text]=\"eFlatFilePath[path]\"\n                            title=\"Select the file location\" [pullRight]=\"true\">\n                            <a *ngFor=\"let item of eFlatFilePathItems\" class=\"dropdown-item\" [class.active]=\"path=='item.name'\" routerLinkActive=\"active\" data-toggle=\"tab\" routerLink=\".\" [queryParams]=\"{tableKey: tableKey, path: item.key}\">\n                                <i class=\"fa fa-elipsis-h\"></i>{{item.name}}</a>\n                        </dexih-button-dropdown>\n                        <dexih-button-refresh (click)=\"refreshFiles()\"></dexih-button-refresh>\n                    </ng-template>\n                </dexih-table>\n            </li>\n        </ng-template>\n        </ul>\n    </dexih-widget>\n</div>","export { FilesManageComponent } from './files-manage/files-manage.component';\nexport { FilesBulkLoadComponent } from './files-bulk-load/files-bulk-load.component';\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { ColumnValidationEditComponent, ColumnValidationIndexComponent } from './columnValidation';\nimport { ConnectionEditComponent, ConnectionImportComponent, ConnectionIndexComponent } from './connection';\nimport { ImportComponent, ExportComponent } from './copy';\nimport { DatajobIndexComponent } from './datajob';\nimport { DatalinkIndexComponent, DatalinkNewComponent } from './datalink';\nimport { DatalinkPreviewDataComponent } from './datalink/datalink-preview-data';\nimport { FileFormatIndexComponent } from './fileFormat';\nimport { FilesManageComponent, FilesBulkLoadComponent } from './files';\nimport { BaseRouting } from './hub.base.routing';\nimport { HubService } from './hub.service';\nimport { HubSharedModule } from './hub.shared.module';\nimport { HubVariableEditComponent, HubVariableIndexComponent } from './hubVariable';\nimport { ItemEditGuard } from './item-edit.guard';\nimport { ManageUsersIndexComponent } from './manage/manage-users-index/manage-users-index.component';\nimport { RemoteAgentEditComponent, RemoteAgentIndexComponent } from './remoteAgent';\nimport { ResultsIndexComponent } from './results';\nimport { ResultsViewModule } from './results/results-view/results-view.module';\nimport { SharedDataIndexComponent } from './sharedData/sharedData-index.component';\nimport { TableIndexComponent } from './table/table-index';\nimport { CustomFunctionIndexComponent, CustomFunctionEditComponent, CustomFunctionParameterComponent } from './customFunction';\nimport { DatalinkTestIndexComponent, DatalinkTestNewComponent } from './test'\nimport { ViewIndexComponent } from './view/view-index';\nimport { ViewEditComponent } from './view/view-edit';\nimport { DashboardIndexComponent } from './dashboard';\nimport { ApiIndexComponent } from './api/api-index';\nimport { ApiEditComponent } from './api/api-edit';\nimport { DatalinkRunComponent } from './datalink/datalink-run/datalink-run.component';\nimport { SearchModule} from './search';\nimport { DatajobRunComponent } from './datajob/datajob-run/datajob-run.component';\nimport { ListOfValuesEditComponent } from './listOfValues/listOfValues-edit';\nimport { ListOfValuesIndexComponent } from './listOfValues/listOfValues-index';\nimport { TagsComponent } from './tags/tags.component';\n\n@NgModule({\n    imports: [\n        SharedModule,\n        BaseRouting,\n        ReactiveFormsModule,\n        HubSharedModule,\n        ResultsViewModule,\n        SearchModule,\n    ],\n    declarations: [\n        ConnectionIndexComponent,\n        ConnectionEditComponent,\n        ConnectionImportComponent,\n        DatalinkIndexComponent,\n        DatalinkPreviewDataComponent,\n        DatalinkRunComponent,\n        DatajobRunComponent,\n        TableIndexComponent,\n        DatalinkNewComponent,\n        RemoteAgentIndexComponent,\n        RemoteAgentEditComponent,\n        ResultsIndexComponent,\n        DatajobIndexComponent,\n        ColumnValidationIndexComponent, ColumnValidationEditComponent,\n        FileFormatIndexComponent,\n        ViewIndexComponent,\n        ApiIndexComponent, ApiEditComponent,\n        HubVariableEditComponent, HubVariableIndexComponent,\n        ImportComponent, ExportComponent,\n        FilesManageComponent,\n        ManageUsersIndexComponent,\n        SharedDataIndexComponent,\n        CustomFunctionIndexComponent, CustomFunctionEditComponent, CustomFunctionParameterComponent,\n        DatalinkTestIndexComponent, DatalinkTestNewComponent,\n        DashboardIndexComponent,\n        ListOfValuesEditComponent, ListOfValuesIndexComponent,\n        TagsComponent\n    ],\n    providers: [ ItemEditGuard ],\n    exports: [ ]\n})\nexport class HubBaseModule {\n\n    static forRoot(): ModuleWithProviders<HubBaseModule> {\n        return {\n            ngModule: HubBaseModule,\n            providers: [HubService, ItemEditGuard]\n        };\n    }\n}\n","import { Route, RouterModule, Routes } from '@angular/router';\n\nimport { ColumnValidationEditComponent, ColumnValidationIndexComponent } from './columnValidation';\nimport { ConnectionEditComponent } from './connection/connection-edit';\nimport { ConnectionImportComponent } from './connection/connection-import';\nimport { ConnectionIndexComponent } from './connection/connection-index';\nimport { ImportComponent, ExportComponent } from './copy';\nimport { DatajobIndexComponent } from './datajob/datajob-index';\nimport { DatalinkIndexComponent } from './datalink/datalink-index';\nimport { DatalinkNewComponent } from './datalink/datalink-new';\nimport { DatalinkPreviewDataComponent } from './datalink/datalink-preview-data';\nimport { FileFormatEditComponent, FileFormatIndexComponent } from './fileFormat';\nimport { FilesManageComponent, FilesBulkLoadComponent } from './files';\nimport { HubVariableEditComponent, HubVariableIndexComponent } from './hubVariable';\nimport { ManageUsersIndexComponent } from './manage/manage-users-index/manage-users-index.component';\nimport { RemoteAgentEditComponent, RemoteAgentIndexComponent } from './remoteAgent';\nimport { ResultsIndexComponent, ResultsViewComponent } from './results';\nimport { SharedDataIndexComponent } from './sharedData/sharedData-index.component';\nimport { TableIndexComponent } from './table/table-index';\nimport { TablePreviewDataComponent } from './table/table-preview-data';\nimport { CustomFunctionIndexComponent, CustomFunctionEditComponent } from './customFunction';\nimport { ItemEditGuard } from './item-edit.guard';\nimport { DatalinkTestIndexComponent, DatalinkTestNewComponent } from './test'\nimport { ViewEditComponent } from './view/view-edit';\nimport { ViewIndexComponent } from './view/view-index';\nimport { ApiEditComponent } from './api/api-edit';\nimport { ApiIndexComponent } from './api/api-index';\nimport { DatalinkRunComponent } from './datalink/datalink-run/datalink-run.component';\nimport { SearchComponent } from './search';\nimport { DashboardEditComponent, DashboardIndexComponent } from './dashboard';\nimport { DatajobRunComponent } from './datajob/datajob-run/datajob-run.component';\nimport { DexihDashboard, DexihView, DexihApi } from '../shared/shared.models';\nimport { ListOfValuesEditComponent } from './listOfValues/listOfValues-edit';\nimport { ListOfValuesIndexComponent } from './listOfValues/listOfValues-index';\nimport { TagsComponent } from './tags/tags.component';\n\nconst resultViewRoute: Route = { path: 'result-view/:auditConnectionKey/:auditKey', children: [\n        {path: '', pathMatch: 'full', component: ResultsViewComponent, data: { pageTitle: 'Detailed Result' }},\n        { path: 'result-view/:auditConnectionKey/:auditKey', children: [\n            {path: '', pathMatch: 'full', component: ResultsViewComponent, data: { pageTitle: 'Child Result' }},\n            { path: 'result-view/:auditConnectionKey/:auditKey', children: [\n                {path: '', pathMatch: 'full', component: ResultsViewComponent, data: { pageTitle: 'GrandChild Result' }},\n            ]\n        }\n        ]\n    }\n    ]\n};\n\nconst tableRoutes: Routes = [\n    { path: 'table-edit/:tableKey', data: { pageTitle: 'Edit Table', action: 'edit'},\n        loadChildren: () => import('./table/table-edit/table-edit.module').then(m => m.TableEditModule)},\n    { path: 'table-new',  data: {  pageTitle: 'New Table', action: 'new'},\n        loadChildren: () => import('./table/table-edit/table-edit.module').then(m => m.TableEditModule)},\n    { path: 'table-new/:connectionKey',  data: {  pageTitle: 'New Table', action: 'new'},\n        loadChildren: () => import('./table/table-edit/table-edit.module').then(m => m.TableEditModule)},\n    { path: 'datalink-new/:sourceTableKeys/:targetConnectionKey',\n        component: DatalinkNewComponent, data: { action: 'new', pageTitle: 'New Datalink' } },\n    { path: 'table-preview/:tableKey', component: TablePreviewDataComponent, data: { pageTitle: 'Preview Table' } },\n];\n\nconst datalinkRoutes: Routes = [\n    { path: 'datalink-edit', loadChildren: () => import('./datalink/datalink-edit/datalink-edit.module').then(m => m.DatalinkEditModule)},\n    { path: 'datalink-preview/:datalinkKey/:previewUpdates', component: DatalinkPreviewDataComponent,\n        data: { pageTitle: 'Preview Datalink' } },\n    { path: 'table-preview/:tableKey', component: TablePreviewDataComponent, data: { pageTitle: 'Preview Table' } },\n    { path: 'datalink-run/:datalinkKeys', component: DatalinkRunComponent, data: { pageTitle: 'Run Datalink' } },\n    resultViewRoute\n];\n\nconst tablesRoute: Route = { path: 'tables', data: { pageTitle: 'Tables' }, children: (<Routes>[\n    {path: '', pathMatch: 'full', component: TableIndexComponent, data: { pageTitle: 'Tables' }},\n    {path: '', children: (<Routes>tableRoutes)},\n    {path: '', children: (<Routes>datalinkRoutes)},\n    ])\n};\n\nconst connectionRoutes: Routes = [\n    { path: 'connection-edit/:connectionKey', component: ConnectionEditComponent, canDeactivate: [ItemEditGuard],\n        data: {action: 'edit', pageTitle: 'Edit Connection' }},\n    { path: 'connection-import/:connectionKey', data: { pageTitle: 'Import Tables'}, children: [\n        {path: '', pathMatch: 'full', component: ConnectionImportComponent, data: { pageTitle: 'Import Tables' }} ,\n        { path: 'table-edit/:tableKey', data: { pageTitle: 'Edit Table', action: 'edit'},\n                loadChildren: () => import('./table/table-edit/table-edit.module').then(m => m.TableEditModule)},\n        { path: 'datalink-new/:sourceTableKeys/:targetConnectionKey',\n        component: DatalinkNewComponent, data: { action: 'new', pageTitle: 'New Datalink' } },\n    ]},\n    { path: 'connection-new/:purpose', component: ConnectionEditComponent, data: {action: 'new', pageTitle: 'New Connection' }},\n    { path: 'connection-copy/:connectionKey', component: ConnectionEditComponent, data: {action: 'copy', pageTitle: 'New Connection' }}\n];\n\nconst connectionsRoute: Route =  { path: 'connections', data: {pageTitle: 'Connections' }, children: (<Routes>[\n    {path: '', pathMatch: 'full', component: ConnectionIndexComponent, data: {pageTitle: 'Connections' }},\n    {path: '', children: (<Routes>connectionRoutes)},\n    tablesRoute\n    ])\n};\n\nconst agentRoutes: Routes = [\n    { path: '', pathMatch: 'full', component: RemoteAgentIndexComponent, data: { pageTitle: 'Remote Agents' }},\n    { path: 'agent-edit/:remoteAgentKey/:remoteAgentHubKey', component: RemoteAgentEditComponent, data: { pageTitle: 'Edit Agent' }}\n];\n\nconst agentsRoute: Route = { path: 'agents', data: { pageTitle: 'Remote Agents' }, children: agentRoutes\n};\n\nconst resultRoutes: Routes = [\n    { path: 'results', data: { pageTitle: 'Execution Results' }, children: [\n        {path: '', pathMatch: 'full', component: ResultsIndexComponent, data: { pageTitle: 'Execution Results' } },\n        resultViewRoute\n    ] },\n    resultViewRoute\n];\n\nconst manageRoute: Route = { path: 'manage', children: (<Routes>[\n    { path: 'manage-users', component: ManageUsersIndexComponent, data: {pageTitle: 'Manage Users'}}\n    ])\n};\n\nconst importRoute: Route = { path: 'import', children: (<Routes>[\n    { path: '', pathMatch: 'full', component: ImportComponent, data: {pageTitle: 'Import Objects'}}\n    ])\n};\n\nconst exportRoute: Route = { path: 'export', children: (<Routes>[\n    { path: '', pathMatch: 'full', component: ExportComponent, data: {pageTitle: 'Export Objects'}}\n    ])\n};\n\nconst sharedDataRoute: Route = { path: 'sharedData', data: { pageTitle: 'Shared Data' }, children: (<Routes>[\n    {path: '', pathMatch: 'full', component: SharedDataIndexComponent},\n    {path: '', children: [\n        { path: 'table-preview/:tableKey', component: TablePreviewDataComponent, data: { pageTitle: 'Preview Table' } },\n        { path: 'datalink-preview/:datalinkKey', component: DatalinkPreviewDataComponent, data: { pageTitle: 'Preview Datalink' } },\n        { path: 'dashboard-preview/:dashboardKey', data: { pageTitle: 'Preview Dashboard', action: 'edit'},\n        loadChildren: () => import('./dashboard/dashboard-edit/dashboard-edit.module').then(m => m.DashboardEditModule)},\n        { path: 'view-preview/:viewKey', component: ViewEditComponent, data: { pageTitle: 'Preview View', action: 'edit' } },\n        { path: 'api-preview/:apiKey', component: ApiEditComponent, data: { pageTitle: 'Preview Api', action: 'edit' } }\n    ]}])\n};\n\nconst customFunctionRoutes: Routes = [\n    { path: 'customFunction-edit/:customFunctionKey', component: CustomFunctionEditComponent, canDeactivate: [ItemEditGuard],\n        data: { action: 'edit', pageTitle: 'Edit Custom Function'}},\n    { path: 'customFunction-new', component: CustomFunctionEditComponent, data: { action: 'new', pageTitle: 'New Custom Function'}},\n];\n\nconst customFunctionRoute: Route = { path: 'customFunctions', data: { pageTitle: 'Custom Functions' }, children: (<Routes>[\n    {path: '', pathMatch: 'full', component: CustomFunctionIndexComponent},\n    {path: '', children: (<Routes>customFunctionRoutes)},\n    ])\n};\n\nconst columnValidationRoutes: Routes = [\n    { path: 'columnValidation-edit/:validationKey', component: ColumnValidationEditComponent, canDeactivate: [ItemEditGuard],\n        data: { action: 'edit', pageTitle: 'Edit Validation'}},\n    { path: 'columnValidation-new', component: ColumnValidationEditComponent, data: { action: 'new', pageTitle: 'New Validation'}},\n];\n\nconst columnValidationsRoute: Route = { path: 'columnValidations', data: { pageTitle: 'Column Validations' }, children: (<Routes>[\n    {path: '', pathMatch: 'full', component: ColumnValidationIndexComponent},\n    {path: '', children: (<Routes>columnValidationRoutes)},\n    ])\n};\n\nconst fileFormatRoutes: Routes = [\n    { path: 'fileFormat-edit/:fileFormatKey', component: FileFormatEditComponent, canDeactivate: [ItemEditGuard],\n        data: { action: 'edit', pageTitle: 'Edit FileFormat'}},\n    { path: 'fileFormat-new', component: FileFormatEditComponent, data: { action: 'new', pageTitle: 'New FileFormat'}},\n];\n\nconst fileFormatsRoute: Route = { path: 'fileFormats', data: { pageTitle: 'File Formats' }, children: (<Routes>[\n    {path: '', pathMatch: 'full', component: FileFormatIndexComponent},\n    {path: '', children: (<Routes>fileFormatRoutes)}\n    ])\n};\n\nconst viewRoutes: Routes = [\n    { path: 'view-edit/:viewKey', component: ViewEditComponent, canDeactivate: [ItemEditGuard],\n        data: { action: 'edit', pageTitle: 'Edit View'}},\n    { path: 'view-new', component: ViewEditComponent, data: { action: 'new', pageTitle: 'New View'}},\n];\n\nconst viewRoute: Route = { path: 'views', data: { pageTitle: 'Views' }, children: (<Routes>[\n    {path: '', pathMatch: 'full', component: ViewIndexComponent},\n    {path: '', children: (<Routes>viewRoutes)}\n    ])\n};\n\nconst dashboardRoutes: Routes = [\n    { path: 'dashboard-edit/:dashboardKey', data: { pageTitle: 'Edit Dashboard', action: 'edit'},\n        loadChildren: () => import('./dashboard/dashboard-edit/dashboard-edit.module').then(m => m.DashboardEditModule)},\n    { path: 'dashboard-new',  data: {  pageTitle: 'New Dashboard', action: 'new'},\n        loadChildren: () => import('./dashboard/dashboard-edit/dashboard-edit.module').then(m => m.DashboardEditModule)},\n];\n\nconst dashboardRoute: Route = { path: 'dashboards', data: { pageTitle: 'Dashboards' }, children: (<Routes>[\n    {path: '', pathMatch: 'full', component: DashboardIndexComponent},\n    {path: '', children: (<Routes>dashboardRoutes)}\n    ])\n};\n\nconst lovRoutes: Routes = [\n    { path: 'listOfValues-edit/:listOfValuesKey', component: ListOfValuesEditComponent, canDeactivate: [ItemEditGuard],\n        data: { action: 'edit', pageTitle: 'Edit List Of Values'}},\n    { path: 'listOfValues-new', component: ListOfValuesEditComponent, data: { action: 'new', pageTitle: 'New List of Values'}},\n];\n\nconst lovRoute: Route = { path: 'listOfValues', data: { pageTitle: 'List of Values' }, children: (<Routes>[\n    {path: '', pathMatch: 'full', component: ListOfValuesIndexComponent},\n    {path: '', children: (<Routes>lovRoutes)}\n    ])\n};\n\nconst apiRoutes: Routes = [\n    { path: 'api-edit/:apiKey', component: ApiEditComponent, canDeactivate: [ItemEditGuard],\n        data: { action: 'edit', pageTitle: 'Edit Api'}},\n    { path: 'api-new', component: ApiEditComponent, data: { action: 'new', pageTitle: 'New Api'}},\n];\n\nconst apiRoute: Route = { path: 'apis', data: { pageTitle: 'Apis' }, children: (<Routes>[\n    {path: '', pathMatch: 'full', component: ApiIndexComponent},\n    {path: '', children: (<Routes>apiRoutes)}\n    ])\n};\nconst hubVariableRoutes: Routes = [\n    { path: 'hubVariable-edit/:hubVariableKey', component: HubVariableEditComponent, data: { action: 'edit',\n        pageTitle: 'Edit Hub Variable'}},\n    { path: 'hubVariable-new', component: HubVariableEditComponent, data: { action: 'new', pageTitle: 'New Hub Variable'}},\n];\n\nconst hubVariablesRoute: Route = { path: 'hubVariables', data: { pageTitle: 'Hub Variables' }, children: (<Routes>[\n    {path: '', pathMatch: 'full', component: HubVariableIndexComponent},\n    {path: '', children: (<Routes>hubVariableRoutes)}\n    ])\n};\n\nconst tagsRoute: Route = { path: 'tags', component: TagsComponent}\n\nconst datalinkTestRoutes: Routes = [\n    { path: 'datalinkTest-edit/:datalinkTestKey', data: { pageTitle: 'Edit Datalink Test', action: 'edit'},\n            loadChildren: () => import('./test/datalinkTest-edit/datalinkTest-edit.module').then(m => m.DatalinkTestEditModule)},\n    { path: 'datalinkTest-new',  data: {  pageTitle: 'New Datalink Test', action: 'new'},\n            loadChildren: () => import('./test/datalinkTest-edit/datalinkTest-edit.module').then(m => m.DatalinkTestEditModule)},\n    { path: 'datalinkTest-new/:datalinkKeys', component: DatalinkTestNewComponent,\n        data: {  pageTitle: 'New Datalink Test', action: 'new'}},\n    resultViewRoute\n];\n\nconst datalinkTestsRoute: Route = { path: 'datalinkTests', data: { pageTitle: 'Datalink Tests' }, children: (<Routes>[\n    {path: '', pathMatch: 'full', component: DatalinkTestIndexComponent},\n    {path: '', children: (<Routes>datalinkTestRoutes)},\n    {path: '', children: (<Routes>resultRoutes)},\n    ])\n};\n\nconst filesRoutes: Routes = [\n    { path: 'manage', children: (<Routes> [\n        { path: '', component: FilesManageComponent, data: { action: 'edit', pageTitle: 'Manage Files'}},\n        { path: ':tableKey', data: { action: 'edit', pageTitle: 'Manage Files'}, children: (<Routes> [\n            { path: '', component: FilesManageComponent, data: { action: 'edit', pageTitle: 'Manage Files'}},\n            { path: 'file-preview/:path/:fileName', component: TablePreviewDataComponent, data: { pageTitle: 'Preview File' } }\n        ])}\n    ])},\n    { path: 'bulk-load', children: (<Routes> [\n       {path: '', data: { action: 'new', pageTitle: 'Bulk Load Files'},\n        loadChildren: () => import('./files/files-bulk-load/files-bulk-load.module').then(m => m.FilesBulkLoadModule)},\n       {path: ':connectionKey', data: { action: 'new', pageTitle: 'Bulk Load Files'},\n        loadChildren: () => import('./files/files-bulk-load/files-bulk-load.module').then(m => m.FilesBulkLoadModule)},\n    ])},\n];\n\nconst filesRoute: Route = { path: 'files', data: { pageTitle: 'Files' }, children: (<Routes>[\n    {path: '', children: (<Routes>filesRoutes)}\n    ])\n};\n\nconst datalinksRoute = { path: 'datalinks', data: { pageTitle: 'Data Links' }, children: (<Routes>[\n    {path: '', pathMatch: 'full', data: { pageTitle: 'Data Links' }, component: DatalinkIndexComponent},\n    {path: '', children: (<Routes>datalinkRoutes)},\n    {path: '', children: (<Routes>resultRoutes)},\n    ])\n};\n\n// const publishedRoute: Route = { path: 'published', children: (<Routes>[\n//     { path: '', redirectTo: 'All'},\n//     { path: ':typeFilter', children: (<Routes> [\n//         {path: '', pathMatch: 'full', component: DatalinkIndexComponent, data: { pageTitle: 'Published' }},\n//     {path: '', children: (<Routes>datalinkRoutes)},\n//     {path: '', children: (<Routes>resultRoutes)},\n//     ])}\n//     ])\n// };\n\nconst datajobRoutes: Routes = [\n    { path: 'datajob-edit/:datajobKey', data: { pageTitle: 'Edit Data Job', action: 'edit'},\n            loadChildren: () => import('./datajob/datajob-edit/datajob-edit.module').then(m => m.DatajobEditModule)},\n    { path: 'datajob-new',  data: {  pageTitle: 'New Data Job', action: 'new'},\n            loadChildren: () => import('./datajob/datajob-edit/datajob-edit.module').then(m => m.DatajobEditModule)},\n    { path: 'datajob-run/:datajobKeys', component: DatajobRunComponent, data: { pageTitle: 'Run datajobs' } },\n\n];\n\nconst datajobsRoute: Route = { path: 'datajobs', data: { pageTitle: 'Data Jobs' }, children: (<Routes>[\n    {path: '', pathMatch: 'full', component: DatajobIndexComponent},\n    {path: '', children: (<Routes>datajobRoutes)},\n    {path: '', children: (<Routes>resultRoutes)},\n    ])\n};\n\nconst searchRoute: Route =  { path: 'search',  data: {pageTitle: 'Search'}, children: (<Routes> [\n    { path: '', pathMatch: 'full', redirectTo: '0/' },\n\n    // { path: '', loadChildren: './hub.base.module#HubBaseModule' },\n     { path: ':searchObject/:search', pathMatch: 'full', component: SearchComponent, },\n     { path: ':searchObject/:search', loadChildren: () => import('./hub.base.module').then(m => m.HubBaseModule) }\n  ])\n };\n\nconst routes: Routes = (<Routes>[\n    agentsRoute,\n    connectionsRoute,\n//    publishedRoute,\n    datalinksRoute,\n    tablesRoute,\n    datajobsRoute,\n  // resultsRoute,\n    columnValidationsRoute,\n    customFunctionRoute,\n    fileFormatsRoute,\n    viewRoute,\n    dashboardRoute,\n    lovRoute,\n    apiRoute,\n    hubVariablesRoute,\n    manageRoute,\n    importRoute,\n    exportRoute,\n    sharedDataRoute,\n    filesRoute,\n    datalinkTestsRoute,\n    tagsRoute,\n    searchRoute,\n    { path: '', children : connectionRoutes},\n    { path: '', children : datalinkRoutes},\n    { path: '', children : tableRoutes},\n    { path: '', children : datajobRoutes},\n    { path: '', children : resultRoutes},\n    { path: '', children : customFunctionRoutes},\n    { path: '', children : columnValidationRoutes},\n    { path: '', children : fileFormatRoutes},\n    { path: '', children : viewRoutes},\n    { path: '', children : dashboardRoutes},\n    { path: '', children : lovRoutes},\n    { path: '', children : apiRoutes},\n    { path: '', children : hubVariableRoutes},\n    { path: '', children : filesRoutes},\n    { path: '', children : agentRoutes},\n    { path: '', children : datalinkTestRoutes},\n]);\n\nexport const BaseRouting = RouterModule.forChild(routes);\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\nimport { HubCache, eCacheStatus } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { DexihHubVariable } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n\n  selector: 'dexih-hubVariable-edit-form',\n  templateUrl: './hubVariable-edit.component.html',\n  providers: [HubFormsService]\n})\nexport class HubVariableEditComponent implements OnInit, OnDestroy {\n\n  private hubVariableKey: number;\n\n  private hubCache: HubCache;\n  public action: string; // new or edit\n  public pageTitle: string;\n  public params: Params;\n\n  private _subscription: Subscription;\n  private _formChangeSubscription: Subscription;\n  private _isEncryptedSubscription: Subscription;\n  private isLoaded = false;\n\n  private cancelToken = new CancelToken();\n\n  constructor(private hubService: HubService,\n    private authService: AuthService,\n    public formsService: HubFormsService,\n    private route: ActivatedRoute,\n    private router: Router) {\n  }\n\n  ngOnInit() {\n\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n      ).subscribe(result => {\n        let data = result[0];\n        this.params = result[1];\n        this.hubCache = result[2];\n\n        this.pageTitle = data['pageTitle'];\n        this.action = data['action'];\n\n        if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded ) { return; }\n\n        if (this.isLoaded && this.action === 'new') { return; }\n\n        if (this.isLoaded && this.formsService.hasChanged) {\n            this.authService.confirmDialog('Synchronization warning',\n            'The hub was disconnected, meaning this edit could have been changed by another session.  Would you like to discard the current changes, and reload the latest version?')\n            .then(confirm => {\n                if (confirm) {\n                    this.load();\n                }\n            }).catch(reason => {\n                return;\n            });\n        } else {\n            this.load();\n        }\n\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Edit Variables');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._formChangeSubscription) { this._formChangeSubscription.unsubscribe(); }\n    if (this._isEncryptedSubscription) { this._isEncryptedSubscription.unsubscribe(); }\n    this.cancelToken.cancel();\n  }\n\n  load() {\n    this.isLoaded = true;\n\n    if (this.action === 'edit') {\n      // get the hub key from the route data, and update the service.\n      this.hubVariableKey = + this.params['hubVariableKey'];\n\n      if (!this.hubVariableKey) {\n        this.hubService.addHubErrorMessage('There was no variable specified to edit.');\n        // this.errorMessage = 'There was no validation specified to edit.';\n      } else {\n        if (!this.hubCache.hub || !this.hubCache.hub.dexihHubVariables) {\n          this.hubService.addHubErrorMessage('The hub cache is not loaded.');\n        } else {\n          let hubVariable = this.hubCache.hub.dexihHubVariables.find(c => c.key === this.hubVariableKey);\n          this.formsService.hubVariable(hubVariable);\n        }\n      }\n    }\n\n    if (this.action === 'new') {\n      let hubVariable = new DexihHubVariable();\n      hubVariable.value = '';\n      hubVariable.name = '';\n      this.formsService.hubVariable(hubVariable);\n\n      // update the url with the saved key\n      this._formChangeSubscription = this.formsService.getCurrentFormObservable().subscribe(form => {\n        let key = form.controls.key.value;\n        if (key) {\n          if (history.pushState) {\n            let newUrl = window.location.pathname.replace('/hubVariable-new', `/hubVariable-edit/${key}`)\n            this.router.navigateByUrl(newUrl);\n            this._formChangeSubscription.unsubscribe();\n          }\n        }\n      });\n    }\n\n    this._isEncryptedSubscription = this.formsService.currentForm.controls.isEncrypted.valueChanges.subscribe(isEncrypted => {\n      if (!isEncrypted) {\n        this.formsService.currentForm.controls.valueRaw.setValue('');\n      }\n    });\n  }\n\n  async save() {\n    let form = this.formsService.currentForm;\n\n    let isEncrypted = form.controls.isEncrypted.value;\n    if (isEncrypted) {\n      let valueRaw = form.controls.valueRaw.value;\n        if (valueRaw) {\n          let value = await this.hubService.encrypt(valueRaw, this.cancelToken);\n          form.controls.value.setValue(value);\n          form.controls.valueRaw.setValue(null);\n        }\n      } else {\n        let valueRaw = form.controls.valueRaw.value;\n        form.controls.value.setValue(valueRaw);\n      }\n\n    await this.formsService.save();\n  }\n\n  close() {\n    this.authService.navigateUp();\n  }\n\n}\n","<div class=\"container\">\n\t<dexih-widget \n\ttitle=\"Edit Variable\" \n\ticonClass=\"fa fa-lg fa-fw fa-at\" \n\t[showCloseButton]=\"true\"\n\t[padding]=\"true\"\n\t(close)=\"close()\"\n\t>\n        <ng-template #header>\n            <dexih-button-save *ngIf=\"hubCache.canWrite\" class=\"mr-1\" (click)=\"save()\"></dexih-button-save>\n            <cancel-button [formsService]=\"formsService\"></cancel-button>\n        </ng-template>\n\n\t\t<form *ngIf=\"formsService.currentForm\"  [formGroup]=\"formsService.currentForm\" >\n\t\t\t<!--dummy hidden password to stop chrome/firefox autocompletion password.-->\n\t\t\t<input id=\"fake_user_name\" name=\"fake_user[name]\" style=\"position:absolute; top:-5000px;\" type=\"text\" value=\"Fake Auto-fill\">\n\t\t\t<input id=\"fake_password\" type=\"password\" name=\"fake_password[password]\" style=\"position:absolute; top:-5000px;\" type=\"text\" value=\"Fake Auto-fill\">\n\n\t\t\t<fieldset>\n\n\t\t\t\t\t\t\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Hub Variable Name\" formControlName=\"name\" placeholder=\"Enter the name.\" [autocapitalize]=\"true\" iconClass=\"fa fa-list\" [errors]=\"formsService.formErrors['name']\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input [label]=\"formsService.currentForm.controls.isEnvironmentVariable.value ? 'Environment Variable Name' : 'Hub Variable Value'\" [type]=\"formsService.currentForm.controls.isEncrypted.value ? 'password' : 'text'\" formControlName=\"valueRaw\" placeholder=\"Enter the value.\" iconClass=\"fa fa-list\" [errors]=\"formsService.formErrors['value']\" autocomplete=\"off\">\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<section >\n\t\t\t\t\t<form-checkbox label=\"Encrypt value\" formControlName=\"isEncrypted\" >\n\t\t\t\t\t</form-checkbox>\n\t\t\t\t</section>\n\n\t\t\t\t<section >\n\t\t\t\t\t<form-checkbox label=\"Use an environment variable on the remote agent\" formControlName=\"isEnvironmentVariable\" >\n\t\t\t\t\t</form-checkbox>\n\t\t\t\t</section>\n\n\t\t\t</fieldset>\n\t\t</form>\n \n\t</dexih-widget>\n\n\t<dexih-help class=\"m-3\"  title=\"Hub Variables\" path=\"/assets/help/reference/hubVariable.md\"></dexih-help>\n\n</div>\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { HubCache } from '../../hub.models';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Observable, Subscription, BehaviorSubject, combineLatest} from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DexihHubVariable, DexihHub, eSharedObjectType } from '../../../shared/shared.models';\n\n@Component({\n  selector: 'hubVariable',\n  templateUrl: './hubVariable-index.component.html',\n  styles: []\n})\nexport class HubVariableIndexComponent implements OnInit, OnDestroy {\n  private _subscription: Subscription;\n  private _hubCacheChangeSubscription: Subscription;\n\n    hubCache: HubCache;\n\n    hubVariables: Array<DexihHubVariable>;\n    public eSharedObjectType = eSharedObjectType;\n\n    columns = [\n        { name: 'name', title: 'Name', format: '', tags: 'tags'},\n        { name: 'value', title: 'Value', format: ''},\n        { name: 'isEncrypted', title: 'Encrypted?', format: 'Boolean'},\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar'},\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n        // watch for any changes in the validations.\n        this.watchChanges();\n\n        this._subscription = combineLatest(\n            this.hubService.getHubCacheObservable()\n        ).subscribe(result => {\n          this.hubCache = result[0];\n          this.updateVariables();\n        });\n    } catch (e) {\n        this.hubService.addHubClientErrorMessage(e, 'Hub Variables Index');\n      }\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    deleteHubVariables(variables: Array<DexihHubVariable>) {\n        this.hubService.deleteHubVariables(variables);\n    }\n\n    updateVariables() {\n        if (this.hubCache && this.hubCache.isLoaded()) {\n            let variables = this.hubCache.hub.dexihHubVariables.filter(c => c.isValid).map(c => {\n                return {\n                    key: c.key,\n                    name: c.name,\n                    description: c.description,\n                    updateDate: c.updateDate,\n                    value: c.isEncrypted ? '(Encrypted)' : c.value,\n                    isEncrypted: c.isEncrypted,\n                    tags: this.hubCache.getObjectTags(eSharedObjectType.HubVariable, c.key)\n                }\n            });\n            this._tableData.next(variables);\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    edit(variable: DexihHubVariable) {\n        this.router.navigate(['hubVariable-edit', variable.key], { relativeTo: this.route});\n    }\n\n    export(variables: Array<DexihHubVariable>) {\n        let vars = this.hubCache.hub.dexihHubVariables.filter(c => {\n            return variables.findIndex(d => d.key === c.key) >= 0\n        });\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        hub.dexihHubVariables = vars;\n        let filename = 'hub_variables.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n\n    watchChanges() {\n      // watch the current validation in case it is changed in another session.\n      this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n          if (hubCacheChange.changeClass === eSharedObjectType.HubVariable || hubCacheChange.changeClass === eSharedObjectType.TagObjects) {\n            this.updateVariables();\n          }\n      });\n  }\n}\n","<div class=\"container-fluid\">\n    <dexih-widget title=\"Hub Variables\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-at\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\t>\n \n\n\t\t<dexih-table \n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[dataObservable]=\"tableData\"\n\t\t\t(rowClick)=\"edit($event)\"\n\t\t\t[tags]=\"this.hubCache.hub.dexihTags\"\n\t\t\t>\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-hubVariable=\"item\">\n\t\t\t\t\t<dexih-button-edit class=\"mr-1\" [routerLink]=\"['hubVariable-edit', hubVariable.key]\" queryParamsHandling preserveFragment></dexih-button-edit>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t<dexih-button-save-local class=\"mr-1\" (click)=\"export(items)\"></dexih-button-save-local>\n\t\t\t\t\t<dexih-button-delete *ngIf=\"hubCache.canWrite\" class=\"mr-1\" (click)=\"deleteHubVariables(items)\"></dexih-button-delete>\n\t\t\t\t\t<tags-update-button class=\"mr-1\" [objectType]=\"eSharedObjectType.HubVariable\" [objects]=\"items\" ></tags-update-button>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<dexih-button-new *ngIf=\"hubCache.canWrite\" class=\"mr-1\" [routerLink]=\"['hubVariable-new']\"></dexih-button-new>\n\t\t\t\t</ng-template>\n\t\t</dexih-table>\n\n\t</dexih-widget>\n\t\n\t<dexih-help class=\"m-3\" title=\"Hub Variables\" path=\"/assets/help/reference/hubVariable.md\"></dexih-help>\n\n</div>\n\n\n","export * from './hubVariable-index/hubVariable-index.component';\nexport * from './hubVariable-edit/hubVariable-edit.component';\n","export * from './listOfValues-edit.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\nimport { HubCache, eCacheStatus, ConnectionTables } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest, merge, Subject} from 'rxjs';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { DexihListOfValues, DexihDatalink, eLOVObjectType,\n  DexihColumnBase, eLOVObjectTypeItems, SelectQuery, ListOfValuesItem } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\nimport { InputOutputColumns } from '../../hub.lineage.models';\nimport { FormGroup, FormArray } from '@angular/forms';\n\n@Component({\n\n  selector: 'dexih-listOfValues-edit-form',\n  templateUrl: './listOfValues-edit.component.html',\n  providers: [HubFormsService]\n})\nexport class ListOfValuesEditComponent implements OnInit, OnDestroy {\n\n  private listOfValuesKey: number;\n\n  private hubCache: HubCache;\n  public action: string; // new or edit\n  public pageTitle: string;\n  public params: Params;\n\n  private _subscription: Subscription;\n  private _formChangeSubscription: Subscription;\n  private _sourceChangeSubscription: Subscription;\n  private isLoaded = false;\n\n  private refreshDataSubject: Subject<void> = new Subject<void>();\n\n  private cancelToken = new CancelToken();\n\n  public eLOVObjectType = eLOVObjectType;\n  public connectionTables: ConnectionTables[] = [];\n  public datalinks: DexihDatalink[] = [];\n\n  public tableColumns: DexihColumnBase[];\n  public sourceTypes = eLOVObjectTypeItems.filter( c => c.key > 0);\n\n  columns = [\n    { name: 'key', title: 'Key'},\n    { name: 'name', title: 'Name'},\n    { name: 'description', title: 'Description'},\n];\n  public data: Array<any>;\n\n  constructor(private hubService: HubService,\n    private authService: AuthService,\n    public formsService: HubFormsService,\n    private route: ActivatedRoute,\n    private router: Router) {\n  }\n\n  ngOnInit() {\n\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n      ).subscribe(result => {\n        let data = result[0];\n        this.params = result[1];\n        this.hubCache = result[2];\n\n        this.pageTitle = data['pageTitle'];\n        this.action = data['action'];\n\n        if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded ) { return; }\n\n        if (this.isLoaded && this.action === 'new') { return; }\n\n        if (this.isLoaded && this.formsService.hasChanged) {\n            this.authService.confirmDialog('Synchronization warning',\n            'The hub was disconnected, meaning this edit could have been changed by another session.  Would you like to discard the current changes, and reload the latest version?')\n            .then(confirm => {\n                if (confirm) {\n                    this.load();\n                }\n            }).catch(reason => {\n                return;\n            });\n        } else {\n            this.load();\n        }\n\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Edit List Of Values');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._formChangeSubscription) { this._formChangeSubscription.unsubscribe(); }\n    if (this._sourceChangeSubscription) { this._sourceChangeSubscription.unsubscribe(); }\n    this.cancelToken.cancel();\n  }\n\n  load() {\n    this.isLoaded = true;\n\n    this.connectionTables = this.hubCache.getConnectionTables();\n    this.datalinks = this.hubCache.hub.dexihDatalinks;\n\n    if (this.action === 'edit') {\n      // get the hub key from the route data, and update the service.\n      this.listOfValuesKey = + this.params['listOfValuesKey'];\n\n      if (!this.listOfValuesKey) {\n        this.hubService.addHubErrorMessage('There was no list of values specified to edit.');\n        // this.errorMessage = 'There was no validation specified to edit.';\n      } else {\n        if (!this.hubCache.hub || !this.hubCache.hub.dexihListOfValues) {\n          this.hubService.addHubErrorMessage('The hub cache is not loaded.');\n        } else {\n          let listOfValues = this.hubCache.hub.dexihListOfValues.find(c => c.key === this.listOfValuesKey);\n          if (! listOfValues.selectQuery) {\n            listOfValues.selectQuery = new SelectQuery();\n          }\n          this.formsService.listOfValues(listOfValues);\n        }\n      }\n    }\n\n    if (this.action === 'new') {\n      let listOfValues = new DexihListOfValues();\n      listOfValues.selectQuery = new SelectQuery();\n      this.formsService.listOfValues(listOfValues);\n\n      // update the url with the saved key\n      this._formChangeSubscription = this.formsService.getCurrentFormObservable().subscribe(form => {\n        let key = form.controls.key.value;\n        if (key) {\n          if (history.pushState) {\n            let newUrl = window.location.pathname.replace('/listOfValues-new', `/listOfValues-edit/${key}`);\n            this.router.navigateByUrl(newUrl);\n            this._formChangeSubscription.unsubscribe();\n          }\n        }\n      });\n    }\n\n    this.refreshColumns();\n\n    let currentForm = this.formsService.currentForm;\n\n    // if any source table/datalink changed, refresh the columns.\n    this._sourceChangeSubscription = merge(\n      currentForm.controls.sourceType.valueChanges,\n      currentForm.controls.sourceTableKey.valueChanges,\n      currentForm.controls.sourceDatalinkKey.valueChanges).subscribe(() => {\n        this.refreshColumns();\n    });\n  }\n\n  refreshColumns() {\n    let currentForm = this.formsService.currentForm;\n    let sourceType = <eLOVObjectType> currentForm.controls.sourceType.value;\n\n    switch (sourceType) {\n      case eLOVObjectType.Datalink:\n        let datalinkKey = currentForm.controls.sourceDatalinkKey.value;\n        let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === datalinkKey);\n        if (datalink) {\n          // get the outputs from the last transform in the datalink\n          const ioColumns = new InputOutputColumns();\n          ioColumns.buildInputOutput(this.hubCache, datalink);\n          this.tableColumns = ioColumns.getDatalinkOutputColumns(datalink);\n        } else {\n          if (datalinkKey > 0) {\n            this.hubService.addHubErrorMessage(`The datalink with the key ${datalinkKey} could not be found.`);\n          }\n          this.tableColumns = null;\n        }\n        break;\n      case eLOVObjectType.Table:\n        let tableKey = currentForm.controls.sourceTableKey.value;\n        let table = this.hubCache.hub.dexihTables.find(c => c.key === tableKey);\n        if (table) {\n          this.tableColumns = table.dexihTableColumns;\n        } else {\n          if (tableKey > 0) {\n            this.hubService.addHubErrorMessage(`The table with the key ${tableKey} could not be found.`);\n          }\n          this.tableColumns = null;\n        }\n        break;\n      }\n  }\n\n  refreshData() {\n    let form = this.formsService.currentForm;\n\n    let listOfValues = <DexihListOfValues>form.value;\n\n    this.hubService.previewListOfValues(listOfValues, true, this.cancelToken).then((data) => {\n      this.data = data;\n      this.refreshDataSubject.next();\n    }).catch((reason) => {\n      this.hubService.addHubMessage(reason);\n    });\n  }\n\n  hasChanged() {\n\n  }\n\n  add(index: number) {\n    let currentForm = <FormGroup> this.formsService.currentForm;\n    let item = this.formsService.listOfValuesItem(new ListOfValuesItem());\n    let staticData = <FormArray> currentForm.controls.staticData;\n    staticData.insert(index + 1, item);\n  }\n\n  remove(index: number) {\n    let currentForm = <FormGroup> this.formsService.currentForm;\n    let staticData = <FormArray> currentForm.controls.staticData;\n    staticData.removeAt(index);\n  }\n\n  clear() {\n    let currentForm = <FormGroup> this.formsService.currentForm;\n    let staticData = <FormArray> currentForm.controls.staticData;\n    while(staticData.controls.length > 0) {\n      staticData.removeAt(0);\n    }\n  }\n\n  close() {\n    this.authService.navigateUp();\n  }\n\n}\n","<div class=\"container\" *ngIf=\"formsService.currentForm\">\n\t<dexih-widget title=\"Edit List of Values\" iconClass=\"fa fa-lg fa-list-alt\" [showCloseButton]=\"true\" [padding]=\"false\"\n\t\t(close)=\"close()\">\n\t\t<ng-template #header>\n\t\t\t<dexih-invalid-form-details [control]=\"formsService.currentForm\" (click)=\"formsService.showErrors()\" class=\"mr-1\"></dexih-invalid-form-details>\n\t\t\t<save-button *ngIf=\"hubCache.canWrite\" [formsService]=\"formsService\" class=\"mr-1\"></save-button>\n\t\t\t<cancel-button [formsService]=\"formsService\"></cancel-button>\n\t\t</ng-template>\n\n\t\t<form [formGroup]=\"formsService.currentForm\" class=\"m-3\">\n\t\t\t<fieldset>\n\t\t\t\t<section>\n\t\t\t\t\t<form-input label=\"List of Values\" formControlName=\"name\"\n\t\t\t\t\t\tplaceholder=\"Enter the list of values name.\" [autocapitalize]=\"on\" iconClass=\"fa fa-list\"\n\t\t\t\t\t\t[errors]=\"formsService.formErrors['name']\">\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<form-textarea label=\"Description\" [showMarkdown]=\"true\" formControlName=\"description\"\n\t\t\t\t\t\tplaceholder=\"Enter the description.\">\n\t\t\t\t\t</form-textarea>\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t<form-select label=\"Data Source Type\" formControlName=\"sourceType\" [items]=\"sourceTypes\"\n\t\t\t\t\t\t\t\titemKey=\"key\" itemName=\"name\" iconClass=\"fa fa-database\"\n\t\t\t\t\t\t\t\tnote='Specify the source type for this view' [enableFilter]=\"false\">\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<section class=\"form-group col-md-6\"\n\t\t\t\t\t\t\t*ngIf=\"formsService.currentForm.value.sourceType == eLOVObjectType.Table\">\n\t\t\t\t\t\t\t<form-select label=\"Source Table\" formControlName=\"sourceTableKey\"\n\t\t\t\t\t\t\t\t[errors]=\"errors?.sourceTableKey\" [items]=\"connectionTables\" parentName=\"name\"\n\t\t\t\t\t\t\t\tchildItems=\"dexihTables\" itemKey=\"key\" itemName=\"logicalName\"\n\t\t\t\t\t\t\t\tnote=\"Select the source table\">\n\t\t\t\t\t\t\t\t<table-edit-button [key]=\"formsService.currentForm.controls.sourceTableKey.value\"></table-edit-button>\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<section class=\"form-group col-md-6\"\n\t\t\t\t\t\t\t*ngIf=\"formsService.currentForm.value.sourceType == eLOVObjectType.Datalink\">\n\t\t\t\t\t\t\t<form-select label=\"Source Datalink\" formControlName=\"sourceDatalinkKey\"\n\t\t\t\t\t\t\t\t[errors]=\"errors?.sourceDatalinkKey\" [items]=\"datalinks\" itemKey=\"key\" itemName=\"name\"\n\t\t\t\t\t\t\t\tnote='Select the source datalink'>\n\t\t\t\t\t\t\t\t<datalink-edit-button [key]=\"formsService.currentForm.controls.sourceDatalinkKey.value\"></datalink-edit-button>\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"form-row\" *ngIf=\"tableColumns\">\n\t\t\t\t\t\t<section class=\"form-group col-md-4\">\n\t\t\t\t\t\t\t<form-select label=\"Key Column\" formControlName=\"keyColumn\" [items]=\"tableColumns\"\n\t\t\t\t\t\t\t\titemKey=\"name\" itemName=\"name\" iconClass=\"fa fa-key\" [allowNullSelect]=\"true\" [enableFilter]=\"false\">\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<section class=\"form-group col-md-4\">\n\t\t\t\t\t\t\t<form-select label=\"Name Column\" formControlName=\"nameColumn\" [items]=\"tableColumns\"\n\t\t\t\t\t\t\t\titemKey=\"name\" itemName=\"name\" iconClass=\"fa fa-circle-o\" [allowNullSelect]=\"true\" [enableFilter]=\"false\">\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<section class=\"form-group col-md-4\">\n\t\t\t\t\t\t\t<form-select label=\"Description Column\" formControlName=\"descriptionColumn\"\n\t\t\t\t\t\t\t\t[items]=\"tableColumns\" itemKey=\"name\" itemName=\"name\" [allowNullSelect]=\"true\" iconClass=\"fa fa-comment-o\"\n\t\t\t\t\t\t\t\t[enableFilter]=\"false\">\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div class=\"form-row\" *ngIf=\"tableColumns\">\n\t\t\t\t\t\t<section class=\"form-group col-md-12\">\n\t\t\t\t\t\t\t<div class=\"d-flex flex-wrap pt-1\">\n\t\t\t\t\t\t\t\t<form-checkbox class=\"input-group-prepend\" label=\"Cache Lookup\" formControlName=\"cache\" [border]=\"true\"></form-checkbox>\n\t\t\t\t\t\t\t\t<form-input type=\"number\" class=\"pl-1\" *ngIf=\"formsService.currentForm.controls.cache.value\" labelLeft=\"Cache Seconds\" placeholder=\"seconds\" title=\"Specify the number of seconds to cache the lookup\" formControlName=\"cacheSeconds\"></form-input>\n\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t</fieldset>\n\t\t</form>\n\n\t\t<dexih-widget-section *ngIf=\"formsService.currentForm.value.sourceType == eLOVObjectType.Static\" title=\"Static Values\"\n\t\t\t[showExpandButton]=\"true\">\n\t\t\t<ng-template #header>\n\t\t\t\t<dexih-button class=\"mr-1\" (click)=\"add(-1)\" iconClass=\"fa fa-plus\">Insert Item</dexih-button>\n\t\t\t\t<dexih-button-delete (click)=\"clear()\" text=\"Clear All\"></dexih-button-delete>\n\t\t\t</ng-template>\n\t\t\n\t\t\t<form *ngFor=\"let itemForm of formsService.currentForm.controls.staticData.controls; let i = index;\"\n\t\t\t\t[formGroup]=\"itemForm\" class=\"flex-fill\">\n\t\t\t\t<div class=\"input-group\">\t\t\n\t\t\t\t\t<div class=\"form-control p-0\">\n\t\t\t\t\t\t<form-input [border]=\"false\" formControlName=\"key\" type=\"text\" placeholder=\"Key Value\">\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"form-control p-0\">\n\t\t\t\t\t\t<form-input [border]=\"false\" formControlName=\"name\" type=\"text\" placeholder=\"Item name\">\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"form-control p-0\">\n\t\t\t\t\t\t<form-input [border]=\"false\" formControlName=\"key\" type=\"text\" placeholder=\"Description\">\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"input-group-append flex-shrink-1 ml-1 \">\n\t\t\t\t\t\t<button class=\"btn btn-light\" type=\"button\" (click)=\"add(i)\"  value=\"Add\">\n\t\t\t\t\t\t\t<i class=\"fa fa-plus-square-o\"></i>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button class=\"btn btn-light\" type=\"button\" (click)=\"remove(i)\"  value=\"Remove\">\n\t\t\t\t\t\t\t<i class=\"fa fa-minus-square-o\"></i>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\n\t\t</dexih-widget-section>\n\t\t\n\t\t<ng-template [ngIf]=\"formsService.currentForm.value.sourceType !== eLOVObjectType.Static\">\n\t\t\t<dexih-widget-section title=\"Query Configuration\" [showExpandButton]=\"true\">\n\t\t\t\t<query-builder [selectQuery]=\"formsService.currentForm.controls.selectQuery.value\" [columns]=\"tableColumns\"\n\t\t\t\t\t[inputColumns]=\"inputColumns\" [parameters]=\"null\" (hasChanged)=\"hasChanged()\" [refreshEvent]=\"refreshDataSubject.asObservable()\" (onRefreshData)=\"refreshData()\"></query-builder>\n\t\t\t</dexih-widget-section>\n\t\t\n\t\t\t<div *ngIf=\"!data\" class=\"m-3\">\n\t\t\t\t<dexih-button-refresh (click)=\"refreshData()\" text=\"Reload\" [autoCompact]=\"false\"></dexih-button-refresh>\n\t\t\t</div>\n\t\t\n\t\t\t<dexih-table *ngIf=\"data\" [enableMultiSelect]=\"false\" [enableSaveCsv]=\"true\" [columns]=\"columns\" [data]=\"data\">\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<dexih-button-refresh class=\"mr-1\" (click)=\"refreshData()\" text=\"Reload\"></dexih-button-refresh>\n\t\t\t\t</ng-template>\n\t\t\t</dexih-table>\n\t\t</ng-template>\n\t</dexih-widget>\n\n</div>","export * from './listOfValues-index.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { HubCache } from '../../hub.models';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Observable, Subscription, BehaviorSubject, combineLatest} from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DexihListOfValues, eSharedObjectType, eLOVObjectType } from '../../../shared/shared.models';\n\n@Component({\n  selector: 'listOfValues',\n  templateUrl: './listOfValues-index.component.html',\n  styles: []\n})\nexport class ListOfValuesIndexComponent implements OnInit, OnDestroy {\n  private _subscription: Subscription;\n  private _hubCacheChangeSubscription: Subscription;\n\n    hubCache: HubCache;\n\n    listOfValues: Array<DexihListOfValues>;\n    public eSharedObjectType = eSharedObjectType;\n\n    columns = [\n        { name: 'name', title: 'Name', format: '', tags: 'tags'},\n        { name: 'sourceType', title: 'Source Type', format: 'Enum', enum: eLOVObjectType},\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar'},\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n        // watch for any changes in the validations.\n        this.watchChanges();\n\n        this._subscription = combineLatest(\n            this.hubService.getHubCacheObservable()\n        ).subscribe(result => {\n          this.hubCache = result[0];\n          this.update();\n        });\n    } catch (e) {\n        this.hubService.addHubClientErrorMessage(e, 'Hub List of Values Index');\n      }\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    delete(lov: Array<DexihListOfValues>) {\n        this.hubService.deleteListOfValues(lov);\n    }\n\n    update() {\n        if (this.hubCache && this.hubCache.isLoaded()) {\n            let listOfValues = this.hubCache.hub.dexihListOfValues.filter(c => c.isValid).map(c => {\n                return {\n                    key: c.key,\n                    name: c.name,\n                    description: c.description,\n                    updateDate: c.updateDate,\n                    tags: this.hubCache.getObjectTags(eSharedObjectType.ListOfValues, c.key)\n                }\n            });\n            this._tableData.next(listOfValues);\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    edit(lov: DexihListOfValues) {\n        this.router.navigate(['listOfValues-edit', lov.key], { relativeTo: this.route});\n    }\n\n    export(lov: Array<DexihListOfValues>) {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(cache.hub.hubKey, '');\n        hub.dexihListOfValues = lov;\n        lov.forEach(lovItem => {\n            cache.getListOfValuesCache(lovItem, hub);\n        });\n        let filename = 'list_of_values.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n\n    watchChanges() {\n      // watch the current validation in case it is changed in another session.\n      this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n          if (hubCacheChange.changeClass === eSharedObjectType.ListOfValues || hubCacheChange.changeClass === eSharedObjectType.TagObjects) {\n            this.update();\n          }\n      });\n  }\n}\n","<div class=\"container-fluid\">\n    <dexih-widget title=\"List Of Values\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-list-alt\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\t>\n\t\t<dexih-table \n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[dataObservable]=\"tableData\"\n\t\t\t(rowClick)=\"edit($event)\"\n\t\t\t[tags]=\"this.hubCache.hub.dexihTags\"\n\t\t\t>\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n\t\t\t\t\t<dexih-button-edit class=\"mr-1\" [routerLink]=\"['listOfValues-edit', item.key]\" queryParamsHandling preserveFragment></dexih-button-edit>\n\t\t\t\t\t<dependent-items-button class=\"ml-1\" [key]=\"item.key\" [objectType]='eSharedObjectType.ListOfValues'></dependent-items-button>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t<dexih-button-save-local class=\"mr-1\" (click)=\"export(items)\"></dexih-button-save-local>\n\t\t\t\t\t<dexih-button-delete *ngIf=\"hubCache.canWrite\" class=\"mr-1\" (click)=\"delete(items)\"></dexih-button-delete>\n\t\t\t\t\t<tags-update-button class=\"mr-1\" [objectType]=\"eSharedObjectType.ListOfValues\" [objects]=\"items\" ></tags-update-button>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<dexih-button-new *ngIf=\"hubCache.canWrite\" class=\"mr-1\" [routerLink]=\"['listOfValues-new']\"></dexih-button-new>\n\t\t\t\t</ng-template>\n\t\t</dexih-table>\n\t</dexih-widget>\n</div>\n\n\n","import { Component, OnInit, OnDestroy, Input, ViewChild } from '@angular/core';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubService } from '../../hub.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { DexihMessageComponent } from  '../../../shared/ui/dexihMessage/dexih-message.component';\nimport { UserAuthorization } from '../../../+admin/admin.models';\nimport { ePermission, ePermissionItems } from '../../../shared/shared.models';\n\n@Component({\n  selector: 'users',\n  templateUrl: './manage-users-index.component.html',\n  styles: []\n})\nexport class ManageUsersIndexComponent implements OnInit, OnDestroy {\n  @ViewChild('DexihMessage', { static: true }) public dexihMessage: DexihMessageComponent;\n\n    columns = [\n        { name: 'userName', title: 'User Name', format: ''},\n        { name: 'firstName', title: 'First Name', format: ''},\n        { name: 'lastName', title: 'Last Name', format: ''},\n        { name: 'permission', title: 'Permission', enum: ePermission, format: 'Enum'},\n        { name: 'receiveAlerts', title: 'Receives Alert Emails', format: 'Boolean'}\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    ePermission = ePermission;\n    ePermissionItems = ePermissionItems;\n    permission = ePermission.PublishReader;\n    emails: string[] = [];\n    sendInvites = true;\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.refreshUsers();\n    }\n\n    ngOnDestroy() {\n    }\n\n    refreshUsers() {\n        this.hubService.getHubUsers().then(result => {\n            this._tableData.next(result);\n        });\n    }\n\n    setPermission(permission: ePermission, users: Array<UserAuthorization>) {\n        const userNames = users.map(c => c.userName);\n\n        this.authService.confirmDialog('Confirm Permission Change',\n            `This action will change the selected user(s) hub permission to ${ePermission[this.permission]}.  Proceed?`).then(confirm => {\n                if (confirm) {\n                    this.hubService.setUserPermissions(userNames, permission, false).then(result => {\n                        this.dexihMessage.addSuccessMessage('The specified user(s) permission have been updated.');\n                        this.refreshUsers();\n                    });\n                }\n            });\n    }\n\n    setUserAlert(alertEmail: boolean, users: Array<UserAuthorization>) {\n        const userIds = users.map(c => c.id);\n\n        this.hubService.setUserAlerts(userIds, alertEmail, false).then(result => {\n            this.dexihMessage.addSuccessMessage('The specified user(s) alert email status have been updated.');\n            this.refreshUsers();\n        });\n    }\n\n    deleteUsers(users: Array<UserAuthorization>) {\n        const emails = users.map(c => c.userName);\n\n        this.authService.confirmDialog('Confirm Delete Users',\n        `This action will delete the selected user(s) from using this hub.  Proceed?`).then(confirm => {\n            if (confirm) {\n                this.hubService.removeUsers(emails).then(result => {\n                    this.dexihMessage.addSuccessMessage('The specified users have been removed from the hub.');\n                    this.refreshUsers();\n                });\n            }\n        });\n    }\n\n    addUsers() {\n        if (this.emails.length > 0 && this.permission) {\n            this.authService.confirmDialog('Add Users',\n            // tslint:disable-next-line:max-line-length\n            `This action will added users with the specified emails to this hub with permission ${ePermission[this.permission]}.  Proceed?`).then(confirm => {\n                if (confirm) {\n                    this.hubService.setUserPermissions(this.emails, this.permission, this.sendInvites).then(result => {\n                        this.emails = [];\n                        this.dexihMessage.addSuccessMessage('The specified users have been added to the hub.');\n                        this.refreshUsers();\n                    });\n                }\n            });\n        }\n    }\n}\n","<dexih-message class=\"p-3\" #DexihMessage></dexih-message>\n\n<div class=\"container-fluid\">\n\t<dexih-widget-vertical>\n\t<dexih-widget title=\"Invite Users\" iconClass=\"fa fa-lg fa-fw fa-birthday-cake\" [padding]=\"true\">\n\t\t\n\t\t<ng-template #subHeader>\n\t\t\t<dexih-button-save [disabled]=\"emails.length == 0\" (click)=\"addUsers()\" text=\"Add User(s)\"></dexih-button-save>\n\t\t</ng-template>\n\n\t\t<form >\n\t\t\t<fieldset>\n\t\t\t\t<section>\n\t\t\t\t\t<form-select label=\"Permission\" [(ngModel)]=\"permission\" name=\"permission\" [items]=\"ePermissionItems\" itemKey=\"key\" itemName=\"name\" note='Permission level to grant to emails' [enableFilter]=\"false\">\n\t\t\t\t\t</form-select>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-tags label=\"Email Addresses / User names\" [(ngModel)]=\"emails\" name=\"emails\" note=\"Provide a list of user names or email addresses of users to join the hub.\">\n\t\t\t\t\t</form-tags>\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<form-checkbox label=\"Send invites\" [(ngModel)]=\"sendInvites\" name=\"sendInvites\" note=\"Emails which are not registered to use the integration hub will be sent an invite to join.\">\n\t\t\t\t\t</form-checkbox>\n\t\t\t\t</section>\n\t\t\t</fieldset>\n\t\t</form>\n\t</dexih-widget>\n\n\t<dexih-widget title=\"Current Users\" iconClass=\"fa fa-lg fa-fw fa-group\">\n\t\t<dexih-table [enableMultiSelect]=\"true\" [columns]=\"columns\"\n\t\t [dataObservable]=\"tableData\">\n\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t<dexih-button-delete class=\"mr-1\" (click)=\"deleteUsers(items)\"></dexih-button-delete>\n\t\t\t\t<dexih-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-lock\" text=\"Set Permission\">\n\t\t\t\t\t<a *ngFor=\"let permission of ePermissionItems\" class=\"dropdown-item\" (click)=\"setPermission(permission.key, items)\">{{permission.name}}</a>\n\t\t\t\t</dexih-button-dropdown>\n\t\t\t\t<dexih-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-bell\" text=\"Set User Alert\" class=\"ml-1\">\n\t\t\t\t\t<a class=\"dropdown-item\" (click)=\"setUserAlert(true, items)\">Receive alert emails</a>\n\t\t\t\t\t<a class=\"dropdown-item\" (click)=\"setUserAlert(false, items)\">Do not receive alert emails.</a>\n\t\t\t\t</dexih-button-dropdown>\n\t\t\t</ng-template>\n\t\t</dexih-table>\n\n\t</dexih-widget>\n\t</dexih-widget-vertical>\n</div>","export * from './remoteAgent-index/remoteAgent-index.component';\nexport * from './remoteAgent-edit/remoteAgent-edit.component';\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { HubCache } from '../../hub.models';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { DexihRemoteAgentHub, DexihRemoteAgent } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'remote-agents',\n    templateUrl: './remoteAgent-edit.component.html',\n    providers: [HubFormsService]\n})\nexport class RemoteAgentEditComponent implements OnInit, OnDestroy {\n    @Input() public hubKey: number;\n\n    private _subscription: Subscription;\n\n    private remoteAgentKey: number;\n    private remoteAgentHubKey: number;\n\n    hubCache: HubCache;\n    name: string;\n\n    remoteAgents: DexihRemoteAgent[];\n    remoteAgentHub: DexihRemoteAgentHub;\n\n    public isNew = false;\n\n    ipAddress: string;\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        public formsService: HubFormsService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.authService.getRemoteAgentsObservable(),\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n                this.remoteAgents = result[3];\n\n                if (!this.hubCache.isLoaded() || !this.remoteAgents) { return; }\n\n                this.remoteAgentKey = +params['remoteAgentKey'];\n                this.remoteAgentHubKey = +params['remoteAgentHubKey'];\n\n                if (!this.remoteAgentKey) {\n                    this.hubService.addHubErrorMessage('There was no remote agent specified to edit.');\n                    // this.errorMessage = 'There was no validation specified to edit.';\n                } else {\n                    let remoteAgent = this.remoteAgents.find(c => c.remoteAgentKey === this.remoteAgentKey);\n                    let activeAgent = remoteAgent['activeAgents'] &&\n                        remoteAgent['activeAgents'].length > 0 ? remoteAgent['activeAgents'][0] : null;\n                    this.name = activeAgent ? activeAgent.name : '';\n                    this.ipAddress = activeAgent ? activeAgent.ipAddress : null;\n                    this.remoteAgentHub = this.hubCache.hub.dexihRemoteAgentHubs.find(c => c.remoteAgentHubKey === this.remoteAgentHubKey);\n\n                    if (!this.remoteAgentHub) {\n                        this.remoteAgentHub = {\n                            hubKey: this.hubCache.hub.hubKey,\n                            remoteAgentHubKey: 0,\n                            remoteAgentKey: remoteAgent.remoteAgentKey,\n                            isAuthorized: true,\n                            isValid: true,\n                            createDate: null,\n                            isDefault: false,\n                            updateDate: null\n                        }\n                        this.remoteAgentHub['allowExternalConnect'] = true;\n                        this.remoteAgentHub['isSelected'] = false;\n                        this.isNew = true;\n                    }\n\n                    this.formsService.remoteAgent(this.remoteAgentHub);\n\n                    if (this.remoteAgentHub.remoteAgentHubKey === 0) {\n                        this.formsService.hasChanged = true;\n                    }\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Remote Agent Edit');\n        }\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    addCurrentIp() {\n        if (this.ipAddress) {\n            let form = this.formsService.currentForm;\n            let ipAddressesControl = form.controls.ipAddresses;\n            let ipAddresses = <string[]> ipAddressesControl.value;\n\n            if (ipAddresses.findIndex(c => c === this.ipAddress) < 0) {\n                ipAddresses.push(this.ipAddress);\n                ipAddressesControl.setValue(ipAddresses);\n            }\n        }\n    }\n\n    save() {\n        let form = this.formsService.currentForm;\n        let remoteAgentHub = form.value;\n        this.hubService.saveRemoteAgent(remoteAgentHub).then((success) => {\n            if (success) {\n                this.hubService.addHubSuccessMessage('The remote agent updated successfully.');\n                this.authService.navigateUp();\n            }\n        });\n    }\n}\n","<dexih-message #DexihMessage></dexih-message>\n\n<div class=\"container\">\n    <dexih-widget \n\t\ttitle=\"Edit Hub Remote Agent\" \n        iconClass=\"fa fa-lg fa-fw fa-database\" \n        [padding]=\"true\"\n        [showCloseButton]=\"true\"\n        (close)=\"close()\"\n    >\n        <ng-template #header>\n            <dexih-button-edit [routerLink]=\"['/hubs', 'index', 'agents', 'edit', remoteAgentKey]\"></dexih-button-edit>\n            <dexih-button-save [disabled]=\"!formsService.hasChanged\" (click)=\"save()\" class=\"pl-1\"></dexih-button-save>\n            <cancel-button [formsService]=\"formsService\" class=\"pl-1\"></cancel-button>\n        </ng-template>\n\n        <ng-template #header>\n\n        </ng-template>\n\n        <div *ngIf=\"isNew\" class=\"alert alert-primary\">\n            Creating a new hub -> remote agent authorization\n        </div>\n\n        <form *ngIf=\"formsService.currentForm\"  [formGroup]=\"formsService.currentForm\">\n            <fieldset>\n                <section >\n                    <form-input label=\"Agent name\" [disabled]=\"true\" note=\"This can be changed in the agents appsettings.json config file.\" [(ngModel)]=\"name\" [ngModelOptions]=\"{standalone: true}\" iconClass=\"fa fa-comment\"></form-input>\n                </section>\n\n                <section>\n\t\t\t\t\t<form-checkbox label=\"Is default agent for this Hub\" formControlName=\"isDefault\" >\n\t\t\t\t\t</form-checkbox>\n                </section>\n\n                <section>\n\t\t\t\t\t<form-checkbox label=\"Is Authorized for this Hub.\" formControlName=\"isAuthorized\" >\n\t\t\t\t\t</form-checkbox>\n                </section>\n            </fieldset>\n        </form>\n    </dexih-widget>\n</div>\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { HubCache } from '../../hub.models';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { DexihRemoteAgent, DexihRemoteAgentHub, eSharedObjectType, eDataPrivacyStatus } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'remoteagents',\n    templateUrl: './remoteAgent-index.component.html',\n    styles: []\n})\nexport class RemoteAgentIndexComponent implements OnInit, OnDestroy {\n    @Input() public hubKey: number;\n\n    private _subscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n\n    remoteAgents: Array<DexihRemoteAgent>;\n    hubCache: HubCache;\n\n    statusFilter: string;\n\n    columns = [\n        { name: 'name', title: 'Name', format: '' },\n        { name: 'connected', title: 'Connected', format: 'Boolean' },\n        { name: 'isAuthorized', title: 'Authorized?', format: 'Boolean' },\n        { name: 'user', title: 'User', format: ''},\n        { name: 'dataPrivacyStatus', title: 'Data Privacy', format: 'Enum', enum: eDataPrivacyStatus },\n        { name: 'isEncrypted', title: 'Encrypted?', format: 'Boolean' },\n        { name: 'ipAddress', title: 'Current IP Address', format: '' },\n        { name: 'remoteAgentId', title: 'Id', format: '' },\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n        { name: 'lastLoginDateTime', title: 'Last Login', format: 'Calendar' },\n        { name: 'lastLoginIpAddress', title: 'Last IP Address', format: '' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(private hubService: HubService, private authService: AuthService, private router: Router, private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        // watch for any changes.\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest(\n                this.route.queryParams,\n                this.hubService.getHubCacheObservable(),\n                this.authService.getRemoteAgentsObservable(),\n                this.hubService.getRemoteAgentObservable() // this is included to ensure refresh when active agent changes.\n            ).subscribe(result => {\n                let queryParams = result[0];\n                this.hubCache = result[1];\n                this.remoteAgents = result[2];\n\n                if (!this.hubCache.isLoaded()) { return; }\n\n                this.statusFilter = queryParams['statusFilter'];\n                if (!this.statusFilter) { this.statusFilter = 'All'; }\n\n                this.updateRemoteAgents();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Remote Agent index');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    private updateRemoteAgents() {\n        if (!(this.hubCache && this.hubCache.hub)) { return; }\n\n        let data: any[] = this.hubCache.hub.dexihRemoteAgentHubs.map(a => {\n            let remoteAgent = this.remoteAgents ? this.remoteAgents.find(c => c.remoteAgentKey === a.remoteAgentKey) : null;\n            let activeAgent = remoteAgent && remoteAgent['activeAgents'] && remoteAgent['activeAgents'].length > 0\n                ? remoteAgent['activeAgents'][0] : null;\n\n            return {\n                remoteAgentHubKey: a.remoteAgentHubKey,\n                connected: activeAgent !== null,\n                isAuthorized: a.isAuthorized,\n                name: activeAgent ? activeAgent.name : ( remoteAgent ? remoteAgent.name : 'Unknown') ,\n                user: activeAgent ? activeAgent.user : '',\n                dataPrivacyStatus: activeAgent ? activeAgent.dataPrivacyStatus : '',\n                isEncrypted: activeAgent ? activeAgent.isEncrypted : '',\n                ipAddress: activeAgent ? activeAgent.ipAddress : '',\n                remoteAgentKey: a.remoteAgentKey,\n                updateDate: a.updateDate,\n                lastLoginDateTime: remoteAgent ? remoteAgent.lastLoginDateTime : '',\n                lastLoginIpAddress: remoteAgent ? remoteAgent.lastLoginIpAddress : '',\n                remoteAgentId: remoteAgent ? remoteAgent.remoteAgentId : ''\n            };\n        });\n\n        if (this.remoteAgents) {\n            this.remoteAgents.forEach(a => {\n                let activeAgent = a['activeAgents'] && a['activeAgents'].length > 0 ? a['activeAgents'][0] : null;\n\n                if (activeAgent && data.findIndex(d => d.remoteAgentKey === a.remoteAgentKey) < 0) {\n                    data.push({\n                        remoteAgentHubKey: 0,\n                        connected: true,\n                        isAuthorized: false,\n                        name: activeAgent.name,\n                        user:  activeAgent.user,\n                        dataPrivacyStatus: activeAgent.dataPrivacyStatus,\n                        isEncrypted: activeAgent.isEncrypted,\n                        ipAddress: activeAgent.ipAddress,\n                        remoteAgentKey: a.remoteAgentKey,\n                        remoteAgentId: a.remoteAgentId,\n                        updateDate: '',\n                        });\n                }\n            });\n        }\n        this._tableData.next(data);\n    }\n\n    watchChanges() {\n        // watch the current remote hubs\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n            if (hubCacheChange.changeClass === eSharedObjectType.RemoteAgent) {\n                this.updateRemoteAgents();\n            }\n        });\n    }\n\n    async authorize(remoteAgents: Array<any>) {\n        for await (const remoteAgent of remoteAgents) {\n            if (!remoteAgent.isAuthorized) {\n                let agentHub: DexihRemoteAgentHub;\n                if (remoteAgent.remoteAgentHubKey) {\n                    agentHub = this.hubCache.hub.dexihRemoteAgentHubs.find(c => c.remoteAgentHubKey === remoteAgent.remoteAgentHubKey);\n                    agentHub.isAuthorized = true;\n                } else {\n                    agentHub = {\n                        hubKey: this.hubCache.hub.hubKey,\n                        remoteAgentHubKey: 0,\n                        remoteAgentKey: remoteAgent.remoteAgentKey,\n                        isAuthorized: true,\n                        isValid: true,\n                        createDate: null,\n                        isDefault: false,\n                        updateDate: null\n                    }\n                    agentHub['allowExternalConnect'] = true;\n                    agentHub['isSelected'] = false;\n                }\n                await this.hubService.saveRemoteAgent(agentHub);\n            }\n        };\n    }\n\n    deAuthorize(remoteAgents: Array<DexihRemoteAgentHub>) {\n        remoteAgents.forEach(remoteAgent => {\n            if (remoteAgent.isAuthorized) {\n                if (remoteAgent.remoteAgentHubKey) {\n                    let agent = this.hubCache.hub.dexihRemoteAgentHubs.find(c => c.remoteAgentHubKey === remoteAgent.remoteAgentHubKey);\n                    if (agent) {\n                        agent.isAuthorized = false;\n                        this.hubService.saveRemoteAgent(agent);\n                    }\n                }\n            }\n        });\n    }\n\n    deleteSelected(remoteAgents: Array<DexihRemoteAgentHub>) {\n        remoteAgents.forEach(remoteAgent => {\n            if (remoteAgent.remoteAgentHubKey) {\n                let agent = this.hubCache.hub.dexihRemoteAgentHubs.find(c => c.remoteAgentHubKey === remoteAgent.remoteAgentHubKey);\n                if (agent) {\n                    agent.isAuthorized = false;\n                    this.hubService.deleteRemoteAgent(agent);\n                }\n            }\n        });\n    }\n\n    edit(remoteAgent: DexihRemoteAgentHub) {\n        this.router.navigate(['agent-edit', remoteAgent.remoteAgentKey, remoteAgent.remoteAgentHubKey], { relativeTo: this.route });\n    }\n}\n","<div class=\"container-fluid\">\n\t<dexih-widget title=\"Hub Remote Agents\"\n\t\ticonClass=\"fa fa-lg fa-fw fa-wifi\"\n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\t\t>\n\t\t<ng-template #header>\n\t\t\t<dexih-button-dropdown buttonClass=\"btn btn-sm btn-outline-secondary\" iconClass=\"fa fa-filter\" [text]=\"statusFilter\" title=\"Filter by a status\" [pullRight]=\"true\">\n\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"statusFilter=='All'\" routerLink='.' [queryParams]=\"{statusFilter: 'All'}\" title=\"All Items\">All</a>\n\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"statusFilter=='Ready'\" routerLink='.' [queryParams]=\"{statusFilter: 'Ready'}\" title=\"Ready\">Ready</a>\n\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"statusFilter=='Offline'\" routerLink='.' [queryParams]=\"{statusFilter: 'Offline'}\" title=\"Offline Items\">Offline</a>\n\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"statusFilter=='Unauthorized'\" routerLink='.' [queryParams]=\"{statusFilter: 'Unauthorized'}\" title=\"Unauthorized Items\">Unauthorized</a>\n\t\t\t</dexih-button-dropdown>\n        </ng-template>\n\n\t\t<dexih-table \n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[dataObservable]=\"tableData\"\n\t\t\t(rowClick)=\"edit($event)\"\n\t\t\t>\n\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t<dexih-button-delete class=\"mr-1\" (click)=\"deleteSelected(items)\" title=\"Delete selected remote agents\"></dexih-button-delete>\n\t\t\t\t\t<dexih-button class=\"mr-1\" iconClass=\"fa fa-check\" buttonClass=\"btn-primary\" (click)=\"authorize(items)\" title=\"Authorize the selected agents for this hub\">Authorize</dexih-button>\n\t\t\t\t\t<dexih-button class=\"mr-1\" iconClass=\"fa fa-times\" buttonClass=\"btn-danger\" (click)=\"deAuthorize(items)\" title=\"De-Authorize the selected agents\">De-Authorize</dexih-button>\n\t\t\t\t</ng-template>\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-remoteItem=\"item\">\n\t\t\t\t\t<dexih-button-edit [routerLink]=\"['agent-edit', remoteItem.remoteAgentKey, remoteItem.remoteAgentHubKey]\" class=\"mr-1\" ></dexih-button-edit>\n\t\t\t\t</ng-template>\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<dexih-button-download [routerLink]=\"['/hubs/index/agents/download']\" iconClass=\"fa fa-download\" text=\"Download Agent\" class=\"mr-1\" ></dexih-button-download>\n\t\t\t\t</ng-template>\n\t\t</dexih-table>\n\t</dexih-widget>\n</div>","export * from './results-index';\nexport * from './results-view';\n","export * from './results-index.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { HubCache } from '../../hub.models';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable, BehaviorSubject, Subscription, combineLatest} from 'rxjs';\nimport { CancelToken } from '../../../+auth/auth.models';\nimport { TransformWriterResult, eConnectionPurpose } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'results-index',\n    templateUrl: './results-index.component.html',\n    styles: []\n})\nexport class ResultsIndexComponent implements OnInit, OnDestroy {\n    hubCache: HubCache;\n\n    private _subscription: Subscription;\n    private _transformWriterResultChangeSubscription: Subscription;\n\n    public hubPath;\n    public rows = 20;\n    private datalinkStatus: Map<number, TransformWriterResult>;\n\n    private cancelToken = new CancelToken();\n\n    showPage = false;\n    showPageMessage = 'Loading...';\n\n    columns = [\n        { name: 'auditKey', title: '#', format: '' },\n        { name: 'auditType', title: 'Type', format: '' },\n        { name: 'referenceName', title: 'Name', format: '' },\n        { name: 'rowsTotal', title: 'Rows Total', format: '' },\n        { name: 'startTime', title: 'Start Date', format: 'Calendar' },\n        { name: 'startTime', title: 'Time', format: 'Time' },\n        { name: 'endTime', title: 'Finished At', format: 'Time' },\n        { name: 'message', title: 'Message', format: '' },\n    ];\n\n    auditTypes = [ 'Datalink', 'Datajob', 'DatalinkTest' ];\n\n    private _tableData = new BehaviorSubject<Array<TransformWriterResult>>(null);\n    tableData: Observable<Array<TransformWriterResult>> = this._tableData.asObservable();\n\n    datalinks: Array<number> = [];\n    datajobs: Array<number> = [];\n    datalinkTests: Array<number> = [];\n\n    auditType: string = null;\n\n    constructor(private hubService: HubService, private router: Router, private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.route.queryParams,\n                this.hubService.getHubCacheObservable(),\n                this.hubService.getRemoteAgentObservable()\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                let queryParams = result[2];\n                this.hubCache = result[3];\n                let remoteAgent = result[4];\n\n                this.showPage = false;\n                this.showPageMessage = 'Waiting for an active remote agent...';\n\n                if (this.hubCache.isLoaded() && remoteAgent) {\n                    this.hubPath = this.hubCache.getHubUrl();\n\n                    let datalinkKeysString = queryParams['datalinkKeys'];\n                    let datajobKeysString = queryParams['datajobKeys'];\n                    let datalinkTestsKeysString = queryParams['datalinkTestKeys'];\n\n                    if (datalinkKeysString) {\n                        this.datalinks = (datalinkKeysString + '').split(',').map(c => +c);\n                        this.auditType = 'Datalink';\n                    }\n                    if (datajobKeysString) {\n                        this.datajobs = (datajobKeysString + '').split(',').map(c => +c);\n                        this.auditType = 'Datajob';\n                    }\n                    if (datalinkTestsKeysString) {\n                        this.datalinkTests = (datalinkTestsKeysString + '').split(',').map(c => +c);\n                        this.auditType = 'DatalinkTest';\n                    }\n\n                    this.refresh();\n\n                    this.showPage = true;\n                    this.showPageMessage = '';\n                }\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Results Index');\n        }\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._transformWriterResultChangeSubscription) { this._transformWriterResultChangeSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    showResult(result: TransformWriterResult) {\n        this.router.navigate(['result-view', result.auditConnectionKey, result.auditKey], { relativeTo: this.route })\n    }\n\n    refresh() {\n        let data = [];\n\n        let keys: number[];\n        let connectionKeys: number[] = [];\n\n        switch (this.auditType) {\n            case 'Datalink':\n                keys = this.datalinks;\n                connectionKeys = this.datalinks.map(c => this.hubCache.hub.dexihDatalinks.find(d => d.key === c).auditConnectionKey);\n                break;\n            case 'Datajob':\n                keys = this.datajobs;\n                connectionKeys = this.datajobs.map(c => this.hubCache.hub.dexihDatajobs.find(d => d.key === c).auditConnectionKey);\n                break;\n            case 'DatalinkTest':\n                keys = this.datalinkTests;\n                connectionKeys = this.datalinkTests.map(c => this.hubCache.hub.dexihDatalinkTests\n                    .find(d => d.key === c).auditConnectionKey);\n                break;\n            default:\n                keys = null;\n                break;\n        }\n\n        let uniqueKeys = connectionKeys.filter(function(item, i, ar) { return ar.indexOf(item) === i; });\n\n        if (uniqueKeys.length === 0) {\n            uniqueKeys = this.hubCache.hub.dexihConnections.filter(c => c.purpose === eConnectionPurpose.Managed).map(c => c.key);\n        }\n\n        this.hubService.getAuditResults(this.auditType, uniqueKeys, keys, true, this.rows, this.cancelToken)\n        .then(results => {\n            this._tableData.next(results);\n            this.watchChanges();\n            return;\n        });\n    }\n\n    watchChanges() {\n        // watch the current connection in case it is changed in another session.\n        if (this._transformWriterResultChangeSubscription) { this._transformWriterResultChangeSubscription.unsubscribe(); }\n        this._transformWriterResultChangeSubscription =\n            this.hubService.getTransformWriterResultChangeObservable().subscribe(writerResult => {\n                let results: TransformWriterResult[] = this._tableData.value;\n\n                if (this.datalinks && this.datalinks.findIndex(c => c === writerResult.referenceKey) >= 0) {\n                    let existingResult = results.find(c => c.auditKey === writerResult.auditKey);\n                    if (existingResult) {\n                        Object.assign(existingResult, writerResult);\n                        this._tableData.next(results);\n                    } else {\n                        this._tableData.next([writerResult].concat(results));\n                    }\n                }\n                if (this.datajobs && this.datajobs.findIndex(c => c === writerResult.referenceKey) >= 0) {\n                    let existingResult = results.find(c => c.auditKey === writerResult.auditKey);\n                    if (existingResult) {\n                        Object.assign(existingResult, writerResult);\n                        this._tableData.next(results);\n                    } else {\n                        this._tableData.next([writerResult].concat(results));\n                    }\n                }\n\n                if (this.datalinkTests && this.datalinkTests.findIndex(c => c === writerResult.referenceKey) >= 0) {\n                    let existingResult = results.find(c => c.auditKey === writerResult.auditKey);\n                    if (existingResult) {\n                        Object.assign(existingResult, writerResult);\n                        this._tableData.next(results);\n                    } else {\n                        this._tableData.next([writerResult].concat(results));\n                    }\n                }\n        });\n    }\n}\n\n\n","<div class=\"container-fluid\">\n    <dexih-widget title=\"Execution Results\" \n        iconClass=\"fa fa-lg fa-fw fa-exchange\" \n    >\n\t\t<dexih-table \n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[dataObservable]=\"tableData\"\n\t\t\t[enableSaveCsv]=\"true\" \n\t\t\t(rowClick)=\"showResult($event)\"\n\t\t\t>\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<div class=\"d-flex flex-wrap\">\n\t\t\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t\t\t<dexih-button-refresh class=\"input-group-prepend\" (click)=\"refresh()\" text=\"Reload\"></dexih-button-refresh>\n\t\t\t\t\t\t\t<input type=\"number\" class=\"form-control\" placeholder=\"Maximum rows...\"\n\t\t\t\t\t\t\t\ttitle=\"Specify the maximum rows to return\" [(ngModel)]=\"rows\" style=\"width: 100%; max-width: 100px\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t\t\t<div class=\"flex-fill ml-1\">\n\t\t\t\t\t\t\t<form-select labelLeft=\"Type\" [(ngModel)]=\"auditType\" [border]=\"false\" class=\"form-control p-0\"\n\t\t\t\t\t\t\t\t[items]=\"auditTypes\" [enableTextEntry]=\"false\" [allowNullSelect]=\"true\" selectNullMessage=\"All types\">\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #tableHeader>\n\t\t\t\t\t<div class=\"d-flex flex-wrap pt-1\" *ngIf=\"auditType === 'Datalink'\">\n\t\t\t\t\t\t<form-tags-dropdown labelLeft=\"Datalinks\" [(ngModel)]=\"datalinks\" [items]=\"hubCache.hub.dexihDatalinks\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"name\" [enableAddAll]=\"true\">\n\t\t\t\t\t\t</form-tags-dropdown>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"d-flex flex-wrap pt-1\" *ngIf=\"auditType === 'Datajob'\">\n\t\t\t\t\t\t<form-tags-dropdown labelLeft=\"Datajobs\" [(ngModel)]=\"datajobs\" [items]=\"hubCache.hub.dexihDatajobs\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"name\" [enableAddAll]=\"true\">\n\t\t\t\t\t\t</form-tags-dropdown>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"d-flex flex-wrap pt-1\" *ngIf=\"auditType === 'DatalinkTest'\">\n\t\t\t\t\t\t<form-tags-dropdown labelLeft=\"DatalinkTests\" [(ngModel)]=\"datalinkTests\"\n\t\t\t\t\t\t\t[items]=\"hubCache.hub.dexihDatalinkTests\" itemKey=\"key\" itemName=\"name\" [enableAddAll]=\"true\">\n\t\t\t\t\t\t</form-tags-dropdown>\n\t\t\t\t\t</div>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-result=\"item\">\n\t\t\t\t\t<dexih-button-edit class=\"mr-1\" [routerLink]=\"[hubPath, 'datalink-edit', 'edit', result.referenceKey]\" text='Edit Datalink'></dexih-button-edit>\n\t\t\t\t\t<dexih-button-view [routerLink]=\"['result-view', result.auditConnectionKey, result.auditKey]\" queryParamsHandling=\"merge\"></dexih-button-view>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #rowStatus select=\"rowStatus\" let-result=\"item\">\n\t\t\t\t\t<datalink-status [writerResult]=\"result\"></datalink-status>\n\t\t\t\t</ng-template>\n\n\t\t</dexih-table>\n    </dexih-widget>\n</div>\n\n\n","export * from './results-view.component';","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { PreviewResults, HubCache } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { Subscription, Subject} from 'rxjs';\nimport { PromiseWithCancel, CancelToken } from '../../../+auth/auth.models';\nimport { TransformWriterResult, DexihDatalink, DexihTable, SelectQuery, eDeltaType, Filter, eCompare,\n    eAndOr, eTypeCode, DownloadObject, eSourceType, eDownloadFormat, DexihDatalinkColumn,\n    TableColumn, eDataObjectType, DexihTableColumn } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'preview-results',\n    templateUrl: './preview-results.component.html'\n})\n\nexport class PreviewResultsComponent implements OnInit, OnDestroy {\n    @Input() auditResult: TransformWriterResult;\n\n    _hubCacheSubscription: Subscription;\n\n    private cache: HubCache;\n\n    public targetTable: DexihTable;\n    public columns: Array<any>;\n    public data: Array<any>;\n    public selectQuery = new SelectQuery();\n\n    private refreshDataSubject: Subject<void> = new Subject<void>();\n\n    private runningQuery: PromiseWithCancel<PreviewResults>;\n    private cancelToken = new CancelToken();\n\n    constructor(\n        private hubService: HubService\n    ) {\n    }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n            this.cache = cache;\n\n            switch (this.auditResult.auditType) {\n                case 'Table':\n                    this.targetTable = this.cache.getTable(this.auditResult.referenceKey);\n                    this.refresh();\n                    break;\n                case 'Datalink':\n                case 'DatalinkStep':\n                    let datalink = this.cache.hub.dexihDatalinks.find(c => c.key === this.auditResult.referenceKey);\n\n                    if (!datalink) {\n                        this.hubService.addHubErrorMessage(`The datalink with the key ${this.auditResult.referenceKey} cannot be found.`)\n                        return;\n                    }\n\n                    if (datalink.dexihDatalinkTargets.length >= 1) {\n                        this.targetTable = this.cache.getTable(datalink.dexihDatalinkTargets[0].tableKey);\n                    } else {\n                        this.hubService.addHubErrorMessage(`There is no target table for this datalink.`)\n                        return;\n                    }\n                    this.refresh();\n                    break;\n                case 'DatalinkTestStep':\n                    let testStep = this.cache.getDatalinkTestStep(this.auditResult.referenceKey);\n\n                    if (!testStep) {\n                        this.hubService.addHubErrorMessage(`The test step with the key ${this.auditResult.referenceKey} cannot be found.`)\n                        return;\n                    }\n\n                    let testDatalink = this.cache.hub.dexihDatalinks.find(c => c.key === testStep.datalinkKey);\n\n                    if (testDatalink.dexihDatalinkTargets.length >= 1) {\n                        let table = this.cache.getTable(testDatalink.dexihDatalinkTargets[0].tableKey);\n                        let testTable = JSON.parse(JSON.stringify(table));\n                        testTable.name = testStep.errorTableName;\n                        testTable.schema = testStep.errorSchema;\n                        testTable.connectionKey = testStep.errorConnectionKey;\n\n                        for (let column of testTable.dexihTableColumns) {\n                            column.deltaType = eDeltaType.NonTrackingField;\n                        }\n                        let auditCol = new DexihTableColumn();\n                        auditCol.name = 'error_audit_key';\n                        auditCol.dataType = eTypeCode.Int64;\n                        auditCol.deltaType = eDeltaType.CreateAuditKey;\n\n                        let opCol = new DexihTableColumn();\n                        opCol.name = 'error_operation';\n                        opCol.dataType = eTypeCode.CharArray;\n                        opCol.maxLength = 1;\n                        opCol.deltaType = eDeltaType.DatabaseOperation;\n\n\n                        let reasonCol = new DexihTableColumn();\n                        reasonCol.name = 'mismatch_reason';\n                        reasonCol.dataType = eTypeCode.String;\n                        reasonCol.deltaType = eDeltaType.UpdateReason;\n\n                        testTable.dexihTableColumns.push(auditCol);\n                        testTable.dexihTableColumns.push(opCol);\n                        testTable.dexihTableColumns.push(reasonCol);\n\n                        this.targetTable = testTable;\n                    } else {\n                        this.hubService.addHubErrorMessage(`There is no target table for this datalink.`)\n                        return;\n                    }\n                    this.refresh();\n                    break;\n                case 'datajob':\n                break;\n            }\n\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription ) { this._hubCacheSubscription.unsubscribe(); }\n        if (this.runningQuery) { this.runningQuery.cancel(); }\n        this.cancelToken.cancel();\n    }\n\n    createSelectQuery(): SelectQuery {\n        const createAuditColumn = this.targetTable.dexihTableColumns.find(c => c.deltaType === eDeltaType.CreateAuditKey);\n        const updateAuditColumn = this.targetTable.dexihTableColumns.find(c => c.deltaType === eDeltaType.UpdateAuditKey);\n\n        if (!createAuditColumn && !updateAuditColumn) {\n            this.hubService.addHubErrorMessage(\n            // tslint:disable-next-line:max-line-length\n            `The table ${this.targetTable.name} does not contain a create or update audit column which is required to connect to an audit.`);\n            return;\n        }\n\n        // clone the query, and add the audit filter columns\n        let selectQuery = JSON.parse(JSON.stringify(this.selectQuery));\n\n        if (createAuditColumn) {\n            let filter = new Filter();\n            filter.column1 = new TableColumn();\n            Object.assign(filter.column1, createAuditColumn);\n            filter.operator = eCompare.IsEqual;\n            filter.value2 = this.auditResult.auditKey;\n            filter.andOr = eAndOr.Or\n            filter.compareDataType = eTypeCode.Int64;\n            selectQuery.filters.push(filter);\n        }\n\n        if (updateAuditColumn) {\n            let filter = new Filter();\n            filter.column1 = new TableColumn();\n            Object.assign(filter.column1, updateAuditColumn);\n            filter.operator = eCompare.IsEqual;\n            filter.value2 = this.auditResult.auditKey;\n            filter.andOr = eAndOr.Or\n            filter.compareDataType = eTypeCode.Int64;\n            selectQuery.filters.push(filter);\n        }\n\n        selectQuery.rows = 100;\n\n        return selectQuery;\n    }\n\n    refresh() {\n        let selectQuery = this.createSelectQuery();\n\n        let query = this.hubService.previewTableDataQuery(this.targetTable, false, selectQuery, null, null, this.cancelToken);\n\n        query.then(result => {\n            this.refreshDataSubject.next();\n            this.columns = result.columns;\n            this.data = result.data;\n        }).catch(() => {\n            // this.hubService.addHubErrorMessage(reason);\n        });\n\n        this.runningQuery = query;\n    }\n\n    download() {\n        let selectQuery = this.createSelectQuery();\n        let downloadObject = new DownloadObject();\n        downloadObject.objectKey = this.targetTable.key;\n        downloadObject.objectType = eDataObjectType.Table;\n        downloadObject.query = selectQuery;\n        this.hubService.downloadData([downloadObject], false, eDownloadFormat.Csv, this.cancelToken)\n    }\n}\n","<dexih-table [enableMultiSelect]=\"false\" [columns]=\"columns\" [data]=\"data\">\n\n    <ng-template #actions let-items=\"items\">\n        <dexih-button-refresh (click)=\"refresh()\" text=\"Reload\"></dexih-button-refresh>\n        <dexih-button-download class=\"ml-1\" (click)=\"download()\"></dexih-button-download>\n    </ng-template>\n    <ng-template #tableHeader>\n        <query-builder [selectQuery]=\"selectQuery\" [columns]=\"targetTable.dexihTableColumns\" [inputColumns]=\"inputColumns\" [refreshEvent]=\"refreshDataSubject.asObservable()\" (onRefreshData)=\"refresh()\"></query-builder>\n    </ng-template>\n</dexih-table>","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubService } from '../../hub.service';\nimport { CancelToken } from '../../../+auth/auth.models';\nimport { TransformWriterResult } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'profile-results',\n    templateUrl: './profile-results.component.html'\n})\n\nexport class ProfileResultsComponent implements OnInit, OnDestroy {\n    @Input() auditResult: TransformWriterResult;\n\n    columns: Array<any>;\n    data: Array<any>;\n\n    showDetailed = false;\n\n    private cancelToken = new CancelToken();\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService\n    ) {\n\n    }\n\n    ngOnInit() {\n        this.refresh();\n    }\n\n    ngOnDestroy(): void {\n        this.cancelToken.cancel();\n    }\n\n    refresh() {\n        this.hubService.previewProfileData(this.auditResult, !this.showDetailed, this.cancelToken).then(result => {\n            this.columns = result.columns;\n            this.data = result.data;\n        }).catch(reason => {\n          // this.hubService.addHubMessage(reason);\n        });\n    }\n\n    download() {\n        this.hubService.downloadProfileData(this.auditResult, this.cancelToken);\n    }\n}\n","<dexih-table [enableMultiSelect]=\"false\" [columns]=\"columns\" [data]=\"data\">\n\n    <ng-template #actions let-items=\"items\">\n        <dexih-button-refresh (click)=\"refresh()\" text=\"Reload\"></dexih-button-refresh>\n        <dexih-button-download class=\"ml-1\" (click)=\"download()\"></dexih-button-download>\n\n        <div class=\"d-flex flex-wrap\">\n            <div class=\"flex-fill pl-1\" >\n                <form-checkbox label=\"Show Detailed Results\" [(ngModel)]=\"showDetailed\" [border]=\"true\" (change)=\"refresh()\"></form-checkbox>\n            </div>\n        </div>\n    </ng-template>\n</dexih-table>","import { Component, OnInit, Input } from '@angular/core';\nimport { TransformWriterResult } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'result-progress',\n    templateUrl: './progress.component.html'\n})\n\nexport class ProgressComponent implements OnInit {\n    @Input() public value: number;\n    @Input() public total: number;\n    @Input() public caption: string;\n    @Input() public color: string;\n\n    percent = '0%';\n\n    constructor() {\n\n    }\n\n    ngOnInit() {\n        if (this.value === 0) {\n            this.percent = '0%';\n        } else if (this.total === 0) {\n            this.percent = '100%';\n        } else {\n            let percent = 100 * this.value / this.total;\n            if (percent < 0) { percent = 0; }\n            if (percent > 100) { percent = 100; }\n            this.percent = percent.toString() + '%';\n        }\n    }\n}\n","<div class=\"\">\n    <span class=\"text\">  {{caption}}\n        <span class=\"float-right\">{{value}}/{{total}}</span> \n    </span>\n    <div class=\"progress\" style=\"width:100%\">\n        <div [ngClass]=\"['progress-bar', color]\" [ngStyle]=\"{width: percent}\">&nbsp;</div>\n    </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubService } from '../../hub.service';\nimport { HubCache } from '../../hub.models';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable, Subscription, combineLatest} from 'rxjs';\nimport { CancelToken } from '../../../+auth/auth.models';\nimport { TransformWriterResult, eSharedObjectType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'results-view',\n    templateUrl: './results-view.component.html',\n    styles: []\n})\nexport class ResultsViewComponent implements OnInit, OnDestroy {\n    hubCache: HubCache;\n    referenceKeys: Array<number>;\n\n    private _subscription: Subscription;\n    private _transformWriterResultChangeSubscription: Subscription;\n\n    public auditResult: TransformWriterResult;\n\n    showPage = false;\n    showPageMessage = 'Loading...';\n    view: string;\n\n    resultChartData: Array<any>;\n\n    private cancelToken = new CancelToken();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.route.queryParams,\n                this.hubService.getHubCacheObservable(true),\n                this.hubService.getRemoteAgentObservable(true)\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                let queryParams = result[2];\n                this.hubCache = result[3];\n                let remoteAgent = result[4]\n\n                let auditConnectionKey = +params['auditConnectionKey'];\n                let auditKey = +params['auditKey'];\n\n                this.showPage = false;\n                this.showPageMessage = 'Waiting for an active remote agent...';\n\n                this.view = queryParams['view'];\n                if (!this.view) { this.view = 'Stats'; }\n\n                if (remoteAgent) {\n                    this.showPage = true;\n                    this.showPageMessage = '';\n                    this.hubService.getResultDetail(auditConnectionKey, auditKey, this.cancelToken).then(r => {\n                        this.auditResult = r[0];\n                    });\n                }\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Results View');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._transformWriterResultChangeSubscription) { this._transformWriterResultChangeSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    watchChanges() {\n        // watch the current connection in case it is changed in another session.\n        if (this._transformWriterResultChangeSubscription) { this._transformWriterResultChangeSubscription.unsubscribe(); }\n        this._transformWriterResultChangeSubscription = this.hubService.getTransformWriterResultChangeObservable()\n        .subscribe(writerResult => {\n            if (this.auditResult && writerResult.auditConnectionKey === this.auditResult.auditConnectionKey &&\n                    writerResult.auditKey === this.auditResult.auditKey) {\n                this.auditResult = writerResult;\n            }\n        });\n    }\n\n}\n\n\n","<div class=\"container-fluid\">\n\t<dexih-widget *ngIf=\"auditResult\" [title]=\"auditResult?.referenceName\" iconClass=\"fa fa-lg fa-fw fa-trophy\"\n\t[showCloseButton]=\"true\" (close)=\"close()\">\n\n\t\t<ng-template #header>\n\t\t\t\t<ul class=\"nav nav-tabs card-header-tabs\">\n\t\t\t\t<li class=\"nav-item\" >\n\t\t\t\t\t<a class=\"nav-link\" [class.active]=\"view=='Stats'\" routerLink=\".\" [queryParams]=\"{view: 'Stats'}\"><i class=\"fa fa-clock-o\"></i> <span class=\"ml-1 d-none d-md-inline\">Execution Stats</span></a>\n\t\t\t\t</li>\n\n\t\t\t\t<li class=\"nav-item\" *ngIf=\"auditResult.profileTableName && ( auditResult?.auditType == 'DatalinkStep' || auditResult?.auditType == 'Datalink')\" >\n\t\t\t\t\t<a class=\"nav-link\" [class.active]=\"view=='Profile'\" routerLink=\".\" [queryParams]=\"{view: 'Profile'}\"><i class=\"fa fa-tachometer\" ></i> <span class=\"ml-1 d-none d-md-inline\">Profile Data</span></a>\n\t\t\t\t</li>\n\n\t\t\t\t<li class=\"nav-item\" *ngIf=\"auditResult?.auditType == 'DatalinkStep' || auditResult?.auditType == 'Datalink' || auditResult?.auditType == 'Table' || auditResult?.auditType == 'DatalinkTestStep'\" >\n\t\t\t\t\t<a class=\"nav-link\" [class.active]=\"view=='Preview'\" routerLink=\".\" [queryParams]=\"{view: 'Preview'}\"><i class=\"fa fa-table\" ></i> <span class=\"ml-1 d-none d-md-inline\">Preview</span></a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</ng-template>\n\t\t<div [ngSwitch]=\"view\">\n\t\t\t<div *ngSwitchCase=\"'Stats'\">\n\t\t\t\t<stats [auditResult]=\"auditResult\"></stats>\n\t\t\t</div>\n\t\t\t<div *ngSwitchCase=\"'Profile'\">\n\t\t\t\t<profile-results [auditResult]=\"auditResult\"></profile-results>\n\t\t\t</div>\n\t\t\t<div *ngSwitchCase=\"'Preview'\">\n\t\t\t\t<preview-results [auditResult]=\"auditResult\"></preview-results>\n\t\t\t</div>\n\t\t</div>\n\t</dexih-widget>\n</div>","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../../shared/shared.module';\n\nimport { ResultsViewComponent } from './results-view.component';\nimport { StatsComponent } from './stats.component';\nimport { ProgressComponent } from './progress.component';\nimport { ProfileResultsComponent } from './profile-results.component';\nimport { PreviewResultsComponent } from './preview-results.component';\nimport { HubSharedModule } from '../../hub.shared.module';\n\n\n@NgModule({\n    imports: [SharedModule, HubSharedModule],\n    exports: [\n        ResultsViewComponent\n    ],\n    declarations: [\n        ResultsViewComponent,\n        ProgressComponent,\n        StatsComponent,\n        ProfileResultsComponent,\n        PreviewResultsComponent\n    ],\n    providers: [],\n})\nexport class ResultsViewModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TransformWriterResult, eRunStatus, eTriggerMethod } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'stats',\n    templateUrl: './stats.component.html'\n})\n\nexport class StatsComponent implements OnInit {\n    @Input() auditResult: TransformWriterResult;\n\n    exceptionHidden = true;\n\n    columns: Array<any>;\n\n    public barChartData: any[];\n\n    public runTime: number;\n\n    public fail = false;\n    public success = false;\n    eRunStatus = eRunStatus;\n    eTriggerMethod = eTriggerMethod;\n\n\n    constructor(public route: ActivatedRoute, public router: Router\n    ) {\n\n    }\n\n    ngOnInit() {\n\n        if (this.auditResult.endTime) {\n            this.runTime = ( (new Date(this.auditResult.endTime)).valueOf() - (new Date(this.auditResult.startTime)).valueOf()) / 1000;\n        } else {\n            if (this.auditResult.runStatus === eRunStatus.Running ||\n                this.auditResult.runStatus === eRunStatus.RunningErrors ||\n                this.auditResult.runStatus === eRunStatus.Started) {\n                    this.runTime = ( (new Date()).valueOf() -\n                        (new Date(this.auditResult.startTime)).valueOf()) / 1000;\n                } else {\n                this.runTime = null;\n            }\n        }\n\n        switch (this.auditResult.runStatus) {\n            case eRunStatus.Abended:\n            case eRunStatus.Cancelled:\n            case eRunStatus.Failed:\n            case eRunStatus.FinishedErrors:\n                this.fail = true;\n                break;\n            case eRunStatus.Finished:\n            case eRunStatus.Passed:\n                this.success = true;\n\n        }\n\n        this.barChartData = [\n            {\n                name: 'Reading',\n                value: this.rowsPerSecond(this.auditResult.rowsReadPrimary + this.auditResult.rowsReadReference, this.auditResult.readTicks)\n            },\n            {\n                name: 'Processing',\n                value: this.rowsPerSecond(this.auditResult.rowsTotal, this.auditResult.processingTicks)\n            },\n            {\n                name: 'Writing',\n                value: this.rowsPerSecond(this.auditResult.rowsTotal, this.auditResult.writeTicks)\n            }\n        ];\n\n    }\n\n    numberWithCommas(x) {\n        const parts = x.toString().split('.');\n        parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n        return parts.join('.');\n    }\n\n    rowsPerSecond(rows, ticks) {\n        if (ticks === 0) {\n            return 0;\n        }\n        return rows / (ticks / 10000000);\n    }\n\n    openResult(auditKey) {\n        this.router.navigate(['..', auditKey], { relativeTo: this.route });\n    }\n\n}\n","<ul class=\"list-group\">\n    <li class=\"list-group-item list-group-item-danger\" *ngIf=\"fail\">\n        <h5>Error encountered!</h5>\n    </li>\n    <li class=\"list-group-item list-group-item-success\" *ngIf=\"success\">\n        <h5>Finished Successfully</h5>\n    </li>\n    <li class=\"list-group-item\" *ngIf=\"auditResult?.message\">\n        <div class=\"d-flex mb-2\">\n            {{auditResult.message}}\n            <div class=\"ml-auto\">\n                <dexih-button *ngIf=\"auditResult.exceptionDetails\" (click)='exceptionHidden = !exceptionHidden'>Details</dexih-button>\n            </div>\n        </div>\n        <div>\n            <pre *ngIf=\"!exceptionHidden && auditResult.exceptionDetails\">{{auditResult.exceptionDetails}}</pre>\n        </div>\n    </li>\n    <li class=\"list-group-item list-group-item-info rounded-0\">\n        <h5>Running Time</h5>\n    </li>\n    <li class=\"list-group-item \">\n            <div class=\"container\">\n                <div class=\"row rounded text-white bg-secondary\">\n                    <ng-template [ngIf]=\"auditResult.targetTableName\">\n                            <div class=\"col border border-white\">Target Table</div>\n                            <div class=\"col border border-white\">{{auditResult.targetTableName}}</div>\n                            <div class=\"w-100\"></div>\n                    </ng-template>                    \n                    <div class=\"col border border-white\">Run Status</div>\n                    <div class=\"col border border-white\">{{eRunStatus[auditResult.runStatus]}}</div>\n                    <div class=\"w-100\"></div>                    \n                    <div class=\"col border border-white\">Start Date</div>\n                    <div class=\"col border border-white\">{{auditResult.initializeTime | calendar}}</div>\n                    <div class=\"w-100\"></div>\n                    <ng-template [ngIf]=\"auditResult.scheduledTime\">\n                        <div class=\"col border border-white\">Scheduled Time</div>\n                        <div class=\"col border border-white\">{{auditResult.scheduledTime | calendar}}</div>\n                        <div class=\"w-100\"></div>\n                    </ng-template>\n\n                    <div class=\"col border border-white\">Initialized</div>\n                    <div class=\"col border border-white\">{{auditResult.initializeTime | calendar}}</div>\n                    <div class=\"w-100\"></div>\n                    <div class=\"col border border-white\">Started</div>\n                    <div class=\"col border border-white\">{{auditResult.startTime | calendar}}</div>\n                    <div class=\"w-100\"></div>\n                    <div class=\"col border border-white\">Finished</div>\n                    <div class=\"col border border-white\">{{auditResult.endTime | calendar}}</div>\n                    <div class=\"w-100\"></div>\n                    <div class=\"col border border-white\">Run Time</div>\n                    <div class=\"col border border-white\">{{runTime | number: '1.2-2'}} seconds</div>\n                    <div class=\"w-100\"></div>\n                    <div class=\"col border border-white\">Triggered By</div>\n                    <div class=\"col border border-white\">{{eTriggerMethod[auditResult.triggerMethod]}}</div>\n                </div>\n            </div>\n    </li>\n    <li *ngIf=\"auditResult.childResults?.length > 0\" class=\"list-group-item list-group-item-info\">\n        <h5>Child Results</h5>\n    </li>\n    <li *ngIf=\"auditResult.childResults?.length > 0\" class=\"list-group-item \">\n        <div *ngFor=\"let result of auditResult.childResults\">\n            <div class=\"\">\n                <span class=\"text\">  {{result.auditType ==='Table' ? result.targetTableName : result.referenceName}}\n                </span>\n                <datalink-status [writerResult]=\"result\"></datalink-status>\n            </div>\n        </div>\n    </li>\n    <li class=\"list-group-item list-group-item-info\">\n        <h5>Row Distribution</h5>\n    </li>\n    <li class=\"list-group-item \">\n            <result-progress *ngIf=\"auditResult.rowsReadPrimary > 0\" [value]=\"auditResult.rowsReadPrimary\" [total]=\"auditResult.rowsReadPrimary + auditResult.rowsReadReference\"\n                caption=\"Source Rows\" color=\"bg-color-blueDark\"></result-progress>\n            <result-progress *ngIf=\"auditResult.rowsReadReference > 0\" [value]=\"auditResult.rowsReadReference\" [total]=\"auditResult.rowsReadPrimary + auditResult.rowsReadReference\"\n                caption=\"Joined Rows\" color=\"bg-color-blueLight\"></result-progress>\n            <result-progress *ngIf=\"auditResult.rowsCreated > 0\" [value]=\"auditResult.rowsCreated\" [total]=\"auditResult.rowsTotal\" caption=\"Created\"\n                color=\"bg-color-greenDark\"></result-progress>\n            <result-progress *ngIf=\"auditResult.rowsUpdated > 0\" [value]=\"auditResult.rowsUpdated\" [total]=\"auditResult.rowsTotal\" caption=\"Updated\"\n                color=\"bg-color-blueDark\"></result-progress>\n            <result-progress *ngIf=\"auditResult.rowsDeleted > 0\" [value]=\"auditResult.rowsDeleted\" [total]=\"auditResult.rowsTotal\" caption=\"Deleted\"\n                color=\"bg-color-magenta\"></result-progress>\n            <result-progress *ngIf=\"auditResult.rowsRejected > 0\" [value]=\"auditResult.rowsRejected\" [total]=\"auditResult.rowsTotal\"\n                caption=\"Rejected\" color=\"bg-color-red\"></result-progress>\n            <result-progress *ngIf=\"auditResult.rowsPreserved > 0\" [value]=\"auditResult.rowsPreserved\" [total]=\"auditResult.rowsTotal\"\n                caption=\"Preserved\" color=\"bg-color-pinkDark\"></result-progress>\n            <result-progress *ngIf=\"auditResult.rowsIgnored > 0\" [value]=\"auditResult.rowsIgnored\" [total]=\"auditResult.rowsTotal\" caption=\"Ignored\"\n                color=\"bg-color-grayDark\"></result-progress>\n            <result-progress *ngIf=\"auditResult.passed > 0\" [value]=\"auditResult.passed\" [total]=\"auditResult.rowsTotal\" caption=\"Passed\"\n                color=\"bg-color-greenDark\"></result-progress>\n            <result-progress *ngIf=\"auditResult.failed > 0\" [value]=\"auditResult.failed\" [total]=\"auditResult.rowsTotal\" caption=\"Failed\"\n                color=\"bg-color-magenta\"></result-progress>\n        </li>\n    <li class=\"list-group-item list-group-item-info\">\n        <h5>Performance Estimates (rows/second)</h5>\n    </li>\n    <li class=\"list-group-item \">\n            <div class=\"row rounded text-white bg-secondary\">\n                <ng-template ngFor let-item [ngForOf]=\"auditResult.performanceSummary\">\n                        <div class=\"col border border-white\">{{item.transformName}}</div>\n                        <div class=\"col border border-white\">{{item.seconds == 0 ? 'N/A' : ((item.rows / item.seconds) | number: '1.2-2')}} rows/second</div>\n                        <div class=\"w-100\"></div>\n                </ng-template>                    \n            </div>\n        <div style=\"display: grid\">\n            <ngx-charts-bar-vertical\n                scheme=\"natural\"\n                [results]=\"barChartData\" \n                [gradient]=\"true\" \n                [xAxis]=\"true\" \n                [yAxis]=\"true\"\n                [legend]=\"false\" \n                [showGridLines]=\"true\" \n                [showXAxisLabel]=\"true\"\n                [showYAxisLabel]=\"true\" \n                yAxisLabel=\"rows/second\" \n                xAxisLabel=\"operation\">\n            </ngx-charts-bar-vertical>\n        </div>\n    </li>\n</ul>","\nexport {SearchComponent} from './search.component';\nexport {SearchModule} from './search.module';\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { eSearchObjectType, SearchObjectTypes } from '../hub.models';\n\n@Pipe({\n  name: 'objectTypeName'\n})\nexport class ObjectTypePipe implements PipeTransform {\n\n  transform(value: eSearchObjectType): any {\n    return SearchObjectTypes.find(c => c.key === value).name;\n  }\n}\n","import { HostListener, Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { HubService } from '../hub.service';\nimport { AuthService } from '../../+auth/auth.service';\nimport { HubCache, SearchResult, eSearchObjectType, SearchObjectTypes } from '../hub.models';\nimport { Observable, Subscription, combineLatest} from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n    selector: 'search',\n    templateUrl: './search.component.html',\n})\n\nexport class SearchComponent implements OnInit, OnDestroy {\n\n    private _subscription: Subscription;\n    private _searchSubscription: Subscription;\n    public hubCache: HubCache;\n\n    public searchForm: FormGroup;\n\n    searchObjectTypes = SearchObjectTypes;\n    eSearchObjectType = eSearchObjectType;\n\n    private isFirst = false;\n\n    searchResults: Array<SearchResult>;\n\n    constructor(public hubService: HubService,\n        private authService: AuthService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private fb: FormBuilder\n    ) { }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                let params = result[0];\n                this.hubCache = result[1];\n\n                if (!this.isFirst) {\n                    this.isFirst = false;\n                    let searchObject = +params['searchObject'];\n                    if (!searchObject) {\n                        searchObject = 0;\n                    }\n\n                    this.searchForm = this.fb.group({\n                        'searchString': [params['search'], [\n                        ]],\n                        'searchObject': [searchObject, [\n                        ]],\n                    });\n\n                    this.updateSearch();\n\n                    if (this._searchSubscription) { this._searchSubscription.unsubscribe(); }\n                    this._searchSubscription = this.searchForm.valueChanges\n                        .pipe(debounceTime(500))\n                        .subscribe(newValue => {\n                            this.updateSearch();\n                        });\n                }\n\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Search');\n        }\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._searchSubscription) { this._searchSubscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    updateSearch() {\n        if (!this.hubCache.isLoaded()) { return; }\n\n        this.searchResults = this.hubCache.search(this.searchForm.value.searchString, this.searchForm.value.searchObject);\n\n        if (history.pushState) {\n            let newUrl = this.hubCache.getHubUrl() + '/search';\n            let searchString = this.searchForm.value.searchString;\n            let searchObject = this.searchForm.value.searchObject;\n            if (searchString) {\n                newUrl += '/' + searchObject + '/' + searchString;\n            }\n            this.router.navigateByUrl(newUrl);\n        }\n    }\n}\n\n\n","<div class=\"container-fluid\">\n\t<dexih-widget title=\"Search Results\" iconClass=\"fa fa-lg fa-fw fa-search\" [showCloseButton]=\"true\" [padding]=\"true\" (close)=\"close()\">\n\t\t<form *ngIf=\"searchForm\" [formGroup]=\"searchForm\">\n\t\t\t<fieldset>\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Search Term\" formControlName=\"searchString\" placeholder=\"Search...\" iconClass=\"fa fa-search\">\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-select label=\"Restrict to\" formControlName=\"searchObject\" [items]=\"searchObjectTypes\" itemKey=\"key\" itemName=\"name\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t</form>\n\n\t\t<div role=\"content\">\n\t\t\t<div class=\"well\" *ngIf=\"!searchResults || searchResults?.length == 0\">\n\t\t\t\t<h5>No search results available.</h5>\n\t\t\t</div>\n\n\t\t\t<div class=\"well\">\n\t\t\t\t<ul class=\"list-group \">\n\t\t\t\t\t<li *ngFor=\"let searchResult of searchResults\" class=\"list-group-item\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h5>{{searchResult.objectType | objectTypeName }}</h5>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-xs-9\" [ngSwitch]=\"searchResult.objectType\">\n\t\t\t\t\t\t\t<datajob-view *ngSwitchCase=\"eSearchObjectType.Datajob\" [datajob]=\"searchResult.object\"></datajob-view>\n\t\t\t\t\t\t\t<datalink-view *ngSwitchCase=\"eSearchObjectType.Datalink\" [datalink]=\"searchResult.object\"></datalink-view>\n\t\t\t\t\t\t\t<connection-view *ngSwitchCase=\"eSearchObjectType.Connection\" [connection]=\"searchResult.object\"></connection-view>\n\t\t\t\t\t\t\t<table-view *ngSwitchCase=\"eSearchObjectType.Table\" [connection]=\"searchResult.objectParent\" [table]=\"searchResult.object\"></table-view>\n\t\t\t\t\t\t\t<table-column-view *ngSwitchCase=\"eSearchObjectType.TableColumn\" [table]=\"searchResult.objectParent\" [column]=\"searchResult.object\"></table-column-view>\n\t\t\t\t\t\t\t<columnValidation-view *ngSwitchCase=\"eSearchObjectType.ColumnValidation\" [columnValidation]=\"searchResult.object\"></columnValidation-view>\n\t\t\t\t\t\t\t<fileFormat-view *ngSwitchCase=\"eSearchObjectType.FileFormat\" [fileFormat]=\"searchResult.object\"></fileFormat-view>\n\t\t\t\t\t\t\t<view-view *ngSwitchCase=\"eSearchObjectType.View\" [view]=\"searchResult.object\"></view-view>\n\t\t\t\t\t\t\t<api-view *ngSwitchCase=\"eSearchObjectType.Api\" [api]=\"searchResult.object\"></api-view>\n\t\t\t\t\t\t\t<dashboard-view *ngSwitchCase=\"eSearchObjectType.Dashboard\" [dashboard]=\"searchResult.object\"></dashboard-view>\n\t\t\t\t\t\t\t<listOfValues-view *ngSwitchCase=\"eSearchObjectType.ListOfValues\" [listOfValues]=\"searchResult.object\"></listOfValues-view>\n\t\t\t\t\t\t\t<datalinkTest-view *ngSwitchCase=\"eSearchObjectType.DatalinkTest\" [datalinkTest]=\"searchResult.object\"></datalinkTest-view>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t</dexih-widget>\n</div>","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../../shared/shared.module';\nimport { SearchComponent } from './search.component';\nimport { ObjectTypePipe } from './object-type.pipe';\nimport { HubSharedModule} from '../hub.shared.module';\n\n@NgModule({\n    imports: [\n        SharedModule,\n        HubSharedModule,\n        ReactiveFormsModule\n    ],\n    exports: [],\n    declarations: [SearchComponent, ObjectTypePipe],\n    providers: [],\n})\nexport class SearchModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubService } from '../hub.service';\nimport { HubCache } from '../hub.models';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable, BehaviorSubject, Subscription, combineLatest} from 'rxjs';\nimport { AuthService } from '../../+auth/auth.service';\nimport { DexihDatalink, eSourceType, eDownloadFormat, DownloadObject,\n    eDataObjectType, eSharedObjectType } from '../../shared/shared.models';\nimport { CancelToken } from '../../+auth/auth.models';\n\n@Component({\n    selector: 'sharedData-index',\n    templateUrl: './sharedData-index.component.html',\n    styles: []\n})\nexport class SharedDataIndexComponent implements OnInit, OnDestroy {\n    hubCache: HubCache;\n\n    private _subscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n    private cancelToken: CancelToken = new CancelToken();\n\n    public eSharedObjectType = eSharedObjectType;\n\n    columns = [\n        { name: 'objectTypeName', title: 'Type', format: '' },\n        { name: 'name', title: 'Name', format: '', tags: 'tags' },\n        { name: 'description', title: 'Description', format: 'Md' },\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    typeFilter: string;\n\n    private _tableData = new BehaviorSubject<Array<DexihDatalink>>(null);\n    tableData: Observable<Array<DexihDatalink>> = this._tableData.asObservable();\n\n    constructor(private hubService: HubService, private authService: AuthService, private router: Router, private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.route.queryParams,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                let queryParams = result[2];\n                this.hubCache = result[3];\n\n                this.watchChanges();\n\n                this.typeFilter = queryParams['typeFilter'];\n                if (!this.typeFilter) {\n                    this.typeFilter = 'All';\n                }\n\n                this.route.snapshot.data['pageTitle'] =  this.typeFilter;\n\n                this.updateSharedData();\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Shared Data Index');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    private updateSharedData() {\n        let objects = new Array<any>();\n        if (this.hubCache && this.hubCache.isLoaded()) {\n            if (!this.hubCache.hub.dexihDatalinks && !this.hubCache.hub.dexihConnections) {\n                this._tableData.next(new Array<DexihDatalink>());\n            } else {\n                if (this.typeFilter === 'All' || this.typeFilter === 'Datalink') {\n                    this.hubCache.hub.dexihDatalinks.filter(d => d.isShared).forEach(datalink => {\n                        objects.push({\n                            objectKey: datalink.key,\n                            objectTypeName: eDataObjectType[eDataObjectType.Datalink],\n                            objectType: eDataObjectType.Datalink,\n                            name: datalink.name,\n                            description: datalink.description,\n                            updateDate: datalink.updateDate,\n                            tags: this.hubCache.getObjectTags(eSharedObjectType.Datalink, datalink.key)\n                        });\n                    });\n                }\n\n                if (this.typeFilter === 'All' || this.typeFilter === 'Table') {\n                    this.hubCache.hub.dexihTables.filter(c => c.isShared).forEach(table => {\n                        objects.push({\n                            objectKey: table.key,\n                            objectTypeName: eDataObjectType[eDataObjectType.Table],\n                            objectType: eDataObjectType.Table,\n                            name: table.logicalName + ' (' + table.name + ')',\n                            description: table.description,\n                            updateDate: table.updateDate,\n                            tags: this.hubCache.getObjectTags(eSharedObjectType.TagObjects, table.key)\n                        });\n                    });\n                }\n\n                if (this.typeFilter === 'All' || this.typeFilter === 'View') {\n                    this.hubCache.hub.dexihViews.filter(c => c.isShared).forEach(view => {\n                        objects.push({\n                            objectKey: view.key,\n                            objectTypeName: eDataObjectType[eDataObjectType.View],\n                            objectType: eDataObjectType.View,\n                            name: view.name,\n                            description: view.description,\n                            updateDate: view.updateDate,\n                            tags: this.hubCache.getObjectTags(eSharedObjectType.View, view.key)\n                        });\n                    });\n                }\n\n                if (this.typeFilter === 'All' || this.typeFilter === 'Dashboard') {\n                    this.hubCache.hub.dexihDashboards.filter(c => c.isShared).forEach(dashboard => {\n                        objects.push({\n                            objectKey: dashboard.key,\n                            objectTypeName: eDataObjectType[eDataObjectType.Dashboard],\n                            objectType: eDataObjectType.Dashboard,\n                            name: dashboard.name,\n                            description: dashboard.description,\n                            updateDate: dashboard.updateDate,\n                            tags: this.hubCache.getObjectTags(eSharedObjectType.Dashboard, dashboard.key)\n                        });\n                    });\n                }\n\n                if (this.typeFilter === 'All' || this.typeFilter === 'Api') {\n                    this.hubCache.hub.dexihApis.filter(c => c.isShared).forEach(api => {\n                        objects.push({\n                            objectKey: api.key,\n                            objectTypeName: eDataObjectType[eDataObjectType.Api],\n                            objectType: eDataObjectType.Api,\n                            name: api.name,\n                            description: api.description,\n                            updateDate: api.updateDate,\n                            tags: this.hubCache.getObjectTags(eSharedObjectType.Api, api.key)\n                        });\n                    });\n                }\n\n                this._tableData.next(objects);\n            }\n        }\n\n    }\n\n    public downloadData(dataObjects: Array<any>) {\n        this.hubService.downloadData(dataObjects, true, eDownloadFormat.Csv, this.cancelToken).then(() => {\n            this.hubService.addHubSuccessMessage('The specified data is being downloaded.');\n        }).catch(() => {\n            //            this.hubService.addHubErrorMessage(reason);\n        });\n    }\n\n    public preview(dataObject: DownloadObject) {\n        if (dataObject.objectType === eDataObjectType.Table) {\n            this.router.navigate(['table-preview', dataObject.objectKey], { relativeTo: this.route });\n        }\n        if (dataObject.objectType === eDataObjectType.Datalink) {\n            this.router.navigate(['datalink-preview', dataObject.objectKey], { relativeTo: this.route });\n        }\n        if (dataObject.objectType === eDataObjectType.View) {\n            this.router.navigate(['view-preview', dataObject.objectKey], { relativeTo: this.route });\n        }\n        if (dataObject.objectType === eDataObjectType.Dashboard) {\n            this.router.navigate(['dashboard-preview', dataObject.objectKey], { relativeTo: this.route });\n        }\n        if (dataObject.objectType === eDataObjectType.Api) {\n            this.router.navigate(['api-preview', dataObject.objectKey], { relativeTo: this.route });\n        }\n    }\n\n    public unshareSelectedTables(dataObjects: Array<DownloadObject>) {\n        let datalinkKeys = dataObjects.filter(c => c.objectType === eDataObjectType.Datalink).map(c => c.objectKey);\n        if (datalinkKeys.length > 0) {\n            this.hubService.shareItems(datalinkKeys, eDataObjectType.Datalink, false);\n        }\n\n        let tableKeys = dataObjects.filter(c => c.objectType === eDataObjectType.Table).map(c => c.objectKey);\n        if (tableKeys.length > 0) {\n            this.hubService.shareItems(tableKeys, eDataObjectType.Table, false);\n        }\n    }\n\n    watchChanges() {\n        // watch the current connection in case it is changed in another session.\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n            if (hubCacheChange.changeClass === eSharedObjectType.Datalink || hubCacheChange.changeClass === eSharedObjectType.Table) {\n                this.updateSharedData();\n            }\n        });\n\n    }\n}\n\n\n","<div class=\"container-fluid\">\n    <dexih-widget title=\"Shared Data\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-newspaper-o\" \n\t\t[showCloseButton]=\"true\"\n\t\t[padding]=\"false\"\n\t\t(close)=\"close()\"\n\t>\n\n\t<dexih-table \n\t\t[enableMultiSelect]=\"true\"\n\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t[columns]=\"columns\"\n\t\t[dataObservable]=\"tableData\"\n\t\t(rowClick)=\"preview($event)\"\n\t\t[tags]=\"this.hubCache.hub.dexihTags\"\n\t\t>\n\n\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n\t\t\t\t<dexih-button-preview (click)=\"preview(item)\"></dexih-button-preview>\n\t\t\t</ng-template>\n\n\t\t\t<ng-template #rowStatus select=\"rowStatus\" let-item=\"item\">\n\t\t\t</ng-template>\n\n\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-objects=\"items\">\n\t\t\t\t<dexih-button-download class=\"mr-1\" (click)=\"downloadData(objects)\"></dexih-button-download>\n\t\t\t\t<dexih-button-private *ngIf=\"hubCache.canWrite\"  (click)=\"unshareSelectedTables(objects)\"></dexih-button-private>\n\t\t\t</ng-template>\n\n\t\t\t<ng-template #filter select=\"filter\" let-items=\"items\">\n\t\t\t\t<dexih-button-dropdown buttonClass=\"btn-primary mr-1\" iconClass=\"fa fa-filter\" [text]=\"typeFilter\" title=\"Filter by a purpose\" [pullRight]=\"true\">\n\t\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"typeFilter=='All'\" routerLink='.' [queryParams]=\"{typeFilter: 'All'}\" title=\"All Items\">All</a>\n\t\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"typeFilter=='Datalink'\" routerLink='.' [queryParams]=\"{typeFilter: 'Datalink'}\" title=\"Datalinks\">Datalinks</a>\n\t\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"typeFilter=='Table'\" routerLink='.' [queryParams]=\"{typeFilter: 'Table'}\" title=\"Tables\">Tables</a>\n\t\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"typeFilter=='View'\" routerLink='.' [queryParams]=\"{typeFilter: 'View'}\" title=\"Views\">Views</a>\n\t\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"typeFilter=='Dashboard'\" routerLink='.' [queryParams]=\"{typeFilter: 'Dashboard'}\" title=\"Dashboards\">Dashboards</a>\n\t\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"typeFilter=='Api'\" routerLink='.' [queryParams]=\"{typeFilter: 'Api'}\" title=\"Apis\">Apis</a>\n\t\t\t\t</dexih-button-dropdown>\n\t\t\t</ng-template>\n\t</dexih-table>\n\n    </dexih-widget>\n</div>\n\n","export * from './table-index.component';\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubCache } from '../../hub.models';\nimport { DexihTable, eConnectionCategory, eSharedObjectType, eConnectionPurposeItems, eConnectionPurpose, eTableType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'table-index',\n    templateUrl: './table-index.component.html',\n    styles: []\n})\nexport class TableIndexComponent implements OnInit, OnDestroy {\n    private _hubCacheChangeSubscription: Subscription;\n    private _subscription: Subscription;\n\n    hubCache: HubCache;\n    purposeFilter: string;\n    connectionKey: number;\n    connectionName: string;\n    eConnectionPurposeItems = eConnectionPurposeItems;\n    eConnectionPurpose = eConnectionPurpose;\n    eSharedObjectType = eSharedObjectType;\n\n    title: string;\n\n    columns = [\n        { name: 'logicalName', title: 'Logical Name', format: 'Md', footer: 'description', tags: 'tags' },\n        { iconClass: 'sharedIcon', tooltip: 'sharedToolTip', width: '1%', align: 'center' },\n        { name: 'tableType', title: 'Table Type', format: 'Enum', enum: eTableType },\n        { name: 'connectionName', title: 'Connection', footer: 'connectionType', format: '' },\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<DexihTable>>(null);\n    tableData: Observable<Array<DexihTable>> = this._tableData.asObservable();\n\n\n    constructor(private hubService: HubService, private authService: AuthService, private router: Router, private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.route.queryParams,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(async result => {\n                let data = result[0];\n                let params = result[1];\n                let queryParams = result[2];\n                this.hubCache = result[3];\n\n                if (!this.hubCache.isLoaded()) { return; }\n                this.purposeFilter = queryParams['purposeFilter'];\n                if (!this.purposeFilter) { this.purposeFilter = 'All' }\n\n                this.connectionKey = +queryParams['connectionKey'];\n                if (this.connectionKey) {\n                    let connection = this.hubCache.hub.dexihConnections.find(c => c.key === this.connectionKey);\n                    if (connection) {\n                        this.connectionName = connection.name;\n                    }\n                } else {\n                    this.connectionName = 'All';\n                }\n\n                await this.updateTableData();\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Table Index');\n        }\n\n        // watch for any changes in the connections.\n        this.watchChanges();\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    async updateTableData() {\n        this.title = 'Tables ';\n        this.connectionName = 'All';\n\n        if (this.purposeFilter && this.purposeFilter !== 'All') {\n            this.title += ': ' + eConnectionPurpose[this.purposeFilter];\n        }\n        if (this.hubCache && this.hubCache.isLoaded()) {\n            let tableData = [];\n            for await (const table of this.hubCache.hub.dexihTables) {\n                let connection = this.hubCache.hub.dexihConnections.find(c => c.key === table.connectionKey);\n                let connectionReference = await this.hubService.GetConnectionReference(connection);\n\n                if (\n                    ((this.purposeFilter === 'All' || !this.purposeFilter) ||\n                        (connection && connection.purpose.toString() === this.purposeFilter)) &&\n                    (!this.connectionKey || table.connectionKey === this.connectionKey)\n                ) {\n                    let name: string;\n                    if (table.tableType === eTableType.Query) {\n                        name = '(Sql Query)';\n                    } else {\n                        if (table.schema) {\n                            name = table.schema + '.' + table.name;\n                        } else {\n                            name = table.name;\n                        }\n                    }\n\n                    let tableName;\n                    if (this.hubCache.defaultTableLogicalName(table.schema, table.name) === table.logicalName) {\n                        tableName = table.logicalName\n                    } else {\n                        tableName = `${table.logicalName} (${table.name})`\n                    }\n\n                    let description = '';\n                    if ( table.logicalName !== table.name) { description = `Name: ${table.name}`}\n                    if (description) { description += '<br>' }\n                    if (table.description ) { description += table.description; }\n\n                    tableData.push({\n                        key: table.key,\n                        connectionType: connection ? eConnectionPurpose[connection.purpose] : 'undefined',\n                        connectionName: connection ? connection.name : 'undefined',\n                        description: description,\n                        tableType: table.tableType,\n                        name: name,\n                        logicalName: table.logicalName,\n                        tags: this.hubCache.getObjectTags(eSharedObjectType.Table, table.key),\n                        updateDate: table.updateDate,\n                        connectionKey: connection ? connection.key : '',\n                        isFile: connectionReference ? connectionReference.connectionCategory === eConnectionCategory.File : false,\n                        sharedIcon: table.isShared ? 'fa fa-group' : 'fa fa-user-secret',\n                        sharedToolTip: table.isShared ? 'Table is shared' : 'Table is private'\n                    });\n                }\n            };\n\n            if (this.connectionKey) {\n                let connection = this.hubCache.hub.dexihConnections.find(c => c.key === this.connectionKey);\n                if (connection) {\n                    this.connectionName = connection.name;\n                    this.title += ' for connection - ' + connection.name;\n                }\n            }\n\n            this._tableData.next(tableData);\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    routeSibling(path) {\n        this.router.navigate(['..', path]);\n    }\n\n\n    editTable(table: DexihTable) {\n        this.router.navigate(['table-edit', table.key], { queryParamsHandling: 'merge', relativeTo: this.route.parent });\n    }\n\n\n    getConnection(connectionKey: number) {\n        return this.hubCache.hub.dexihConnections.find(c => c.key === connectionKey);\n    }\n\n    watchChanges() {\n        // watch the current connection in case it is changed in another session.\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n            if (hubCacheChange.changeClass === eSharedObjectType.Table || hubCacheChange.changeClass === eSharedObjectType.TagObjects) {\n                this.updateTableData();\n            }\n        });\n    }\n\n\n}\n","<div class=\"container-fluid\">\n    <dexih-widget [title]=\"title\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-table\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\t\t[showIf]=\"hubCache?.hub\"\n\t>\n\n\t\t<ng-template #header>\n\n\n\t\t</ng-template>\n\n\t\t<dexih-table \n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[dataObservable]=\"tableData\"\n\t\t\t(rowClick)=\"editTable($event)\"\n\t\t\t[tags]=\"this.hubCache.hub.dexihTags\"\n\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t>\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<actions-table-button [tables]=\"items\" [refreshTables]=\"true\" ></actions-table-button>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #rowStatus select=\"rowStatus\" let-table=\"item\">\n\t\t\t\t\t<datalink-status [tableKey]='table?.key'></datalink-status>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #filter select=\"filter\" let-items=\"items\">\n\t\t\t\t\t<dexih-button-dropdown *ngIf=\"hubCache?.hub\" class=\"mr-1\"[autoCompact]=\"false\" buttonClass=\"btn btn-primary\" iconClass=\"fa fa-database\" [text]=\"connectionName\" title=\"Filter by a connection\" [pullRight]=\"true\">\n\t\t\t\t\t\t<a *ngFor=\"let connection of (hubCache.hub.dexihConnections | equalFilter :'isValid':true )\" class=\"dropdown-item\" routerLink=\".\" [queryParams]=\"{connectionKey: connection.key}\">{{connection.name}}</a>\n\t\t\t\t\t</dexih-button-dropdown>\n\t\t\n\t\t\t\t\t<dexih-button-dropdown class=\"mr-1\" [autoCompact]=\"false\" buttonClass=\"btn btn-primary\" iconClass=\"fa fa-filter\" [text]=\"eConnectionPurpose[purposeFilter]\" title=\"Filter by a purpose\" [pullRight]=\"true\">\n\t\t\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"purposeFilter=='0'\" routerLink='.' [queryParams]=\"{purposeFilter: 'All'}\" title=\"All Connections\">All</a>\n\t\t\t\t\t\t<a *ngFor=\"let purpose of eConnectionPurposeItems | gtFilter:'key':0\" [class.active]=\"purposeFilter==purpose.key\" class=\"dropdown-item\" routerLink='.' [queryParams]=\"{purposeFilter: purpose.key}\" [title]=\"purpose.name\">{{purpose.name}}</a>\n\t\t\t\t\t</dexih-button-dropdown>\n\t\t\t\t</ng-template>\n\t\t\t\t\n\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t<tags-update-button class=\"ml-1\" [objectType]=\"eSharedObjectType.Table\" [objects]=\"items\" ></tags-update-button>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n\t\t\t\t\t<dependent-items-button class=\"ml-1\" [key]=\"item.key\" [objectType]='eSharedObjectType.Table'></dependent-items-button>\n\t\t\t\t</ng-template>\n\n\n\n\t\t</dexih-table>\n\n\t</dexih-widget>\n\t\n\t<dexih-help class=\"m-3\" title=\"Datalinks\" path=\"/assets/help/reference/table.md\"></dexih-help>\n\n</div>\n\n","export { TablePreviewDataComponent } from './table-preview-data.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject, Observable, combineLatest } from 'rxjs';\nimport { HubCache } from '../hub.models';\nimport { DexihTag, eSharedObjectType } from '../../shared/shared.models';\nimport { HubService } from '..';\nimport { AuthService } from '../../+auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubFormsService } from '../hub.forms.service';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n@Component({\n    selector: 'tags',\n    templateUrl: 'tags.component.html',\n    providers: [HubFormsService],\n    animations: [\n        // trigger name for attaching this animation to an element using the [@triggerName] syntax\n        trigger('slideDown', [\n            state('hide', style({ height: 0, overflow: 'hidden' })),\n            state('show', style({ height: '*', overflow: 'unset' })),\n            transition('hide <=> show', animate('200ms ease-in')),\n        ])\n        ]\n})\nexport class TagsComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n\n    hubCache: HubCache;\n\n    tags: Array<DexihTag>;\n    state = 'hide';\n\n    colors = [\n        { name: 'primary', color: '#3a5f8d' },\n        { name: 'secondary', color : '#89B3BF'},\n        { name: 'success', color : '#479762'},\n        { name: 'warning', color : '#c4872a' },\n        { name: 'danger', color : '#f44336' },\n        { name: 'yellow', color : 'yellow'},\n        { name: 'pink', color : 'pink'},\n        { name: 'purple', color : 'purple'},\n        { name: 'dark', color : '#1F2624'},\n    ]\n\n    columns = [\n        { name: 'name', title: 'Name', footer: 'description', format: 'Md' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        public formsService: HubFormsService,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        // watch for any changes in the validations.\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest(\n                this.route.queryParams,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                let params = result[0];\n                this.hubCache = result[1];\n\n                if (params['key']) {\n                    let tag = this.hubCache.hub.dexihTags.find(c => c.key === +params['key']);\n                    if (tag) {\n                        let editTag = this.hubCache.hub.dexihTags.find(c => c.key === tag.key);\n                        this.formsService.tag(editTag);\n                        this.state = 'show';\n                    }\n                }\n\n                this.update();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'View Index');\n        }\n\n\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n\n    update() {\n        if (this.hubCache && this.hubCache.isLoaded()) {\n            let tags: Array<DexihTag>;\n            tags = this.hubCache.hub.dexihTags.filter(c => c.isValid);\n            let tableData = tags.map(tag => {\n                return {\n                    key: tag.key,\n                    name: tag.name,\n                    description: tag.description,\n                    color: tag.color,\n                    updateDate: tag.updateDate,\n                };\n            });\n            this._tableData.next(tableData);\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    new() {\n        let tag = new DexihTag();\n        this.formsService.tag(tag);\n        this.state = 'show';\n    }\n\n    edit(tag: DexihTag) {\n        let editTag = this.hubCache.hub.dexihTags.find(c => c.key === tag.key);\n        this.formsService.tag(editTag);\n        this.state = 'show';\n        if (history.pushState) {\n            this.router.navigateByUrl(window.location.pathname + `?key=${tag.key}`);\n        }\n        document.body.scrollTop = 0; // For Safari\n        document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\n    }\n\n    delete(tags: DexihTag[]) {\n        this.hubService.deleteTags(tags);\n    }\n\n    save() {\n        this.formsService.save(false).then(() => {\n            this.hide();\n        }).catch();\n    }\n\n    cancel() {\n        this.hide();\n    }\n\n    hide() {\n        this.state = 'hide';\n        if (history.pushState) {\n            if (window.location.search) {\n                this.router.navigateByUrl(window.location.pathname);\n            }\n          }\n    }\n\n    selectColor(color) {\n        this.formsService.currentForm.controls.color.setValue(color.color);\n    }\n\n    export(items: Array<DexihTag>) {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(cache.hub.hubKey, '');\n        items.forEach(item => { cache.cacheAddTag(item.key, hub); });\n\n        let filename = items.length === 1 ? 'Tag - ' + items[0].name + '.json' : 'tags.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    watchChanges() {\n        // watch the current validation in case it is changed in another session.\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n            if (hubCacheChange.changeClass === eSharedObjectType.Tags) {\n                this.update();\n            }\n        });\n    }\n}\n","<div class=\"container-fluid\">\n    <dexih-widget title=\"Tags\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-tags\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\t>\n\t\t\t<dexih-table \n\t\t\t\t[enableMultiSelect]=\"true\"\n                [enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n                [columns]=\"columns\"\n\t\t\t\t[dataObservable]=\"tableData\"\n                (rowClick)=\"edit($event)\"\n                rowStatusHeading=\"Color\"\n\t\t\t\t>\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-hubVariable=\"item\">\n\t\t\t\t\t<dexih-button-edit class=\"mr-1\" (click)=\"edit(item)\"></dexih-button-edit>\n\t\t\t\t</ng-template>\n\n                    <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n                        <dexih-button-save-local class=\"mr-1\" (click)=\"export(items)\"></dexih-button-save-local>\n                        <dexih-button-delete class=\"mr-1\" *ngIf=\"hubCache.canWrite\" (click)=\"delete(items)\"></dexih-button-delete>\n                    </ng-template>\n    \n                    <ng-template #actions let-items=\"items\">\n                        <dexih-button-new class=\"mr-1\" *ngIf=\"hubCache.canWrite\" (click)=\"new()\"></dexih-button-new>\n                    </ng-template>\n\n                    <ng-template #rowStatus select=\"rowStatus\" let-item=\"item\">\n\t\t\t\t\t\t<div (click)=\"edit(item)\" class=\"alert p-1 text-center\" [ngStyle]=\"{'background-color': item.color, 'margin-bottom': '0' }\">\n                            <span class=\"blend-text  font-weight-bold\">{{item.name}}</span>\n                        </div>\n\t\t\t\t\t</ng-template>\n    \n                    <ng-template #tableHeader>\n                        <div [@slideDown]='state' class=\"card mt-2\" style=\"width: 100%;\">\n                            <div class=\"card-header text-white bg-primary\">\n                                <b>Add/Edit Tag</b>\n                            </div>\n                            <div class=\"card-body\">\n                                <form *ngIf=\"formsService.currentForm\" [formGroup]=\"formsService.currentForm\">\n                                    <div class=\"form-row\">\n                                        <section class=\"form-group col-md-3\">\n                                            <form-input label=\"Tag Name\" formControlName=\"name\" placeholder=\"Enter the name.\"\n                                                [autocapitalize]=\"true\" iconClass=\"fa fa-list\" [errors]=\"formsService.formErrors['name']\">\n                                            </form-input>\n                                        </section>\n                                        <section class=\"form-group col-md-9\">\n                                            <div>\n                                                <label class=\"mt-1\">Color</label>\n                        \n                                                <div class=\"input-group m-0\">\n                                                    <label class=\"btn mr-1\" style=\"height: '38px'; width: '76px'\" [style.background-color]=\"formsService.currentForm.controls.color.value\">\n                                                        <input formControlName=\"color\" hidden type=\"color\">\n                                                    </label>\n                                                    <form-input class=\"mr-3\" style=\"height: '38px'; width: '90px'\" formControlName=\"color\" placeholder=\"color\"></form-input>\n                                                    <div class=\"btn-group-toggle\" data-toggle=\"buttons\">\n                                                        <button *ngFor=\"let color of colors\" class=\"btn mr-1\" (click)=\"selectColor(color)\" [style.background-color]=\"color.color\" style=\"height: '38px'; width: '38px'\"></button>\n                                                    </div>\n                                                </div>\n                        \n                                            </div>\n                                        </section>\n                                    </div>\n                                    <div class=\"form-row\">\n                                        <section class=\"col-md-12\">\n                                            <form-textarea label=\"Description\" [showMarkdown]=\"true\" formControlName=\"description\" placeholder=\"Enter the description.\" >\n                                            </form-textarea>\n                                        </section>\n                                    </div>\n                        \n                                </form>\n                            </div>\n                            <div class=\"card-footer\">\n                                <dexih-button-save class=\"mr-1\" (click)=\"save()\"></dexih-button-save>\n                                <dexih-button-cancel class=\"mr-1\" (click)=\"cancel()\"></dexih-button-cancel>\n                            </div>\n                        </div>\n                    </ng-template>\n    \n\t\t\t</dexih-table>\n\n\t</dexih-widget>\n\t\n\t<dexih-help class=\"m-3\" title=\"Views\" path=\"/assets/help/reference/tag.md\"></dexih-help>\n\n</div>\n\n\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Observable, Subscription, BehaviorSubject, combineLatest} from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubCache } from '../../hub.models';\nimport { DexihDatalinkTest, DexihHub, eSharedObjectType } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n  selector: 'datalink-test',\n  templateUrl: './datalinkTest-index.component.html',\n  styles: []\n})\nexport class DatalinkTestIndexComponent implements OnInit, OnDestroy {\n  private _subscription: Subscription;\n  private _hubCacheChangeSubscription: Subscription;\n\n    hubCache: HubCache;\n    private cancelToken: CancelToken = new CancelToken();\n\n    datalinkTests: Array<DexihDatalinkTest>;\n    public eSharedObjectType = eSharedObjectType;\n\n    columns = [\n        { name: 'name', title: 'Name', format: '', tags: 'tags'},\n        { name: 'description', title: 'Description', format: ''},\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar'},\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n        // watch for any changes in the validations.\n        this.watchChanges();\n\n        this._subscription = combineLatest(\n            this.hubService.getHubCacheObservable()\n        ).subscribe(result => {\n          this.hubCache = result[0];\n          this.update();\n        });\n    } catch (e) {\n        this.hubService.addHubClientErrorMessage(e, 'Datalink Tests Index');\n      }\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    delete(items: Array<DexihDatalinkTest>) {\n        this.hubService.deleteDatalinkTests(items);\n    }\n\n    snapshot(items: Array<DexihDatalinkTest>) {\n        this.hubService.runDatalinkTestSnapshot(items, this.cancelToken);\n    }\n\n    run(items: Array<DexihDatalinkTest>) {\n        let keys = items.map(c => c.key);\n        this.hubService.runDatalinkTests(keys, this.cancelToken);\n    }\n\n    update() {\n        if (this.hubCache && this.hubCache.isLoaded()) {\n            let items = this.hubCache.hub.dexihDatalinkTests.filter(c => c.isValid).map(c => {\n                return {\n                    key: c.key,\n                    name: c.name,\n                    description: c.description,\n                    updateDate: c.updateDate,\n                    tags: this.hubCache.getObjectTags(eSharedObjectType.DatalinkTest, c.key)\n                }\n            });\n            this._tableData.next(items);\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    edit(item: DexihDatalinkTest) {\n        this.router.navigate(['datalinkTest-edit', item.key], { relativeTo: this.route});\n    }\n\n    export(tests: Array<DexihDatalinkTest>) {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        hub.dexihDatalinkTests = tests;\n        let filename = 'datalink_tests.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n\n    watchChanges() {\n      // watch the current validation in case it is changed in another session.\n      this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n          if (hubCacheChange.changeClass === eSharedObjectType.DatalinkTest ||\n            hubCacheChange.changeClass === eSharedObjectType.TagObjects) {\n            this.update();\n          }\n      });\n  }\n}\n","<div class=\"container-fluid\">\n    <dexih-widget title=\"Datalink Tests\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-flag-checkered\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\t>\n \n\n\t\t<dexih-table \n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[dataObservable]=\"tableData\"\n\t\t\t(rowClick)=\"edit($event)\"\n\t\t\t[tags]=\"this.hubCache.hub.dexihTags\"\n\t\t\t>\n\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n\t\t\t\t<dependent-items-button class=\"ml-1\" [key]=\"item.key\" [objectType]='eSharedObjectType.DatalinkTest'></dependent-items-button>\n\t\t\t</ng-template>\n\n\n\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t<tags-update-button class=\"ml-1\" [objectType]=\"eSharedObjectType.DatalinkTest\" [objects]=\"items\" ></tags-update-button>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<actions-datalinkTest-button [datalinkTests]=\"items\"></actions-datalinkTest-button>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #rowStatus select=\"rowStatus\" let-item=\"item\">\n\t\t\t\t\t<datalink-status [datalinkTestKey]='item?.key'></datalink-status>\n\t\t\t\t</ng-template>\n\t\n\t\t</dexih-table>\n\n\t</dexih-widget>\n\t\n\t<dexih-help class=\"m-3\" title=\"Datalink Test\" path=\"/assets/help/reference/datalinkTest.md\"></dexih-help>\n\n</div>\n\n\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { HubService } from '../../hub.service';\nimport { Observable, Subscription, combineLatest } from 'rxjs';\nimport { Location } from '@angular/common';\nimport { HubCache, eCacheStatus } from '../../hub.models';\nimport { DexihConnection, DexihDatalink, eConnectionPurpose } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n\n  selector: 'dexih-datalinkTest-new-form',\n  templateUrl: './datalinkTest-new.component.html'\n})\nexport class DatalinkTestNewComponent implements OnInit, OnDestroy {\n\n  private _subscription: Subscription;\n  private _valueChangesSubscription: Subscription;\n  private cancelToken: CancelToken = new CancelToken();\n\n  private hubCache: HubCache;\n\n  public pageTitle: string;\n\n  hasChanged = false;\n  showAllErrors = false;\n\n  public name: string;\n  public auditConnectionKey: number;\n  public sourceConnectionKey: number;\n  public targetConnectionKey: number;\n\n  public managedConnections: Array<DexihConnection>;\n\n  public sourceDatalinkKeys: Array<number>;\n  public sourceDatalinks: Array<DexihDatalink>;\n\n  public saving = false;\n\n  mainForm: FormGroup;\n\n  formErrors = {\n    'name': '',\n    'auditConnectionKey': '',\n    'sourceConnectionKey': '',\n    'targetConnectionKey': '',\n    'snapshotData': '',\n  };\n\n  validationMessages = {\n    'name': {\n      'required': 'Name is required.',\n      'minlength': 'Name must be at least 4 characters long.',\n      'maxlength': 'Name cannot be more than 50 characters long.',\n    },\n    'auditConnectionKey': {\n    },\n    'targetConnectionKey': {\n    },\n    'sourceConnectionKey': {\n    },\n    'snapshotData': {\n    },\n  };\n\n\n  constructor(\n    private hubService: HubService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private fb: FormBuilder) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n      ).subscribe(result => {\n        let data = result[0];\n        let params = result[1];\n        this.hubCache = result[2];\n\n        this.managedConnections = this.hubCache.hub.dexihConnections\n          .filter(c => c.purpose === eConnectionPurpose.Managed)\n\n        if (this.hubCache.status === eCacheStatus.Loaded) {\n          let datalinkKeys: string = params['datalinkKeys'];\n          this.sourceDatalinkKeys = new Array<number>();\n          this.sourceDatalinks = new Array<DexihDatalink>();\n\n          if (datalinkKeys && this.hubCache.hub.dexihConnections) {\n            let datalinkKeyArray = datalinkKeys.split('|');\n            this.hubCache.hub.dexihDatalinks.forEach(datalink => {\n              if (datalinkKeyArray.findIndex(t => t === datalink.key.toString()) >= 0) {\n                this.sourceDatalinkKeys.push(datalink.key);\n                this.sourceDatalinks.push(datalink);\n              }\n            });\n          }\n\n          let targetConnection = this.hubCache.hub.dexihConnections.find(c => c.purpose === eConnectionPurpose.Managed);\n          if (targetConnection) {\n            this.targetConnectionKey = targetConnection.key;\n          }\n          this.sourceConnectionKey = this.targetConnectionKey;\n          this.auditConnectionKey = this.targetConnectionKey;\n\n          this.buildForm();\n        }\n\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Datalink New');\n    }\n\n\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._valueChangesSubscription) { this._valueChangesSubscription.unsubscribe(); }\n    this.cancelToken.cancel();\n  }\n\n  buildForm(): void {\n    this.mainForm = this.fb.group({\n      'name': [this.name, [\n      ]],\n      'auditConnectionKey': [this.auditConnectionKey > 0 ? this.auditConnectionKey : null, [\n        // Validators.required,\n      ]],\n      'targetConnectionKey': [this.targetConnectionKey > 0 ? this.targetConnectionKey : null, [\n        // Validators.required,\n      ]],\n      'sourceConnectionKey': [this.sourceConnectionKey > 0 ? this.sourceConnectionKey : null, [\n        // Validators.required,\n      ]],\n      'snapshotData': [true, [\n        // Validators.required,\n      ]],\n    });\n\n    if (this._valueChangesSubscription) { this._valueChangesSubscription.unsubscribe(); }\n    this._valueChangesSubscription = this.mainForm.valueChanges.subscribe(data => this.onValueChanged(data));\n    this.onValueChanged(); // (re)set validation messages now\n    this.hasChanged = false;\n  }\n\n  onValueChanged(data?: any) {\n    if (!this.mainForm) { return; }\n    const form = this.mainForm;\n\n    this.hasChanged = true;\n\n    for (const field of Object.keys(this.formErrors)) {\n      // clear previous error message (if any)\n      this.formErrors[field] = '';\n      const control = form.get(field);\n\n      if (control && (control.dirty || this.showAllErrors) && !control.valid) {\n        const messages = this.validationMessages[field];\n        for (const key of Object.keys(control.errors)) {\n          this.formErrors[field] += messages[key] + ' ';\n        }\n      }\n    }\n  }\n\n  save() {\n    if (this.mainForm.valid) {\n      let value = this.mainForm.value;\n      this.saving = true;\n      this.hubService.newDatalinkTest(\n        this.name,\n        this.sourceDatalinkKeys,\n        value.auditConnectionKey,\n        value.targetConnectionKey,\n        value.sourceConnectionKey\n      ).then(async result => {\n        if (value.snapshotData) {\n          await this.hubService.runDatalinkTestSnapshot([result], this.cancelToken);\n        }\n          this.router.navigate(['/hub', this.hubCache.hub.hubKey, 'datalinkTests', 'datalinkTest-edit', result.key],\n            { relativeTo: this.route.root });\n      }).catch(reason => {\n        this.saving = false;\n      });\n    } else {\n      this.showAllErrors = true;\n      this.onValueChanged();\n    }\n  }\n\n  cancel() {\n    this.location.back();\n  }\n}\n","<div class=\"container\">\n\t<dexih-widget title=\"New Datalink Test(s)\"    iconClass=\"fa fa-lg fa-fw fa-exchange\" [showCloseButton]=\"true\" (close)=\"!saving && cancel()\"\n\t [padding]=\"true\">\n\t\t<ng-template #header>\n\t\t\t<dexih-button-save class=\"mr-1\" (click)=\"!saving && save()\" [busy]=\"saving\"></dexih-button-save>\n\t\t\t<dexih-button-cancel (click)=\"!saving && cancel()\" [busy]=\"saving\"></dexih-button-cancel>\n\t\t</ng-template>\n\n\t\t<ng-template #subHeader>\n\t\t\t<label class=\"label\">Create automatic tests for the following datalink(s):</label>\n\t\t\t<div>\n\t\t\t\t<div class=\"list-group d-inline-block\">\n\t\t\t\t\t<span class=\"list-group-item\" *ngFor=\"let datalink of sourceDatalinks\">\n\t\t\t\t\t\t{{datalink.name}}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</ng-template>\n\n\t\t<form *ngIf=\"sourceDatalinkKeys\" [formGroup]=\"mainForm\">\n\n\t\t\t<fieldset>\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input *ngIf=\"sourceDatalinks.length == 1\" label=\"Test Name\" formControlName=\"name\" placeholder=\"Test name (leave blank for auto naming)\"\n\t\t\t\t\t\t iconClass=\"fa fa-comment\" [errors]=\"formErrors.name\"></form-input>\n\t\t\t\t\t\t<form-input *ngIf=\"sourceDatalinks.length > 1\" disabled label=\"Test Name\" placeholder=\"Test name can not be specified when creating multiple tests.\"\n\t\t\t\t\t\t iconClass=\"fa fa-comment\"></form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-select label=\"Audit Connection\" formControlName=\"auditConnectionKey\" [items]=\"hubCache.hub.dexihConnections\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"name\" [errors]=\"formErrors.auditConnectionKey\" iconClass=\"fa fa-database\"\n\t\t\t\t\t\t\tnote=\"Connection where test results are stored.\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-select formControlName=\"sourceConnectionKey\" label=\"Input Connection\" [items]=\"managedConnections\" itemKey=\"key\"\n\t\t\t\t\t\t itemName=\"name\" note=\"Specify the connection to use for any datalink source data.\" [errors]=\"formErrors.sourceConnectionKey\"\n\t\t\t\t\t\t [allowNullSelect]=\"true\" selectNullMessage=\"No source table\"></form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-select formControlName=\"targetConnectionKey\" label=\"Target Connection\" [items]=\"managedConnections\" itemKey=\"key\"\n\t\t\t\t\t\t itemName=\"name\" note=\"Specify the connection for target data.\" [errors]=\"formErrors.targetConnectionKey\"\n\t\t\t\t\t\t [allowNullSelect]=\"true\" selectNullMessage=\"No target table\"></form-select>\n\t\t\t\t\t</section>\n\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\n\t\t\t<fieldset>\n\t\t\t\t<section>\n\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t<section class=\"col col-11\">\n\t\t\t\t\t\t\t<form-checkbox label=\"Snapshot and copy current source/target data into the test connections.\" formControlName=\"snapshotData\"\n\t\t\t\t\t\t\t name=\"snapshotData\"></form-checkbox>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t</fieldset>\n\t\t</form>\n\n\t</dexih-widget>\n</div>","export * from './datalinkTest-index/datalinkTest-index.component';\nexport * from './datalinkTest-new/datalinkTest-new.component';\n","export * from './view-edit.component';\n","export * from './view-index.component';\n"],"sourceRoot":"webpack:///"}