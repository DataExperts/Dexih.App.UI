{"version":3,"sources":["webpack:///src/app/+hubs/help/help.component.ts","webpack:///src/app/+hubs/help/help.component.html","webpack:///src/app/+hubs/help/index.ts","webpack:///src/app/+hubs/hub-edit/hub-edit.component.ts","webpack:///src/app/+hubs/hub-edit/hub-edit.component.html","webpack:///src/app/+hubs/hub-index/hub-index.component.ts","webpack:///src/app/+hubs/hub-index/hub-index.component.html","webpack:///src/app/+hubs/hubs-summary/hubs-summary.component.ts","webpack:///src/app/+hubs/hubs-summary/hubs-summary.component.html","webpack:///src/app/+hubs/hubs.component.ts","webpack:///src/app/+hubs/hubs.component.html","webpack:///src/app/+hubs/hubs.module.ts","webpack:///src/app/+hubs/hubs.routing.ts","webpack:///src/app/+hubs/manage/manage.component.ts","webpack:///src/app/+hubs/manage/manage.component.html","webpack:///src/app/+hubs/notifications/notification-index/index.ts","webpack:///src/app/+hubs/notifications/notification-index/notification-index.component.ts","webpack:///src/app/+hubs/notifications/notification-index/notification-index.component.html","webpack:///src/app/+hubs/notifications/notification-view/index.ts","webpack:///src/app/+hubs/notifications/notification-view/notification-view.component.ts","webpack:///src/app/+hubs/notifications/notification-view/notification-view.component.html","webpack:///src/app/+hubs/remoteAgents/remote-agent-token/remote-agent-token.component.html","webpack:///src/app/+hubs/remoteAgents/remote-agent-token/remote-agent-token.component.ts","webpack:///src/app/+hubs/remoteAgents/remote-agents/remote-agents.component.ts","webpack:///src/app/+hubs/remoteAgents/remote-agents/remote-agents.component.html","webpack:///src/app/+hubs/remoteAgents/remoteAgent-download/index.ts","webpack:///src/app/+hubs/remoteAgents/remoteAgent-download/remoteAgent-download.component.ts","webpack:///src/app/+hubs/remoteAgents/remoteAgent-download/remoteAgent-download.component.html","webpack:///src/app/+hubs/remoteAgents/remoteAgent-edit/index.ts","webpack:///src/app/+hubs/remoteAgents/remoteAgent-edit/remoteAgent-edit.component.ts","webpack:///src/app/+hubs/remoteAgents/remoteAgent-edit/remoteAgent-edit.component.html","webpack:///src/app/+hubs/support/edit/issue-edit.component.ts","webpack:///src/app/+hubs/support/edit/issue-edit.component.html","webpack:///src/app/+hubs/support/index.ts","webpack:///src/app/+hubs/support/index/issue-index.component.ts","webpack:///src/app/+hubs/support/index/issue-index.component.html","webpack:///src/app/+hubs/tasks/task-status/index.ts","webpack:///src/app/+hubs/tasks/task-status/task-status.component.ts","webpack:///src/app/+hubs/tasks/task-status/task-status.component.html","webpack:///src/app/+hubs/tasks/task-view/index.ts","webpack:///src/app/+hubs/tasks/task-view/task-view.component.ts","webpack:///src/app/+hubs/tasks/task-view/task-view.component.html","webpack:///src/app/+hubs/tasks/tasks-index/index.ts","webpack:///src/app/+hubs/tasks/tasks-index/tasks-index.component.ts","webpack:///src/app/+hubs/tasks/tasks-index/tasks-index.component.html"],"names":["HelpComponent","authService","hubService","router","route","_subscription","queryParams","subscribe","params","path","_hubCacheSubscription","getHubCacheObservable","cache","hub","hubKey","unsubscribe","navigateUp","link","navigate","relativeTo","linkClick","selector","templateUrl","styles","HubEditComponent","location","fb","SharedAccessItems","filter","c","key","generatingKey","savingHub","hasChanged","showAllErrors","formErrors","validationMessages","data","getHubsObservable","getRemoteAgentsObservable","result","hubs","action","pageTitle","buildForm","find","e","dexihMessage","addErrorMessage","message","_valueChangesSubscription","getRandomEncryptionKey","then","mainForm","controls","setValue","markAsDirty","reason","addMessage","valid","encryptionKey","value","confirmDialog","confirm","doSaveHub","onValueChanged","reset","Object","assign","saveHub","cancel","group","name","required","minLength","maxLength","duplicateHubNameValidator","description","sharedAccess","expiryDate","valueChanges","control","no","hubNameExists","form","keys","field","get","dirty","messages","errors","HubIndexComponent","isLoaded","columns","title","format","_tableData","tableData","asObservable","hubsObserve","next","deleteHubs","addHubMessage","close","edit","HubsSummaryComponent","logoSmallUrl","eSharedAccess","ePermission","eHubAccess","view","User","hubAccess","HubsComponent","hubsService","openDelay","initialize","_hubsMessageSubscription","getHubMessagesObservable","length","_webSocketStatusSubscription","getWebSocketStatusObservable","status","webSocketStatus","setTimeout","HubsModule","ngModule","providers","imports","declarations","exports","hubsView","component","baseRoutes","children","routes","redirectTo","Routing","forChild","ManageComponent","formsService","updatingPassword","passwordMatchError","passwordStrengthError","googleMessage","microsoftMessage","_userSubscription","getUserObservable","user","createDefault","updateLogins","currentForm","email","disable","passwordForm","pattern","duplicatePasswordValidator","getLoginProviders","logins","confirmPassword","newPassword","changePassword","password","addSuccessMessage","updateUserDetails","forceLogin","googleSignIn","addExternalLogin","Google","providerKey","authenticationToken","loginResult","microsoftSignIn","Microsoft","login","removeExternalLogin","loginProvider","NotificationsIndexComponent","showPage","showPageMessage","notifications","getNotifications","reference","showMessage","NotificationViewComponent","exceptionHidden","watchChanges","getNotification","RemoteAgentTokenComponent","promise","createRemoteAgent","remoteAgentKey","refreshRemoteAgentToken","remoteToken","updateAppSettings","appSettings","remoteAgentId","userToken","RemoteAgentsComponent","footer","tooltip","eDownloadUrlType","cancelToken","remoteAgents","refreshData","forEach","remoteAgent","activeAgent","push","connected","dataPrivacyStatus","isEncrypted","ipAddress","restrictIp","ipAddresses","lastLoginIpAddress","lastLoginDateTime","downloadUrls","instanceId","version","latestVersion","versionTooltip","upgradeAvailable","versionClass","items","item","agent","downloadUrl","index","url","getFromExternal","removeUserTokens","map","addHubClientErrorMessage","activeAgents","addHubErrorMessage","restartAgent","pingRemoteAgents","RemoteAgentDownloadComponent","downloading","refreshingEncryptionKey","refreshingUserToken","logLevelItems","eEnvironmentItems","embedUserName","logLevel","Information","environment","Windows","getHubs","remoteApplicationSettings","remoteAgentSettings","downloadRemoteAgent","addHubSuccessMessage","showErrors","downloadRemoteSettings","getUserToken","remoteAgentForm","addMissing","clearFormSubscriptions","startForm","RemoteAgentEditComponent","saveRemoteAgent","ipAddressesControl","findIndex","moment","IssueEditComponent","eIssueTypeItems","eIssueSeverityItems","eIssueStatusItems","eIssueCategoryItems","saving","isNew","supportOptions","icon","issue","getIssue","subTitle","userName","updateDate","calendar","getUser","isAdmin","saveIssue","addIssueComment","newComment","disabled","type","category","severity","isPrivate","issueStatus","gitHubLink","array","dexihIssueComments","comment","IssueIndexComponent","getIssues","i","issues","TaskStatusComponent","currentStatus","getStatus","task","statusInfo","StatusInfo","percentage","statusType","error","Error","Cancelled","canCancel","Created","Running","Scheduled","Queued","Completed","iconClass","cancelTasks","TaskViewComponent","eManagedTaskStatus","getTasksObservable","tasks","taskId","TasksIndexComponent","referenceKey","showTask"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAaaA,a;AAOT,+BACYC,WADZ,EAEYC,UAFZ,EAGYC,MAHZ,EAIYC,KAJZ,EAImC;AAAA;;AAHvB,eAAAH,WAAA,GAAAA,WAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACX;;;;qCAEU;AAAA;;AACP,iBAAKC,aAAL,GAAqB,KAAKD,KAAL,CAAWE,WAAX,CAAuBC,SAAvB,CAAiC,UAAAC,MAAM,EAAI;AAC5D,kBAAIC,IAAI,GAAGD,MAAM,CAAC,MAAD,CAAjB;;AACA,kBAAIC,IAAJ,EAAU;AACN,qBAAI,CAACA,IAAL,GAAY,kBAAkBA,IAA9B;AACH,eAFD,MAEO;AACH,qBAAI,CAACA,IAAL,GAAY,uCAAZ;AACH;AACJ,aAPoB,CAArB;AASA,iBAAKC,qBAAL,GAA6B,KAAKR,UAAL,CAAgBS,qBAAhB,GAAwCJ,SAAxC,CAAkD,UAAAK,KAAK,EAAI;AACpF,kBAAIA,KAAK,IAAIA,KAAK,CAACC,GAAnB,EAAwB;AACpB,qBAAI,CAACC,MAAL,GAAcF,KAAK,CAACC,GAAN,CAAUC,MAAxB;AACH,eAFD,MAEO;AACH,qBAAI,CAACA,MAAL,GAAc,IAAd;AACH;AACJ,aAN4B,CAA7B;AAOH;;;wCAEa;AACV,gBAAI,KAAKT,aAAT,EAAwB;AAAE,mBAAKA,aAAL,CAAmBU,WAAnB;AAAmC;;AAC7D,gBAAI,KAAKL,qBAAT,EAAgC;AAAE,mBAAKA,qBAAL,CAA2BK,WAA3B;AAA2C;AAChF;;;kCAEO;AACJ,iBAAKd,WAAL,CAAiBe,UAAjB;AACH;;;oCAESC,I,EAAc;AACpB,iBAAKd,MAAL,CAAYe,QAAZ,CAAqB,EAArB,EAAyB;AAAEC,wBAAU,EAAE,KAAKf,KAAnB;AAA0BE,yBAAW,EAAE;AAAC,wBAAQW;AAAT;AAAvC,aAAzB;AACH;;;;;;;yBA5CQjB,a,EAAa,+H,EAAA,gH,EAAA,uH,EAAA,+H;AAAA,O;;;cAAbA,a;AAAa,6B;AAAA,gB;AAAA,e;AAAA,wG;AAAA;AAAA;ACb1B;;AACC;;AAA0E;AAAA,qBAAa,IAAAoB,SAAA,QAAb;AAA8B,aAA9B;;AAE1E;;AACD;;;;AAH0B;;AAAA,uFAAa,SAAb,EAAa,IAAb,EAAa,QAAb,EAAa,UAAb;;;;;;;;;wEDYbpB,a,EAAa;gBALzB,uDAKyB;iBALf;AACTqB,oBAAQ,EAAE,MADD;AAETC,uBAAW,EAAE,uBAFJ;AAGTC,kBAAM,EAAE;AAHC,W;AAKe,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEb1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACYG;;AAA4B;AAAA;;AAAA;;AAAA;AAAA;;AAAuH;;AACnJ;;AAAiB;AAAA;;AAAA;;AAAA;AAAA;;AAAwD;;;;;;AADW,6HAA2C,MAA3C,EAA2C,gBAA3C;;AAClC;;AAAA;;;;;;;;AAVjD;;AAMF;AAAA;;AAAA;;AAAA;AAAA;;AAEM;;AAKN;;AACC;;AACC;;AACC;;AAED;;AAEA;;AACC;;AAED;;AAEA;;AACC;;AACC;;AAAC;;AAA+F;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AAAkB;;AAAW;;AACtJ;;AACD;;AAEA;;AACC;;AAGD;;AAED;;AACD;;AACE;;;;;;AAnCF,4FAAwB,SAAxB,EAAwB,IAAxB;;AAS0B;;AAAA;;AAGoE;;AAAA,gGAAqB,QAArB,EAAqB,sBAArB;;AAUoC;;AAAA;;AACrD;;AAAA;;AAKH;;AAAA,sGAA2B,QAA3B,EAA2B,8BAA3B,EAA2B,cAA3B,EAA2B,KAA3B;;;;UDpB/DC,gB;AA+CX,kCACUvB,WADV,EAEUE,MAFV,EAGUC,KAHV,EAIUqB,QAJV,EAKUC,EALV,EAKyB;AAAA;;AAJf,eAAAzB,WAAA,GAAAA,WAAA;AACA,eAAAE,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAqB,QAAA,GAAAA,QAAA;AACA,eAAAC,EAAA,GAAAA,EAAA;AAzCV,eAAAC,iBAAA,GAAoB,yEAAmBC,MAAnB,CAA0B,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACC,GAAF,GAAQ,CAAZ;AAAA,WAA3B,CAApB;AAEA,eAAAC,aAAA,GAAgB,KAAhB;AACA,eAAAC,SAAA,GAAY,KAAZ;AACA,eAAAC,UAAA,GAAa,KAAb;AACA,eAAAC,aAAA,GAAgB,KAAhB;AAIA,eAAAC,UAAA,GAAa;AACX,oBAAQ,EADG;AAEX,6BAAiB,EAFN;AAGX,4BAAgB,EAHL;AAIX,0BAAc;AAJH,WAAb;AAOA,eAAAC,kBAAA,GAAqB;AACnB,oBAAQ;AACN,0BAAY,mBADN;AAEN,2BAAa,0CAFP;AAGN,2BAAa,8CAHP;AAIN,kCAAoB;AAJd,aADW;AAOnB,6BAAiB;AACf,0BAAY,6BADG;AAEf,2BAAa,qDAFE;AAGf,2BAAa;AAHE,aAPE;AAYnB,4BAAgB;AACd,0BAAY;AADE,aAZG;AAenB,0BAAc;AACZ,8BAAgB;AADJ;AAfK,WAArB;AA2BC;;;;qCAEU;AAAA;;AAET,gBAAI;AACF,mBAAK/B,aAAL,GAAqB,2DACnB,KAAKD,KAAL,CAAWiC,IADQ,EAEnB,KAAKjC,KAAL,CAAWI,MAFQ,EAGnB,KAAKP,WAAL,CAAiBqC,iBAAjB,EAHmB,EAInB,KAAKrC,WAAL,CAAiBsC,yBAAjB,EAJmB,EAKnBhC,SALmB,CAKT,UAAAiC,MAAM,EAAI;AACpB,oBAAIH,IAAI,GAAGG,MAAM,CAAC,CAAD,CAAjB;AACA,oBAAIhC,MAAM,GAAGgC,MAAM,CAAC,CAAD,CAAnB;AACA,oBAAIC,IAAI,GAAGD,MAAM,CAAC,CAAD,CAAjB;AAEA,sBAAI,CAACE,MAAL,GAAcL,IAAI,CAAC,QAAD,CAAlB;AACA,sBAAI,CAACM,SAAL,GAAiBN,IAAI,CAAC,WAAD,CAArB;;AAEA,oBAAI,MAAI,CAACK,MAAL,KAAgB,KAApB,EAA2B;AACzB,wBAAI,CAAC7B,GAAL,GAAW,IAAI,8DAAJ,EAAX;;AACA,wBAAI,CAAC+B,SAAL;AACD,iBAHD,MAGO;AACL,sBAAIH,IAAJ,EAAU;AACR,wBAAI3B,MAAM,GAAG,CAAEN,MAAM,CAAC,QAAD,CAArB;AACA,0BAAI,CAACK,GAAL,GAAW4B,IAAI,CAACI,IAAL,CAAU,UAAAhB,CAAC;AAAA,6BAAIA,CAAC,CAACf,MAAF,KAAaA,MAAjB;AAAA,qBAAX,CAAX;;AACA,0BAAI,CAAC8B,SAAL;AACD;AACF;AAEF,eAxBoB,CAArB;AAyBD,aA1BD,CA0BE,OAAOE,CAAP,EAAU;AACV,mBAAKC,YAAL,CAAkBC,eAAlB,CAAkCF,CAAC,CAACG,OAApC;AACD;AACF;;;wCAEa;AACZ,gBAAI,KAAK5C,aAAT,EAAwB;AAAE,mBAAKA,aAAL,CAAmBU,WAAnB;AAAmC;;AAC7D,gBAAI,KAAKmC,yBAAT,EAAoC;AAAE,mBAAKA,yBAAL,CAA+BnC,WAA/B;AAA+C;AACtF;;;wCAEa;AAAA;;AACZ,iBAAKgB,aAAL,GAAqB,IAArB;AACA,iBAAK9B,WAAL,CAAiBkD,sBAAjB,GAA0CC,IAA1C,CAA+C,UAAAZ,MAAM,EAAI;AACvD,oBAAI,CAACa,QAAL,CAAcC,QAAd,CAAuB,eAAvB,EAAwCC,QAAxC,CAAiDf,MAAjD;;AACA,oBAAI,CAACa,QAAL,CAAcG,WAAd;;AACA,oBAAI,CAACzB,aAAL,GAAqB,KAArB;AACD,aAJD,WAIS,UAAA0B,MAAM,EAAI;AACjB,oBAAI,CAACV,YAAL,CAAkBW,UAAlB,CAA6BD,MAA7B;;AACA,oBAAI,CAAC1B,aAAL,GAAqB,KAArB;AACD,aAPD;AAQD;;;oCAES;AAAA;;AACR,gBAAI,KAAKsB,QAAL,CAAcM,KAAd,IAAuB,KAAK1B,UAAhC,EAA4C;AAE1C,kBAAI,KAAKpB,GAAL,CAASC,MAAT,GAAkB,CAAlB,IAAuB,KAAKD,GAAL,CAAS+C,aAAT,KAA2B,KAAKP,QAAL,CAAcQ,KAAd,CAAoBD,aAA1E,EAAyF;AACvF,qBAAK3D,WAAL,CAAiB6D,aAAjB,CACE,iCADF,EAEE;AACA,wKAHF,EAIEV,IAJF,CAIO,UAAAW,OAAO,EAAI;AAChB,sBAAIA,OAAJ,EAAa;AACX,0BAAI,CAACC,SAAL;AACD;AACF,iBARD;AASD,eAVD,MAUO;AACL,qBAAKA,SAAL;AACD;AACF,aAfD,MAeO;AACL,mBAAK9B,aAAL,GAAqB,IAArB;AACA,mBAAK+B,cAAL;AACD;AACF;;;sCAEmB;AAAA;;AAClB,iBAAKlB,YAAL,CAAkBmB,KAAlB;AACA,iBAAKlC,SAAL,GAAiB,IAAjB;AACAmC,kBAAM,CAACC,MAAP,CAAc,KAAKvD,GAAnB,EAAwB,KAAKwC,QAAL,CAAcQ,KAAtC;AACA,iBAAK5D,WAAL,CAAiBoE,OAAjB,CAAyB,KAAKxD,GAA9B,EACGuC,IADH,CACQ,UAAAZ,MAAM,EAAI;AACd,oBAAI,CAACR,SAAL,GAAiB,KAAjB;;AACA,oBAAI,CAACsC,MAAL;;AAEA,oBAAI,CAACnE,MAAL,CAAYe,QAAZ,CAAqB,CAAC,MAAD,EAASsB,MAAM,CAAC1B,MAAhB,EAAwB,SAAxB,EAAmC,QAAnC,CAArB;;AACA;AAED,aARH,WAQW,UAAA2C,MAAM,EAAI;AACjB,oBAAI,CAACV,YAAL,CAAkBW,UAAlB,CAA6BD,MAA7B;;AACA,oBAAI,CAACzB,SAAL,GAAiB,KAAjB;AACD,aAXH;AAYD;;;mCAEQ;AACP,iBAAK/B,WAAL,CAAiBe,UAAjB;AACD;;;sCAEQ;AAAA;;AACP,iBAAKqC,QAAL,GAAgB,KAAK3B,EAAL,CAAQ6C,KAAR,CAAc;AAC5B,sBAAQ,CAAC,KAAK1D,GAAL,CAAS2D,IAAV,EAAgB,CACtB,0DAAWC,QADW,EAEtB,0DAAWC,SAAX,CAAqB,CAArB,CAFsB,EAGtB,0DAAWC,SAAX,CAAqB,EAArB,CAHsB,EAItB,KAAKC,yBAAL,EAJsB,CAAhB,CADoB;AAQ5B,6BAAe,CAAC,KAAK/D,GAAL,CAASgE,WAAV,EAAuB,EAAvB,CARa;AAS5B,+BAAiB,CAAC,KAAKhE,GAAL,CAAS+C,aAAV,EAAyB,EAAzB,CATW;AAW5B,8BAAgB,CAAC,KAAK/C,GAAL,CAASiE,YAAV,EAAwB,CACtC,0DAAWL,QAD2B,CAAxB,CAXY;AAc5B,4BAAc,CAAC,KAAK5D,GAAL,CAASkE,UAAV,EAAsB,EAAtB;AAdc,aAAd,CAAhB;;AAiBA,gBAAI,KAAK7B,yBAAT,EAAoC;AAAE,mBAAKA,yBAAL,CAA+BnC,WAA/B;AAA+C;;AACrF,iBAAKmC,yBAAL,GAAiC,KAAKG,QAAL,CAAc2B,YAAd,CAA2BzE,SAA3B,CAAqC,UAAA8B,IAAI;AAAA,qBAAI,MAAI,CAAC4B,cAAL,CAAoB5B,IAApB,CAAJ;AAAA,aAAzC,CAAjC;AACA,iBAAK4B,cAAL,GApBO,CAoBgB;;AAEvB,iBAAKhC,UAAL,GAAkB,KAAlB;AACD;;;sDAEwB;AAAA;;AACvB,mBAAO,UAACgD,OAAD,EAAsD;AAC3D,kBAAMT,IAAI,GAAGS,OAAO,CAACpB,KAArB;;AACA,kBAAMqB,EAAE,GAAG,MAAI,CAACjF,WAAL,CAAiBkF,aAAjB,CAA+B,MAAI,CAACtE,GAAL,CAASC,MAAxC,EAAgD0D,IAAhD,CAAX;;AACA,qBAAOU,EAAE,GAAG;AAAE,oCAAoB;AAAEV,sBAAI,EAAJA;AAAF;AAAtB,eAAH,GAAsC,IAA/C;AACD,aAJD;AAKD;;;yCAEcnC,I,EAAY;AACzB,gBAAI,CAAC,KAAKgB,QAAV,EAAoB;AAAE;AAAS;;AAC/B,gBAAM+B,IAAI,GAAG,KAAK/B,QAAlB;AAEA,iBAAKpB,UAAL,GAAkB,IAAlB;;AAEA,4CAAoBkC,MAAM,CAACkB,IAAP,CAAY,KAAKlD,UAAjB,CAApB,kCAAkD;AAA7C,kBAAMmD,KAAK,mBAAX;AACH;AACA,mBAAKnD,UAAL,CAAgBmD,KAAhB,IAAyB,EAAzB;AACA,kBAAML,OAAO,GAAGG,IAAI,CAACG,GAAL,CAASD,KAAT,CAAhB;;AAEA,kBAAIL,OAAO,KAAKA,OAAO,CAACO,KAAR,IAAiB,KAAKtD,aAA3B,CAAP,IAAoD,CAAC+C,OAAO,CAACtB,KAAjE,EAAwE;AACtE,oBAAM8B,QAAQ,GAAG,KAAKrD,kBAAL,CAAwBkD,KAAxB,CAAjB;;AACA,kDAAkBnB,MAAM,CAACkB,IAAP,CAAYJ,OAAO,CAACS,MAApB,CAAlB,qCAA+C;AAA1C,sBAAM5D,GAAG,qBAAT;AACH,uBAAKK,UAAL,CAAgBmD,KAAhB,KAA0BG,QAAQ,CAAC3D,GAAD,CAAR,GAAgB,GAA1C;AACD;AACF;AACF;AACF;;;;;;;yBAzMUN,gB,EAAgB,+H,EAAA,uH,EAAA,+H,EAAA,yH,EAAA,2H;AAAA,O;;;cAAhBA,gB;AAAgB,4C;AAAA;AAAA;;;;;;;;;;;;;;;ACf7B;;AACC;;AAEG;;AAwCJ;;;;AAxCc;;AAAA;;;;;;;;;wEDYDA,gB,EAAgB;gBAL5B,uDAK4B;iBALlB;AAETH,oBAAQ,EAAE,qBAFD;AAGTC,uBAAW,EAAE;AAHJ,W;AAKkB,U;;;;;;;;;;;;;;kBAC1B,uD;mBAAU,c,EAAgB;AAAE,wBAAQ;AAAV,a;;;;;;;;;;;;;;;;;;;;AEhB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;ACeK;;AACA;;AACA;;;;;;AAF4B;;AACA;;AAAA;;AAClB;;AAAA;;;;;;;;AAIV;;AAAiB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyC;;;;;;;;;;AAI1D;;;;AAAc;;;;UDbNqE,iB;AAkBT,mCACY1F,WADZ,EAEYC,UAFZ,EAGYC,MAHZ,EAIYC,KAJZ,EAImC;AAAA;;AAHvB,eAAAH,WAAA,GAAAA,WAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AAfZ,eAAAwF,QAAA,GAAW,KAAX;AAEA,eAAAC,OAAA,GAAU,CACN;AAAErB,gBAAI,EAAE,MAAR;AAAgBsB,iBAAK,EAAE,MAAvB;AAA+BC,kBAAM,EAAE;AAAvC,WADM,EAEN;AAAEvB,gBAAI,EAAE,aAAR;AAAuBsB,iBAAK,EAAE,aAA9B;AAA6CC,kBAAM,EAAE;AAArD,WAFM,EAGN;AAAEvB,gBAAI,EAAE,YAAR;AAAsBsB,iBAAK,EAAE,eAA7B;AAA8CC,kBAAM,EAAE;AAAtD,WAHM,CAAV;AAMQ,eAAAC,UAAA,GAAa,IAAI,oDAAJ,CAAgC,IAAhC,CAAb;AACR,eAAAC,SAAA,GAAoC,KAAKD,UAAL,CAAgBE,YAAhB,EAApC;AAOC;;;;qCAEU;AAAA;;AACP,iBAAKC,WAAL,GAAmB,KAAKlG,WAAL,CAAiBqC,iBAAjB,GAAqC/B,SAArC,CAA+C,UAAAkC,IAAI,EAAI;AACtE,kBAAIA,IAAJ,EAAU;AAAE,sBAAI,CAACmD,QAAL,GAAgB,IAAhB;AAAuB;;AACnC,oBAAI,CAACI,UAAL,CAAgBI,IAAhB,CAAqB3D,IAArB;AACH,aAHkB,CAAnB;AAIH;;;wCAEa;AACX,gBAAI,KAAK0D,WAAT,EAAsB;AAAC,mBAAKA,WAAL,CAAiBpF,WAAjB;AAAiC;AAC1D;;;qCAEU0B,I,EAAsB;AAAA;;AAC7B,iBAAKxC,WAAL,CAAiBoG,UAAjB,CAA4B5D,IAA5B,WAAwC,UAAAgB,MAAM,EAAI;AAC9C,oBAAI,CAACvD,UAAL,CAAgBoG,aAAhB,CAA8B7C,MAA9B;AACH,aAFD;AAGH;;;+BAEI5C,G,EAAmB;AACpB,iBAAKV,MAAL,CAAYe,QAAZ,CAAqB,CAAC,UAAD,EAAaL,GAAG,CAACC,MAAjB,CAArB,EAA+C;AAACK,wBAAU,EAAE,KAAKf;AAAlB,aAA/C;AACH;;;kCAEO;AACJ,iBAAKH,WAAL,CAAiBe,UAAjB;AACH;;;;;;;yBAhDQ2E,iB,EAAiB,+H,EAAA,0H,EAAA,uH,EAAA,+H;AAAA,O;;;cAAjBA,iB;AAAiB,6B;AAAA,gB;AAAA,e;AAAA,spB;AAAA;AAAA;ACZ9B;;AACI;;AAGF;AAAA,qBAAS,IAAAY,KAAA,EAAT;AAAgB,aAAhB;;AAGA;;AAKC;AAAA,qBAAY,IAAAC,IAAA,QAAZ;AAAwB,aAAxB;;AAEC;;AAMA;;AAIA;;AAGF;;AACE;;AACJ;;;;AA1BE;;AAAA;;AAKC;;AAAA,gGAA0B,qBAA1B,EAA0B,IAA1B,EAA0B,eAA1B,EAA0B,GAA1B,EAA0B,SAA1B,EAA0B,WAA1B,EAA0B,gBAA1B,EAA0B,aAA1B;;;;;;;;;wEDIUb,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACTtE,oBAAQ,EAAE,MADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,kBAAM,EAAE;AAHC,W;AAKmB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACQI;;AACI;;AACI;;AACJ;;AACA;;AAAI;;AAAkB;;AACtB;;AAAI;;AAAoD;;AACxD;;AAAI;;AAAgF;;AACxF;;;;;;;;;;;;;;AAqDQ;;AACI;;AACI;;AAA+E;AAAA;;AAAA;;AAAA;AAAA;;AAA/E;;AACA;;AACJ;;AACA;;AACI;;AAAgF;AAAA;;AAAA;;AAAA;AAAA;;AAAhF;;AACA;;AACJ;;AACA;;AACI;;AAAqF;AAAA;;AAAA;;AAAA;AAAA;;AAArF;;AACA;;AACJ;;AACA;;AACI;;AAAmF;AAAA;;AAAA;;AAAA;AAAA;;AAAnF;;AACA;;AACJ;;AACJ;;;;;;AAhBmC;;AAAA;;AACQ;;AAAA,mGAAwB,SAAxB,EAAwB,WAAxB;;AAGR;;AAAA;;AACQ;;AAAA,oGAAyB,SAAzB,EAAyB,WAAzB;;AAGR;;AAAA;;AACQ;;AAAA,wGAA6B,SAA7B,EAA6B,WAA7B;;AAGR;;AAAA;;AACQ;;AAAA,sGAA2B,SAA3B,EAA2B,WAA3B;;;;;;AAuB/B;;AACI;;AAAqB;;AAAmB;;AAC5C;;;;;;AADyB;;AAAA;;;;;;AAhBjC;;AACI;;AACI;;AACI;;AACI;;AACI;;AACA;;AAAmB;;AAA+B;;AACtD;;AACA;;AACI;;AACA;;AAEJ;;AACJ;;AACJ;;AACA;;AAGJ;;AACJ;;;;;;;;AAdoB;;AAAA;;AACmB;;AAAA;;AAGJ;;AAAA;;AACa;;AAAA;;AAKnC;;AAAA;;;;;;AAfb;;;;;;;;AAAK;;;;UD/ERkF,oB;AAcX,sCAAoBxG,WAApB,EAAsDE,MAAtD,EAAsE;AAAA;;AAAlD,eAAAF,WAAA,GAAAA,WAAA;AAAkC,eAAAE,MAAA,GAAAA,MAAA;AARtD,eAAAuG,YAAA,GAAe,8DAAf;AACA,eAAAC,aAAA,GAAgB,mEAAhB;AACA,eAAAC,WAAA,GAAc,iEAAd;AACA,eAAAC,UAAA,GAAa,4DAAb;AAEO,eAAAC,IAAA,GAAO,6DAAWC,IAAlB;AACA,eAAAC,SAAA,GAAY,EAAZ;AAEkE;;;;qCAE9D;AACT,iBAAKvE,IAAL,GAAY,KAAKxC,WAAL,CAAiBqC,iBAAjB,EAAZ;AACD;;;;;;;yBAlBUmE,oB,EAAoB,+H,EAAA,uH;AAAA,O;;;cAApBA,oB;AAAoB,qC;AAAA,iB;AAAA,gB;AAAA,0pE;AAAA;AAAA;ACXjC;;AACI;;AACI;;AACA;;AACI;;AAAmC;;AAA4B;;AACnE;;AACJ;;AAEA;;;;AASA;;AACI;;AACI;;AAA+C;;AAA4C;;AAAc;;AACzG;;AACI;;AAAqB;;AACsB;;AAC/C;;AACA;;AACI;;AAA2E;;AAAM;;AACjF;;AACJ;;AACJ;;AACA;;AACI;;AAA+C;;AAAsC;;AAAkB;;AACvG;;AACI;;AAAqB;;AAAyD;;AAClF;;AACA;;AACI;;AAAkE;;AAAO;;AAC7E;;AACJ;;AACA;;AACI;;AAA+C;;AAAsC;;AAAa;;AAClG;;AACI;;AAAqB;;AACZ;;AACb;;AACA;;AACI;;AAAkE;;AAAM;;AACxE;;AAAqD;;AAAK;;AAC9D;;AACJ;;AACA;;AACI;;AAA8C;;AAA6C;;AAAW;;AACtG;;AACI;;AAAqB;;AAAyC;;AAClE;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AAEA;;AAKI;AAAA;AAAA;;AAEA;;AAqBA;;AACI;;;;AAsBJ;;AACJ;;AACJ;;;;;;;AA/G0B;;AAAA;;AAMjB;;AAAA;;AAsDD;;AAAA,+FAAyB,SAAzB,EAAyB,IAAzB,EAAyB,YAAzB,EAAyB,IAAzB;;AA2B+B;;AAAA;;;;;;;;;;wED9E1BA,oB,EAAoB;gBAJhC,uDAIgC;iBAJtB;AACTpF,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE;AAFJ,W;AAIsB,U;;;;;;;;;;;;;;;;;;;;;;;;AEXjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACEI;;AACI;;AACI;;AACJ;;AACJ;;;;;;AAFQ;;AAAA;;;;UDMC2F,a;AAQT,+BAAoBhH,WAApB,EAAsDiH,WAAtD,EAAgF;AAAA;;AAA5D,eAAAjH,WAAA,GAAAA,WAAA;AAAkC,eAAAiH,WAAA,GAAAA,WAAA;AAFtD,eAAAC,SAAA,GAAY,KAAZ,CAEgF,CAF7D;;AAGflH,qBAAW,CAACmH,UAAZ;AACH;;;;qCAEU;AAAA;;AAEP,iBAAKC,wBAAL,GAAgC,KAAKH,WAAL,CAAiBI,wBAAjB,GAA4C/G,SAA5C,CAAsD,UAAAkF,QAAQ,EAAI;AAC9F,kBAAI,CAACA,QAAD,IAAaA,QAAQ,CAAC8B,MAAT,KAAoB,CAArC,EAAwC;AACpC,uBAAI,CAACxE,YAAL,CAAkBmB,KAAlB;AACH,eAFD,MAEO;AACH,uBAAI,CAACnB,YAAL,CAAkBW,UAAlB,CAA6B+B,QAAQ,CAACA,QAAQ,CAAC8B,MAAT,GAAkB,CAAnB,CAArC;AACH;AACJ,aAN+B,CAAhC;AAQA,iBAAKC,4BAAL,GAAoC,KAAKvH,WAAL,CAAiBwH,4BAAjB,GAAgDlH,SAAhD,CAA0D,UAAAmH,MAAM,EAAI;AACpG,qBAAI,CAACC,eAAL,GAAuBD,MAAvB;AACH,aAFmC,CAApC;AAIAE,sBAAU,CAAC,YAAM;AACb,qBAAI,CAACT,SAAL,GAAiB,IAAjB;AACH,aAFS,EAEP,IAFO,CAAV;AAIH;;;wCAEa;AACV,gBAAI,KAAKE,wBAAT,EAAmC;AAAE,mBAAKA,wBAAL,CAA8BtG,WAA9B;AAA8C;;AACnF,gBAAI,KAAKyG,4BAAT,EAAuC;AAAE,mBAAKA,4BAAL,CAAkCzG,WAAlC;AAAkD;AAC9F;;;oCAGM;AAAA;;AACH,iBAAKoG,SAAL,GAAiB,KAAjB;AACAS,sBAAU,CAAC,YAAM;AACb,qBAAI,CAACT,SAAL,GAAiB,IAAjB;AACH,aAFS,EAEP,IAFO,CAAV;AAGH;;;;;;;yBA3CQF,a,EAAa,+H,EAAA,0H;AAAA,O;;;cAAbA,a;AAAa,mC;AAAA;AAAA;;;;;;;;;;;;;qBAAb,mB;AAAe,a,EAAA,K,EAAA,6D;;;;;;;;ACV5B;;AAEI;;AAMA;;AACI;;AACJ;;AAEA;;AACJ;;;;AAXa;;AAAA;;;;;;;;;wEDQAA,a,EAAa;gBAJzB,uDAIyB;iBAJf;AACP5F,oBAAQ,EAAE,YADH;AAEPC,uBAAW,EAAE;AAFN,W;AAIe,U;;;;;;;;kBACrB,uD;mBAAU,c,EAAgB;AAAE,wBAAQ;AAAV,a;;;kBAoC1B,0D;mBAAa,c,EAAgB,CAAC,QAAD,C;;;;;;;;;;;;;;;;;;;;AE/CloDauG,U;;;;;;;oCAEK;AACV,mBAAO;AACHC,sBAAQ,EAAED,UADP;AAEHE,uBAAS,EAAE,CAAC,yDAAD,EAAc,4DAAd;AAFR,aAAP;AAIH;;;;;;;cAPQF;;;;2BAAAA,U;AAAU,S;AAAA,mBAHR,CAAC,yDAAD,EAAc,4DAAd,C;AAAyB,kBAvB3B,CACL,kEADK,EAEL,qDAFK,EAGL,kEAHK,CAuB2B;;;;4HAG3BA,U,EAAU;AAAA,yBApBf,6DAoBe,EAnBf,gFAmBe,EAlBf,6EAkBe,EAjBf,yFAiBe,EAhBf,wEAgBe,EAff,uEAee,EAdf,uEAce,EAbf,mEAae,EAZf,8FAYe,EAXf,2FAWe,EAVf,0GAUe,EATf,gGASe,EARf,wFAQe,EAPf,oDAOe,EANf,wHAMe,EALf,4DAKe,EALK,6DAKL;AALwB,oBApBvC,kEAoBuC,EApB3B,6DAoB2B,EAlBvC,kEAkBuC;AAKxB,S;AAvBI,O;;;;;wEAuBdA,U,EAAU;gBA3BtB,sDA2BsB;iBA3Bb;AACNG,mBAAO,EAAE,CACL,kEADK,EAEL,qDAFK,EAGL,kEAHK,CADH;AAMNC,wBAAY,EAAE,CACV,6DADU,EAEV,gFAFU,EAGV,6EAHU,EAIV,yFAJU,EAKV,wEALU,EAMV,uEANU,EAOV,uEAPU,EAQV,mEARU,EASV,8FATU,EAUV,2FAVU,EAWV,0GAXU,EAYV,gGAZU,EAaV,wFAbU,EAcV,oDAdU,EAeV,wHAfU,EAgBV,4DAhBU,EAgBU,6DAhBV,CANR;AAwBNF,qBAAS,EAAE,CAAC,yDAAD,EAAc,4DAAd,CAxBL;AAyBNG,mBAAO,EAAE;AAzBH,W;AA2Ba,U;;;;;;;;;;;;;;;;;;ACpDvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAkBA,UAAMC,QAAQ,GAAW,CACrB;AAAE1H,YAAI,EAAE,EAAR;AAAY2H,iBAAS,EAAE,gFAAvB;AAA0C/F,YAAI,EAAE;AAAEM,mBAAS,EAAE;AAAb;AAAhD,OADqB,EAErB;AAAElC,YAAI,EAAE,kBAAR;AAA4B2H,iBAAS,EAAE,6EAAvC;AAAyD/F,YAAI,EAAE;AAAEK,gBAAM,EAAE,MAAV;AAAkBC,mBAAS,EAAE;AAA7B;AAA/D,OAFqB,EAGrB;AAAElC,YAAI,EAAE,SAAR;AAAmB2H,iBAAS,EAAE,6EAA9B;AAAgD/F,YAAI,EAAE;AAAEK,gBAAM,EAAE,KAAV;AAAiBC,mBAAS,EAAE;AAA5B;AAAtD,OAHqB,CAAzB,C,CAMA;;AACA,UAAM0F,UAAU,GAAW,CACvB;AAAE5H,YAAI,EAAE,QAAR;AAAkB2H,iBAAS,EAAE,wEAA7B;AAA8C/F,YAAI,EAAE;AAAEM,mBAAS,EAAE;AAAb;AAApD,OADuB,EAEvB;AAAElC,YAAI,EAAE,YAAR;AAAsB4B,YAAI,EAAE;AAAEM,mBAAS,EAAE;AAAb,SAA5B;AAA0D2F,gBAAQ,EAAE,CAChE;AAAE7H,cAAI,EAAE,EAAR;AAAY2H,mBAAS,EAAE,0EAAvB;AAA4C/F,cAAI,EAAE;AAAEM,qBAAS,EAAE;AAAb;AAAlD,SADgE,EAEhE;AAAElC,cAAI,EAAE,wCAAR;AAAkD2H,mBAAS,EAAE,uEAA7D;AAA+E/F,cAAI,EAAE;AAAEM,qBAAS,EAAE;AAAb;AAArF,SAFgE,EAGhE;AAAElC,cAAI,EAAE,wCAAR;AAAkD2H,mBAAS,EAAE,gFAA7D;AAAwF/F,cAAI,EAAE;AAAEM,qBAAS,EAAE;AAAb;AAA9F,SAHgE;AAApE,OAFuB,EAOvB;AAAElC,YAAI,EAAE,OAAR;AAAiB4B,YAAI,EAAE;AAAEM,mBAAS,EAAE;AAAb,SAAvB;AAA+C2F,gBAAQ,EAAE,CACrD;AAAE7H,cAAI,EAAE,EAAR;AAAY2H,mBAAS,EAAE,sEAAvB;AAA4C/F,cAAI,EAAE;AAAEM,qBAAS,EAAE;AAAb;AAAlD,SADqD,EAErD;AAAElC,cAAI,EAAE,iBAAR;AAA2B2H,mBAAS,EAAE,kEAAtC;AAAyD/F,cAAI,EAAE;AAAEM,qBAAS,EAAE;AAAb;AAA/D,SAFqD;AAAzD,OAPuB,EAWvB;AAAElC,YAAI,EAAE,eAAR;AAAyB4B,YAAI,EAAE;AAAEM,mBAAS,EAAE;AAAb,SAA/B;AAA+D2F,gBAAQ,EAAE,CACrE;AAAE7H,cAAI,EAAE,EAAR;AAAY2H,mBAAS,EAAE,6FAAvB;AAAoD/F,cAAI,EAAE;AAAEM,qBAAS,EAAE;AAAb;AAA1D,SADqE,EAErE;AAAElC,cAAI,EAAE,iBAAR;AAA2B2H,mBAAS,EAAE,0FAAtC;AAAiE/F,cAAI,EAAE;AAAEM,qBAAS,EAAE;AAAb;AAAvE,SAFqE;AAAzE,OAXuB,EAevB;AAAElC,YAAI,EAAE,SAAR;AAAmB4B,YAAI,EAAE;AAAEM,mBAAS,EAAE;AAAb,SAAzB;AAAkD2F,gBAAQ,EAAE,CACxD;AAAE7H,cAAI,EAAE,EAAR;AAAY2H,mBAAS,EAAE,6DAAvB;AAA4C/F,cAAI,EAAE;AAAEM,qBAAS,EAAE;AAAb;AAAlD,SADwD,EAExD;AAAElC,cAAI,EAAE,KAAR;AAAe2H,mBAAS,EAAE,4DAA1B;AAA8C/F,cAAI,EAAE;AAAEK,kBAAM,EAAE,KAAV;AAAiBC,qBAAS,EAAE;AAA5B;AAApD,SAFwD,EAGxD;AAAElC,cAAI,EAAE,gBAAR;AAA0B2H,mBAAS,EAAE,4DAArC;AAAyD/F,cAAI,EAAE;AAAEK,kBAAM,EAAE,MAAV;AAAkBC,qBAAS,EAAE;AAA7B;AAA/D,SAHwD;AAA5D,OAfuB,EAoBvB;AAAElC,YAAI,EAAE,QAAR;AAAkB4B,YAAI,EAAE;AAAEM,mBAAS,EAAE;AAAb,SAAxB;AAAwD2F,gBAAQ,EAAE,CAC9D;AAAE7H,cAAI,EAAE,EAAR;AAAY2H,mBAAS,EAAE,0GAAvB;AAA8C/F,cAAI,EAAE;AAAEM,qBAAS,EAAE;AAAb;AAApD,SAD8D,EAE9D;AAAElC,cAAI,EAAE,sBAAR;AAAgC2H,mBAAS,EAAE,wFAA3C;AAAqE/F,cAAI,EAAE;AAAEM,qBAAS,EAAE;AAAb;AAA3E,SAF8D,EAG9D;AAAElC,cAAI,EAAE,UAAR;AAAoB2H,mBAAS,EAAE,gGAA/B;AAA6D/F,cAAI,EAAE;AAACM,qBAAS,EAAE;AAAZ;AAAnE,SAH8D,EAI9D;AAAElC,cAAI,EAAE,WAAR;AAAqB2H,mBAAS,EAAE,wHAAhC;AAA2D/F,cAAI,EAAE;AAACK,kBAAM,EAAE,KAAT;AAAgBC,qBAAS,EAAE;AAA3B;AAAjE,SAJ8D,EAK9D;AAAElC,cAAI,EAAE,6BAAR;AAAuC2H,mBAAS,EAAE,wHAAlD;AAA6E/F,cAAI,EAAE;AAACK,kBAAM,EAAE,OAAT;AAAkBC,qBAAS,EAAE;AAA7B;AAAnF,SAL8D;AAAlE,OApBuB,EA2BvB;AAAElC,YAAI,EAAE,MAAR;AAAgB2H,iBAAS,EAAE,oDAA3B;AAA0C/F,YAAI,EAAE;AAAEM,mBAAS,EAAE;AAAb;AAAhD,OA3BuB,EA4BvB;AAAElC,YAAI,EAAE,EAAR;AAAY6H,gBAAQ,EAAEH;AAAtB,OA5BuB,CAA3B,C,CA+BA;AACA;;AACO,UAAMI,MAAM,GAAW,CAC1B;AACI9H,YAAI,EAAE,EADV;AACc2H,iBAAS,EAAE,6DADzB;AAEIE,gBAAQ,EAAE,CACN;AAAE7H,cAAI,EAAE,EAAR;AAAY+H,oBAAU,EAAE;AAAxB,SADM,EAEN;AAAE/H,cAAI,EAAE,OAAR;AAAiB4B,cAAI,EAAE;AAAEM,qBAAS,EAAE;AAAb,WAAvB;AAA8C2F,kBAAQ,EAAG,CACrD;AAAE7H,gBAAI,EAAE,EAAR;AAAY2H,qBAAS,EAAE,yFAAvB;AAA6C/F,gBAAI,EAAE;AAAEM,uBAAS,EAAE;AAAb;AAAnD,WADqD,EAErD;AAAElC,gBAAI,EAAE,WAAR;AAAqB4B,gBAAI,EAAE;AAAEM,uBAAS,EAAE;AAAb,aAA3B;AAAuD2F,oBAAQ,EAAEH;AAAjE,WAFqD,EAGrD;AAAE1H,gBAAI,EAAE,EAAR;AAAY6H,oBAAQ,EAAED;AAAtB,WAHqD;AAAzD,SAFM,EAON;AAAE5H,cAAI,EAAE,EAAR;AAAY6H,kBAAQ,EAAED;AAAtB,SAPM;AAFd,OAD0B,CAAvB;;AAeA,UAAMI,OAAO,GAAG,6DAAaC,QAAb,CAAsBH,MAAtB,CAAhB;;;;;;;;;;;;;;;;;ACzEP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACOI;;AAA4B;AAAA;;AAAA;;AAAA;AAAA;;AAAmH;;AAC/I;;AAAiB;AAAA;;AAAA;;AAAA;AAAA;;AAAmB;;;;;;AADS,2GAAgC,UAAhC,EAAgC,iEAAhC;;;;;;AAI/C;;AACC;;AACC;;AACC;;AACC;;AAED;;AACA;;AACC;;AAED;;AAED;;AAEA;;AACC;;AACC;;AAED;;AACA;;AACC;;AAED;;AACD;;AAEA;;AACC;;AAED;;AAEA;;AACC;;AAED;;AAEA;;AACC;;AAED;;AAED;;AACD;;;;;;AAzCwC;;;;;;;;AA8CvC;;AAA0G;;AAAe;;AACzH;;AAAgD;AAAA;;AAAA;;AAAA;AAAA;;AAAqD;;AAAe;;;;;;AAArG;;AAAA,2GAAgC,MAAhC,EAAgC,uBAAhC;;;;;;AAGhB;;AACC;;AACC;;AACC;;AAED;;AAEA;;AACC;;AAED;;AAEA;;AACC;;AAED;;AAED;;AACD;;;;;;AAlB4B;;AAakE;;AAAA;;;;;;;;AAW5F;;AAAuB;AAAA;;AAAA;;AAAA,0CAAwB,IAAxB;AAA4B,WAA5B;;AAAuF;;AAAa;;AAC3H;;AAAU;AAAA;;AAAA;;AAAA,uCAAqB,IAArB;AAAyB,WAAzB;;AAAkF;;AAAU;;;;;;;;AAIvG;;AACC;;AACC;;AAAiB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAgE;;AAClF;;AACA;;AAAI;;AAA6B;;AAClC;;;;;;AADK;;AAAA;;;;;;;;AAIN;;AACU;;AACE;;AAEA;;AAAoF;AAAA;;AAAA;;AAAA,uCAAqB,IAArB;AAAyB,WAAzB;;AAA4B;;AAClH;;AACF;;;;;;AAJI;;AAAA;;;;;;;;AAMJ;;AACI;;AACE;;AAEA;;AAA2F;AAAA;;AAAA;;AAAA,0CAAwB,IAAxB;AAA4B,WAA5B;;AAA+B;;AAC5H;;AACZ;;;;;;AAJc;;AAAA;;;;UD5FHI,e;AAgBX,iCACU1I,WADV,EAES2I,YAFT,EAGUlH,EAHV,EAIUtB,KAJV,EAKUD,MALV,EAMUsB,QANV,EAM8B;AAAA;;AALpB,eAAAxB,WAAA,GAAAA,WAAA;AACD,eAAA2I,YAAA,GAAAA,YAAA;AACC,eAAAlH,EAAA,GAAAA,EAAA;AACA,eAAAtB,KAAA,GAAAA,KAAA;AACA,eAAAD,MAAA,GAAAA,MAAA;AACA,eAAAsB,QAAA,GAAAA,QAAA;AAbH,eAAAoH,gBAAA,GAAmB,KAAnB;AACA,eAAAC,kBAAA,GAAqB,EAArB;AACA,eAAAC,qBAAA,GAAwB,EAAxB;AAEA,eAAAC,aAAA,GAAgB,KAAhB;AACA,eAAAC,gBAAA,GAAmB,KAAnB;AASN;;;;qCAEU;AAAA;;AACT,iBAAKC,iBAAL,GAAyB,KAAKjJ,WAAL,CAAiBkJ,iBAAjB,GAAqC5I,SAArC,CAA+C,UAAA6I,IAAI,EAAI;AAC9E,qBAAI,CAACR,YAAL,CAAkBS,aAAlB,CAAgCD,IAAhC,EAAsC,IAAI,sDAAJ,EAAtC;;AACA,qBAAI,CAACE,YAAL;;AACA,qBAAI,CAACV,YAAL,CAAkBW,WAAlB,CAA8BjG,QAA9B,CAAuCkG,KAAvC,CAA6CC,OAA7C,GAH8E,CAI9E;;;AAEA,qBAAI,CAACC,YAAL,GAAoB,OAAI,CAAChI,EAAL,CAAQ6C,KAAR,CAAc;AAChC,4BAAY,CAAC,EAAD,EAAK,EAAL,CADoB;AAGhC,+BAAe,CAAC,EAAD,EAAK,CAClB,0DAAWE,QADO,EAElB,0DAAWC,SAAX,CAAqB,CAArB,CAFkB,EAGlB,0DAAWC,SAAX,CAAqB,EAArB,CAHkB,EAIlB,0DAAWgF,OAAX,CAAmB,2DAAnB,CAJkB,CAAL,CAHiB;AAShC,mCAAmB,CAAC,EAAD,EAAK,CACtB,OAAI,CAACC,0BAAL,EADsB,CAAL;AATa,eAAd,CAApB;AAcD,aApBwB,CAAzB;AAqBD;;;wCAEa;AACZ,gBAAI,KAAKV,iBAAT,EAA4B;AAAE,mBAAKA,iBAAL,CAAuBnI,WAAvB;AAAuC;AACtE;;;yCAEc;AAAA;;AACb,iBAAKd,WAAL,CAAiB4J,iBAAjB,GAAqCzG,IAArC,CAA0C,UAAAZ,MAAM,EAAI;AAClD,qBAAI,CAACsH,MAAL,GAActH,MAAd;AACD,aAFD;AAGD;;;uDAEiC;AAAA;;AAChC,mBAAO,UAACyC,OAAD,EAAsD;AAC3D,kBAAI,OAAI,CAACyE,YAAT,EAAuB;AACrB,oBAAItE,IAAI,GAAG,OAAI,CAACsE,YAAhB;;AACA,oBAAItE,IAAI,CAAC9B,QAAL,CAAcyG,eAAd,CAA8BvE,KAA9B,IAAuCJ,IAAI,CAAC9B,QAAL,CAAc0G,WAAd,CAA0BnG,KAA1B,KAAoCuB,IAAI,CAAC9B,QAAL,CAAcyG,eAAd,CAA8BlG,KAA7G,EAAoH;AAClH,yBAAI,CAACiF,kBAAL,GAA0B,4BAA1B;AACA,yBAAO;AAAE,qCAAiB;AAAnB,mBAAP;AACD,iBAHD,MAGO;AACL,yBAAI,CAACA,kBAAL,GAA0B,EAA1B;AACA,yBAAO,IAAP;AACD;AACF;AACF,aAXD;AAYD;;;2CAEuB;AAAA;;AACtB,iBAAKD,gBAAL,GAAwB,IAAxB;AACA,iBAAK5I,WAAL,CAAiBgK,cAAjB,CAAgC,KAAKP,YAAL,CAAkBpG,QAAlB,CAA2B4G,QAA3B,CAAoCrG,KAApE,EAA2E,KAAK6F,YAAL,CAAkBpG,QAAlB,CAA2B0G,WAA3B,CAAuCnG,KAAlH,EACGT,IADH,CACQ,UAAAZ,MAAM,EAAI;AACd,qBAAI,CAACqG,gBAAL,GAAwB,KAAxB;;AACA,qBAAI,CAAC9F,YAAL,CAAkBoH,iBAAlB,CAAoC,qCAApC;AACH,aAJD,WAIS,UAAA1G,MAAM,EAAI;AACjB,qBAAI,CAACV,YAAL,CAAkBW,UAAlB,CAA6BD,MAA7B;;AACA,qBAAI,CAACoF,gBAAL,GAAwB,KAAxB;AACD,aAPD;AAQD;;;iCAEM;AAAA;;AACL,gBAAMO,IAAI,GAAS,KAAKR,YAAL,CAAkBW,WAAlB,CAA8B1F,KAAjD;AAEA,iBAAK5D,WAAL,CAAiBmK,iBAAjB,CAAmChB,IAAnC,EAAyChG,IAAzC,CAA8C,UAAAvB,CAAC,EAAI;AACjD,kBAAIA,CAAJ,EAAO;AACL,uBAAI,CAACkB,YAAL,CAAkBoH,iBAAlB,CAAoC,8BAApC;AACD,eAFD,MAEO,CACN;AAEF,aAND,WAMS,UAAA1G,MAAM,EAAI;AACjB,qBAAI,CAACV,YAAL,CAAkBW,UAAlB,CAA6BD,MAA7B;AACD,aARD;AASD;;;mCAEQ;AACP,iBAAKxD,WAAL,CAAiBe,UAAjB;AACD;;;sCAEWqJ,U,EAAqB;AAAA;;AAC/B,iBAAKtH,YAAL,CAAkBmB,KAAlB;AAEE,iBAAKjE,WAAL,CAAiBqK,YAAjB,CAA8BD,UAA9B,EAA0CjH,IAA1C,CAA+C,UAAAZ,MAAM,EAAI;AACrD,qBAAI,CAACvC,WAAL,CAAiBsK,gBAAjB,CAAkC,qEAAeC,MAAjD,EAAyDhI,MAAM,CAACiI,WAAhE,EAA6EjI,MAAM,CAACkI,mBAApF,EAAyGtH,IAAzG,CACE,UAAAuH,WAAW,EAAI;AACb,uBAAI,CAACrB,YAAL;AACD,eAHH,WAIE,UAAA7F,MAAM,EAAI;AACR,uBAAI,CAACV,YAAL,CAAkBW,UAAlB,CAA6BD,MAA7B;AACD,eANH;AAOD,aARH,WASI,UAAAA,MAAM,EAAI;AACR,qBAAI,CAACuF,aAAL,GAAqBvF,MAArB;;AACA,qBAAI,CAACV,YAAL,CAAkBC,eAAlB,CAAkCS,MAAlC;AACD,aAZL;AAaH;;;yCAEc4G,U,EAAqB;AAAA;;AAClC,iBAAKtH,YAAL,CAAkBmB,KAAlB;AAEE,iBAAKjE,WAAL,CAAiB2K,eAAjB,CAAiCP,UAAjC,EAA6CjH,IAA7C,CAAkD,UAAAZ,MAAM,EAAI;AACxD,qBAAI,CAACvC,WAAL,CAAiBsK,gBAAjB,CAAkC,qEAAeM,SAAjD,EAA4DrI,MAAM,CAACiI,WAAnE,EAAgFjI,MAAM,CAACkI,mBAAvF,EAA4GtH,IAA5G,CACE,UAAAuH,WAAW,EAAI;AACb,uBAAI,CAACrB,YAAL;AACD,eAHH,WAIE,UAAA7F,MAAM,EAAI;AACR,uBAAI,CAACV,YAAL,CAAkBW,UAAlB,CAA6BD,MAA7B;AACD,eANH;AAOD,aARH,WASI,UAAAA,MAAM,EAAI;AACR,qBAAI,CAACwF,gBAAL,GAAwBxF,MAAxB;;AACA,qBAAI,CAACV,YAAL,CAAkBC,eAAlB,CAAkCS,MAAlC;AACD,aAZL;AAaH;;;sCAEWqH,K,EAAsB;AAChC,iBAAK7K,WAAL,CAAiB8K,mBAAjB,CAAqCD,KAAK,CAACE,aAA3C,EAA0DF,KAAK,CAACL,WAAhE;AACD;;;;;;;yBA9IU9B,e,EAAe,+H,EAAA,yI,EAAA,2H,EAAA,+H,EAAA,uH,EAAA,yH;AAAA,O;;;cAAfA,e;AAAe,oC;AAAA;AAAA;;;;;;;;;;oFAFf,CAAC,wEAAD,C;AAAc,iB;AAAA,e;AAAA,2uE;AAAA;AAAA;ACb3B;;AACC;;AAEA;;AACG;;AACI;;AAKN;;AA2CE;;AACA;;AACI;;AAKN;;AAoBD;;AAEA;;AACC;;AAKA;;AACC;;AAMD;;AAEA;;AAQQ;;AAOT;;AACD;;AACA;;;;AA9GsE;;AAAA;;AAM9D;;AAAA;;AA4CgE;;AAAA;;AAMhE;;AAAA;;AAsBmH;;AAAA;;AAOpH;;AAAA;;AAQI;;AAAA;;AAQQ;;AAAA;;;;;;;;;wED1FNA,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACTtH,oBAAQ,EAAE,aADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTyG,qBAAS,EAAE,CAAC,wEAAD;AAHF,W;AAKiB,U;;;;;;;;;;;;;;;;kBACzB,uD;mBAAU,c,EAAgB;AAAE,wBAAQ;AAAV,a;;;;;;;;;;;;;;;;;;;;AEjB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACgBK;;AAAe;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;;;UDLnCkD,2B;AAgBT,6CAAoBhL,WAApB,EAAsDE,MAAtD,EAA8EC,KAA9E,EAAqG;AAAA;;AAAjF,eAAAH,WAAA,GAAAA,WAAA;AAAkC,eAAAE,MAAA,GAAAA,MAAA;AAAwB,eAAAC,KAAA,GAAAA,KAAA;AAZ9E,eAAA8K,QAAA,GAAW,KAAX;AACA,eAAAC,eAAA,GAAkB,YAAlB;AAEA,eAAAtF,OAAA,GAAU,CACN;AAAErB,gBAAI,EAAE,SAAR;AAAmBsB,iBAAK,EAAE,SAA1B;AAAqCC,kBAAM,EAAE;AAA7C,WADM,EAEN;AAAEvB,gBAAI,EAAE,SAAR;AAAmBsB,iBAAK,EAAE,SAA1B;AAAqCC,kBAAM,EAAE;AAA7C,WAFM,EAGN;AAAEvB,gBAAI,EAAE,OAAR;AAAiBsB,iBAAK,EAAE,OAAxB;AAAiCC,kBAAM,EAAE;AAAzC,WAHM,CAAV;AAMQ,eAAAC,UAAA,GAAa,IAAI,oDAAJ,CAAoC,IAApC,CAAb;AACR,eAAAC,SAAA,GAAwC,KAAKD,UAAL,CAAgBE,YAAhB,EAAxC;AAGC;;;;qCAEU;AACP,iBAAKkF,aAAL,GAAqB,KAAKnL,WAAL,CAAiBoL,gBAAjB,EAArB;AACH;;;wCAEa,CACb;;;sCAEWpI,O,EAAkB;AAC1B,iBAAK9C,MAAL,CAAYe,QAAZ,CAAqB,CAAC,MAAD,EAAS+B,OAAO,CAACqI,SAAjB,CAArB,EAAkD;AAACnK,wBAAU,EAAE,KAAKf;AAAlB,aAAlD;AACH;;;kCAEO;AACJ,iBAAKH,WAAL,CAAiBe,UAAjB;AACH;;;;;;;yBAhCQiK,2B,EAA2B,+H,EAAA,uH,EAAA,+H;AAAA,O;;;cAA3BA,2B;AAA2B,2C;AAAA,gB;AAAA,e;AAAA,2T;AAAA;AAAA;ACXxC;;AACI;;AAGF;AAAA,qBAAS,IAAA1E,KAAA,EAAT;AAAgB,aAAhB;;AAIA;;AAKC;AAAA,qBAAY,IAAAgF,WAAA,QAAZ;AAA+B,aAA/B;;AAEC;;AAIF;;AACE;;AACJ;;;;AAlBE;;AAAA;;AAMC;;AAAA,gGAA0B,qBAA1B,EAA0B,IAA1B,EAA0B,eAA1B,EAA0B,GAA1B,EAA0B,SAA1B,EAA0B,WAA1B,EAA0B,MAA1B,EAA0B,iBAA1B;;;;;;;;;wEDEUN,2B,EAA2B;gBALvC,uDAKuC;iBAL7B;AACT5J,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,qCAFJ;AAGTC,kBAAM,EAAE;AAHC,W;AAK6B,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEXxC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACKK;;AACC;;AACA;;AAAK;;AAA4B;;AAClC;;;;;;AADM;;AAAA;;;;;;AALT;;AACE;;AACC;;AACA;;AAID;;AACD;;;;;;AAP8B;;AAAA,qHAA+C,eAA/C,EAA+C,8BAA/C;;AAC5B;;AAAA;;AACK;;AAAA;;;;;;;;AAJT;;AAA2G;AAAA;;AAAA;;AAAA;AAAA;;AAC1G;;AASD;;;;;;AAVkF,4FAAwB,SAAxB,EAAwB,IAAxB;;AACxE;;AAAA;;;;UDSEiK,yB;AAcT,2CACYvL,WADZ,EAEYE,MAFZ,EAGYC,KAHZ,EAGmC;AAAA;;AAFvB,eAAAH,WAAA,GAAAA,WAAA;AACA,eAAAE,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AAXZ,eAAA8K,QAAA,GAAW,KAAX;AACA,eAAAC,eAAA,GAAkB,YAAlB;AAGO,eAAAM,eAAA,GAAkB,IAAlB;AAQN;;;;qCAEU;AAAA;;AACP,iBAAKC,YAAL;;AAEA,gBAAI;AACA,mBAAKrL,aAAL,GAAqB,2DACjB,KAAKD,KAAL,CAAWI,MADM,EAEnBD,SAFmB,CAET,UAAAiC,MAAM,EAAI;AAClB,oBAAIhC,MAAM,GAAGgC,MAAM,CAAC,CAAD,CAAnB;AAEA,oBAAI8I,SAAS,GAAG9K,MAAM,CAAC,WAAD,CAAtB;AAEA,uBAAI,CAAC0K,QAAL,GAAgB,KAAhB;AACA,uBAAI,CAACC,eAAL,GAAuB,YAAvB;AAEA,uBAAI,CAAClI,OAAL,GAAe,OAAI,CAAChD,WAAL,CAAiB0L,eAAjB,CAAiCL,SAAjC,CAAf;;AAEA,oBAAI,CAAC,OAAI,CAACrI,OAAV,EAAmB;AACf,yBAAI,CAAChD,WAAL,CAAiBe,UAAjB;AACH;AAEJ,eAhBoB,CAArB;AAiBH,aAlBD,CAkBE,OAAO8B,CAAP,EAAU,CACX;AAGJ;;;wCAEa;AACV,gBAAI,KAAKzC,aAAT,EAAwB;AAAE,mBAAKA,aAAL,CAAmBU,WAAnB;AAAmC;AAChE;;;kCAEO;AACJ,iBAAKd,WAAL,CAAiBe,UAAjB;AACH;;;yCAEc,CACd;;;;;;;yBAxDQwK,yB,EAAyB,+H,EAAA,uH,EAAA,+H;AAAA,O;;;cAAzBA,yB;AAAyB,0C;AAAA,gB;AAAA,e;AAAA,kT;AAAA;AAAA;ACXtC;;AACC;;AAWD;;;;AAXW;;AAAA;;;;;;;;;wEDUEA,yB,EAAyB;gBALrC,uDAKqC;iBAL3B;AACPnK,oBAAQ,EAAE,mBADH;AAEPC,uBAAW,EAAE,oCAFN;AAGPC,kBAAM,EAAE;AAHD,W;AAK2B,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEElC;;AAA6C;;AAA8C;;;;;;AAC3F;;AAA+C;;AAAqD;;;;;;AADpG;;AACA;;AACA;;AACI;;AACJ;;;;;;AAJO;;AACA;;AAAA;;;;;;;;AAZX;;AACI;;AAKI;AAAA;;AAAA;;AAAA;AAAA;;AAIR;;AASQ;;AACI;;AAAmH;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AACtJ;;AAEA;;AACI;;AAA4H;AAAA;;AAAA;;AAAA;AAAA;;AAAwC;;AACxK;;AAEA;;AACI;;AAAwH;AAAA;;AAAA;;AAAA;AAAA;;AAAoC;;AAChK;;AAEA;;AACI;;AAAkI;AAAA;;AAAA;;AAAA;AAAA;;AACY;;AAClJ;;AAGJ;;AACJ;;;;;;AAlCQ;;AAAA,oFAAgB,iBAAhB,EAAgB,IAAhB;;AAgBmB;;AAAA,qFAAiB,aAAjB,EAAiB,KAAjB,EAAiB,YAAjB,EAAiB,IAAjB,EAAiB,UAAjB,EAAiB,IAAjB,EAAiB,SAAjB,EAAiB,uBAAjB;;AAIA;;AAAA,qFAAiB,aAAjB,EAAiB,KAAjB,EAAiB,YAAjB,EAAiB,IAAjB,EAAiB,UAAjB,EAAiB,IAAjB,EAAiB,SAAjB,EAAiB,gCAAjB;;AAIA;;AAAA,qFAAiB,aAAjB,EAAiB,KAAjB,EAAiB,YAAjB,EAAiB,IAAjB,EAAiB,UAAjB,EAAiB,IAAjB,EAAiB,SAAjB,EAAiB,4BAAjB;;AAIA;;AAAA,qFAAiB,aAAjB,EAAiB,KAAjB,EAAiB,YAAjB,EAAiB,IAAjB,EAAiB,UAAjB,EAAiB,IAAjB,EAAiB,SAAjB,EAAiB,kBAAjB;;;;UCrBdqK,yB;AAOT,2CACYxL,KADZ,EAEY8G,WAFZ,EAGYjH,WAHZ,EAGsC;AAAA;;AAF1B,eAAAG,KAAA,GAAAA,KAAA;AACA,eAAA8G,WAAA,GAAAA,WAAA;AACA,eAAAjH,WAAA,GAAAA,WAAA;AACX;;;;qCAEU;AAAA;;AACP,iBAAKI,aAAL,GAAqB,2DACjB,KAAKD,KAAL,CAAWiC,IADM,EAEjB,KAAKjC,KAAL,CAAWI,MAFM,EAGjBD,SAHiB,CAGP,UAAMiC,MAAN;AAAA,qBAAgB,SAAD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBH,4BADqB,GACdG,MAAM,CAAC,CAAD,CADQ;AAErBhC,8BAFqB,GAEZgC,MAAM,CAAC,CAAD,CAFM;AAGzB,6BAAKE,MAAL,GAAcL,IAAI,CAACK,MAAnB;;AAIA,4BAAIL,IAAI,CAACK,MAAL,KAAgB,KAApB,EAA2B;AACvBmJ,iCAAO,GAAG,KAAK5L,WAAL,CAAiB6L,iBAAjB,EAAV;AACH,yBAFD,MAEO;AACGC,wCADH,GACoB,CAACvL,MAAM,CAAC,gBAAD,CAD3B;AAEHqL,iCAAO,GAAG,KAAK5L,WAAL,CAAiB+L,uBAAjB,CAAyCD,cAAzC,CAAV;AACH;;AAEDF,+BAAO,CAACzI,IAAR,CAAa,UAAA6I,WAAW,EAAI;AACxB,iCAAI,CAACA,WAAL,GAAmBA,WAAnB;;AACA,iCAAI,CAACC,iBAAL;AACH,yBAHD,WAGS,UAAAzI,MAAM,EAAI;AACf,iCAAI,CAACyD,WAAL,CAAiBZ,aAAjB,CAA+B7C,MAA/B;;AACA,iCAAI,CAACxD,WAAL,CAAiBe,UAAjB;AACH,yBAND;;AAdyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAf;AAAA,aAHO,CAArB;AA0BH;;;8CAEmB;AAChB,iBAAKmL,WAAL,kCAAwC,KAAKF,WAAL,CAAiBG,aAAzD,8BACG,KAAKH,WAAL,CAAiB7C,IADpB,mCAEQ,KAAK6C,WAAL,CAAiBI,SAFzB;AAIH;;;wCAEa;AACV,gBAAI,KAAKhM,aAAT,EAAwB;AAAE,mBAAKA,aAAL,CAAmBU,WAAnB;AAAmC;AAC9D;;;kCAEK;AACJ,iBAAKd,WAAL,CAAiBe,UAAjB;AACH;;;;;;;yBAvDQ4K,yB,EAAyB,+H,EAAA,0H,EAAA,+H;AAAA,O;;;cAAzBA,yB;AAAyB,2C;AAAA,oFAFvB,CAAC,wEAAD,CAEuB,E;AAFT,gB;AAAA,e;AAAA,q6B;AAAA;AAAA;ADX7B;;AAEA;;;;AAAK;;AAAA;;;;;;;;;wECWQA,yB,EAAyB;gBALrC,uDAKqC;iBAL3B;AACPvK,oBAAQ,EAAE,oBADH;AAEPC,uBAAW,EAAE,qCAFN;AAGPyG,qBAAS,EAAE,CAAC,wEAAD;AAHJ,W;AAK2B,U;;;;;;;;;;;;;;;;;;;;;;;;;;ACbtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;AC4BO;;AACC;;AAA0E;;AACzE;;AAAI;;AACN;;AACA;;AACC;;AAAiF;;AACpD;;AAAa;;AAC3C;;;;;;AAN0B;;AAAA;;AAIA;;AAAA;;;;;;;;AAK1B;;AAAI;;AAAyB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0E;;AACrE;;AAAI;;AAAI;;AAC1C;;AAAI;;AAAyB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAmE;;AAClE;;AAAO;;AAAI;;AACzC;;AAAI;;AAAyB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAqE;;AAC3E;;AAA0B;;AAAa;;AAAO;;AAAI;;;;;;;;;;;;;;AAtB3E;;AAEC;;AAAI;;AACuC;;AAA6B;;AAAS;;AAAI;;AACrF;;AAAI;;AAAuG;;AAC5E;;AAAS;;AAAI;;AAC5C;;AAUA;;AASD;;;;;;;;AAxBC,sHAA8C,WAA9C,EAA8C,iBAA9C;;AAC6B;;AAAA;;AAEA;;AAAA;;AAEhB;;AAAA;;AAUA;;AAAA;;;;;;;;AAhBd;;AA2BA;;AAA+B;AAAA;;AAAA;;AAAA;AAAA;;AAC/B;;;;;;AA5BmB;;;;;;;;AAgClB;;AAA6E;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAuB;;AAAI;;;;;;AAIrG;;AAA8G;;AAAM;;;;;;AAAhC;;;;;;AACpF;;AAAiH;;AAAO;;;;;;AAAjC;;;;;;AAHxF;;AACC;;AAA2C;;AAA8C;;AAAI;;AAC7F;;AACA;;AACD;;;;;;;;AAHC;;AAAA;;AAA8C;;AAAA;;AACtC;;AAAA;;AACA;;AAAA;;;;;;AALX;;AACA;;AACE;;AAKD;;;;;;AAPO;;AAEuB;;AAAA;;;;UD1CxBuE,qB;AAwBT,uCACYpF,WADZ,EAEYjH,WAFZ,EAGYC,UAHZ,EAIYC,MAJZ,EAKYC,KALZ,EAKmC;AAAA;;AAJvB,eAAA8G,WAAA,GAAAA,WAAA;AACA,eAAAjH,WAAA,GAAAA,WAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AA3BZ,eAAAyF,OAAA,GAAU,CACN;AAAErB,gBAAI,EAAE,MAAR;AAAgBsB,iBAAK,EAAE,MAAvB;AAA+BC,kBAAM,EAAE;AAAvC,WADM,EAEN;AAAEvB,gBAAI,EAAE,WAAR;AAAqBsB,iBAAK,EAAE,QAA5B;AAAsCC,kBAAM,EAAE,MAA9C;AAAsDwG,kBAAM,EAAE;AAA9D,WAFM,EAGN;AACA;AAAE/H,gBAAI,EAAE,MAAR;AAAgBsB,iBAAK,EAAE,OAAvB;AAAgCC,kBAAM,EAAE;AAAxC,WAJM,EAKN;AAAEvB,gBAAI,EAAE,SAAR;AAAmB+H,kBAAM,EAAE,eAA3B;AAA4CzG,iBAAK,EAAE,SAAnD;AAA8DC,kBAAM,EAAE,IAAtE;AAA4E,qBAAO,cAAnF;AAAmGyG,mBAAO,EAAE;AAA5G,WALM,EAMN;AACA;AAAEhI,gBAAI,EAAE,mBAAR;AAA6BsB,iBAAK,EAAE,YAApC;AAAkDC,kBAAM,EAAE;AAA1D,WAPM,CAAV;AAYQ,eAAAC,UAAA,GAAa,IAAI,oDAAJ,CAAgC,IAAhC,CAAb;AACR,eAAAC,SAAA,GAAoC,KAAKD,UAAL,CAAgBE,YAAhB,EAApC;AACA,eAAAuG,gBAAA,GAAmB,sEAAnB;AAIO,eAAAC,WAAA,GAA2B,IAAI,6DAAJ,EAA3B;AAUN;;;;qCAEU;AAAA;;AACH,iBAAKrM,aAAL,GAAqB,KAAKJ,WAAL,CAAiBsC,yBAAjB,GAA6ChC,SAA7C,CAAuD,UAAAoM,YAAY,EAAI;AACxF,kBAAIA,YAAJ,EAAkB;AACd,uBAAI,CAACA,YAAL,GAAoBA,YAApB;;AACA,uBAAI,CAACC,WAAL;AACH;AACJ,aALoB,CAArB;AAMP;;;wCAEa;AACV,gBAAI,KAAKvM,aAAT,EAAwB;AAAC,mBAAKA,aAAL,CAAmBU,WAAnB;AAAmC;;AAC5D,iBAAK2L,WAAL,CAAiBpI,MAAjB;AACH;;;kCAEO;AACJ,iBAAKrE,WAAL,CAAiBe,UAAjB;AACH;;;wCAEa;AACV,gBAAIqB,IAAI,GAAG,EAAX;AACA,iBAAKsK,YAAL,CAAkBE,OAAlB,CAA0B,UAAAC,WAAW,EAAI;AACrC,kBAAIC,WAAW,GAAGD,WAAW,CAAC,cAAD,CAAX,IAA+BA,WAAW,CAAC,cAAD,CAAX,CAA4BvF,MAA5B,GAAqC,CAApE,GAAwEuF,WAAW,CAAC,cAAD,CAAX,CAA4B,CAA5B,CAAxE,GAAyG,IAA3H;;AAEA,kBAAIC,WAAJ,EAAiB;AACb1K,oBAAI,CAAC2K,IAAL,CAAU;AACNjB,gCAAc,EAAEe,WAAW,CAACf,cADtB;AAENkB,2BAAS,EAAE,QAFL;AAGNzI,sBAAI,EAAEuI,WAAW,GAAGA,WAAW,CAACvI,IAAf,GAAwBsI,WAAW,GAAGA,WAAW,CAACtI,IAAf,GAAsB,SAHpE;AAIN4E,sBAAI,EAAE2D,WAAW,CAAC3D,IAJZ;AAKN8D,mCAAiB,EAAEH,WAAW,CAACG,iBALzB;AAMNC,6BAAW,EAAEJ,WAAW,CAACG,iBANnB;AAONE,2BAAS,EAAEL,WAAW,CAACK,SAPjB;AAQNC,4BAAU,EAAEP,WAAW,CAACO,UARlB;AASNC,6BAAW,EAAER,WAAW,CAACQ,WATnB;AAUNC,oCAAkB,EAAET,WAAW,CAACS,kBAV1B;AAWNC,mCAAiB,EAAEV,WAAW,CAACU,iBAXzB;AAYNpB,+BAAa,EAAEU,WAAW,CAACV,aAZrB;AAaNqB,8BAAY,EAAEV,WAAW,CAACU,YAbpB;AAcNC,4BAAU,EAAEX,WAAW,CAACW,UAdlB;AAeNC,yBAAO,EAAEZ,WAAW,CAACY,OAff;AAgBNC,+BAAa,EAAE,YAAYb,WAAW,CAACa,aAAxB,GAAwC,GAhBjD;AAiBNC,gCAAc,EAAGd,WAAW,CAACe,gBAAZ,GAA+B,uBAA/B,GAAyD,sBAjBpE;AAkBNC,8BAAY,EAAGhB,WAAW,CAACe,gBAAZ,GAA+B,kBAA/B,GAAoD,EAlB7D;AAmBNf,6BAAW,EAAEA;AAnBP,iBAAV;AAqBH,eAtBD,MAsBO;AACH1K,oBAAI,CAAC2K,IAAL,CAAU;AACNjB,gCAAc,EAAEe,WAAW,CAACf,cADtB;AAENkB,2BAAS,EAAE,eAFL;AAGNzI,sBAAI,EAAEsI,WAAW,CAACtI,IAHZ;AAIN4E,sBAAI,EAAE,EAJA;AAKN8D,mCAAiB,EAAE,EALb;AAMNC,6BAAW,EAAE,EANP;AAONC,2BAAS,EAAE,EAPL;AAQNC,4BAAU,EAAEP,WAAW,CAACO,UARlB;AASNC,6BAAW,EAAER,WAAW,CAACQ,WATnB;AAUNC,oCAAkB,EAAET,WAAW,CAACS,kBAV1B;AAWNC,mCAAiB,EAAEV,WAAW,CAACU,iBAXzB;AAYNpB,+BAAa,EAAEU,WAAW,CAACV,aAZrB;AAaNqB,8BAAY,EAAE,EAbR;AAcNC,4BAAU,EAAE,IAdN;AAeNC,yBAAO,EAAE,EAfH;AAgBNC,+BAAa,EAAE,EAhBT;AAiBNC,gCAAc,EAAE,EAjBV;AAkBNE,8BAAY,EAAE,EAlBR;AAmBNhB,6BAAW,EAAE;AAnBP,iBAAV;AAqBH;AACJ,aAhDD;;AAkDA,iBAAK/G,UAAL,CAAgBI,IAAhB,CAAqB/D,IAArB;AACH;;;+BAEI2L,K,EAA2BtB,W,EAA0B;AAAA;;AACtDsB,iBAAK,CAACnB,OAAN,CAAc,UAAAoB,IAAI,EAAI;AAClB,kBAAIC,KAAK,GAAqBD,IAA9B;AACAC,mBAAK,CAACT,YAAN,CAAmBZ,OAAnB,CAA2B,UAACsB,WAAD,EAAcC,KAAd,EAAwB;AAC/C,oBAAIC,GAAG,GAAGF,WAAW,CAACE,GAAZ,GAAkB,OAA5B;;AAEA,uBAAI,CAACpO,WAAL,CAAiBqO,eAAjB,CAAsCD,GAAtC,EAA2C,sCAA3C,EAAmF3B,WAAnF,EAAgGtJ,IAAhG,CAAqG,UAAAZ,MAAM,EAAI;AAC3G,sBAAIA,MAAM,IAAIA,MAAM,CAACkF,MAAP,KAAkB,OAAhC,EAAyC;AACrCyG,+BAAW,CAAC,YAAD,CAAX,GAA4B,SAA5B;AACH,mBAFD,MAEO;AACHA,+BAAW,CAAC,YAAD,CAAX,GAA4B,OAA5B;AACAA,+BAAW,CAAC,aAAD,CAAX,GAA6B,kCAA7B;AACH;AACJ,iBAPD,WAOS,UAAA1K,MAAM,EAAI;AACf0K,6BAAW,CAAC,YAAD,CAAX,GAA4B,OAA5B;AACAA,6BAAW,CAAC,aAAD,CAAX,GAA6B1K,MAAM,CAACR,OAApC;AACH,iBAVD;AAWH,eAdD;AAeH,aAjBD;AAkBH;;;2CAEgB+K,K,EAAO;AAAA;;AACpB,iBAAK/N,WAAL,CAAiBsO,gBAAjB,CAAkCP,KAAK,CAACQ,GAAN,CAAU,UAAA3M,CAAC;AAAA,qBAAIA,CAAC,CAACkK,cAAN;AAAA,aAAX,CAAlC,EACC3I,IADD,CACO,UAAAZ,MAAM;AAAA,qBAAI,OAAI,CAACoK,WAAL,EAAJ;AAAA,aADb,WAEO,UAAAnJ,MAAM;AAAA,qBAAI,OAAI,CAACyD,WAAL,CAAiBuH,wBAAjB,CAA0ChL,MAA1C,EAAkD,eAAlD,CAAJ;AAAA,aAFb;AAGH;;;2CAEgBwK,I,EAAM;AACnB;AACA,iBAAK9N,MAAL,CAAYe,QAAZ,CAAqB,CAAC,aAAD,EAAgB+M,IAAI,CAAClC,cAArB,CAArB,EAA2D;AAAC5K,wBAAU,EAAE,KAAKf;AAAlB,aAA3D;AACH;;;+BAEI6N,I,EAAM;AACP,iBAAK9N,MAAL,CAAYe,QAAZ,CAAqB,CAAC,MAAD,EAAS+M,IAAI,CAAClC,cAAd,CAArB,EAAoD;AAAC5K,wBAAU,EAAE,KAAKf;AAAlB,aAApD;AACH;;;wCAEa4N,K,EAAO;AAAA;;AACjB,gBAAIU,YAAY,GAAGV,KAAK,CAACpM,MAAN,CAAa,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACkL,WAAN;AAAA,aAAd,EAAiCyB,GAAjC,CAAqC,UAAA3M,CAAC;AAAA,qBAAIA,CAAC,CAACkL,WAAN;AAAA,aAAtC,CAAnB;;AAEA,gBAAK2B,YAAY,CAACnH,MAAb,KAAwB,CAA7B,EAAgC;AAC5B,mBAAKrH,UAAL,CAAgByO,kBAAhB,CAAmC,iCAAnC;AACA;AACH;;AAEDD,wBAAY,CAAC7B,OAAb,CAAqB,UAAAE,WAAW,EAAI;AAChC,qBAAI,CAAC7F,WAAL,CAAiB0H,YAAjB,CAA8B7B,WAA9B,EAA2C,KAA3C,EAAkD,OAAI,CAACL,WAAvD;AACH,aAFD;AAGH;;;oCAES;AACN,iBAAKzM,WAAL,CAAiB4O,gBAAjB;AACH;;;;;;;yBA5JQvC,qB,EAAqB,0H,EAAA,+H,EAAA,0H,EAAA,uH,EAAA,+H;AAAA,O;;;cAArBA,qB;AAAqB,qC;AAAA,iB;AAAA,e;AAAA,i9D;AAAA;AAAA;ACblC;;AACI;;AAGF;AAAA,qBAAS,IAAA/F,KAAA,EAAT;AAAgB,aAAhB;;AAEA;;AAMC;AAAA,qBAAY,IAAAC,IAAA,QAAZ;AAAwB,aAAxB;;AAEC;;AAGA;;AAGA;;AAgCA;;AAUF;;AACD;;AAEA;;AACD;;;;AA/DE;;AAAA;;AAIC;;AAAA,gGAA0B,qBAA1B,EAA0B,IAA1B,EAA0B,eAA1B,EAA0B,GAA1B,EAA0B,SAA1B,EAA0B,WAA1B,EAA0B,gBAA1B,EAA0B,aAA1B;;;;;;;;;wEDMU8F,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACTjL,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,kBAAM,EAAE;AAHC,W;AAKuB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEblC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACIG;;AAAqD;AAAA;;AAAA;;AAAA;AAAA;;AACpC;;AACjB;;AACC;AAAA;;AAAA;;AAAA;AAAA;;AAAwE;;AACzE;;AAAiB;AAAA;;AAAA;;AAAA;AAAA;;AAAmC;;;;;;AAJpB;;AAEgB;;AAAA;;;;;;;;AAyB3C;;AACD;AAAA;;AAAA;;AAAA;AAAA;;AAAmC;;AAA8B;;AAAoB;;;;;;AACtF;;AAA+C;;AAC9C;;AAA0B;;;;;;AAqI3B;;;;;;AAMF;;AAEC;;AAID;;;;;;AAHyB;;AAAA;;;;;;AAUzB;;AACC;;AAID;;;;;;AAHE;;AAAA,0FAAc,QAAd,EAAc,2CAAd,EAAc,YAAd,EAAc,IAAd;;;;;;;;;;;;;;AAjLJ;;AACC;;AACC;;AACC;;AAGD;;AAEA;;AACC;;AAAsC;AAAA;;AAAA;;AAAA;AAAA;;AAGtC;;AACD;;AAEA;;AACC;;AAIC;;AAAE;;AAEF;;AAEA;;AACD;;AACD;;AAEA;;AACC;;AACC;;AAAsD;AAAA;;AAAA;;AAAA;AAAA;;AAEtD;;AACD;;AACD;;AAEA;;AACC;;AACC;;AAGD;;AACA;;AACC;;AAED;;AACD;;AAEA;;AACC;;AACC;;AAGD;;AACA;;AACC;;AAID;;AACD;;AAEA;;AACC;;AAAmC;AAAA;;AAAA;;AAAA;AAAA;;AAGnC;;AACD;;AAEA;;AACC;;AACC;;AAID;;AACA;;AACC;;AAGD;;AACD;;AAEA;;AACC;;AACC;;AAED;;AACA;;AACC;;AAED;;AACD;;AAEA;;AACC;;AACC;;AAED;;AACA;;AACC;;AAED;;AACD;;AAEA;;AACC;;AACC;;AAEA;;AACD;;AAED;;AAGA;;AACC;;AACC;;AAGD;;AACA;;AACC;;AAGD;;AACD;;AAEA;;AACC;;AACC;;AAGD;;AACD;;AAEA;;AACC;;AACC;;AAGD;;AACA;;AACC;;AAGD;;AACD;;AAEA;;AACC;;AACC;;AAGD;;AACA;;AACC;;AAGD;;AACD;;AAEA;;AAQA;;AACC;;AAED;;AAEA;;AAOA;;AACC;;AACC;;AAID;;AACA;;AACC;;AAGD;;AACD;;AAEA;;AACC;;AACC;;AAID;;AACA;;AACC;;AAGD;;AACD;;AAGA;;AACC;;AACC;;AAGD;;AACA;;AACC;;AAGD;;AACD;;AAEA;;AACC;;AACC;;AAGD;;AACA;;AACC;;AAGD;;AACD;;AAEA;;AACA;;AAID;;AAEA;;AACD;;;;;;AArPuC;;AAIZ;;AAAA;;AAKc;;AAAA,kGAAyB,gBAAzB,EAAyB,sEAAzB,EAAyB,OAAzB,EAAyB,wBAAzB,EAAyB,cAAzB,EAAyB,KAAzB;;AAQmB;;AAAA,gGAAqB,QAArB,EAAqB,4CAArB;;AAGzB;;AAAA;;AAEzB;;AAAA;;AAQgD;;AAAA,oGAA2B,gBAA3B,EAA2B,sEAA3B;;AAiCpB;;AAAA,+FAAsB,gBAAtB,EAAsB,sEAAtB,EAAsB,OAAtB,EAAsB,oBAAtB,EAAsB,cAAtB,EAAsB,KAAtB;;AA6FnB;;AAAA;;AAOhB;;AAAA;;AAYQ;;AAAA;;;;UD5KAuN,4B;AAeX,8CACU5H,WADV,EAEUjH,WAFV,EAGS2I,YAHT,EAIUlH,EAJV,EAIyB;AAAA;;AAHf,eAAAwF,WAAA,GAAAA,WAAA;AACA,eAAAjH,WAAA,GAAAA,WAAA;AACD,eAAA2I,YAAA,GAAAA,YAAA;AACC,eAAAlH,EAAA,GAAAA,EAAA;AAhBH,eAAAqN,WAAA,GAAc,KAAd;AACA,eAAAC,uBAAA,GAA0B,KAA1B;AACA,eAAAC,mBAAA,GAAsB,KAAtB;AAEA,eAAAC,aAAA,GAAgB,mEAAhB;AACA,eAAAC,iBAAA,GAAoB,wEAAkBvN,MAAlB,CAAyB,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACC,GAAF,GAAQ,CAAZ;AAAA,WAA1B,CAApB;AAEA,eAAAsN,aAAA,GAAgB,IAAhB;AACA,eAAAC,QAAA,GAAqB,+DAASC,WAA9B;AACA,eAAAC,WAAA,GAA4B,mEAAaC,OAAzC;AASL;;;;qCAES;AACL,iBAAK/M,IAAL,GAAY,KAAKxC,WAAL,CAAiBwP,OAAjB,EAAZ;AACA,gBAAIC,yBAAyB,GAAG,IAAI,+EAAJ,EAAhC;AACA,iBAAKC,mBAAL,CAAyBD,yBAAzB;AACA,iBAAKL,QAAL,GAAgB,+DAASC,WAAzB;AACL;;;wCAEa,CACb;;;mCAEQ;AACP,iBAAKrP,WAAL,CAAiBe,UAAjB;AACD;;;qCAEU;AAAA;;AACT,gBAAI,KAAK4H,YAAL,CAAkBW,WAAlB,CAA8B5F,KAAlC,EAAyC;AACvC,mBAAKoL,WAAL,GAAmB,IAAnB;AACA,mBAAK7H,WAAL,CAAiB0I,mBAAjB,CAAqC,KAAKR,aAA1C,EAAyD,KAAKG,WAA9D,EAA2E,KAAKF,QAAhF,EACI,KAAKzG,YAAL,CAAkBW,WAAlB,CAA8B1F,KADlC,EACyCT,IADzC,CAC8C,UAAAZ,MAAM,EAAI;AACpD,uBAAI,CAACuM,WAAL,GAAmB,KAAnB;;AACA,uBAAI,CAAC7H,WAAL,CAAiB2I,oBAAjB,CAAsC,sBAAtC;AACH,eAJD,WAIS,UAAApM,MAAM,EAAI;AACf,uBAAI,CAACsL,WAAL,GAAmB,KAAnB;;AACA,uBAAI,CAAC7H,WAAL,CAAiBZ,aAAjB,CAA+B7C,MAA/B;AACH,eAPD;AAQD,aAVD,MAUO;AACL,mBAAKmF,YAAL,CAAkBkH,UAAlB;AACD;AACF;;;mDAEwB;AAAA;;AACvB,gBAAI,KAAKlH,YAAL,CAAkBW,WAAlB,CAA8B5F,KAAlC,EAAyC;AACvC,mBAAKoL,WAAL,GAAmB,IAAnB;AACA,mBAAK7H,WAAL,CAAiB6I,sBAAjB,CAAwC,KAAKX,aAA7C,EAA4D,KAAKG,WAAjE,EAA8E,KAAKF,QAAnF,EACI,KAAKzG,YAAL,CAAkBW,WAAlB,CAA8B1F,KADlC,EACyCT,IADzC,CAC8C,UAAAZ,MAAM,EAAI;AACpD,uBAAI,CAACuM,WAAL,GAAmB,KAAnB;;AACA,uBAAI,CAAC7H,WAAL,CAAiB2I,oBAAjB,CAAsC,sBAAtC;AACH,eAJD,WAIS,UAAApM,MAAM,EAAI;AACf,uBAAI,CAACsL,WAAL,GAAmB,KAAnB,CADe,CAEf;AACH,eAPD;AAQD,aAVD,MAUO;AACL,mBAAKnG,YAAL,CAAkBkH,UAAlB;AACD;AACF;;;kDAEuB;AAAA;;AACtB,iBAAKd,uBAAL,GAA+B,IAA/B;AAEA,iBAAK/O,WAAL,CAAiBkD,sBAAjB,GAA0CC,IAA1C,CAA+C,UAAAZ,MAAM,EAAI;AACvD,qBAAI,CAACoG,YAAL,CAAkBW,WAAlB,CAA8BjG,QAA9B,CAAuCM,aAAvC,CAAqDL,QAArD,CAA8Df,MAA9D;;AACA,qBAAI,CAACwM,uBAAL,GAA+B,KAA/B;AACD,aAHD,WAGS,UAAAvL,MAAM,EAAI;AACjB,qBAAI,CAACyD,WAAL,CAAiByH,kBAAjB,CAAoClL,MAApC;;AACA,qBAAI,CAACuL,uBAAL,GAA+B,KAA/B;AACD,aAND;AAOD;;;8CAEmB;AAAA;;AAClB,iBAAKC,mBAAL,GAA2B,IAA3B;AAEA,iBAAKhP,WAAL,CAAiB+P,YAAjB,GAAgC5M,IAAhC,CAAqC,UAAAZ,MAAM,EAAI;AAC7C,qBAAI,CAACoG,YAAL,CAAkBW,WAAlB,CAA8BjG,QAA9B,CAAuC+I,SAAvC,CAAiD9I,QAAjD,CAA0Df,MAAM,CAAC6J,SAAjE;;AACA,qBAAI,CAACzD,YAAL,CAAkBW,WAAlB,CAA8BjG,QAA9B,CAAuC8I,aAAvC,CAAqD7I,QAArD,CAA8Df,MAAM,CAAC4J,aAArE;;AACA,qBAAI,CAAC6C,mBAAL,GAA2B,KAA3B;AACD,aAJD,WAIS,UAAAxL,MAAM,EAAI;AACjB,qBAAI,CAACyD,WAAL,CAAiByH,kBAAjB,CAAoClL,MAApC;;AACA,qBAAI,CAACwL,mBAAL,GAA2B,KAA3B;AACD,aAPD;AAQD;;;8CAE0BnC,W,EAAwC;AACjE,gBAAMmD,eAAe,GAAG,KAAKvO,EAAL,CAAQ6C,KAAR,CAAc;AACpC,sBAAQ,CAACuI,WAAW,CAACtI,IAAb,EAAmB,CACzB,0DAAWC,QADc,EAEzB,0DAAWC,SAAX,CAAqB,CAArB,CAFyB,EAGzB,0DAAWC,SAAX,CAAqB,EAArB,CAHyB,CAAnB,CAD4B;AAMpC,+BAAiB,CAACmI,WAAW,CAAClJ,aAAb,EAA4B,CAC3C,0DAAWa,QADgC,CAA5B;AANmB,aAAd,CAAxB;AAYA,iBAAKmE,YAAL,CAAkBsH,UAAlB,CAA6BpD,WAA7B,EAA0CmD,eAA1C,EAA2D,IAAI,+EAAJ,EAA3D;AACA,iBAAKrH,YAAL,CAAkBuH,sBAAlB;AACA,iBAAKvH,YAAL,CAAkBwH,SAAlB,CAA4BH,eAA5B;AACD;;;;;;;yBA9GUnB,4B,EAA4B,0H,EAAA,+H,EAAA,yI,EAAA,2H;AAAA,O;;;cAA5BA,4B;AAA4B,wD;AAAA,oFAF5B,CAAC,wEAAD,CAE4B,E;AAFd,gB;AAAA,e;AAAA,q8K;AAAA;AAAA;ACZ3B;;AACC;;AACC;AAAA,qBAAS,IAAAxK,MAAA,EAAT;AAAiB,aAAjB;;AACA;;AAQA;;AAsPD;;AAEA;;AAED;;;;AApQyE;;AAAA,8FAAwB,SAAxB,EAAwB,IAAxB;;AAUjE;;AAAA;;;;;;;;;wEDGKwK,4B,EAA4B;gBALxC,uDAKwC;iBAL9B;AACTzN,oBAAQ,EAAE,iCADD;AAETC,uBAAW,EAAE,uCAFJ;AAGTyG,qBAAS,EAAE,CAAC,wEAAD;AAHF,W;AAK8B,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEdzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACWY;;AAA4B;AAAA;;AAAA;;AAAA;AAAA;;AAAiB;;AAC7C;;AAAiB;AAAA;;AAAA;;AAAA;AAAA;;AAAkB;;;;;;;;AAyBvB;;AACA;;AAAE;;AAA6B;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAA8B;;AAA4B;;AAAI;;AAC3H;;;;;;AAD2F;;AAAA;;;;;;AAJ/F;;AACI;;AAEI;;AAGhB;;AACQ;;;;;;AAJc;;AAAA;;;;;;AAtBtB;;AACI;;AACQ;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AAEJ;;AACX;;AAEW;;AAEA;;AACX;;AAEW;;AAEA;;AAQJ;;AACJ;;;;;;AA5BwC;;AAmBvB;;AAAA;;;;UDpBZsI,wB;AAYT,0CACYpQ,WADZ,EAEYiH,WAFZ,EAGW0B,YAHX,EAIYlH,EAJZ,EAKYvB,MALZ,EAMYC,KANZ,EAMmC;AAAA;;AALvB,eAAAH,WAAA,GAAAA,WAAA;AACA,eAAAiH,WAAA,GAAAA,WAAA;AACD,eAAA0B,YAAA,GAAAA,YAAA;AACC,eAAAlH,EAAA,GAAAA,EAAA;AACA,eAAAvB,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACX;;;;qCAEU;AAAA;;AACP,gBAAI;AACA,mBAAKC,aAAL,GAAqB,2DACjB,KAAKD,KAAL,CAAWiC,IADM,EAEjB,KAAKjC,KAAL,CAAWI,MAFM,EAGjB,KAAKP,WAAL,CAAiBsC,yBAAjB,EAHiB,EAInBhC,SAJmB,CAIT,UAAAiC,MAAM,EAAI;AAClB,oBAAIH,IAAI,GAAGG,MAAM,CAAC,CAAD,CAAjB;AACA,oBAAIhC,MAAM,GAAGgC,MAAM,CAAC,CAAD,CAAnB;AACA,uBAAI,CAACmK,YAAL,GAAoBnK,MAAM,CAAC,CAAD,CAA1B;;AAEA,oBAAI,CAAC,OAAI,CAACmK,YAAV,EAAwB;AACpB;AACH;;AAED,uBAAI,CAACZ,cAAL,GAAsB,CAACvL,MAAM,CAAC,gBAAD,CAA7B;;AAEA,uBAAI,CAAC0G,WAAL,CAAiByF,YAAjB,GAAgCvJ,IAAhC,CAAqC,UAAAuJ,YAAY,EAAI;AACjD,sBAAIG,WAAW,GAAG,OAAI,CAACH,YAAL,CAAkB9J,IAAlB,CAAuB,UAAAhB,CAAC;AAAA,2BAAIA,CAAC,CAACkK,cAAF,KAAqB,OAAI,CAACA,cAA9B;AAAA,mBAAxB,CAAlB;;AAEA,sBAAMkE,eAAe,GAAG,OAAI,CAACvO,EAAL,CAAQ6C,KAAR,CAAc,EAAd,CAAxB;;AACA,yBAAI,CAACqE,YAAL,CAAkBsH,UAAlB,CAA6BpD,WAA7B,EAA0CmD,eAA1C,EAA2D,IAAI,sEAAJ,EAA3D;;AACAA,iCAAe,CAAC3M,QAAhB,CAAyBkB,IAAzB,CAA8BiF,OAA9B;AACAwG,iCAAe,CAAC3M,QAAhB,CAAyB8I,aAAzB,CAAuC3C,OAAvC;;AACA,yBAAI,CAACb,YAAL,CAAkBuH,sBAAlB;;AACA,yBAAI,CAACvH,YAAL,CAAkBwH,SAAlB,CAA4BH,eAA5B;AACH,iBATD;AAUH,eAzBoB,CAArB;AA0BH,aA3BD,CA2BE,OAAOnN,CAAP,EAAU;AACR,mBAAKoE,WAAL,CAAiBuH,wBAAjB,CAA0C3L,CAA1C,EAA6C,mBAA7C;AACH;AAEJ;;;wCAEa;AACV,gBAAI,KAAKzC,aAAT,EAAwB;AAAE,mBAAKA,aAAL,CAAmBU,WAAnB;AAAmC;AAChE;;;kCAEO;AACJ,iBAAKd,WAAL,CAAiBe,UAAjB;AACH;;;iCAEM;AAAA;;AACH,gBAAIoE,IAAI,GAAG,KAAKwD,YAAL,CAAkBW,WAA7B;AACA,gBAAIuD,WAAW,GAAG1H,IAAI,CAACvB,KAAvB;AACAiJ,uBAAW,CAACtI,IAAZ,GAAmBY,IAAI,CAAC9B,QAAL,CAAckB,IAAd,CAAmBX,KAAtC;AACAiJ,uBAAW,CAACV,aAAZ,GAA4BhH,IAAI,CAAC9B,QAAL,CAAc8I,aAAd,CAA4BvI,KAAxD;AACA,iBAAK5D,WAAL,CAAiBqQ,eAAjB,CAAiC,KAAK1H,YAAL,CAAkBW,WAAlB,CAA8B1F,KAA/D,EAAsET,IAAtE,CAA2E,UAAAZ,MAAM,EAAI;AACjF,qBAAI,CAAC0E,WAAL,CAAiB2I,oBAAjB,CAAsC,4CAAtC;;AACA,qBAAI,CAAC5P,WAAL,CAAiB4O,gBAAjB;AACH,aAHD;AAIH;;;yCAEc;AAAA;;AACX,gBAAI,KAAKzB,SAAT,EAAoB;AAChB,kBAAIhI,IAAI,GAAG,KAAKwD,YAAL,CAAkBW,WAA7B;AACA,kBAAIgH,kBAAkB,GAAGnL,IAAI,CAAC9B,QAAL,CAAcgK,WAAvC;AACA,kBAAIA,WAAW,GAAciD,kBAAkB,CAAC1M,KAAhD;;AAEA,kBAAIyJ,WAAW,CAACkD,SAAZ,CAAsB,UAAA3O,CAAC;AAAA,uBAAIA,CAAC,KAAK,OAAI,CAACuL,SAAf;AAAA,eAAvB,IAAmD,CAAvD,EAA0D;AACtDE,2BAAW,CAACN,IAAZ,CAAiB,KAAKI,SAAtB;AACAmD,kCAAkB,CAAChN,QAAnB,CAA4B+J,WAA5B;AACH;AACJ;AAEJ;;;;;;;yBAtFQ+C,wB,EAAwB,+H,EAAA,0H,EAAA,yI,EAAA,2H,EAAA,uH,EAAA,+H;AAAA,O;;;cAAxBA,wB;AAAwB,sC;AAAA;AAAA;AAAA,S;AAAA,oFAFtB,CAAC,wEAAD,CAEsB,E;AAFR,gB;AAAA,e;AAAA,ymC;AAAA;AAAA;ACZ7B;;AAEA;;AACI;;AAKI;AAAA,qBAAS,IAAA9J,KAAA,EAAT;AAAgB,aAAhB;;AAEA;;AAKA;;AA8BJ;;AACJ;;;;AAxCQ;;AAAA,sFAAgB,iBAAhB,EAAgB,IAAhB;;AASM;;AAAA;;;;;;;;;wEDDD8J,wB,EAAwB;gBALpC,uDAKoC;iBAL1B;AACPhP,oBAAQ,EAAE,eADH;AAEPC,uBAAW,EAAE,mCAFN;AAGPyG,qBAAS,EAAE,CAAC,wEAAD;AAHJ,W;AAK0B,U;;;;;;;;;;;;;;;;kBAChC;;;;;;;;;;;;;;;;;;;;AEfL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACYI;;AAA4B;AAAA;;AAAA;;AAAA;AAAA;;AAC8B;;AAC1D;;AAAiB;AAAA;;AAAA;;AAAA;AAAA;;AAAkD;;;;;;AADlE,0HAAwC,MAAxC,EAAwC,aAAxC;;AAC8C;;AAAA;;;;;;AAwDhD;;AAEC;;AACC;;AACC;;;;AAGD;;AACD;;AACD;;;;;;AARC;;AAGiB;;AAAA;;AAAgJ;;;;;;AAPnK;;AAGC;;AAUD;;;;;;AAZoB,6FAAyB,SAAzB,EAAyB,IAAzB;;AAEK;;AAAA;;;;;;;;AAevB;;AAA4B;AAAA;;AAAA;;AAAA;AAAA;;AACwB;;AACpD;;AAAiB;AAAA;;AAAA;;AAAA;AAAA;;AAAkD;;;;;;AADlE,sHAAkC,MAAlC,EAAkC,cAAlC;;AAC8C;;AAAA;;;;;;;;;;;;;;AALjD;;AAEC;;AAMA;;AACC;;AACC;;AACC;;AAAe;AAAA;;AAAA;;AAAA;AAAA;;AAEf;;AACD;;AACD;;AACD;;AACD;;;;;;AAjBuH,6FAAyB,SAAzB,EAAyB,IAAzB;;AAWpG;;AAAA,iGAAwB,gBAAxB,EAAwB,qEAAxB,EAAwB,YAAxB,EAAwB,IAAxB;;;;;;AAQnB;;AAGC;;AAAG;;AAAqE;;AACxE;;AAAyF;;AAA4B;;AAAY;;AAClI;;;;;;AALwH,6FAAyB,SAAzB,EAAyB,IAAzB;;AAI5F;;AAAA;;;;;;AAtG7B;;AACC;;AAEA;;AAKC;;AAMA;;AACC;;AAEC;;AACC;;AAGD;;AAEA;;AACC;;AACC;;AAGD;;AACA;;AACC;;AAGD;;AACD;;AAEA;;AACC;;AACC;;AAGD;;AACA;;AACC;;AAGD;;AACD;;AAEA;;AACC;;AAED;;AAEA;;AACC;;AAGD;;AAED;;AACD;;AACD;;AAEA;;AAeA;;AAmBA;;AAOD;;;;;;AAxGkB;;AAAA;;AAIhB;;AAAA,gGAAqB,kBAArB,EAAqB,IAArB,EAAqB,SAArB,EAAqB,IAArB;;AASqB;;AAAA;;AAKjB;;AAAA;;AAOC;;AAAA;;AAKA;;AAAA;;AAQA;;AAAA;;AAKA;;AAAA;;AAY+D;;AAAA;;AAQnD;;AAAA;;AAeA;;AAAA;;AAmBA;;AAAA;;;;AD5FpB,UAAM0I,MAAM,GAAG,mCAAf;;UAOaC,kB;AAyDX,oCACUzQ,WADV,EAEUG,KAFV,EAGUsB,EAHV,EAGyB;AAAA;;AAFf,eAAAzB,WAAA,GAAAA,WAAA;AACA,eAAAG,KAAA,GAAAA,KAAA;AACA,eAAAsB,EAAA,GAAAA,EAAA;AAjDV,eAAAiP,eAAA,GAAkB,qEAAlB;AACA,eAAAC,mBAAA,GAAsB,yEAAtB;AACA,eAAAC,iBAAA,GAAoB,uEAApB;AACA,eAAAC,mBAAA,GAAsB,yEAAtB;AAEA,eAAAnP,iBAAA,GAAoB,yEAAmBC,MAAnB,CAA0B,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACC,GAAF,GAAQ,CAAZ;AAAA,WAA3B,CAApB;AAEA,eAAAC,aAAA,GAAgB,KAAhB;AACA,eAAAgP,MAAA,GAAS,KAAT;AACA,eAAA9O,UAAA,GAAa,KAAb;AACA,eAAAC,aAAA,GAAgB,KAAhB;AAEA,eAAAuH,OAAA,GAAU,KAAV;AAMA,eAAAuH,KAAA,GAAQ,IAAR;AAEA,eAAA7O,UAAA,GAAa;AACX,oBAAQ,EADG;AAEX,2BAAe;AAFJ,WAAb;AAKA,eAAAC,kBAAA,GAAqB;AACnB,oBAAQ;AACN,0BAAY,mBADN;AAEN,2BAAa,0CAFP;AAGN,2BAAa,8CAHP;AAIN,kCAAoB;AAJd,aADW;AAOnB,2BAAe;AACb,0BAAY;AADC;AAPI,WAArB;AAYA,eAAA6O,cAAA,GAAiB,CACf;AAACzM,gBAAI,EAAE,QAAP;AAAiB0M,gBAAI,EAAE,eAAvB;AAAwCjQ,gBAAI,EAAE,0BAA9C;AAA0E4D,uBAAW,EAAE;AAAvF,WADe,EAEf;AAACL,gBAAI,EAAE,SAAP;AAAkB0M,gBAAI,EAAE,eAAxB;AAAyCjQ,gBAAI,EAAE,iCAA/C;AAAkF4D,uBAAW,EAAE;AAA/F,WAFe,EAGf;AAACL,gBAAI,EAAE,SAAP;AAAkB0M,gBAAI,EAAE,eAAxB;AAAyCjQ,gBAAI,EAAE,0DAA/C;AAA2G4D,uBAAW,EAAE;AAAxH,WAHe,EAIf;AAACL,gBAAI,EAAE,mBAAP;AAA4B0M,gBAAI,EAAE,cAAlC;AAAkDjQ,gBAAI,EAAE,6CAAxD;AAAuG4D,uBAAW,EAAE;AAApH,WAJe,CAAjB;AAOQ,eAAA6H,WAAA,GAAc,IAAI,6DAAJ,EAAd;AAOP;;;;qCAEU;AAAA;;AAET,gBAAI;AACF,mBAAKrM,aAAL,GAAqB,2DACnB,KAAKD,KAAL,CAAWiC,IADQ,EAEnB,KAAKjC,KAAL,CAAWI,MAFQ,EAGnBD,SAHmB,CAGT,UAAAiC,MAAM,EAAI;AACpB,oBAAIH,IAAI,GAAGG,MAAM,CAAC,CAAD,CAAjB;AACA,oBAAIhC,MAAM,GAAGgC,MAAM,CAAC,CAAD,CAAnB;AAEA,uBAAI,CAACE,MAAL,GAAcL,IAAI,CAAC,QAAD,CAAlB;AACA,uBAAI,CAACM,SAAL,GAAiBN,IAAI,CAAC,WAAD,CAArB;;AAEA,oBAAI,OAAI,CAACK,MAAL,KAAgB,KAApB,EAA2B;AACzB,yBAAI,CAACyO,KAAL,GAAa,IAAI,gEAAJ,EAAb;;AACA,yBAAI,CAACvO,SAAL;;AACA,yBAAI,CAACoO,KAAL,GAAa,IAAb;AACA,yBAAI,CAACvH,OAAL,GAAe,KAAf;AACD,iBALD,MAKO,IAAI,OAAI,CAAC/G,MAAL,KAAgB,MAApB,EAA4B;AACjC,sBAAIZ,GAAG,GAAG,CAAEtB,MAAM,CAAC,UAAD,CAAlB;AACA,yBAAI,CAACwQ,KAAL,GAAa,KAAb;;AACA,yBAAI,CAAC/Q,WAAL,CAAiBmR,QAAjB,CAA0BtP,GAA1B,EAA+B,OAAI,CAAC4K,WAApC,EAAiDtJ,IAAjD,CAAsD,UAAA+N,KAAK,EAAI;AAC7D,2BAAI,CAACA,KAAL,GAAaA,KAAb;AACA,2BAAI,CAACE,QAAL,GAAgB,gBAAgBF,KAAK,CAACG,QAAtB,GAAiC,KAAjC,GAAyCb,MAAM,CAACU,KAAK,CAACI,UAAP,CAAN,CAAyBC,QAAzB,EAAzD;;AACA,2BAAI,CAAC5O,SAAL;;AAEA,wBAAI,OAAI,CAAC3C,WAAL,CAAiBwR,OAAjB,GAA2BC,OAA/B,EAAwC;AACtC,6BAAI,CAACjI,OAAL,GAAe,KAAf;AACD,qBAFD,MAEO;AACL,6BAAI,CAACA,OAAL,GAAe,IAAf;AACD;AACF,mBAVD;AAWD;AACF,eA9BoB,CAArB;AA+BD,aAhCD,CAgCE,OAAO3G,CAAP,EAAU;AACV,mBAAKC,YAAL,CAAkBC,eAAlB,CAAkCF,CAAC,CAACG,OAApC;AACD;AACF;;;wCAEa;AACZ,gBAAI,KAAK5C,aAAT,EAAwB;AAAE,mBAAKA,aAAL,CAAmBU,WAAnB;AAAmC;;AAC7D,gBAAI,KAAKmC,yBAAT,EAAoC;AAAE,mBAAKA,yBAAL,CAA+BnC,WAA/B;AAA+C;;AACrF,iBAAK2L,WAAL,CAAiBpI,MAAjB;AACD;;;iCAEM;AAAA;;AACL,iBAAKvB,YAAL,CAAkBmB,KAAlB;AACA,iBAAK6M,MAAL,GAAc,IAAd;AACA5M,kBAAM,CAACC,MAAP,CAAc,KAAK+M,KAAnB,EAA0B,KAAK9N,QAAL,CAAcQ,KAAxC;AACA,iBAAK5D,WAAL,CAAiB0R,SAAjB,CAA2B,KAAKR,KAAhC,EACG/N,IADH,CACQ,YAAM;AACV,qBAAI,CAAC2N,MAAL,GAAc,KAAd;;AACA,qBAAI,CAAChO,YAAL,CAAkBoH,iBAAlB,CAAoC,6BAApC;;AACA,qBAAI,CAAC7F,MAAL;AACD,aALH,WAKW,UAAAb,MAAM,EAAI;AACjB,qBAAI,CAACV,YAAL,CAAkBW,UAAlB,CAA6BD,MAA7B;;AACA,qBAAI,CAACsN,MAAL,GAAc,KAAd;AACD,aARH;AASD;;;wCAEa;AAAA;;AACZ,iBAAKhO,YAAL,CAAkBmB,KAAlB;AACA,iBAAK6M,MAAL,GAAc,IAAd;AACA,iBAAK9Q,WAAL,CAAiB2R,eAAjB,CAAiC,KAAKT,KAAL,CAAWrP,GAA5C,EAAiD,KAAK+P,UAAtD,EACGzO,IADH,CACQ,YAAM;AACV,qBAAI,CAAC2N,MAAL,GAAc,KAAd;;AACA,qBAAI,CAAChO,YAAL,CAAkBoH,iBAAlB,CAAoC,mCAApC;;AACA,qBAAI,CAAC7F,MAAL;AACD,aALH,WAKW,UAAAb,MAAM,EAAI;AACjB,qBAAI,CAACV,YAAL,CAAkBW,UAAlB,CAA6BD,MAA7B;;AACA,qBAAI,CAACsN,MAAL,GAAc,KAAd;AACD,aARH;AASD;;;mCAEQ;AACP,iBAAK9Q,WAAL,CAAiBe,UAAjB;AACD;;;sCAEQ;AAAA;;AACP,iBAAKqC,QAAL,GAAgB,KAAK3B,EAAL,CAAQ6C,KAAR,CAAc;AAC5B,qBAAO,CAAC;AAACV,qBAAK,EAAE,KAAKsN,KAAL,CAAWrP,GAAnB;AAAwBgQ,wBAAQ,EAAE,KAAKrI;AAAvC,eAAD,EAAkD,EAAlD,CADqB;AAE5B,sBAAQ,CAAC;AAAC5F,qBAAK,EAAE,KAAKsN,KAAL,CAAW3M,IAAnB;AAAyBsN,wBAAQ,EAAE,KAAKrI;AAAxC,eAAD,EAAmD,CACzD,0DAAWhF,QAD8C,EAEzD,0DAAWC,SAAX,CAAqB,CAArB,CAFyD,EAGzD,0DAAWC,SAAX,CAAqB,EAArB,CAHyD,CAAnD,CAFoB;AAQ5B,6BAAe,CAAC;AAACd,qBAAK,EAAE,KAAKsN,KAAL,CAAWtM,WAAnB;AAAgCiN,wBAAQ,EAAE,KAAKrI;AAA/C,eAAD,EAA0D,CACvE,0DAAWhF,QAD4D,CAA1D,CARa;AAW5B,sBAAQ,CAAC;AAACZ,qBAAK,EAAE,KAAKsN,KAAL,CAAWY,IAAnB;AAAyBD,wBAAQ,EAAE,KAAKrI;AAAxC,eAAD,EAAmD,EAAnD,CAXoB;AAY5B,0BAAY,CAAC;AAAC5F,qBAAK,EAAE,KAAKsN,KAAL,CAAWa,QAAnB;AAA6BF,wBAAQ,EAAE,KAAKrI;AAA5C,eAAD,EAAuD,EAAvD,CAZgB;AAa5B,0BAAY,CAAC;AAAC5F,qBAAK,EAAE,KAAKsN,KAAL,CAAWc,QAAnB;AAA6BH,wBAAQ,EAAE,KAAKrI;AAA5C,eAAD,EAAuD,EAAvD,CAbgB;AAc5B,2BAAa,CAAC;AAAC5F,qBAAK,EAAE,KAAKsN,KAAL,CAAWe,SAAnB;AAA8BJ,wBAAQ,EAAE,KAAKrI;AAA7C,eAAD,EAAwD,EAAxD,CAde;AAe5B,4BAAc,CAAC;AAAC5F,qBAAK,EAAE,KAAKsN,KAAL,CAAWI,UAAnB;AAA+BO,wBAAQ,EAAE;AAAzC,eAAD,EAAiD,EAAjD,CAfc;AAgB5B,0BAAY,CAAC;AAACjO,qBAAK,EAAE,KAAKsN,KAAL,CAAWG,QAAnB;AAA6BQ,wBAAQ,EAAE;AAAvC,eAAD,EAA+C,EAA/C,CAhBgB;AAiB5B,6BAAe,CAAC;AAACjO,qBAAK,EAAE,KAAKsN,KAAL,CAAWgB,WAAnB;AAAgCL,wBAAQ,EAAE;AAA1C,eAAD,EAAmD,EAAnD,CAjBa;AAkB5B,4BAAc,CAAC;AAACjO,qBAAK,EAAE,KAAKsN,KAAL,CAAWiB,UAAnB;AAA+BN,wBAAQ,EAAE;AAAzC,eAAD,EAAkD,EAAlD,CAlBc;AAmB5B,oCAAsB,KAAKpQ,EAAL,CAAQ2Q,KAAR,CAAc,KAAKlB,KAAL,CAAWmB,kBAAX,CAA8B9D,GAA9B,CAAkC,UAAA3M,CAAC,EAAI;AACzE,uBAAO,OAAI,CAACH,EAAL,CAAQ6C,KAAR,CAAc;AACnB,6BAAW;AAACV,yBAAK,EAAEhC,CAAC,CAAC0Q,OAAV;AAAmBT,4BAAQ,EAAE,OAAI,CAACrI;AAAlC,mBADQ;AAEnB,8BAAY,CAAC;AAAC5F,yBAAK,EAAEhC,CAAC,CAACyP,QAAV;AAAoBQ,4BAAQ,EAAE;AAA9B,mBAAD,EAAsC,EAAtC,CAFO;AAGnB,gCAAc;AAACjO,yBAAK,EAAEhC,CAAC,CAAC0P,UAAV;AAAsBO,4BAAQ,EAAE;AAAhC;AAHK,iBAAd,CAAP;AAKD,eANmC,CAAd;AAnBM,aAAd,CAAhB;;AA4BA,gBAAI,KAAK5O,yBAAT,EAAoC;AAAE,mBAAKA,yBAAL,CAA+BnC,WAA/B;AAA+C;;AACrF,iBAAKmC,yBAAL,GAAiC,KAAKG,QAAL,CAAc2B,YAAd,CAA2BzE,SAA3B,CAAqC;AAAA,qBAAM,OAAI,CAAC0D,cAAL,EAAN;AAAA,aAArC,CAAjC;AACA,iBAAKA,cAAL,GA/BO,CA+BgB;;AAEvB,iBAAKhC,UAAL,GAAkB,KAAlB;AACD;;;2CAEgB;AACf,gBAAI,CAAC,KAAKoB,QAAV,EAAoB;AAAE;AAAS;;AAC/B,gBAAM+B,IAAI,GAAG,KAAK/B,QAAlB;AAEA,iBAAKpB,UAAL,GAAkB,IAAlB;;AAEA,8CAAoBkC,MAAM,CAACkB,IAAP,CAAY,KAAKlD,UAAjB,CAApB,qCAAkD;AAA7C,kBAAMmD,KAAK,qBAAX;AACH;AACA,mBAAKnD,UAAL,CAAgBmD,KAAhB,IAAyB,EAAzB;AACA,kBAAML,OAAO,GAAGG,IAAI,CAACG,GAAL,CAASD,KAAT,CAAhB;;AAEA,kBAAIL,OAAO,KAAKA,OAAO,CAACO,KAAR,IAAiB,KAAKtD,aAA3B,CAAP,IAAoD,CAAC+C,OAAO,CAACtB,KAAjE,EAAwE;AACtE,oBAAM8B,QAAQ,GAAG,KAAKrD,kBAAL,CAAwBkD,KAAxB,CAAjB;;AACA,kDAAkBnB,MAAM,CAACkB,IAAP,CAAYJ,OAAO,CAACS,MAApB,CAAlB,qCAA+C;AAA1C,sBAAM5D,GAAG,qBAAT;AACH,uBAAKK,UAAL,CAAgBmD,KAAhB,KAA0BG,QAAQ,CAAC3D,GAAD,CAAR,GAAgB,GAA1C;AACD;AACF;AACF;AACF;;;;;;;yBApMU4O,kB,EAAkB,+H,EAAA,+H,EAAA,2H;AAAA,O;;;cAAlBA,kB;AAAkB,wC;AAAA;AAAA;;;;;;;;;;;;;;;AChB/B;;AACC;;AAEA;;AA0GD;;;;AA1GW;;AAAA;;;;;;;;;;wEDaEA,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AAETrP,oBAAQ,EAAE,iBAFD;AAGTC,uBAAW,EAAE;AAHJ,W;AAKoB,U;;;;;;;;;;kBAC5B,uD;mBAAU,c,EAAgB;AAAE,wBAAQ;AAAV,a;;;;;;;;;;;;;;;;;;;;AEjB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACkBK;;;;;;AAA4B;;;;;;;;AAI5B;;AAAiB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;;;;;;;;;AAIzC;;;;AAA2B;;;;UDbnBkR,mB;AAoBT,qCACYvS,WADZ,EAEYE,MAFZ,EAGYC,KAHZ,EAGmC;AAAA;;AAFvB,eAAAH,WAAA,GAAAA,WAAA;AACA,eAAAE,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AAnBZ,eAAAyF,OAAA,GAAU,CACN;AAAErB,gBAAI,EAAE,MAAR;AAAgBsB,iBAAK,EAAE,MAAvB;AAA+BC,kBAAM,EAAE;AAAvC,WADM,EAEN;AAAEvB,gBAAI,EAAE,aAAR;AAAuBsB,iBAAK,EAAE,aAA9B;AAA6CC,kBAAM,EAAE;AAArD,WAFM,EAGN;AAAEvB,gBAAI,EAAE,MAAR;AAAgBsB,iBAAK,EAAE,MAAvB;AAA+BC,kBAAM,EAAE,MAAvC;AAA+C,oBAAM;AAArD,WAHM,EAIN;AAAEvB,gBAAI,EAAE,UAAR;AAAoBsB,iBAAK,EAAE,UAA3B;AAAuCC,kBAAM,EAAE,MAA/C;AAAuD,oBAAM;AAA7D,WAJM,EAKN;AAAEvB,gBAAI,EAAE,UAAR;AAAoBsB,iBAAK,EAAE,UAA3B;AAAuCC,kBAAM,EAAE,MAA/C;AAAuD,oBAAM;AAA7D,WALM,EAMN;AAAEvB,gBAAI,EAAE,aAAR;AAAuBsB,iBAAK,EAAE,QAA9B;AAAwCC,kBAAM,EAAE,MAAhD;AAAwD,oBAAM;AAA9D,WANM,EAON;AAAEvB,gBAAI,EAAE,YAAR;AAAsBsB,iBAAK,EAAE,cAA7B;AAA6CC,kBAAM,EAAE;AAArD,WAPM,EAQN;AAAEvB,gBAAI,EAAE,YAAR;AAAsBsB,iBAAK,EAAE,eAA7B;AAA8CC,kBAAM,EAAE;AAAtD,WARM,CAAV;AAWQ,eAAAC,UAAA,GAAa,IAAI,oDAAJ,CAAgC,IAAhC,CAAb;AACR,eAAAC,SAAA,GAAoC,KAAKD,UAAL,CAAgBE,YAAhB,EAApC;AAEQ,eAAAwG,WAAA,GAAc,IAAI,6DAAJ,EAAd;AAMP;;;;qCAEU;AAAA;;AACP,iBAAKzM,WAAL,CAAiBwS,SAAjB,CAA2B,KAAK/F,WAAhC,EAA6CtJ,IAA7C,CAAkD,UAAAsP,CAAC,EAAI;AACnD,kBAAMC,MAAM,GAAGD,CAAC,CAAClE,GAAF,CAAO,UAAA2C,KAAK,EAAI;AAC3B,uBAAO;AACHrP,qBAAG,EAAEqP,KAAK,CAACrP,GADR;AAEH0C,sBAAI,EAAE2M,KAAK,CAAC3M,IAFT;AAGHK,6BAAW,EAAEsM,KAAK,CAACtM,WAHhB;AAIHkN,sBAAI,EAAEZ,KAAK,CAACY,IAJT;AAKHC,0BAAQ,EAAEb,KAAK,CAACa,QALb;AAMHC,0BAAQ,EAAEd,KAAK,CAACc,QANb;AAOHE,6BAAW,EAAEhB,KAAK,CAACgB,WAPhB;AAQHC,4BAAU,EAAEjB,KAAK,CAACiB,UAAN,sBAA+BjB,KAAK,CAACiB,UAArC,SAAqD,IAR9D;AASHb,4BAAU,EAAEJ,KAAK,CAACI;AATf,iBAAP;AAYH,eAbc,CAAf;;AAcA,qBAAI,CAACvL,UAAL,CAAgBI,IAAhB,CAAqBuM,MAArB;AACH,aAhBD;AAiBH;;;wCAEa;AACX,iBAAKjG,WAAL,CAAiBpI,MAAjB;AACF;;;+BAEI6M,K,EAAmB;AACpB,iBAAKhR,MAAL,CAAYe,QAAZ,CAAqB,CAAC,MAAD,EAASiQ,KAAK,CAACrP,GAAf,CAArB,EAA0C;AAACX,wBAAU,EAAE,KAAKf;AAAlB,aAA1C;AACH;;;kCAEO;AACJ,iBAAKH,WAAL,CAAiBe,UAAjB;AACH;;;;;;;yBAxDQwR,mB,EAAmB,+H,EAAA,uH,EAAA,+H;AAAA,O;;;cAAnBA,mB;AAAmB,8B;AAAA,iB;AAAA,e;AAAA,6kB;AAAA;AAAA;ACbhC;;AACI;;AAGF;AAAA,qBAAS,IAAAjM,KAAA,EAAT;AAAgB,aAAhB;;AAEF;;AAGA;;AACE;;AAKC;AAAA,qBAAY,IAAAC,IAAA,QAAZ;AAAwB,aAAxB;;AAEC;;AAIA;;AAIA;;AAGF;;AACD;;AACG;;AACJ;;;;AA5BE;;AAAA;;AAGe;;AAAA;;AAGgC;;AAAA;;AAE9C;;AAAA,gGAA0B,qBAA1B,EAA0B,IAA1B,EAA0B,eAA1B,EAA0B,GAA1B,EAA0B,SAA1B,EAA0B,WAA1B,EAA0B,gBAA1B,EAA0B,aAA1B;;;;;;;;;wEDEUgM,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACTnR,oBAAQ,EAAE,OADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,kBAAM,EAAE;AAHC,W;AAKqB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEbhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACAA;;AACI;;AAA2E;AAAA;;AAAA;;AAAA;AAAA,aAAyB,OAAzB,EAAyB;AAAA;;AAAA;;AAAA;AAAA,WAAzB;;AACvE;;AACJ;;AACJ;;;;;;AAHuB;;AAAA,oFAAgB,YAAhB,EAAgB,8BAAhB,EAAgB,OAAhB,EAAgB,+BAAhB,EAAgB,MAAhB,EAAgB,+BAAhB;;AACf;;AAAA;;;;UDMKqR,mB;AAKT,qCAAoB1L,WAApB,EAA8C;AAAA;;AAA1B,eAAAA,WAAA,GAAAA,WAAA;AACnB;;;;qCAEU;AACP,iBAAK2L,aAAL,GAAqB,KAAKC,SAAL,CAAe,KAAKC,IAApB,CAArB;AACH;;;wCAEa,CACb;;;oCAESA,I,EAAiB;AACvB,gBAAMC,UAAU,GAAG,IAAIC,UAAJ,EAAnB;;AAEA,gBAAI,CAACF,IAAL,EAAW;AACPC,wBAAU,CAAC/P,OAAX,GAAqB,aAArB;AACA+P,wBAAU,CAACE,UAAX,GAAwB,CAAxB;AACAF,wBAAU,CAACG,UAAX,GAAwB,MAAxB;AACAH,wBAAU,CAACI,KAAX,GAAmB,EAAnB;AACH,aALD,MAKO;AACHJ,wBAAU,CAACE,UAAX,GAAwBH,IAAI,CAACG,UAA7B,CADG,CAGH;;AACA,sBAAQH,IAAI,CAACrL,MAAb;AACI,qBAAK,yEAAmB2L,KAAxB;AACA,qBAAK,yEAAmBC,SAAxB;AACIN,4BAAU,CAACG,UAAX,GAAwB,QAAxB;AACAH,4BAAU,CAACO,SAAX,GAAuB,KAAvB;AACA;;AACJ,qBAAK,yEAAmBC,OAAxB;AACA,qBAAK,yEAAmBC,OAAxB;AACA,qBAAK,yEAAmBC,SAAxB;AACA,qBAAK,yEAAmBC,MAAxB;AACIX,4BAAU,CAACG,UAAX,GAAwB,SAAxB;AACAH,4BAAU,CAACO,SAAX,GAAuB,IAAvB;AACA;;AACJ,qBAAK,yEAAmBK,SAAxB;AACIZ,4BAAU,CAACG,UAAX,GAAwB,SAAxB;AACAH,4BAAU,CAACO,SAAX,GAAuB,KAAvB;AACA;AAhBR,eAJG,CAuBH;;;AACA,sBAAQR,IAAI,CAACrL,MAAb;AACI,qBAAK,yEAAmB2L,KAAxB;AACIL,4BAAU,CAACa,SAAX,GAAuB,uBAAvB;AACA;;AACJ,qBAAK,yEAAmBP,SAAxB;AACIN,4BAAU,CAACa,SAAX,GAAuB,wBAAvB;AACA;;AACJ,qBAAK,yEAAmBL,OAAxB;AACIR,4BAAU,CAACa,SAAX,GAAuB,2BAAvB;AACA;;AACJ,qBAAK,yEAAmBF,MAAxB;AACIX,4BAAU,CAACa,SAAX,GAAuB,cAAvB;AACA;;AACJ,qBAAK,yEAAmBJ,OAAxB;AACIT,4BAAU,CAACa,SAAX,GAAuB,yBAAvB;AACA;;AACJ,qBAAK,yEAAmBH,SAAxB;AACIV,4BAAU,CAACa,SAAX,GAAuB,6BAAvB;AACA;;AACJ,qBAAK,yEAAmBL,OAAxB;AACIR,4BAAU,CAACa,SAAX,GAAuB,wBAAvB;AACA;;AACJ,qBAAK,yEAAmBD,SAAxB;AACIZ,4BAAU,CAACa,SAAX,GAAuB,2BAAvB;AACA;AAxBR,eAxBG,CAmDH;;;AACAb,wBAAU,CAAC/P,OAAX,GAAqB8P,IAAI,CAAC9P,OAA1B;AACA+P,wBAAU,CAACI,KAAX,GAAmBL,IAAI,CAAC9P,OAAxB;AACH;;AACD,mBAAO+P,UAAP;AACH;;;sCAEW;AACR,gBAAI,KAAKD,IAAT,EAAe;AACX,mBAAK7L,WAAL,CAAiB4M,WAAjB,CAA6B,CAAC,KAAKf,IAAN,CAA7B;AACH;AACJ;;;;;;;yBArFQH,mB,EAAmB,0H;AAAA,O;;;cAAnBA,mB;AAAmB,oC;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,+I;AAAA;AAAA;ACRhC;;;;AAAK;;;;;;;;;wEDQQA,mB,EAAmB;gBAJ/B,uDAI+B;iBAJrB;AACPvR,oBAAQ,EAAE,aADH;AAEPC,uBAAW,EAAE;AAFN,W;AAIqB,U;;;;;;kBAC3B;;;;;UAuFC2R,U;;;;;;;;;;;;;;;;;;;AEhGN;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACQM;;AAAwC;AAAA;;AAAA;;AAAA;AAAA;;AAA6C;;AAAc;;;;;;AAIpG;;AAAwD;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AARzD;;AACC;;AAAI;;AAAkB;;AACtB;;AAAI;;AACJ;;AACC;;AACD;;AACA;;AACA;;AACA;;AACA;;AACD;;;;;;AARK;;AAAA;;AAEO;;AAAA;;AAIN;;AAAA;;;;;;;;;;AAyBJ;;AACC;;AACD;;;;;;AADgB;;AAAA;;;;;;AAEhB;;AACC;;AACD;;;;;;AADgB;;AAAA;;;;;;;;AAxCrB;;AAAsH;AAAA;;AAAA;;AAAA;AAAA;;AACrH;;AACC;;AACC;;AAWA;;AACC;;AAAI;;AAAO;;AACZ;;AACA;;AACC;;AACC;;AACC;;AAAqC;;AAAM;;AAC3C;;AAAqC;;AAAmC;;AACxE;;AACA;;AAAqC;;AAAY;;AACjD;;AAAqC;;;;AAA8B;;AACnE;;AACA;;AAAqC;;AAAI;;AACzC;;AAAqC;;AAAc;;AACnD;;AACA;;AAAqC;;AAAQ;;AAC7C;;AAAqC;;AAAkB;;AACvD;;AACA;;AAAqC;;AAAW;;AAChD;;AAAqC;;AAAqB;;AAC1D;;AACD;;AACA;;AAGA;;AAGD;;AACD;;AACD;;AACD;;AACD;;;;;;AA9CuB,yIAAgC,iBAAhC,EAAgC,IAAhC;;AACD;;AAAA;;AAEgC;;AAAA;;AAkBX;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGlC;;AAAA;;AAGA;;AAAA;;;;UD7BGc,iB;AAgBT,mCACY9T,WADZ,EAEYE,MAFZ,EAGYC,KAHZ,EAGmC;AAAA;;AAFvB,eAAAH,WAAA,GAAAA,WAAA;AACA,eAAAE,MAAA,GAAAA,MAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AAbZ,eAAA8K,QAAA,GAAW,KAAX;AACA,eAAAC,eAAA,GAAkB,YAAlB;AAGA,eAAA6I,kBAAA,GAAqB,wEAArB;AAEO,eAAAvI,eAAA,GAAkB,IAAlB;AAQN;;;;qCAEU;AAAA;;AACP,iBAAKC,YAAL;;AAEA,gBAAI;AACA,mBAAKrL,aAAL,GAAqB,2DACjB,KAAKD,KAAL,CAAWiC,IADM,EAEjB,KAAKjC,KAAL,CAAWI,MAFM,EAGjB,KAAKP,WAAL,CAAiBgU,kBAAjB,EAHiB,EAInB1T,SAJmB,CAIT,UAAAiC,MAAM,EAAI;AAClB,oBAAIH,IAAI,GAAGG,MAAM,CAAC,CAAD,CAAjB;AACA,oBAAIhC,MAAM,GAAGgC,MAAM,CAAC,CAAD,CAAnB;AACA,oBAAI0R,KAAK,GAAG1R,MAAM,CAAC,CAAD,CAAlB;AAEA,oBAAI8I,SAAS,GAAG9K,MAAM,CAAC,WAAD,CAAtB;AAEA,uBAAI,CAAC0K,QAAL,GAAgB,KAAhB;AACA,uBAAI,CAACC,eAAL,GAAuB,YAAvB;AAEA,uBAAI,CAAC4H,IAAL,GAAYmB,KAAK,CAACrR,IAAN,CAAW,UAAAhB,CAAC;AAAA,yBAAIA,CAAC,CAACsS,MAAF,KAAa7I,SAAjB;AAAA,iBAAZ,CAAZ;;AAEA,oBAAI,CAAC,OAAI,CAACyH,IAAV,EAAgB;AACZ,yBAAI,CAAC9S,WAAL,CAAiBe,UAAjB;AACH;AAEJ,eApBoB,CAArB;AAqBH,aAtBD,CAsBE,OAAO8B,CAAP,EAAU,CACX;AAGJ;;;wCAEa;AACV,gBAAI,KAAKzC,aAAT,EAAwB;AAAE,mBAAKA,aAAL,CAAmBU,WAAnB;AAAmC;AAChE;;;kCAEO;AACJ,iBAAKd,WAAL,CAAiBe,UAAjB;AACH;;;yCAEc,CACd;;;;;;;yBA9DQ+S,iB,EAAiB,+H,EAAA,uH,EAAA,+H;AAAA,O;;;cAAjBA,iB;AAAiB,kC;AAAA,gB;AAAA,e;AAAA,muB;AAAA;AAAA;ACX9B;;AACC;;AA+CD;;;;AA/CW;;AAAA;;;;;;;;;;wEDUEA,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACP1S,oBAAQ,EAAE,WADH;AAEPC,uBAAW,EAAE,4BAFN;AAGPC,kBAAM,EAAE;AAHD,W;AAKmB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEX9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACgBK;;;;;;AAAmE;;;;;;AACnE;;;;;;AAAkE;;;;;;;;AAFlE;;AAAe;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+C;;AAC9D;;AACA;;;;;;AAD4B;;AAAA;;AACA;;AAAA;;;;;;AAI5B;;;;;;AAAa;;;;UDVL6S,mB;AAmBT,qCAAoBnU,WAApB,EAAsDE,MAAtD,EAA8EC,KAA9E,EAAqG;AAAA;;AAAjF,eAAAH,WAAA,GAAAA,WAAA;AAAkC,eAAAE,MAAA,GAAAA,MAAA;AAAwB,eAAAC,KAAA,GAAAA,KAAA;AAf9E,eAAA8K,QAAA,GAAW,KAAX;AACA,eAAAC,eAAA,GAAkB,YAAlB;AAEA,eAAAtF,OAAA,GAAU,CACN;AAAErB,gBAAI,EAAE,KAAR;AAAesB,iBAAK,EAAE,KAAtB;AAA6BC,kBAAM,EAAE;AAArC,WADM,EAEN;AAAEvB,gBAAI,EAAE,eAAR;AAAyBsB,iBAAK,EAAE,UAAhC;AAA4CC,kBAAM,EAAE;AAApD,WAFM,EAGN;AAAEvB,gBAAI,EAAE,aAAR;AAAuBsB,iBAAK,EAAE,QAA9B;AAAwCC,kBAAM,EAAE,MAAhD;AAAwD,oBAAM;AAA9D,WAHM,EAIN;AAAEvB,gBAAI,EAAE,eAAR;AAAyBsB,iBAAK,EAAE,cAAhC;AAAgDC,kBAAM,EAAE;AAAxD,WAJM,EAKN;AAAEvB,gBAAI,EAAE,WAAR;AAAqBsB,iBAAK,EAAE,MAA5B;AAAoCC,kBAAM,EAAE;AAA5C,WALM,EAMN;AAAEvB,gBAAI,EAAE,iBAAR;AAA2BsB,iBAAK,EAAE,eAAlC;AAAmDC,kBAAM,EAAE;AAA3D,WANM,CAAV;AASQ,eAAAC,UAAA,GAAa,IAAI,oDAAJ,CAAgC,IAAhC,CAAb;AACR,eAAAC,SAAA,GAAoC,KAAKD,UAAL,CAAgBE,YAAhB,EAApC;AAGC;;;;qCAEU;AAAA;;AACP,iBAAK7F,aAAL,GAAqB,2DACjB,KAAKD,KAAL,CAAWiC,IADM,EAEjB,KAAKjC,KAAL,CAAWI,MAFM,EAGjB,KAAKP,WAAL,CAAiBqC,iBAAjB,EAHiB,EAIjB,KAAKrC,WAAL,CAAiBgU,kBAAjB,EAJiB,EAKnB1T,SALmB,CAKT,UAAAiC,MAAM,EAAI;AAClB,kBAAIC,IAAI,GAAGD,MAAM,CAAC,CAAD,CAAjB;AACA,kBAAI0R,KAAK,GAAG1R,MAAM,CAAC,CAAD,CAAlB;AAEA,kBAAIH,IAAI,GAAG,EAAX;AAEA6R,mBAAK,CAACrH,OAAN,CAAc,UAAAkG,IAAI,EAAI;AAClB,oBAAIlS,GAAG,GAAG4B,IAAI,CAACI,IAAL,CAAU,UAAAhB,CAAC;AAAA,yBAAIA,CAAC,CAACf,MAAF,KAAaiS,IAAI,CAACsB,YAAtB;AAAA,iBAAX,CAAV;AACAhS,oBAAI,CAAC2K,IAAL,CAAU;AACNnM,qBAAG,EAAEA,GAAG,GAAGA,GAAG,CAAC2D,IAAP,GAAc,aADhB;AAENuO,sBAAI,EAAEA;AAFA,iBAAV;AAIH,eAND;;AAOA,qBAAI,CAAC/M,UAAL,CAAgBI,IAAhB,CAAqB/D,IAArB;AAEH,aApBoB,CAArB;AAsBH;;;wCAEa;AACV,gBAAI,KAAKhC,aAAT,EAAwB;AAAE,mBAAKA,aAAL,CAAmBU,WAAnB;AAAmC;AAChE;;;mCAGQgS,I,EAAmB;AACxB,iBAAK5S,MAAL,CAAYe,QAAZ,CAAqB,CAAC,MAAD,EAAS6R,IAAI,CAACoB,MAAd,CAArB,EAA4C;AAAChT,wBAAU,EAAE,KAAKf;AAAlB,aAA5C;AACH;;;kCAEO;AACJ,iBAAKH,WAAL,CAAiBe,UAAjB;AACH;;;;;;;yBA1DQoT,mB,EAAmB,+H,EAAA,uH,EAAA,+H;AAAA,O;;;cAAnBA,mB;AAAmB,oC;AAAA,gB;AAAA,e;AAAA,umB;AAAA;AAAA;ACXhC;;AACI;;AAGF;AAAA,qBAAS,IAAA7N,KAAA,EAAT;AAAgB,aAAhB;;AAIA;;AAIC;AAAA,qBAAY,IAAA+N,QAAA,aAAZ;AAAiC,aAAjC;;AAEC;;AAMA;;AAIF;;AACE;;AACJ;;;;AAvBE;;AAAA;;AAMC;;AAAA,gGAA0B,SAA1B,EAA0B,WAA1B,EAA0B,gBAA1B,EAA0B,aAA1B;;;;;;;;;wEDEUF,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACT/S,oBAAQ,EAAE,aADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,kBAAM,EAAE;AAHC,W;AAKqB,U","file":"8-es5.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubsService } from '../hubs.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject} from 'rxjs';\nimport { AuthService } from '../../+auth/auth.service';\nimport { DexihHubAuth } from '../../+auth/auth.models';\nimport { HubService } from '../../+hub';\n\n@Component({\n  selector: 'help',\n  templateUrl: './help.component.html',\n  styles: []\n})\nexport class HelpComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n    private _hubCacheSubscription: Subscription;\n\n    public path: string;\n    public hubKey: number;\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this._subscription = this.route.queryParams.subscribe(params => {\n            let path = params['path'];\n            if (path) {\n                this.path = '/assets/help/' + path;\n            } else {\n                this.path = '/assets/help/intro/getting_started.md'\n            }\n        });\n\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n            if (cache && cache.hub) {\n                this.hubKey = cache.hub.hubKey;\n            } else {\n                this.hubKey = null;\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    linkClick(link: string) {\n        this.router.navigate([], { relativeTo: this.route, queryParams: {'path': link} });\n    }\n\n}\n","<div class=\"container-fluid\">\n\t<dexih-help title=\"Help\" [path]=\"path\" [display]=\"true\" [hubKey]=\"hubKey\" (linkClick)=\"linkClick($event)\">\n\t\t\n\t</dexih-help>\n</div>\n","export * from './help.component';\n","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Observable, Subscription, combineLatest} from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { AuthService } from '../../+auth/auth.service';\nimport { DexihHubAuth } from '../../+auth/auth.models';\nimport { Location } from '@angular/common';\nimport { DexihMessageComponent } from '../../shared/ui/dexihMessage';\nimport { eSharedAccessItems, DexihRemoteAgent } from '../../shared/shared.models';\n\n@Component({\n\n  selector: 'dexih-hub-edit-form',\n  templateUrl: './hub-edit.component.html'\n})\nexport class HubEditComponent implements OnInit, OnDestroy {\n  @ViewChild('DexihMessage', { static: true }) public dexihMessage: DexihMessageComponent;\n\n  private _subscription: Subscription;\n  private _valueChangesSubscription: Subscription;\n\n  action: string;\n  pageTitle: string;\n\n  hub: DexihHubAuth;\n\n  SharedAccessItems = eSharedAccessItems.filter(c => c.key > 0);\n\n  generatingKey = false;\n  savingHub = false;\n  hasChanged = false;\n  showAllErrors = false;\n\n  mainForm: FormGroup;\n\n  formErrors = {\n    'name': '',\n    'encryptionKey': '',\n    'sharedAccess': '',\n    'expiryDate': ''\n  };\n\n  validationMessages = {\n    'name': {\n      'required': 'Name is required.',\n      'minlength': 'Name must be at least 4 characters long.',\n      'maxlength': 'Name cannot be more than 50 characters long.',\n      'duplicateHubName': 'Name cannot be the same as an existing hub name.'\n    },\n    'encryptionKey': {\n      'required': 'Encryption Key is required.',\n      'minlength': 'Encryption Key must be at least 10 characters long.',\n      'maxlength': 'Encryption Key cannot be more than 250 characters long.'\n    },\n    'sharedAccess': {\n      'required': 'Specify the type of required access.'\n    },\n    'expiryDate': {\n      'validateDate': 'The expiry date is invalid.'\n    }\n  };\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private location: Location,\n    private fb: FormBuilder\n  ) {\n  }\n\n  ngOnInit() {\n\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.authService.getHubsObservable(),\n        this.authService.getRemoteAgentsObservable(),\n      ).subscribe(result => {\n        let data = result[0];\n        let params = result[1];\n        let hubs = result[2];\n\n        this.action = data['action'];\n        this.pageTitle = data['pageTitle'];\n\n        if (this.action === 'New') {\n          this.hub = new DexihHubAuth();\n          this.buildForm();\n        } else {\n          if (hubs) {\n            let hubKey = + params['hubKey'];\n            this.hub = hubs.find(c => c.hubKey === hubKey);\n            this.buildForm();\n          }\n        }\n\n      });\n    } catch (e) {\n      this.dexihMessage.addErrorMessage(e.message);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._valueChangesSubscription) { this._valueChangesSubscription.unsubscribe(); }\n  }\n\n  generateKey() {\n    this.generatingKey = true;\n    this.authService.getRandomEncryptionKey().then(result => {\n      this.mainForm.controls['encryptionKey'].setValue(result);\n      this.mainForm.markAsDirty();\n      this.generatingKey = false;\n    }).catch(reason => {\n      this.dexihMessage.addMessage(reason);\n      this.generatingKey = false;\n    });\n  }\n\n  saveHub() {\n    if (this.mainForm.valid && this.hasChanged) {\n\n      if (this.hub.hubKey > 0 && this.hub.encryptionKey !== this.mainForm.value.encryptionKey) {\n        this.authService.confirmDialog(\n          'Warning: Encryption Key Changed',\n          // tslint:disable-next-line:max-line-length\n          'The encryption key has changed.  This will require all connection password & connection strings in the hub to be updated.  Would you like to continue?'\n        ).then(confirm => {\n          if (confirm) {\n            this.doSaveHub();\n          }\n        });\n      } else {\n        this.doSaveHub();\n      }\n    } else {\n      this.showAllErrors = true;\n      this.onValueChanged();\n    }\n  }\n\n  private doSaveHub() {\n    this.dexihMessage.reset();\n    this.savingHub = true;\n    Object.assign(this.hub, this.mainForm.value);\n    this.authService.saveHub(this.hub)\n      .then(result => {\n        this.savingHub = false;\n        this.cancel();\n\n        this.router.navigate(['/hub', result.hubKey, 'summary', 'agents']);\n        return;\n\n      }).catch(reason => {\n        this.dexihMessage.addMessage(reason);\n        this.savingHub = false;\n      });\n  }\n\n  cancel() {\n    this.authService.navigateUp();\n  }\n\n  buildForm(): void {\n    this.mainForm = this.fb.group({\n      'name': [this.hub.name, [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(50),\n        this.duplicateHubNameValidator()\n      ]\n      ],\n      'description': [this.hub.description, [] ],\n      'encryptionKey': [this.hub.encryptionKey, [\n      ]],\n      'sharedAccess': [this.hub.sharedAccess, [\n        Validators.required,\n      ]],\n      'expiryDate': [this.hub.expiryDate, []],\n    });\n\n    if (this._valueChangesSubscription) { this._valueChangesSubscription.unsubscribe(); }\n    this._valueChangesSubscription = this.mainForm.valueChanges.subscribe(data => this.onValueChanged(data));\n    this.onValueChanged(); // (re)set validation messages now\n\n    this.hasChanged = false;\n  }\n\n  duplicateHubNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      const name = control.value;\n      const no = this.authService.hubNameExists(this.hub.hubKey, name);\n      return no ? { 'duplicateHubName': { name } } : null;\n    };\n  }\n\n  onValueChanged(data?: any) {\n    if (!this.mainForm) { return; }\n    const form = this.mainForm;\n\n    this.hasChanged = true;\n\n    for (const field of Object.keys(this.formErrors)) {\n      // clear previous error message (if any)\n      this.formErrors[field] = '';\n      const control = form.get(field);\n\n      if (control && (control.dirty || this.showAllErrors) && !control.valid) {\n        const messages = this.validationMessages[field];\n        for (const key of Object.keys(control.errors)) {\n          this.formErrors[field] += messages[key] + ' ';\n        }\n      }\n    }\n  }\n}\n","<div class=\"container\">\n\t<dexih-message #DexihMessage></dexih-message>\n\n    <d-widget *ngIf=\"mainForm\"\n\t\ttitle=\"Edit Hub\" \n\t\tsubTitle=\"Complete the details to create/edit a new hub\"\n        iconClass=\"fa fa-lg fa-fw fa-life-saver\" \n\t\t[showCloseButton]=\"true\"\n\t\t[padding]=\"true\"\n\t\t(close)=\"cancel()\"\n    >\n        <ng-template #header>\n\t\t\t<d-button-save class=\"mr-1\" (click)=\"!savingHub && !mainForm.pristine && saveHub()\" [disabled]=\"savingHub || mainForm.pristine\" [busy]=\"savingHub\"></d-button-save>\n\t\t\t<d-button-cancel (click)=\"!savingHub && cancel()\" [disabled]=\"savingHub\"></d-button-cancel>\n        </ng-template>\n\n\t\t<form  id=\"hub-edit-form\" [formGroup]=\"mainForm\" >\n\t\t\t<fieldset>\n\t\t\t\t<section>\n\t\t\t\t\t<form-input label=\"Hub Name\" formControlName=\"name\" placeholder=\"Enter a name for the hub\" [autocapitalize]=\"on\" iconClass=\"fa fa-life-ring\" [errors]=\"formErrors.name\">\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-textarea label=\"Description\" formControlName=\"description\" placeholder=\"Enter a description for the hub\">\n\t\t\t\t\t</form-textarea>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-input label=\"Encryption Key\" formControlName=\"encryptionKey\" placeholder=\"Enter an encryption key\" iconClass=\"fa fa-key\" [errors]=\"formErrors.encryptionKey\" note=\"The encryption key will be used to encrypt table columns flagged as secure.  Ensure this key is kept securely as without it encrypted data will be lost.\" style=\"z-index: 10000\">\n\t\t\t\t\t\t(<d-button buttonClass=\"btn btn-link mb-1 p-0\" iconClass=\"fa fa-refresh\" [busy]=\"generatingKey\" (click)=\"generateKey()\">Generate a new key</d-button>)\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-select label=\"Shared Data Access\" formControlName=\"sharedAccess\" [items]=\"SharedAccessItems\" itemKey=\"key\" itemName=\"description\"\n\t\t\t\t\t\ticonClass=\"fa fa-lock\" [errors]=\"formErrors.sharedAccess\"  note='The level of access required for users to access shared data in this hub.' [enableFilter]=\"false\">\n\t\t\t\t\t</form-select>\n\t\t\t\t</section>\n\n\t\t\t</fieldset>\n\t\t</form>\n    </d-widget>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubsService } from '../hubs.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable, BehaviorSubject, Subscription} from 'rxjs';\nimport { AuthService } from '../../+auth/auth.service';\nimport { DexihHubAuth } from '../../+auth/auth.models';\n\n@Component({\n  selector: 'hubs',\n  templateUrl: './hub-index.component.html',\n  styles: []\n})\nexport class HubIndexComponent implements OnInit, OnDestroy {\n\n    hubsObserve: Subscription;\n    hubs: Array<DexihHubAuth>;\n    hubCacheStatus: Subscription;\n    hubName: string;\n    hubStatusMessage: string;\n    isLoaded = false;\n\n    columns = [\n        { name: 'name', title: 'Name', format: ''},\n        { name: 'description', title: 'Description', format: ''},\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar'},\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubsService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.hubsObserve = this.authService.getHubsObservable().subscribe(hubs => {\n            if (hubs) { this.isLoaded = true; }\n            this._tableData.next(hubs);\n        } );\n    }\n\n    ngOnDestroy() {\n       if (this.hubsObserve) {this.hubsObserve.unsubscribe(); }\n    }\n\n    deleteHubs(hubs: DexihHubAuth[]) {\n        this.authService.deleteHubs(hubs).catch(reason => {\n            this.hubService.addHubMessage(reason);\n        });\n    }\n\n    edit(hub: DexihHubAuth) {\n        this.router.navigate(['hub-edit', hub.hubKey], {relativeTo: this.route});\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n}\n","<div class=\"container-fluid\">\n    <d-widget title=\"Available Hubs\" \n        iconClass=\"fa fa-lg fa-fw fa-life-saver\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n    >\n\n\t\t<d-table \n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[dataObservable]=\"tableData\"\n\t\t\t(rowClick)=\"edit($event)\"\n\t\t\t>\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-hub=\"item\">\n\t\t\t\t\t<d-button-edit class=\"mr-1\" [routerLink]=\"['hub-edit', hub.hubKey]\" queryParamsHandling preserveFragment class=\"mr-1\"></d-button-edit>\n\t\t\t\t\t<d-button-open class=\"mr-1\" [routerLink]=\"['/hub', hub.hubKey]\" queryParamsHandling preserveFragment></d-button-open>\n\t\t\t\t\t<d-button [routerLink]=\"['/hub', hub.hubKey, 'manage', 'manage-users']\" iconClass=\"fa fa-lock\" queryParamsHandling preserveFragment text=\"Permissions\" class=\"mr-1\"></d-button>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t<d-button-delete (click)=\"deleteHubs(items)\" class=\"mr-1\"></d-button-delete>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<d-button-new [routerLink]=\"['hub-new']\" class=\"mr-1\"></d-button-new>\n\t\t\t\t</ng-template>\n\t\t</d-table>\n    </d-widget>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../+auth/auth.service';\nimport { Observable, Observer, Subscription, BehaviorSubject, combineLatest} from 'rxjs';\nimport {DexihHubAuth, logoSmallUrl, eHubAccess} from '../../+auth/auth.models';\nimport { Router } from '@angular/router';\nimport { eSharedAccess, ePermission, DexihHub } from '../../shared/shared.models';\n\n@Component({\n  selector: 'hubs-summary',\n  templateUrl: './hubs-summary.component.html',\n})\nexport class HubsSummaryComponent implements OnInit {\n\n  public hubs: Observable<DexihHubAuth[]>;\n\n  public filterString: string;\n\n  logoSmallUrl = logoSmallUrl;\n  eSharedAccess = eSharedAccess;\n  ePermission = ePermission;\n  eHubAccess = eHubAccess;\n\n  public view = eHubAccess.User;\n  public hubAccess = {};\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n    this.hubs = this.authService.getHubsObservable();\n  }\n}\n\n\n","<div class=\"container-fluid\">\n    <div class=\"d-flex align-items-center p-3 my-3 text-white-50 bg-info rounded\">\n        <img class=\"mr-3\" [src]='logoSmallUrl' alt=\"\" width=\"48\" height=\"48\">\n        <div class=\"lh-100\">\n            <h3 class=\"mb-0 text-white lh-100\">Data Experts Integration Hub</h3>\n        </div>\n    </div>\n        \n    <div *ngIf=\"(hubs | async)?.length == 0\" class=\"alert alert-warning\">\n        <div class=\"float-right\">\n            <d-button-new routerLink=\"hub-new\" title=\"Create a new Hub\" text=\"New Hub\"></d-button-new>\n        </div>\n        <h3>Let's get started.</h3>\n        <h5>You do not have any hubs currently available to you.</h5>\n        <h5>To get started, either create a new hub, or request another user provide access.</h5>\n    </div>\n\n    <div class=\"card-deck\">\n        <div class=\"card mb-3\" style=\"min-width: 18rem;\">\n            <div class=\"card-header text-white bg-success\"><i class=\"fa fa-lg fa-fw fa-life-saver\"></i>Hub Management</div>\n            <div class=\"card-body\">\n                <p class=\"card-text\">Hub's are used to store definitions for tables and data processing rules, and are\n                    used to run, schedule and publish data.</p>\n            </div>\n            <div class=\"card-footer\">\n                <d-button class=\"ml-1\" iconClass=\"fa fa-life-saver\" routerLink=\"hubs-view\">Manage</d-button>\n                <d-button-new  class=\"ml-1\" routerLink=\"hub-new\" title=\"Create a new hub\"></d-button-new>\n            </div>\n        </div>\n        <div class=\"card mb-3\" style=\"min-width: 18rem;\">\n            <div class=\"card-header text-white bg-primary\"><i class=\"fa fa-lg fa-fw fa-user\"></i>Account Management</div>\n            <div class=\"card-body\">\n                <p class=\"card-text\">Edit your account details, password, and login providers.</p>\n            </div>\n            <div class=\"card-footer\">\n                <d-button class=\"ml-1\" iconClass=\"fa fa-user\" routerLink=\"manage\">Account</d-button>\n            </div>\n        </div>\n        <div class=\"card mb-3\" style=\"min-width: 18rem;\">\n            <div class=\"card-header text-white bg-warning\"><i class=\"fa fa-lg fa-fw fa-wifi\"></i>Remote Agents</div>\n            <div class=\"card-body\">\n                <p class=\"card-text\">Remote agents provide connectivity to data sources and are used run and publish\n                    data.</p>\n            </div>\n            <div class=\"card-footer\">\n                <d-button class=\"mr-1\" iconClass=\"fa fa-wifi\" routerLink=\"agents\">Agents</d-button>\n                <d-button iconClass=\"fa fa-tasks\" routerLink=\"tasks\">Tasks</d-button>\n            </div>\n        </div>\n        <div class=\"card mb-3\" style=\"min-width: 18rem;\">\n            <div class=\"card-header text-white bg-danger\"><i class=\"fa fa-lg fa-fw fa-newspaper-o\"></i>Shared Data</div>\n            <div class=\"card-body\">\n                <p class=\"card-text\">View all datasets which have been shared.</p>\n            </div>\n            <div class=\"card-footer\">\n                <d-button-view routerLink=\"sharedData\"></d-button-view>\n            </div>\n        </div>\n    </div>\n\n    <d-widget title=\"Hubs\" \n        iconClass=\"fa fa-lg fa-fw fa-life-saver\" \n        [showCloseButton]=\"false\"\n        [padding]=\"true\"\n        [showFilter]=\"true\"\n        (filterString)=\"filterString = $event\"\n    >\n        <ng-template #header>\n            <div class=\"btn-group btn-group-toggle ml-1\" data-toggle=\"buttons\" >\n                <label class=\"btn btn-primary\" [ngClass]=\"{active: view === eHubAccess.All}\" title=\"All Hubs.\">\n                    <input type=\"radio\" name=\"options\" [value]=\"eHubAccess.All\" autocomplete=\"off\" [(ngModel)]=\"view\">\n                    <i class=\"fa fa-globe\"></i>\n                </label>\n                <label class=\"btn btn-primary\" [ngClass]=\"{active: view === eHubAccess.User}\" title=\"User owned hubs\">\n                    <input type=\"radio\" name=\"options\" [value]=\"eHubAccess.User\" autocomplete=\"off\" [(ngModel)]=\"view\">\n                    <i class=\"fa fa-user-secret\"></i>\n                </label>\n                <label class=\"btn btn-primary\" [ngClass]=\"{active: view === eHubAccess.ReadOnly}\" title=\"Readonly hubs\">\n                    <input type=\"radio\" name=\"options\" [value]=\"eHubAccess.ReadOnly\"  autocomplete=\"off\" [(ngModel)]=\"view\">\n                    <i class=\"fa fa-book\"></i>\n                </label>\n                <label class=\"btn btn-primary\" [ngClass]=\"{active: view === eHubAccess.Public}\" title=\"Public Hubs\">\n                    <input type=\"radio\" name=\"options\" [value]=\"eHubAccess.Public\"  autocomplete=\"off\" [(ngModel)]=\"view\">\n                    <i class=\"fa fa-users\"></i>\n                </label>\n            </div>\n        </ng-template>\n\n        <div class=\"card-columns\">\n            <ng-template ngFor let-hub [ngForOf]=\"hubs | async\">\n                <div *ngIf=\"(view === eHubAccess.All || hub.hubAccess === view) && (!filterString || hub.name.toUpperCase().includes(filterString.toUpperCase()))\" class=\"card\">\n                    <div>\n                        <div class=\"card-header\">\n                            <div class=\"d-flex flex-row p-0\">\n                                <div>\n                                    {{hub.name}}\n                                    <div class=\"small\">({{eHubAccess[hub.hubAccess]}})</div>\n                                </div>\n                                <div class=\"d-flex ml-auto\">\n                                    <d-button-open routerLink=\"/hub/{{hub.hubKey}}/summary\"></d-button-open>\n                                    <d-button-edit class=\"ml-1\" routerLink=\"hub-edit/{{hub.hubKey}}\">\n                                    </d-button-edit>\n                                </div>\n                            </div>        \n                        </div>\n                        <div *ngIf=\"hub.description\" class=\"card-body\">\n                            <p class=\"card-text\">{{hub.description}}</p>\n                        </div>\n                    </div>\n                </div>\n            </ng-template>\n        </div>\n    </d-widget>\n</div>","import { Component, OnInit, ViewChild, OnDestroy, HostListener } from '@angular/core';\nimport { HubsService } from './hubs.service';\nimport { Subscription} from 'rxjs';\nimport { DexihMessageComponent } from '../shared/ui/dexihMessage';\nimport { AuthService } from '../+auth/auth.service';\n\n@Component({\n    selector: 'dexih-hubs',\n    templateUrl: './hubs.component.html'\n})\nexport class HubsComponent implements OnInit, OnDestroy {\n    @ViewChild('DexihMessage', { static: true }) public dexihMessage: DexihMessageComponent;\n\n    _hubsMessageSubscription: Subscription;\n    _webSocketStatusSubscription: Subscription;\n    webSocketStatus: string;\n    openDelay = false; // used to pause the websocket error message displaying whilst a connect attempt occurs.\n\n    constructor(private authService: AuthService, private hubsService: HubsService) {\n        authService.initialize();\n    }\n\n    ngOnInit() {\n\n        this._hubsMessageSubscription = this.hubsService.getHubMessagesObservable().subscribe(messages => {\n            if (!messages || messages.length === 0) {\n                this.dexihMessage.reset();\n            } else {\n                this.dexihMessage.addMessage(messages[messages.length - 1]);\n            }\n        });\n\n        this._webSocketStatusSubscription = this.authService.getWebSocketStatusObservable().subscribe(status => {\n            this.webSocketStatus = status;\n        });\n\n        setTimeout(() => {\n            this.openDelay = true;\n        }, 5000);\n\n    }\n\n    ngOnDestroy() {\n        if (this._hubsMessageSubscription) { this._hubsMessageSubscription.unsubscribe(); }\n        if (this._webSocketStatusSubscription) { this._webSocketStatusSubscription.unsubscribe(); }\n    }\n\n    @HostListener('window:focus', ['$event'])\n    onFocus(): void {\n        this.openDelay = false;\n        setTimeout(() => {\n            this.openDelay = true;\n        }, 5000);\n    }\n}\n","<div id=\"content\">\n\n    <section *ngIf=\"openDelay && webSocketStatus != 'Connected'\">\n        <div class=\"alert alert-danger m-3\">\n            {{webSocketStatus}}\n        </div>\n    </section>\n\n    <div class=\"m-3\">\n        <dexih-message #DexihMessage></dexih-message>\n    </div>\n\n    <router-outlet></router-outlet>\n</div>","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { Routing } from './hubs.routing';\nimport { SharedModule } from '../shared/shared.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { HubsService } from './hubs.service';\nimport { HubsComponent } from './hubs.component';\nimport { HubIndexComponent } from './hub-index/hub-index.component';\nimport { HubEditComponent } from './hub-edit/hub-edit.component';\nimport { HubsSummaryComponent} from './hubs-summary/hubs-summary.component';\nimport { ManageComponent } from './manage/manage.component';\nimport { TasksIndexComponent } from './tasks/tasks-index';\nimport { TaskStatusComponent } from './tasks/task-status';\nimport { TaskViewComponent } from './tasks/task-view';\nimport { NotificationsIndexComponent } from './notifications/notification-index';\nimport { NotificationViewComponent } from './notifications/notification-view';\nimport { RemoteAgentsComponent} from './remoteAgents/remote-agents/remote-agents.component';\nimport { HelpComponent } from './help'\nimport { RemoteAgentDownloadComponent } from './remoteAgents/remoteAgent-download';\nimport { RemoteAgentEditComponent } from './remoteAgents/remoteAgent-edit';\nimport { RemoteAgentTokenComponent} from './remoteAgents/remote-agent-token/remote-agent-token.component';\nimport { IssueEditComponent, IssueIndexComponent } from './support'\nimport { HubService } from '../+hub/hub.service';\n\n\n@NgModule({\n    imports: [\n        SharedModule,\n        Routing,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        HubsComponent,\n        HubIndexComponent,\n        HubEditComponent,\n        HubsSummaryComponent,\n        ManageComponent,\n        TasksIndexComponent,\n        TaskStatusComponent,\n        TaskViewComponent,\n        NotificationsIndexComponent,\n        NotificationViewComponent,\n        RemoteAgentsComponent,\n        RemoteAgentDownloadComponent,\n        RemoteAgentEditComponent,\n        HelpComponent,\n        RemoteAgentTokenComponent,\n        IssueEditComponent, IssueIndexComponent\n    ],\n    providers: [HubsService, HubService],\n    exports: []\n})\nexport class HubsModule {\n\n    static forRoot(): ModuleWithProviders<HubsModule> {\n        return {\n            ngModule: HubsModule,\n            providers: [HubsService, HubService]\n        };\n    }\n}\n","import { Routes, RouterModule } from '@angular/router';\nimport { HubsComponent } from './hubs.component';\nimport { HubIndexComponent } from './hub-index/hub-index.component';\nimport { HubEditComponent } from './hub-edit/hub-edit.component';\nimport { HubsSummaryComponent} from './hubs-summary/hubs-summary.component';\nimport { ManageComponent } from './manage/manage.component';\nimport { TasksIndexComponent } from './tasks/tasks-index';\nimport { TaskViewComponent } from './tasks/task-view';\nimport { NotificationsIndexComponent } from './notifications/notification-index';\nimport { NotificationViewComponent } from './notifications/notification-view';\nimport { SharedDataComponent, PreviewComponent, PreviewDashboardComponent} from '../shared/ui/sharedData';\nimport { RemoteAgentsComponent} from './remoteAgents/remote-agents/remote-agents.component';\nimport { HelpComponent } from './help';\nimport { RemoteAgentDownloadComponent } from './remoteAgents/remoteAgent-download';\nimport { RemoteAgentEditComponent } from './remoteAgents/remoteAgent-edit';\nimport { RemoteAgentTokenComponent } from './remoteAgents/remote-agent-token/remote-agent-token.component';\nimport { IssueEditComponent, IssueIndexComponent } from './support'\n\nconst hubsView: Routes = [\n    { path: '', component: HubIndexComponent, data: { pageTitle: 'Hubs View' } },\n    { path: 'hub-edit/:hubKey', component: HubEditComponent, data: { action: 'Edit', pageTitle: 'Edit Hub' } },\n    { path: 'hub-new', component: HubEditComponent, data: { action: 'New', pageTitle: 'New Hub' } },\n];\n\n// create a set of routes available from the \"hubs\" section.\nconst baseRoutes: Routes = [\n    { path: 'manage', component: ManageComponent, data: { pageTitle: 'Manage' } },\n    { path: 'sharedData', data: { pageTitle: 'Shared Data' }, children: [\n        { path: '', component: SharedDataComponent, data: { pageTitle: 'Shared Data' } },\n        { path: 'preview/:hubKey/:objectType/:objectKey', component: PreviewComponent, data: { pageTitle: 'Preview' } },\n        { path: 'previewDashboard/:hubKey/:dashboardKey', component: PreviewDashboardComponent, data: { pageTitle: 'Preview Dashboard' } },\n    ] },\n    { path: 'tasks', data: { pageTitle: 'Tasks' }, children: [\n        { path: '', component: TasksIndexComponent, data: { pageTitle: 'Tasks' } },\n        { path: 'view/:reference', component: TaskViewComponent, data: { pageTitle: 'Task' } },\n    ] },\n    { path: 'notifications', data: { pageTitle: 'Notifications' }, children: [\n        { path: '', component: NotificationsIndexComponent, data: { pageTitle: 'Notifications' } },\n        { path: 'view/:reference', component: NotificationViewComponent, data: { pageTitle: 'Notification' } },\n    ] },\n    { path: 'support', data: { pageTitle: 'Issues' }, children: [\n        { path: '', component: IssueIndexComponent, data: { pageTitle: 'Issues' } },\n        { path: 'new', component: IssueEditComponent, data: { action: 'new', pageTitle: 'Create' } },\n        { path: 'edit/:issueKey', component: IssueEditComponent, data: { action: 'edit', pageTitle: 'Edit' } },\n    ] },\n    { path: 'agents', data: { pageTitle: 'Remote Agents' }, children: [\n        { path: '', component: RemoteAgentsComponent, data: { pageTitle: 'Remote Agents' } },\n        { path: 'edit/:remoteAgentKey', component: RemoteAgentEditComponent, data: { pageTitle: 'Remote Edit' } },\n        { path: 'download', component: RemoteAgentDownloadComponent, data: {pageTitle: 'Download Agent'}},\n        { path: 'token-new', component: RemoteAgentTokenComponent, data: {action: 'New', pageTitle: 'New Token'}},\n        { path: 'token-renew/:remoteAgentKey', component: RemoteAgentTokenComponent, data: {action: 'Renew', pageTitle: 'Renew Token'}}\n    ] } ,\n    { path: 'help', component: HelpComponent, data: { pageTitle: 'Help' } },\n    { path: '', children: hubsView}\n];\n\n// insert the \"hubs\" routes once for the base, and once under the summary section to ensure the\n// breadcrumbs are accurate.\nexport const routes: Routes = [\n    {\n        path: '', component: HubsComponent,\n        children: [\n            { path: '', redirectTo: 'index' },\n            { path: 'index', data: { pageTitle: 'Hubs' }, children : [\n                { path: '', component: HubsSummaryComponent, data: { pageTitle: 'Hubs Summary' } },\n                { path: 'hubs-view', data: { pageTitle: 'Hubs View' }, children: hubsView },\n                { path: '', children: baseRoutes}\n            ] },\n            { path: '', children: baseRoutes}\n        ]\n    }\n];\n\nexport const Routing = RouterModule.forChild(routes);\n","import { AbstractControl, FormBuilder, FormControl, ValidatorFn, Validators, FormGroup } from '@angular/forms';\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { Location } from '@angular/common';\nimport { FormsService } from '../../shared/forms/forms.service';\nimport { User, UserLoginInfo } from '../../+auth/auth.models';\nimport { DexihMessageComponent } from '../../shared/ui/dexihMessage';\nimport { eLoginProvider } from '../../shared/shared.models';\n\n@Component({\n  selector: 'manage-form',\n  templateUrl: './manage.component.html',\n  providers: [FormsService]\n})\nexport class ManageComponent implements OnInit, OnDestroy {\n  @ViewChild('DexihMessage', { static: true }) public dexihMessage: DexihMessageComponent;\n\n  private _userSubscription: Subscription;\n  private action: string;\n\n  public logins: UserLoginInfo[];\n\n  public passwordForm: FormGroup;\n  public updatingPassword = false;\n  public passwordMatchError = '';\n  public passwordStrengthError = '';\n\n  public googleMessage = false;\n  public microsoftMessage = false;\n\n  constructor(\n    private authService: AuthService,\n    public formsService: FormsService,\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location) {\n  }\n\n  ngOnInit() {\n    this._userSubscription = this.authService.getUserObservable().subscribe(user => {\n      this.formsService.createDefault(user, new User());\n      this.updateLogins();\n      this.formsService.currentForm.controls.email.disable();\n      // this.formsService.currentForm.controls.userName.disable();\n\n      this.passwordForm = this.fb.group({\n        'password': ['', [\n        ]],\n        'newPassword': ['', [\n          Validators.required,\n          Validators.minLength(8),\n          Validators.maxLength(20),\n          Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$^+=!*()@%&]).{8,}$')\n        ]],\n        'confirmPassword': ['', [\n          this.duplicatePasswordValidator()\n        ]],\n      });\n\n    })\n  }\n\n  ngOnDestroy() {\n    if (this._userSubscription) { this._userSubscription.unsubscribe(); }\n  }\n\n  updateLogins() {\n    this.authService.getLoginProviders().then(result => {\n      this.logins = result;\n    });\n  }\n\n  private duplicatePasswordValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.passwordForm) {\n        let form = this.passwordForm;\n        if (form.controls.confirmPassword.dirty && form.controls.newPassword.value !== form.controls.confirmPassword.value) {\n          this.passwordMatchError = 'The passwords do not match';\n          return { 'passwordMatch': {} };\n        } else {\n          this.passwordMatchError = '';\n          return null;\n        }\n      }\n    };\n  }\n\n  public updatePassword() {\n    this.updatingPassword = true;\n    this.authService.changePassword(this.passwordForm.controls.password.value, this.passwordForm.controls.newPassword.value)\n      .then(result => {\n        this.updatingPassword = false;\n        this.dexihMessage.addSuccessMessage('The password change was successful.');\n    }).catch(reason => {\n      this.dexihMessage.addMessage(reason);\n      this.updatingPassword = false;\n    });\n  }\n\n  save() {\n    const user: User = this.formsService.currentForm.value;\n\n    this.authService.updateUserDetails(user).then(c => {\n      if (c) {\n        this.dexihMessage.addSuccessMessage('Details updated successfully');\n      } else {\n      }\n\n    }).catch(reason => {\n      this.dexihMessage.addMessage(reason);\n    })\n  }\n\n  cancel() {\n    this.authService.navigateUp();\n  }\n\n  googleLogin(forceLogin: boolean) {\n    this.dexihMessage.reset();\n\n      this.authService.googleSignIn(forceLogin).then(result => {\n          this.authService.addExternalLogin(eLoginProvider.Google, result.providerKey, result.authenticationToken).then(\n            loginResult => {\n              this.updateLogins();\n            }).catch(\n            reason => {\n              this.dexihMessage.addMessage(reason);\n            });\n        }).catch(\n          reason => {\n            this.googleMessage = reason;\n            this.dexihMessage.addErrorMessage(reason);\n          });\n  }\n\n  microsoftLogin(forceLogin: boolean)  {\n    this.dexihMessage.reset();\n\n      this.authService.microsoftSignIn(forceLogin).then(result => {\n          this.authService.addExternalLogin(eLoginProvider.Microsoft, result.providerKey, result.authenticationToken).then(\n            loginResult => {\n              this.updateLogins();\n            }).catch(\n            reason => {\n              this.dexihMessage.addMessage(reason);\n            });\n        }).catch(\n          reason => {\n            this.microsoftMessage = reason;\n            this.dexihMessage.addErrorMessage(reason);\n          });\n  }\n\n  deleteLogin(login: UserLoginInfo) {\n    this.authService.removeExternalLogin(login.loginProvider, login.providerKey);\n  }\n}\n","\n<div class=\"container\">\n\t<dexih-message #DexihMessage></dexih-message>\n\n\t<d-widget-vertical>\n    <d-widget title=\"User Details\" iconClass=\"fa fa-lg fa-fw fa-user\" [padding]=\"true\">\n        <ng-template #header>\n\t\t\t\t<d-button-save class=\"mr-1\" (click)=\"save()\" [busy]=\"formsService.formSaving\" [disabled]=\"formsService.formSaving || !formsService.hasChanged\"></d-button-save>\t\t\t\n\t\t\t\t<d-button-cancel (click)=\"cancel()\"></d-button-cancel>\t\t\t\n        </ng-template>\n\n\t\t<form *ngIf=\"formsService.currentForm\"  [formGroup]=\"formsService.currentForm\">\n\t\t\t<fieldset>\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"col-md-6\">\n\t\t\t\t\t\t<form-input label=\"User Name\" formControlName=\"userName\" placeholder=\"Enter the user name.\" iconClass=\"fa fa-list\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Email Address\" formControlName=\"email\" placeholder=\"Enter the email.\" iconClass=\"fa fa-list\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"First Name\" formControlName=\"firstName\" placeholder=\"First Name\">\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Last Name\" formControlName=\"lastName\" placeholder=\"Last Name\">\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-checkbox label=\"I want to receive news and special offers\" formControlName=\"subscription\" >\n\t\t\t\t\t</form-checkbox>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-checkbox label=\"I want to receive private notifications from other users.\" formControlName=\"notifyPrivateMessage\" >\n\t\t\t\t\t</form-checkbox>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-checkbox label=\"I want to receive critical support and issue updates.\" formControlName=\"notifySupportMessage\" >\n\t\t\t\t\t</form-checkbox>\n\t\t\t\t</section>\n\n\t\t\t</fieldset>\n\t\t</form>\n \n    </d-widget>\n    <d-widget title=\"Reset Password\" iconClass=\"fa fa-lg fa-fw fa-lock\" [padding]=\"true\" >\n        <ng-template #header>\n\t\t\t<d-button class=\"mr-1\" iconClass=\"fa fa-key\" btnClass=\"btn btn-danger\" routerLink='/auth/forgot-password'>Forgot Password</d-button>\n\t\t\t<d-button-save [disabled]=\"!passwordForm.valid\" (click)=\"updatePassword()\" [busy]=\"updatingPassword\">Update Password</d-button-save>\n        </ng-template>\n\n\t\t<form *ngIf=\"passwordForm\"  [formGroup]=\"passwordForm\">\n\t\t\t<fieldset>\n\t\t\t\t<section>\n\t\t\t\t\t<form-input label=\"Current Password\" formControlName=\"password\" type=\"password\">\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-input label=\"New Password\" formControlName=\"newPassword\" type=\"password\">\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-input label=\"Confirm New Password\" formControlName=\"confirmPassword\" type=\"password\" [errors]=\"passwordMatchError\" >\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\n\t\t\t</fieldset>\n\t\t</form>\n \n\t</d-widget>\n\t\n\t<d-widget title=\"Logins\" subTitle=\"The following login providers are available\" iconClass=\"fa fa-lg fa-fw fa-life-saver\"  [padding]=\"true\">\n\t\t<ng-template #subHeader>\n\t\t\t\t<d-button class=\"mr-1\" (click)=\"microsoftLogin(true)\" buttonClass=\"btn btn-primary\" iconClass=\"fa fa-windows\">Add Microsoft</d-button>\n\t\t\t\t<d-button (click)=\"googleLogin(true)\" buttonClass=\"btn btn-danger\" iconClass=\"fa fa-google\">Add Google</d-button>\n\t\t</ng-template>\n\n\t\t<ul class=\"list-group\">\n\t\t\t<li *ngFor=\"let login of logins\" class=\"list-group-item\">\n\t\t\t\t<div class=\"float-right\">\n\t\t\t\t\t<d-button-delete (click)=\"deleteLogin(login)\" title=\"Remove the following login\"></d-button-delete>\n\t\t\t\t</div>\n\t\t\t\t<h3>{{login.providerDisplayName}}</h3>\n\t\t\t</li>\n\t\t</ul>\n\n\t\t<section *ngIf=\"googleMessage\">\n            <div class=\"alert alert-danger\">\n              Google could not automatically sign-in due to \"{{googleMessage}}\".  \n              Click login button to open new window to login to your google account.\n              <d-button buttonClass=\"btn btn-danger\" iconClass=\"fa fa-google\" text=\"Google Login\" (click)=\"googleLogin(true)\"></d-button>\n            </div>\n          </section>\n\n          <section *ngIf=\"microsoftMessage\">\n              <div class=\"alert alert-danger\">\n                Microsoft could not automatically sign-in due to \"{{microsoftMessage}}\".  \n                Click login button to open new window to login to your microsoft account.\n                <d-button buttonClass=\"btn btn-primary\" iconClass=\"fa fa-microsoft\" text=\"Microsoft Login\" (click)=\"microsoftLogin(true)\"></d-button>\n              </div>\n\t\t</section>\n\t</d-widget>\n</d-widget-vertical>\n</div>","export * from './notification-index.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Message } from '../../../+auth/auth.models';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable, BehaviorSubject, Subscription, combineLatest} from 'rxjs';\n\n@Component({\n  selector: 'notification-index',\n  templateUrl: './notification-index.component.html',\n  styles: []\n})\nexport class NotificationsIndexComponent implements OnInit, OnDestroy {\n\n    public notifications: Message[];\n\n    showPage = false;\n    showPageMessage = 'Loading...';\n\n    columns = [\n        { name: 'success', title: 'Success', format: ''},\n        { name: 'message', title: 'Message', format: ''},\n        { name: 'value', title: 'Value', format: ''},\n    ];\n\n    private _tableData = new BehaviorSubject<Array<Message>>(null);\n    tableData: Observable<Array<Message>> = this._tableData.asObservable();\n\n    constructor(private authService: AuthService, private router: Router, private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.notifications = this.authService.getNotifications();\n    }\n\n    ngOnDestroy() {\n    }\n\n    showMessage(message: Message) {\n        this.router.navigate(['view', message.reference], {relativeTo: this.route})\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n}\n\n\n","<div class=\"container-fluid\">\n    <d-widget title=\"Notifications\" \n        iconClass=\"fa fa-lg fa-fw fa-exchange\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\n    >\n\n\t\t<d-table \n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[data]=\"notifications\"\n\t\t\t(rowClick)=\"showMessage($event)\"\n\t\t\t>\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-task=\"item\">\n\t\t\t\t\t<d-button-view (click)=\"showMessage(task)\"></d-button-view>\n\t\t\t\t</ng-template>\n\t\t\t\t\n\t\t</d-table>\n    </d-widget>\n</div>\n\n\n","export * from './notification-view.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Message } from '../../../+auth/auth.models';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable, Subscription, combineLatest} from 'rxjs';\n\n@Component({\n    selector: 'notification-view',\n    templateUrl: './notification-view.component.html',\n    styles: []\n})\nexport class NotificationViewComponent implements OnInit, OnDestroy {\n\n    private _subscription: Subscription;\n\n    public message: Message;\n\n    showPage = false;\n    showPageMessage = 'Loading...';\n    view: string;\n\n    public exceptionHidden = true;\n\n    resultChartData: Array<any>;\n\n    constructor(\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest(\n                this.route.params,\n            ).subscribe(result => {\n                let params = result[0];\n\n                let reference = params['reference'];\n\n                this.showPage = false;\n                this.showPageMessage = 'Loading...';\n\n                this.message = this.authService.getNotification(reference);\n\n                if (!this.message) {\n                    this.authService.navigateUp();\n                }\n\n            });\n        } catch (e) {\n        }\n\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    watchChanges() {\n    }\n\n}\n\n\n","<div class=\"container-fluid\">\n\t<d-widget *ngIf=\"message\" title=\"Notification\" iconClass=\"fa fa-lg fa-fw fa-bell\" [showCloseButton]=\"true\" (close)=\"close()\" [padding]=\"true\" >\n\t\t<section *ngIf=\"message\">\n\t\t\t\t<div class=\"alert  clearfix\" [class.alert-danger]=\"message.success == false\" [class.alert-success]=\"message.success == true\">\n\t\t\t\t\t{{message.message}}\n\t\t\t\t\t<div *ngIf=\"message.exceptionDetails && message.message != message.exceptionDetails\">\n\t\t\t\t\t\t<hr>\n\t\t\t\t\t\t<pre>{{message.exceptionDetails}}</pre>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\t</d-widget>\n</div>","<dexih-message #DexihMessage></dexih-message>\n\n<div *ngIf=\"remoteToken\" class=\"container\">\n    <d-widget \n\t\ttitle=\"New Agent Token\" \n        iconClass=\"fa fa-lg fa-fw fa-wifi\" \n        [padding]=\"true\"\n        [showCloseButton]=\"true\"\n        (close)=\"close()\"\n    >\n\n\n<ng-template #subHeader>\n    <label *ngIf=\"action == 'New'\" class=\"label\">A new remote agent token has been generated.  </label>\n    <label *ngIf=\"action == 'ReNew'\" class=\"label\">The token for this user/remote id has been renewed.  </label>\n    <div class=\"alert alert-info\">\n        Ensure this token is kept safe and secure.  It cannot be viewed again.  If it is lost or compromised, a new token should be created.\n    </div>\n\n</ng-template>\n\n        <section >\n            <form-textarea [showCopy]=\"true\" [showPreview]=\"false\" [hideToggle]=\"true\" [disabled]=\"true\" rows=\"1\" label=\"User\" [(ngModel)]=\"remoteToken.user\"></form-textarea>\n        </section>\n\n        <section >\n            <form-textarea [showCopy]=\"true\" [showPreview]=\"false\" [hideToggle]=\"true\" [disabled]=\"true\" rows=\"1\" label=\"RemoteAgentId\" [(ngModel)]=\"remoteToken.remoteAgentId\"></form-textarea>\n        </section>\n\n        <section >\n            <form-textarea [showCopy]=\"true\" [showPreview]=\"false\" [hideToggle]=\"true\" [disabled]=\"true\" rows=\"4\" label=\"UserToken\" [(ngModel)]=\"remoteToken.userToken\"></form-textarea>\n        </section>\n\n        <section >\n            <form-textarea [showCopy]=\"true\" [showPreview]=\"false\" [hideToggle]=\"true\" [disabled]=\"true\" rows=\"4\" label=\"AppSettings Content\" [(ngModel)]=\"appSettings\"\n            note='Copy this section over the existing items in the AppSettings section of the appsettings.json configuration file for your remote agent.'></form-textarea>\n        </section>\n        \n\n    </d-widget>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { RemoteToken } from '../../../+auth/auth.models';\nimport { FormsService } from '../../../shared/forms/forms.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { HubsService } from '../../hubs.service';\n\n@Component({\n    selector: 'remote-agent-token',\n    templateUrl: './remote-agent-token.component.html',\n    providers: [FormsService]\n})\nexport class RemoteAgentTokenComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n\n    public remoteToken: RemoteToken;\n    public appSettings: string;\n    public action: string;\n\n    constructor(\n        private route: ActivatedRoute,\n        private hubsService: HubsService,\n        private authService: AuthService) {\n    }\n\n    ngOnInit() {\n        this._subscription = combineLatest(\n            this.route.data,\n            this.route.params,\n          ).subscribe(async result => {\n            let data = result[0];\n            let params = result[1];\n            this.action = data.action;\n\n            let promise: Promise<RemoteToken>;\n\n            if (data.action === 'New') {\n                promise = this.authService.createRemoteAgent();\n            } else {\n                const remoteAgentKey = +params['remoteAgentKey'];\n                promise = this.authService.refreshRemoteAgentToken(remoteAgentKey);\n            }\n\n            promise.then(remoteToken => {\n                this.remoteToken = remoteToken;\n                this.updateAppSettings();\n            }).catch(reason => {\n                this.hubsService.addHubMessage(reason);\n                this.authService.navigateUp();\n            });\n\n          });\n    }\n\n    updateAppSettings() {\n        this.appSettings = `\"RemoteAgentId\": \"${this.remoteToken.remoteAgentId}\",\n\"User\": \"${this.remoteToken.user}\",\n\"UserToken\": \"${this.remoteToken.userToken}\",\n`\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n      }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubsService } from '../../hubs.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { DexihActiveAgent, DexihRemoteAgent, eDownloadUrlType } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n  selector: 'remoteAgents',\n  templateUrl: './remote-agents.component.html',\n  styles: []\n})\nexport class RemoteAgentsComponent implements OnInit, OnDestroy {\n\n    columns = [\n        { name: 'name', title: 'Name', format: '' },\n        { name: 'connected', title: 'Status', format: 'Text', footer: 'ipAddress'},\n        // { name: 'remoteAgentId', title: 'Remote Agent Id', format: ''},\n        { name: 'user', title: 'Owner', format: ''},\n        { name: 'version', footer: 'latestVersion', title: 'Version', format: 'Md', class: 'versionClass', tooltip: 'versionTooltip'},\n        // { name: 'lastLoginIpAddress', title: 'Last Ip', format: ''},\n        { name: 'lastLoginDateTime', title: 'Last Login', format: 'Calendar'},\n    ];\n\n    private activeAgents: DexihActiveAgent[];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n    eDownloadUrlType = eDownloadUrlType;\n\n    remoteAgents: DexihRemoteAgent[];\n\n    public cancelToken: CancelToken = new CancelToken();\n\n    private _subscription: Subscription;\n\n    constructor(\n        private hubsService: HubsService,\n        private authService: AuthService,\n        private hubService: HubsService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n            this._subscription = this.authService.getRemoteAgentsObservable().subscribe(remoteAgents => {\n                if (remoteAgents) {\n                    this.remoteAgents = remoteAgents;\n                    this.refreshData();\n                }\n            });\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) {this._subscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    refreshData() {\n        let data = [];\n        this.remoteAgents.forEach(remoteAgent => {\n            let activeAgent = remoteAgent['activeAgents'] && remoteAgent['activeAgents'].length > 0 ? remoteAgent['activeAgents'][0] : null;\n\n            if (activeAgent) {\n                data.push({\n                    remoteAgentKey: remoteAgent.remoteAgentKey,\n                    connected: 'active',\n                    name: activeAgent ? activeAgent.name : ( remoteAgent ? remoteAgent.name : 'Unknown') ,\n                    user: activeAgent.user,\n                    dataPrivacyStatus: activeAgent.dataPrivacyStatus,\n                    isEncrypted: activeAgent.dataPrivacyStatus,\n                    ipAddress: activeAgent.ipAddress,\n                    restrictIp: remoteAgent.restrictIp,\n                    ipAddresses: remoteAgent.ipAddresses,\n                    lastLoginIpAddress: remoteAgent.lastLoginIpAddress,\n                    lastLoginDateTime: remoteAgent.lastLoginDateTime,\n                    remoteAgentId: remoteAgent.remoteAgentId,\n                    downloadUrls: activeAgent.downloadUrls,\n                    instanceId: activeAgent.instanceId,\n                    version: activeAgent.version,\n                    latestVersion: 'Latest(' + activeAgent.latestVersion + ')',\n                    versionTooltip: (activeAgent.upgradeAvailable ? 'Upgrade is available.' : 'Agent is up to date.'),\n                    versionClass: (activeAgent.upgradeAvailable ? 'dexih-error-text' : ''),\n                    activeAgent: activeAgent\n                });\n            } else {\n                data.push({\n                    remoteAgentKey: remoteAgent.remoteAgentKey,\n                    connected: 'not connected',\n                    name: remoteAgent.name,\n                    user: '',\n                    dataPrivacyStatus: '',\n                    isEncrypted: '',\n                    ipAddress: '',\n                    restrictIp: remoteAgent.restrictIp,\n                    ipAddresses: remoteAgent.ipAddresses,\n                    lastLoginIpAddress: remoteAgent.lastLoginIpAddress,\n                    lastLoginDateTime: remoteAgent.lastLoginDateTime,\n                    remoteAgentId: remoteAgent.remoteAgentId,\n                    downloadUrls: [],\n                    instanceId: null,\n                    version: '',\n                    latestVersion: '',\n                    versionTooltip: '',\n                    versionClass: '',\n                    activeAgent: null\n                });\n            }\n        });\n\n        this._tableData.next(data);\n    }\n\n    test(items: DexihActiveAgent[], cancelToken: CancelToken) {\n        items.forEach(item => {\n            let agent = <DexihActiveAgent>item;\n            agent.downloadUrls.forEach((downloadUrl, index) => {\n                let url = downloadUrl.url + '/ping';\n\n                this.authService.getFromExternal<any>(url, 'Testing remote agent connectivity...', cancelToken).then(result => {\n                    if (result && result.status === 'alive') {\n                        downloadUrl['testStatus'] = 'success';\n                    } else {\n                        downloadUrl['testStatus'] = 'error';\n                        downloadUrl['testMessage'] = 'Server returned invalid message.';\n                    }\n                }).catch(reason => {\n                    downloadUrl['testStatus'] = 'error';\n                    downloadUrl['testMessage'] = reason.message;\n                });\n            })\n        });\n    }\n\n    removeUserTokens(items) {\n        this.authService.removeUserTokens(items.map(c => c.remoteAgentKey))\n        .then( result => this.refreshData())\n        .catch(reason => this.hubsService.addHubClientErrorMessage(reason, 'Remove tokens'));\n    }\n\n    refreshUserToken(item) {\n        // this.authService.refreshRemoteAgentToken(item.remoteAgentKey).then( result => this.refreshData());\n        this.router.navigate(['token-renew', item.remoteAgentKey], {relativeTo: this.route});\n    }\n\n    edit(item) {\n        this.router.navigate(['edit', item.remoteAgentKey], {relativeTo: this.route});\n    }\n\n    restartAgents(items) {\n        let activeAgents = items.filter(c => c.activeAgent).map(c => c.activeAgent);\n\n        if ( activeAgents.length === 0) {\n            this.hubService.addHubErrorMessage('No active agents were selected.')\n            return;\n        }\n\n        activeAgents.forEach(activeAgent => {\n            this.hubsService.restartAgent(activeAgent, false, this.cancelToken);\n        });\n    }\n\n    refresh() {\n        this.authService.pingRemoteAgents();\n    }\n}\n","<div class=\"container-fluid\">\n    <d-widget title=\"Connected Agents\" \n        iconClass=\"fa fa-lg fa-fw fa-life-saver\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n    >\n\t\t<d-table \n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[dataObservable]=\"tableData\"\n\t\t\trowStatusHeading=\"Direct Data Connections\"\n\t\t\t(rowClick)=\"edit($event)\"\n\t\t\t>\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<d-button-dropdown *ngIf=\"items && items.length >= 0\" buttonClass=\"btn-primary\" iconClass=\"fa fa-table\"\n\t\t\t\t\t\t[text]=\"items.length > 1 ? 'Agents' : 'Agent'\" [pullRight]=\"pullRight\">\n\t\t\t\t\t\t<li><a class=\"dropdown-item\" [routerLink]=\"['token-new']\"\n\t\t\t\t\t\t\t\ttitle=\"Create a new remote agent token.\"><i class=\"fa fa-file-o\"></i> New Token</a></li>\n\t\t\t\t\t\t<li><a class=\"dropdown-item\" [routerLink]=\"['download']\" title=\"Configure and download a new remote agent\"><i\n\t\t\t\t\t\t\t\t\tclass=\"fa fa-download\"></i> New Agent</a></li>\n\t\t\t\t\t\t<ng-template [ngIf]=\"items.length == 1\">\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a class=\"dropdown-item\" [routerLink]=\"['edit', items[0].remoteAgentKey]\"><i class=\"fa fa-edit\"></i>\n\t\t\t\t\t\t\t\t\tEdit</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a class=\"dropdown-item\" [routerLink]=\"['token-renew', items[0].remoteAgentKey]\"><i\n\t\t\t\t\t\t\t\t\t\tclass=\"fa fa-refresh\"></i> Refresh Token</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ng-template>\n\t\t\t\t\t\t<ng-template [ngIf]=\"items.length > 0\">\n\t\t\t\t\t\t\t<li><a class=\"dropdown-item\" (click)=\"test(items)\" title=\"Test the connectivity of the remote agents.\"><i\n\t\t\t\t\t\t\t\t\t\tclass=\"fa fa-thumbs-o-up\"></i> Test</a></li>\n\t\t\t\t\t\t\t<li><a class=\"dropdown-item\" (click)=\"restartAgents(items)\" title=\"Restart the selected agents\"><i\n\t\t\t\t\t\t\t\t\t\tclass=\"fa fa-refresh\"></i> Restart</a></li>\n\t\t\t\t\t\t\t<li><a class=\"dropdown-item\" (click)=\"removeUserTokens(items)\" title=\"Revoke the selected tokens\"><span\n\t\t\t\t\t\t\t\t\t\tclass=\"text-danger\"><i class=\"fa fa-ban\"></i> Revoke Tokens</span></a></li>\n\t\t\t\t\n\t\t\t\t\t\t</ng-template>\n\t\t\t\t\t</d-button-dropdown>\n\t\t\t\t\n\t\t\t\t\t<d-button-refresh class=\"ml-1\" (click)=\"refresh()\" text=\"Refresh Agents\" title=\"Refresh the active agents\">\n\t\t\t\t\t</d-button-refresh>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #rowStatus select=\"rowStatus\" let-item=\"item\">\n\t\t\t\t\t\t<button *ngIf=\"item.downloadUrls?.length > 0\" class=\"btn btn-primary btn-sm\" (click)=\"test([item])\">test</button>\n\t\t\t\t\t\t<div class=\"list-group mt-1\">\n\t\t\t\t\t\t\t\t<div class=\"list-group-item\" *ngFor=\"let url of item.downloadUrls\">\n\t\t\t\t\t\t\t\t\t{{eDownloadUrlType[url.downloadUrlType]}}: <a [href]=\"url.url + '/ping'\" target=\"_blank\">Open</a>\n\t\t\t\t\t\t\t\t\t<button *ngIf=\"url.testStatus == 'error'\" class=\"btn btn-danger btn-sm float-right\" [title]=\"url.testMessage\">Failed</button>\n\t\t\t\t\t\t\t\t\t<button *ngIf=\"url.testStatus == 'success'\" class=\"btn btn-success btn-sm float-right\" [title]=\"url.testMessage\">Success</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\t\n\t\t\t\t</ng-template>\n\t\t</d-table>\n\t</d-widget>\n\t\n\t<dexih-help class=\"m-3\" title=\"Remote Agent Installation\" path=\"/assets/help/intro/remote_agent.md\"></dexih-help>\n</div>\n\n","export * from './remoteAgent-download.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { DexihHubAuth } from '../../../+auth/auth.models';\nimport { HubsService } from '../../hubs.service';\nimport { FormsService } from '../../../shared/forms/forms.service';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { logLevel, eEnvironment, RemoteAgentSettings, logLevelItems, RemoteAgentSettingsSubset, eEnvironmentItems } from '../../../shared/shared.models';\n\n@Component({\n  selector: 'dexih-remoteAgent-download-form',\n  templateUrl: './remoteAgent-download.component.html',\n  providers: [FormsService]\n})\nexport class RemoteAgentDownloadComponent implements OnInit, OnDestroy {\n  public pageTitle: string;\n\n  public downloading = false;\n  public refreshingEncryptionKey = false;\n  public refreshingUserToken = false;\n\n  public logLevelItems = logLevelItems;\n  public eEnvironmentItems = eEnvironmentItems.filter(c => c.key > 0);\n\n  public embedUserName = true;\n  public logLevel: logLevel = logLevel.Information;\n  public environment: eEnvironment = eEnvironment.Windows;\n  public hubs: DexihHubAuth[]\n\n  constructor(\n    private hubsService: HubsService,\n    private authService: AuthService,\n    public formsService: FormsService,\n    private fb: FormBuilder,\n    ) {\n   }\n\n  ngOnInit() {\n        this.hubs = this.authService.getHubs()\n        let remoteApplicationSettings = new RemoteAgentSettingsSubset();\n        this.remoteAgentSettings(remoteApplicationSettings);\n        this.logLevel = logLevel.Information;\n  }\n\n  ngOnDestroy() {\n  }\n\n  cancel() {\n    this.authService.navigateUp();\n  }\n\n  download() {\n    if (this.formsService.currentForm.valid) {\n      this.downloading = true;\n      this.hubsService.downloadRemoteAgent(this.embedUserName, this.environment, this.logLevel,\n          this.formsService.currentForm.value).then(result => {\n          this.downloading = false;\n          this.hubsService.addHubSuccessMessage('Download successful.');\n      }).catch(reason => {\n          this.downloading = false;\n          this.hubsService.addHubMessage(reason);\n      });\n    } else {\n      this.formsService.showErrors();\n    }\n  }\n\n  downloadRemoteSettings() {\n    if (this.formsService.currentForm.valid) {\n      this.downloading = true;\n      this.hubsService.downloadRemoteSettings(this.embedUserName, this.environment, this.logLevel,\n          this.formsService.currentForm.value).then(result => {\n          this.downloading = false;\n          this.hubsService.addHubSuccessMessage('Download successful.');\n      }).catch(reason => {\n          this.downloading = false;\n          // this.hubsService.addHubErrorMessage(reason);\n      });\n    } else {\n      this.formsService.showErrors();\n    }\n  }\n\n  generateEncryptionKey() {\n    this.refreshingEncryptionKey = true;\n\n    this.authService.getRandomEncryptionKey().then(result => {\n      this.formsService.currentForm.controls.encryptionKey.setValue(result);\n      this.refreshingEncryptionKey = false;\n    }).catch(reason => {\n      this.hubsService.addHubErrorMessage(reason);\n      this.refreshingEncryptionKey = false;\n    });\n  }\n\n  generateUserToken() {\n    this.refreshingUserToken = true;\n\n    this.authService.getUserToken().then(result => {\n      this.formsService.currentForm.controls.userToken.setValue(result.userToken);\n      this.formsService.currentForm.controls.remoteAgentId.setValue(result.remoteAgentId);\n      this.refreshingUserToken = false;\n    }).catch(reason => {\n      this.hubsService.addHubErrorMessage(reason);\n      this.refreshingUserToken = false;\n    });\n  }\n\n  public remoteAgentSettings(remoteAgent: RemoteAgentSettingsSubset) {\n    const remoteAgentForm = this.fb.group({\n      'name': [remoteAgent.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n      ]],\n      'encryptionKey': [remoteAgent.encryptionKey, [\n        Validators.required,\n      ]]\n    }\n    );\n\n    this.formsService.addMissing(remoteAgent, remoteAgentForm, new RemoteAgentSettingsSubset());\n    this.formsService.clearFormSubscriptions();\n    this.formsService.startForm(remoteAgentForm);\n  }\n\n\n}\n","<div class=\"container\">\n\t<d-widget title=\"Download Agent\" iconClass=\"fa fa-lg fa-fw fa-download\" [showCloseButton]=\"true\"\n\t\t(close)=\"cancel()\" [padding]=\"true\">\n\t\t<ng-template #header>\n\t\t\t<d-button-download class=\"mr-1\" [busy]=\"downloading\" (click)=\"!downloading && download()\"\n\t\t\t\ttext=\"Download\"></d-button-download>\n\t\t\t<d-button iconClass=\"fa fa-wrench\" class=\"mr-1\" [busy]=\"downloading\"\n\t\t\t\t(click)=\"!downloading && downloadRemoteSettings()\" text=\"Settings File\"></d-button>\n\t\t\t<d-button-cancel (click)=\"!downloading && cancel()\"></d-button-cancel>\n\t\t</ng-template>\n\n\t\t<form *ngIf=\"formsService.currentForm\" [formGroup]=\"formsService.currentForm\">\n\t\t\t<fieldset>\n\t\t\t\t<section>\n\t\t\t\t\t<form-input label=\"Remote Agent Name\" formControlName=\"name\" placeholder=\"Enter the name.\"\n\t\t\t\t\t\ticonClass=\"fa fa-list\" [errors]=\"formsService.formErrors.name\">\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-select label=\"Operating System\" [(ngModel)]=\"environment\"\n\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" [items]=\"eEnvironmentItems\" itemKey=\"key\" itemName=\"name\"\n\t\t\t\t\t\t[enableFilter]=\"false\" note='The operating system that remote agent will be executed on.'>\n\t\t\t\t\t</form-select>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-input label=\"Encryption Key\" formControlName=\"encryptionKey\"\n\t\t\t\t\t\tplaceholder=\"Encryption key (blank will auto-generate)\" [autocapitalize]=\"on\" iconClass=\"fa fa-key\"\n\t\t\t\t\t\t[errors]=\"formsService.formErrors.encryptionKey\"\n\t\t\t\t\t\tnote=\"Encryption key is used to encrypt secure fields and connection passwords.  Note: this key is not retained by the integration hub, and if lost encrypted data can not be restored.\">\n\t\t\t\t\t\t( <a href=\"javascript:void(0)\" *ngIf=\"refreshingEncryptionKey == false\"\n\t\t\t\t\t\t\t(click)=\"generateEncryptionKey()\"> <i class=\"fa fa-refresh\"></i> Generate Random Key </a>\n\t\t\t\t\t\t<span *ngIf=\"refreshingEncryptionKey == true\"> <i class=\"fa fa-spin fa-refresh\"></i>\n\t\t\t\t\t\t\tRefreshing... please wait </span>\n\t\t\t\t\t\t)\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Auto-login using current user.\" [(ngModel)]=\"embedUserName\"\n\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Auto-upgrade when new versions of the remote agent become available.\"\n\t\t\t\t\t\t\tformControlName=\"autoUpgrade\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Allow beta and pre-releases.\" formControlName=\"preRelease\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Allow data and files to be uploaded to the remote agent.\"\n\t\t\t\t\t\t\tformControlName=\"allowUpload\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox\n\t\t\t\t\t\t\tlabel=\"Allow data and files to be downloaded (including data previews) from the remote agent.\"\n\t\t\t\t\t\t\tformControlName=\"allowDownload\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-select label=\"Logging Level\" [(ngModel)]=\"logLevel\" [ngModelOptions]=\"{standalone: true}\"\n\t\t\t\t\t\t[items]=\"logLevelItems\" itemKey=\"key\" itemName=\"name\" [enableFilter]=\"false\"\n\t\t\t\t\t\tnote='The level of detail to be included in the diagnostic logs.'>\n\t\t\t\t\t</form-select>\n\t\t\t\t</section>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Local Upload/Download Port\" formControlName=\"downloadPort\"\n\t\t\t\t\t\t\tplaceholder=\"Enter the upload/download port\"\n\t\t\t\t\t\t\tnote='The local port for the remote agent to use for upload/download operations.'>\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"External Upload/Download Url\" formControlName=\"externalDownloadUrl\"\n\t\t\t\t\t\t\tnote='The url which can be used to access the upload/download operations on the remote agent.  e.g. https://10.10.10.10:33944.'>\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Include plugin for Oracle databases (~4MB download)\" formControlName=\"oracle\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Include plugin for DB2 databases (~30MB download)\" formControlName=\"dB2\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Include plugin for Mongo databases  (~4MB download)\" formControlName=\"mongo\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Include plugin for Excel files (~3MB download)\" formControlName=\"excel\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Include plugin for Machine Learning Functions (~32-40MB download)\" formControlName=\"mLNet\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Allow data access through the Local Area Network (LAN).\"\n\t\t\t\t\t\t\tformControlName=\"allowLanAccess\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Allow data access through the Internet.\"\n\t\t\t\t\t\t\tformControlName=\"allowExternalAccess\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Allow data access through an internet based Proxy Server.\"\n\t\t\t\t\t\t\tformControlName=\"allowProxy\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Enforce Https (SSL encrypted connections).\"\n\t\t\t\t\t\t\tformControlName=\"enforceHttps\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Automatically attempt to create an SSL certificate (used for encryption).\"\n\t\t\t\t\t\t\tformControlName=\"autoGenerateCertificate\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Allow files to be managed on local file system.\"\n\t\t\t\t\t\t\tformControlName=\"allowLocalFiles\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox *ngIf=\"formsService.currentForm.controls.allowLocalFiles.value\"\n\t\t\t\t\t\t\tlabel=\"Allow all remote agent paths to be available.\" formControlName=\"allowAllPaths\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<section\n\t\t\t\t\t*ngIf=\"formsService.currentForm.controls.allowLocalFiles.value && !formsService.currentForm.controls.allowAllPaths.value\">\n\t\t\t\t\t<form-tags label=\"Allowed root paths for local file management.\" formControlName=\"allowedPaths\"\n\t\t\t\t\t\ticonClass=\"fa fa-list\" [errors]=\"formsService.formErrors.allowedPaths\"\n\t\t\t\t\t\tnote=\"The root directories which can be accessed when managing flat files.   All directories below the specified root directories will be available.\">\n\t\t\t\t\t</form-tags>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-checkbox label=\"Allow all hubs to be available.\" formControlName=\"allowAllHubs\">\n\t\t\t\t\t</form-checkbox>\n\t\t\t\t</section>\n\n\t\t\t\t<section *ngIf=\"!formsService.currentForm.controls.allowAllHubs.value\">\n\t\t\t\t\t<form-tags-dropdown label=\"Hubs allowed by the remote agent.\" formControlName=\"allowedHubs\"\n\t\t\t\t\t\t[items]=\"hubs\" itemKey=\"hubKey\" itemName=\"name\" iconClass=\"fa fa-list\"\n\t\t\t\t\t\t[errors]=\"formsService.formErrors.allowedHubs\" [returnKeys]=\"true\">\n\t\t\t\t\t</form-tags-dropdown>\n\t\t\t\t</section>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Alerts Smtp Server\" formControlName=\"smtpServer\"\n\t\t\t\t\t\t\tplaceholder=\"Alerts Smtp Server\"\n\t\t\t\t\t\t\tnote='Enter the Smtp Server name to use to send alert emails.'>\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input type=\"number\" label=\"Smtp Port Number\" formControlName=\"smtpPort\"\n\t\t\t\t\t\t\tnote='The port number to for tme Smtp Server'>\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Alerts Smtp UserName\" formControlName=\"smtpUserName\"\n\t\t\t\t\t\t\tplaceholder=\"Alerts Smtp Server\"\n\t\t\t\t\t\t\tnote='Enter the Smtp user name to use to send alert emails.'>\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Smtp Password\" formControlName=\"smtpPassword\"\n\t\t\t\t\t\t\tnote='The Smtp password'>\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Alerts From Email\"\n\t\t\t\t\t\t\tformControlName=\"fromEmail\" note='Email address listed \"From\" when sending alerts.'>\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox\n\t\t\t\t\t\t\tlabel=\"Smpt Server Requires SSL encryption.\" formControlName=\"enableSsl\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Send alert on startup and shutdown.\"\n\t\t\t\t\t\t\tformControlName=\"alertOnShutdown\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox\n\t\t\t\t\t\t\tlabel=\"Send alert on critical remote agent errors.\" formControlName=\"alertOnCritical\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<section>\n\t\t\t\t<form-tags label=\"Email addresses to send the bcc alerts to.\" formControlName=\"adminEmails\"\n\t\t\t\t\ticonClass=\"fa fa-email\" \n\t\t\t\t\tnote=\"A set of emails that any alerts will be bcc'd to.\">\n\t\t\t\t</form-tags>\n\t\t\t</section>\n\t\t\t\t\n\t\t\t</fieldset>\n\t\t</form>\n\t</d-widget>\n\n\t<dexih-help class=\"m-3\" title=\"Remote Agent Installation\" path=\"/assets/help/intro/remote_agent.md\"></dexih-help>\n\n</div>","export * from './remoteAgent-edit.component';\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { FormsService } from '../../../shared/forms/forms.service';\nimport { HubsService } from '../../hubs.service';\nimport { FormBuilder } from '@angular/forms';\nimport { DexihRemoteAgent } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'remote-agents',\n    templateUrl: './remoteAgent-edit.component.html',\n    providers: [FormsService]\n})\nexport class RemoteAgentEditComponent implements OnInit, OnDestroy {\n    @Input() public hubKey: number;\n\n    private _subscription: Subscription;\n\n    private remoteAgentKey: number;\n    private remoteAgentHubKey: number;\n\n    remoteAgents: DexihRemoteAgent[];\n\n    ipAddress: string;\n\n    constructor(\n        private authService: AuthService,\n        private hubsService: HubsService,\n        public formsService: FormsService,\n        private fb: FormBuilder,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.authService.getRemoteAgentsObservable(),\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.remoteAgents = result[2];\n\n                if (!this.remoteAgents) {\n                    return;\n                }\n\n                this.remoteAgentKey = +params['remoteAgentKey'];\n\n                this.hubsService.remoteAgents().then(remoteAgents => {\n                    let remoteAgent = this.remoteAgents.find(c => c.remoteAgentKey === this.remoteAgentKey);\n\n                    const remoteAgentForm = this.fb.group({});\n                    this.formsService.addMissing(remoteAgent, remoteAgentForm, new DexihRemoteAgent());\n                    remoteAgentForm.controls.name.disable();\n                    remoteAgentForm.controls.remoteAgentId.disable();\n                    this.formsService.clearFormSubscriptions();\n                    this.formsService.startForm(remoteAgentForm);\n                });\n            });\n        } catch (e) {\n            this.hubsService.addHubClientErrorMessage(e, 'Remote Agent Edit');\n        }\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    save() {\n        let form = this.formsService.currentForm;\n        let remoteAgent = form.value;\n        remoteAgent.name = form.controls.name.value;\n        remoteAgent.remoteAgentId = form.controls.remoteAgentId.value;\n        this.authService.saveRemoteAgent(this.formsService.currentForm.value).then(result => {\n            this.hubsService.addHubSuccessMessage('The remote agent was updated successfully.');\n            this.authService.pingRemoteAgents();\n        });\n    }\n\n    addCurrentIp() {\n        if (this.ipAddress) {\n            let form = this.formsService.currentForm;\n            let ipAddressesControl = form.controls.ipAddresses;\n            let ipAddresses = <string[]> ipAddressesControl.value;\n\n            if (ipAddresses.findIndex(c => c === this.ipAddress) < 0) {\n                ipAddresses.push(this.ipAddress);\n                ipAddressesControl.setValue(ipAddresses);\n            }\n        }\n\n    }\n}\n","<dexih-message #DexihMessage></dexih-message>\n\n<div class=\"container\">\n    <d-widget \n\t\ttitle=\"Edit Agent\" \n        iconClass=\"fa fa-lg fa-fw fa-database\" \n        [padding]=\"true\"\n        [showCloseButton]=\"true\"\n        (close)=\"close()\"\n    >\n        <ng-template #header>\n            <d-button-save class=\"mr-1\" (click)=\"save()\"></d-button-save>\n            <d-button-cancel (click)=\"close()\"></d-button-cancel>\n        </ng-template>\n\n        <form *ngIf=\"formsService.currentForm\"  [formGroup]=\"formsService.currentForm\">\n            <fieldset>\n                    <section >\n                        <form-input label=\"Agent name\" note=\"This can only be changed on the remote agent settings file.\" formControlName=\"name\" iconClass=\"fa fa-comment\"></form-input>\n                    </section>\n                    <section >\n                        <form-input label=\"Remote Agent Id\" note=\"This can only be changed on the remote agent settings file.\" formControlName=\"remoteAgentId\" iconClass=\"fa fa-comment\"></form-input>\n                    </section>\n    \n                <section>\n\t\t\t\t\t<form-checkbox label=\"Allow data sharing through the agent via other hubs or through the API.\" formControlName=\"allowExternalConnect\" >\n\t\t\t\t\t</form-checkbox>\n                </section>\n\n                <section>\n\t\t\t\t\t<form-checkbox label=\"Restrict remote agent ip addresses.\" formControlName=\"restrictIp\" >\n\t\t\t\t\t</form-checkbox>\n                </section>\n\n                <section *ngIf=\"formsService.currentForm.controls.restrictIp.value\">\n                    <form-tags label=\"Restricted IP Addresses\" formControlName=\"ipAddresses\" placeholder=\"Enter the IP Address.\"\n                        note=\"List of Ip Addresses.  The remote agent only be authorized for this hub if originating from one of the listed ip addresses.\">\n                        <span *ngIf=\"ipAddress\">\n                        ( <a href=\"javascript:void(0)\" (click)=\"addCurrentIp()\"> <i class=\"fa fa-refresh\"></i> Add Current ({{ipAddress}}) </a>)\n                    </span>\n\t\t\t\t    </form-tags>\n                </section>\n            </fieldset>\n        </form>\n\n    </d-widget>\n</div>\n","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { CancelToken } from '../../../+auth/auth.models';\nimport { DexihMessageComponent } from '../../../shared/ui/dexihMessage';\nimport { eSharedAccessItems, DexihIssue, eIssueTypeItems, eIssueSeverityItems, eIssueStatusItems, eIssueCategoryItems } from '../../../shared/shared.models';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n@Component({\n\n  selector: 'issue-edit-form',\n  templateUrl: './issue-edit.component.html'\n})\nexport class IssueEditComponent implements OnInit, OnDestroy {\n  @ViewChild('DexihMessage', { static: true }) public dexihMessage: DexihMessageComponent;\n\n  private _subscription: Subscription;\n  private _valueChangesSubscription: Subscription;\n\n  action: string;\n  pageTitle: string;\n\n  issue: DexihIssue;\n\n  eIssueTypeItems = eIssueTypeItems;\n  eIssueSeverityItems = eIssueSeverityItems;\n  eIssueStatusItems = eIssueStatusItems;\n  eIssueCategoryItems = eIssueCategoryItems;\n\n  SharedAccessItems = eSharedAccessItems.filter(c => c.key > 0);\n\n  generatingKey = false;\n  saving = false;\n  hasChanged = false;\n  showAllErrors = false;\n\n  disable = false;\n\n  mainForm: FormGroup;\n  newComment: string;\n  subTitle: string;\n\n  isNew = true;\n\n  formErrors = {\n    'name': '',\n    'description': '',\n  };\n\n  validationMessages = {\n    'name': {\n      'required': 'Name is required.',\n      'minlength': 'Name must be at least 4 characters long.',\n      'maxlength': 'Name cannot be more than 50 characters long.',\n      'duplicateHubName': 'Name cannot be the same as an existing hub name.'\n    },\n    'description': {\n      'required': 'Description is required.',\n    },\n  };\n\n  supportOptions = [\n    {name: 'Forums', icon: 'fa fa-smile-o', link: 'https://dexih.mn.co/feed', description: 'Use the community forums for questions and other integration hub discussion.'},\n    {name: 'Twitter', icon: 'fa fa-twitter', link: 'https://twitter.com/dataexperts', description: 'Send messages to our twitter for quick short queries and comments.'},\n    {name: 'YouTube', icon: 'fa fa-youtube', link: 'https://www.youtube.com/channel/UCUQQ_sVuFti-xYvKtfLJNkg', description: 'Refer to our youtube channel for video tutorials.'},\n    {name: 'Features / Issues', icon: 'fa fa-github', link: 'https://github.com/DataExperts/Dexih.App.UI', description: 'We are an open source platform.  Raise feature requests and bugs on our github pages.'}\n  ];\n\n  private cancelToken = new CancelToken();\n\n  constructor(\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private fb: FormBuilder\n  ) {\n  }\n\n  ngOnInit() {\n\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n      ).subscribe(result => {\n        let data = result[0];\n        let params = result[1];\n\n        this.action = data['action'];\n        this.pageTitle = data['pageTitle'];\n\n        if (this.action === 'new') {\n          this.issue = new DexihIssue();\n          this.buildForm();\n          this.isNew = true;\n          this.disable = false;\n        } else if (this.action === 'edit') {\n          let key = + params['issueKey'];\n          this.isNew = false;\n          this.authService.getIssue(key, this.cancelToken).then(issue => {\n            this.issue = issue;\n            this.subTitle = 'Updated by ' + issue.userName + ' - ' + moment(issue.updateDate).calendar();\n            this.buildForm();\n\n            if (this.authService.getUser().isAdmin) {\n              this.disable = false;\n            } else {\n              this.disable = true;\n            }\n          });\n        }\n      });\n    } catch (e) {\n      this.dexihMessage.addErrorMessage(e.message);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._valueChangesSubscription) { this._valueChangesSubscription.unsubscribe(); }\n    this.cancelToken.cancel();\n  }\n\n  save() {\n    this.dexihMessage.reset();\n    this.saving = true;\n    Object.assign(this.issue, this.mainForm.value);\n    this.authService.saveIssue(this.issue)\n      .then(() => {\n        this.saving = false;\n        this.dexihMessage.addSuccessMessage('Issue created successfully.');\n        this.cancel();\n      }).catch(reason => {\n        this.dexihMessage.addMessage(reason);\n        this.saving = false;\n      });\n  }\n\n  saveComment() {\n    this.dexihMessage.reset();\n    this.saving = true;\n    this.authService.addIssueComment(this.issue.key, this.newComment)\n      .then(() => {\n        this.saving = false;\n        this.dexihMessage.addSuccessMessage('Issue comment added successfully.');\n        this.cancel();\n      }).catch(reason => {\n        this.dexihMessage.addMessage(reason);\n        this.saving = false;\n      });\n  }\n\n  cancel() {\n    this.authService.navigateUp();\n  }\n\n  buildForm(): void {\n    this.mainForm = this.fb.group({\n      'key': [{value: this.issue.key, disabled: this.disable}, []],\n      'name': [{value: this.issue.name, disabled: this.disable}, [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(50),\n      ]\n      ],\n      'description': [{value: this.issue.description, disabled: this.disable}, [\n        Validators.required,\n      ] ],\n      'type': [{value: this.issue.type, disabled: this.disable}, []],\n      'category': [{value: this.issue.category, disabled: this.disable}, []],\n      'severity': [{value: this.issue.severity, disabled: this.disable}, []],\n      'isPrivate': [{value: this.issue.isPrivate, disabled: this.disable}, []],\n      'updateDate': [{value: this.issue.updateDate, disabled: true}, []],\n      'userName': [{value: this.issue.userName, disabled: true}, []],\n      'issueStatus': [{value: this.issue.issueStatus, disabled: false}, []],\n      'gitHubLink': [{value: this.issue.gitHubLink, disabled: false}, []],\n      'dexihIssueComments': this.fb.array(this.issue.dexihIssueComments.map(c => {\n        return this.fb.group({\n          'comment': {value: c.comment, disabled: this.disable},\n          'userName': [{value: c.userName, disabled: true}, []],\n          'updateDate': {value: c.updateDate, disabled: true}\n        });\n      }))\n    });\n\n    if (this._valueChangesSubscription) { this._valueChangesSubscription.unsubscribe(); }\n    this._valueChangesSubscription = this.mainForm.valueChanges.subscribe(() => this.onValueChanged());\n    this.onValueChanged(); // (re)set validation messages now\n\n    this.hasChanged = false;\n  }\n\n  onValueChanged() {\n    if (!this.mainForm) { return; }\n    const form = this.mainForm;\n\n    this.hasChanged = true;\n\n    for (const field of Object.keys(this.formErrors)) {\n      // clear previous error message (if any)\n      this.formErrors[field] = '';\n      const control = form.get(field);\n\n      if (control && (control.dirty || this.showAllErrors) && !control.valid) {\n        const messages = this.validationMessages[field];\n        for (const key of Object.keys(control.errors)) {\n          this.formErrors[field] += messages[key] + ' ';\n        }\n      }\n    }\n  }\n}\n","<div class=\"container\">\n\t<dexih-message #DexihMessage></dexih-message>\n\n\t<d-widget *ngIf=\"mainForm\" iconClass=\"fa fa-ticket\" title=\"Support\">\n\t\t<support-options [isExpanded]=\"false\"></support-options>\n\n\t\t<d-widget-section \n\t\t\ttitle=\"Raise Issue\" \n\t\t\t[subTitle]=\"subTitle\"\n\t\t\t[showExpandButton]=\"true\"\n\t\t\ticonClass=\"fa fa-lg fa-fw fa-comments\" [padding]=\"true\">\n\t\t\t<ng-template #header>\n\t\t\t\t<d-button-save class=\"mr-1\" (click)=\"!saving && !mainForm.pristine && save()\"\n\t\t\t\t\t[disabled]=\"saving || mainForm.pristine\" [busy]=\"saving\"></d-button-save>\n\t\t\t\t<d-button-cancel (click)=\"!saving && cancel()\" [disabled]=\"saving\"></d-button-cancel>\n\t\t\t</ng-template>\n\n\t\t\t<form id=\"edit-form\" [formGroup]=\"mainForm\">\n\t\t\t\t<fieldset>\n\t\t\t\t\t\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<form-input label=\"Title\" formControlName=\"name\" placeholder=\"Title\" iconClass=\"fa fa-life-ring\"\n\t\t\t\t\t\t\t[errors]=\"formErrors.name\">\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t<form-select label=\"Type\" formControlName=\"type\" iconClass=\"fa fa-life-ring\"\n\t\t\t\t\t\t\t\t[items]=\"eIssueTypeItems\" itemKey=\"key\" itemName=\"description\">\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t<form-select label=\"Severity\" formControlName=\"severity\" iconClass=\"fa fa-life-ring\"\n\t\t\t\t\t\t\t\t[items]=\"eIssueSeverityItems\" itemKey=\"key\" itemName=\"description\">\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t<form-select label=\"Category\" formControlName=\"category\" iconClass=\"fa fa-life-ring\"\n\t\t\t\t\t\t\t\t[items]=\"eIssueCategoryItems\" itemKey=\"key\" itemName=\"description\">\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t<form-select label=\"Status\" formControlName=\"issueStatus\" iconClass=\"fa fa-circle-notch\"\n\t\t\t\t\t\t\t\t[items]=\"eIssueStatusItems\" itemKey=\"key\" itemName=\"description\">\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<section >\n\t\t\t\t\t\t<form-checkbox c label=\"Is Private (will not be published to public github issue)\" formControlName=\"isPrivate\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<form-textarea label=\"Description\" formControlName=\"description\"\n\t\t\t\t\t\t\tplaceholder=\"Details of the issue of feature request\" rows=\"20\" [hideToggle]=\"isNew\">\n\t\t\t\t\t\t</form-textarea>\n\t\t\t\t\t</section>\n\n\t\t\t\t</fieldset>\n\t\t\t</form>\n\t\t</d-widget-section>\n\n\t\t<d-widget-section *ngIf=\"mainForm.controls.dexihIssueComments.controls.length > 0\"\n\t\t\ttitle=\"Commentary\" [showExpandButton]=\"true\" iconClass=\"fa fa-lg fa-fw fa-comments\" [padding]=\"true\">\n\n\t\t\t<form id=\"comment-form\" *ngFor=\"let comment of mainForm.controls.dexihIssueComments.controls\"\n\t\t\t\t[formGroup]=\"comment\">\n\t\t\t\t<fieldset>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<form-textarea label=\"{{comment.controls.userName.value}} - {{comment.controls.updateDate.value | calendar }}\" formControlName=\"comment\" placeholder=\"Comment\" [disabled]=\"true\"\n\t\t\t\t\t\t\ticonClass=\"fa fa-comment\">\n\t\t\t\t\t\t</form-textarea>\n\t\t\t\t\t</section>\n\t\t\t\t</fieldset>\n\t\t\t</form>\n\t\t</d-widget-section>\n\n\t\t<d-widget-section *ngIf=\"mainForm.controls.key.value > 0 && mainForm.controls.isPrivate.value\" title=\"Add new comment\" [showExpandButton]=\"true\"\n\t\t\ticonClass=\"fa fa-lg fa-fw fa-comments\" [padding]=\"true\">\n\t\t\t<ng-template #header>\n\t\t\t\t<d-button-save class=\"mr-1\" (click)=\"!saving && newComment && saveComment()\"\n\t\t\t\t\t[disabled]=\"saving || !newComment\" [busy]=\"saving\"></d-button-save>\n\t\t\t\t<d-button-cancel (click)=\"!saving && cancel()\" [disabled]=\"saving\"></d-button-cancel>\n\t\t\t</ng-template>\n\n\t\t\t<form>\n\t\t\t\t<fieldset>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<form-textarea [(ngModel)]=\"newComment\" [ngModelOptions]=\"{standalone: true}\"\n\t\t\t\t\t\t\tplaceholder=\"Enter a new comment\" iconClass=\"fa fa-comment\" rows=\"20\" [hideToggle]=\"true\">\n\t\t\t\t\t\t</form-textarea>\n\t\t\t\t\t</section>\n\t\t\t\t</fieldset>\n\t\t\t</form>\n\t\t</d-widget-section>\n\n\t\t<d-widget-section *ngIf=\"mainForm.controls.key.value > 0 && !mainForm.controls.isPrivate.value\" title=\"Add new comment\" [showExpandButton]=\"true\"\n\t\t\ticonClass=\"fa fa-lg fa-fw fa-comments\" [padding]=\"true\">\n\n\t\t\t<p>This is a public issue and is managed through the GitHub issue below.</p>\n\t\t\t<a class=\"btn btn-primary\" [href]=\"mainForm.controls.gitHubLink?.value\" target=\"_blank\" ><i class=\"fa fa-github\"></i>GitHub Issue</a>\n\t\t</d-widget-section>\n\t\t\n\t</d-widget>\n</div>","export * from './edit/issue-edit.component';\nexport * from './index/issue-index.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubsService } from '../../hubs.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable, BehaviorSubject, Subscription} from 'rxjs';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { DexihHubAuth, CancelToken } from '../../../+auth/auth.models';\nimport { eIssueType, eIssueCategory, eIssueSeverity, DexihIssue, eIssueStatus } from '../../../shared/shared.models';\n\n@Component({\n  selector: 'issue',\n  templateUrl: './issue-index.component.html',\n  styles: []\n})\nexport class IssueIndexComponent implements OnInit, OnDestroy {\n\n    subscription: Subscription;\n\n    columns = [\n        { name: 'name', title: 'Name', format: ''},\n        { name: 'description', title: 'Description', format: 'Md'},\n        { name: 'type', title: 'Type', format: 'Enum', enum: eIssueType},\n        { name: 'category', title: 'Category', format: 'Enum', enum: eIssueCategory},\n        { name: 'severity', title: 'Severity', format: 'Enum', enum: eIssueSeverity},\n        { name: 'issueStatus', title: 'Status', format: 'Enum', enum: eIssueStatus},\n        { name: 'gitHubLink', title: 'Github Issue', format: 'Md'},\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar'},\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    private cancelToken = new CancelToken();\n\n    constructor(\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.authService.getIssues(this.cancelToken).then(i => {\n            const issues = i.map( issue => {\n                return {\n                    key: issue.key,\n                    name: issue.name,\n                    description: issue.description,\n                    type: issue.type,\n                    category: issue.category,\n                    severity: issue.severity,\n                    issueStatus: issue.issueStatus,\n                    gitHubLink: issue.gitHubLink ? `[github](${issue.gitHubLink})` : null,\n                    updateDate: issue.updateDate,\n\n                }\n            });\n            this._tableData.next(issues);\n        });\n    }\n\n    ngOnDestroy() {\n       this.cancelToken.cancel();\n    }\n\n    edit(issue: DexihIssue) {\n        this.router.navigate(['edit', issue.key], {relativeTo: this.route});\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n}\n","<div class=\"container-fluid\">\n    <d-widget title=\"Raised Issues\" \n        iconClass=\"fa fa-lg fa-fw fa-life-saver\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n    >\n<support-options [isExpanded]=\"true\"></support-options>\n\n\n<d-widget-section title=\"Current Support Issues\" [padding]=\"false\">\n\t\t<d-table \n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[dataObservable]=\"tableData\"\n\t\t\t(rowClick)=\"edit($event)\"\n\t\t\t>\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n\t\t\t\t\t<d-button-edit class=\"mr-1\" [routerLink]=\"['edit', item.key]\" queryParamsHandling preserveFragment class=\"mr-1\"></d-button-edit>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t<d-button-delete (click)=\"delete(items)\"></d-button-delete>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<d-button-new class=\"mr-1\" [routerLink]=\"['new']\"></d-button-new>\n\t\t\t\t</ng-template>\n\t\t</d-table>\n\t</d-widget-section>\n    </d-widget>\n</div>\n\n","export * from './task-status.component';\n","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { HubsService } from '../../hubs.service';\nimport { ManagedTask, eManagedTaskStatus } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'task-status',\n    templateUrl: './task-status.component.html'\n})\nexport class TaskStatusComponent implements OnInit, OnDestroy {\n    @Input() public task: ManagedTask;\n\n    public currentStatus: StatusInfo;\n\n    constructor(private hubsService: HubsService) {\n    }\n\n    ngOnInit() {\n        this.currentStatus = this.getStatus(this.task);\n    }\n\n    ngOnDestroy() {\n    }\n\n    getStatus(task: ManagedTask): StatusInfo {\n        const statusInfo = new StatusInfo();\n\n        if (!task) {\n            statusInfo.message = 'not running';\n            statusInfo.percentage = 0;\n            statusInfo.statusType = 'info';\n            statusInfo.error = '';\n        } else {\n            statusInfo.percentage = task.percentage;\n\n            // update the type, which is used for the colour of the progress\n            switch (task.status) {\n                case eManagedTaskStatus.Error:\n                case eManagedTaskStatus.Cancelled:\n                    statusInfo.statusType = 'danger';\n                    statusInfo.canCancel = false;\n                    break;\n                case eManagedTaskStatus.Created:\n                case eManagedTaskStatus.Running:\n                case eManagedTaskStatus.Scheduled:\n                case eManagedTaskStatus.Queued:\n                    statusInfo.statusType = 'primary';\n                    statusInfo.canCancel = true;\n                    break;\n                case eManagedTaskStatus.Completed:\n                    statusInfo.statusType = 'success';\n                    statusInfo.canCancel = false;\n                    break;\n            }\n\n            // update the type, which is used for the colour of the progress\n            switch (task.status) {\n                case eManagedTaskStatus.Error:\n                    statusInfo.iconClass = 'fa fa-ban text-danger'\n                    break;\n                case eManagedTaskStatus.Cancelled:\n                    statusInfo.iconClass = 'fa fa-ban text-warning'\n                    break;\n                case eManagedTaskStatus.Created:\n                    statusInfo.iconClass = 'fa fa-circle text-success'\n                    break;\n                case eManagedTaskStatus.Queued:\n                    statusInfo.iconClass = 'fa fa-square'\n                    break;\n                case eManagedTaskStatus.Running:\n                    statusInfo.iconClass = 'fa fa-cogs text-success'\n                    break;\n                case eManagedTaskStatus.Scheduled:\n                    statusInfo.iconClass = 'fa fa-calendar text-success'\n                    break;\n                case eManagedTaskStatus.Created:\n                    statusInfo.iconClass = 'fa fa-cog text-success'\n                    break;\n                case eManagedTaskStatus.Completed:\n                    statusInfo.iconClass = 'fa fa-square text-success'\n                    break;\n            }\n\n            // update the message and error\n            statusInfo.message = task.message;\n            statusInfo.error = task.message;\n        }\n        return statusInfo;\n    }\n\n    cancelled() {\n        if (this.task) {\n            this.hubsService.cancelTasks([this.task]);\n        }\n    }\n}\n\nclass StatusInfo {\n    public percentage;\n    public message;\n    public statusType;\n    public error;\n    public iconClass;\n    public canCancel: boolean;\n}\n","<div *ngIf=\"currentStatus\" style=\"width:100%\"  >\n    <dexih-progressbar [animate]=\"true\" [showCancel]=\"currentStatus.canCancel\" (cancelled)=\"cancelled()\" (click)=\"clicked()\" [value]=\"currentStatus.percentage\" [type]=\"currentStatus.statusType\">\n        {{currentStatus.message}}\n    </dexih-progressbar>    \n</div>\n","export * from './task-view.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable, Subscription, combineLatest} from 'rxjs';\nimport { eManagedTaskStatus, ManagedTask } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'task-view',\n    templateUrl: './task-view.component.html',\n    styles: []\n})\nexport class TaskViewComponent implements OnInit, OnDestroy {\n\n    private _subscription: Subscription;\n\n    public task: ManagedTask;\n\n    showPage = false;\n    showPageMessage = 'Loading...';\n    view: string;\n\n    eManagedTaskStatus = eManagedTaskStatus;\n\n    public exceptionHidden = true;\n\n    resultChartData: Array<any>;\n\n    constructor(\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.authService.getTasksObservable(),\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                let tasks = result[2];\n\n                let reference = params['reference'];\n\n                this.showPage = false;\n                this.showPageMessage = 'Loading...';\n\n                this.task = tasks.find(c => c.taskId === reference);\n\n                if (!this.task) {\n                    this.authService.navigateUp();\n                }\n\n            });\n        } catch (e) {\n        }\n\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    watchChanges() {\n    }\n\n}\n\n\n","<div class=\"container-fluid\">\n\t<d-widget *ngIf=\"task\" [title]=\"'Task - ' + task?.name\" iconClass=\"fa fa-lg fa-fw fa-trophy\" [showCloseButton]=\"true\" (close)=\"close()\">\n\t\t<div class=\"content\" [ngSwitch]=\"view\">\n\t\t\t<ul class=\"list-group\">\n\t\t\t\t<li class=\"list-group-item list-group-item-danger\" *ngIf=\"task?.status == eManagedTaskStatus.Error\">\n\t\t\t\t\t<h5>Error encountered!</h5>\n\t\t\t\t\t<h6>{{task.message}}\n\t\t\t\t\t<div class=\"float-right\">\n\t\t\t\t\t\t<d-button *ngIf=\"task.exceptionDetails\" (click)='exceptionHidden = !exceptionHidden'>Toggle Details</d-button>\n\t\t\t\t\t</div>\n\t\t\t\t\t</h6>\n\t\t\t\t\t<div>\n\t\t\t\t\t<pre *ngIf=\"!exceptionHidden && task.exceptionDetails\" >{{task.exceptionDetails}}</pre>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t\t<li class=\"list-group-item list-group-item-info\">\n\t\t\t\t\t<h5>Details</h5>\n\t\t\t\t</li>\n\t\t\t\t<li class=\"list-group-item \">\n\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t<div class=\"row rounded text-white bg-secondary\">\n\t\t\t\t\t\t\t<div class=\"col border border-white\">Status</div>\n\t\t\t\t\t\t\t<div class=\"col border border-white\">{{eManagedTaskStatus[task.status]}}</div>\n\t\t\t\t\t\t\t<div class=\"w-100\"></div>                    \n\t\t\t\t\t\t\t<div class=\"col border border-white\">Last Updated</div>\n\t\t\t\t\t\t\t<div class=\"col border border-white\">{{task.lastUpdate | calendar}}</div>\n\t\t\t\t\t\t\t<div class=\"w-100\"></div>\n\t\t\t\t\t\t\t<div class=\"col border border-white\">Name</div>\n\t\t\t\t\t\t\t<div class=\"col border border-white\">{{task.name }}</div>\n\t\t\t\t\t\t\t<div class=\"w-100\"></div>\n\t\t\t\t\t\t\t<div class=\"col border border-white\">Category</div>\n\t\t\t\t\t\t\t<div class=\"col border border-white\">{{task.category }}</div>\n\t\t\t\t\t\t\t<div class=\"w-100\"></div>\n\t\t\t\t\t\t\t<div class=\"col border border-white\">Description</div>\n\t\t\t\t\t\t\t<div class=\"col border border-white\">{{task.description }}</div>\n\t\t\t\t\t\t\t<div class=\"w-100\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<h6 *ngIf=\"task.category === 'Datalink'\">\n\t\t\t\t\t\t\t<d-button-view [routerLink]=\"['/hub', task.referenceKey, 'summary', 'datalinks', 'result-view', task.data.auditConnectionKey, task.data.auditKey]\" text=\"Datalink Result\"></d-button-view>\n\t\t\t\t\t\t</h6>\n\t\t\t\t\t\t<h6 *ngIf=\"task.category === 'Datajob'\">\n\t\t\t\t\t\t\t<d-button-view [routerLink]=\"['/hub', task.referenceKey, 'summary', 'datalinks', 'result-view', task.data.auditConnectionKey, task.data.auditKey]\" text=\"Datajob Result\"></d-button-view>\n\t\t\t\t\t\t</h6>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t</d-widget>\n</div>","export * from './tasks-index.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable, BehaviorSubject, Subscription, combineLatest} from 'rxjs';\nimport { ManagedTask, eManagedTaskStatus } from '../../../shared/shared.models';\n\n@Component({\n  selector: 'tasks-index',\n  templateUrl: './tasks-index.component.html',\n  styles: []\n})\nexport class TasksIndexComponent implements OnInit, OnDestroy {\n\n    private _subscription: Subscription;\n\n    showPage = false;\n    showPageMessage = 'Loading...';\n\n    columns = [\n        { name: 'hub', title: 'Hub', format: ''},\n        { name: 'task.category', title: 'Category', format: ''},\n        { name: 'task.status', title: 'Status', format: 'Enum', enum: eManagedTaskStatus},\n        { name: 'task.stepName', title: 'Current Step', format: ''},\n        { name: 'task.name', title: 'Name', format: ''},\n        { name: 'task.lastUpdate', title: 'Last Modified', format: 'Calendar'},\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(private authService: AuthService, private router: Router, private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this._subscription = combineLatest(\n            this.route.data,\n            this.route.params,\n            this.authService.getHubsObservable(),\n            this.authService.getTasksObservable()\n        ).subscribe(result => {\n            let hubs = result[2];\n            let tasks = result[3];\n\n            let data = [];\n\n            tasks.forEach(task => {\n                let hub = hubs.find(c => c.hubKey === task.referenceKey);\n                data.push({\n                    hub: hub ? hub.name : 'Unknown hub',\n                    task: task\n                })\n            })\n            this._tableData.next(data);\n\n        });\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n\n    showTask(task: ManagedTask) {\n        this.router.navigate(['view', task.taskId], {relativeTo: this.route})\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n}\n\n\n","<div class=\"container-fluid\">\n    <d-widget title=\"Tasks\" \n        iconClass=\"fa fa-lg fa-fw fa-exchange\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\n    >\n\n\t\t<d-table \n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[dataObservable]=\"tableData\"\n\t\t\t(rowClick)=\"showTask($event.task)\"\n\t\t\t>\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n\t\t\t\t\t<d-button-view (click)=\"showTask(item.task)\" text=\"View Task\"></d-button-view>\n\t\t\t\t\t<d-button-view class=\"ml-1\" *ngIf=\"item.task.category=='Datalink'\" [routerLink]=\"['/hub', item.task.referenceKey, 'summary', 'datalinks', 'result-view', item.task.data.auditConnectionKey, item.task.data.auditKey]\" text=\"Datalink Result\"></d-button-view>\n\t\t\t\t\t<d-button-view class=\"ml-1\" *ngIf=\"item.task.category=='Datajob'\" [routerLink]=\"['/hub', item.task.referenceKey, 'summary', 'datalinks', 'result-view', item.task.data.auditConnectionKey, item.task.data.auditKey]\" text=\"Datajob Result\"></d-button-view>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #rowStatus select=\"rowStatus\" let-item=\"item\">\n\t\t\t\t\t<task-status [task]=\"item.task\"></task-status>\n\t\t\t\t</ng-template>\n\n\t\t</d-table>\n    </d-widget>\n</div>\n\n\n"]}