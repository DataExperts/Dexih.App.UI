{"version":3,"sources":["webpack:///src/app/+hub/buttons/table-edit-button/table-edit-button.component.ts","webpack:///src/app/+hub/buttons/table-edit-button/table-edit-button.component.html","webpack:///src/app/+hub/widgets/transform-properties/transform-properties.component.ts","webpack:///src/app/+hub/widgets/transform-properties/transform-properties.component.html","webpack:///src/app/shared/help/dexih-help.component.ts","webpack:///src/app/shared/help/dexih-help.component.html","webpack:///src/app/shared/help/dexih-help.module.ts","webpack:///src/app/global.error.handler.ts","webpack:///src/app/+hub/widgets/columnValidation-view/columnValidation-view.component.ts","webpack:///src/app/+hub/widgets/columnValidation-view/columnValidation-view.component.html","webpack:///src/app/+hub/buttons/buttons.module.ts","webpack:///src/app/shared/ui/dexihFormControls/index.ts","webpack:///src/app/shared/utils/sort.pipe.ts","webpack:///src/app/+hub/hub.remote.models.ts","webpack:///src/app/shared/ui/sharedData/index.ts","webpack:///src/app/shared/ui/dexihMessage/dexih-message.component.ts","webpack:///src/app/shared/ui/dexihMessage/dexih-message.component.html","webpack:///src/app/+hub/hub.models.ts","webpack:///src/app/shared/layout/layout.guard.ts","webpack:///src/app/shared/ui/charts/chartBuilder/chart-series.component.ts","webpack:///src/app/shared/ui/charts/chartBuilder/chart-series.component.html","webpack:///src/app/+auth/auth.models.ts","webpack:///src/app/shared/utils/equal-filter.pipe.ts","webpack:///src/app/+hub/fileFormat/fileFormat-index/fileFormat-index.component.ts","webpack:///src/app/+hub/fileFormat/fileFormat-index/fileFormat-index.component.html","webpack:///src/app/+hub/hub.service.ts","webpack:///src/app/+hub/widgets/api-view/api-view.component.ts","webpack:///src/app/+hub/widgets/api-view/api-view.component.html","webpack:///src/app/+hub/buttons/cancel-button/cancel-button.component.ts","webpack:///src/app/+hub/buttons/cancel-button/cancel-button.component.html","webpack:///src/app/shared/layout/header/header.component.ts","webpack:///src/app/shared/layout/header/header.component.html","webpack:///src/app/shared/layout/navigation/menu/menu-item.component.ts","webpack:///src/app/shared/layout/navigation/menu/menu-item.component.html","webpack:///src/app/shared/ui/icons/index.ts","webpack:///src/app/shared/ui/icons/download-button/download-button.component.ts","webpack:///src/app/shared/ui/icons/download-button/download-button.component.html","webpack:///src/app/+hub/buttons/actions-api-button/actions-api-button.component.ts","webpack:///src/app/+hub/buttons/actions-api-button/actions-api-button.component.html","webpack:///src/app/+hub/hub.routing.ts","webpack:///src/app/shared/utils/gt-filter.pipe.ts","webpack:///src/app/+hub/widgets/widgets.module.ts","webpack:///src/app/+hub/buttons/actions-datalink-button/actions-datalink-button.component.html","webpack:///src/app/+hub/buttons/actions-datalink-button/actions-datalink-button.component.ts","webpack:///src/environments/environment.ts","webpack:///src/app/shared/layout/navigation/remote-agent/remote-agent.component.ts","webpack:///src/app/shared/layout/navigation/remote-agent/remote-agent.component.html","webpack:///src/app/+hub/widgets/api-status/api-status.component.ts","webpack:///src/app/+hub/widgets/api-status/api-status.component.html","webpack:///src/app/+hub/buttons/actions-fileFormat-button/actions-fileFormat-button.component.ts","webpack:///src/app/+hub/buttons/actions-fileFormat-button/actions-fileFormat-button.component.html","webpack:///src/app/shared/ui/sharedData/preview-dashboard/preview-dashboard.component.ts","webpack:///src/app/shared/ui/sharedData/preview-dashboard/preview-dashboard.component.html","webpack:///src/app/+auth/auth.service.ts","webpack:///src/app/shared/utils/field-filter.pipe.ts","webpack:///src/app/+hub/hub.query.models.ts","webpack:///src/app/shared/layout/ribbon/index.ts","webpack:///src/app/shared/layout/navigation/menu/index.ts","webpack:///src/app/+hub/table/table-preview-data/table-preview-data.component.ts","webpack:///src/app/+hub/table/table-preview-data/table-preview-data.component.html","webpack:///src/app/+auth/token.interceptor.service.ts","webpack:///src/app/+hub/widgets/listOfValues-view/listOfValues-view.component.ts","webpack:///src/app/+hub/widgets/listOfValues-view/listOfValues-view.component.html","webpack:///src/app/+hub/buttons/view-edit-button/view-edit-button.component.ts","webpack:///src/app/+hub/buttons/view-edit-button/view-edit-button.component.html","webpack:///src/app/shared/ui/charts/charts.module.ts","webpack:///src/app/shared/ui/dexihMessage/dexih-message.module.ts","webpack:///src/app/shared/ui/supportOptions/support-options.component.ts","webpack:///src/app/shared/ui/supportOptions/support-options.component.html","webpack:///src/app/+hub/buttons/actions-connection-button/actions-connection-button.component.html","webpack:///src/app/+hub/buttons/actions-connection-button/actions-connection-button.component.ts","webpack:///src/app/shared/layout/navigation/navigation.module.ts","webpack:///src/app/shared/ui/icons/encryption-status/encryption-status.component.ts","webpack:///src/app/shared/ui/icons/encryption-status/encryption-status.component.html","webpack:///src/app/+hub/buttons/actions-columnValidation-button/actions-columnValidation-button.component.ts","webpack:///src/app/+hub/buttons/actions-columnValidation-button/actions-columnValidation-button.component.html","webpack:///src/app/shared/utils/utils.module.ts","webpack:///src/app/+hub/view/view-edit/view-edit.component.ts","webpack:///src/app/+hub/view/view-edit/view-edit.component.html","webpack:///src/app/+auth/websocket.service.ts","webpack:///src/app/+hub/widgets/preview-data/preview-data.component.ts","webpack:///src/app/+hub/widgets/preview-data/preview-data.component.html","webpack:///src/app/+hub/fileFormat/index.ts","webpack:///src/app/+hub/widgets/datalink-status/datalink-status.component.ts","webpack:///src/app/+hub/widgets/datalink-status/datalink-status.component.html","webpack:///src/app/shared/layout/layout.service.ts","webpack:///src/app/+hub/widgets/table-view/table-view.component.ts","webpack:///src/app/+hub/widgets/table-view/table-view.component.html","webpack:///src/app/shared/utils/countdown.component.ts","webpack:///src/app/+hub/widgets/view-view/view-view.component.ts","webpack:///src/app/+hub/widgets/view-view/view-view.component.html","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/ui/sharedData/preview/preview.component.ts","webpack:///src/app/shared/ui/sharedData/preview/preview.component.html","webpack:///src/app/shared/ui/seriesAnimate/series-animate.component.ts","webpack:///src/app/shared/ui/seriesAnimate/series-animate.component.html","webpack:///src/app/+hub/hub.shared.module.ts","webpack:///src/app/shared/ui/queryBuilder/query-builder.component.ts","webpack:///src/app/shared/ui/queryBuilder/query-builder.component.html","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/shared/ui/icons/icons.module.ts","webpack:///src/app/shared/layout/ribbon/ribbon.component.ts","webpack:///src/app/shared/layout/ribbon/ribbon.component.html","webpack:///src/app/+hub/buttons/actions-dashboard-button/actions-dashboard-button.component.ts","webpack:///src/app/+hub/buttons/actions-dashboard-button/actions-dashboard-button.component.html","webpack:///src/app/+hub/buttons/new-table-button/new-table-button.component.ts","webpack:///src/app/+hub/buttons/new-table-button/new-table-button.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/shared/utils/dragzone.ts","webpack:///src/app/+hub/buttons/dependent-items/dependent-items-button.component.html","webpack:///src/app/+hub/buttons/dependent-items/dependent-items-button.component.ts","webpack:///src/app/shared/utils/isValid-filter.pipe.ts","webpack:///src/app/shared/utils/functions.ts","webpack:///src/app/+hub/summary/summary.component.ts","webpack:///src/app/+hub/summary/summary.component.html","webpack:///src/app/shared/ui/seriesAnimate/series-animate-properties.component.ts","webpack:///src/app/shared/ui/seriesAnimate/series-animate-properties.component.html","webpack:///src/app/shared/ui/dexihFormControls/dexih-form-controls.module.ts","webpack:///src/app/shared/utils/calendar.pipe.ts","webpack:///src/app/+hub/buttons/actions-table-button/actions-table-button.component.html","webpack:///src/app/+hub/buttons/actions-table-button/actions-table-button.component.ts","webpack:///src/app/+hub/index.ts","webpack:///src/app/shared/layout/header/header.module.ts","webpack:///src/app/+hub/widgets/input-parameters/input-parameters.component.ts","webpack:///src/app/+hub/widgets/input-parameters/input-parameters.component.html","webpack:///src/app/+hub/hub.component.html","webpack:///src/app/+hub/hub.component.ts","webpack:///src/app/+hub/hub.lineage.models.ts","webpack:///src/app/app.module.ts","webpack:///src/app/shared/ui/dexihFormControls/dexih-invalid-form-icon/dexih-invalid-form-icon.component.ts","webpack:///src/app/shared/ui/dexihFormControls/dexih-invalid-form-icon/dexih-invalid-form-icon.component.html","webpack:///src/app/shared/layout/navigation/login-info/login-info.component.ts","webpack:///src/app/shared/layout/navigation/login-info/login-info.component.html","webpack:///src/app/shared/ui/sharedData/sharedData.component.ts","webpack:///src/app/shared/ui/sharedData/sharedData.component.html","webpack:///src/app/shared/ui/dexihMessage/index.ts","webpack:///src/app/+hub/widgets/datalinkTest-view/datalinkTest-view.component.ts","webpack:///src/app/+hub/widgets/datalinkTest-view/datalinkTest-view.component.html","webpack:///src/app/+hub/buttons/actions-view-button/actions-view-button.component.ts","webpack:///src/app/+hub/buttons/actions-view-button/actions-view-button.component.html","webpack:///src/app/shared/layout/navigation/hubs/hubs.component.ts","webpack:///src/app/shared/layout/navigation/hubs/hubs.component.html","webpack:///src/app/+hub/item-edit.guard.ts","webpack:///src/app/+hub/widgets/datalink-view/datalink-view.component.ts","webpack:///src/app/+hub/widgets/datalink-view/datalink-view.component.html","webpack:///src/app/app.routing.ts","webpack:///src/app/+hub/widgets/dashboard-view/dashboard-view.component.ts","webpack:///src/app/+hub/widgets/dashboard-view/dashboard-view.component.html","webpack:///src/app/+hub/widgets/remoteAgent-view/remoteAgent-view.component.ts","webpack:///src/app/+hub/widgets/remoteAgent-view/remoteAgent-view.component.html","webpack:///src/app/+hub/buttons/actions-datalinkTest-button/actions-datalinkTest-button.component.ts","webpack:///src/app/+hub/buttons/actions-datalinkTest-button/actions-datalinkTest-button.component.html","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/+hub/hub.forms.service.ts","webpack:///src/app/+hub/widgets/connection-view/connection-view.component.html","webpack:///src/app/+hub/widgets/connection-view/connection-view.component.ts","webpack:///src/app/shared/ui/dexihFormControls/dexih-form-errors.module.ts","webpack:///src/app/+hub/hub.module.ts","webpack:///src/app/shared/ui/charts/chart-groups.ts","webpack:///src/app/+hub/buttons/new-datalink-button/new-datalink-button.component.ts","webpack:///src/app/+hub/buttons/new-datalink-button/new-datalink-button.component.html","webpack:///src/app/shared/ui/sharedData/input-parameters-view/input-parameters-view.component.ts","webpack:///src/app/shared/ui/sharedData/input-parameters-view/input-parameters-view.component.html","webpack:///src/app/shared/ui/charts/chartView/chart-view.component.ts","webpack:///src/app/shared/ui/charts/chartView/chart-view.component.html","webpack:///src/app/shared/ui/queryBuilder/query-builder.module.ts","webpack:///src/app/+hub/buttons/columnValidation-edit-button/columnValidation-edit-button.component.ts","webpack:///src/app/+hub/buttons/columnValidation-edit-button/columnValidation-edit-button.component.html","webpack:///src/app/shared/utils/all-filter.pipe.ts","webpack:///src/app/shared/ui/seriesAnimate/series-animate.module.ts","webpack:///src/app/+hub/buttons/datalink-edit-button/datalink-edit-button.component.ts","webpack:///src/app/+hub/buttons/datalink-edit-button/datalink-edit-button.component.html","webpack:///src/polyfills.ts","webpack:///src/app/shared/ui/icons/print/print-button.component.ts","webpack:///src/app/shared/ui/icons/print/print-button.component.html","webpack:///src/app/shared/ui/dexihFormControls/dexih-invalid-form-details/dexih-invalid-form-details.component.ts","webpack:///src/app/shared/ui/dexihFormControls/dexih-invalid-form-details/dexih-invalid-form-details.component.html","webpack:///src/app/+hub/buttons/actions-listOfValues-button/actions-listOfValues-button.component.ts","webpack:///src/app/+hub/buttons/actions-listOfValues-button/actions-listOfValues-button.component.html","webpack:///src/app/shared/ui/icons/privacy-status/privacy-status.component.ts","webpack:///src/app/shared/ui/icons/privacy-status/privacy-status.component.html","webpack:///src/app/shared/ui/sharedData/shared-data.module.ts","webpack:///src/app/shared/layout/ribbon/ribbon.module.ts","webpack:///src/app/+hub/buttons/new-connection-button/new-connection-button.component.ts","webpack:///src/app/+hub/buttons/new-connection-button/new-connection-button.component.html","webpack:///src/app/shared/ui/charts/chartBuilder/chart-builder.component.ts","webpack:///src/app/shared/ui/charts/chartBuilder/chart-builder.component.html","webpack:///src/app/shared/ui/charts/chart-colors.ts","webpack:///src/app/shared/layout/header/tasks/tasks.component.ts","webpack:///src/app/shared/layout/header/tasks/tasks.component.html","webpack:///src/app/+hub/buttons/tags-filter-button/tags-filter-button.component.ts","webpack:///src/app/+hub/buttons/tags-filter-button/tags-filter-button.component.html","webpack:///src/app/+hub/buttons/actions-datajob-button/actions-datajob-button.component.ts","webpack:///src/app/+hub/buttons/actions-datajob-button/actions-datajob-button.component.html","webpack:///src/app/+hub/buttons/tags-update-button/tags-update-button.component.ts","webpack:///src/app/+hub/buttons/tags-update-button/tags-update-button.component.html","webpack:///src/app/+hubs/hubs.service.ts","webpack:///src/app/+hub/widgets/table-column-view/table-column-view.component.ts","webpack:///src/app/+hub/widgets/table-column-view/table-column-view.component.html","webpack:///src/app/+hub/widgets/datajob-view/datajob-view.component.ts","webpack:///src/app/+hub/widgets/datajob-view/datajob-view.component.html","webpack:///src/app/shared/layout/navigation/menu/menu-parent.component.ts","webpack:///src/app/shared/layout/navigation/menu/menu-parent.component.html","webpack:///src/app/shared/layout/app-layouts/main-layout.component.ts","webpack:///src/app/shared/layout/app-layouts/main-layout.component.html","webpack:///src/app/+hub/buttons/save-button/save-button.component.ts","webpack:///src/app/+hub/buttons/save-button/save-button.component.html","webpack:///src/app/shared/utils/dropzone.ts","webpack:///src/app/shared/layout/app-layouts/auth-layout.component.ts","webpack:///src/app/shared/layout/app-layouts/auth-layout.component.html","webpack:///src/app/shared/layout/layout.module.ts","webpack:///src/app/shared/ui/supportOptions/support-options.module.ts","webpack:///src/app/shared/layout/app-layouts/empty-layout.component.ts","webpack:///src/app/shared/layout/app-layouts/empty-layout.component.html","webpack:///src/app/+hub/widgets/fileFormat-view/fileFormat-view.component.ts","webpack:///src/app/+hub/widgets/fileFormat-view/fileFormat-view.component.html","webpack:///src/app/+hub/buttons/connection-edit-button/connection-edit-button.component.ts","webpack:///src/app/+hub/buttons/connection-edit-button/connection-edit-button.component.html","webpack:///src/app/shared/utils/sort.desc.pipe.ts","webpack:///src/app/shared/layout/footer/footer.component.ts","webpack:///src/app/shared/layout/footer/footer.component.html","webpack:///src/logging.ts","webpack:///src/app/shared/ui/sharedData/preview-data/preview-data.component.ts","webpack:///src/app/shared/ui/sharedData/preview-data/preview-data.component.html","webpack:///src/app/shared/ui/sharedData/preview-dashboard/preview-dashboard-item.component.ts","webpack:///src/app/shared/ui/sharedData/preview-dashboard/preview-dashboard-item.component.html","webpack:///src/app/shared/utils/time.directive.ts","webpack:///src/app/shared/layout/navigation/navigation.component.ts","webpack:///src/app/shared/layout/navigation/navigation.component.html","webpack:///src/app/shared/shared.models.ts","webpack:///src/app/+hub/widgets/transform-properties/transform-properties-item.component.ts","webpack:///src/app/+hub/widgets/transform-properties/transform-properties-item.component.html","webpack:///src/app/shared/utils/max-items-filter.ts","webpack:///src/app/+hub/fileFormat/fileFormat-edit/fileFormat-edit.component.ts","webpack:///src/app/+hub/fileFormat/fileFormat-edit/fileFormat-edit.component.html","webpack:///src/app/+hub/widgets/input-parameters-view/input-parameters-view.component.ts","webpack:///src/app/+hub/widgets/input-parameters-view/input-parameters-view.component.html","webpack:///src/app/+hub/view/index.ts","webpack:///src/app/+hub/buttons/index.ts","webpack:///src/app/+hub/view/view-index/view-index.component.ts","webpack:///src/app/+hub/view/view-index/view-index.component.html","webpack:///src/app/+hub/summary/index.ts","webpack:///src/main.ts","webpack:///src/app/+hub/buttons/customFunction-edit-button/customFunction-edit-button.component.ts","webpack:///src/app/+hub/buttons/customFunction-edit-button/customFunction-edit-button.component.html","webpack:///src/app/shared/layout/ribbon/route-breadcrumbs/route-breadcrumbs.component.ts","webpack:///src/app/shared/layout/ribbon/route-breadcrumbs/route-breadcrumbs.component.html"],"names":["TableEditButtonComponent","hubService","key","hubPath","getHubUrl","selector","templateUrl","TransformPropertiesComponent","transformProperties","DexihHelpComponent","authService","router","http","location","display","linkClick","_displayHelpSubscription","getDisplayHelp","subscribe","displayHelp","path","url","prepareExternalUrl","get","responseType","result","matches","RegExp","data","replace","match","window","origin","hubKey","unsubscribe","setDisplayHelp","event","element","target","link","getAttribute","endsWith","startsWith","emit","route","substr","navigate","open","preventDefault","parentElement","str","find","styleUrls","title","scrollTo","DexihHelpModule","imports","declarations","exports","GlobalErrorHandler","injector","logger","error","message","rejection","details","stack","exceptionDetails","addUpdateNotification","ColumnValidationViewComponent","columnValidation","ButtonsModule","providers","SortPipe","items","field","sort","a","b","name","RemoteAgentStatus","activeDatajobs","activeDatalinks","activeApis","functionTypes","Condition","Map","Aggregate","Rows","Profile","Validate","transformTypes","Mapping","icon","allowUserConfig","Filter","Sort","Group","Series","Join","Lookup","Validation","Delta","Concatenate","TransformReference","TypeCodes","String","isNumeric","isString","CharArray","Text","Binary","Boolean","DateTime","DateTimeOffset","Date","Decimal","Double","Int16","Int32","Int64","UInt16","UInt32","UInt64","Byte","SByte","Time","Guid","Xml","Json","Geometry","Node","eBasicType","TypeFunctions","dataType","maxLength","precision","scale","Single","Numeric","Any","type","columnIsString","columnIsDecimal","basicType","getBasicTypeCode","columnNumberFormats","columnDateFormats","columnTimeFormats","value","DexihMessageComponent","isHidden","messageString","addMessage","eCacheStatus","EntityStatus","isBusy","lastStatus","None","Parameter","eSearchObjectType","SearchObjectTypes","All","Connection","Table","TableColumn","FileFormat","Datalink","Datajob","ColumnValidation","View","Api","Dashboard","ListOfValues","DatalinkTest","SearchResult","object","objectParent","objectType","SharedObjectProperty","sharedObjectProperties","cacheProperty","property","parentKey","parentType","cacheAddMethod","cacheGetMethod","routerLink","displayName","description","HubVariable","CustomFunction","Tags","SharedObject","HubCacheChange","changeClass","changeType","HubCache","status","hub","_sequenceGenerator","connections","dexihConnections","filter","c","purpose","Managed","isValid","itemType","dexihApis","dexihColumnValidations","dexihCustomFunctions","dexihDatajobs","dexihDatalinks","dexihDatalinkTests","dexihFileFormats","dexihHubVariables","getTable","dexihViews","Loaded","tags","dexihTagObjects","to","objectKey","map","dexihTags","e","tagKey","connectionKey","connection","connectionCopy","Object","assign","tableKey","table","dexihTables","transform","transformType","joinDatalinkTable","nodeDatalinkColumn","columnKey","i","length","column","dexihTableColumns","datalinkTestStepKey","test","testStep","dexihDatalinkTestSteps","deltaType","minKey","maxPos","forEach","t","position","deltaTypeDetail","deltaTypes","unique","index","findIndex","defaultName","logicalName","AutoIncrement","DbAutoIncrement","allowDbNull","newColumn","push","getNextSequence","addColumn","TrackingField","newConnection","tables","datalinkTransformKey","datalink","j","dexihDatalinkTransforms","columnValidationKey","fileFormatKey","fileFormat","search","searchObject","results","Array","toLowerCase","searchAll","searchItem","datajob","view","api","dexihDashboards","d","dexihListOfValues","item","itemParent","keys","found","indexOf","dataTypeIsString","dataTypeIsDecimal","childColumns","rank","schema","sourceDatalinkTable","sourceType","cacheAddDatalink","sourceDatalinkKey","cacheAddTable","sourceTableKey","cacheAddConnection","auditConnectionKey","getParametersCache","parameters","dexihDatalinkTargets","dataCacheConnectionKey","dexihDatalinkTransformItems","ti","customFunctionKey","cacheAddCustomFunction","datalinkTest","step","datalinkDup","datalinkKey","getDatalinkCache","expectedConnectionKey","targetConnectionKey","dexihDatalinkTestTables","sourceConnectionKey","testConnectionKey","dexihDatalinkSteps","lookupColumnKey","lookupColumn","getColumn","dashboard","dexihDashboardItems","cacheAddView","viewKey","parameter","cacheAddListOfValues","listOfValuesKey","lov","o","parentObject","concat","parentItem","obj","label","updateDate","getObjectTags","sharedType","sharedObject","datajobKey","dup","getDatajobCache","datajobCopy","dupDatalink","datalinkCopy","datalinkTestKey","dupDatalinkTest","getDatalinkTestCache","datalinkTestCopy","getConnectionCopy","cacheAddFileFormat","cacheAddColumnValidation","dupValidation","getColumnValidationCache","dupFunction","customFunction","dashboardKey","apiKey","hubVariableKey","variable","tag","trigger","startDate","toLocaleDateString","startTime","endTime","daysOfWeek","join","intervalTime","maxRecurs","originalDatalink","copyDatalink","datalinkColumnKeys","dexihDatalinkColumns","datalinkTableKey","filterDatalinkColumn","joinDatalinkColumn","sourceDatalinkColumn","targetDatalinkColumn","dexihFunctionParameters","p","datalinkTransformItemKey","datalinkColumn","direction","Input","hubPermission","Owner","FullReader","User","Output","ResultOutput","ResultReturnValue","ReturnValue","ResultInput","DataCache","isRefreshing","previewQuery","then","next","DexihInputParameter","sortDirections","Ascending","Descending","seriesGrains","Second","Minute","Hour","Day","Week","Month","Year","Number","SourceSurrogateKey","ValidFromDate","ValidToDate","CreateDate","UpdateDate","CreateAuditKey","UpdateAuditKey","IsCurrentField","Version","NaturalKey","NonTrackingField","IgnoreField","RejectedReason","FileName","FileRowNumber","FileDate","RowKey","PartitionKey","TimeStamp","ResponseSuccess","ResponseData","ResponseStatus","ResponseSegment","DatabaseOperation","Error","Url","ValidationStatus","securityFlags","FastEncrypt","FastDecrypt","FastEncrypted","StrongEncrypt","StrongDecrypt","StrongEncrypted","OneWayHash","OneWayHashed","Hide","loadStrategies","Bulk","Transaction","updateStrategies","Reload","Append","AppendUpdate","AppendUpdateDelete","AppendUpdatePreserve","AppendUpdateDeletePreserve","transformItemTypes","BuiltInFunction","useSource","useTarget","useJoin","useFilter","ColumnPair","JoinPair","FilterPair","AggregatePair","Column","JoinNode","GroupNode","UnGroup","transformFunctionTypes","JoinCondition","FailActions","Abend","Continue","ContinueNonDependent","InvalidActions","Pass","Clean","RejectClean","Reject","Discard","FunctionCache","NoCache","EnableCache","CallOnce","CleanActions","DefaultValue","Truncate","Blank","Null","OriginalValue","CleanValue","sourceTypes","FileProperties","runStatus","Initialised","Scheduled","Started","Running","RunningErrors","Finished","FinishedErrors","Abended","Cancelled","NotRunning","Passed","Failed","formatTypes","importActions","Replace","New","Leave","Skip","eMappingStatus","lineageMappingStatuses","Mapped","statusClass","PassThroughToNothing","PassThroughMap","MappedToVirtual","PassThroughToVirtual","AutoGenerate","Joined","Sorted","MappedToNothing","NotMapped","impactMappingStatuses","ConnectionTables","PreviewResults","FlatFilesReady","DashboardUrl","LayoutGuard","initialize","state","Promise","resolve","reject","isLoggedIn","redirectUrl","user","reason","ChartSeriesComponent","minItems","maxItems","allowLineChart","allowAlternateAxis","seriesChange","ngOnChanges","changes","series","splice","columns","logoUrl","logoSmallUrl","_email","_userName","_password","_rememberMe","email","userName","password","rememberMe","firstName","lastName","terms","subscription","code","emailConfirmed","isInvited","inviteQuota","notifyPrivateMessage","notifySupportMessage","newPassword","confirmPassword","UserLoginInfo","loginProvider","providerDisplayName","providerKey","DexihHubAuth","sharedAccess","Registered","ExternalLoginResult","ExternalLogin","Message","success","time","now","eHubAccess","eFileStatus","FileHandler","file","id","Math","random","toString","Waiting","progress","Uploading","Downloading","httpSubscription","RemoteToken","CancelToken","cancelMethod","PromiseWithCancel","executor","cancel","_cancel","WaitMessage","EqualFilterPipe","it","FileFormatIndexComponent","eSharedObjectType","footer","format","_tableData","tableData","asObservable","watchChanges","_subscription","params","getHubCacheObservable","hubCache","updateFileFormats","addHubClientErrorMessage","_hubCacheChangeSubscription","navigateUp","fileFormats","deleteFileFormats","isLoaded","relativeTo","cache","createHub","filename","exportHub","getHubCacheChangeObservable","hubCacheChange","TagObjects","close","editFileFormat","styles","HubService","_hubKey","_hubCache","NoHub","_hubMessages","_hubCacheChange","_transformWriterResultChange","_apiStatusChange","_remoteLibraries","_flatFiles","_remoteAgent","isResettingRemoteAgent","_refreshHubRunning","LogC","Information","_webSocketSubscription","getWebSocketObservable","processWebSocketMessage","getGlobalCacheObservable","getHubsObservable","getRemoteAgentsObservable","globalCache","hubs","remoteLibraries","defaultRemoteLibraries","transforms","functions","resetRemoteAgent","Debug","getHubCache","filterLoaded","observable","pipe","toPromise","log","context","converted","messages","getHubMessages","newMessage","addHubMessage","getValue","refreshHubCache","Loading","hubPost","permission","filterActive","isRunning","dexihRemoteAgentHubs","setNoRemoteAgent","activeAgent","getRemoteAgentsPromise","remoteAgents","isAuthorized","remoteAgentKey","remoteAgent","instanceId","defaultAgents","isDefault","getRemoteAgentStatus","otherAgents","remoteAgentHubs","authorized","addHubErrorMessage","required","agent","getRemoteLibrariesPromise","ref","connectionAssemblyName","connectionClassName","userConfig","u","functionAssemblyName","functionClassName","functionMethodName","functionType","command","Connect","HubChange","hubChange","updateHubChange","HubError","DatalinkProgress","task","addDatalinkProgress","DatalinkStatus","DatajobProgress","addDatajobProgress","DatalinkTestProgress","addDatalinkTestProgress","ApiStatus","apiData","addApiStatus","flatFiles","mergeChange","hubVariables","columnValidations","datajobs","datalinks","customFunctions","RemoteAgent","datalinkTests","views","apis","dashboards","listOfValues","tagObjects","mergeChangeTagObjects","source","keyField","current","importAction","Delete","isHubCacheLoaded","writerResult","referenceKey","targetTableKey","addTableProgress","childResults","currentStatus","auditKey","waitMessage","confirmMessage","postConfirm","undefined","LogMessage","post","cancelToken","postRemote","getRemoteAgentCurrent","confirmDialog","confirm","hubPostRemote","extra","getRemoteData","hubPostConfirm","remoteAgentHubKey","remoteAgentHub","remoteAgentPromise","globalCachePromise","getGlobalCachePromise","hubPromise","getHubCachePromise","all","values","agentStatus","getTransformWriterResult","previousDatalinks","getTransformWriterTable","previousDatajobs","activeDatalinkTests","previousDatalinkTests","referentKey","tasks","datalinkResult","SearchForTable","child","emails","sendInvites","userIds","alertEmails","content","JSON","stringify","blob","Blob","navigator","msSaveBlob","document","createElement","download","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","importPackage","connectionNames","itemKeys","postRemoteGetKey","getRemoteResponse","save","importedTables","doImport","saveTables","tableKeys","hubPostRemoteConfirm","dropTables","names","remoteAgentId","getCurrentRemoteAgentId","downloadFile","sourceTableKeys","datalinkType","targetTableName","addSourceColumns","auditColumns","datalinkName","datalinkNames","isShared","datalinkKeys","truncateTarget","resetIncremental","resetIncrementalValue","inputColumns","inputParameters","connectionId","getWebSocketConnectionId","datalinkTestKeys","auditType","connectionKeys","referenceKeys","childItems","rows","datajobKeys","viewNames","isChecked","objectKeys","apiNames","apiKeys","showRejectedData","selectQuery","previewTableDataQuery","previewData","constructDataTableColumns","viewConfig","getData","previewUpdates","entityStatus","parentParameters","getBestDownloadUrl","downloadUrl","urls","resetCache","Static","staticData","promise","httpPromise","getFromExternal","summaryOnly","profileTableName","downloadObjects","zipFiles","downloadFormat","addUpdateTask","addHubSuccessMessage","getProfileTable","downloadTableData","Csv","validations","validationNames","validation","functionNames","datalinkTransformItem","testValues","fileFormatNames","testValue","variables","variableNames","itemNames","createDefaultDatajob","stepKey","newDatajob","managedConnections","flatFilePath","getConnection","subdirectory","useCustomFilePaths","Incoming","fileIncomingPath","Processed","fileProcessedPath","Rejected","fileRejectedPath","Outgoing","fileOutgoingPath","fixTrailingSlash","server","defaultDatabase","fileRootPath","files","fileNames","fromFilePath","toFilePath","fromPath","toPath","filePath","updateStrategy","fileName","postRemoteUpload","formatType","loadData","includeFileName","includeFileDate","includeFileRowNumber","reference","ApiViewComponent","eSourceType","CancelButtonComponent","formsService","HeaderComponent","layoutService","collapsed","mobileViewActivated","_hubCacheSubscription","_layoutSubscription","store","menuCollapsed","_notificationSubscription","getNotificationObservable","toastMessage","buttonName","delay","onButtonClick","m","toastClick","toasts","add","searchString","informationDialog","documentMethods","enter","exit","classList","contains","documentElement","method","remove","onCollapseMenu","logout","onMenuToggle","onFullScreenToggle","logOut","MenuItemComponent","iconClass","DownloadButtonComponent","autoCompact","eDownloadFormat","downloadFormats","ActionsApiButtonComponent","pullRight","deleteApis","cacheAddApi","shareItems","activateApis","deactivateApis","routes","component","children","redirectTo","pageTitle","pathMatch","loadChildren","HubBaseModule","Routing","forChild","GtFilterPipe","WidgetsModule","ActionsDatalinkButtonComponent","showEdit","relatedDatalinks","relatedDatajobs","targetTables","parent","deleteDatalinks","runDatalinks","datalinkString","cancelDatalinks","setNewDatajob","navigateByUrl","downloadItems","downloadObject","downloadData","environment","production","apiUrl","RemoteAgentComponent","eDataPrivacyStatus","getRemoteAgentObservable","selectedRemoteAgent","activeHubAgents","r","console","setCurrentRemoteAgent","pingRemoteAgents","ApiStatusComponent","progressClick","eApiStatus","showCancel","_currentStatusSubscription","apiStatus","Activated","downloadUrls","downloadUrlType","Proxy","downloadType","securityKey","testUrl","proxy","errorCount","statusIcon","$event","val","selBox","left","top","opacity","focus","select","execCommand","ActionsFileFormatButtonComponent","tab","con","col","PreviewDashboardComponent","refreshDataSubject","refreshDataObservable","eDataObjectType","getSharedDataIndex","refresh","dexihMessage","getDashboard","setOptions","options","gridType","ScrollVertical","compactType","margin","outerMargin","outerMarginTop","outerMarginRight","outerMarginBottom","outerMarginLeft","useTransformPositioning","mobileBreakpoint","minCols","maxCols","minRows","maxRows","maxItemCols","minItemCols","maxItemRows","minItemRows","maxItemArea","minItemArea","defaultItemCols","defaultItemRows","fixedColWidth","fixedRowHeight","keepFixedHeightInMobile","keepFixedWidthInMobile","scrollSensitivity","scrollSpeed","enableEmptyCellClick","enableEmptyCellContextMenu","enableEmptyCellDrop","enableEmptyCellDrag","emptyCellDragMaxCols","emptyCellDragMaxRows","ignoreMarginInRow","draggable","enabled","resizable","swap","pushItems","disablePushOnDrag","disablePushOnResize","pushDirections","north","east","south","west","pushResizeItems","displayGrid","disableWindowResize","disableWarnings","scrollToNewItems","itemChangeCallback","itemComponent","itemResize","itemResizeCallback","itemInitCallback","isMaximized","maximizedIndex","AuthService","_currentUser","_refreshUserAttempted","_hubs","_hubErrors","_displayHelp","_tasks","_notification","_notifications","_logErrors","_waitMessages","_waitMessagesObserve","_globalCache","_remoteAgents","updateRemoteAgentsFlag","isInitialized","xSrfToken","_userSubscribe","_webSocketSubscribe","_logErrorsSubscribe","getCookie","webSocketService","refreshGlobalCache","refreshUser","getUserObservable","refreshHubs","initializeWebSocket","Disconnect","ActiveAgentUpdate","existingIndex","RemoteAgentDelete","RemoteAgentUpdateKey","RemoteAgentDeleteKey","HubUpdate","setHubAccess","previousHub","toLocaleLowerCase","HubDelete","hubKeys","Task","FileDownload","formBody","HubKey","SecurityToken","securityToken","FileReference","contentType","DownloadReady","modalComponent","newWin","closed","logMessage","headers","defaultHeaders","getApiUrl","withCredentials","queryParams","dexihHubUsers","ReadOnly","Public","getWebSocketStatusObservable","postBody","messageKey","addWaitMessage","removeWaitMessage","json","JsonNoNulls","parse","downloadUrl2","localStorage","setItem","reason2","httpError","formData","append","baseUrl","getRemoteUrl","clientConnectionId","FormData","req","reportProgress","request","UploadProgress","percentDone","round","loaded","total","Complete","dtColumns","inputPrompt","inputValue","prompt","information","returnData","reader","FileReader","readAsText","onload","force","_refreshUserPromise","previousUser","isAdmin","userResult","loadScript","forceLogin","googleSignIn","externalLogin","loginResult","identityLogin","Google","authenticationToken","googleLoadScript","gapi","load","auth2","init","scope","client_id","googleClientId","login","isSignedIn","currentUser","profile","getBasicProfile","getEmail","getGivenName","getFamilyName","Eea","getAuthResponse","id_token","getLoginDetails","idToken","signIn","getAuthInstance","signOut","clientId","config","auth","authority","redirectUri","cacheLocation","storeAuthStateInCookie","userAgentApplication","handleRedirectCallback","errorDesc","microsoftApp","microsoftClientId","getAccount","userNames","split","accountIdentifier","scopes","acquireTokenSilent","authResponse","accessToken","microsoftSignIn","Microsoft","tokenPromise","loginPopup","microsoftAuthResponseToLogin","account","provider","src","isExternal","script","getElementById","newScript","async","head","externalLoginCallback","href","verificationCode","currentAgents","newAgents","newAgent","currentAgent","activeAgents","msg","issue","issueKeys","issueKey","comment","issueCommentKeys","hubName","hubNames","remoteAgentKeys","postGetRaw","currentRoute","outlet","routeSnapshot","snapshot","navigateSkip","root","breadcrumbs","childrenRoutes","segment","queryParamsHandling","maxTime","newGuid","set","setTimeout","has","errorMessage","originalTask","taskId","v","getFromApi","maxResults","reload","sharedItemsIndex","getItem","sharedItems","flags","getActiveAgent","parameterName","FieldFilterPipe","UpdateQueries","JsonCompact","compare","IsEqual","showFilter","GreaterThan","GreaterThanEqual","LessThan","LessThanEqual","NotEqual","IsIn","IsNotIn","IsNull","IsNotNull","Like","TablePreviewDataComponent","AddCsrfHeaderInterceptorService","handle","xsrfToken","setCookie","ListOfValuesViewComponent","ViewEditButtonComponent","ChartBuilderModule","DexihMessageModule","SupportOptionsComponent","isExpanded","supportOptions","ActionsConnectionButtonComponent","hideEdit","eConnectionCategory","eConnectionPurpose","GetConnectionReference","connectionReference","deleteConnections","NavigationModule","EncryptionStatusIconComponent","isEncrypted","ActionsColumnValidationButtonComponent","UtilsModule","ViewEditComponent","hasEdited","eViewType","connectionTables","showChart","firstLoad","dialogOpen","animationValues","animationPaused","action","hasChanged","getConnectionTables","animateConfig","inputValues","viewType","Chart","getColumns","_formChangeSubscription","getCurrentFormObservable","form","controls","history","pushState","newUrl","pathname","currentForm","autoRefresh","_changesSubscription","valueChanges","reset","refreshDatalink","setValue","chartConfig","viewForm","viewInputs","isInput","input","defaultValue","tableColumns","ioColumns","buildInputOutput","getDatalinkOutputColumns","baseData","viewParameters","datalinkParameterKey","removeAt","datalinkParameters","datalinkParameter","parameterForm","getRawValue","previewView","seriesColumn","query","markAsChanged","returnValue","unloadNotification","WebSocketService","_webSocketStatus","_webSocketMessages","startingWebSocket","hubConnected","_connectHubSubscription","hubConnection","stop","configureLogging","Trace","withUrl","build","on","remoteMessage","onclose","err","sendDisconnect","_connectionId","startWebSocket","Connected","start","sendConnect","disconnectMessage","invoke","PreviewDataComponent","requiresRefreshDataSubject","requiresRefreshDataObservable","allowViewSave","viewSource","previewDatalinkKeyData","previewTransformData","previewTableKeyData","previewTableData","downloadDatalinkData","promptDialog","saveView","StatusInfo","DatalinkStatusComponent","eRunStatus","previousStatus","getStatus","dataObject","currentWriterResult","_previousStatusSubscription","statusInfo","percentage","statusType","lastRowTotal","rowsTotal","numberWithCommas","rowsReadPrimary","deactivateDatajobs","cancelDatalinkTests","shortcutOpen","isMobile","userAgent","device","menuIsOpen","LayoutService","subject","resizeUpdate","complete","innerWidth","condition","TableViewComponent","CountdownComponent","_changeDetector","_timing","_stopTimer","delta","_interval","setInterval","detectChanges","clearInterval","endDate","_time","getTime","_startTimer","parseInt","date","max","floor","days","hours","minutes","seconds","template","changeDetection","OnPush","end","timing","ViewViewComponent","SharedModule","ngModule","PreviewComponent","embed","SeriesAnimateComponent","dataChange","initializeAnimation","animationStop","animationSeriesValues","animationRowIndex","automatic","animationPlay","animationFilter","animationColumnIndex","from","Set","formatValue","animationValue","first","animationTimer","HubSharedModule","QueryBuilderComponent","onRefreshData","allRows","typeCodes","eCompare","requiresRefresh","sorts","refreshEvent","_refreshSubscription","requiresRefreshEvent","_requiresRefreshSubscription","changed","selectColumns","sortColumns","aggregate","outputColumn","column1","column2","compareDataType","filters","onChanged","savedRowCount","webpackContext","webpackContextResolve","__webpack_require__","webpackContextKeys","module","DexihIconsModule","RibbonComponent","ActionsDashboardButtonComponent","deleteDashboards","cacheAddDashboard","NewTableButtonComponent","AppComponent","setDialogDefaultContainer","modal","waitMessagesObservable","getWaitMessagesObservable","_waitMessagesSubscription","waitMessages","_routeEventsSubscription","events","loadingRouteKey","DragZoneDirective","dragStart","dataTransfer","setData","zone","onDragStart","DependentItemsButtonComponent","dependent","cacheAddObjectFromKey","IsValidFilterPipe","moment","Functions","language","languages","locale","getLanguage","constructor","calendar","setTime","protocol","sameSite","cookie","toUTCString","parts","pop","shift","x","SummaryComponent","noManagedConnection","filterString","datalinkFilterString","connectionFilterString","columnValidationFilterString","fileFormatFilterString","datajobFilterString","tableFilterString","SeriesAnimatePropertiesComponent","seriesChanged","DexihFormControlsModule","CalendarPipe","ActionsTableButtonComponent","refreshTables","changedTables","datalinksSource","datalinksTarget","canWrite","reImportTables","getTableKeys","tableNames","clearTables","createTables","getTables","deleteTables","getDbml","HeaderModule","InputParametersComponent","allowAddRemove","onChange","parentParams","showRefresh","maxKey","_hubSubscription","refreshLOV","insert","runTime","previewListOfValuesKey","valueDesc","textValue","desc","HubComponent","ePermission","openDelay","webSocketStatus","_remoteAgentSubscription","updateHub","onFocus","eDatalinkObjectType","eObjectUse","ImpactLineage","objectUse","Function","PassThrough","Source","Target","mappingStatus","ImpactItems","impact","newStatus","GetImpact","InputOutputColumns","nodeDatalinkColumnKey","childColumn","findColumn","returnCol","findNodeColumn","findParentColumns","validColumns","cols","newCol","findValidColumn","levelCount","returnColumns","repeat","io","getAvailableColumns","apply","outputColumns","newPosition","newGroup","copyDatalinkColumn","isIncrementalUpdate","columnGroup","newColumns","newTable","lineage","transformItems","transformColumns","pos","nodeColumn","copyDatalinkColumns","transformItemType","groupNode","groupColumn","joinColumns","joinNode","joinColumn","joinPos","joinDuplicateStrategy","MergeValidDates","jc","joinTable","parameterIsOutput","param","arrayParameters","arrayParam","passThroughColumns","node","targetColumns","ColumnUsageNode","tableColumn","datalinkTransform","flat","useNextTransform","impactTree","newMappingStatus","nextTransform","SourceTable","Transform","TargetTable","columnIsMapped","newImpactTree","createDatalinkImpact","inputParams","flattenParameters","parameterIsInput","inputParam","outParams","outParam","isAutoGenerateColumn","isQuery","usePreviousTransform","lineageTree","currentColumn","previousTransform","transforms2","outputs","newLineageTree","createDatalinkLineage","inParam","AppModule","provide","useClass","multi","bootstrap","DexihInvalidFormIconComponent","pageLoaded","control","valid","LoginInfoComponent","userSubcription","SharedDataComponent","fb","header","dataIndex","searchForm","group","updateSearch","_searchSubscription","addErrorMessage","DashboardItem","embedLink","embedFrame","scrollTop","addSuccessMessage","DatalinkTestViewComponent","ActionsViewButtonComponent","deleteViews","HubsComponent","textClass","hubStatusMessage","hubCacheStatusSubscription","NotLoaded","menu","collapse","manageHubs","ItemEditGuard","canDeactivate","DatalinkViewComponent","eDatalinkType","canActivate","AdminModule","HubsModule","HubModule","AuthModule","PublicModule","routing","forRoot","DashboardViewComponent","RemoteAgentViewComponent","selectedAgent","isConnected","isSelected","lastLoginDateTime","ActionsDatalinkTestButtonComponent","deleteDatalinkTests","runDatalinkTests","runDatalinkTestSnapshot","webpackEmptyAsyncContext","HubFormsService","_datalinkTargetChanges","_parameterChanges","_currentFormObservable","formErrors","formSaving","showAllErrors","IgnoreFormChange","ignoreHubCacheChange","formChangeCount","validationMessages","validationFieldMessages","clearFormSubscriptions","_valueChangesSubscription","_connectionChangesSubscription1","_connectionChangesSubscription2","_connectionChangesSubscription3","_tableChangesSubscription1","_tableChangesSubscription2","_tableColumnChangesSubscription1","_tableColumnChangesSubscription2","_tableColumnChangesSubscription3","_datalinkChangesSubscription1","_datalinkChangesSubscription2","_datalinkChangesSubscription3","_datalinkTestChangesSubscription","_genericParameterSubscription","itemTemplate","excludeKeys","existingKeys","addControl","onValueChanged","getFormErrorMessages","markAsDirty","dirty","errors","createErrorMessage","minlength","actualLength","requiredLength","maxlength","maxvalue","minvalue","formGroupFunc","pristine","call","ngOnDestroy","saveAs","valueMethod","saveMethod","import1","getFormErrorsRecursive","depth","formArray","cont","formIndex","value1","value2","trim","disabled","minLength","addMissing","subscription2","isArray","connectionForm","duplicateConnectionNameValidator","connectionString","validators","requiredConnectionFields","passwordDisplay","passwordRaw","connectionStringDisplay","connectionStringRaw","startForm","no","stringCompare","useConnectionString","setErrors","tableForm","duplicateIndexNameValidator","dexihTableIndexes","array","ic","tableIndexColumn","indexes","tableIndex","duplicateTableNameValidator","defaultTableLogicalName","validator","requiredTableFields","tableColumnsForm","useLogical","siblingColumns","columnForm","duplicateTableColumnNameValidator","columnMinRangeValidator","columnMaxRangeValidator","isNumber","updateValueAndValidity","columnsArray","min","fileFormatForm","duplicateFileFormatNameValidator","quote","duplicateViewNameValidator","validateViewSource","duplicateDashboardNameValidator","lock","dashboardItemsForm","dashboardItem","resizeEvent","formParameters","currentParameters","clear","currentParameter","newParameter","newFormParameter","listOfValuesItem","lovForm","duplicateLovNameValidator","apiForm","validateDatalinkTable","validationForm","duplicateValidationNameValidator","customFunctionForm","duplicateCustomFunctionNameValidator","dexihCustomFunctionParameters","customFunctionParametersFormGroup","hubVariable","hubVariableForm","duplicateHubVariableNameValidator","duplicateTagNameValidator","duplicateDatalinkTestNameValidator","testStepsForm","datalinkTestStep","testTablesForm","datalinkTestTable","testTable","triggerForm","datajobForm","stepForm","duplicateStepNameValidator","dexihDatalinkDependencies","dep","datalinkDependencyFormGroup","dexihDatalinkStepColumns","datalinkStepColumnFormGroup","depForm","colForm","triggers","dexihTriggers","triggerFormGroup","stepsArray","duplicateDatajobNameValidator","requiredNotZero","failAction","datalinkStepFormGroup","remoteAgentForm","duplicateDatalinkColumnNameValidator","datalinkTableColumn","transformForm","sourceDatalinkTableFormGroup","datalinkDatalinkTransformItemFormGroup","datalinkTransformForm","itemForm","datalinkFunctionParametersFormGroup","duplicateOutputColumn","asyncValidators","invalidClassName","genericTypeCode","typeCode","isGeneric","arrayParams","ap","aParam","datalinkTransformItemForm","GetFunctionReference","func","datalinkFunctionArrayParametersFormGroup","inconsistentDataType","parameterDataType","Unknown","profileForm","targetForm","setControl","datalinkTable","profiles","dexihDatalinkProfiles","datalinkProfileFormGroup","targets","datalinkTargetFormGroup","datalinkTransformFormGroup","datalinkForm","duplicateDatalinkNameValidator","templateDatalink","updateTransformFormColumns","transformsArray","transformFormControl","emitEvent","transformItemForm","paramForm","targetsArray","ConnectionViewComponent","getRemoteLibrariesObservable","DexihFormErrorsModule","requiredValue","eInputFormat","inputFormats","SingleSeries","allowLabel","maxSeries","allowYSeries","allowMinMax","allowBubble","inverse","MultiSeries","ComboSeries","InverseSeries","Xy","XyMinMax","XyBubble","ChartItem","ChartType","isHorizontal","allowGradient","allowLegend","allowXAxis","allowYAxis","allowXScaleMin","allowXScaleMax","allowYScaleMin","allowYScaleMax","allowLabels","allowExplodeSlices","allowDoughnut","allowGridLines","defaultShowXAxisLabel","defaultShowYAxisLabel","defaultShowXAxis","defaultShowYAxis","defaultShowGridLines","defaultColorScheme","defaultShowLegend","defaultShowLabels","isBar","ChartTypes","charts","BarVertical","inputFormat","isLine","BarHorizontal","Pie","Line","allowFill","Polar","Radar","Scatter","Bubble","NewDatalinkButtonComponent","InputParametersViewComponent","userParameters","allowUserSelect","previewListOfValues","ChartViewComponent","responsive","gridColumnIndex","labelColumnIndex","seriesPivotIndex","seriesColumnsIndex","xColumnIndex","yColumnIndex","minColumnIndex","maxColumnIndex","radiusColumnIndex","latitudeColumnIndex","longitudeColumnIndex","eChartType","chartTypes","colorSets","customColors","colorIndex","labelColors","getChartType","updateDataEvent","_updateChartSubscription","_updateOptionsSubscription","updateOptionsEvent","updateChartLayout","updateChartOptions","chart","simpleChanges","getColumnIndex","multiGridColumn","labelColumn","pivotColumn","xColumn","yColumn","minColumn","maxColumn","radiusColumn","latitudeColumn","longitudeColumn","seriesColumns","updateChart","chartType","chartGroup","yAxisLabel","xAxisLabel","seriesLabel","changeColor","colorSet","colorScheme","colors","domain","getColorSet","labels","lightenPercent","count","color","getColor","pSBC","setLabel","resultArray","chartItems","gridSeriesValues","chartIndex","chartItem","dataSets","pivotValues","uniqueValues","seriesCount","pivotData","seriesLabels","pivotIndex","pivotValue","seriesData","row","rawValue","dataSet","setSeriesLabel","lineChart","yAxisID","alternateAxis","fill","spanGaps","lineCurve","Straight","lineTension","cubicInterpolationMode","Bezier","Monotone","baseColor","singleBarColor","hoverBackgroundColor","backgroundColor","pointBackgroundColor","borderColor","generateColorSet","yAxisLabelRight","dataSetKeys","labelValues","data1","labelData","xyData","y","radius","updateChartData","plugins","showDataLabel","update","destroy","chartOptions","ngOnInit","gridValues","maintainAspectRatio","scales","xAxes","showXAxis","scaleLabel","showXAxisLabel","labelString","ticks","autoScale","xScaleMin","xScaleMax","gridLines","showGridLines","drawBorder","zeroLineColor","yAxes","showYAxis","showYAxisLabel","yScaleMin","yScaleMax","datalabels","formatter","ctx","showDataValue","anchor","labelAnchor","align","labelAlign","legend","showLegend","legendPosition","cutoutPercentage","cutOutPercentage","initChartOptions","valuesSet","columnIndex","c0","c1","l","g","P","f","h","pSBCr","n","slice","parseFloat","QueryBuilderModule","ColumnValidationEditButtonComponent","AllFilterPipe","filterValue","SeriesAnimateModule","DatalinkEditButtonComponent","PrintButtonComponent","printContents","popupWin","innerHTML","write","print","ControlError","childControlErrors","DexihInvalidFormDetailsComponent","showErrors","controlErrors","statusChanges","invalid","getFormErrors","parentControlError","controlError","setError","parentControl","getFunctionType","baseLink","ActionsListOfValuesButtonComponent","PrivacyStatusButtonComponent","privacyStatus","SharedDataModule","RibbonModule","NewConnectionButtonComponent","ChartBuilderComponent","eLineCurveItems","updateDataSubject","updateOptionsSubject","svgElem","getElementsByTagName","getComputedStyle","getPropertyValue","replaceWith","height","clientHeight","width","clientWidth","logging","canvas","toBlob","selectable","TasksComponent","tasksRunning","eManagedTaskStatus","eManagedTaskStatusItems","active","loading","activities","lastUpdate","getTasksObservable","_tasksSubscription","Created","Queued","alert","TagState","TagsFilterButtonComponent","tagStates","tagChange","selectedTags","ActionsDatajobButtonComponent","deleteDatajobs","truncate","runDatajobs","datajobsString","cacheAddDatajob","activateDatajobs","isIndeterminate","TagsUpdateButtonComponent","objectTypeName","updateTags","objectTags","objects","matchingTags","deleteTagObjects","saveTagObjects","HubsService","embedUserName","ll","settings","remoteAgentSettings","logLevel","remoteApplicationSettings","RemoteApplicationSettings","TableColumnViewComponent","DatajobViewComponent","MenuParentComponent","expanded","toggle","animations","MainLayoutComponent","sidebarState","mainState","SaveButtonComponent","DropZoneDirective","requireFiles","dropAllowedClass","dropNotAllowedClass","dropFiles","dragFilesOver","dragLeave","dragInvalid","dropData","isMouseOver","isDropAllowed","stopPropagation","dropAllowed","dropEffect","types","getZone","zones","z","dragClass","_elementClass","elementClass","onDragOver","onDragLeave","onDrop","AuthLayoutComponent","LayoutModule","DexihSupportOptionsModule","EmptyLayoutComponent","FileFormatViewComponent","ConnectionEditButtonComponent","SortDescPipe","FooterComponent","_globalCacheSubscription","buildDate","year","getFullYear","buildVersion","eLogLevel","LogFactory","category","toISOString","debug","formatMessage","Warning","warn","info","Log","showToolbar","updateQueryParameters","onMaximize","getSharedDataObject","paramValues","searchParams","URLSearchParams","newRelativePathQuery","sharedData","PreviewDashboardItemComponent","maximize","refreshData","TimeDirective","NavigationComponent","hubCacheLoaded","objectCounts","ignoreClick","activeAgentCount","hideMenu","_hubCacheObserve","targetElement","clickedInside","sidebarElement","nativeElement","onClick","AnimateConfig","ApiData","successCount","ApplicationUser","concurrencyStamp","lockoutEnabled","lockoutEnd","normalizedEmail","passwordHash","phoneNumber","securityStamp","accessFailedCount","normalizedUserName","phoneNumberConfirmed","twoFactorEnabled","isRegistered","isEnabled","hubQuota","privateKey","certificateChain","certificateExpiry","AppSettingsSection","userPrompt","userToken","encryptionKey","webServer","autoUpgrade","allowPreReleases","autoStartPath","CacheManager","googleMapsAPIKey","cacheEncryptionKey","ChartConfig","separateAxis","eLineCurve","ChartSeries","ClientMessage","eClientCommand","ConnectionAttribute","connectionCategory","databaseDescription","serverDescription","allowsConnectionString","allowsSql","allowsFlatFiles","allowsManagedConnection","allowsSourceConnection","allowsTargetConnection","allowsUserPassword","allowsWindowsAuth","requiresDatabase","requiresLocalStorage","serverHelp","allowsToken","defaultSchema","ConnectionReference","eMessageCommand","DataPack","DataPackColumn","eTypeCode","DeleteQuery","DexihActiveAgent","ipAddress","dataPrivacyStatus","upgradeAvailable","version","latestVersion","latestDownloadUrl","namingStandards","DexihApi","autoStart","cacheQueries","cacheResetInterval","logDirectory","createDate","DexihApiParameter","DexihBaseEntity","DexihColumnBase","isUnicode","eDeltaType","isUnique","isMandatory","securityFlag","eSecurityFlag","DexihColumnValidation","minValue","maxValue","patternMatch","regexMatch","listOfNotValues","lookupIsValid","lookupMultipleRecords","invalidAction","cleanAction","cleanValue","DexihConnection","useWindowsAuth","username","usePasswordVariable","useConnectionStringVariable","embedTableKey","connectionTimeout","commandTimeout","DexihCustomFunction","methodCode","resultCode","returnType","genericTypeDefault","DexihCustomFunctionParameter","allowNull","DexihDashboard","DexihDashboardItem","scrollable","DexihDashboardItemParameter","dashboardItemKey","DexihDashboardParameter","DexihDatajob","eFailAction","fileWatch","alertLevel","eAlertLevel","DexihDatajobParameter","DexihDatalink","sourceDatalinkTableKey","eUpdateStrategy","loadStrategy","eTransformWriterMethod","rowsPerCommit","rowsPerProgress","rollbackOnFail","addDefaultRow","DexihDatalinkColumn","DexihDatalinkDependency","datalinkStepKey","dependentDatalinkStepKey","DexihDatalinkParameter","DexihDatalinkProfile","detailedResults","DexihDatalinkStep","DexihDatalinkStepColumn","DexihDatalinkStepParameter","DexihDatalinkTable","rowsStartAt","rowsEndAt","rowsIncrement","disableVersioning","disablePushDown","DexihDatalinkTarget","DexihDatalinkTest","DexihDatalinkTestStep","targetSchema","expectedTableName","expectedSchema","errorConnectionKey","errorTableName","errorSchema","DexihDatalinkTestTable","sourceSchema","sourceTableName","testSchema","testTableName","DexihDatalinkTransform","joinDatalinkTableKey","joinSortDatalinkColumnKey","transformClassName","transformAssemblyName","joinStrategy","eJoinStrategy","Auto","eDuplicateStrategy","joinNotFoundStrategy","eJoinNotFoundStrategy","joinSortDatalinkColumn","maxInputRows","maxOutputRows","dataCache","DexihDatalinkTransformItem","targetDatalinkColumnKey","sourceDatalinkColumnKey","joinDatalinkColumnKey","filterDatalinkColumnKey","sourceValue","joinValue","functionCaching","eFunctionCaching","sortDirection","filterCompare","seriesGrain","seriesStep","seriesFill","seriesStart","seriesFinish","seriesProject","functionCode","functionResultCode","onError","eErrorAction","onNull","Execute","notCondition","eInvalidAction","DexihFileFormat","matchHeaderRecord","skipHeaderRows","allowComments","bufferSize","delimiter","detectColumnCountChanges","hasHeaderRecord","ignoreHeaderWhiteSpace","ignoreReadingExceptions","ignoreQuotes","quoteAllFields","quoteNoFields","skipEmptyRecords","trimFields","trimHeaders","willThrowOnMissingField","setWhiteSpaceCellsToNull","DexihFunctionArrayParameter","functionParameterKey","datalinkColumnKey","DexihFunctionParameter","DexihFunctionParameterBase","DexihHub","eSharedAccess","timeZone","DexihHubEntity","DexihHubKeyEntity","DexihHubNamedEntity","DexihHubUser","userId","receiveAlerts","DexihHubVariable","valueRaw","isEnvironmentVariable","DexihIssue","eIssueType","Other","eIssueCategory","severity","eIssueSeverity","Critical","gitHubLink","isPrivate","issueStatus","eIssueStatus","Open","dexihIssueComments","DexihIssueComment","DexihListOfValues","keyColumn","nameColumn","descriptionColumn","cacheSeconds","DexihParameterBase","DexihRemoteAgent","restrictIp","allowExternalConnect","ipAddresses","hashedToken","lastLoginIpAddress","DexihRemoteAgentHub","DexihTable","baseTableName","tableType","eTableType","sourceConnectionName","rejectedTableName","queryString","rowPath","sortColumnKeys","autoManageFiles","fileMatchPattern","restfulUri","maxImportLevels","isVersioned","fileSample","DexihTableColumn","DexihTableIndex","DexihTableIndexColumn","tableIndexKey","eSortDirection","DexihTag","DexihTagObject","DexihTrigger","cronExpression","DexihView","DexihViewParameter","DownloadData","transformSettings","DownloadObject","DownloadReadyBase","DownloadReadyMessage","DownloadUrl","eStatus","FileConfiguration","operator","andOr","eAndOr","And","FlatFile","fileConfiguration","outputSortFields","FunctionParameter","isIndex","linkedName","linkedDescription","isLabel","isPassword","defaultFormat","FunctionReference","resultMethodName","resetMethodName","importMethodName","genericType","isStandardFunction","returnParameters","outputParameters","resultReturnParameters","resultInputParameters","resultOutputParameters","HubUser","Import","warnings","ImportAction","ImportObject","InputColumn","InputParameter","InputParameterBase","InputParameters","InsertQuery","insertColumns","ListOfValuesItem","LoggingSection","includeScopes","LogLevelSection","logFilePath","LoginModel","system","microsoft","ManagedTask","originatorId","categoryKey","referenceId","counter","concurrentTaskAction","eConcurrentTaskAction","stepName","fileWatchers","nextTriggerTime","runCount","dependentTaskIds","dependenciesMet","ManagedTaskFileWatcher","isStarted","ManagedTaskProgressItem","ManagedTaskTrigger","intervalType","eIntervalType","Interval","daysOfMonth","weeksOfMonth","skipDates","NamingStandards","NetworkSection","externalDownloadUrl","localIpAddress","localPort","proxyUrl","downloadPort","enforceHttps","autoGenerateCertificate","dynamicDomain","certificateFilename","certificatePassword","enableUPnP","ParameterArray","ParameterColumn","ParameterJoinColumn","ParameterOutputColumn","Parameters","ParameterValue","PermissionsSection","allowLocalFiles","allowAllPaths","allowedPaths","allowAllHubs","allowedHubs","PluginsSection","mLNet","excel","oracle","dB2","mongo","PrivacySection","allowDataDownload","allowDataUpload","allowLanAccess","allowExternalAccess","allowProxy","QueryColumn","RegisterModel","eLoginProvider","Dexih","firstname","lastname","RemoteAgentProperties","RemoteAgentSettings","RemoteAgentSettingsSubset","allowDownload","allowUpload","autoSchedule","firstRun","preRelease","smtpServer","smtpUserName","smtpPassword","smtpPort","enableSsl","fromEmail","adminEmails","alertOnShutdown","alertOnCritical","requiresUpgrade","RemoteLibraries","timeZones","RemoteMessage","messageId","timeOut","RemoteSettings","appSettings","systemSettings","SystemSettingsSection","runtime","RuntimeSection","network","privacy","permissions","alerts","RemoteTimeZone","RenewSslCertificateModel","ResponseMessage","configDirectory","appSettingsPath","externalIpAddress","defaultProxyUrl","userHash","generateUserToken","saveSettings","doUpgrade","SelectColumn","eAggregate","SelectQuery","tableName","groups","groupFilters","joins","eFlatFilePath","alias","SharedData","Sorts","maxAcknowledgeWait","responseTimeout","cancelDelay","encryptionIterations","maxPreviewDuration","maxConcurrentTasks","maxUploadSize","socketTransportType","defaultPreviewRows","maxPreviewRows","referenceTable","isParent","TableColumns","TableIndex","TableIndexColumn","columnName","TransformAttribute","TransformPerformance","transformName","TransformProperties","properties","primaryProperties","referenceProperties","TransformSettings","remoteSettings","TransformWriterOptions","TransformWriterResult","parentAuditKey","referenceName","lastMaxIncrementalValue","rowsPerProgressEvent","rowsCreated","rowsUpdated","rowsDeleted","rowsPreserved","rowsIgnored","rowsRejected","rowsFiltered","rowsSorted","rowsReadReference","passed","failed","readTicks","writeTicks","processingTicks","maxIncrementalValue","maxSurrogateKey","initializeTime","scheduledTime","lastUpdateTime","triggerMethod","eTriggerMethod","Manual","triggerInfo","performanceSummary","rejectTableName","isCurrent","isPrevious","isPreviousSuccess","isFinished","isScheduled","percentageComplete","UpdateQuery","updateColumns","UserModel","logins","roles","claims","ViewConfig","WebService","eAggregateItems","Sum","Average","Min","Max","Count","First","Last","eAlertLevelItems","Errors","eAndOrItems","Or","eApiStatusItems","Deactivated","eChartTypeItems","BarLineCombo","eCleanAction","eCleanActionItems","eClientCommandItems","DatajobStatus","TableProgress","ApiQuery","Command","eCompareItems","eConcurrentTaskActionItems","Parallel","Sequence","eConnectionCategoryItems","SqlDatabase","NoSqlDatabase","DatabaseFile","File","Hub","eConnectionPurposeItems","eDatalinkTypeItems","General","Stage","Deliver","Publish","Share","Query","eDataObjectTypeItems","eDataPrivacyStatusItems","NotAllowed","Lan","Internet","eDayOfWeek","eDayOfWeekItems","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","eDeltaTypeItems","UpdateReason","eDownloadFormatItems","eDownloadUrlType","eDownloadUrlTypeItems","Direct","eDuplicateStrategyItems","eEnvironment","eEnvironmentItems","Windows","Osx","Linux","eErrorActionItems","Ignore","eFailActionItems","eFlatFilePathItems","eFunctionCachingItems","eFunctionType","eFunctionTypeItems","eGenericType","eGenericTypeItems","eImportAction","eImportActionItems","eIntervalTypeItems","Once","Daily","Monthly","eInvalidActionItems","eIssueCategoryItems","Web","Saving","Security","eIssueSeverityItems","Major","Minor","Trivial","eIssueStatusItems","UnderReview","InProgress","Closed","eIssueTypeItems","Bug","Request","Question","Feedback","eJoinNotFoundStrategyItems","NullJoin","eJoinStrategyItems","Hash","Database","eLoginProviderItems","eLOVObjectType","eLOVObjectTypeItems","FileWatching","Completed","eMessageCommandItems","MessageResponse","RemoteAgentUpdate","RemoteMethod","eParameterDirection","eParameterDirectionItems","ePermissionItems","Suspended","PublishReader","eRunStatusItems","eSecurityFlagItems","eSeriesGrain","eSeriesGrainItems","eSharedAccessItems","Reader","eSharedObjectTypeItems","eSortDirectionItems","eSourceTypeItems","eStatusItems","Ready","Imported","Updated","Added","eTableTypeItems","eTestTableAction","eTestTableActionItems","DropCreate","TruncateCopy","DropCreateCopy","eTransformItemType","eTransformItemTypeItems","eTransformType","eTransformTypeItems","Internal","eTransformWriterMethodItems","eTriggerMethodItems","NotTriggered","Schedule","FileWatcher","External","eTypeCodeItems","Char","Enum","eUpdateStrategyItems","eViewTypeItems","eWeekOfMonth","eWeekOfMonthItems","Third","Fourth","logLevelItems","TransformPropertiesItemComponent","propertyKeys","MaxItemsFilterPipe","FileFormatEditComponent","ViewIndexComponent","tooltip","updateViews","sourceName","sourceTable","sourceDatalink","sharedIcon","sharedToolTip","editView","bootstrapModule","CustomFunctionEditButtonComponent","RouteBreadcrumbsComponent","_eventSubscription","Breadcrumb"],"mappings":"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CA,aAAKC,UAAL,GAAkB,EAAlB;AACH,O,EAGL;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEO,UAAMC,aAAa,GAAG,CACzB;AAAClF,WAAG,EAAE,oEAAcmF,SAApB;AAA+BN,YAAI,EAAE;AAArC,OADyB,EAEzB;AAAC7E,WAAG,EAAE,oEAAcoF,GAApB;AAAyBP,YAAI,EAAE;AAA/B,OAFyB,EAGzB;AAAC7E,WAAG,EAAE,oEAAcqF,SAApB;AAA+BR,YAAI,EAAE;AAArC,OAHyB,EAIzB;AAAC7E,WAAG,EAAE,oEAAcsF,IAApB;AAA0BT,YAAI,EAAE;AAAhC,OAJyB,EAKzB;AAAC7E,WAAG,EAAE,oEAAcuF,OAApB;AAA6BV,YAAI,EAAE;AAAnC,OALyB,EAMzB;AAAC7E,WAAG,EAAE,oEAAcwF,QAApB;AAA8BX,YAAI,EAAE;AAApC,OANyB,CAAtB,C,CASP;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,UAAMY,cAAc,GAA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,0EAAoBC,KAApC,IACJJ,CAAC,CAACG,SAAF,KAAgB,0EAAoBU,WADvC;AAEH;;;;;;UA26BQC,S;AAAb;AAAA;;AACW,eAAAzX,IAAA,GAAO,IAAI,oDAAJ,CAAoC,IAApC,CAAP;AACA,eAAA0X,YAAA,GAAe,KAAf;AAYV;;;;kCAVkBC,Y,EAAuC;AAAA;;AAClD,iBAAKD,YAAL,GAAoB,IAApB;AACAC,wBAAY,CAACC,IAAb,CAAkB,UAAC/X,MAAD,EAAY;AAC1B,qBAAI,CAACG,IAAL,CAAU6X,IAAV,CAAehY,MAAf;;AACA,qBAAI,CAAC6X,YAAL,GAAoB,KAApB;AACH,aAHD,WAGS,YAAM;AACX,qBAAI,CAAC1X,IAAL,CAAU6X,IAAV,CAAe,IAAf;;AACA,qBAAI,CAACH,YAAL,GAAoB,KAApB;AACH,aAND;AAOH;;;;WAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;UAEaI,mB,GAAb;AAAA;;AACW,aAAAxZ,GAAA,GAAM,CAAN;AACA,aAAA6E,IAAA,GAAe,IAAf;AACA,aAAA8G,WAAA,GAAsB,IAAtB;AACA,aAAAxC,KAAA,GAAQ,IAAR;AACV,O,EAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA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a,YAAI,EAAE;AAAnC,OAFwB,EAGxB;AAAC7E,WAAG,EAAE,mEAAaqf,KAAnB;AAA0Bxa,YAAI,EAAE;AAAhC,OAHwB,EAIxB;AAAC7E,WAAG,EAAE,mEAAasf,IAAnB;AAAyBza,YAAI,EAAE;AAA/B,OAJwB,EAKxB;AAAC7E,WAAG,EAAE,mEAAauf,aAAnB;AAAkC1a,YAAI,EAAE;AAAxC,OALwB,EAMxB;AAAC7E,WAAG,EAAE,mEAAawf,UAAnB;AAA+B3a,YAAI,EAAE;AAArC,OANwB,CAArB,C,CASP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEO,UAAM4a,WAAW,GAAG,CACvB;AAACzf,WAAG,EAAE,kEAAYqK,QAAlB;AAA4BxF,YAAI,EAAE;AAAlC,OADuB,EAEvB;AAAC7E,WAAG,EAAE,kEAAYkK,KAAlB;AAAyBrF,YAAI,EAAE;AAA/B,OAFuB,EAGvB;AAAC7E,WAAG,EAAE,kEAAYsF,IAAlB;AAAwBT,YAAI,EAAE;AAA9B,OAHuB,CAApB,C,CAMP;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;;UAGa6a,c;;SAOb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAC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","file":"main-es5.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\n\n@Component({\n    selector: 'table-edit-button',\n    templateUrl: './table-edit-button.component.html'\n})\nexport class TableEditButtonComponent implements OnInit {\n    @Input() key = null;\n\n    public hubPath: string;\n\n    constructor(private hubService: HubService) { }\n\n    ngOnInit() {\n        this.hubPath = this.hubService.getHubUrl();\n    }\n}\n","<a [routerLink]=\"[hubPath, 'table-edit', key]\" *ngIf=\"key\" > \n    <i class=\"fa fa-edit\"></i> \n    Edit \n</a>","import { Component, OnInit, Input } from '@angular/core';\nimport { TransformProperties } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'transform-properties',\n    templateUrl: 'transform-properties.component.html'\n})\n\nexport class TransformPropertiesComponent implements OnInit {\n    @Input() transformProperties: TransformProperties;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<d-widget-section *ngIf=\"transformProperties\" title=\"Query Details\" [showExpandButton]=\"true\">\n<ul  class=\"list-group\">\n    <transform-properties-item [transformProperties]=\"transformProperties\" ></transform-properties-item>\n</ul>\n</d-widget-section>\n","import { Component, OnInit, Input, OnDestroy, ElementRef, ViewChild, EventEmitter, Output, OnChanges } from '@angular/core';\nimport { AuthService } from '../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { Router, Route } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport {Location} from '@angular/common';\n\n@Component({\n    selector: 'dexih-help',\n    templateUrl: './dexih-help.component.html',\n    styleUrls: ['./dexih-help.component.scss']\n})\n\nexport class DexihHelpComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() title: string;\n    @Input() path: string;\n    @Input() display = false;\n    @Input() hubKey: string;\n\n    @Output() linkClick: EventEmitter<string> = new EventEmitter();\n\n    @ViewChild('scrollTo') scrollTo: ElementRef;\n\n    public data: string;\n\n    private _displayHelpSubscription: Subscription;\n\n    displayHelp: boolean;\n    constructor(\n        private authService: AuthService,\n        private router: Router,\n        private http: HttpClient,\n        private location: Location\n    ) { }\n\n    ngOnInit() {\n        this._displayHelpSubscription = this.authService.getDisplayHelp().subscribe(displayHelp => {\n            this.displayHelp = displayHelp;\n        });\n    }\n\n    ngOnChanges() {\n        if (this.path) {\n            const url = this.location.prepareExternalUrl(this.path);\n\n            this.http.get(url, { responseType: 'text' }).subscribe(result => {\n\n                let matches = new RegExp('{{SERVER}}|{{HUBKEY}}', 'gi');\n                this.data = result.replace(matches, match => {\n                    switch (match) {\n                        case '{{SERVER}}':\n                            // return this.location.prepareExternalUrl('./');\n                            return window.location.origin;\n                        case '{{HUBKEY}}':\n                            return this.hubKey;\n                    }\n                });\n\n                // data = this.replaceAll(data, '{{HUBKEY}}', this.hubKey)\n                // this.data = data;\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._displayHelpSubscription) { this._displayHelpSubscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.setDisplayHelp(false);\n    }\n\n    getRoute(event) {\n        let element = event.target;\n        while (element) {\n            let link: string = element.getAttribute('href');\n\n            if (link) {\n                if (link.endsWith('.md') && !link.startsWith('http')) {\n                    this.linkClick.emit(link);\n                } else if (link.startsWith('route:')) {\n                    let route = link.substr(6);\n                    this.router.navigate([route]);\n                } else if (link.startsWith('unsafe:route:')) {\n                    let route = link.substr(13);\n                    this.router.navigate([route]);\n                } else if (link.startsWith('#')) {\n                    this.router.navigate(['.', link]);\n                } else {\n                    window.open(link);\n                }\n                event.preventDefault();\n            }\n\n            element = element.parentElement;\n        }\n    }\n\n    replaceAll(str: string, find: string, replace: string): string {\n        return str.replace(new RegExp(find, 'g'), replace);\n    }\n}\n","\n    <d-widget *ngIf=\"displayHelp || display\" [title]=\"title\" iconClass=\"fa fa-lg fa-fw fa-question\" [showCloseButton]=\"true\" [padding]=\"true\" (close)=\"close()\">\n        <ng-template #header>\n            <d-button class=\"mr-1\" [routerLink]=\"['/hubs/index/help']\" [queryParams]=\"{path: '/intro/getting_started.md'}\">Getting Started</d-button>\n            <d-button [routerLink]=\"['/hubs/index/help']\" [queryParams]=\"{path: '/reference/references.md'}\">Reference</d-button>\n        </ng-template>\n        \n        <markdown [data]=\"data\" (click)=\"getRoute($event)\"></markdown>\n    </d-widget>\n","import {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DexihHelpComponent } from './dexih-help.component';\nimport { DComponentsModule} from 'ngx-d-components';\nimport { DMarkdownModule } from 'ngx-d-markdown';\nimport { RouterModule } from '@angular/router';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    DComponentsModule,\n   DMarkdownModule\n  ],\n  declarations: [DexihHelpComponent],\n  exports: [DexihHelpComponent],\n})\nexport class DexihHelpModule {\n\n}\n","import { ErrorHandler, Injectable, Injector } from '@angular/core';\nimport { AuthService } from './+auth/auth.service';\nimport { Message } from './+auth/auth.models';\nimport { LogFactory, eLogLevel } from '../logging';\n\n@Injectable()\nexport class GlobalErrorHandler implements ErrorHandler {\n\n    private logger: LogFactory;\n\n    constructor(public injector: Injector) {\n        this.logger = new LogFactory('Global');\n    }\n\n    handleError(error: any) {\n        const authService = this.injector.get(AuthService);\n        let message: Message;\n        if (error.rejection ) {\n            message = error.rejection;\n        } else {\n            let details = ''\n            if (error.stack) {\n                details = 'Client debug information: ' + error.stack\n            }\n\n            if (error.exceptionDetails) {\n                details = 'Server debug information: ' + error.exceptionDetails;\n            }\n\n            message = new Message(false, `Error: ${error.message}`,\n            details, null);\n        }\n        authService.addUpdateNotification(message, true);\n    }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihColumnValidation } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'columnValidation-view',\n    templateUrl: './columnValidation-view.component.html'\n})\n\nexport class ColumnValidationViewComponent implements OnInit {\n    @Input() columnValidation: DexihColumnValidation;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div class=\"float-right\">\n    <actions-columnValidation-button [columnValidation]=\"columnValidation\" [pullRight]=\"true\"></actions-columnValidation-button>\n</div>\n<h5>{{columnValidation.name}}</h5>\n<div *ngIf=\"columnValidation.description\">\n    <markdown [data]=\"columnValidation.description\"></markdown>\n</div>\n<div class=\"note\">Updated: {{columnValidation.updateDate | calendar }} </div>","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { SharedModule } from '../../shared/shared.module';\nimport { CancelButtonComponent, SaveButtonComponent } from './';\nimport { NewDatalinkButtonComponent } from './new-datalink-button/new-datalink-button.component';\nimport { NewConnectionButtonComponent } from './new-connection-button/new-connection-button.component';\nimport { NewTableButtonComponent} from './new-table-button/new-table-button.component';\nimport { ActionsDatajobButtonComponent } from './actions-datajob-button/actions-datajob-button.component'\nimport { ActionsDatalinkButtonComponent } from './actions-datalink-button/actions-datalink-button.component'\nimport { ActionsConnectionButtonComponent } from './actions-connection-button/actions-connection-button.component';\nimport { ActionsTableButtonComponent } from './actions-table-button/actions-table-button.component';\nimport { ActionsFileFormatButtonComponent } from './actions-fileFormat-button/actions-fileFormat-button.component';\nimport { ActionsColumnValidationButtonComponent } from './actions-columnValidation-button/actions-columnValidation-button.component';\nimport { ActionsDatalinkTestButtonComponent } from './actions-datalinkTest-button/actions-datalinkTest-button.component';\nimport { ActionsViewButtonComponent } from './actions-view-button/actions-view-button.component';\nimport { ActionsApiButtonComponent } from './actions-api-button/actions-api-button.component';\nimport { ActionsDashboardButtonComponent } from './actions-dashboard-button/actions-dashboard-button.component';\nimport { ActionsListOfValuesButtonComponent } from './actions-listOfValues-button/actions-listOfValues-button.component';\nimport { TagsUpdateButtonComponent } from './tags-update-button/tags-update-button.component';\nimport { TagsFilterButtonComponent } from './tags-filter-button/tags-filter-button.component';\nimport { DependentItemsButtonComponent } from './dependent-items/dependent-items-button.component';\nimport { ConnectionEditButtonComponent } from './connection-edit-button/connection-edit-button.component';\nimport { DatalinkEditButtonComponent } from './datalink-edit-button/datalink-edit-button.component';\nimport { TableEditButtonComponent } from './table-edit-button/table-edit-button.component';\nimport { ViewEditButtonComponent } from './view-edit-button/view-edit-button.component';\nimport { CustomFunctionEditButtonComponent } from './customFunction-edit-button/customFunction-edit-button.component';\nimport { ColumnValidationEditButtonComponent } from './columnValidation-edit-button/columnValidation-edit-button.component';\n\n@NgModule({\n    imports: [\n        SharedModule\n    ],\n    exports: [\n        CancelButtonComponent,\n        SaveButtonComponent,\n        NewDatalinkButtonComponent,\n        NewConnectionButtonComponent,\n        NewTableButtonComponent,\n        ActionsDatajobButtonComponent,\n        ActionsDatalinkButtonComponent,\n        ActionsConnectionButtonComponent,\n        ActionsTableButtonComponent,\n        ActionsFileFormatButtonComponent,\n        ActionsColumnValidationButtonComponent,\n        ActionsDatalinkTestButtonComponent,\n        ActionsViewButtonComponent,\n        ActionsApiButtonComponent,\n        ActionsDashboardButtonComponent,\n        ActionsListOfValuesButtonComponent,\n        TagsUpdateButtonComponent,\n        TagsFilterButtonComponent,\n        DependentItemsButtonComponent,\n        ConnectionEditButtonComponent,\n        TableEditButtonComponent,\n        DatalinkEditButtonComponent,\n        ViewEditButtonComponent,\n        CustomFunctionEditButtonComponent,\n        ColumnValidationEditButtonComponent\n    ],\n    declarations: [\n        CancelButtonComponent,\n        SaveButtonComponent,\n        NewDatalinkButtonComponent,\n        NewConnectionButtonComponent,\n        NewTableButtonComponent,\n        ActionsDatajobButtonComponent,\n        ActionsDatalinkButtonComponent,\n        ActionsConnectionButtonComponent,\n        ActionsTableButtonComponent,\n        ActionsFileFormatButtonComponent,\n        ActionsColumnValidationButtonComponent,\n        ActionsDatalinkTestButtonComponent,\n        ActionsViewButtonComponent,\n        ActionsApiButtonComponent,\n        ActionsDashboardButtonComponent,\n        ActionsListOfValuesButtonComponent,\n        TagsUpdateButtonComponent,\n        TagsFilterButtonComponent,\n        DependentItemsButtonComponent,\n        ConnectionEditButtonComponent,\n        TableEditButtonComponent,\n        DatalinkEditButtonComponent,\n        ViewEditButtonComponent,\n        CustomFunctionEditButtonComponent,\n        ColumnValidationEditButtonComponent\n    ],\n    providers: [],\n})\nexport class ButtonsModule { }\n","export * from './dexih-form-controls.module';\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'fieldSort',\n})\nexport class SortPipe implements PipeTransform {\n\n  transform(items: any[], field: string): any[] {\n    if (!items) { return []; }\n    return items.sort((a, b) => {\n      if (a[field] > b[field]) {\n        return 1;\n      }\n\n      if (a[field] < b[field]) {\n        return -1;\n      }\n\n      return 0;\n\n    });\n  }\n}\n\n","import { eTypeCode, eFunctionType, eTransformType, ApiData, RemoteLibraries, ManagedTask } from '../shared/shared.models';\n\n\nexport class RemoteAgentStatus {\n    public previousDatajobs: Array<ManagedTask>;\n    public previousDatalinks: Array<ManagedTask>;\n    public previousDatalinkTests: Array<ManagedTask>;\n    public activeDatajobs: Array<ManagedTask>;\n    public activeDatalinks: Array<ManagedTask>;\n    public activeDatalinkTests: Array<ManagedTask>;\n    public remoteLibraries: RemoteLibraries;\n    public activeApis: Array<ApiData>;\n\n    constructor() {\n        this.activeDatajobs = [];\n        this.activeDatalinks = [];\n        this.activeApis = [];\n    }\n}\n\n// export class RemoteLibraries {\n//     public functions: FunctionReference[];\n//     public connections: ConnectionReference[];\n//     public transforms: TransformReference[];\n\n//     public GetConnectionReference(connection: DexihConnection): ConnectionReference {\n//         if (connection && this.connections) {\n//             let ref = this.connections.find(c =>\n//                 c.connectionAssemblyName === connection.connectionAssemblyName\n//                 && c.connectionClassName === connection.connectionClassName);\n\n//             return ref;\n//         } else {\n//             return null;\n//         }\n//     }\n\n//     public GetTransformReference(transform: DexihDatalinkTransform): TransformReference {\n//         if (transform && this.transforms) {\n//             let ref = this.transforms.find(c =>\n//                 c.transformAssemblyName === transform.transformAssemblyName\n//                 && c.transformClassName === transform.transformClassName);\n\n//             return ref;\n//         } else {\n//             return null;\n//         }\n//     }\n\n//     // transforms that can be added/removed within a datalink\n//     public GetUserConfigTransformReference(): TransformReference[] {\n//         if (!this.transforms) {\n//             return [];\n//         }\n//         let userConfig = transformTypes.filter(c => c.allowUserConfig);\n//         return this.transforms.filter(c => userConfig.findIndex(u => u.key === c.transformType ) >= 0 );\n//     }\n\n//     public GetFunctionReference(item: DexihDatalinkTransformItem): FunctionReference {\n//         if (this.functions && item && item.functionClassName) {\n//             let ref = this.functions.find(c =>\n//                 c.functionAssemblyName === item.functionAssemblyName\n//                 && c.functionClassName === item.functionClassName);\n\n//             return ref;\n//         } else {\n//             return null;\n//         }\n//     }\n// }\n\n// export enum eFunctionType {\n//     Map = <any>'Map',\n//     Condition = <any>'Condition',\n//     Aggregate = <any>'Aggregate',\n//     Series = <any>'Series',\n//     Rows = <any>'Rows',\n//     Validate = <any>'Validate',\n//     Profile = <any>'Profile',\n// }\n\nexport const functionTypes = [\n    {key: eFunctionType.Condition, name: 'Condition Function'},\n    {key: eFunctionType.Map, name: 'Mapping Function'},\n    {key: eFunctionType.Aggregate, name: 'Aggregate Function'},\n    {key: eFunctionType.Rows, name: 'Row Generating Function'},\n    {key: eFunctionType.Profile, name: 'Profile Function'},\n    {key: eFunctionType.Validate, name: 'Validation Function'},\n]\n\n// export enum eGenericType {\n//     None = <any>'None',\n//     Numeric = <any>'Numeric',\n//     All = <any>'All',\n//     String = <any>'String',\n// }\n\n\n// export class FunctionReference {\n//     public functionType: eFunctionType;\n//     public category: string;\n//     public name: string;\n//     public description: string;\n\n\n//     public functionClassName: string;\n//     public functionMethodName: string;\n//     public functionAssemblyName: string;\n//     public resultMethodName: string;\n//     public resetMethodName: string;\n//     public importMethodName: string;\n\n//     public isGeneric: boolean;\n//     public genericTypeDefault: eTypeCode;\n//     public genericType: eGenericType;\n\n//     /// <summary>\n//     /// Used for profiling functions, indicates the property use to switch detailed results on/off.\n//     /// </summary>\n//     public detailedFlagName: string;\n\n//     /// <summary>\n//     /// Used to map a filter equivalent operator\n//     /// </summary>\n//     public compare: eCompare;\n\n//     public IsStandardFunction: boolean;\n\n//     public returnParameters: FunctionParameter[];\n//     public returnRank: number;\n//     public inputParameters: FunctionParameter[];\n//     public outputParameters: FunctionParameter[];\n\n//     public resultReturnParameters: FunctionParameter[];\n//     public resultInputParameters: FunctionParameter[];\n//     public resultOutputParameters: FunctionParameter[];\n// }\n\n\n// export class FunctionParameter {\n//     public name: string;\n//     public parameterName: string;\n//     public description: string;\n//     public isGeneric: boolean;\n//     public dataType: eTypeCode;\n//     public rank = 0;\n//     public isIndex: boolean;\n//     public linkedName: string;\n//     public linkedDescription: string;\n//     public isLabel: boolean;\n//     public listOfValues: string[];\n//     public defaultValue: any;\n// }\n\n// export enum eConnectionCategory {\n//     SqlDatabase = <any>'SqlDatabase',\n//     NoSqlDatabase = <any>'NoSqlDatabase',\n//     DatabaseFile = <any>'DatabaseFile',\n//     File = <any>'File',\n//     WebService = <any>'WebService',\n//     Hub = <any>'Hub',\n// }\n\n\n// export class ConnectionReference {\n//     public connectionCategory: eConnectionCategory;\n//     public name: string;\n//     public description: string;\n//     public databaseDescription: string;\n//     public serverDescription: string;\n//     public allowsConnectionString: boolean;\n//     public allowsSql: boolean;\n//     public allowsFlatFiles: boolean;\n//     public allowsManagedConnection: boolean;\n//     public allowsSourceConnection: boolean;\n//     public allowsTargetConnection: boolean;\n//     public allowsUserPassword: boolean;\n//     public allowsWindowsAuth: boolean;\n//     public requiresDatabase: boolean;\n//     public connectionClassName: string;\n//     public connectionAssemblyName: string;\n// }\n\n// export enum eTransformType {\n//     Mapping = <any>'Mapping',\n//     Filter = <any>'Filter',\n//     Sort = <any>'Sort',\n//     Group = <any>'Group',\n//     Aggregate = <any>'Aggregate',\n//     Series = <any>'Series',\n//     Join = <any>'Join',\n//     Rows = <any>'Rows',\n//     Lookup = <any>'Lookup',\n//     Validation = <any>'Validation',\n//     Delta = <any>'Delta',\n//     Concatenate = <any>'Concatenate',\n//     Profile = <any>'Profile'\n// }\n\nexport const transformTypes  = [\n    {key: eTransformType.Mapping, icon: 'fa fa-random', allowUserConfig: true},\n    {key: eTransformType.Filter, icon: 'fa fa-filter', allowUserConfig: true},\n    {key: eTransformType.Sort, icon: 'fa fa-sort-alpha-asc', allowUserConfig: true},\n    {key: eTransformType.Group, icon: 'fa fa-cubes', allowUserConfig: true},\n    {key: eTransformType.Aggregate, icon: 'fa fa-calculator', allowUserConfig: true},\n    {key: eTransformType.Series, icon: 'fa fa-line-chart', allowUserConfig: true},\n    {key: eTransformType.Join, icon: 'fa fa-link', allowUserConfig: true},\n    {key: eTransformType.Rows, icon: 'fa fa-bars', allowUserConfig: true},\n    {key: eTransformType.Lookup, icon: 'fa fa-binoculars', allowUserConfig: true},\n    {key: eTransformType.Validation, icon: 'fa fa-check-square-o', allowUserConfig: false},\n    {key: eTransformType.Delta, icon: 'fa fa-exchange', allowUserConfig: false},\n    {key: eTransformType.Concatenate, icon: 'fa fa-angle-double-down', allowUserConfig: true},\n    {key: eTransformType.Profile, icon: 'fa fa-angle-double-down', allowUserConfig: false},\n];\n\n\nexport class TransformReference {\n    public transformType: eTransformType;\n    public transformClassName: string;\n    public transformAssemblyName: string;\n\n    public name: string;\n    public description: string;\n}\n\n\nexport const TypeCodes = [\n    {key: eTypeCode.String, name: 'String', isNumeric: false, isString: true},\n    {key: eTypeCode.CharArray, name: 'Char[fixed length string]', isNumeric: false, isString: true},\n    {key: eTypeCode.Text, name: 'Text', isNumeric: false, isString: true},\n    {key: eTypeCode.Binary, name: 'Binary', isNumeric: false, isString: false},\n    {key: eTypeCode.Boolean, name: 'Boolean', isNumeric: false, isString: false},\n    {key: eTypeCode.DateTime, name: 'Date & Time', isNumeric: false, isString: false},\n    {key: eTypeCode.DateTimeOffset, name: 'Date & Time (with TZ)', isNumeric: false, isString: false},\n    {key: eTypeCode.Date, name: 'Date', isNumeric: false, isString: false},\n    {key: eTypeCode.Decimal, name: 'Decimal', isNumeric: true, isString: false},\n    {key: eTypeCode.Double, name: 'Double', isNumeric: true, isString: false},\n    {key: eTypeCode.Int16, name: 'Short Integer', isNumeric: true, isString: false},\n    {key: eTypeCode.Int32, name: 'Integer', isNumeric: true, isString: false},\n    {key: eTypeCode.Int64, name: 'Long Integer', isNumeric: true, isString: false},\n    {key: eTypeCode.UInt16, name: 'Unsigned Short Integer', isNumeric: true, isString: false},\n    {key: eTypeCode.UInt32, name: 'Unsigned Integer', isNumeric: true, isString: false},\n    {key: eTypeCode.UInt64, name: 'Unsigned Long Integer', isNumeric: true, isString: false},\n    {key: eTypeCode.Byte, name: 'Byte', isNumeric: false, isString: false},\n    {key: eTypeCode.SByte, name: 'Signed Byte', isNumeric: false, isString: false},\n    {key: eTypeCode.Time, name: 'Time', isNumeric: false, isString: false},\n    {key: eTypeCode.Guid, name: 'Guid', isNumeric: false, isString: false},\n    {key: eTypeCode.Xml, name: 'Xml', isNumeric: false, isString: false},\n    {key: eTypeCode.Json, name: 'Json', isNumeric: false, isString: false},\n    {key: eTypeCode.Geometry, name: 'Geometry (spacial data)', isNumeric: false, isString: false},\n    {key: eTypeCode.Node, name: 'Node (contains child nodes)', isNumeric: false, isString: false},\n\n];\n\nexport enum eBasicType {\n    Any,\n    String,\n    Numeric,\n    Date,\n    Time,\n    Boolean,\n    Binary\n}\n\n// Functions to simplify display of typeCodes.\nexport class TypeFunctions {\n    constructor(\n        public dataType: eTypeCode,\n        public maxLength: number,\n        public precision: number,\n        public scale: number ) {\n\n    }\n\n    // converts a typeCode to basicType.\n    public getBasicTypeCode(): eBasicType {\n        switch (this.dataType) {\n            case eTypeCode.Byte:\n            case eTypeCode.SByte:\n            case eTypeCode.UInt16:\n            case eTypeCode.UInt32:\n            case eTypeCode.UInt64:\n            case eTypeCode.Int16:\n            case eTypeCode.Int32:\n            case eTypeCode.Int64:\n            case eTypeCode.Decimal:\n            case eTypeCode.Double:\n            case eTypeCode.Single: return eBasicType.Numeric;\n            case eTypeCode.Guid:\n            case eTypeCode.Text:\n            case eTypeCode.CharArray:\n            case eTypeCode.String: return eBasicType.String;\n            case eTypeCode.Boolean: return eBasicType.Boolean;\n            case eTypeCode.DateTime: return eBasicType.Date;\n            case eTypeCode.Date: return eBasicType.Date;\n            case eTypeCode.Time: return eBasicType.Time;\n            case eTypeCode.Binary: return eBasicType.Binary;\n            default: return eBasicType.Any;\n        }\n    }\n\n    // tests if column is string type.\n    public columnIsString(): boolean {\n        return this.dataType === eTypeCode.String || this.dataType === eTypeCode.CharArray;\n    }\n\n    // tests if column is a decimal type.\n    public columnIsDecimal(): boolean {\n        return this.dataType === eTypeCode.Double || this.dataType === eTypeCode.Decimal || this.dataType === eTypeCode.Single;\n    }\n\n    // formats the type with bracket indicating precision (e.g. string(10) or decimal(5,2) )\n    public columnType(): string {\n        let type: string = eTypeCode[this.dataType];\n        if (this.columnIsString() && this.maxLength > 0) {\n            type = type + '(' + this.maxLength + ')';\n        }\n        if (this.columnIsDecimal()) {\n            type = type + '(' + this.precision + ', ' + this.scale + ')';\n        }\n\n        return type;\n    }\n\n    public getColumnFormats() {\n        const basicType = this.getBasicTypeCode();\n        switch(basicType) {\n            case eBasicType.Numeric:\n                return columnNumberFormats;\n            case eBasicType.Date:\n                return columnDateFormats;\n            case eBasicType.Time:\n                return columnTimeFormats;\n        }\n    }\n\n    \n}\n\nexport const columnNumberFormats = [\n    {name: 'Percent', value: '#,##0.00%'},\n    {name: 'Number', value: '#,##0'},\n    {name: 'Fixed 0 Decimals', value: '#,##0.'},\n    {name: 'Fixed 1 Decimals', value: '#,##0.0'},\n    {name: 'Fixed 2 Decimals', value: '#,##0.00'},\n    {name: 'Dollars', value: '$#,##0'},\n    {name: 'Dollars / Cents', value: '$#,##0.00'},\n];\n\nexport const columnDateFormats = [\n    {name: 'Short', value: 'd'},\n    {name: 'Long', value: 'D'},\n    {name: 'Full', value: 'F'},\n    {name: 'Month/Day', value: 'M'},\n    {name: 'Year/Month', value: 'Y'},\n    {name: 'Sortable', value: 's'},\n];\n\nexport const columnTimeFormats = [\n    {name: 'Short', value: 't'},\n    {name: 'Long', value: 'T'},\n    {name: 'Sortable', value: 'u'},\n];\n","export { SharedDataComponent } from './sharedData.component';\nexport { PreviewDataComponent } from './preview-data/preview-data.component';\nexport { PreviewDashboardComponent} from './preview-dashboard/preview-dashboard.component';\nexport { PreviewDashboardItemComponent } from './preview-dashboard/preview-dashboard-item.component';\nexport { PreviewComponent } from './preview/preview.component';\nexport { InputParametersViewComponent } from './input-parameters-view/input-parameters-view.component';","import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from '../../../+auth/auth.models';\n\n@Component({\n    selector: 'dexih-message',\n    templateUrl: './dexih-message.component.html',\n})\n\nexport class DexihMessageComponent implements OnInit {\n    @Input() message: Message;\n\n    isHidden = true;\n\n    ngOnInit() {\n    }\n\n    public addMessage(message: Message) {\n        this.message = message;\n    }\n\n    public addErrorMessage(messageString: string) {\n        this.addMessage(new Message(false, messageString, null, null));\n    }\n\n    public addSuccessMessage(messageString: string) {\n        this.addMessage(new Message(true, messageString, null, null));\n    }\n\n    public reset() {\n        this.message = null;\n    }\n}\n","<section *ngIf=\"message\">\n    <div class=\"alert alert-dismissible\" [class.alert-danger]=\"message.success == false\" [class.alert-success]=\"message.success == true\">\n        <div style=\"white-space: pre-wrap;\">{{message.message}}</div>\n        <button type=\"button\" class=\"close\" (click)=\"reset()\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <div *ngIf=\"message.exceptionDetails && message.message != message.exceptionDetails\">\n            <hr>\n            <a class=\"btn btn-sm btn-primary text-white\" (click)='isHidden = !isHidden'>Details</a>\n            <div *ngIf=\"!isHidden && message.exceptionDetails && message.message != message.exceptionDetails\">\n                <hr>\n                <pre style=\"word-wrap: break-word;\">{{message.exceptionDetails}}</pre>\n            </div>\n        </div>\n    </div>\n</section>","import { BehaviorSubject} from 'rxjs';\nimport { Message } from '../+auth/auth.models';\nimport { DexihHubVariable, DexihHub, DexihFunctionParameter, DexihConnection, DexihTable,\n    DexihTableColumn, DexihDatalinkTransform, DexihColumnValidation, DexihFileFormat, DexihDatalink,\n    DexihDatalinkTest, DexihDatajob, DexihView, DexihDashboard, DexihApi, DexihCustomFunction,\n    DexihTrigger, TransformProperties, eStatus, eParameterDirection, eConnectionPurpose, eDeltaType,\n    eSourceType, eImportAction, eSecurityFlag, eUpdateStrategy, eFailAction, eInvalidAction,\n    eFunctionCaching, eCleanAction, eRunStatus, ePermission, eTypeCode,\n    eTransformWriterMethod, eTransformItemType, eFunctionType, eDataObjectType, eSharedObjectType,\n    eSortDirection, eSeriesGrain, eDayOfWeek, ChartConfig, eLOVObjectType, DexihListOfValues, InputParameterBase,\n    DexihDatalinkTestStep, eTransformTypeItems, eTransformType, DexihTag, ViewConfig } from '../shared/shared.models';\n\n// export class RemoteMessage {\n//     public messageId: string;\n//     public securityToken: string;\n//     public remoteAgentId: string;\n//     public method: string;\n//     public hubKey: number;\n//     public success: boolean;\n//     public message: string;\n//     public exceptionDetails: string;\n//     public cache: HubCache;\n//     public parameters: Array<Parameter>;\n//     public hubVariables: Array<DexihHubVariable>;\n//     public value;\n\n//     constructor () {\n//     }\n// }\n\nexport enum eCacheStatus {\n    NoHub,\n    NotLoaded,\n    Loading,\n    Loaded,\n    Error\n};\n\nexport class EntityStatus {\n    public lastStatus: eStatus;\n    public message: string;\n    public isBusy: boolean;\n\n    public constructor() {\n        this.isBusy = false;\n        this.lastStatus = eStatus.None;\n    }\n}\n\nexport class Parameter {\n    public key: string;\n    public value;\n}\n\nexport enum eSearchObjectType {\n    All,\n    Connection,\n    Table,\n    TableColumn,\n    FileFormat,\n    Datalink,\n    Datajob,\n    ColumnValidation,\n    View,\n    Api,\n    Dashboard,\n    ListOfValues,\n    DatalinkTest\n}\n\nexport const SearchObjectTypes = [\n    {key: eSearchObjectType.All, name: 'All'},\n    {key: eSearchObjectType.Connection, name: 'Connection'},\n    {key: eSearchObjectType.Table, name: 'Table'},\n    {key: eSearchObjectType.TableColumn, name: 'Table Column'},\n    {key: eSearchObjectType.FileFormat, name: 'File Format'},\n    {key: eSearchObjectType.Datalink, name: 'Datalink'},\n    {key: eSearchObjectType.Datajob, name: 'Datajob'},\n    {key: eSearchObjectType.ColumnValidation, name: 'Column Validation'},\n    {key: eSearchObjectType.View, name: 'View'},\n    {key: eSearchObjectType.Api, name: 'Api'},\n    {key: eSearchObjectType.Dashboard, name: 'Dashboard'},\n    {key: eSearchObjectType.ListOfValues, name: 'List of Values'},\n    {key: eSearchObjectType.DatalinkTest, name: 'Datalink Test'},\n];\n\nexport class SearchResult {\n    public object: any;\n    public objectParent: any;\n    public objectType: eSearchObjectType;\n\n    constructor(object: any, objectParent, objectType: eSearchObjectType) {\n        this.object = object;\n        this.objectType = objectType;\n        this.objectParent = objectParent;\n    }\n}\n\n\nexport class SharedObjectProperty {\n    public type: eSharedObjectType;\n    public parentType: eSharedObjectType;\n    public name: string;\n    public parentKey: string;\n    public property: string;\n    public cacheProperty: string;\n    public cacheAddMethod: string;\n    public cacheGetMethod: string;\n    public icon: string;\n    public routerLink: string;\n    public displayName: string;\n    public description: string;\n}\n\nexport const sharedObjectProperties: SharedObjectProperty[] = [\n    {\n        type: eSharedObjectType.Connection, name: 'Connection', cacheProperty: 'dexihConnections', property: 'connections',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddConnection', cacheGetMethod: '',\n        icon: 'fa-database', routerLink: 'connections',\n        displayName: 'Connections', description: 'Connections to data sources such as databases, flat files and web services.'\n    },\n    {\n        type: eSharedObjectType.Table, name: 'Table', cacheProperty: 'dexihTables', property: 'tables',\n        parentKey: 'connectionKey', parentType: eSharedObjectType.Connection, cacheAddMethod: 'cacheAddTable',\n        cacheGetMethod: 'getTableCache', icon: 'fa-table', routerLink: 'tables',\n        displayName: 'Tables', description: 'References to structured and unstructured datasets.'\n    },\n    {\n        type: eSharedObjectType.Datalink, name: 'Datalink', cacheProperty: 'dexihDatalinks', property: 'datalinks',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddDatalink', cacheGetMethod: 'getDatalinkCache',\n        icon: 'fa-exchange', routerLink: 'datalinks',\n        displayName: 'Datalinks', description: 'Runnable or queryable data sets of data transformations.'\n    },\n    {\n        type: eSharedObjectType.Datajob, name: 'Datajob', cacheProperty: 'dexihDatajobs', property: 'datajobs',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddDatajob',\n        cacheGetMethod: 'getDatajobCache', icon: 'fa-calendar', routerLink: 'datajobs',\n        displayName: 'Jobs and Schedules',\n        description: 'Job which can be scheduled or run on demand, which contains a sequence of datalinks'\n    },\n    {\n        type: eSharedObjectType.View, name: 'View', cacheProperty: 'dexihViews', property: 'views',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddView',\n        cacheGetMethod: 'getViewCache', icon: 'fa-bar-chart', routerLink: 'views',\n        displayName: 'Views', description: 'Charts and tabular views of table or datalinks outputs.'\n    },\n    {\n        type: eSharedObjectType.Dashboard, name: 'Dashboard', cacheProperty: 'dexihDashboards', property: 'dashboards',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddDashboard',\n        cacheGetMethod: 'getDashboardCache', icon: 'fa-pie-chart', routerLink: 'dashboards',\n        displayName: 'Dashboards', description: 'A collection of views gathered into a single dashboard.'\n    },\n    {\n        type: eSharedObjectType.Api, name: 'Api', cacheProperty: 'dexihApis', property: 'apis',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddApi',\n        cacheGetMethod: 'getApiCache', icon: 'fa-feed', routerLink: 'apis',\n        displayName: 'Api\\'s', description: 'Published Rest based Api\\'s which can be used to access data using third party tools'\n    },\n    {\n        type: eSharedObjectType.FileFormat, name: 'FileFormat', cacheProperty: 'dexihFileFormats', property: 'fileFormats',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddFileFormat',\n        cacheGetMethod: '', icon: 'fa-file-text-o', routerLink: 'fileFormats',\n        displayName: 'File Formats', description: 'Definitions for delimited flat files'\n    },\n    {\n        type: eSharedObjectType.ColumnValidation, name: 'ColumnValidation', cacheProperty: 'dexihColumnValidations',\n        property: 'columnValidations',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddColumnValidation',\n        cacheGetMethod: 'getColumnValidationCache', icon: 'fa-check-square-o',\n        routerLink: 'columnValidations',\n        displayName: 'Column Validations', description: 'Validation rule that can be applied to columns within a table.'\n    },\n    {\n        type: eSharedObjectType.HubVariable, name: 'HubVariable', cacheProperty: 'dexihHubVariables', property: 'hubVariables',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddHubVariable',\n        cacheGetMethod: '', icon: 'fa-fw fa-at', routerLink: 'hubVariables',\n        displayName: 'Variables', description: 'Variables which can be used as global configuration throughout the hub.'\n    },\n    {\n        type: eSharedObjectType.ListOfValues, name: 'List Of Values', cacheProperty: 'dexihListOfValues', property: 'listOfValues',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddListOfValues',\n        cacheGetMethod: 'getListOfValuesCache', icon: 'fa-list-alt', routerLink: 'listOfValues',\n        displayName: 'List Of Values',\n        description: 'List of values which can be used for parameter drop downs and validations.'\n    },\n    {\n        type: eSharedObjectType.CustomFunction, name: 'CustomFunction', cacheProperty: 'dexihCustomFunctions', property: 'customFunctions',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddCustomFunction',\n        cacheGetMethod: '', icon: 'fa-code', routerLink: 'customFunctions',\n        displayName: 'Functions', description: 'Custom c# functions which can be used in datalinks.'\n    },\n    {\n        type: eSharedObjectType.DatalinkTest, name: 'DatalinkTest', cacheProperty: 'dexihDatalinkTests', property: 'datalinkTests',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddDatalinkTest',\n        cacheGetMethod: 'getDatalinkTestCache', icon: 'fa-flag-checkered', routerLink: 'datalinkTests',\n        displayName: 'Datalink Tests',\n        description: 'Regression tests which can be used to ensure datalinks function after upgrades or modification.'\n    },\n    {\n        type: eSharedObjectType.Tags, name: 'Tag', cacheProperty: 'dexihTags', property: 'tags',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddTag',\n        cacheGetMethod: 'getTagCache', icon: 'fa-tags', routerLink: 'tags',\n        displayName: 'Tags',\n        description: 'Tags can be used to group and categorize objects as needed.'\n    },\n];\n\nexport class SharedObject {\n    public type: eSharedObjectType;\n    public item: any;\n    public parentItem: any;\n    public key: number;\n    public name: string;\n    public label: string;\n    public updateDate: Date;\n    public description: string;\n    public tags: DexihTag[];\n}\n\nexport class HubCacheChange {\n    constructor(\n        public changeClass: eSharedObjectType,\n        public changeType: eImportAction,\n        public data: any\n    ) {}\n}\n\n\n\nexport class HubCache {\n\n    public hub: DexihHub;\n\n    public hubPermission: ePermission;\n\n    public readonly status: eCacheStatus;\n\n    private _sequenceGenerator = 0;\n\n    public static parameterIsOutput(p: DexihFunctionParameter): boolean {\n        return p.direction === eParameterDirection.Output\n        || p.direction === eParameterDirection.ResultOutput\n        || p.direction === eParameterDirection.ResultReturnValue\n        || p.direction === eParameterDirection.ReturnValue\n    }\n\n    public static parameterIsInput(p: DexihFunctionParameter): boolean {\n        return p.direction === eParameterDirection.Input\n        || p.direction === eParameterDirection.ResultInput\n    }\n\n    constructor(status: eCacheStatus, hub: DexihHub)  {\n        this.status = status;\n        if (hub) {\n            this.hub = hub;\n        }\n    }\n\n    get canAdministrate(): boolean {\n        if (this.hub) {\n            return this.hubPermission === ePermission.Owner;\n        }\n\n        return false;\n    }\n\n    get canRead(): boolean {\n        if (this.hub) {\n            return this.hubPermission === ePermission.Owner ||\n                this.hubPermission === ePermission.FullReader ||\n                this.hubPermission === ePermission.User;\n        }\n\n        return false;\n    }\n\n    get canWrite(): boolean {\n        if (this.hub) {\n            return this.hubPermission === ePermission.Owner ||\n                this.hubPermission === ePermission.User;\n        }\n\n        return false;\n    }\n\n    // create a simple unique, sequence, starting from -1, which is used to generate temporary keys.\n    public getNextSequence(): number {\n        this._sequenceGenerator--;\n        return this._sequenceGenerator;\n    }\n\n    public getManagedConnections(): Array<DexihConnection> {\n        let connections = this.hub.dexihConnections.filter(c => c.purpose === eConnectionPurpose.Managed && c.isValid);\n        return connections;\n    }\n\n    public getCacheItem(itemType: eSharedObjectType, key: number) {\n        if (!this.hub) { return; }\n\n        switch (itemType) {\n            case eSharedObjectType.Api:\n                return this.hub.dexihApis.find(c => c.key === key && c.isValid);\n            case eSharedObjectType.ColumnValidation:\n                return this.hub.dexihColumnValidations.find(c => c.key === key && c.isValid);\n            case eSharedObjectType.Connection:\n                return this.hub.dexihConnections.find(c => c.key === key && c.isValid);\n            case eSharedObjectType.CustomFunction:\n                return this.hub.dexihCustomFunctions.find(c => c.key === key && c.isValid);\n            case eSharedObjectType.Datajob:\n                return this.hub.dexihDatajobs.find(c => c.key === key && c.isValid);\n            case eSharedObjectType.Datalink:\n                return this.hub.dexihDatalinks.find(c => c.key === key && c.isValid);\n            case eSharedObjectType.DatalinkTest:\n                return this.hub.dexihDatalinkTests.find(c => c.key === key && c.isValid);\n            case eSharedObjectType.FileFormat:\n                return this.hub.dexihFileFormats.find(c => c.key === key && c.isValid);\n            case eSharedObjectType.HubVariable:\n                return this.hub.dexihHubVariables.find(c => c.key === key && c.isValid);\n            case eSharedObjectType.Table:\n                return this.getTable(key);\n            case eSharedObjectType.View:\n                return this.hub.dexihViews.find(c => c.key === key && c.isValid);\n        }\n\n        return null;\n    }\n\n    isLoaded(): boolean {\n        return this.status === eCacheStatus.Loaded;\n    }\n\n    getHubUrl(): string {\n        return '/hub/' + this.hub.hubKey;\n    }\n\n    public getObjectTags(objectType: eSharedObjectType, key: number): DexihTag[] {\n        let tags = this.hub.dexihTagObjects\n                        .filter(to => to.objectType === objectType && to.objectKey === key)\n                        .map(to => this.hub.dexihTags.find(e => e.key === to.tagKey));\n        return tags;\n    }\n\n    public getConnection(connectionKey): DexihConnection {\n        let connection = this.hub.dexihConnections.find(c => c.key === connectionKey);\n        return connection;\n    }\n\n    public getConnectionCopy(connectionKey): DexihConnection {\n        let connection = this.hub.dexihConnections.find(c => c.key === connectionKey);\n        let connectionCopy = Object.assign({}, connection);\n        return connectionCopy;\n    }\n\n    public getTable(tableKey: number): DexihTable {\n        let hub = this.hub;\n        let table = hub.dexihTables.find(c => c.key === tableKey);\n        return table;\n    }\n\n    public getTransformName(transform: DexihDatalinkTransform): string {\n        if (transform.name) {\n            return transform.name;\n        }\n\n        let name = eTransformTypeItems[transform.transformType].name;\n\n        switch(transform.transformType) {\n            case eTransformType.Join:\n            case eTransformType.Lookup:\n                name = name + ' ' + transform.joinDatalinkTable.name;\n        }\n\n        if(transform.nodeDatalinkColumn) {\n            name = name + ' at ' + transform.nodeDatalinkColumn.name\n        }\n\n        return name;\n    }\n\n    public getColumn(columnKey: number) {\n        let hub = this.hub;\n        for (let i = 0; i < hub.dexihTables.length; i++) {\n            let table = hub.dexihTables[i];\n            let column = table.dexihTableColumns.find(c => c.key === columnKey);\n            if (column) { return column; }\n        }\n        return null;\n    }\n\n    public getDatalinkTestStep(datalinkTestStepKey: number): DexihDatalinkTestStep {\n        let hub = this.hub;\n        for (let test of hub.dexihDatalinkTests) {\n            let testStep = test.dexihDatalinkTestSteps.find(c => c.key === datalinkTestStepKey);\n            if (testStep) {\n                return testStep;\n            }\n        }\n        return null;\n    }\n\n\n    public newColumn(table: DexihTable, deltaType: eDeltaType): DexihTableColumn {\n        let column = new DexihTableColumn();\n        // if new column, then set a temporary key of -1 or lower.\n        let minKey = -1;\n        let maxPos = 0;\n        table.dexihTableColumns.forEach(t => {\n            if (t.key <= minKey ) {\n                minKey = t.key - 1;\n            }\n            if (t.position >= maxPos) {\n                maxPos = t.position + 1;\n            }\n        });\n        column.key = minKey;\n        column.position = maxPos;\n\n        if (deltaType != null) {\n            column.deltaType = deltaType;\n\n            let deltaTypeDetail = deltaTypes.find(c => c.key === deltaType);\n\n            if (deltaTypeDetail.unique) {\n                let index = table.dexihTableColumns.findIndex(c => c.deltaType === deltaType);\n                if (index >= 0) {\n                    return null;\n                }\n            }\n\n            if (deltaTypeDetail.defaultName) {\n                column.name = deltaTypeDetail.defaultName;\n                column.logicalName = deltaTypeDetail.defaultName;\n                column.dataType = deltaTypeDetail.dataType;\n\n                if (deltaType === eDeltaType.AutoIncrement || deltaType === eDeltaType.DbAutoIncrement) {\n                    column.name =  table.name + 'Key';\n                    column.logicalName = column.name;\n                }\n            }\n       }\n\n       return column;\n    }\n\n    private addColumn(table: DexihTable, deltaType: eDeltaType, name: string, dataType: eTypeCode, allowDbNull: boolean) {\n        let column = this.newColumn(table, deltaType);\n        column.name = name;\n        column.logicalName = name;\n        column.allowDbNull = allowDbNull;\n        column.dataType = dataType;\n        table.dexihTableColumns.push(column);\n    }\n\n    public getProfileTable(name: string, connectionKey: number): DexihTable {\n        let table = new DexihTable();\n        table.connectionKey = connectionKey;\n        table.name = name;\n        table.logicalName = name;\n        table.key = this.getNextSequence();\n\n        this.addColumn(table, eDeltaType.TrackingField, 'AuditKey', eTypeCode.Int64, false);\n        this.addColumn(table, eDeltaType.TrackingField, 'Profile', eTypeCode.String, false);\n        this.addColumn(table, eDeltaType.TrackingField, 'ColumnName', eTypeCode.String, false);\n        this.addColumn(table, eDeltaType.TrackingField, 'IsSummary', eTypeCode.Boolean, false);\n        this.addColumn(table, eDeltaType.TrackingField, 'Value', eTypeCode.String, true);\n        this.addColumn(table, eDeltaType.TrackingField, 'Count', eTypeCode.Int32, true);\n\n        return table;\n    }\n\n\n\n    public getConnectionTables(): ConnectionTables[] {\n        let connections: ConnectionTables[] = [];\n        this.hub.dexihConnections.forEach(c => {\n            let newConnection = <ConnectionTables> Object.assign({}, c);\n            let tables = this.hub.dexihTables.filter(t => c.key === t.connectionKey && t.isValid);\n            newConnection.dexihTables = tables;\n            connections.push(newConnection);\n        });\n\n        return connections;\n    }\n\n    public getTables(): DexihTable[] {\n        return this.hub.dexihTables;\n    }\n\n    public getDatalinkTransform(datalinkTransformKey: number): DexihDatalinkTransform {\n        for (let i = 0; i < this.hub.dexihDatalinks.length; i++) {\n            let datalink = this.hub.dexihDatalinks[i];\n            for (let j = 0; j < datalink.dexihDatalinkTransforms.length; j++) {\n                if (datalink.dexihDatalinkTransforms[j].key === datalinkTransformKey) {\n                    return datalink.dexihDatalinkTransforms[j];\n                }\n            }\n        }\n\n        return null;\n    }\n\n    public getColumnValidation(columnValidationKey: number): DexihColumnValidation {\n        let columnValidation: DexihColumnValidation = null;\n        if (this.hub.dexihColumnValidations) {\n            columnValidation = this.hub.dexihColumnValidations.find(c => c.key === columnValidationKey);\n        }\n        if (!columnValidation) {\n            columnValidation = new DexihColumnValidation();\n            columnValidation.name = 'No validation';\n        }\n\n        return columnValidation;\n    }\n\n    public getFileFormat(fileFormatKey: number): DexihFileFormat {\n        let fileFormat: DexihFileFormat = null;\n        if (this.hub.dexihFileFormats) {\n            fileFormat = this.hub.dexihFileFormats.find(c => c.key === fileFormatKey);\n        }\n        return fileFormat;\n    }\n\n    public search(search: string, searchObject: eSearchObjectType): Array<SearchResult> {\n        const results = Array<SearchResult>();\n\n        if (!search) {\n            return results;\n        }\n\n        search = search.toLowerCase();\n\n        let searchAll = searchObject === eSearchObjectType.All;\n\n        this.hub.dexihConnections.forEach(connection => {\n            if (searchAll || searchObject === eSearchObjectType.Connection) {\n                this.searchItem(search, connection, null, eSearchObjectType.Connection, results);\n            }\n        });\n\n\n        this.hub.dexihTables.forEach(table => {\n            if (searchAll || searchObject === eSearchObjectType.Table) {\n                let connection = this.hub.dexihConnections.find(c => c.key === table.connectionKey);\n                this.searchItem(search, table, connection, eSearchObjectType.Table, results);\n            }\n\n            if (searchAll || searchObject === eSearchObjectType.TableColumn) {\n                table.dexihTableColumns.forEach(column => {\n                    this.searchItem(search, column, table, eSearchObjectType.TableColumn, results);\n                })\n            }\n        });\n\n        if (searchAll || searchObject === eSearchObjectType.Datalink) {\n            this.hub.dexihDatalinks.forEach(datalink => {\n                this.searchItem(search, datalink, null, eSearchObjectType.Datalink, results);\n            });\n        }\n        if (searchAll || searchObject === eSearchObjectType.Datajob) {\n            this.hub.dexihDatajobs.forEach(datajob => {\n                this.searchItem(search, datajob, null, eSearchObjectType.Datajob, results);\n            });\n        }\n        if (searchAll || searchObject === eSearchObjectType.ColumnValidation) {\n            this.hub.dexihColumnValidations.forEach(columnValidation => {\n                this.searchItem(search, columnValidation, null, eSearchObjectType.ColumnValidation, results);\n            });\n        }\n        if (searchAll || searchObject === eSearchObjectType.FileFormat) {\n            this.hub.dexihFileFormats.forEach(fileFormat => {\n                this.searchItem(search, fileFormat, null, eSearchObjectType.FileFormat, results);\n            });\n        }\n        if (searchAll || searchObject === eSearchObjectType.View) {\n            this.hub.dexihViews.forEach(view => {\n                this.searchItem(search, view, null, eSearchObjectType.View, results);\n            });\n        }\n        if (searchAll || searchObject === eSearchObjectType.Api) {\n            this.hub.dexihApis.forEach(api => {\n                this.searchItem(search, api, null, eSearchObjectType.Api, results);\n            });\n        }\n        if (searchAll || searchObject === eSearchObjectType.Dashboard) {\n            this.hub.dexihDashboards.forEach(d => {\n                this.searchItem(search, d, null, eSearchObjectType.Dashboard, results);\n            });\n        }\n        if (searchAll || searchObject === eSearchObjectType.ListOfValues) {\n            this.hub.dexihListOfValues.forEach(d => {\n                this.searchItem(search, d, null, eSearchObjectType.ListOfValues, results);\n            });\n        }\n        if (searchAll || searchObject === eSearchObjectType.DatalinkTest) {\n            this.hub.dexihDatalinkTests.forEach(d => {\n                this.searchItem(search, d, null, eSearchObjectType.DatalinkTest, results);\n            });\n        }\n        return results;\n    }\n\n    public searchItem(search: string, item: any, itemParent: any, objectType: eSearchObjectType, results: Array<SearchResult>) {\n        const keys = Object.keys(item);\n        let found = false;\n        keys.forEach(key => {\n            if (!found) {\n                if ((typeof item[key] === 'string' || item[key] instanceof String)) {\n                    if (item[key].toLowerCase().indexOf(search) > -1) {\n                        results.push(new SearchResult(item, itemParent, objectType));\n                        found = true;\n                    }\n                }\n            }\n        });\n    }\n\n\n    public dataTypeToString(column: any): string {\n        let value = eTypeCode[column.dataType];\n\n        if (this.dataTypeIsString(column.dataType) && column.maxLength) {\n            value = value + '(' + column.maxLength + ')';\n        }\n        if (this.dataTypeIsDecimal(column.dataType) && (column.precision || column.scale)) {\n            value = value + '(' + column.precision + ',' + column.scale + ')';\n        }\n        if (column.dataType === eTypeCode.Node && column.childColumns) {\n            value = value + '(' + column.childColumns.length + ')';\n        }\n\n        for (let i = 0; i < column.rank; i++) {\n            value = value + '[]';\n        }\n\n\n        return value;\n    }\n\n    public dataTypeIsString(dataType: eTypeCode): boolean {\n        return dataType === eTypeCode.String || dataType === eTypeCode.CharArray;\n    }\n\n    public dataTypeIsDecimal(dataType: eTypeCode): boolean {\n        return dataType === eTypeCode.Double || dataType === eTypeCode.Decimal || dataType === eTypeCode.Single;\n    }\n\n    public defaultTableLogicalName(schema: string, name: string): string {\n        if (schema) {\n            return schema + '.' + name;\n        } else {\n            return name;\n        }\n    }\n\n    /**\n     * Adds the datalink dependencies to the cache\n     * @constructor\n     * @param {DexihDatalink} datalink - The datalink to search dependencies\n     * @param {DexihHub} hub - The hub to add the dependencies to.\n     */\n    public getDatalinkCache(datalink: DexihDatalink, hub: DexihHub): DexihHub {\n        if (datalink.sourceDatalinkTable.sourceType === eSourceType.Datalink) {\n            this.cacheAddDatalink(datalink.sourceDatalinkTable.sourceDatalinkKey, hub);\n        } else if (datalink.sourceDatalinkTable.sourceType === eSourceType.Table) {\n            this.cacheAddTable(datalink.sourceDatalinkTable.sourceTableKey, hub);\n        }\n        this.cacheAddConnection(datalink.auditConnectionKey, hub);\n        this.getParametersCache(datalink.parameters, hub);\n\n        datalink.dexihDatalinkTargets.forEach(target => {\n            this.cacheAddTable(target.tableKey, hub);\n        });\n\n        datalink.dexihDatalinkTransforms.forEach(t => {\n            this.cacheAddConnection(t.dataCacheConnectionKey, hub);\n            if (t.joinDatalinkTable) {\n                if (t.joinDatalinkTable.sourceType === eSourceType.Datalink) {\n                    this.cacheAddDatalink(t.joinDatalinkTable.sourceDatalinkKey, hub);\n                } else if (t.joinDatalinkTable.sourceType === eSourceType.Table) {\n                    this.cacheAddTable(t.joinDatalinkTable.sourceTableKey, hub);\n                }\n            }\n\n            t.dexihDatalinkTransformItems.forEach(ti => {\n                if (ti.customFunctionKey) {\n                    this.cacheAddCustomFunction(ti.customFunctionKey, hub);\n                }\n            })\n        });\n        return hub;\n    }\n\n\n    /**\n     * Adds the datalinkTest dependencies to the cache\n     * @constructor\n     * @param {DexihDatalinkTest} datalinkTest - The datalinkTest to search dependencies\n     * @param {DexihHub} hub - The hub to add the dependencies to.\n     */\n    public getDatalinkTestCache(datalinkTest: DexihDatalinkTest, hub: DexihHub): DexihHub {\n        datalinkTest.dexihDatalinkTestSteps.forEach(step => {\n            const datalinkDup = hub.dexihDatalinks.find(c => c.key === step.datalinkKey);\n            if (!datalinkDup) {\n                const datalink = this.hub.dexihDatalinks.find(c => c.key === step.datalinkKey);\n                if (datalink) {\n                    this.getDatalinkCache(datalink, hub);\n                    hub.dexihDatalinks.push(datalink);\n                }\n            }\n            this.cacheAddConnection(step.expectedConnectionKey, hub);\n            this.cacheAddConnection(step.targetConnectionKey, hub);\n\n            step.dexihDatalinkTestTables.forEach(c => {\n                this.cacheAddConnection(c.sourceConnectionKey, hub);\n                this.cacheAddConnection(c.testConnectionKey, hub);\n            });\n        });\n\n        return hub;\n    }\n\n    public getTableCache(table: DexihTable, hub: DexihHub): DexihHub {\n        this.cacheAddConnection(table.connectionKey, hub);\n        return hub;\n    }\n\n    public getDatajobCache(datajob: DexihDatajob, hub: DexihHub): DexihHub {\n        this.cacheAddConnection(datajob.auditConnectionKey, hub);\n        this.getParametersCache(datajob.parameters, hub);\n\n        datajob.dexihDatalinkSteps.forEach(step => {\n            this.getParametersCache(step.parameters, hub);\n\n            const datalinkDup = hub.dexihDatalinks.find(c => c.key === step.datalinkKey);\n            if (!datalinkDup) {\n                const datalink = this.hub.dexihDatalinks.find(c => c.key === step.datalinkKey);\n                if (datalink) {\n                    this.getDatalinkCache(datalink, hub);\n                    hub.dexihDatalinks.push(datalink);\n                }\n            }\n        });\n\n        return hub;\n    }\n\n    public getColumnValidationCache(columnValidation: DexihColumnValidation, hub: DexihHub): DexihHub {\n        if (columnValidation.lookupColumnKey > 0) {\n            let lookupColumn = this.getColumn(columnValidation.lookupColumnKey);\n            this.cacheAddTable(lookupColumn.tableKey, hub);\n        }\n\n        return hub;\n    }\n\n    public getViewCache(view: DexihView, hub: DexihHub): DexihHub {\n        this.cacheAddDatalink(view.sourceDatalinkKey, hub);\n        this.cacheAddTable(view.sourceTableKey, hub);\n        this.getParametersCache(view.parameters, hub);\n\n        return hub;\n    }\n\n    public getDashboardCache(dashboard: DexihDashboard, hub: DexihHub): DexihHub {\n        dashboard.dexihDashboardItems.forEach(item => {\n            this.cacheAddView(item.viewKey, hub);\n        });\n        this.getParametersCache(dashboard.parameters, hub);\n\n        return hub;\n    }\n\n    public getParametersCache(parameters: InputParameterBase[], hub: DexihHub): DexihHub {\n        parameters.forEach(parameter => {\n            this.cacheAddListOfValues(parameter.listOfValuesKey, hub);\n        });\n\n        return hub;\n    }\n\n    public getListOfValuesCache(lov: DexihListOfValues, hub: DexihHub): DexihHub {\n        this.cacheAddDatalink(lov.sourceDatalinkKey, hub);\n        this.cacheAddTable(lov.sourceTableKey, hub);\n\n        return hub;\n    }\n\n    public getApiCache(api: DexihApi, hub: DexihHub): DexihHub {\n        this.cacheAddDatalink(api.sourceDatalinkKey, hub);\n        this.cacheAddTable(api.sourceTableKey, hub);\n        this.getParametersCache(api.parameters, hub);\n\n        return hub;\n    }\n\n    public getSharedObjects(): SharedObject[] {\n        let data: SharedObject[] = [];\n\n        sharedObjectProperties.forEach(o => {\n            let parentObject;\n            if (o.parentType) {\n                parentObject = sharedObjectProperties.find(c => c.type === o.parentType);\n            }\n\n            data = data.concat(this.hub[o.cacheProperty].map(item => {\n                let parentItem: any;\n\n                if (parentObject) {\n                    parentItem = this.hub[parentObject.cacheProperty].find(c => c.key === item[o.parentKey]);\n                }\n\n                let obj: SharedObject = {\n                    item: item,\n                    label: o.name,\n                    type: o.type,\n                    parentItem: parentItem,\n                    key: item.key,\n                    name: (parentItem ? `(${parentItem.name}) ` : '' ) + item.name,\n                    description: item.description,\n                    updateDate: item.updateDate,\n                    tags: this.getObjectTags(o.type, item.key)\n                };\n\n                return obj;\n            }));\n        });\n\n        return data;\n    }\n\n    public cacheAddObject(sharedType: eSharedObjectType, item: any, hub: DexihHub) {\n        let sharedObject = sharedObjectProperties.find(c => c.type === sharedType);\n        let key = item.key;\n\n        this[sharedObject.cacheAddMethod](key, hub);\n\n    }\n\n    public cacheAddObjectFromKey(sharedType: eSharedObjectType, key: number, hub: DexihHub) {\n        let sharedObject = sharedObjectProperties.find(c => c.type === sharedType);\n        this[sharedObject.cacheAddMethod](key, hub);\n    }\n\n    public cacheAddDatajob(datajobKey: number, hub: DexihHub): DexihDatajob {\n        // check if datajob is already added.\n        const dup = hub.dexihDatajobs.find(c => c.key === datajobKey);\n        if (!dup) {\n            let datajob = this.hub.dexihDatajobs.find(c => c.key === datajobKey);\n            if (datajob) {\n                this.getDatajobCache(datajob, hub);\n\n                let datajobCopy = Object.assign({}, datajob);\n                datajobCopy['currentStatus'] = null;\n                datajobCopy['previousStatus'] = null;\n\n                hub.dexihDatajobs.push(datajobCopy);\n            }\n            return datajob;\n        }\n\n        return null;\n    }\n\n    public cacheAddDatalink(datalinkKey: number, hub: DexihHub): DexihDatalink {\n        // check if datalink is already added.\n        const dupDatalink = hub.dexihDatalinks.find(c => c.key === datalinkKey);\n        if (!dupDatalink) {\n            let datalink = this.hub.dexihDatalinks.find(c => c.key === datalinkKey);\n            if (datalink) {\n                this.getDatalinkCache(datalink, hub);\n\n                let datalinkCopy = Object.assign({}, datalink);\n                datalinkCopy['currentStatus'] = null;\n                datalinkCopy['entityStatus'] = null;\n                datalinkCopy['previousStatus'] = null;\n\n                hub.dexihDatalinks.push(datalinkCopy);\n            }\n            return datalink;\n        }\n\n        return null;\n    }\n\n    public cacheAddDatalinkTest(datalinkTestKey: number, hub: DexihHub): DexihDatalinkTest {\n        // check if datalink is already added.\n        const dupDatalinkTest = hub.dexihDatalinkTests.find(c => c.key === datalinkTestKey);\n        if (!dupDatalinkTest) {\n            let datalinkTest = this.hub.dexihDatalinkTests.find(c => c.key === datalinkTestKey);\n            if (datalinkTest) {\n                this.getDatalinkTestCache(datalinkTest, hub);\n\n                let datalinkTestCopy = Object.assign({}, datalinkTest);\n                datalinkTestCopy['currentStatus'] = null;\n                datalinkTestCopy['entityStatus'] = null;\n                datalinkTestCopy['previousStatus'] = null;\n\n                hub.dexihDatalinkTests.push(datalinkTestCopy);\n            }\n            return datalinkTest;\n        }\n\n        return null;\n    }\n\n    public cacheAddConnection(connectionKey: number, hub: DexihHub): DexihConnection {\n        if (connectionKey > 0) {\n            let connection = hub.dexihConnections.find(c => c.key === connectionKey);\n            if (!connection) {\n                connection = this.getConnectionCopy(connectionKey);\n                hub.dexihConnections.push(connection);\n            }\n\n            return connection;\n        }\n    }\n\n    public cacheAddTable(tableKey: number, hub: DexihHub): DexihTable {\n        if (tableKey > 0) {\n            let table = hub.dexihTables.find(t => t.key === tableKey);\n\n            if (!table) {\n                table = this.getTable(tableKey);\n\n                if (table) {\n                    hub.dexihTables.push(table);\n\n                    this.cacheAddConnection(table.connectionKey, hub);\n\n                    if (table.fileFormatKey) {\n                        this.cacheAddFileFormat(table.fileFormatKey, hub);\n                    }\n\n                    table.dexihTableColumns.forEach(c => {\n                        if (c.columnValidationKey) {\n                            this.cacheAddColumnValidation(c.columnValidationKey, hub);\n                        }\n                    });\n                }\n            }\n\n            return table;\n        }\n    }\n\n    public cacheAddColumnValidation(columnValidationKey: number, hub: DexihHub): DexihColumnValidation {\n        if (columnValidationKey > 0) {\n            const dupValidation = hub.dexihColumnValidations.find(c => c.key === columnValidationKey);\n            if (!dupValidation) {\n                let columnValidation = this.hub.dexihColumnValidations\n                    .find(c => c.key === columnValidationKey && c.isValid);\n                if (columnValidation) {\n\n                    this.getColumnValidationCache(columnValidation, hub);\n                    hub.dexihColumnValidations.push(columnValidation);\n                    return columnValidation;\n                }\n            }\n        }\n    }\n\n    public cacheAddCustomFunction(customFunctionKey: number, hub: DexihHub): DexihCustomFunction {\n        if (customFunctionKey > 0) {\n            const dupFunction = hub.dexihCustomFunctions.find(c => c.key === customFunctionKey);\n            if (!dupFunction) {\n                let customFunction = this.hub.dexihCustomFunctions\n                    .find(c => c.key === customFunctionKey && c.isValid);\n                if (customFunction) {\n                    hub.dexihCustomFunctions.push(customFunction);\n                    return customFunction;\n                }\n            }\n        }\n    }\n\n    public cacheAddFileFormat(fileFormatKey: number, hub: DexihHub): DexihFileFormat {\n        if (fileFormatKey > 0) {\n            const dup = hub.dexihFileFormats.find(c => c.key === fileFormatKey);\n            if (!dup) {\n                let fileFormat = this.hub.dexihFileFormats\n                    .find(c => c.key === fileFormatKey && c.isValid);\n                if (fileFormat) {\n                    hub.dexihFileFormats.push(fileFormat);\n                    return fileFormat;\n                }\n            }\n        }\n    }\n\n    public cacheAddView(viewKey: number, hub: DexihHub): DexihView {\n        if (viewKey > 0) {\n            const dup = hub.dexihViews.find(c => c.key === viewKey);\n            if (!dup) {\n                let view = this.hub.dexihViews\n                    .find(c => c.key === viewKey && c.isValid);\n                if (view) {\n                    hub.dexihViews.push(view);\n                    if (view.sourceType === eDataObjectType.Table) {\n                        this.cacheAddTable(view.sourceTableKey, hub);\n                    }\n                    if (view.sourceType === eDataObjectType.Datalink) {\n                        this.cacheAddDatalink(view.sourceDatalinkKey, hub);\n                    }\n                    return view;\n                }\n            }\n        }\n    }\n\n    public cacheAddDashboard(dashboardKey: number, hub: DexihHub): DexihDashboard {\n        if (dashboardKey > 0) {\n            const dup = hub.dexihDashboards.find(c => c.key === dashboardKey);\n            if (!dup) {\n                let dashboard = this.hub.dexihDashboards\n                    .find(c => c.key === dashboardKey && c.isValid);\n                if (dashboard) {\n                    dashboard.dexihDashboardItems.filter(c => c.viewKey > 0).forEach(item => {\n                        this.cacheAddView(item.viewKey, hub);\n                    });\n                    return dashboard;\n                }\n            }\n        }\n    }\n\n    public cacheAddListOfValues(listOfValuesKey: number, hub: DexihHub): DexihListOfValues {\n        if (listOfValuesKey > 0) {\n            const dup = hub.dexihListOfValues.find(c => c.key === listOfValuesKey);\n            if (!dup) {\n                let lov = this.hub.dexihListOfValues\n                    .find(c => c.key === listOfValuesKey && c.isValid);\n                if (lov) {\n                    hub.dexihListOfValues.push(lov);\n                    if (lov.sourceType === eLOVObjectType.Table) {\n                        this.cacheAddTable(lov.sourceTableKey, hub);\n                    }\n                    if (lov.sourceType === eLOVObjectType.Datalink) {\n                        this.cacheAddDatalink(lov.sourceDatalinkKey, hub);\n                    }\n                    return lov;\n                }\n            }\n        }\n    }\n\n    public cacheAddApi(apiKey: number, hub: DexihHub): DexihApi {\n        if (apiKey > 0) {\n            const dup = hub.dexihApis.find(c => c.key === apiKey);\n            if (!dup) {\n                let api = this.hub.dexihApis\n                    .find(c => c.key === apiKey && c.isValid);\n                if (api) {\n                    hub.dexihApis.push(api);\n                    if (api.sourceType === eSourceType.Table) {\n                        this.cacheAddTable(api.sourceTableKey, hub);\n                    }\n                    if (api.sourceType === eSourceType.Datalink) {\n                        this.cacheAddDatalink(api.sourceDatalinkKey, hub);\n                    }\n                    return api;\n                }\n            }\n        }\n    }\n\n    public cacheAddHubVariable(hubVariableKey: number, hub: DexihHub): DexihHubVariable {\n        if (hubVariableKey > 0) {\n            const dup = hub.dexihHubVariables.find(c => c.key === hubVariableKey);\n            if (!dup) {\n                let variable = this.hub.dexihHubVariables\n                    .find(c => c.key === hubVariableKey && c.isValid);\n                if (variable) {\n                    hub.dexihHubVariables.push(variable);\n                    return variable;\n                }\n            }\n        }\n    }\n\n    public cacheAddTag(key: number, hub: DexihHub): DexihTag {\n        if (key > 0) {\n            const dup = hub.dexihTags.find(c => c.key === key);\n            if (!dup) {\n                let tag = this.hub.dexihTags.find(c => c.key === key && c.isValid);\n                if (tag) {\n                    hub.dexihTags.push(tag);\n                    return tag;\n                }\n            }\n        }\n    }\n\n    public getTriggerDetails(trigger: DexihTrigger): string {\n        let details = '';\n\n        if (trigger.startDate) {\n            details += 'Starts on/after: ' + (new Date(trigger.startDate)).toLocaleDateString() + '<br/>';\n        }\n        if (trigger.startTime) {\n            details += 'Runs after: ' + trigger.startTime + '<br/>';\n        }\n        if (trigger.endTime) {\n            details += 'Ends after: ' + trigger.endTime + '<br/>';\n        }\n        if (trigger.daysOfWeek && trigger.daysOfWeek.length > 0 && trigger.daysOfWeek.length < 7 ) {\n            details += 'Only on: ' + trigger.daysOfWeek.map(c => eDayOfWeek[c]).join() + '<br/>';\n        }\n        if (trigger.intervalTime) {\n            details += 'Run at interval: ' +  trigger.intervalTime + '<br/>';\n        }\n        if (trigger.maxRecurs) {\n            details += 'Recurs for: ' +  trigger.maxRecurs + '<br/>';\n        }\n\n        return details;\n    }\n\n    public CopyDatalink(originalDatalink: DexihDatalink): DexihDatalink {\n        let copyDatalink = Object.assign({}, originalDatalink);\n        copyDatalink.name = copyDatalink.name + ' (copy)'\n        copyDatalink.key = null;\n\n        let datalinkColumnKeys = {};\n\n        if (copyDatalink.sourceDatalinkTable) {\n            copyDatalink.sourceDatalinkTable.key = null;\n            copyDatalink.sourceDatalinkTable.dexihDatalinkColumns.forEach(c => {\n                c.datalinkTableKey = null;\n                let key = this.getNextSequence();\n                datalinkColumnKeys[c.key] = key;\n                c.key = key;\n            });\n        }\n\n        copyDatalink.dexihDatalinkTransforms.sort((a, b) => a.position - b.position).forEach(t => {\n            t.key = this.getNextSequence();\n\n            if (t.joinDatalinkTable) {\n                t.joinDatalinkTable.key = null;\n                t.joinDatalinkTable.dexihDatalinkColumns.forEach(c => {\n                    c.datalinkTableKey = null;\n                    let key = this.getNextSequence();\n                    datalinkColumnKeys[c.key] = key;\n                    c.key = key;\n                });\n            }\n\n            t.dexihDatalinkTransformItems.forEach(i => {\n                i.datalinkTransformKey = t.key;\n                i.key = this.getNextSequence();\n\n                if (i.filterDatalinkColumn) {\n                    i.filterDatalinkColumn.key = datalinkColumnKeys[i.filterDatalinkColumn.key];\n                }\n                if (i.joinDatalinkColumn) {\n                    i.joinDatalinkColumn.key = datalinkColumnKeys[i.joinDatalinkColumn.key];\n                }\n                if (i.sourceDatalinkColumn) {\n                    i.sourceDatalinkColumn.key = datalinkColumnKeys[i.sourceDatalinkColumn.key];\n                }\n\n                if (i.targetDatalinkColumn) {\n                    let key = this.getNextSequence();\n                    datalinkColumnKeys[i.targetDatalinkColumn.key] = key;\n                    i.targetDatalinkColumn.key = key;\n                }\n\n                i.dexihFunctionParameters.forEach(p => {\n                    p.datalinkTransformItemKey = i.key;\n                    p.key = this.getNextSequence();\n\n                    if (p.datalinkColumn) {\n                        if (p.direction === eParameterDirection.Input) {\n                            p.datalinkColumn.key = datalinkColumnKeys[p.datalinkColumn.key];\n                        } else {\n                            let key = this.getNextSequence();\n                            datalinkColumnKeys[p.datalinkColumn.key] = key;\n                            p.datalinkColumn.key = key;\n                        }\n                    }\n                });\n            });\n        });\n\n        return copyDatalink;\n    }\n}\n\nexport class DataCache {\n    public data = new BehaviorSubject<PreviewResults>(null);\n    public isRefreshing = false;\n\n    public refresh(previewQuery: Promise<PreviewResults>) {\n        this.isRefreshing = true;\n        previewQuery.then((result) => {\n            this.data.next(result);\n            this.isRefreshing = false;\n        }).catch(() => {\n            this.data.next(null);\n            this.isRefreshing = false;\n        });\n    }\n}\n\n// export enum eSharedObjectType {\n//     None = <any>'None',\n//     Connection = <any>'Connection',\n//     Table = <any>'Table',\n//     FileFormat = <any>'FileFormat',\n//     Datalink = <any>'Datalink',\n//     Datajob = <any>'Datajob',\n//     DatalinkTransform = <any>'DatalinkTransform',\n//     DatalinkTransformItem = <any>'DatalinkTransformItem',\n//     RemoteAgent = <any>'RemoteAgent',\n//     ColumnValidation = <any>'ColumnValidation',\n//     TransformWriterResult = <any>'TransformWriterResult',\n//     HubVariable = <any>'HubVariable',\n//     CustomFunction = <any>'CustomFunction',\n//     DatalinkTest = <any>'DatalinkTest',\n//     View = <any>'View',\n//     Api = <any>'Api',\n//     Dashboard = <any>'Dashboard',\n//     ApiStatus = <any>'ApiStatus',\n// }\n\n\n\n// export enum eSharedDataObjectType {\n//     Table = <any>'Table',\n//     Datalink = <any>'Datalink',\n//     View = <any>'View',\n//     Dashboard = <any>'Dashboard',\n//     Api = <any>'Api'\n// }\n\n// export class SharedData {\n//     public hubKey: number;\n//     public hubName: string;\n\n//     public objectType: eSharedDataObjectType;\n//     public objectKey: number;\n//     public name: string;\n//     public logicalName: string;\n//     public description: string;\n//     public updateDate: Date;\n\n//     public parameters: any[];\n//     public inputColumns: InputColumn[];\n//     public query: SelectQuery;\n//     public outputColumns: DexihColumnBase[];\n\n// }\n\n// export enum eApiStatus {\n//     Activated = <any>'Activated',\n//     Deactivated = <any>'Deactivated',\n// }\n// export class ApiData {\n//     public apiStatus: eApiStatus;\n//     public hubKey: number;\n//     public apiKey: number;\n//     public securityKey = '';\n//     public successCount = 0;\n//     public errorCount = 0;\n// }\n\n// export class DexihApi extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public description: string = null;\n//     public sourceType: eSourceType = eSourceType.Table;\n//     public sourceTableKey = 0;\n//     public sourceDatalinkKey = 0;\n//     public selectQuery = new SelectQuery();\n//     public cacheQueries = true;\n//     public cacheResetInterval: string = null;\n//     public logDirectory = '';\n//     public autoStart = false;\n//     public isShared = false;\n\n//     public parameters: DexihInputParameter[] = [];\n\n//     public currentStatus: BehaviorSubject<ApiData>;\n// }\n\n// export class DexihColumnBase extends EntityBase {\n//     public position = 0;\n//     public name: string = null;\n//     public logicalName: string = null;\n//     public columnGroup: string = null;\n//     public description: string = null;\n//     public dataType: eTypeCode;\n//     public maxLength: number = null;\n//     public precision: number = null;\n//     public scale: number = null;\n//     public allowDbNull = true;\n//     public isUnicode = true;\n//     public deltaType: eDeltaType = eDeltaType.TrackingField;\n//     public defaultValue: string = null;\n//     public isUnique = false;\n//     public isMandatory = false;\n//     public isIncrementalUpdate = false;\n//     public isInput = false;\n//     public rank = 0;\n//     public securityFlag: eSecurityFlag = eSecurityFlag.None;\n\n//     public isSourceColumn = false;\n//     public isGeneratedColumn = false;\n\n//     public mappingStatus: eMappingStatus;\n\n//     public entityStatus: EntityStatus;\n\n//     public runTime: {lineage: eMappingStatus, impact: eMappingStatus}\n\n//     constructor() {\n//         super();\n//         this.securityFlag = eSecurityFlag.None;\n//         this.isUnique = false;\n//         this.isMandatory = false;\n//         this.isIncrementalUpdate = false;\n//         this.allowDbNull = false;\n//         this.isUnicode = false;\n//         this.dataType = eTypeCode.String;\n//         this.deltaType = eDeltaType.NaturalKey;\n//     }\n// }\n\nexport class DexihInputParameter {\n    public key = 0;\n    public name: string = null;\n    public description: string = null;\n    public value = null;\n}\n\n// export class DexihConnection extends EntityBase {\n//     public key = 0;\n//     public purpose: eConnectionPurpose = eConnectionPurpose.Source;\n//     public name: string = null;\n//     public description: string = null;\n//     public server: string = null;\n//     public useWindowsAuth = false;\n//     public username = '';\n//     public password = '';\n//     public usePasswordVariable = false;\n//     public defaultDatabase: string = null;\n//     public filename: string = null;\n//     public useConnectionString = false;\n//     public useConnectionStringVariable = false;\n//     public connectionString: string = null;\n//     public embedTableKey = false;\n//     public passwordRaw: string = null;\n//     public connectionStringRaw: string = null;\n\n//     // public dexihTables: Array<DexihTable> = null;\n\n//     public databases: Array<string> = null;\n\n//     public connectionAssemblyName = '';\n//     public connectionClassName = '';\n\n//     constructor( name: string) {\n//         super();\n//         this.name = name;\n//         // this.dexihTables = new Array<DexihTable>();\n//     }\n// }\n\n// export class DexihCustomFunction extends EntityBase {\n//     public key = 0;\n//     public functionType: eFunctionType = eFunctionType.Map;\n//     public methodCode = '';\n//     public resultCode = '';\n//     public name = '';\n//     public description = '';\n//     public returnType: eTypeCode = eTypeCode.String;\n//     public isGeneric = false;\n//     public genericTypeDefault: eTypeCode = eTypeCode.String;\n\n//     public dexihCustomFunctionParameters: DexihCustomFunctionParameter[] = [];\n// }\n\n// export class DexihCustomFunctionParameter extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public position = 0;\n//     public direction: eParameterDirection = null;\n//     public isGeneric = false;\n//     public dataType: eTypeCode = eTypeCode.String\n//     public rank = 0;\n// }\n\n// export class DexihColumnValidation extends EntityBase {\n//     public key = 0;\n//     public name = '';\n//     public description: string = null;\n//     public dataType: eTypeCode = eTypeCode.String;\n//     public minLength: number = null;\n//     public maxLength: number = null;\n//     public allowDbNull = false;\n//     public minValue: number = null;\n//     public maxValue: number = null;\n//     public patternMatch: string = null;\n//     public regexMatch: string = null;\n//     public listOfValues: string[] = [];\n//     public listOfNotValues: string[] = [];\n//     public lookupColumnKey: number = null;\n//     public lookupIsValid = true;\n//     public lookupMultipleRecords = false;\n//     public invalidAction: eInvalidAction = eInvalidAction.Abend;\n//     public cleanAction: eCleanAction = eCleanAction.Null;\n//     public cleanValue: string = null;\n// }\n\n// export class DexihDashboard extends EntityBase {\n//     public key = 0;\n//     public name = '';\n//     public description: string = null;\n//     public isShared = false;\n//     public minCols = 4;\n//     public maxCols = 100;\n//     public minRows = 4;\n//     public maxRows = 100;\n//     public autoRefresh = true;\n\n//     public dexihDashboardItems: Array<DexihDashboardItem> = [];\n//     public parameters: Array<DexihInputParameter> = [];\n// }\n\n// export class DexihDashboardItem extends EntityBase {\n//     public key = 0;\n//     public name = '';\n//     public description: string = null;\n//     public cols = 1;\n//     public rows = 1;\n//     public x = 0;\n//     public y = 0;\n//     public header = true;\n//     public scrollable = false;\n\n//     public parameters: Array<DexihInputParameter> = [];\n//     public viewKey = 0;\n// }\n\n// export class DexihDatajob extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public description: string = null;\n//     public failAction = eFailAction.Abend;\n//     public auditConnectionKey = 0;\n//     public fileWatch = false;\n//     public autoStart = false;\n// //    public externalTrigger = false;\n\n//     public dexihDatalinkSteps: Array<DexihDatalinkStep> = null;\n//     public dexihTriggers: Array<DexihTrigger> = null;\n\n//     public parameters: Array<DexihInputParameter> = [];\n\n//     public previousStatus: BehaviorSubject<TransformWriterResult>;\n//     public currentStatus: BehaviorSubject<TransformWriterResult>;\n\n//     constructor() {\n//         super();\n//         this.dexihDatalinkSteps = [];\n//         this.dexihTriggers = [];\n//     }\n// }\n// export class DexihDatalinkDependency extends EntityBase {\n//     public key = 0;\n//     public datalinkStepKey = 0;\n//     public dependentDatalinkStepKey = 0;\n// }\n// export class DexihDatalinkProfile extends EntityBase {\n//     public key = 0;\n//     public datalinkKey = 0;\n\n//     public functionClassName: string = null;\n//     public functionAssemblyName: string = null;\n//     public functionMethodName: string = null;\n//     public detailedResults = false;\n\n// // properties used by components\n//     public name: string;\n//     public description: string;\n// }\n// export class DexihDatalink extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public description: string = null;\n//     // public targetTableKey = null;\n//     public auditConnectionKey = null;\n//     public updateStrategy: eUpdateStrategy = eUpdateStrategy.Reload;\n//     public datalinkType: eDatalinkType = eDatalinkType.General;\n//     public loadStrategy: eTransformWriterMethod = eTransformWriterMethod.Bulk;\n//     public rowsPerCommit = 1000;\n//     public rowsPerProgress = 1000;\n//     public rollbackOnFail = false;\n//     public isQuery = false;\n//     public maxRows = 0;\n//     public addDefaultRow = false;\n//     public isShared = false;\n//     public profileTableName: string = null;\n\n//     public sourceDatalinkTable = new DexihDatalinkTable();\n//     public dexihDatalinkTransforms: Array<DexihDatalinkTransform> = [];\n//     public dexihDatalinkProfiles: Array<DexihDatalinkProfile> = [];\n//     public dexihDatalinkTargets: Array<DexihDatalinkTarget> = [];\n//     public parameters: Array<DexihInputParameter> = [];\n\n//     public targetTable: DexihTable;\n\n// // properties used by components.\n//     public sourceTableName: string;\n//     public targetTableName: string;\n\n//     public entityStatus: EntityStatus;\n//     public previousStatus: BehaviorSubject<TransformWriterResult>;\n//     public currentStatus: BehaviorSubject<TransformWriterResult>;\n// }\n\n// export class DexihDatalinkTable extends EntityBase {\n//     public key = 0;\n//     public sourceTableKey = null;\n//     public sourceDatalinkKey = null;\n//     public name: string = null;\n//     public sourceType = eSourceType.Table;\n\n//     public rowsStartAt = null;\n//     public rowsEndAt = null;\n//     public rowsIncrement = null;\n\n//     public dexihDatalinkColumns: Array<DexihDatalinkColumn> = [];\n// }\n\n// export class DexihDatalinkColumn extends DexihColumnBase {\n//     public key = 0;\n//     public datalinkTableKey = null;\n\n//     public childColumns: Array<DexihDatalinkColumn> = [];\n// }\n\n// export class DexihDatalinkStep extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public datajobKey = 0;\n//     public datalinkKey = 0;\n\n//     public dexihDatalinkDependencies: Array<DexihDatalinkDependency> = [];\n//     public dexihDatalinkStepColumns: Array<DexihDatalinkStepColumn> = [];\n//     public parameters: Array<DexihInputParameter> = [];\n// }\n\n// export class DexihDatalinkStepColumn extends DexihColumnBase {\n//     public key = 0;\n//     public datalinkStepKey = null;\n// }\n\n// export class DexihDatalinkTarget extends EntityBase {\n//     public key = 0;\n//     public datalinkKey: number = null;\n//     public nodeDatalinkColumn: DexihDatalinkColumn = null;\n//     public tableKey: number = null;\n//     public position: number = null;\n\n//     public runTime: {\n//         inputColumns: DexihDatalinkColumn[];\n//     }\n// }\n\n// export class DexihDatalinkTest extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public auditConnectionKey = 0;\n//     public description: string = null;\n\n//     public dexihDatalinkTestSteps: Array<DexihDatalinkTestStep> = [];\n\n//     public entityStatus: EntityStatus;\n//     public previousStatus: BehaviorSubject<TransformWriterResult>;\n//     public currentStatus: BehaviorSubject<TransformWriterResult>;\n// }\n\n// export class DexihDatalinkTestStep extends EntityBase {\n//     public key = 0;\n//     public datalinkTestKey = 0;\n//     public position = 0;\n//     public targetConnectionKey = 0;\n//     public targetTableName: string = null;\n//     public targetSchema: string = null;\n//     public expectedConnectionKey = 0;\n//     public expectedTableName: string = null;\n//     public expectedSchema: string = null;\n\n//     public datalinkKey = 0;\n\n//     public name: string = null;\n//     public description: string = null;\n\n//     public dexihDatalinkTestTables: Array<DexihDatalinkTestTable> = [];\n\n// }\n\n// export class DexihDatalinkTestTable extends EntityBase {\n//     public key = 0;\n//     public datalinkTestStepKey = 0;\n//     public tableKey = 0;\n//     public sourceConnectionKey = 0;\n//     public sourceTableName: string = null;\n//     public sourceSchema: string = null;\n//     public testConnectionKey = 0;\n//     public testTableName: string = null;\n//     public testSchema: string = null;\n// }\n\n// export class DexihDatalinkTransformItem extends EntityBase {\n//     public key = 0;\n//     public datalinkTransformKey = 0;\n//     public position = 0;\n//     public transformItemType: eTransformItemType = null;\n//     public sourceValue: string = null;\n//     public joinValue: string = null;\n//     public sortDirection: eSortDirection = null;\n//     public seriesGrain: eSeriesGrain = null;\n//     public seriesFill = false;\n//     public seriesStart: string = null;\n//     public seriesFinish: string = null;\n//     public filterCompare: eCompare = null;\n//     public filterValue: string = null;\n//     public aggregate: eAggregate = null;\n//     public returnType: eTypeCode = eTypeCode.String;\n//     public functionCode: string = null;\n//     public functionResultCode: string = null;\n//     public onError: eOnError = null;\n//     public onNull: eOnNull = null;\n//     public notCondition = false;\n//     public invalidAction: eInvalidAction = null;\n//     public customFunctionKey: number = null;\n\n//     public entityStatus: EntityStatus;\n\n//     public dexihFunctionParameters: Array<DexihFunctionParameter>;\n\n//     public functionClassName: string = null;\n//     public functionAssemblyName: string = null;\n//     public functionMethodName: string = null;\n\n//     public genericTypeCode: eTypeCode = null;\n//     public functionCaching = eFunctionCaching.NoCache;\n\n//     public targetDatalinkColumn: DexihDatalinkColumn = null;\n//     public sourceDatalinkColumn: DexihDatalinkColumn = null;\n//     public joinDatalinkColumn: DexihDatalinkColumn = null;\n//     public filterDatalinkColumn: DexihDatalinkColumn = null;\n\n//     constructor() {\n//         super();\n//         this.onError = eOnError.Abend;\n//         this.onNull = eOnNull.Execute;\n//         this.invalidAction = eInvalidAction.Abend;\n\n//         this.dexihFunctionParameters = [];\n//     }\n\n// }\n// export class DexihDatalinkTransform extends EntityBase {\n//     public key = 0;\n//     public datalinkKey = 0;\n//     public position = 0;\n//     public name: string = null;\n//     public description: string = null;\n//     public passThroughColumns: boolean = null;\n//     public joinTableAlias: string = null;\n//     public joinDuplicateStrategy = eDuplicateStrategy.All;\n\n//     public entityStatus: EntityStatus;\n\n//     public dexihDatalinkTransformItems: Array<DexihDatalinkTransformItem>;\n\n//     public transformType: eTransformType = null;\n//     public transformClassName: string = null;\n//     public transformAssemblyName: string = null ;\n\n//     public maxInputRows = 0;\n//     public maxOutputRows = 0;\n\n//     public joinDatalinkTable: DexihDatalinkTable = null;\n\n//     // TODO Implement joinSortDatalinkColumn\n//     public joinSortDatalinkColumn: DexihDatalinkColumn = null;\n\n//     public nodeDatalinkColumn: DexihDatalinkColumn = null;\n\n//     public runTime: {\n//         inputColumns: DexihDatalinkColumn[];\n//         outputColumns: DexihDatalinkColumn[];\n//         transformColumns: DexihDatalinkColumn[];\n//     }\n\n//     constructor() {\n//         super();\n//         this.dexihDatalinkTransformItems = new Array<DexihDatalinkTransformItem>();\n//     }\n// }\n\n// export class DexihFileFormat extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public description: string = null;\n//     public isDefault = false;\n//     public allowComments = false;\n//     public bufferSize: number;\n//     public comment: string;\n//     public delimiter: string;\n//     public detectColumnCountChanges = false;\n//     public hasHeaderRecord = true;\n//     public ignoreHeaderWhiteSpace = false;\n//     public ignoreReadingExceptions = false;\n//     public ignoreQuotes = false;\n//     public quote: string;\n//     public quoteAllFields = false;\n//     public quoteNoFields = false;\n//     public skipEmptyRecords = false;\n//     public skipHeaderRows = 0;\n//     public trimFields = false;\n//     public trimHeaders = false;\n//     public willThrowOnMissingField = false;\n//     public setWhiteSpaceCellsToNull = false;\n\n//     public matchHeaderRecord = true;\n\n//     public isModified: boolean;\n\n//     constructor() {\n//         super();\n//         this.bufferSize = 2048;\n//         this.delimiter = ',';\n//         this.quote = '\"';\n//         this.comment = '#';\n//     }\n// }\n// export class DexihFunctionParameter extends EntityBase {\n//     public key = 0;\n//     public datalinkTransformItemKey = 0;\n//     public name: string = null;\n//     public position = 0;\n//     public direction: eParameterDirection = null;\n//     public isGeneric = false;\n//     public dataType: eTypeCode = eTypeCode.String\n//     public rank = 0;\n//     public arrayParameters: DexihFunctionArrayParameter[] = [];\n//     public value: string = null;\n\n//     public datalinkColumn: DexihDatalinkColumn;\n//     public entityStatus: EntityStatus;\n\n//     // runtime structures are not exported when saving.\n//     public runTime: {functionParameter: FunctionParameter} = {functionParameter: null};\n// }\n\n// export class DexihFunctionArrayParameter extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public position = 0;\n//     public direction: eParameterDirection = null;\n//     public isGeneric = false;\n//     public dataType: eTypeCode = eTypeCode.String;\n//     public rank = 0;\n//     public value: string = null;\n//     public datalinkColumn: DexihDatalinkColumn = null;\n\n//     // runtime structures are not exported when saving.\n//     public runTime: {functionParameter: FunctionParameter} = {functionParameter: null};\n// }\n\n// export class DexihHub extends EntityBase {\n//     public hubKey = 0;\n//     public name: string;\n//     public description: string;\n//     public encryptionKey: string;\n//     public maxOwners: number;\n//     public maxUsers: number;\n//     public maxReaders: number;\n//     public maxDatalinks: number;\n//     public maxDatajobs: number;\n//     public dailyTransactionQuota: number;\n//     public expiryDate: Date;\n\n//     public hubPermission: ePermission;\n\n//     public dexihHubVariables: Array<DexihHubVariable>;\n//     public dexihConnections: Array<DexihConnection>;\n//     public dexihTables: Array<DexihTable>;\n//     public dexihDatajobs: Array<DexihDatajob>;\n//     public dexihDatalinks: Array<DexihDatalink>;\n//     public dexihColumnValidations: Array<DexihColumnValidation>;\n//     public dexihFileFormats: Array<DexihFileFormat>;\n//     public dexihCustomFunctions: Array<DexihCustomFunction>;\n//     public dexihRemoteAgentHubs: Array<DexihRemoteAgentHub>;\n//     public dexihDatalinkTests: Array<DexihDatalinkTest>;\n//     public dexihViews: Array<DexihView>;\n//     public dexihApis: Array<DexihApi>;\n//     public dexihDashboards: Array<DexihDashboard>;\n\n//     constructor(hubKey: number, name: string) {\n//         super();\n//         this.hubKey = hubKey;\n//         this.name = name;\n//         this.isValid = true;\n\n//         this.dexihHubVariables = new Array<DexihHubVariable>();\n//         this.dexihConnections = new Array<DexihConnection>();\n//         this.dexihTables = new Array<DexihTable>();\n//         this.dexihDatajobs = new Array<DexihDatajob>();\n//         this.dexihDatalinks = new Array<DexihDatalink>();\n//         this.dexihColumnValidations = new Array<DexihColumnValidation>();\n//         this.dexihFileFormats = new Array<DexihFileFormat>();\n//         this.dexihCustomFunctions = new Array<DexihCustomFunction>();\n//         this.dexihDatalinkTests = new Array<DexihDatalinkTest>();\n//         this.dexihViews = new Array<DexihView>();\n//         this.dexihApis = new Array<DexihApi>();\n//         this.dexihDashboards = new Array<DexihDashboard>();\n//     }\n// }\n\n// export class DexihHubVariable extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public value: string = null;\n//     public valueRaw: string = null;\n//     public isEncrypted = false;\n//     public isEnvironmentVariable = false;\n// }\n\n// export class DexihRemoteAgentHub extends EntityBase {\n//     public remoteAgentHubKey = 0;\n//     public remoteAgentKey = 0;\n//     public hubKey = 0;\n//     public isAuthorized = false;\n//     public isDefault = false;\n//     public allowExternalConnect = false;\n\n//     public isSelected = false;\n// }\n\n// export class DexihTableColumn extends DexihColumnBase {\n//     public key = 0;\n//     public tableKey = 0;\n//     public columnValidationKey: number = null;\n\n//     public parentColumnKey: number = null;\n//     public childColumns: DexihTableColumn[] = null;\n\n\n//     public mappingStatus: eMappingStatus;\n//     public entityStatus: EntityStatus;\n\n//     super() {\n//         this.securityFlag = eSecurityFlag.None;\n//         this.isUnique = false;\n//         this.isMandatory = false;\n//         this.isIncrementalUpdate = false;\n//         this.allowDbNull = false;\n//         this.dataType = eTypeCode.String;\n//         this.deltaType = eDeltaType.NaturalKey;\n//     }\n// }\n\n// export class DexihTable extends EntityBase {\n//     public key = 0;\n//     public connectionKey = 0;\n//     public name = '';\n//     public schema: string = null;\n//     public sourceConnectionName: string = null;\n//     public baseTableName: string = null;\n//     public logicalName = '';\n//     public tableType: eTableType = eTableType.Table;\n//     public description: string = null;\n//     public useQuery = false;\n//     public queryString = null;\n//     public fileFormatKey: number = null;\n//     public rejectedTableName: string = null;\n//     public sortColumnKeys: Array<number> = [];\n//     public autoManageFiles = true;\n//     public useCustomFilePaths = false;\n//     public fileRootPath: string = null;\n//     public fileIncomingPath: string = null;\n//     public fileOutgoingPath: string = null;\n//     public fileProcessedPath: string = null;\n//     public fileRejectedPath: string = null;\n//     public fileMatchPattern: string = null;\n//     public restfulUri: string = null;\n//     public formatType: eFormatType = eFormatType.Text;\n//     public maxImportLevels = 1;\n//     public rowPath: string = null;\n//     public isVersioned = false;\n//     public isShared = false;\n//     public fileSample: string = null;\n\n//     public fileFormat: DexihFileFormat = null;\n\n//     public entityStatus: EntityStatus; \n\n//     public dexihTableColumns: Array<DexihTableColumn>;\n\n//     public previousStatus: BehaviorSubject<TransformWriterResult>;\n//     public currentStatus: BehaviorSubject<TransformWriterResult>;\n\n//     constructor() {\n//         super();\n//         this['entityStatus'] = new EntityStatus();\n//         this['entityStatus'].isBusy = false;\n//         this['entityStatus'].lastStatus = eStatus.None;\n\n//         this.key = 0;\n//         this.dexihTableColumns = new Array<DexihTableColumn>();\n//     }\n// }\n\n// export class DexihTrigger extends EntityBase {\n//     public key = 0;\n//     public datajobKey = 0;\n//     public startDate: string = null;\n//     public intervalTime: string = null;\n//     public daysOfWeek: Array<eDayOfWeek> = [\n//         eDayOfWeek.Sunday,\n//         eDayOfWeek.Monday,\n//         eDayOfWeek.Tuesday,\n//         eDayOfWeek.Wednesday,\n//         eDayOfWeek.Thursday,\n//         eDayOfWeek.Friday,\n//         eDayOfWeek.Saturday,\n//     ];\n//     public startTime: string = null;\n//     public endTime: string = null;\n//     public cronExpression: string = null;\n//     public maxRecurs: number = null;\n// }\n\n// export class DexihView extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public description: string = null;\n//     public viewType: eViewType = eViewType.Table;\n//     public sourceType: eSourceType = eSourceType.Table;\n//     public sourceTableKey = 0;\n//     public sourceDatalinkKey = 0;\n//     public inputValues: InputColumn[] = null;\n//     public selectQuery = new SelectQuery();\n//     public chartConfig = new ChartConfig();\n//     public autoRefresh = true;\n//     public isShared = false;\n\n//     public parameters: Array<DexihInputParameter> = [];\n// }\n\n// export class ChartConfig {\n//     public labelColumn: string = null;\n//     public seriesColumn: string = null;\n//     public seriesColumns = [];\n//     public xColumn: string = null;\n//     public yColumn: string = null;\n//     public minColumn: string = null;\n//     public maxColumn: string = null;\n//     public radiusColumn: string = null;\n//     public longitudeColumn: string = null;\n//     public latitudeColumn: string = null;\n\n//     public chartType = eChartType.BarVertical;\n//     public colorScheme = 'natural';\n//     public showGradient = false;\n//     public showXAxis = true;\n//     public showYAxis = true;\n//     public showLegend = false;\n//     public legendPosition: 'right' | 'below'  = 'below';\n//     public showXAxisLabel = true;\n//     public showYAxisLabel = true;\n//     public showGridLines = false;\n//     public xAxisLabel: string = null;\n//     public yAxisLabel: string = null;\n//     public xScaleMax = null;\n//     public xScaleMin = null;\n//     public yScaleMax = null;\n//     public yScaleMin = null;\n//     public autoScale = true;\n\n//     // pie charts only\n//     public explodeSlices = false;\n//     public doughnut = false;\n// }\n\n// export enum eSourceType {\n//     Table = <any>'Table',\n//     Datalink = <any>'Datalink'\n// }\n\n// export enum eViewType {\n//     Table = <any>'Table',\n//     Chart = <any>'Chart'\n// }\n\n// export enum eTableType {\n//     Table = <any>'Table',\n//     View = <any>'View',\n//     Query = <any>'Query',\n// }\n\n// export enum eTestTableAction {\n//     None = <any>'None',\n//     Truncate = <any>'Truncate',\n//     DropCreate = <any>'DropCreate',\n//     TruncateCopy = <any>'TruncateCopy',\n//     DropCreateCopy = <any>'DropCreateCop',\n// }\n\n// export enum eStatus {\n//     None = <any>'None',\n//     Pending = <any>'Pending',\n//     Error = <any>'Error',\n//     Imported = <any>'Imported',\n//     Added = <any>'Added',\n//     Updated = <any>'Updated',\n//     Deleted = <any>'Deleted',\n// }\n\n// export enum eSortDirection {\n//     Ascending = <any>'Ascending',\n//     Descending = <any>'Descending',\n// }\n\nexport const sortDirections = [\n    {key: eSortDirection.Ascending, name: 'Ascending'},\n    {key: eSortDirection.Descending, name: 'Descending'},\n];\n\n// export enum eSeriesGrain {\n//     Second = <any>'Second',\n//     Minute = <any>'Minute',\n//     Hour = <any>'Hour',\n//     Day = <any>'Day',\n//     Week = <any>'Week',\n//     Month = <any>'Month',\n//     Year = <any>'Year',\n//     Number = <any>'Number',\n// }\nexport const seriesGrains = [\n    {key: eSeriesGrain.Second, name: 'Second'},\n    {key: eSeriesGrain.Minute, name: 'Minute'},\n    {key: eSeriesGrain.Hour, name: 'Hour'},\n    {key: eSeriesGrain.Day, name: 'Day'},\n    {key: eSeriesGrain.Week, name: 'Week'},\n    {key: eSeriesGrain.Month, name: 'Month'},\n    {key: eSeriesGrain.Year, name: 'Year'},\n    {key: eSeriesGrain.Number, name: 'Number'},\n];\n\n// export enum eDeltaType {\n//     SourceSurrogateKey = <any>'SourceSurrogateKey',\n//     ValidFromDate = <any>'ValidFromDate',\n//     ValidToDate = <any>'ValidToDate',\n//     CreateDate = <any>'CreateDate',\n//     UpdateDate = <any>'UpdateDate',\n//     CreateAuditKey = <any>'CreateAuditKey',\n//     UpdateAuditKey = <any>'UpdateAuditKey',\n//     IsCurrentField = <any>'IsCurrentField',\n//     Version = <any>'Version',\n//     NaturalKey = <any>'NaturalKey',\n//     TrackingField = <any>'TrackingField',\n//     NonTrackingField = <any>'NonTrackingField',\n//     IgnoreField = <any>'IgnoreField',\n//     ValidationStatus = <any>'ValidationStatus',\n//     RejectedReason = <any>'RejectedReason',\n//     FileName = <any>'FileName',\n//     FileRowNumber = <any>'FileRowNumber',\n//     AzureRowKey = <any>'AzureRowKey', // special column type for Azure Storage Tables.\n//     AzurePartitionKey = <any>'AzurePartitionKey', // special column type for Azure Storage Tables.\n//     TimeStamp = <any>'TimeStamp', // column that is generated by the database.\n//     DbAutoIncrement = <any>'DbAutoIncement',\n//     AutoIncrement = <any>'AutoIncrement', // column is auto incremented by the integration hub function.\n//     ResponseSuccess = <any>'ResponseSuccess', // webservice/function response aws successful\n//     ResponseData = <any>'ResponseData',  // raw data from a webservice/function response\n//     ResponseStatus = <any>'ResponseStatus',  // status code from a webservice/function call\n//     ResponseSegment = <any>'ResponseSegment',  // status code from a webservice/function call\n//     Error = <any>'Error',  // status code from a webservice/function call\n//     Url = <any>'Url',  // status code from a webservice/function call\n// }\n\n// export enum eChartType {\n//     BarVertical = <any>'BarVertical',\n//     BarHorizontal = <any>'BarHorizontal',\n//     BarVertical2D = <any>'BarVertical2D',\n//     BarHorizontal2D = <any>'BarHorizontal2D',\n//     BarVerticalStacked = <any>'BarVerticalStacked',\n//     BarHorizontalStacked = <any>'BarHorizontalStacked',\n//     BarVerticalNormalized = <any>'BarVerticalNormalized',\n//     BarHorizontalNormalized = <any>'BarHorizontalNormalized',\n//     Pie = <any>'Pie',\n//     PieAdvanced = <any>'PieAdvanced',\n//     PieGrid = <any>'PieGrid',\n//     Line = <any>'Line',\n//     Area = <any>'Area',\n//     Polar = <any>'Polar',\n//     AreaStacked = <any>'AreaStacked',\n//     AreaNormalized = <any>'AreaNormalized',\n//     Scatter = <any>'Scatter',\n//     Error = <any>'Error',\n//     Bubble = <any>'Bubble',\n//     ForceDirected = <any>'ForceDirected',\n//     HeatMap = <any>'HeatMap',\n//     TreeMap = <any>'TreeMap',\n//     Cards = <any>'Cards',\n//     Gauge = <any>'Gauge',\n//     LinearGauge = <any>'LinearGauge',\n//     Map = <any>'Map'\n// }\n\nexport const deltaTypes = [\n    {key: eDeltaType.SourceSurrogateKey, name: 'Source Surrogate Key', dataType: eTypeCode.Int64, defaultName: 'SourceSk', unique: true},\n    {key: eDeltaType.ValidFromDate, name: 'Valid From Date', dataType: eTypeCode.DateTime, defaultName: 'ValidFromDate', unique: true},\n    {key: eDeltaType.ValidToDate, name: 'Valid To Date', dataType: eTypeCode.DateTime, defaultName: 'ValidToDate', unique: true},\n    {key: eDeltaType.CreateDate, name: 'Create Date', dataType: eTypeCode.DateTime, defaultName: 'CreateDate', unique: true},\n    {key: eDeltaType.UpdateDate, name: 'Update Date', dataType: eTypeCode.DateTime, defaultName: 'UpdateDate', unique: true},\n    {key: eDeltaType.CreateAuditKey, name: 'Create Audit Key', dataType: eTypeCode.Int64, defaultName: 'CreateAuditKey', unique: true},\n    {key: eDeltaType.UpdateAuditKey, name: 'Update Audit Key', dataType: eTypeCode.Int64, defaultName: 'UpdateAuditKey', unique: true},\n    {key: eDeltaType.IsCurrentField, name: 'Is Current Field', dataType: eTypeCode.Boolean, defaultName: 'IsCurrent', unique: true},\n    {key: eDeltaType.Version, name: 'Record Version', dataType: eTypeCode.Boolean, defaultName: 'Version', unique: true},\n    {key: eDeltaType.NaturalKey, name: 'Natural Key', dataType: null, defaultName: null, unique: false},\n    {key: eDeltaType.TrackingField, name: 'Tracking Field', dataType: null, defaultName: null, unique: false},\n    {key: eDeltaType.NonTrackingField, name: 'Non-Tracking Field', dataType: null, defaultName: null, unique: false},\n    {key: eDeltaType.IgnoreField, name: 'Ignored Field', dataType: null, defaultName: null, unique: false},\n    {key: eDeltaType.RejectedReason, name: 'Reject Reason', dataType: eTypeCode.String, defaultName: 'RejectReason', unique: true},\n    {key: eDeltaType.FileName, name: 'File Name', dataType: eTypeCode.String, defaultName: 'FileName', unique: true},\n    {key: eDeltaType.FileRowNumber, name: 'File Row Number', dataType: eTypeCode.Int64, defaultName: 'FileRowNumber', unique: true},\n    {key: eDeltaType.FileDate, name: 'File Modified Date', dataType: eTypeCode.Int64, defaultName: 'FileDate', unique: true},\n    {key: eDeltaType.RowKey, name: 'RowKey (Azure/Mongo)', dataType: null, defaultName: null, unique: true},\n    {key: eDeltaType.PartitionKey, name: 'PartitionKey (Azure only)', dataType: null, defaultName: null, unique: true},\n    {key: eDeltaType.TimeStamp, name: 'Auto TimeStamp', dataType: null, defaultName: null, unique: true},\n    {key: eDeltaType.AutoIncrement, name: 'Auto Increment', dataType: eTypeCode.Int64, defaultName: 'Sk', unique: true},\n    {key: eDeltaType.DbAutoIncrement, name: 'Database Auto Increment', dataType: eTypeCode.Int64, defaultName: 'Sk', unique: true},\n    {key: eDeltaType.ResponseSuccess, name: 'Response Success', dataType: eTypeCode.String, defaultName: 'ResponseSuccess', unique: false},\n    {key: eDeltaType.ResponseData, name: 'Response Data', dataType: eTypeCode.String, defaultName: 'ResponseData', unique: false},\n    {key: eDeltaType.ResponseStatus, name: 'Response Status', dataType: eTypeCode.String, defaultName: 'ResponseStatus', unique: true},\n    {key: eDeltaType.ResponseSegment, name: 'Response Segment', dataType: eTypeCode.String, defaultName: null, unique: false},\n    {key: eDeltaType.DatabaseOperation, name: 'Database Operation', dataType: eTypeCode.String, defaultName: null, unique: false},\n    {key: eDeltaType.Error, name: 'Error', dataType: eTypeCode.String, defaultName: null, unique: false},\n    {key: eDeltaType.Url, name: 'Url', dataType: eTypeCode.String, defaultName: null, unique: false},\n    {key: eDeltaType.ValidationStatus, name: 'Validation Status',\n        dataType: eTypeCode.String, defaultName: 'ValidationStatus', unique: true},\n]\n\n// export enum eSecurityFlag {\n//     None = <any>'None',\n//     FastEncrypt = <any>'FastEncrypt',\n//     FastDecrypt = <any>'FastDecrypt',\n//     FastEncrypted = <any>'FastEncrypted',\n//     StrongEncrypt = <any>'StrongEncrypt',\n//     StrongDecrypt = <any>'StrongDecrypt',\n//     StrongEncrypted = <any>'StrongEncrypted',\n//     OneWayHash = <any>'OneWayHash',\n//     OneWayHashed = <any>'OneWayHashed',\n//     Hide = <any>'Hide'\n// }\n\nexport const securityFlags = [\n    {key: eSecurityFlag.None, name: 'Not Secured'},\n    {key: eSecurityFlag.FastEncrypt, name: 'Fast Encrypt (encrypted when read)'},\n    {key: eSecurityFlag.FastDecrypt, name: 'Fast Decrypt (decrypted when written)'},\n    {key: eSecurityFlag.FastEncrypted, name: 'Fast Encrypted Field'},\n    {key: eSecurityFlag.StrongEncrypt, name: 'Strong Encrypt (encrypted when read)'},\n    {key: eSecurityFlag.StrongDecrypt, name: 'Strong Decrypt (decrypted when written)'},\n    {key: eSecurityFlag.StrongEncrypted, name: 'Strong Encrypted Field'},\n    {key: eSecurityFlag.OneWayHash, name: 'Hash (when read)'},\n    {key: eSecurityFlag.OneWayHashed, name: 'Hashed field'},\n    {key: eSecurityFlag.Hide, name: 'Hide the field'},\n]\n\n// export enum eDatalinkType {\n//     General = <any>'General',\n//     Stage = <any>'Stage',\n//     Validate = <any>'Validate',\n//     Transform = <any>'Transform',\n//     Deliver = <any>'Deliver',\n//     Publish = <any>'Publish',\n//     Share = <any>'Share',\n//     Query = <any>'Query'\n// }\n\n// export const datalinkTypes = [\n//     {key: eDatalinkType.General, name: 'General', description: 'Non-categorized general purpose datalink'},\n//     {key: eDatalinkType.Stage, name: 'Staging', description: 'Staging - loads data into a central/interim database'},\n//     {key: eDatalinkType.Validate, name: 'Validate', description: 'Validate - performs data validation and cleaning'},\n//     {key: eDatalinkType.Transform, name: 'Transform', description: 'Transform - reshapes, aggregates data'},\n//     {key: eDatalinkType.Deliver, name: 'Deliver', description: 'Deliver - prepares data for delivering to a system/database'},\n//     {key: eDatalinkType.Publish, name: 'Publish', description: 'Publish - sends data to a target system/database'},\n//     {key: eDatalinkType.Share, name: 'Share', description: 'Share - datalink designed to be shared with other users'},\n//     {key: eDatalinkType.Query, name: 'Query',\n//              description: 'Query - datalink query used for data extracts or as a source for other datalinks'},\n// ]\n\n// export enum eTransformWriterMethod {\n//     Bulk = <any>'Bulk',\n//     Transaction = <any>'Transaction',\n// }\n\nexport const loadStrategies = [\n    {key: eTransformWriterMethod.Bulk, description: 'Bulk load - target tables loaded in parallel as fast as possible'},\n    {key: eTransformWriterMethod.Transaction, description: 'Transaction - Target tables loaded in transactions to ensure data integrity'},\n]\n\n// export enum eUpdateStrategy {\n//     Reload = <any>'Reload',\n//     Append = <any>'Append',\n//     AppendUpdate = <any>'AppendUpdate',\n//     AppendUpdateDelete = <any>'AppendUpdateDelete',\n//     AppendUpdatePreserve = <any>'AppendUpdatePreserve',\n//     AppendUpdateDeletePreserve = <any>'AppendUpdateDeletePreserve',\n// }\n\nexport const updateStrategies = [\n    {key: eUpdateStrategy.Reload, description: 'Truncate target table and reload'},\n    {key: eUpdateStrategy.Append, description: 'Append all rows to target table'},\n    {key: eUpdateStrategy.AppendUpdate, description: 'Append new rows and update existing rows'},\n    {key: eUpdateStrategy.AppendUpdateDelete, description: 'Append new rows, update existing rows, and delete \"deleted\" rows'},\n    {key: eUpdateStrategy.AppendUpdatePreserve, description: 'Append new rows and update existing rows, and preserve changes'},\n    {key: eUpdateStrategy.AppendUpdateDeletePreserve, description: 'Append new rows, check for updates and deletes, and preserve changes'},\n]\n\n// export enum eConnectionPurpose {\n//     Source = <any>'Source',\n//     Managed = <any>'Managed',\n//     Target = <any>'Target',\n//     Internal = <any>'Internal'\n// }\n\n// export const connectionPurposes = [\n//     {key: eConnectionPurpose.Source, name: 'Source Database/Service'},\n//     {key: eConnectionPurpose.Managed, name: 'Managed (by Integration Hub) Database'},\n//     {key: eConnectionPurpose.Target, name: 'Target Database'},\n// ]\n\n// export enum eParameterDirection {\n//     Input = <any>'Input',\n//     Output = <any>'Output',\n//     Join = <any>'Join',\n//     ResultInput = <any>'ResultInput',\n//     ResultOutput = <any>'ResultOutput',\n//     ReturnValue = <any>'ReturnValue',\n//     ResultReturnValue = <any>'ResultReturnValue',\n// };\n\n// export enum eTransformItemType {\n//     BuiltInFunction = <any>'BuiltInFunction',\n//     CustomFunction = <any>'CustomFunction',\n//     ColumnPair = <any>'ColumnPair',\n//     JoinPair = <any>'JoinPair',\n//     FilterPair = <any>'FilterPair',\n//     AggregatePair = <any>'AggregatePair',\n//     Series = <any>'Series',\n//     Sort = <any>'Sort',\n//     Column = <any>'Column',\n//     JoinNode = <any>'JoinNode',\n//     GroupNode = <any>'GroupNode',\n//     Node = <any>'Node',\n//     UnGroup = <any>'UnGroup'\n// }\n\nexport const transformItemTypes = [\n    // tslint:disable-next-line:max-line-length\n    {key: eTransformItemType.BuiltInFunction, name: 'Built in Function', useSource: false, useTarget: false, useJoin: false, useFilter: false},\n    // tslint:disable-next-line:max-line-length\n    {key: eTransformItemType.CustomFunction, name: 'Custom Function', useSource: false, useTarget: false, useJoin: false, useFilter: false},\n    {key: eTransformItemType.ColumnPair, name: 'Mapping', useSource: true, useTarget: true, useJoin: false, useFilter: false},\n    {key: eTransformItemType.JoinPair, name: 'Join', useSource: true, useTarget: false, useJoin: true, useFilter: false},\n    {key: eTransformItemType.FilterPair, name: 'Filter', useSource: true, useTarget: true, useJoin: false, useFilter: true},\n    {key: eTransformItemType.AggregatePair, name: 'Aggregate', useSource: true, useTarget: true, useJoin: false, useFilter: false},\n    {key: eTransformItemType.Series, name: 'Series', useSource: true, useTarget: false, useJoin: false, useFilter: false},\n    {key: eTransformItemType.Sort, name: 'Sort By', useSource: true, useTarget: false, useJoin: false, useFilter: false},\n    {key: eTransformItemType.Column, name: 'Group By', useSource: true, useTarget: false, useJoin: false, useFilter: false},\n    {key: eTransformItemType.JoinNode, name: 'Join Node', useSource: true, useTarget: false, useJoin: true, useFilter: false},\n    {key: eTransformItemType.GroupNode, name: 'Group Node', useSource: true, useTarget: false, useJoin: false, useFilter: false},\n    {key: eTransformItemType.Node, name: 'Node', useSource: true, useTarget: false, useJoin: false, useFilter: false},\n    {key: eTransformItemType.UnGroup, name: 'Un-Group', useSource: true, useTarget: false, useJoin: false, useFilter: false},\n]\n\n// export enum eTransformFunctionType {\n//     Condition = <any>'Condition',\n//     Mapping = <any>'Mapping',\n//     Aggregate = <any>'Aggregate',\n//     Series = <any>'Series',\n//     Rows = <any>'Rows',\n//     Profile = <any>'Profile',\n//     Validation = <any>'Validation',\n//     JoinCondition = <any>'JoinCondition',\n//     Sort = <any>'Sort'\n// }\n\nexport const transformFunctionTypes = [\n    {key: eFunctionType.Condition, name: 'Condition Function'},\n    {key: eFunctionType.Map, name: 'Mapping Function'},\n    {key: eFunctionType.Aggregate, name: 'Aggregate Function'},\n    {key: eFunctionType.Rows, name: 'Row Generating Function'},\n    {key: eFunctionType.Profile, name: 'Profile Function'},\n    {key: eFunctionType.Validate, name: 'Validation Function'},\n    {key: eFunctionType.JoinCondition, name: 'Join Condition'},\n    {key: eFunctionType.Sort, name: 'Sort Function'},\n]\n\n// export enum eOnError {\n//     Abend = <any>'Abend',\n//     Null = <any>'Null',\n//     Ignore = <any>'Ignore'\n// }\n// export const onErrorActions = [\n//     {key: eOnError.Abend, name: 'Abend Datalink'},\n//     {key: eOnError.Null, name: 'Return Null'},\n//     {key: eOnError.Ignore, name: 'Discard the row'},\n// ];\n\n// export enum eOnNull {\n//     Execute = <any>'Execute',\n//     Abend = <any>'Abend',\n//     Null = <any>'Null',\n//     Ignore = <any>'Ignore'\n// }\n\n// export const onNullActions = [\n//     {key: eOnNull.Execute, name: 'Execute Function'},\n//     {key: eOnNull.Abend, name: 'Abend Datalink'},\n//     {key: eOnNull.Null, name: 'Return Null'},\n//     {key: eOnNull.Ignore, name: 'Discard the row'},\n// ];\n\n// export enum eParseErrorAction {\n//     RaiseEvent = <any>'RaiseEvent',\n//     AdvanceToNextLine = <any>'AdvanceToNextLine',\n//     ThrowException = <any>'ThrowException',\n// }\n\n// export const ParseErrorActions = [\n//     {key: eParseErrorAction.ThrowException, name: 'Abend Datalink'},\n//     {key: eParseErrorAction.RaiseEvent, name: 'Reject Record'},\n//     {key: eParseErrorAction.AdvanceToNextLine, name: 'Continue next line'},\n// ];\n\n// export enum eMissingFieldAction {\n//     ParseError = <any>'ParseError',\n//     ReplaceByEmpty = <any>'ReplaceByEmpty',\n//     ReplaceByNull = <any>'ReplaceByNull',\n// };\n\n// export const  MissingFieldActions = [\n//     {key: eMissingFieldAction.ParseError, name: 'Raise parse error'},\n//     {key: eParseErrorAction.RaiseEvent, name: 'Reject Record'},\n//     {key: eParseErrorAction.AdvanceToNextLine, name: 'Continue next line'},\n// ];\n\n// export enum eValueTrimmingOptions {\n//     None = <any>'None',\n//     UnquotedOnly = <any>'UnquotedOnly',\n//     QuotedOnly = <any>'QuotedOnly',\n//     All = <any>'All',\n// };\n\n// export const  ValueTrimmingOptions = [\n//     {key: eValueTrimmingOptions.All, name: 'All'},\n//     {key: eValueTrimmingOptions.None, name: 'None'},\n//     {key: eValueTrimmingOptions.QuotedOnly, name: 'Quoted Fields Only'},\n//     {key: eValueTrimmingOptions.UnquotedOnly, name: 'Unquoted Fields Only'},\n// ];\n\n// export enum eFailAction {\n//     Continue = <any>'Continue',\n//     ContinueNonDependent = <any>'ContinueNonDependent',\n//     Abend = <any>'Abend',\n// }\n\nexport const FailActions = [\n    {key: eFailAction.Abend, name: 'Abend the job'},\n    {key: eFailAction.Continue, name: 'Continue to next datalink'},\n    {key: eFailAction.ContinueNonDependent, name: 'Continue with non-dependent datalinks'},\n];\n\n// export enum eInvalidAction {\n//     Pass= <any>'Pass',\n//     Clean = <any>'Clean',\n//     RejectClean= <any>'RejectClean',\n//     Reject = <any>'Reject',\n//     Discard= <any>'Discard',\n//     Abend= <any>'Abend',\n// }\n\nexport const InvalidActions = [\n    {key: eInvalidAction.Pass, name: 'Pass Record'},\n    {key: eInvalidAction.Clean, name: 'Clean Record'},\n    {key: eInvalidAction.RejectClean, name: 'Reject/Clean Record'},\n    {key: eInvalidAction.Reject, name: 'Reject Record'},\n    {key: eInvalidAction.Discard, name: 'Discard Record'},\n    {key: eInvalidAction.Abend, name: 'Abend Datalink'},\n];\n\n// export enum eFunctionCaching {\n//     NoCache= <any>'NoCache',\n//     EnableCache= <any>'EnableCache',\n//     CallOnce= <any>'CallOnce',\n// }\n\nexport const FunctionCache = [\n    {key: eFunctionCaching.NoCache, name: 'No cache (function called for each row)'},\n    {key: eFunctionCaching.EnableCache, name: 'Enable cache (function called when values change)'},\n    {key: eFunctionCaching.CallOnce, name: 'Call Once (function called for first row only)'},\n]\n\n// export enum eCleanAction {\n//     DefaultValue = <any>'DefaultValue',\n//     Truncate = <any>'Truncate',\n//     Blank = <any>'Blank',\n//     Null = <any>'Null',\n//     OriginalValue = <any>'OriginalValue',\n//     CleanValue = <any>'CleanValue',\n// }\n\nexport const CleanActions = [\n    {key: eCleanAction.DefaultValue, name: 'Use columns default value'},\n    {key: eCleanAction.Truncate, name: 'Truncate (if string) to the maximum allowed length'},\n    {key: eCleanAction.Blank, name: 'Set to blank'},\n    {key: eCleanAction.Null, name: 'Set to null'},\n    {key: eCleanAction.OriginalValue, name: 'Use the original value'},\n    {key: eCleanAction.CleanValue, name: 'Use the specified clean value'},\n];\n\n// export enum eDuplicateStrategy {\n//     Abend = <any>'Abend',\n//     First = <any>'First',\n//     Last = <any>'Last',\n//     All = <any>'All',\n// }\n\n// export const duplicateStrategies = [\n//     {key: eDuplicateStrategy.Abend, name: 'Abend Datalink'},\n//     {key: eDuplicateStrategy.First, name: 'First Match'},\n//     {key: eDuplicateStrategy.Last, name: 'Last Match'},\n//     {key: eDuplicateStrategy.All, name: 'All matches (duplicate rows)'},\n// ];\n\n// export enum eSourceType {\n//     Datalink = <any>'Datalink',\n//     Table = <any>'Table',\n//     Rows = <any>'Rows',\n// }\n\nexport const sourceTypes = [\n    {key: eSourceType.Datalink, name: 'Datalink'},\n    {key: eSourceType.Table, name: 'Table'},\n    {key: eSourceType.Rows, name: 'Static Row Set'},\n];\n\n// export class Table {\n//     public name: string;\n//     public baseTableName: string;\n//     public logicalName: string;\n//     public description: string;\n//     public sourceConnectionName: string;\n\n//     public columns: Array<TableColumn>;\n\n//     public data: Array<Array<any>>;\n// }\n\n// export class TableColumn {\n//     public name: string;\n//     public logicalName: string;\n//     public columnGroup: string;\n//     public description: string;\n//     public dataType: eTypeCode;\n//     public maxLength: number;\n//     public isUnicode: boolean;\n//     public precision: number;\n//     public scale: number;\n//     public allowDbNull: boolean;\n//     public deltaType: eDeltaType;\n//     public defaultValue: string;\n//     public isUnique: boolean;\n//     public isMandatory: boolean;\n//     public isIncrementalUpdate: boolean;\n//     public securityFlag: eSecurityFlag;\n// }\n\n// export class TransformPerformance {\n//     public transformName: string;\n//     public action: string;\n//     public rows: number;\n//     public seconds: number;\n//     public children: TransformPerformance[];\n// }\n\n// export class TransformWriterResult {\n//         public auditKey: number;\n//         public auditType: string;\n//         public referenceKey: number;\n//         public parentAuditKey: number;\n//         public referenceName: string;\n//         public sourceTableKey: number;\n//         public sourceTableName: string;\n//         public targetTableKey: number;\n//         public targetTableName: string;\n\n//         public hubKey: string;\n//         public auditConnectionKey: number;\n\n//         public lastRowTotal: number;\n//         public lastMaxIncrementalValue: any;\n\n//         public rowsTotal: number;\n//         public rowsCreated: number;\n//         public rowsUpdated: number;\n//         public rowsDeleted: number;\n//         public rowsPreserved: number;\n//         public rowsIgnored: number;\n//         public rowsRejected: number;\n//         public rowsFiltered: number;\n//         public rowsSorted: number;\n//         public rowsReadPrimary: number;\n//         public rowsReadReference: number;\n\n//         public readTicks: number;\n//         public writeTicks: number;\n//         public processingTicks: number;\n\n//         public maxIncrementalValue: any;\n//         public maxSurrogateKey: number;\n\n//         public message: string;\n//         public exceptionDetails: string;\n//         public initializeTime: string;\n//         public scheduledTime: string;\n//         public startTime: string;\n//         public endTime: string;\n//         public lastUpdateTime: string;\n//         public triggerMethod: eTriggerMethod;\n//         public triggerInfo: string;\n//         public performanceSummary: TransformPerformance[];\n\n//         public runStatus: eRunStatus;\n\n//         public profileTableName: string;\n//         public rejectTableName: string;\n\n//         public childResults: TransformWriterResult[];\n// }\n\n\nexport class FileProperties {\n    public fileName: string;\n    public lastModified: Date;\n    public length: number;\n    public contentType: string;\n}\n\n// export class ImportOptions {\n//     public connections = eImportAction.Replace;\n//     public tables = eImportAction.Replace;\n//     public fileFormats = eImportAction.Replace;\n//     public datalinks = eImportAction.Replace;\n//     public datajobs = eImportAction.Replace;\n//     public columnValidations = eImportAction.Replace;\n//     public hubVariables = eImportAction.Replace;\n//     public customFunctions = eImportAction.Replace;\n//     public datalinkTests = eImportAction.Replace;\n//     public views = eImportAction.Replace;\n//     public apis = eImportAction.Replace;\n// }\n\n// export class ImportAction {\n//     public objectType: eSharedObjectType;\n//     public action: eImportAction;\n// }\n\n// export class Import {\n//     public hubKey: number;\n//     public hubVariables: ImportObject<DexihHubVariable>[];\n//     public datajobs: ImportObject<DexihDatajob>[];\n//     public datalinks: ImportObject<DexihDatalink>[];\n//     public connections: ImportObject<DexihConnection>[];\n//     public tables: ImportObject<DexihTable>[];\n//     public fileFormats: ImportObject<DexihFileFormat>[];\n//     public columnValidations: ImportObject<DexihColumnValidation>[];\n//     public customFunctions: ImportObject<DexihCustomFunction>[];\n//     public remoteAgentHubs: ImportObject<DexihRemoteAgentHub>[];\n//     public datalinkTests: ImportObject<DexihDatalinkTest>[];\n//     public views: ImportObject<DexihView>[];\n//     public apis: ImportObject<DexihApi>[];\n//     public warnings: string[] = [];\n//     public dashboards: ImportObject<DexihDashboard>[];\n// }\n\n// export class ImportObject<T> {\n//     public item: T;\n//     public importAction: eImportAction;\n// }\n\n// export enum eRunStatus {\n//     Initialised = <any>'Initialised',\n//     Scheduled = <any>'Scheduled',\n//     Started = <any>'Started',\n//     Running = <any>'Running',\n//     RunningErrors = <any>'RunningErrors',\n//     Finished = <any>'Finished',\n//     FinishedErrors = <any>'FinishedErrors',\n//     Abended = <any>'Abended',\n//     Cancelled = <any>'Cancelled',\n//     NotRunning = <any>'NotRunning',\n//     Passed = <any>'Passed',\n//     Failed= <any>'Failed'\n// }\n\nexport const runStatus = [\n    {key: eRunStatus.Initialised, name: 'Initialized'},\n    {key: eRunStatus.Scheduled, name: 'Scheduled'},\n    {key: eRunStatus.Started, name: 'Started'},\n    {key: eRunStatus.Running, name: 'Running'},\n    {key: eRunStatus.RunningErrors, name: 'Running(errors)'},\n    {key: eRunStatus.Finished, name: 'Finished'},\n    {key: eRunStatus.FinishedErrors, name: 'Finished(errors)'},\n    {key: eRunStatus.Abended, name: 'Abended'},\n    {key: eRunStatus.Cancelled, name: 'Cancelled'},\n    {key: eRunStatus.NotRunning, name: 'Not Running'},\n    {key: eRunStatus.Passed, name: 'Test Passed'},\n    {key: eRunStatus.Failed, name: 'Test Failed'},\n];\n\n\n// export enum eTriggerMethod {\n//     NotTriggered = <any>'NotTriggered',\n//     Manual = <any>'Manual',\n//     Schedule = <any>'Schedule',\n//     FileWatcher = <any>'FileWatcher',\n//     External = <any>'External',\n//     Datajob = <any>'Datajob',\n// }\n\n// // Summary:\n// //     Specifies the day of the week.\n// export enum eDayOfWeek {\n//     Sunday = <any>'Sunday',\n//     Monday = <any>'Monday',\n//     Tuesday  = <any>'Tuesday',\n//     Wednesday = <any>'Wednesday',\n//     Thursday  = <any>'Thursday',\n//     Friday = <any>'Friday',\n//     Saturday  = <any>'Saturday'\n// }\n\n// export enum eFlatFilePath {\n//     Incoming = <any>'incoming',\n//     Processed = <any>'processed',\n//     Rejected = <any>'rejected',\n//     Outgoing = <any>'outgoing',\n//     None = <any>'none',\n// }\n\n// export enum eFormatType {\n//     Xml = <any>'Xml',\n//     Json = <any>'Json',\n//     Text = <any>'Text',\n// }\n\nexport const formatTypes  = [\n    {key: eTypeCode.Xml, name: 'Xml'},\n    {key: eTypeCode.Json, name: 'Json'},\n    {key: eTypeCode.Text, name: 'Text'},\n];\n\n// export enum eImportAction {\n//     Replace = <any>'Replace',\n//     New = <any>'New',\n//     Leave = <any>'Leave',\n//     Skip = <any>'Skip',\n//     Delete =  <any>'Delete'\n// }\n\nexport const importActions  = [\n    {key: eImportAction.Replace, name: 'Replace existing'},\n    {key: eImportAction.New, name: 'Create a new version'},\n    {key: eImportAction.Leave, name: 'Leave existing version'},\n    {key: eImportAction.Skip, name: 'Skip item(s)'},\n];\n\n// export class InputColumn {\n//     public datalinkKey = 0;\n//     public datalinkName: string = null;\n//     public name: string = null;\n//     public logicalName: string = null;\n//     public dataType: eTypeCode;\n//     public value: string = null;\n//     public rank = 0;\n\n//     constructor() {\n//         this.dataType = eTypeCode.String;\n//     }\n// }\n\n// // mapping status enum.  Note, order is important.\nexport enum eMappingStatus {\n    MappedToNothing, // indicates a column has been mapped but is not in the target.\n    Mapped, // indicates a column has been mapped from source-target\n    PassThroughToNothing, // indicates a column has been passedThrough but not in the target.\n    PassThroughMap, // indicates a column has been default mapped as part of a passThrough setting.\n    MappedToVirtual, // indicates virtual table target.\n    PassThroughToVirtual,\n    AutoGenerate, // indicates a target column is autoGenerating and does not require a map.\n    Joined, // used in a join\n    Sorted,\n    NotMapped, // indicates a column in the target has not been mapped, and will be defaulted.\n    Error,\n}\n\nexport interface MappingStatusInfo {\n    key: eMappingStatus;\n    name: string;\n    statusClass: string;\n}\n\nexport const lineageMappingStatuses: MappingStatusInfo[] = [\n    // tslint:disable-next-line:max-line-length\n    {key: eMappingStatus.Mapped, name: 'From Mapped', statusClass: 'fa fa-arrow-circle-left text-success'},\n    {key: eMappingStatus.PassThroughToNothing, name: 'From Pass-through to Nothing', statusClass: 'fa fa-arrow-circle-left text-warning'},\n    {key: eMappingStatus.PassThroughMap, name: 'From Pass-through', statusClass: 'fa fa-arrow-circle-o-left text-success'},\n    {key: eMappingStatus.MappedToVirtual, name: 'From Virtual', statusClass: 'fa fa-square text-success'},\n    {key: eMappingStatus.PassThroughToVirtual, name: 'Passed-through to Virtual', statusClass: 'fa fa-square-o text-success'},\n    {key: eMappingStatus.AutoGenerate, name: 'Auto Generated', statusClass: 'fa fa-circle text-success'},\n    {key: eMappingStatus.Joined, name: 'Joined', statusClass: 'fa fa-code-fork text-success'},\n    {key: eMappingStatus.Sorted, name: 'Sorted', statusClass: 'fa fa-sort-alpha-asc text-success'},\n    {key: eMappingStatus.MappedToNothing, name: 'Mapped to Nothing', statusClass: 'fa fa-check-square text-warning'},\n    {key: eMappingStatus.NotMapped, name: 'Not mapped', statusClass: 'fa fa-times-circle text-warning'},\n    {key: eMappingStatus.Error, name: 'Error', statusClass: 'fa fa-exclamation-triangle text-danger'},\n];\n\nexport const impactMappingStatuses: MappingStatusInfo[] = [\n    // tslint:disable-next-line:max-line-length\n    {key: eMappingStatus.Mapped, name: 'Mapped to Target', statusClass: 'fa fa-arrow-circle-right text-success'},\n    {key: eMappingStatus.PassThroughToNothing, name: 'Passed-through to Nothing', statusClass: 'fa fa-arrow-circle-right text-warning'},\n    {key: eMappingStatus.PassThroughMap, name: 'Passed-through to Target', statusClass: 'fa fa-arrow-circle-o-right text-success'},\n    {key: eMappingStatus.MappedToVirtual, name: 'Mapped to Virtual', statusClass: 'fa fa-square text-success'},\n    {key: eMappingStatus.PassThroughToVirtual, name: 'Passed-through to Virtual', statusClass: 'fa fa-square-o text-success'},\n    {key: eMappingStatus.AutoGenerate, name: 'Auto Generated', statusClass: 'fa fa-circle text-success'},\n    {key: eMappingStatus.Joined, name: 'Joined', statusClass: 'fa fa-code-fork text-success'},\n    {key: eMappingStatus.Sorted, name: 'Sorted', statusClass: 'fa fa-sort-alpha-asc text-success'},\n    {key: eMappingStatus.MappedToNothing, name: 'Mapped to Nothing', statusClass: 'fa fa-arrow-circle-o-right text-warning'},\n    {key: eMappingStatus.NotMapped, name: 'Not mapped', statusClass: 'fa fa-times-circle text-warning'},\n    {key: eMappingStatus.Error, name: 'Error', statusClass: 'fa fa-exclamation-triangle text-danger'},\n];\n\nexport class ConnectionTables extends DexihConnection {\n    public dexihTables: DexihTable[];\n}\n\n// export class TransformProperties {\n//     public name: string;\n//     public transformName: string;\n//     public transformType: eTransformType;\n//     public selectQuery: SelectQuery;\n//     public properties: {[key: string]: number};\n//     public primaryProperties: TransformProperties;\n//     public referenceProperties: TransformProperties;\n//     public rows: number;\n//     public seconds: number;\n// }\n\nexport class PreviewResults {\n    public name: string;\n    public columns: Array<any>;\n    public viewConfig: ViewConfig;\n    public data: Array<any>;\n    public transformProperties: TransformProperties;\n    public status: Message;\n}\n\nexport class FlatFilesReady {\n    public hubKey: number;\n    public reference: string;\n    public tables: DexihTable[];\n    public message: Message;\n}\n\nexport class DashboardUrl {\n    public dashboardItemKey: number;\n    public downloadUrl: string;\n}\n\n// export class InputParameter {\n//     public name: string = null;\n//     public value = null;\n// }\n\n// export class LOVItem {\n//     public key;\n//     public name: string;\n//     public description: string;\n// }\n\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\nimport { User } from '../../+auth/auth.models';\nimport { AuthService } from '../../+auth/auth.service';\nimport { HubService } from '../../+hub/hub.service';\n\n@Injectable()\nexport class LayoutGuard implements CanActivate {\n    constructor(private authService: AuthService, private router: Router, private route: ActivatedRoute) { \n        this.authService.initialize();\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            this.authService.isLoggedIn().then(result => {\n                if (!result) {\n                    this.authService.redirectUrl = state.url;\n                    this.router.navigate(['/auth/login']);\n                    resolve(false);\n                } else {\n                    let user: User = result;\n                    resolve(true);\n                }\n            }).catch(reason => {\n                this.authService.redirectUrl = state.url;\n                this.router.navigate(['/auth/login']);\n            });\n        });\n    }\n}\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { ChartSeries } from '../../../shared.models';\n\n@Component({\n    selector: 'chart-series',\n    templateUrl: 'chart-series.component.html'\n})\nexport class ChartSeriesComponent implements OnInit, OnChanges {\n    @Input() series: ChartSeries[];\n    @Input() columns: any[];\n    @Input() minItems: number = 1;\n    @Input() maxItems: number = 5;\n    @Input() allowLineChart = false;\n    @Input() allowAlternateAxis = false;\n\n    @Output() seriesChange = new EventEmitter<ChartSeries[]>();\n\n    constructor() { }\n\n    ngOnInit() { \n        this.ngOnChanges(null);\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if(!this.series) {\n            this.series = [];\n        }\n\n        if (this.series.length < this.minItems) {\n            for (let i = 0; i < this.minItems; i++ ) {\n                this.series.push(new ChartSeries());\n            }\n            this.seriesChange.emit(this.series);\n        }\n    }\n\n    onChanged() {\n        this.seriesChange.emit(this.series);\n    }\n\n    add(index: number) {\n        if (this.series.length < this.maxItems) {\n            this.series.splice(index + 1, 0, new ChartSeries());\n            this.seriesChange.emit(this.series);\n        }\n    }\n\n    remove(index: number) {\n        if (this.series.length > this.minItems) {\n            this.series.splice(index, 1);\n            this.seriesChange.emit(this.series);\n        }\n    }\n}\n","<div *ngIf=\"series.length === 0\" class=\"mb-1 pt-1\">\n    <d-button (click)=\"add(0)\" [autoCompact]=\"false\"\n        iconClass=\"fa fa-plus-square-o\" title=\"Click to add a series item\">Add Series Item\n    </d-button>\n</div>\n\n<div class=\"d-flex flex-wrap pt-1\" *ngFor=\"let seriesItem of series; let i = index\">\n    <div class=\"flex-fill\">\n        <form-select [(ngModel)]=\"seriesItem.column\" (ngModelChange)=\"onChanged($event)\" [labelLeft]=\"'Series ' + (i+1).toString()\"\n            [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n        </form-select>\n    </div>\n    <div class=\"flex-fill pl-1\">\n        <div class=\"flex-fill\">\n            <div class=\"input-group m-0\">\n                <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\" id=\"basic-addon1\">Color</span>\n                  </div>\n                <label class=\"form-control p-0\" style=\"height: '38px'; width: '30px'\" [style.background-color]=\"seriesItem.color\">\n                    <input [(ngModel)]=\"seriesItem.color\" hidden type=\"color\" (ngModelChange)=\"onChanged($event)\">\n                </label>\n                <input class=\"form-control\" style=\"height: '38px'; width: '70px'\"  [(ngModel)]=\"seriesItem.color\" placeholder=\"color\" (ngModelChange)=\"onChanged($event)\">\n            </div>\n        </div>\n    </div>\n    <div class=\"flex-fill pl-1\" *ngIf=\"allowAlternateAxis\" >\n        <form-checkbox label=\"Alternate Axis\" [(ngModel)]=\"seriesItem.alternateAxis\" (ngModelChange)=\"onChanged()\"\n            [border]=\"true\"></form-checkbox>\n    </div>\n    <div class=\"flex-fill pl-1\" *ngIf=\"allowLineChart\" >\n        <form-checkbox label=\"Line Chart\" [(ngModel)]=\"seriesItem.lineChart\" (ngModelChange)=\"onChanged()\"\n            [border]=\"true\"></form-checkbox>\n    </div>\n    <div class=\"input-group-append pl-1\">\n        <div class=\"input-group-text p-0\">\n            <button type=\"button\" (click)=\"add(i)\" class=\"btn btn-sm border-0 rounded-0 bg-transparent\" value=\"Add\">\n                <i class=\"fa fa-plus-square-o\"></i>\n            </button>\n        </div>\n        <div class=\"input-group-text p-0\">\n            <button type=\"button\" (click)=\"remove(i)\" class=\"btn btn-sm border-0 rounded-0 bg-transparent\" value=\"Remove\">\n                <i class=\"fa fa-minus-square-o\"></i>\n            </button>\n        </div>\n    </div>\n</div>","import { Subscription } from 'rxjs';\nimport { DexihHubUser, eSharedAccess, eLoginProvider } from '../shared/shared.models';\n\nexport const logoUrl = 'assets/img/dexih/dex_logo_wide_raw.png';\nexport const logoSmallUrl = 'assets/img/dexih/dexih_small.png';\n\nexport class User {\n        public email: string = null;\n        public userName: string = null;\n        public password: string = null;\n        public rememberMe = false;\n        public firstName: string = null;\n        public lastName: string = null;\n        public terms = false;\n        public subscription = false;\n        public code: string = null;\n        public emailConfirmed = false;\n        public isInvited = false;\n        public inviteQuota = 0;\n        public notifyPrivateMessage = true;\n        public notifySupportMessage = true;\n\n        // used when resetting passwords.\n        public newPassword = '';\n        public confirmPassword = '';\n\n        public isAdmin: boolean;\n\n    constructor(\n        _email?: string,\n        _userName?: string,\n        _password?: string,\n        _rememberMe?: boolean,\n    ) {\n        this.email = _email;\n        this.userName = _userName;\n        this.password = _password;\n        this.rememberMe = _rememberMe;\n    }\n}\n\nexport class UserLoginInfo {\n    public loginProvider: eLoginProvider = null;\n    public providerDisplayName: string = null;\n    public providerKey: string = null;\n}\n\nexport class DexihHubAuth {\n    public hubKey: number;\n    public name: string;\n    public description: string;\n    public encryptionKey: string;\n    public sharedAccess: eSharedAccess = eSharedAccess.Registered;\n    public expiryDate: Date;\n    public timeZone: string;\n\n    public dexihHubUsers: Array<DexihHubUser>;\n\n    public remoteAgentId: string;\n\n    public createDate: Date;\n    public updateDate: Date;\n    public isValid = true;\n\n}\n\nexport class ExternalLoginResult {\n    public provider: string;\n    public email: string;\n    public isSignedIn: boolean;\n    public isLocked: boolean;\n    public isAlreadyRegistered: boolean;\n}\n\nexport class ExternalLogin {\n    public provider: string;\n    public email: string;\n    public firstName: string;\n    public lastName: string;\n    public providerKey: string;\n    public authenticationToken: string;\n}\n\nexport class Parameter {\n    public key: string;\n    public value;\n}\n\nexport class Message {\n    public reference: string;\n    public time: Number;\n\n    constructor(\n        public success: boolean,\n        public message: string,\n        public exceptionDetails: string,\n        public value: any\n    ) {\n        this.time = Date.now();\n    }\n}\n\n// export class ManagedTask {\n//     public reference: string;\n//     public remoteAgentId: string;\n//     public referenceKey: number;\n//     public referenceId: string;\n//     public status: eManagedTaskStatus;\n//     public name: string;\n//     public description: string;\n//     public category: string;\n//     public data: any;\n//     public percentage: number;\n//     public stepName: string;\n//     public isCompleted: boolean;\n//     public lastUpdate: string;\n//     public success: boolean;\n//     public message: string;\n//     public exceptionDetails: string;\n\n//     constructor() {\n//         this.status = eManagedTaskStatus.Created;\n//     }\n// }\n\n// export enum eManagedTaskStatus {\n//     Created = <any>'Created',\n//     Scheduled = <any>'Scheduled',\n//     Queued = <any>'Queued',\n//     Running = <any>'Running',\n//     Cancelled = <any>'Cancelled',\n//     Error = <any>'Error',\n//     Completed = <any>'Completed',\n//     FileWatching = <any>'FileWatching'\n// }\n\n// export class DexihRemoteAgent extends EntityBase {\n//     public remoteAgentKey = 0;\n//     public name: string = null;\n//     public restrictIp: boolean = null;\n//     public ipAddresses: string[] = null;\n//     public remoteAgentId: string = null;\n//     public userId: string = null;\n//     public hashedToken: string = null;\n//     public allowExternalConnect: boolean = null;\n//     public lastLoginIpAddress: string = null;\n//     public lastLoginDateTime: Date = null;\n\n//     public activeAgents: DexihActiveAgent[];\n// }\n\n// export class DexihActiveAgent {\n//     public remoteAgentKey: number;\n//     public user: string;\n//     public name: string;\n//     public isRunning: boolean;\n//     public ipAddress: string;\n//     public instanceId: string;\n//     public isEncrypted: boolean;\n//     public dataPrivacyStatus: eDataPrivacyStatus;\n//     public downloadUrls: DownloadUrl[];\n//     public currentDownloadUrl: DownloadUrl;\n//     public downloadUrlSummary: string;\n\n//     public upgradeAvailable: boolean;\n//     public version: string;\n//     public latestVersion: string;\n//     public latestDownloadUrl: string;\n// }\n\n// export enum eDataPrivacyStatus {\n//     NotAllowed = <any>'NotAllowed',\n//     Proxy = <any>'Proxy',\n//     Lan = <any>'Lan',\n//     Internet = <any>'Internet',\n//     CustomUrl = <any>'CustomUrl',\n// }\n\n// export enum EDownloadUrlType {\n//     Proxy = <any>'Proxy',\n//     Direct = <any>'Direct',\n// }\n\n// export class DownloadUrl {\n//     public url: string;\n//     public downloadUrlType: EDownloadUrlType;\n//     public isEncrypted: boolean;\n//     public testStatus: string;\n//     public testMessage: string;\n// }\n\nexport enum eHubAccess {\n    All, User, ReadOnly, Public\n}\n\nexport enum eFileStatus {\n    Waiting = <any>'Waiting',\n    Uploading = <any>'Uploading',\n    Downloading = <any>'Downloading',\n    Complete = <any>'Complete',\n    Error = <any>'Error',\n    Cancelled = <any>'Cancelled'\n}\n\nexport class FileHandler {\n    public id = Math.random().toString(36).substr(2, 9);\n    public progress: number;\n    public status: eFileStatus;\n    public message: string;\n    public httpSubscription: Subscription;\n    public file: File;\n    public url: string;\n\n    public constructor(file: File, url: string) {\n        this.file = file;\n        this.status = eFileStatus.Waiting;\n        this.progress = 0;\n        this.url = url;\n    }\n\n    public isRunning(): boolean {\n        switch (this.status) {\n            case eFileStatus.Uploading:\n            case eFileStatus.Downloading:\n                return true;\n        }\n\n        return false;\n    }\n\n    public cancel() {\n        if (this.httpSubscription) {\n            this.httpSubscription.unsubscribe();\n        }\n    }\n}\n\nexport class RemoteToken {\n    public user: string;\n    public remoteAgentId: string;\n    public userToken: string;\n}\n\n// export class PromiseWithCancel<T> implements Promise<T> {\n//     then<TResult1 = T, TResult2 = never>(onfulfilled?: (value: T) => TResult1 | PromiseLike<TResult1>, onrejected?:\n//    (reason: any) => TResult2 | PromiseLike<TResult2>): Promise<TResult1 | TResult2> {\n//         return this._promise.then(onfulfilled);\n//     }\n\n//     catch<TResult = never>(onrejected?: (reason: any) => TResult | PromiseLike<TResult>): Promise<T | TResult> {\n//         return this._promise.catch(onrejected);\n//     }\n\n//     [Symbol.toStringTag]: string;\n//     finally(onfinally?: () => void): Promise<T> {\n//         return this._promise.finally(onfinally);\n//     }\n\n//     public constructor(executor: (\n//         resolve: (value?: T | PromiseLike<T>) => void,\n//         reject: (reason?: any) => void) => void, cancel: () => void) {\n\n//         this._promise = new Promise<T>((resolve, reject) => {executor(resolve, reject)});\n//       }\n\n//     private _promise: Promise<T>;\n//     private _cancel?: () => void;\n\n//     onCancel(cancel?: () => void) {\n//         this._cancel = cancel;\n//     }\n\n//     cancel() {\n//         this._cancel();\n//     }\n// }\n\nexport class CancelToken {\n    public cancelMethod: () => void;\n\n    // cancel the operation\n    public cancel() {\n        if (this.cancelMethod) {\n            this.cancelMethod();\n        }\n    }\n}\n\nexport class PromiseWithCancel<T> extends Promise<T> {\n\n    private _cancel: CancelToken;\n\n\n    constructor(executor: (resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void,\n        cancel: CancelToken = new CancelToken()) {\n        super(executor);\n        this._cancel = cancel;\n    }\n\n    public cancel() {\n        if (this._cancel) {\n            this._cancel.cancel();\n        }\n    }\n\n}\n\nexport class WaitMessage {\n    public message: string;\n    public cancelToken: CancelToken;\n}\n\n\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'equalFilter',\n})\nexport class EqualFilterPipe implements PipeTransform {\n\n  transform(items: any[], field: string, value = true): any[] {\n    if (!items) {\n        return [];\n    }\n    return items.filter(it => it[field] === value);\n  }\n}\n\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { HubCache } from '../../hub.models';\nimport { DexihFileFormat, DexihHub, eSharedObjectType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'fileFormats',\n    templateUrl: './fileFormat-index.component.html',\n    styles: []\n})\nexport class FileFormatIndexComponent implements OnInit, OnDestroy {\n    @Input() public hubKey: number;\n\n    private _subscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n\n    hubCache: HubCache;\n\n    fileFormats: Array<DexihFileFormat>;\n    public eSharedObjectType = eSharedObjectType;\n\n    columns = [\n        { name: 'name', title: 'Name', footer: 'description', format: 'Md', tags: 'tags' },\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        // watch for any changes in the validations.\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n\n                this.updateFileFormats();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'File Format Index');\n        }\n\n\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    deleteFileFormats(fileFormats: Array<DexihFileFormat>) {\n        this.hubService.deleteFileFormats(fileFormats);\n    }\n\n    updateFileFormats() {\n        if (this.hubCache && this.hubCache.isLoaded()) {\n            let fileFormats = this.hubCache.hub.dexihFileFormats.filter(c => c.isValid).map(c => {\n                return {\n                    key: c.key,\n                    name: c.name,\n                    description: c.description,\n                    updateDate: c.updateDate,\n                    tags: this.hubCache.getObjectTags(eSharedObjectType.FileFormat, c.key)\n                }\n            });\n            this._tableData.next(fileFormats);\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    editFileFormat(fileFormat: DexihFileFormat) {\n        this.router.navigate(['fileFormat-edit', fileFormat.key], { relativeTo: this.route });\n    }\n\n    export(items: Array<DexihFileFormat>) {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        items.forEach(item => { this.hubCache.cacheAddFileFormat(item.key, hub); });\n\n        let filename = items.length === 1 ? 'FileFormat - ' + items[0].name + '.json' : 'fileFormats.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    watchChanges() {\n        // watch the current validation in case it is changed in another session.\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n            if (hubCacheChange.changeClass === eSharedObjectType.FileFormat ||\n                hubCacheChange.changeClass === eSharedObjectType.TagObjects) {\n                this.updateFileFormats();\n            }\n        });\n    }\n}\n","<div class=\"container\">\n\t<d-widget title=\"File Formats\" iconClass=\"fa fa-lg fa-fw fa-file-text-o\" [showCloseButton]=\"true\"\n\t\t(close)=\"close()\">\n\n\t\t<d-table \n\t\t[enableMultiSelect]=\"true\" \n\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t[columns]=\"columns\" \n\t\t[dataObservable]=\"tableData\"\n\t\t(rowClick)=\"editFileFormat($event)\" \n\t\t[tags]=\"this.hubCache.hub.dexihTags\">\n\t\t\t\n\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t<d-button-new *ngIf=\"hubCache.canWrite\" class=\"mr-1\" [routerLink]=\"['fileFormat-new']\"\n\t\t\t\t\ttitle=\"Create a new file format\"></d-button-new>\n\t\t\t</ng-template>\n\n\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-fileFormat=\"item\">\n\t\t\t\t<actions-fileFormat-button [fileFormat]=\"fileFormat\" class=\"mr-1\"></actions-fileFormat-button>\n\t\t\t</ng-template>\n\n\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t<d-button-save-local class=\"mr-1\" (click)=\"export(items)\"></d-button-save-local>\n\t\t\t\t<d-button-delete *ngIf=\"hubCache.canWrite\" (click)=\"deleteFileFormats(items)\"\n\t\t\t\t\ttitle=\"Delete selected file formats\"></d-button-delete>\n\t\t\t\t<tags-update-button class=\"ml-1\" [objectType]=\"eSharedObjectType.FileFormat\" [objects]=\"items\">\n\t\t\t\t</tags-update-button>\n\t\t\t</ng-template>\n\n\n\t\t</d-table>\n\n\t</d-widget>\n\n\t<dexih-help class=\"m-3\" title=\"File Formats\" path=\"/assets/help/reference/fileFormat.md\"></dexih-help>\n\n</div>","import { Injectable, OnDestroy, OnInit } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription, combineLatest, Subject} from 'rxjs';\nimport { Message, PromiseWithCancel, CancelToken } from '../+auth/auth.models';\nimport { AuthService } from '../+auth/auth.service';\nimport { eLogLevel, LogFactory } from '../../logging';\nimport {\n    FileProperties,\n    HubCache,\n    HubCacheChange,\n    eCacheStatus,\n    PreviewResults,\n    FlatFilesReady,\n    DexihInputParameter\n} from './hub.models';\nimport { RemoteAgentStatus, transformTypes } from './hub.remote.models';\nimport { DexihDatajob, DexihTable, DexihHub, DexihRemoteAgentHub, DexihConnection, DexihDatalink, InputColumn,\n    InputParameter, DexihView, DexihDashboard, DexihApi, SelectQuery, DexihColumnValidation, DexihCustomFunction,\n    DexihDatalinkTransformItem, DexihFileFormat, DexihHubVariable, DexihDatalinkTest, DexihDatalinkStep, TransformWriterResult,\n    TransformProperties, Import, eImportAction, eRunStatus, eDatalinkType, eDeltaType, eConnectionPurpose, eFlatFilePath,\n    ApiData, DownloadObject, eDownloadFormat, DexihActiveAgent, ImportObject, ePermission, eTypeCode, eDataObjectType,\n    eSharedObjectType, RemoteLibraries, ConnectionReference, TransformReference,\n    FunctionReference, eFunctionType, ClientMessage, eClientCommand, HubUser, DexihListOfValues, ManagedTask,\n    eLOVObjectType, ListOfValuesItem, DexihTag, DexihTagObject, eUpdateStrategy } from '../shared/shared.models';\nimport { filter, take, first } from 'rxjs/operators';\n\n@Injectable()\nexport class HubService implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n    private _webSocketSubscription: Subscription;\n\n    private _hubKey = 0;\n    private _hubCache = new BehaviorSubject<HubCache>(new HubCache(eCacheStatus.NoHub, null));\n    private _hubMessages = new BehaviorSubject<Array<Message>>([]);\n\n    // updates whenever the local hub cache changes\n    private _hubCacheChange = new Subject<HubCacheChange>();\n\n    // updates whenever a new transformWriter result is updated\n    private _transformWriterResultChange = new Subject<TransformWriterResult>();\n\n    // updates whenever an api is started/stopped\n    private _apiStatusChange = new Subject<DexihApi>();\n\n    private _remoteLibraries = new BehaviorSubject<RemoteLibraries>(null);\n\n    // updates whenever a bulk file upload is completed.\n    private _flatFiles = new Subject<FlatFilesReady>();\n\n    // private _activeAgents: DexihActiveAgent[];\n    private _remoteAgent = new BehaviorSubject<DexihActiveAgent>(null);\n    private isResettingRemoteAgent = false;\n\n    public newDatajob: DexihDatajob;\n    public newTable: DexihTable;\n\n    // used to track if the hub is currently refreshing to avoid multiple calls.\n    private _refreshHubRunning = false;\n\n    private logger = new LogFactory('hub.service');\n\n    constructor(\n        private authService: AuthService\n    ) {\n        this.logger.LogC(() => ` Initialized.`, eLogLevel.Information);\n\n        // listen to any message coming from the server.\n        this._webSocketSubscription = this.authService.getWebSocketObservable().subscribe(message => {\n            if (message) {\n                this.processWebSocketMessage(message);\n            }\n        });\n\n\n        this._subscription = combineLatest(\n            authService.getGlobalCacheObservable(),\n            this.authService.getHubsObservable(),\n            this.getHubCacheObservable(),\n            this.authService.getRemoteAgentsObservable()\n        ).subscribe(result => {\n            let globalCache = result[0];\n            let hubs = result[1];\n            let hubCache = result[2];\n\n            if (hubCache && hubCache.hub && globalCache) {\n\n                // if remote libraries are not loaded (from remoteAgent) then use the default.\n                if (!this._remoteLibraries.value) {\n                    let remoteLibraries = new RemoteLibraries();\n                    if (globalCache && globalCache.defaultRemoteLibraries) {\n                        remoteLibraries.connections = globalCache.defaultRemoteLibraries.connections;\n                        remoteLibraries.transforms = globalCache.defaultRemoteLibraries.transforms;\n                        remoteLibraries.functions = globalCache.defaultRemoteLibraries.functions;\n                        this._remoteLibraries.next(remoteLibraries);\n                    }\n                }\n\n                // // if the hub is not available, reset.\n                // if (hubs) {\n                //     if (hubCache && hubCache.hub) {\n                //         let hubFound = hubs.find(h => h.hubKey === hubCache.hub.hubKey);\n                //         if (!hubFound) {\n                //             this.resetHubCache();\n                //         }\n                //     }\n                // } else {\n                //     this.resetHubCache();\n                // }\n\n                this.resetRemoteAgent(hubCache);\n            }\n        });\n    }\n\n    ngOnInit() {\n\n    }\n\n    ngOnDestroy() {\n        this.logger.LogC(() => `OnDestroy.`, eLogLevel.Debug);\n\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._webSocketSubscription) { this._webSocketSubscription.unsubscribe(); }\n        if (this._remoteAgent) { this._remoteAgent.unsubscribe(); }\n        if (this._hubCache) { this._hubCache.unsubscribe(); }\n    }\n\n    public createHub(key: number, name: string): DexihHub {\n        let hub = new DexihHub();\n        hub.hubKey = key;\n        hub.name = name;\n\n        return hub;\n    }\n\n    public isHubCacheLoaded(): boolean {\n        return this.getHubCache().status === eCacheStatus.Loaded;\n    }\n\n    getHubUrl(): string {\n        return '/hub/' + this._hubKey;\n    }\n\n    // gets the hub cache\n    getHubCacheObservable(filterLoaded = false): Observable<HubCache> {\n        let observable = this._hubCache.asObservable();\n\n        if (filterLoaded) {\n            observable = observable.pipe(filter(c => c !== null && c.isLoaded() === true) );\n        }\n\n        return observable;\n    }\n\n    getHubCachePromise(): Promise<HubCache> {\n        return this._hubCache.asObservable().pipe(first()).toPromise();\n    }\n\n    // gets the hub cache\n    getHubCache(): HubCache {\n        return this._hubCache.value;\n    }\n\n    // hubCacheChange detects specific changes to objects and is used to monitor object changes from other sessions when editing forms.\n    getHubCacheChangeObservable(): Observable<HubCacheChange> {\n        return this._hubCacheChange.asObservable();\n    }\n\n    getTransformWriterResultChangeObservable(): Observable<TransformWriterResult> {\n        return this._transformWriterResultChange.asObservable();\n    }\n\n    geApiStatusChangeObservable(): Observable<DexihApi> {\n        return this._apiStatusChange.asObservable();\n    }\n\n    getFlatFilesObservable(): Observable<FlatFilesReady> {\n        return this._flatFiles.asObservable();\n    }\n\n    getHubMessagesObservable(): Observable<Array<Message>> {\n        return this._hubMessages.asObservable();\n    }\n\n    getHubMessages(): Array<Message> {\n        return this._hubMessages.value;\n    }\n\n    addHubMessage(message: any, log = false, context = '') {\n        let converted = message;\n        if (message.stack) {\n            converted = new Message(false, 'Client Error: ' + message.message, message.stack, '');\n        } else {\n            converted = new Message(message.success, context + ': ' + message.message, message.exceptionDetails, message.value);\n        }\n        this.authService.addUpdateNotification(converted, log);\n        let messages = this.getHubMessages();\n        messages.push(converted);\n        this._hubMessages.next(messages);\n    }\n\n    addHubErrorMessage(message: string) {\n        let newMessage = new Message(false, message, null, null);\n        this.addHubMessage(newMessage);\n    }\n\n    addHubClientErrorMessage(error: Error, context: string) {\n        let message = context + '.  The following error occurred on the client: ' + error.message;\n        let newMessage = new Message(false, message, error.stack, null);\n        this.addHubMessage(newMessage, true);\n\n    }\n\n    addHubSuccessMessage(message: string) {\n        let newMessage = new Message(true, message, null, null);\n        this.addHubMessage(newMessage);\n    }\n\n\n    // update the hubKey and refresh the cache.\n    async updateHub(hubKey: number, name: string ): Promise<void> {\n        this.logger.LogC(() => `updateHub, hubKey: ${hubKey}, name: ${name}.`, eLogLevel.Debug);\n\n        this._hubMessages.next([]);\n\n        if (hubKey === null || hubKey === 0) {\n            let hubCache = new HubCache(eCacheStatus.NoHub, this.createHub(0, name));\n            this._hubKey = 0;\n            this._hubCache.next(hubCache);\n        } else if (!this._hubCache.getValue().hub || this._hubCache.getValue().hub.hubKey !== hubKey) {\n            await this.refreshHubCache(hubKey, name);\n        }\n    }\n\n    // refresh the hubCache.\n    async refreshHubCache(hubKey: number, name: string): Promise<void> {\n        if (!this._refreshHubRunning) {\n            this._refreshHubRunning = true;\n\n            this.logger.LogC(() => `refreshHubCache, hubKey: ${hubKey}, name: ${name}.`, eLogLevel.Debug);\n\n            this._hubKey = hubKey;\n            this._hubCache.next(new HubCache(eCacheStatus.Loading, this.createHub(hubKey, name)));\n\n            try {\n                let result = await this.hubPost<{permission: ePermission, hub: DexihHub}>('/api/Hub/GetHubCache', {}, 'Loading the hub cache...');\n                let hub: DexihHub = result.hub;\n                let permission = result.permission;\n\n                this.logger.LogC(() => `refreshHubCache, hub loaded ${hub.name}.`, eLogLevel.Debug);\n\n                // update the status for datalink and datajobs.  These are use to monitor execution status.\n                hub.dexihDatalinks.forEach(datalink => {\n                    datalink['currentStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                    datalink['previousStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                });\n\n                hub.dexihDatajobs.forEach(datajob => {\n                    datajob['currentStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                    datajob['previousStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                });\n\n                hub.dexihDatalinkTests.forEach(datalinkTest => {\n                    datalinkTest['currentStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                    datalinkTest['previousStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                });\n\n                hub.dexihTables.forEach(table => {\n                    table['currentStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                    table['previousStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                });\n\n                hub.dexihApis.forEach(api => {\n                    api['currentStatus'] = new BehaviorSubject<ApiData>(null);\n                });\n\n                let hubCache: HubCache = new HubCache(eCacheStatus.Loaded, hub);\n                hubCache.hubPermission = permission;\n                this.resetRemoteAgent(hubCache);\n                this._hubCache.next(hubCache);\n\n                this._refreshHubRunning = false;\n            } catch(reason) {\n                this.logger.LogC(() => `refreshHubCache, hub load error: ${reason.message}.`, eLogLevel.Error);\n                this._hubCache.next(new HubCache(eCacheStatus.Error, null));\n                this.addHubMessage(reason);\n\n                this._refreshHubRunning = false;\n            }\n        }\n    }\n\n    resetHubCache(): void {\n        this._hubKey = 0;\n        this._hubCache.next(new HubCache(eCacheStatus.NoHub, null));\n    }\n\n    // set current remoteAgent\n    getRemoteAgentObservable(filterActive = false): Observable<DexihActiveAgent> {\n        let observable = this._remoteAgent.asObservable();\n        if (filterActive) {\n            observable = observable.pipe(filter(c => c !== null && c.isRunning) );\n        }\n\n        return observable;\n    }\n\n    getRemoteAgentCurrent(): DexihActiveAgent {\n        return this._remoteAgent.value;\n    }\n\n    getRemoteLibrariesObservable(): Observable<RemoteLibraries> {\n        return this._remoteLibraries.asObservable();\n    }\n\n    getRemoteLibrariesPromise(): Promise<RemoteLibraries> {\n        return this._remoteLibraries.asObservable().pipe(filter(c => c !== null), take(1)).toPromise();\n    }\n\n    // sets the remote agent to the appropriate default agent when a status changes.\n    async resetRemoteAgent(hubCache: HubCache) {\n        if (this.isResettingRemoteAgent) { return; }\n\n        try {\n            if (!hubCache || !hubCache.hub || !hubCache.hub.dexihRemoteAgentHubs) {\n                this.setNoRemoteAgent(hubCache);\n                return;\n            }\n\n            this.isResettingRemoteAgent = true;\n\n            let activeAgent = this._remoteAgent.value;\n\n            let remoteAgents = await this.authService.getRemoteAgentsPromise();\n\n            if (!remoteAgents) {\n                this.setNoRemoteAgent(hubCache);\n                return;\n            }\n\n            // check if currently selected agent is still valid for this hub.\n            if (activeAgent) {\n                if (hubCache.hub.dexihRemoteAgentHubs\n                    .find(c => c.isAuthorized && c.isValid && c.remoteAgentKey === activeAgent.remoteAgentKey)) {\n                    let remoteAgent = remoteAgents.find(c => c.remoteAgentKey === activeAgent.remoteAgentKey);\n                    if (remoteAgent && remoteAgent['activeAgents'] &&\n                        remoteAgent['activeAgents'].find(c => c.instanceId === activeAgent.instanceId)) {\n                        return;\n                    }\n                }\n            }\n\n            let defaultAgents = hubCache.hub.dexihRemoteAgentHubs.filter(c => c.isDefault && c.isAuthorized && c.isValid);\n            for (let i = 0; i < defaultAgents.length; i++) {\n                let remoteAgent = remoteAgents.find(c => c.remoteAgentKey === defaultAgents[i].remoteAgentKey);\n                if (remoteAgent && remoteAgent['activeAgents'] && remoteAgent['activeAgents'].length > 0) {\n                    this._remoteAgent.next(remoteAgent['activeAgents'][0]);\n                    await this.getRemoteAgentStatus(hubCache);\n                    return;\n                }\n            }\n            let otherAgents = hubCache.hub.dexihRemoteAgentHubs.filter(c => !c.isDefault && c.isAuthorized && c.isValid);\n            for (let i = 0; i < otherAgents.length; i++) {\n                let remoteAgent = remoteAgents.find(c => c.remoteAgentKey === otherAgents[i].remoteAgentKey);\n                if (remoteAgent && remoteAgent['activeAgents'] && remoteAgent['activeAgents'].length > 0) {\n                    this._remoteAgent.next(remoteAgent['activeAgents'][0]);\n                    await this.getRemoteAgentStatus(hubCache);\n                    return;\n                }\n            }\n\n            this.setNoRemoteAgent(hubCache);\n        } catch (reason) {\n            this.addHubMessage(reason, true, 'Resetting remote agent' );\n        } finally {\n            this.isResettingRemoteAgent = false;\n        }\n    }\n\n    setCurrentRemoteAgent(activeAgent: DexihActiveAgent) {\n        if (activeAgent) {\n            let remoteAgentHubs = this._hubCache.value.hub.dexihRemoteAgentHubs;\n            let authorized = remoteAgentHubs.findIndex(c => c.remoteAgentKey === activeAgent.remoteAgentKey && c.isAuthorized);\n            if (authorized < 0) {\n                this.addHubErrorMessage('Can not select the remote agent as it is not authorized.')\n            } else {\n                this._remoteAgent.next(activeAgent);\n            }\n        }\n    }\n\n    setNoRemoteAgent(hubCache: HubCache) {\n        this._remoteAgent.next(null);\n        let hub = hubCache.hub;\n\n        if (!hub) { return; }\n\n        hub.dexihApis.forEach(api => {\n            api['currentStatus'].next(null);\n        });\n\n        // merge the datalink/datajob status into the cached objects.\n        hub.dexihDatalinks.forEach(datalink => {\n            datalink['currentStatus'].next(null);\n            datalink['previousStatus'].next(null);\n        });\n\n        hub.dexihTables.forEach(table => {\n            table['currentStatus'].next(null);\n            table['previousStatus'].next(null);\n        });\n\n        hub.dexihDatajobs.forEach(datajob => {\n            datajob['currentStatus'].next(null);\n            datajob['previousStatus'].next(null);\n        });\n\n        hub.dexihDatalinkTests.forEach(test => {\n            test['currentStatus'].next(null);\n            test['previousStatus'].next(null);\n        });\n    }\n\n    // gets the current remote agent\n    getCurrentRemoteAgentId(required = true): string {\n        let agent = this._remoteAgent.getValue();\n        if (!agent) {\n            if (required) {\n                let message = 'The operation can not be completed, as there is no remote agent selected.';\n                this.addHubErrorMessage(message)\n                throw(message);\n            } else {\n                return '';\n            }\n        } else {\n            return agent.instanceId;\n        }\n    }\n\n    public GetConnectionReference(connection: DexihConnection): Promise<ConnectionReference> {\n        return new Promise<ConnectionReference>((resolve, reject) => {\n            this.getRemoteLibrariesPromise().then(remoteLibraries => {\n                if (connection) {\n                    let ref = remoteLibraries.connections.find(c =>\n                        c.connectionAssemblyName === connection.connectionAssemblyName\n                        && c.connectionClassName === connection.connectionClassName);\n\n                    resolve(ref);\n\n                } else {\n                    resolve(null);\n                }\n            }).catch(reason => reject(reason));\n        });\n    }\n\n    // transforms that can be added/removed within a datalink\n    public GetUserConfigTransformReference(): Promise<TransformReference[]> {\n        return new Promise<TransformReference[]>((resolve, reject) => {\n            this.getRemoteLibrariesPromise().then(remoteLibraries => {\n                let userConfig = transformTypes.filter(c => c.allowUserConfig);\n                resolve(remoteLibraries.transforms.filter(c => userConfig.findIndex(u => u.key === c.transformType ) >= 0 ));\n            }).catch(reason => reject(reason));\n        });\n    }\n\n    public GetFunctionReference(item: DexihDatalinkTransformItem): Promise<FunctionReference> {\n        return new Promise<FunctionReference>((resolve, reject) => {\n            this.getRemoteLibrariesPromise().then(remoteLibraries => {\n                if (item) {\n                    let ref = remoteLibraries.functions.find(c =>\n                        c.functionAssemblyName === item.functionAssemblyName\n                        && c.functionClassName === item.functionClassName\n                        && c.functionMethodName === item.functionMethodName);\n\n                    resolve(ref);\n\n                } else {\n                    resolve(null);\n                }\n            }).catch(reason => reject(reason));\n        });\n    }\n\n    public GetFunctionsByType(functionType: eFunctionType): Promise<FunctionReference[]> {\n        return new Promise<FunctionReference[]>((resolve, reject) => {\n            this.getRemoteLibrariesPromise().then(remoteLibraries => {\n                resolve(remoteLibraries.functions.filter(c => c.functionType === functionType));\n            }).catch(reason => reject(reason));\n        });\n    }\n\n    private processWebSocketMessage(data: ClientMessage) {\n            this.logger.LogC(() => `processWebSocketMessage, method: ${data.command}, value: ${data.value}.`, eLogLevel.Debug);\n\n            switch (data.command) {\n                case eClientCommand.Connect:\n                    let cache = this.getHubCache();\n\n                    // if there is an existing cache, and there is a reconnect, then reload it.\n                    // otherwise, it will be loaded by the hubComponent.\n                    if (cache && cache.status === eCacheStatus.Loaded) {\n                        this.refreshHubCache(cache.hub.hubKey, cache.hub.name);\n                        // this.resetRemoteAgent(this._hubCache.value);\n                    }\n                    break;\n                // case 'remoteAgent-update':\n                // case 'remoteAgent-delete':\n                // case 'remoteAgent-deleteKey':\n                // case 'disconnect': {\n                //     this.resetRemoteAgent(this._hubCache.value);\n                //     break;\n                // }\n                case eClientCommand.HubChange: {\n                    let hubChange: Import = data.value;\n                    this.updateHubChange(hubChange);\n                    break;\n                }\n                case eClientCommand.HubError: {\n                    let message: Message = data.value;\n                    this.addHubMessage(message);\n                    break;\n                }\n                case eClientCommand.DatalinkProgress : {\n                    let task: ManagedTask = data.value;\n                    this.addDatalinkProgress(task);\n                }\n                break;\n                case eClientCommand.DatalinkStatus : {\n                    let task: ManagedTask = data.value;\n                    this.addDatalinkProgress(task);\n                }\n                break;\n                case eClientCommand.DatajobProgress : {\n                    let task: ManagedTask = data.value;\n                    this.addDatajobProgress(task);\n                }\n                break;\n                case eClientCommand.DatajobProgress : {\n                    let task: ManagedTask = data.value;\n                    this.addDatajobProgress(task);\n                }\n                break;\n                case eClientCommand.DatalinkTestProgress : {\n                    let task: ManagedTask = data.value;\n                    this.addDatalinkTestProgress(task);\n                }\n                break;\n                case eClientCommand.ApiStatus: {\n                    let apiData: ApiData = data.value;\n                    this.addApiStatus(apiData);\n                }\n                break;\n                case eClientCommand.FlatFilesReady:\n                    let flatFiles: FlatFilesReady = data.value;\n                    this._flatFiles.next(flatFiles);\n\n            }\n            this.logger.LogC(() => `processWebSocketMessage completed, method: ${data.command}.`, eLogLevel.Debug);\n    }\n\n    public updateHubChange(hubChange: Import) {\n        if (!hubChange) { return; }\n\n        let hubCache = this.getHubCache();\n\n        this.mergeChange(hubChange.hubVariables, hubCache.hub.dexihHubVariables, 'key', eSharedObjectType.HubVariable);\n        this.mergeChange(hubChange.columnValidations, hubCache.hub.dexihColumnValidations, 'key',\n            eSharedObjectType.ColumnValidation);\n        this.mergeChange(hubChange.connections, hubCache.hub.dexihConnections, 'key', eSharedObjectType.Connection);\n        this.mergeChange(hubChange.datajobs, hubCache.hub.dexihDatajobs, 'key', eSharedObjectType.Datajob);\n        this.mergeChange(hubChange.datalinks, hubCache.hub.dexihDatalinks, 'key', eSharedObjectType.Datalink);\n        this.mergeChange(hubChange.fileFormats, hubCache.hub.dexihFileFormats, 'key', eSharedObjectType.FileFormat);\n        this.mergeChange(hubChange.customFunctions, hubCache.hub.dexihCustomFunctions, 'key',\n            eSharedObjectType.CustomFunction);\n        this.mergeChange(hubChange.remoteAgentHubs, hubCache.hub.dexihRemoteAgentHubs, 'key', eSharedObjectType.RemoteAgent);\n        this.mergeChange(hubChange.datalinkTests, hubCache.hub.dexihDatalinkTests, 'key', eSharedObjectType.DatalinkTest);\n        this.mergeChange(hubChange.views, hubCache.hub.dexihViews, 'key', eSharedObjectType.View);\n        this.mergeChange(hubChange.apis, hubCache.hub.dexihApis, 'key', eSharedObjectType.Api);\n        this.mergeChange(hubChange.tables, hubCache.hub.dexihTables, 'key', eSharedObjectType.Table);\n        this.mergeChange(hubChange.dashboards, hubCache.hub.dexihDashboards, 'key', eSharedObjectType.Dashboard);\n        this.mergeChange(hubChange.listOfValues, hubCache.hub.dexihListOfValues, 'key', eSharedObjectType.ListOfValues);\n        this.mergeChange(hubChange.tags, hubCache.hub.dexihTags, 'key', eSharedObjectType.Tags);\n\n        if (hubChange.tagObjects && hubChange.tagObjects.length > 0) {\n            this.mergeChangeTagObjects(hubChange.tagObjects, hubCache.hub.dexihTagObjects);\n        }\n\n        if (hubChange.remoteAgentHubs && hubChange.remoteAgentHubs.length > 0) {\n            this.resetRemoteAgent(hubCache);\n        }\n    }\n\n    private mergeChange(source: ImportObject<any>[], target: any[], keyField: string, changeClass: eSharedObjectType) {\n        if (source && source.length > 0) {\n            source.forEach(item => {\n                let current = target.find(c => c[keyField] === item.item[keyField]);\n\n                if (current && current.updateDate === item.item.updateDate) {\n                    return;\n                }\n\n                // if the change is a datalink or datajob, preserve the current/previous status.\n                if (changeClass === eSharedObjectType.Datalink || changeClass === eSharedObjectType.Datajob ||\n                    changeClass === eSharedObjectType.Table || changeClass === eSharedObjectType.DatalinkTest) {\n                    if (current) {\n                        item.item['currentStatus'] = current['currentStatus'];\n                        item.item['previousStatus'] = current['previousStatus'];\n                    } else {\n                        item.item['currentStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                        item.item['previousStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                    }\n                }\n\n                if ( changeClass === eSharedObjectType.Api) {\n                    if (current) {\n                        item.item['currentStatus'] = current['currentStatus'];\n                        item.item['previousStatus'] = current['previousStatus'];\n                    } else {\n                        item.item['currentStatus'] = new BehaviorSubject<ApiData>(null);\n                        item.item['previousStatus'] = new BehaviorSubject<ApiData>(null);\n                    }\n                }\n\n                // if the change is a connection, preserve the existing tables.\n                if (changeClass === eSharedObjectType.Connection && current) {\n                    item.item.dexihTables = current.dexihTables;\n                }\n\n                switch (item.importAction) {\n                    case eImportAction.New:\n                    case eImportAction.Replace:\n                        if (current) {\n                            Object.assign(current, item.item);\n                        } else {\n                            current = item.item;\n                            target.push(item.item);\n                        }\n                        break;\n                    case eImportAction.Delete:\n                        if (current) {\n                            let index = target.findIndex(c => c[keyField] === item.item[keyField]);\n                            target.splice(index, 1);\n                        }\n                }\n\n                this._hubCacheChange.next(new HubCacheChange(changeClass, item.importAction, current));\n            });\n        }\n    }\n\n    private mergeChangeTagObjects(source: ImportObject<DexihTagObject>[], target: DexihTagObject[]) {\n        if (source && source.length > 0) {\n            source.forEach(item => {\n                let current = target\n                    .find(c => c.tagKey === item.item.tagKey\n                        && c.objectKey === item.item.objectKey && c.objectType === item.item.objectType);\n\n                if (current && current.updateDate === item.item.updateDate) {\n                    return;\n                }\n\n                switch (item.importAction) {\n                    case eImportAction.New:\n                    case eImportAction.Replace:\n                        if (current) {\n                            Object.assign(current, item.item);\n                        } else {\n                            current = item.item;\n                            target.push(item.item);\n                        }\n                        break;\n                    case eImportAction.Delete:\n                        if (current) {\n                            let index = target\n                            .findIndex(c => c.tagKey === item.item.tagKey\n                                && c.objectKey === item.item.objectKey && c.objectType === item.item.objectType);\n                            target.splice(index, 1);\n                        }\n                }\n\n                this._hubCacheChange.next(new HubCacheChange(eSharedObjectType.TagObjects, item.importAction, current));\n            });\n        }\n    }\n\n    private addApiStatus(apiData: ApiData) {\n        const api = this._hubCache.value.hub.dexihApis.find(c => c.key === apiData.apiKey);\n        if (api) {\n            api['currentStatus'].next(apiData);\n            this._apiStatusChange.next(api);\n        }\n    }\n\n        // updates the datalink progress observables.\n    private addDatalinkProgress(task: ManagedTask) {\n        if (!this.isHubCacheLoaded()) { return; }\n        let writerResult: TransformWriterResult = task.data;\n        if (!writerResult) {return; }\n        const datalink = this._hubCache.value.hub.dexihDatalinks.find(c => c.key === writerResult.referenceKey);\n        if (datalink) {\n            if (writerResult.runStatus === eRunStatus.Abended ||\n                writerResult.runStatus === eRunStatus.Finished ||\n                writerResult.runStatus === eRunStatus.FinishedErrors ) {\n                    datalink['previousStatus'].next(writerResult);\n                    datalink['currentStatus'].next(null);\n            } else {\n                datalink['currentStatus'].next(writerResult);\n            }\n\n            if (writerResult.targetTableKey > 0) {\n                this.addTableProgress(writerResult);\n            }\n\n            if (writerResult.childResults) {\n                writerResult.childResults.forEach(c => {\n                    this.addTableProgress(c);\n                });\n            }\n\n            this._transformWriterResultChange.next(writerResult);\n        }\n    }\n\n    private addDatalinkTestProgress(task: ManagedTask) {\n        let writerResult: TransformWriterResult = task.data;\n        if (!writerResult) {return; }\n        const datalinkTest = this._hubCache.value.hub.dexihDatalinkTests.find(c => c.key === writerResult.referenceKey);\n        if (datalinkTest) {\n            if (writerResult.runStatus === eRunStatus.Abended ||\n                writerResult.runStatus === eRunStatus.Finished ||\n                writerResult.runStatus === eRunStatus.FinishedErrors ) {\n                    datalinkTest['previousStatus'].next(writerResult);\n                    datalinkTest['currentStatus'].next(null);\n            } else {\n                datalinkTest['currentStatus'].next(writerResult);\n            }\n            this._transformWriterResultChange.next(writerResult);\n        }\n    }\n\n    private addTableProgress(writerResult: TransformWriterResult) {\n        if (!writerResult) {return; }\n        const table = this._hubCache.value.getTable(writerResult.targetTableKey);\n        if (table) {\n            if (writerResult.runStatus === eRunStatus.Abended ||\n                writerResult.runStatus === eRunStatus.Finished ||\n                writerResult.runStatus === eRunStatus.FinishedErrors ) {\n                    table['previousStatus'].next(writerResult);\n                    table['currentStatus'].next(null);\n            } else {\n                table['currentStatus'].next(writerResult);\n            }\n            this._transformWriterResultChange.next(writerResult);\n\n            if (writerResult.childResults) {\n                writerResult.childResults.forEach(c => {\n                    this.addTableProgress(c);\n                });\n            }\n        }\n    }\n\n      // updates the datalink progress observables.\n    private addDatajobProgress(task: ManagedTask) {\n        if (!this.isHubCacheLoaded()) { return; }\n        let writerResult: TransformWriterResult = task.data;\n        if (!writerResult) {return; }\n        const datajob = this._hubCache.value.hub.dexihDatajobs.find(c => c.key === writerResult.referenceKey);\n        if (datajob) {\n            if (writerResult.runStatus === eRunStatus.Abended ||\n                writerResult.runStatus === eRunStatus.Cancelled ||\n                writerResult.runStatus === eRunStatus.Finished ||\n                writerResult.runStatus === eRunStatus.FinishedErrors ) {\n                    let currentStatus: TransformWriterResult = datajob['currentStatus'].value;\n                    if (currentStatus !== null) {\n                        if (currentStatus.auditKey === writerResult.auditKey) {\n                            datajob['currentStatus'].next(null);\n                        }\n                    }\n                    datajob['previousStatus'].next(writerResult);\n                } else {\n                datajob['currentStatus'].next(writerResult);\n            }\n            this._transformWriterResultChange.next(writerResult);\n        }\n    }\n\n    public hubPostConfirm<T>(url: string, data: any, waitMessage: string, confirmMessage: string) {\n        data.hubKey = this._hubKey;\n        return new Promise<T>((resolve, reject) => {\n            this.authService.postConfirm<T>(url, data, waitMessage, confirmMessage).then(result => {\n                resolve(result);\n            }).catch(reason => {\n                // reason = null is for cancel.\n                if (reason == null || typeof reason === undefined) {\n                    resolve(null);\n                    return;\n                }\n\n                this.logger.LogMessage(reason);\n                // this.addHubMessage(reason);\n                reject(reason);\n            });\n        });\n    }\n\n    public hubPost<T>(url: string, data: any, waitMessage: string): Promise<T> {\n        data.hubKey = this._hubKey;\n        return new Promise<T>((resolve, reject) => {\n            this.authService.post<T>(url, data, waitMessage).then(result => {\n                resolve(result);\n            }).catch(reason => {\n                if (reason) { this.logger.LogMessage(reason); }\n               // this.addHubMessage(reason);\n                reject(reason);\n            });\n        });\n    }\n\n    public hubPostRemote<T>(url: string, data: any, waitMessage: string, cancelToken: CancelToken): PromiseWithCancel<T> {\n        data.hubKey = this._hubKey;\n        return new PromiseWithCancel<T>((resolve, reject) => {\n            this.authService.postRemote<T>(url, data, this.getRemoteAgentCurrent(), waitMessage, cancelToken).then(result => {\n                resolve(result);\n            }).catch(reason => {\n                if (reason) { this.logger.LogMessage(reason); }\n                // this.addHubMessage(reason);\n                reject(reason);\n            });\n        });\n    }\n\n    public hubPostRemoteConfirm<T>(url: string, data: any, waitMessage: string,\n        confirmMessage: string, cancelToken: CancelToken): PromiseWithCancel<T> {\n        data.hubKey = this._hubKey;\n        return new PromiseWithCancel<T>((resolve, reject) => {\n            this.authService.confirmDialog('Please confirm...', confirmMessage).then(confirm => {\n                if (confirm) {\n                    resolve(this.hubPostRemote<T>(url, data, waitMessage, cancelToken));\n                } else {\n                    reject();\n                }\n            }).catch(() => reject() );\n        });\n    }\n\n    public getRemoteResponse<T>(key: string, cancelToken: CancelToken, command: 'upload' | 'download' | 'setRaw' = 'download',\n        extra = ''): Promise<T> {\n        let remoteAgent = this.getRemoteAgentCurrent();\n        return this.authService.getRemoteData<T>(remoteAgent, key, cancelToken, command, extra);\n    }\n\n     deleteRemoteAgent(remoteAgent: DexihRemoteAgentHub): Promise<boolean> {\n         return this.hubPostConfirm<boolean>('/api/Hub/DeleteRemoteAgent', {\n            remoteAgentHubKey:  remoteAgent.remoteAgentHubKey,\n        }, 'Deleting the hub remote agent...',\n        'This action will delete the selected ' +\n        ' remote agent from this hub.  <p></p>Are you sure?'\n        );\n    }\n\n    saveRemoteAgent(remoteAgentHub: DexihRemoteAgentHub): Promise<boolean> {\n        return this.hubPost('/api/Hub/SaveRemoteAgent', {\n            hubKey: this._hubKey,\n            value: remoteAgentHub\n        }, 'Saving the hub remote agent...')\n    }\n\n    // updates all the information on the remoteAgent.\n    private getRemoteAgentStatus(hubCache: HubCache): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            let remoteAgent = this.getRemoteAgentCurrent();\n            if (remoteAgent) {\n                let remoteAgentPromise = this.hubPostRemote<RemoteAgentStatus>('/api/Hub/GetRemoteAgentStatus', {\n                    hubKey: hubCache.hub.hubKey }, null, null);\n                let globalCachePromise = this.authService.getGlobalCachePromise();\n                let hubPromise = this.getHubCachePromise();\n\n                Promise.all([remoteAgentPromise, globalCachePromise, hubPromise]).then(values => {\n                    let agentStatus = values[0];\n                    let globalCache = values[1];\n                    let hub = values[2].hub;\n\n                    // combine any functions in the libraries on the remote agent with the standard global remote libraries.\n                    let remoteLibraries = new RemoteLibraries();\n                    remoteLibraries.connections =\n                        globalCache.defaultRemoteLibraries.connections.concat(agentStatus.remoteLibraries.connections);\n                    remoteLibraries.transforms =\n                        globalCache.defaultRemoteLibraries.transforms.concat(agentStatus.remoteLibraries.transforms);\n                    remoteLibraries.functions =\n                        globalCache.defaultRemoteLibraries.functions.concat(agentStatus.remoteLibraries.functions);\n\n                    this._remoteLibraries.next(remoteLibraries);\n\n                    hub.dexihApis.forEach(api => {\n                        api['currentStatus'].next(agentStatus.activeApis.find(c => c.apiKey === api.key));\n                    });\n\n                    // merge the datalink/datajob status into the cached objects.\n                    hub.dexihDatalinks.forEach(datalink => {\n                        datalink['currentStatus'].next(this.getTransformWriterResult(datalink.key,  agentStatus.activeDatalinks));\n                        datalink['previousStatus'].next(\n                            this.getTransformWriterResult(datalink.key,  agentStatus.previousDatalinks));\n                    });\n\n                    hub.dexihTables.forEach(table => {\n                        table['currentStatus'].next(this.getTransformWriterTable(table.key, agentStatus.activeDatalinks));\n                        table['previousStatus'].next(this.getTransformWriterTable(table.key, agentStatus.previousDatalinks));\n                    });\n\n                    hub.dexihDatajobs.forEach(datajob => {\n                        datajob['currentStatus'].next(this.getTransformWriterResult(datajob.key,  agentStatus.activeDatajobs));\n                        datajob['previousStatus'].next(this.getTransformWriterResult(datajob.key,  agentStatus.previousDatajobs));\n                    });\n\n                    hub.dexihDatalinkTests.forEach(test => {\n                        test['currentStatus'].next(this.getTransformWriterResult(test.key,  agentStatus.activeDatalinkTests));\n                        test['previousStatus'].next(\n                            this.getTransformWriterResult(test.key,  agentStatus.previousDatalinkTests));\n                    });\n\n                    resolve(true);\n\n                }).catch(reason => {\n                    // this.addHubMessage(reason, true, 'Refreshing Remote Agent');\n                    reject(reason);\n                });\n            }\n        });\n    }\n\n    private getTransformWriterResult(referentKey: number, tasks: ManagedTask[]): TransformWriterResult {\n        let task = tasks.find(c => c.data && c.data.referenceKey === referentKey);\n        if (!task) { return null; }\n        return task.data;\n    }\n\n    private getTransformWriterTable(tableKey, tasks: ManagedTask[]): TransformWriterResult {\n        for (let task of tasks) {\n            let datalinkResult = <TransformWriterResult> task.data;\n            if (datalinkResult == null) { return null; }\n            let writerResult = this.SearchForTable(tableKey, datalinkResult);\n            if (writerResult) { return writerResult; }\n        }\n\n        return null;\n    }\n\n    private SearchForTable(tableKey: number, writerResult: TransformWriterResult) {\n        if (writerResult.targetTableKey === tableKey) { return writerResult; }\n\n        if (writerResult && writerResult.childResults) {\n            for (let child of writerResult.childResults) {\n                return this.SearchForTable(tableKey, child);\n            }\n        }\n\n        return null;\n    }\n\n        // updates all the information on the remoteAgent.\n    getHubUsers(): Promise<HubUser[]> {\n        return this.hubPost<HubUser[]>('/api/Hub/HubUsers', {}, 'Getting hub users...');\n    }\n\n    setUserPermissions(emails: string[], permission: ePermission, sendInvites: boolean): Promise<any> {\n        return this.hubPost('/api/Hub/SetUsersPermission', {\n            emails: emails, permission: permission, sendInvites: sendInvites\n        }, 'Setting user permissions...');\n    }\n\n    setUserAlerts(userIds: string[], alertEmails, sendInvites: boolean): Promise<any> {\n        return this.hubPost('/api/Hub/SetUsersAlerts', {\n            userIds: userIds, alertEmails: alertEmails, sendInvites: sendInvites\n        }, 'Setting user permissions...');\n    }\n\n    removeUsers(emails: string[]): Promise<any> {\n        return this.hubPost('/api/Hub/RemoveUsers', {emails: emails }, 'Removing hub users...');\n    }\n\n    exportHub(hub: DexihHub, filename: string) {\n        const content = JSON.stringify(hub, (key, value) => {\n            // don't bother saving the null values.\n            if (value === null ) { return undefined; }\n\n            switch (key) {\n                case 'currentStatus':\n                case 'entityStatus':\n                case 'previousStatus':\n                case 'runTime':\n                    return undefined;\n            }\n            return value;\n        } );\n\n        let blob = new Blob([content], { type: 'application/json;charset=utf-8;' });\n        if (navigator.msSaveBlob) { // IE 10+\n            navigator.msSaveBlob(blob, filename);\n        } else {\n            let link = document.createElement('a');\n            if (typeof link.download !== undefined) { // feature detection\n                // Browsers that support HTML5 download attribute\n                let url = URL.createObjectURL(blob);\n                link.setAttribute('href', url);\n                link.setAttribute('download', filename);\n                link.style.visibility = 'hidden';\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n            }\n        }\n    }\n\n    importPackage(importPackage: Import): Promise<any> {\n        return this.hubPost<any>('/api/Hub/ImportPackage', importPackage, 'Importing package...' );\n    }\n\n    deleteConnections(connections: Array<DexihConnection>): Promise<boolean> {\n        let connectionNames = connections.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteConnections', {\n            itemKeys: connections.map(c => c.key)}, 'Deleting connections...',\n            'This action will delete the following connections:<p></p>' + connectionNames + '<p></p> Are you sure?');\n    }\n\n    // tests the connection and refreshes the databases.\n    refreshConnection(connection: DexihConnection, cancelToken: CancelToken): PromiseWithCancel<Array<string>> {\n        return this.hubPostRemote<Array<string>>('/api/Hub/RefreshConnection',\n            {value: connection}, 'Refreshing connection...', cancelToken);\n    }\n\n    // tests the connection and refreshes the databases.\n    createDatabase(connection: DexihConnection, cancelToken: CancelToken): PromiseWithCancel<any> {\n        return this.hubPostRemote<Array<string>>('/api/Hub/CreateDatabase', {value: connection}, 'Creating new database...', cancelToken);\n    }\n\n    // decrypted a value in the hub.\n    async encrypt(value: string, cancelToken: CancelToken): Promise<string> {\n        let key = await this.authService.postRemoteGetKey('/api/Hub/Encrypt', {hubKey: this._hubKey},\n            this.getRemoteAgentCurrent(), cancelToken);\n        await this.getRemoteResponse<string>(key, cancelToken, 'setRaw', value);\n        let result = await this.getRemoteResponse<string>(key, cancelToken, 'download');\n        return result;\n    }\n\n    // decrypted a value in the hub.\n    decrypt(value: string, cancelToken: CancelToken): PromiseWithCancel<string> {\n        return this.hubPostRemote<string>('/api/Hub/Decrypt', {value: value}, 'Decrypting...', cancelToken);\n    }\n\n    // gets a list of table names in a remote database\n    getDatabaseTableNames(connection: DexihConnection, cancelToken: CancelToken): PromiseWithCancel<Array<DexihTable>> {\n        return this.hubPostRemote<Array<DexihTable>>('/api/Hub/DatabaseTableNames',\n            {value: connection}, 'Getting database table names...', cancelToken);\n    }\n\n    // import a list of specified tables in a remote database\n    importTables(tables: Array<DexihTable>, save: boolean, cancelToken: CancelToken): Promise<Array<DexihTable>> {\n        // if there are any table that are already imported, then warn the over of an overwrite.\n        let importedTables = tables.filter(c => c.key > 0);\n\n        if (importedTables.length > 0) {\n            return new Promise<Array<DexihTable>>((resolve, reject) => {\n            this.authService.confirmDialog('Re-Import Tables',\n            'This action will re-import the following tables, which will reset column customizations ' +\n            ' (such as descriptions, column validations, delta types etc.) and may invalidate some datalink mappings. <p></p>' +\n                    importedTables.map(c => c.name).join(',') +\n                    '  <p></p><p></p>Are you sure you want to continue?').then(confirm => {\n                        if (confirm) {\n                            this.doImport(tables, save, cancelToken).then(result => {\n                                resolve(result);\n                            }).catch(reason => reject(reason));\n                        } else {\n                            resolve(null);\n                        }\n                    }).catch(reason => {\n                        reject(reason);\n                    });\n                });\n        } else {\n            return this.doImport(tables, save, cancelToken);\n        }\n    }\n\n    public doImport(tables: Array<DexihTable>, save: boolean, cancelToken: CancelToken): Promise<Array<DexihTable>> {\n        return new Promise<Array<DexihTable>>((resolve, reject) => {\n            this.hubPostRemote<DexihTable[]>('/api/Hub/ImportTables', {\n            tables: tables,\n        }, 'Importing tables...', cancelToken).then(importedTables => {\n            if (save) {\n                resolve(this.saveTables(importedTables));\n            } else {\n                let hub = this.getHubCache();\n                importedTables.forEach(t => {\n                    t.dexihTableColumns.forEach(c => {\n                        if (c.key === 0) {\n                            c.key = hub.getNextSequence();\n                        }\n                    });\n                });\n                resolve(importedTables);\n            }\n        }).catch(reason => reject(reason));\n    });\n    }\n\n        // import a list of specified tables in a remote database\n    reImportTables(tableKeys: Array<number>, save: boolean, cancelToken: CancelToken): Promise<Array<DexihTable>> {\n        return new Promise<Array<DexihTable>>((resolve, reject) => {\n            const cache = this._hubCache.value;\n\n            let tables: Array<DexihTable> = [];\n            tableKeys.forEach(tableKey => {\n                const table = cache.getTable(tableKey);\n                if (!table) {\n                    const message = `Error: The re-import failed, as the table with the key ${tableKey} could not be found.`;\n                    this.addHubErrorMessage(message);\n                    this.logger.LogC(() => message, eLogLevel.Error);\n                    reject(message);\n                }\n                tables.push(table);\n            });\n\n            this.authService.confirmDialog('Re-Import Tables',\n            'This action will re-import the following tables, which will reset column customizations ' +\n            ' (such as descriptions, column validations, delta types etc.) and may invalidate some datalink mappings. <p></p>' +\n                    tables.map(c => c.name).join(',') +\n                    '  <p></p><p></p>Are you sure you want to continue?').then(confirm => {\n\n                        if (confirm) {\n                        this.doImport(tables, save, cancelToken)\n                            .then(result => {\n                                resolve(result);\n                            }).catch(reason => {\n                                reject(reason);\n                            });\n                        } else {\n                            resolve(null);\n                        }\n                    }).catch(() => {\n                        resolve(null);\n                    });\n        });\n    }\n\n    clearTables(tableKeys: Array<number>, cancelToken: CancelToken): Promise<boolean> {\n        const cache = this._hubCache.value;\n\n        let tables: Array<DexihTable> = [];\n        tableKeys.forEach(tableKey => {\n            const table = cache.getTable(tableKey);\n            if (!table) {\n                const message = `Error: The clear tables failed, as the table with the key ${tableKey} could not be found.`;\n                this.addHubErrorMessage(message);\n                this.logger.LogC(() => message, eLogLevel.Error);\n                return Promise.reject(message);\n            }\n            tables.push(table);\n        });\n\n        return this.hubPostRemoteConfirm<boolean>('/api/Hub/ClearTables', {\n            tables: tables,\n        }, 'Clearing tables...',\n        'This action will remove <b>ALL DATA</b> from the following tables.  This action cannot be reversed.' +\n        tables.map(c => c.name).join(',') +\n        '  <p></p><p></p>Are you sure you want to continue?', cancelToken);\n    }\n\n    createTables(tables: Array<DexihTable>, cancelToken: CancelToken): Promise<boolean> {\n        return this.hubPostRemoteConfirm<boolean>('/api/Hub/CreateTables', {\n            tables: tables,\n            dropTables: true\n        }, 'Clearing tables...',\n        // tslint:disable-next-line:max-line-length\n        'This action will drop and re-create the following tables, removing <b>ALL DATA</b>.  This action cannot be reversed.<p></p><p></p>' +\n        tables.map(c => c.name).join(',') +\n        '  <p></p><p></p>Are you sure you want to continue?', cancelToken);\n    }\n\n    // remove imported tables\n    deleteTables(tables: Array<DexihTable>): Promise<boolean> {\n        const names = tables.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm('/api/Hub/DeleteTables', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(false),\n            itemKeys: tables.map(t => t.key)\n        }, 'Deleting tables...',\n        'This action will delete the selected tables from the repository metadata ' +\n        '(note, this action \\\"does not\\\" delete tables from the underlying database).<p></p>' +\n        names +\n        ' <p></p><p></p>Are you sure you want to continue?'\n        );\n    }\n\n    // save an updated table\n    saveTables(tables: DexihTable[]): Promise<DexihTable[]> {\n        return this.hubPost('/api/Hub/SaveTables', {value: tables}, 'Saving tables..');\n    }\n\n    // get dbml string\n    getDbml(tables: Array<DexihTable>) {\n        this.authService.downloadFile('/api/Hub/DBML', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(false),\n            itemKeys: tables.map(t => t.key)\n        }, 'Getting DBML...', 'text/plain');\n    }\n\n    // create datalinks\n    createDatalinks(sourceTableKeys: Array<number>, name: string, datalinkType: eDatalinkType,\n        targetConnectionKey: number, targetTableKey: number,\n        targetTableName: string, auditConnectionKey: number,\n        addSourceColumns: boolean, auditColumns: Array<eDeltaType>): Promise<Array<DexihDatalink>> {\n            return this.hubPost<Array<DexihDatalink>>('/api/Hub/CreateDatalinks', {\n                hubKey: this._hubKey,\n                remoteAgentId: this.getCurrentRemoteAgentId(),\n                sourceTableKeys: sourceTableKeys,\n                datalinkName: name,\n                datalinkType: datalinkType,\n                targetConnectionKey: targetConnectionKey,\n                targetTableKey: targetTableKey,\n                targetTableName: targetTableName,\n                auditConnectionKey: auditConnectionKey,\n                addSourceColumns,\n                auditColumns\n            }, 'Creating datalinks...')\n    }\n\n        // remove datalinks\n    deleteDatalinks(datalinks: Array<DexihDatalink>): Promise<boolean> {\n        const datalinkNames = datalinks.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteDatalinks', {\n            itemKeys: datalinks.map(d => d.key)\n        }, 'Deleting datalinks...',\n        'This action will delete the following datalinks and underlying transforms from the repository metadata.<p></p>' +\n        datalinkNames +\n        '<p></p><p></p>Are you sure you want to continue?');\n    }\n\n    shareItems(keys: Array<number>, objectType: eDataObjectType, isShared: boolean): Promise<boolean> {\n        return this.hubPost<boolean>('/api/Hub/ShareItems', {\n            keys: keys,\n            objectType: objectType,\n            isShared: isShared\n        }, 'Sharing items...')\n    }\n\n    runDatalinks(datalinkKeys: Array<number>, truncateTarget: boolean,\n        resetIncremental: boolean, resetIncrementalValue: string, inputColumns: InputColumn[],\n        inputParameters: InputParameter[], cancelToken: CancelToken): Promise<boolean> {\n\n        let data = {\n            connectionId: this.authService.getWebSocketConnectionId(),\n            datalinkKeys: datalinkKeys,\n            truncateTarget: truncateTarget,\n            resetIncremental: resetIncremental,\n            resetIncrementalValue: resetIncrementalValue,\n            inputColumns: inputColumns,\n            inputParameters: inputParameters\n        };\n\n        if (truncateTarget) {\n            return this.hubPostRemoteConfirm('/api/Hub/RunDatalinks', data, 'Running datalinks...',\n            'This action will truncate all data in the target tables in the selected datalinks and reload from source.  ' +\n            '<p></p><p></p>Are you sure you want to continue?', cancelToken);\n        } else {\n            return this.hubPostRemote('/api/Hub/RunDatalinks', data, 'Running datalinks...', cancelToken);\n        }\n    }\n\n\n    public runDatalinkTests(datalinkTestKeys: Array<number>, cancelToken: CancelToken): Promise<boolean> {\n        return this.hubPostRemote<boolean>('/api/Hub/RunDatalinkTests', {\n            connectionId: this.authService.getWebSocketConnectionId(),\n            datalinkTestKeys: datalinkTestKeys\n        }, 'Running datalink tests...', cancelToken);\n    }\n\n    cancelDatalinkTests(datalinkTestKeys: Array<number>, cancelToken: CancelToken): Promise<boolean> {\n        return this.hubPostRemote<boolean>('/api/Hub/CancelDatalinkTests', {\n            itemKeys: datalinkTestKeys\n        }, 'Cancelling datalink tests...', cancelToken)\n    }\n\n    cancelDatalinks(datalinkKeys: Array<number>, cancelToken: CancelToken): Promise<boolean> {\n        return this.hubPostRemote<boolean>('/api/Hub/CancelDatalinks', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(),\n            itemKeys: datalinkKeys\n        }, 'Cancelling datalinks...', cancelToken)\n    }\n\n    getAuditResults(auditType: string, connectionKeys: Array<number>, referenceKeys: Array<number>,\n        childItems: boolean, rows: number, cancelToken: CancelToken): Promise<Array<TransformWriterResult>> {\n             return this.hubPostRemote<Array<TransformWriterResult>>('/api/Hub/PreviewAuditResults', {\n                connectionKeys,\n                referenceKeys: referenceKeys,\n                auditType: auditType,\n                childItems: childItems,\n                rows: rows,\n                }, 'Previewing audit results...', cancelToken);\n    }\n\n    getResultDetail(auditConnectionKey: number, auditKey: number, cancelToken: CancelToken): Promise<TransformWriterResult[]> {\n        return this.hubPostRemote<TransformWriterResult[]>('/api/Hub/PreviewAuditResults', {\n            connectionKeys: [auditConnectionKey],\n            referenceKeys: [],\n            auditKey: auditKey,\n            childItems: true,\n            rows: 1\n            }, 'Previewing audit results...', cancelToken);\n    }\n\n    deleteDatajobs(datajobs: Array<DexihDatajob>): Promise<boolean> {\n        let names = datajobs.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>(\n            '/api/Hub/DeleteDatajobs', {\n                hubKey: this._hubKey,\n                itemKeys: datajobs.map(t => t.key)\n            }, 'Deleting datajob(s)...',\n            'This action will delete the following data jobs, and any schedules and dependencies ' +\n            '(Note, this will NOT delete the datalinks): <p></p> ' + names  + '<p></p>  Are you sure?'\n        );\n    }\n\n    runDatajobs(datajobs: Array<DexihDatajob>, truncateTarget: boolean,\n        resetIncremental: boolean, resetIncrementalValue: string, inputParameters: InputParameter[],\n        cancelToken: CancelToken): Promise<boolean> {\n\n            var data = {\n                connectionId: this.authService.getWebSocketConnectionId(),\n                datajobKeys: datajobs.map(d => d.key),\n                truncateTarget: truncateTarget,\n                resetIncremental: resetIncremental,\n                resetIncrementalValue: resetIncrementalValue,\n                inputParameters: inputParameters\n            };\n\n            if (truncateTarget) {\n                return this.hubPostRemoteConfirm('/api/Hub/RunDatajobs', data, 'Running datajobs...',\n                'This action will truncate all data in the target tables for datalinks in this job.  ' +\n                '<p></p><p></p>Are you sure you want to continue?', cancelToken);\n            } else {\n                return this.hubPostRemote('/api/Hub/RunDatajobs', data, 'Running datajobs...', cancelToken);\n            }\n    }\n\n    deactivateDatajobs(datajobKeys: Array<number>, cancelToken: CancelToken): Promise<boolean> {\n        return this.hubPostRemote<boolean>('/api/Hub/DeactivateDatajobs', {\n                connectionId: this.authService.getWebSocketConnectionId(),\n                datajobKeys: datajobKeys\n            }, 'Deactivating datajob(s)...', cancelToken\n        );\n    }\n\n    activateDatajobs(datajobs: Array<DexihDatajob>, inputParameters: InputParameter[], cancelToken: CancelToken): Promise<boolean> {\n        return this.hubPostRemote<boolean>('/api/Hub/ActivateDatajobs', {\n            connectionId: this.authService.getWebSocketConnectionId(),\n            datajobKeys: datajobs.map(d => d.key),\n            inputParameters: inputParameters\n        }, 'Activating datajob(s)...', cancelToken);\n    }\n\n    saveView(view: DexihView): Promise<DexihView> {\n        return this.hubPost<DexihView>('/api/Hub/SaveView', {\n            value: view\n        }, 'Saving view...');\n    }\n\n    deleteViews(views: Array<DexihView>): Promise<boolean> {\n        let viewNames = views.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteViews', {\n            itemKeys: views.map(c => c.key)\n        }, 'Deleting views(s)...',\n        'This action will delete the following views, from the hub and cannot be reversed.<p></p>' +\n        viewNames + '<p></p>Are you sure?');\n    }\n\n    saveDashboard(dashboard: DexihDashboard): Promise<DexihDashboard> {\n        return this.hubPost<DexihDashboard>('/api/Hub/SaveDashboard', {\n            value: dashboard\n        }, 'Saving Dashboard...');\n    }\n\n    deleteDashboards(dashboards: Array<DexihDashboard>): Promise<boolean> {\n        let names = dashboards.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteDashboards', {\n            itemKeys: dashboards.map(c => c.key)\n        }, 'Deleting Dashboard(s)...',\n        'This action will delete the following dashboards, from the hub and cannot be reversed.<p></p>' +\n                names + '<p></p>Are you sure?');\n    }\n\n    saveListOfValues(lov: DexihListOfValues): Promise<DexihListOfValues> {\n        return this.hubPost<DexihListOfValues>('/api/Hub/SaveListOfValues', {\n            value: lov\n        }, 'Saving list of values...');\n    }\n\n    deleteListOfValues(lov: Array<DexihListOfValues>): Promise<boolean> {\n        let names = lov.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteListOfValues', {\n            itemKeys: lov.map(c => c.key)\n        }, 'Deleting list of value(s)...',\n        'This action will delete the following list of values, from the hub and cannot be reversed.<p></p>' +\n        names + '<p></p>Are you sure?');\n    }\n\n    saveTag(tag: DexihTag): Promise<DexihTag> {\n        return this.hubPost<DexihTag>('/api/Hub/SaveTags', {\n            value: tag\n        }, 'Saving tag...');\n    }\n\n    deleteTags(tags: Array<DexihTag>): Promise<boolean> {\n        let names = tags.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteTags', {\n            itemKeys: tags.map(c => c.key)\n        }, 'Deleting tags(s)...',\n        'This action will delete the following tags, from the hub and cannot be reversed.<p></p>' +\n        names + '<p></p>Are you sure?');\n    }\n\n    saveTagObjects(tagKey: number, isChecked: boolean, objectKeys: Array<{objectType: eSharedObjectType, objectKey: number}>) {\n        return this.hubPost('/api/Hub/SaveTagObjects', {\n            tagKey,\n            isChecked,\n            objectKeys\n        }, 'Saving tags...');\n    }\n\n    deleteTagObjects(objectKeys: Array<{objectType: eSharedObjectType, objectKey: number}>) {\n        return this.hubPost('/api/Hub/DeleteTagObjects', {\n            objectKeys\n        }, 'Deleting tags...');\n    }\n\n\n    saveApi(api: DexihApi): Promise<DexihApi> {\n        return this.hubPost<DexihApi>('/api/Hub/SaveApi', {\n            value: api\n        }, 'Saving api...');\n    }\n\n    deleteApis(apis: Array<DexihApi>): Promise<boolean> {\n        let apiNames = apis.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm('/api/Hub/DeleteApis', {\n            itemKeys: apis.map(c => c.key)\n        }, 'Deleting api(s)...',\n            // tslint:disable-next-line:max-line-length\n            'This action will delete the following apis, from the hub and cannot be reversed.  Note, this action will NOT deactivate currently active Api\\'s.<p></p>.' +\n            apiNames + '<p></p>Are you sure?'\n        );\n\n    }\n\n    activateApis(apis: Array<DexihApi>, cancelToken: CancelToken): Promise<boolean> {\n        return this.hubPostRemote<boolean>('/api/Hub/ActivateApis', {\n            connectionId: this.authService.getWebSocketConnectionId(),\n            apiKeys: apis.map(d => d.key),\n        }, 'Activating Api(s)...', cancelToken);\n\n    }\n\n    deactivateApis(apiKeys: Array<number>, cancelToken: CancelToken): Promise<boolean> {\n        return this.hubPostRemote<boolean>('/api/Hub/DeactivateApis', {\n            connectionId: this.authService.getWebSocketConnectionId(),\n            apiKeys: apiKeys\n        }, 'Deactivating Api(s)...', cancelToken);\n    }\n\n    previewTableData(table: DexihTable, showRejectedData, selectQuery: SelectQuery, inputColumns: InputColumn[],\n        parameters: DexihInputParameter[], cancelToken: CancelToken): PromiseWithCancel<PreviewResults> {\n        let hub = this.createHub(this._hubKey, 'cache');\n        this._hubCache.value.cacheAddConnection(table.connectionKey, hub);\n\n        return this.previewTableDataQuery(table, showRejectedData, selectQuery, inputColumns, parameters, cancelToken);\n    }\n\n\n\n    getData(url: string, data: any, waitMessage: string, cancelToken): PromiseWithCancel<PreviewResults> {\n        return new PromiseWithCancel<PreviewResults>((resolve, reject) => {\n            this.hubPostRemote<PreviewResults>(url, data, waitMessage, cancelToken).then(previewData => {\n                let columns = this.authService.constructDataTableColumns(previewData.columns);\n                resolve({\n                    name: previewData.name,\n                    columns: columns,\n                    data: previewData.data,\n                    transformProperties: previewData.transformProperties,\n                    status: previewData.status,\n                    viewConfig: previewData.viewConfig\n                });\n            }).catch(reason => {\n                this.addHubMessage(reason, true, 'Preview Data');\n                reject(reason);\n            });\n        });\n    }\n\n    previewTableDataQuery(table: DexihTable, showRejectedData, selectQuery: SelectQuery, inputColumns: InputColumn[],\n        inputParameters: DexihInputParameter[], cancelToken: CancelToken):\n        PromiseWithCancel<PreviewResults> {\n            return this.getData('/api/Hub/PreviewTableQuery', {\n                hubKey: this._hubKey,\n                remoteAgentId: this.getCurrentRemoteAgentId(),\n                table: table,\n                showRejectedData: showRejectedData,\n                selectQuery: selectQuery,\n                inputColumns: inputColumns,\n                inputParameters: inputParameters,\n            }, 'Retrieving table data...', cancelToken);\n    }\n\n    previewTableKeyData(tableKey: number, showRejectedData, selectQuery: SelectQuery, inputColumns: InputColumn[],\n        inputParameters: DexihInputParameter[], cancelToken: CancelToken):\n        PromiseWithCancel<PreviewResults> {\n            return this.getData('/api/Hub/PreviewTable', {\n                tableKey: tableKey,\n                showRejectedData: showRejectedData,\n                selectQuery: selectQuery,\n                inputColumns: inputColumns,\n                inputParameters: inputParameters,\n            }, 'Retrieving table data...', cancelToken);\n    }\n\n    previewDatalinkKeyData(datalinkKey: number, previewUpdates: boolean, selectQuery: SelectQuery, inputColumns: InputColumn[],\n        inputParameters: DexihInputParameter[], cancelToken: CancelToken):\n    PromiseWithCancel<PreviewResults> {\n\n        return this.getData('/api/Hub/PreviewDatalink', {\n            datalinkKey: datalinkKey,\n            previewUpdates: previewUpdates,\n            selectQuery: selectQuery,\n            inputColumns: inputColumns,\n            inputParameters: inputParameters,\n        }, 'Retrieving datalink data..', cancelToken);\n    }\n\n    previewTransformData(datalink: DexihDatalink, datalinkTransformKey: number, selectQuery: SelectQuery, inputColumns: InputColumn[],\n        inputParameters: DexihInputParameter[], cancelToken: CancelToken):\n        PromiseWithCancel<PreviewResults> {\n            // remove status as they will not parse into json.\n            datalink['currentStatus'] = null;\n            datalink.entityStatus = null;\n            datalink['previousStatus'] = null;\n\n            return this.getData('/api/Hub/PreviewTransform', {\n                datalink: datalink,\n                selectQuery,\n                inputColumns,\n                inputParameters: inputParameters,\n                datalinkTransformKey: datalinkTransformKey,\n            }, 'Retrieving transform data...', cancelToken)\n    }\n\n    previewView(view: DexihView, inputColumns: InputColumn[],\n        inputParameters: DexihInputParameter[], cancelToken: CancelToken): PromiseWithCancel<PreviewResults> {\n\n        return this.getData('/api/Hub/PreviewView', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(),\n            view: view,\n            inputColumns: inputColumns,\n            inputParameters: inputParameters,\n        }, 'Retrieving view data...', cancelToken);\n    }\n\n    previewViewKey(viewKey: number, inputColumns: InputColumn[], parentParameters: InputParameter[],\n        inputParameters: DexihInputParameter[], cancelToken: CancelToken): PromiseWithCancel<PreviewResults> {\n\n        return this.getData('/api/Hub/PreviewViewKey', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(),\n            viewKey: viewKey,\n            inputColumns: inputColumns,\n            inputParameters: inputParameters,\n            parentParameters: parentParameters\n        }, 'Retrieving view data...', cancelToken);\n    }\n\n    previewDashboard(dashboard: DexihDashboard, inputParameters: DexihInputParameter[], cancelToken: CancelToken):\n    Promise<{dashboardItemKey: string, dataKey: string}[]> {\n\n        let remoteAgent = this.getRemoteAgentCurrent();\n\n        if (!remoteAgent) {\n            let message = new Message(false, 'No active remote agent.', null, null);\n            this.addHubMessage(message);\n            return Promise.reject(message);\n        }\n\n        return new PromiseWithCancel<{dashboardItemKey: string, dataKey: string}[]>((resolve, reject) => {\n            this.authService.getBestDownloadUrl(remoteAgent, 0).then(url => {\n                this.hubPost<{dashboardItemKey: string, dataKey: string}[]>('/api/Hub/PreviewDashboard', {\n                    hubKey: this._hubKey,\n                    remoteAgentId: this.getCurrentRemoteAgentId(),\n                    downloadUrl: url,\n                    dashboard: dashboard,\n                    inputParameters: inputParameters,\n                }, 'Retrieving dashboard data...').then(urls => {\n                    resolve(urls);\n                }).catch(reason => reject(reason));\n            }).catch(reason => reject(reason));\n        });\n    }\n\n    previewListOfValues(listOfValues: DexihListOfValues, resetCache: boolean, cancelToken: CancelToken):\n        PromiseWithCancel<ListOfValuesItem[]> {\n        if (listOfValues.sourceType === eLOVObjectType.Static) {\n            return new PromiseWithCancel<ListOfValuesItem[]>((resolve) => {\n                resolve(listOfValues.staticData);\n            });\n        }\n\n        return this.hubPostRemote<ListOfValuesItem[]>('/api/Hub/PreviewListOfValues', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(),\n            listOfValues: listOfValues,\n            resetCache: resetCache\n        }, 'Getting list of values...', cancelToken);\n    }\n\n    previewListOfValuesKey(listOfValuesKey: number, resetCache: boolean, cancelToken: CancelToken): PromiseWithCancel<ListOfValuesItem[]> {\n        let hub: DexihHub = this._hubCache.value.hub;\n        let listOfValues = hub.dexihListOfValues.find(c => c.key === listOfValuesKey);\n\n        if (listOfValues.sourceType === eLOVObjectType.Static) {\n            return new PromiseWithCancel<ListOfValuesItem[]>((resolve) => {\n                resolve(listOfValues.staticData);\n            });\n        }\n\n        return this.hubPostRemote<ListOfValuesItem[]>('/api/Hub/PreviewListOfValuesKey', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(),\n            listOfValuesKey: listOfValuesKey,\n            resetCache: resetCache\n        }, 'Getting list of values...', cancelToken);\n    }\n\n    // downloads a dataset from the provided url\n    downloadUrlData(url: string, cancelToken: CancelToken): PromiseWithCancel<PreviewResults> {\n        let promise = new PromiseWithCancel<PreviewResults>((resolve, reject) => {\n                let httpPromise = this.authService.getFromExternal<PreviewResults>(url, null, cancelToken);\n                httpPromise.then(data => {\n                    if (data['success'] === false) {\n                        this.addHubMessage(data);\n                        reject(data['message']);\n                    } else {\n                        let columns = this.authService.constructDataTableColumns(data.columns);\n                        resolve({\n                            name: data.name,\n                            columns: columns,\n                            data: data.data,\n                            transformProperties: data.transformProperties,\n                            status: data.status,\n                            viewConfig: data.viewConfig\n                        });\n                        return;\n                    }\n                }).catch(reason => {\n                    this.addHubMessage(reason.error);\n                    reject(reason.error);\n                });\n            }, cancelToken);\n\n        return promise;\n    }\n\n    datalinkProperties(datalinkKey: number, selectQuery: SelectQuery, inputColumns: InputColumn[], cancelToken: CancelToken):\n    Promise<TransformProperties> {\n        return this.hubPostRemote<TransformProperties>('/api/Hub/DatalinkProperties', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(),\n            datalinkKey: datalinkKey,\n            selectQuery: selectQuery,\n            inputColumns: inputColumns,\n        }, 'Getting datalinks properties...', cancelToken);\n\n    }\n\n    previewProfileData(writerResult: TransformWriterResult, summaryOnly: boolean, cancelToken: CancelToken):\n        PromiseWithCancel<{ columns: Array<any>, data: Array<any> }> {\n\n        if (!writerResult.profileTableName) {\n            let message = new Message(false, 'This result does not contain profile data.', null, null);\n            this.addHubMessage(message);\n            Promise.reject(message);\n        }\n\n        const hub = this._hubCache.value.hub;\n        let connection = hub.dexihConnections.find(c => c.key === writerResult.auditConnectionKey);\n\n        return this.getData('/api/Hub/PreviewProfile', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(),\n            auditKey: writerResult.auditKey,\n            profileTableName: writerResult.profileTableName,\n            connection: connection,\n            summaryOnly: summaryOnly,\n        }, 'Retrieving profile data...', cancelToken);\n    }\n\n    downloadData(downloadObjects: Array<DownloadObject>, zipFiles: boolean, downloadFormat: eDownloadFormat, cancelToken: CancelToken):\n        Promise<boolean> {\n\n        return new Promise<boolean>((resolve, reject) => {\n            this.hubPostRemote<ManagedTask>('/api/Hub/DownloadSharedData', {\n                connectionId: this.authService.getWebSocketConnectionId(),\n                downloadFormat: downloadFormat,\n                zipFiles: zipFiles,\n                downloadObjects: downloadObjects,\n            }, 'Downloading shared data...', cancelToken).then(task => {\n                this.authService.addUpdateTask(task);\n                this.addHubSuccessMessage('The download task has started.');\n                resolve(true);\n            });\n        });\n    }\n\n    downloadTableData(table: DexihTable, showRejectedData, selectQuery: SelectQuery, inputColumns: InputColumn[],\n        zipFiles: boolean, downloadFormat: eDownloadFormat, cancelToken: CancelToken):\n        Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            this.hubPostRemote<ManagedTask>('/api/Hub/DownloadTableData', {\n                hubKey: this._hubKey,\n                remoteAgentId: this.getCurrentRemoteAgentId(),\n                connectionId: this.authService.getWebSocketConnectionId(),\n                table: table,\n                showRejectedData: showRejectedData,\n                selectQuery: selectQuery,\n                inputColumns: inputColumns,\n                downloadFormat: downloadFormat,\n                zipFiles: zipFiles,\n                }, 'Downloading table data...', cancelToken).then(task => {\n                    this.authService.addUpdateTask(task);\n                    this.addHubSuccessMessage('The download task has started.');\n                    resolve(true);\n                });\n            });\n    }\n\n    downloadDatalinkData(datalink: DexihDatalink, datalinkTransformKey: number, selectQuery: SelectQuery, inputColumns: InputColumn[],\n        zipFiles: boolean, downloadFormat: eDownloadFormat, inputParameters: DexihInputParameter[], cancelToken: CancelToken):\n    Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            this.hubPostRemote<ManagedTask>('/api/Hub/DownloadDatalinkData', {\n                hubKey: this._hubKey,\n                remoteAgentId: this.getCurrentRemoteAgentId(),\n                connectionId: this.authService.getWebSocketConnectionId(),\n                datalink: datalink,\n                datalinkTransformKey: datalinkTransformKey,\n                selectQuery: selectQuery,\n                inputColumns: inputColumns,\n                inputParameters: inputParameters,\n                downloadFormat: downloadFormat,\n                zipFiles: zipFiles,\n                }, 'Downloading table data...', cancelToken).then(task => {\n                    this.authService.addUpdateTask(task);\n                    this.addHubSuccessMessage('The download task has started.');\n                    resolve(true);\n                });\n            });\n    }\n\n    downloadProfileData(writerResult: TransformWriterResult, cancelToken: CancelToken): Promise<boolean> {\n        let table = this._hubCache.value.getProfileTable(writerResult.profileTableName, writerResult.auditConnectionKey);\n        return this.downloadTableData(table, false, null, null, false, eDownloadFormat.Csv, cancelToken);\n    }\n\n    deleteColumnValidations(validations: Array<DexihColumnValidation>): Promise<boolean> {\n        let validationNames = validations.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteColumnValidations', {\n            hubKey: this._hubKey,\n            itemKeys: validations.map(c => c.key)\n        }, 'Deleting column validation...', 'This action will delete the following validations, from the hub and cannot be reversed.<p></p>'\n        + validationNames + '<p></p> Are you sure?');\n    }\n\n    // saves the current validation.\n    saveColumnValidation(validation: DexihColumnValidation): Promise<DexihColumnValidation> {\n        return this.hubPost<DexihColumnValidation>('/api/Hub/SaveColumnValidation', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(),\n            validation: validation\n        }, 'Saving column validation...');\n    }\n\n    deleteCustomFunctions(customFunctions: Array<DexihCustomFunction>): Promise<boolean> {\n        let functionNames = customFunctions.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteCustomFunctions', {\n            hubKey: this._hubKey,\n            itemKeys: customFunctions.map(c => c.key)\n        }, 'Deleting custom function(s)...',\n        'This action will delete the following custom functions, from the hub and cannot be reversed.<p></p>'\n                + functionNames + '<p></p> Are you sure?');\n    }\n\n            // tests the connection and refreshes the databases.\n    testCustomFunction(datalinkTransformItem: DexihDatalinkTransformItem,\n        testValues: Array<any>, cancelToken: CancelToken): PromiseWithCancel<Array<any>> {\n        return this.hubPostRemote<Array<any>>('/api/Hub/TestCustomFunction',\n                {value: datalinkTransformItem, testValues: testValues}, 'Testing custom function...', cancelToken);\n    }\n\n        // tests the connection and refreshes the databases.\n    downloadCustomFunction(datalinkTransformItem: DexihDatalinkTransformItem, testValues: Array<any>): Promise<Array<any>> {\n        return new Promise<Array<any>>((resolve, reject) => {\n            const cache = this._hubCache.value;\n\n            this.authService.downloadFile('/api/Hub/DownloadFunctionCode',\n                { hubKey: cache.hub.hubKey, datalinkTransformItem, testValues}, 'CustomFunction.zip', 'application/zip').then(() => {\n                    this.addHubSuccessMessage('The custom function code has been downloaded.');\n                }).catch(reason => {\n                    this.addHubMessage(reason);\n                    reject(reason);\n                });\n\n        });\n    }\n\n    deleteFileFormats(validations: Array<DexihFileFormat>): Promise<boolean> {\n        let fileFormatNames = validations.map(c => c.name).join('<br>>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteFileFormats', {\n            hubKey: this._hubKey,\n            itemKeys: validations.map(c => c.key)\n        }, 'Deleting file format(s)...',\n        'This action will delete the following file formats, from the hub and cannot be reversed.<p></p>' +\n                fileFormatNames + '<p></p>Are you sure?');\n    }\n\n\n            // tests the connection and refreshes the databases.\n    testColumnValidation(columnValidation: DexihColumnValidation, testValue: string, cancelToken: CancelToken):\n        PromiseWithCancel<{success: boolean, cleanedValue: string, rejectReason: string}> {\n            return this.hubPostRemote<{success: boolean, cleanedValue: string, rejectReason: string}>('/api/Hub/TestColumnValidation',\n                {value: columnValidation, testValue: testValue}, 'Testing column validation...', cancelToken);\n    }\n\n\n    deleteHubVariables(variables: Array<DexihHubVariable>): Promise<boolean> {\n        let variableNames = variables.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteHubVariables', {\n            hubKey: this._hubKey,\n            itemKeys: variables.map(c => c.key)\n        }, 'Deleting hub variable(s)...',\n        'This action will delete the following variables, from the hub and cannot be reversed.<p></p>' +\n            variableNames + '<p></p>Are you sure?');\n    }\n\n    deleteDatalinkTests(items: Array<DexihDatalinkTest>): Promise<boolean> {\n        let itemNames = items.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteDatalinkTests', {\n            hubKey: this._hubKey,\n            itemKeys: items.map(c => c.key)\n        }, 'Deleting datalink test(s)...',\n        'This action will delete the following datalink tests, from the hub and cannot be reversed.<p></p>' +\n        itemNames + '<p></p>Are you sure?');\n    }\n\n    newDatalinkTest(name: string, datalinkKeys: Array<number>, auditConnectionKey: number, targetConnectionKey: number,\n        sourceConnectionKey: number): Promise<DexihDatalinkTest> {\n\n            return this.hubPost<DexihDatalinkTest>('/api/Hub/NewDatalinkTest', {\n                hubKey: this._hubKey,\n                remoteAgentId: this.getCurrentRemoteAgentId(),\n                connectionId: this.authService.getWebSocketConnectionId(),\n                name,\n                datalinkKeys,\n                auditConnectionKey,\n                targetConnectionKey,\n                sourceConnectionKey,\n            }, 'New Datalink test...');\n    }\n\n    runDatalinkTestSnapshot(items: Array<DexihDatalinkTest>, cancelToken: CancelToken): Promise<boolean> {\n        let itemNames = items.map(c => c.name).join('<br>');\n\n        return this.hubPostRemoteConfirm('/api/Hub/RunDatalinkTestSnapshot', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(),\n            connectionId: this.authService.getWebSocketConnectionId(),\n            datalinkTestKeys: items.map(c => c.key)\n        }, 'Running datalink test snapshot...',\n        // tslint:disable-next-line:max-line-length\n        'This action will delete all data in the test tables, and refresh them with the actual data in the datalink source/target tables.  This cannot be reversed.<p></p>' +\n        itemNames + '<p></p>Are you sure?', cancelToken);\n    }\n\n    setNewDatajob(datalinks: Array<DexihDatalink>) {\n        const datajob = this.createDefaultDatajob();\n        datajob.key = 0;\n\n        let stepKey = -1;\n        datalinks.forEach(datalink => {\n            const step = new DexihDatalinkStep();\n            step.name = datalink.name;\n            step.key = stepKey--;\n            step.datalinkKey = datalink.key;\n            step.isValid = true;\n\n            datajob.dexihDatalinkSteps.push(step);\n        });\n\n        this.newDatajob = datajob;\n    }\n\n    createDefaultDatajob(): DexihDatajob {\n        const datajob = new DexihDatajob();\n        let hub: DexihHub = this._hubCache.value.hub;\n\n        let managedConnections = hub.dexihConnections.filter(c => c.purpose === eConnectionPurpose.Managed)\n\n        if (managedConnections.length > 0) {\n            datajob.auditConnectionKey = managedConnections[0].key;\n        }\n\n        return datajob;\n    }\n\n    getLocalPath(table: DexihTable, flatFilePath: eFlatFilePath): string {\n        let connection = this._hubCache.value.getConnection(table.connectionKey)\n\n        let subdirectory: string;\n\n        if (table.useCustomFilePaths) {\n            switch (flatFilePath) {\n                case eFlatFilePath.Incoming:\n                    subdirectory = table.fileIncomingPath;\n                    break;\n                case eFlatFilePath.Processed:\n                    subdirectory = table.fileProcessedPath;\n                    break;\n                case eFlatFilePath.Rejected:\n                    subdirectory = table.fileRejectedPath;\n                    break;\n                case eFlatFilePath.Outgoing:\n                    subdirectory = table.fileOutgoingPath;\n                break;\n            }\n        } else {\n            subdirectory = flatFilePath.toString();\n        }\n\n        return this.fixTrailingSlash(connection.server) +\n            this.fixTrailingSlash(connection.defaultDatabase) +\n            this.fixTrailingSlash(table.fileRootPath) +\n            this.fixTrailingSlash(subdirectory);\n    }\n\n    private fixTrailingSlash(value: string) {\n        if (!value) {\n            return '';\n        } else if (value.endsWith('/')) {\n            return value;\n        } else {\n            return value + '/';\n        }\n    }\n\n    createPaths(table: DexihTable, cancelToken: CancelToken): PromiseWithCancel<boolean> {\n        return this.hubPostRemote<boolean>('/api/Hub/CreateFilePaths', {value: table}, 'Creating files paths..', cancelToken);\n    }\n\n    getFileList(table: DexihTable, flatFilePath: eFlatFilePath, cancelToken: CancelToken): PromiseWithCancel<Array<FileProperties>> {\n        return this.hubPostRemote<Array<FileProperties>>('/api/Hub/GetFileList', {value: table, path: flatFilePath}, 'Getting files list...'\n        , cancelToken);\n    }\n\n    deleteFiles(table: DexihTable, flatFilePath: eFlatFilePath, files: Array<string>, cancelToken: CancelToken):\n    PromiseWithCancel<boolean> {\n        let fileNames = '<p>' + files.map(c => c).join('</p><p>') + '</p>';\n\n        return this.hubPostRemoteConfirm<boolean>('/api/Hub/DeleteFiles',\n        {value: table, path: flatFilePath, files: files}, 'Deleting files...',\n        'This action will delete the following files, from the connection and cannot be reversed.<p></p>' +\n            fileNames + '<p></p>Are you sure?',\n                    cancelToken);\n    }\n\n    moveFiles(table: DexihTable, fromFilePath: eFlatFilePath, toFilePath: eFlatFilePath, files: Array<string>, cancelToken: CancelToken):\n        PromiseWithCancel<boolean> {\n        return this.hubPostRemote<boolean>('/api/Hub/MoveFiles', {\n            value: table, fromPath: fromFilePath,\n            toPath: toFilePath,\n            files: files}, 'Moving files...', cancelToken);\n    }\n\n    downloadFiles(table: DexihTable, flatFilePath: eFlatFilePath, files: Array<string>, cancelToken: CancelToken):\n    Promise<boolean> {\n\n        return new Promise<boolean>((resolve, reject) => {\n            this.hubPostRemote<ManagedTask>('/api/Hub/DownloadFiles', {\n                hubKey: this._hubKey,\n                connectionId: this.authService.getWebSocketConnectionId(),\n                remoteAgentId: this.getCurrentRemoteAgentId(),\n                tableKey: table.key,\n                path: flatFilePath,\n                files: files,\n            }, 'Downloading files...', cancelToken).then(task => {\n                this.authService.addUpdateTask(task);\n                resolve(true);\n            }).catch(reason => reject(reason));\n        });\n    }\n\n    uploadFile(table: DexihTable, filePath: eFlatFilePath, updateStrategy: eUpdateStrategy, fileName: string, cancelToken: CancelToken):\n    Promise<string> {\n        return new Promise<string>((resolve, reject) => {\n            let remoteAgent = this.getRemoteAgentCurrent();\n            this.authService.postRemoteUpload('/api/Hub/UploadFile', {\n                hubKey: this._hubKey,\n                remoteAgentId: remoteAgent.instanceId,\n                connectionId: this.authService.getWebSocketConnectionId(),\n                tableKey: table.key,\n                path: filePath,\n                updateStrategy: updateStrategy,\n                fileName: fileName,\n            }, remoteAgent, 'Uploading file...', cancelToken).then(url => {\n                resolve(url.url + '/file/' + fileName);\n            });\n        });\n    }\n\n    bulkUploadFiles(connectionKey: number, fileFormatKey: number, formatType: eTypeCode,\n        loadData: boolean, includeFileName: boolean, includeFileDate: boolean, includeFileRowNumber: boolean,\n        fileName: string, cancelToken: CancelToken):\n    Promise<{url: string, reference: string}> {\n        return new Promise<{url: string, reference: string}>((resolve, reject) => {\n            let remoteAgent = this.getRemoteAgentCurrent();\n            this.authService.postRemoteUpload('/api/Hub/BulkUploadFile', {\n                hubKey: this._hubKey,\n                remoteAgentId: remoteAgent.instanceId,\n                connectionId: this.authService.getWebSocketConnectionId(),\n                connectionKey: connectionKey,\n                fileFormatKey: fileFormatKey,\n                formatType: formatType,\n                loadData: loadData,\n                includeFileName,\n                includeFileDate,\n                includeFileRowNumber,\n                fileName: fileName,\n            }, remoteAgent, 'Uploading file...', cancelToken).then(url => {\n                resolve({reference: url.key, url: url.url + '/file/' + fileName});\n            }).catch(reason => reject(reason));\n        });\n    }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihApi, eSourceType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'api-view',\n    templateUrl: './api-view.component.html'\n})\n\nexport class ApiViewComponent implements OnInit {\n    @Input() api: DexihApi;\n\n    eSourceType = eSourceType;\n    \n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div [routerLink]=\"['api-edit', api.key]\" queryParamsHandling=\"merge\">\n    <h5>{{api.name}}</h5>\n    <div *ngIf=\"api.description\">\n        <markdown [data]=\"api.description\"></markdown>\n    </div>\n    <div class=\"note\">{{eSourceType[api.sourceType]}} / Updated: {{api.updateDate | calendar }} </div>\n</div>\n\n<api-status [apiKey]='api?.key'></api-status>","import { Component, OnInit, Input } from '@angular/core';\nimport { HubFormsService } from '../../hub.forms.service';\n\n@Component({\n    selector: 'cancel-button',\n    templateUrl: './cancel-button.component.html'\n})\n\nexport class CancelButtonComponent implements OnInit {\n    @Input() formsService: HubFormsService;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<d-button-cancel (click)=\"formsService.cancel()\"></d-button-cancel>\n","import {Component, OnInit, OnDestroy, ViewChild} from '@angular/core';\nimport {Router} from '@angular/router';\nimport { HubService } from '../../../+hub/hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubCache, eCacheStatus } from '../../../+hub/hub.models';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { LayoutService } from '../layout.service';\nimport { DToastComponent, ToastMessage } from 'ngx-d-components';\nimport { Message } from '../../../+auth/auth.models';\n\n@Component({\n  selector: 'dexih-header',\n  templateUrl: './header.component.html',\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n      @ViewChild('toasts', { static: true }) public toasts: DToastComponent;\n\n\n  _hubCacheSubscription: Subscription;\n  _displayHelpSubscription: Subscription;\n  _layoutSubscription: Subscription;\n  _notificationSubscription: Subscription;\n\n  searchString;\n\n  displayHelp: boolean;\n\n  collapsed = false;\n  mobileViewActivated = false;\n\n\n  hubCache: HubCache;\n  public waitMessage: string;\n\n  constructor(private router: Router,\n    private hubService: HubService,\n    private authService: AuthService,\n    private layoutService: LayoutService) {\n  }\n\n\n  ngOnInit() {\n    this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n      if (cache.status === eCacheStatus.Loaded) {\n        this.hubCache = cache;\n      }\n    });\n\n    this._layoutSubscription = this.layoutService.subscribe(store => {\n      this.collapsed = store.menuCollapsed;\n      this.mobileViewActivated = store.mobileViewActivated;\n    });\n\n    this._displayHelpSubscription = this.authService.getDisplayHelp().subscribe(displayHelp => this.displayHelp = displayHelp);\n\n    this._notificationSubscription = this.authService.getNotificationObservable().subscribe(message => {\n      if (message) {\n        let toastMessage: ToastMessage = {\n          content: message.message,\n          type: message.success ? 'success' : 'error',\n          buttonName: 'details',\n          reference: message.reference,\n          delay: 6000,\n          title: 'Message',\n          onButtonClick: (m) => this.toastClick(message)\n        }\n        this.toasts.add(toastMessage);\n      }\n\n    });\n  }\n\n  ngOnDestroy() {\n    if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n    if (this._displayHelpSubscription) { this._displayHelpSubscription.unsubscribe(); }\n    if (this._layoutSubscription) { this._layoutSubscription.unsubscribe(); }\n    if (this._notificationSubscription) { this._notificationSubscription.unsubscribe(); }\n  }\n\n  onSubmit() {\n    if (this.hubCache) {\n      this.router.navigate(['/hub', this.hubCache.hub.hubKey, 'search', 'All', this.searchString ], { });\n    }\n  }\n\n  onHelpToggle() {\n    this.authService.setDisplayHelp(!this.displayHelp);\n  }\n\n  toastClick(message: Message) {\n    this.authService.informationDialog('Error Notification',\n      message.message, '<pre>' + message.exceptionDetails + '</pre>');\n  }\n\n  onFullScreenToggle() {\n    const documentMethods = {\n      enter: ['requestFullscreen', 'mozRequestFullScreen', 'webkitRequestFullscreen', 'msRequestFullscreen'],\n      exit: ['cancelFullScreen', 'mozCancelFullScreen', 'webkitCancelFullScreen', 'msCancelFullScreen']\n    };\n\n    if (!document.body.classList.contains('full-screen')) {\n      document.body.classList.add('full-screen');\n      document.documentElement[documentMethods.enter.filter((method) => {\n        return document.documentElement[method]\n      })[0]]()\n    } else {\n      document.body.classList.remove('full-screen');\n      document[documentMethods.exit.filter((method) => {\n        return document[method]\n      })[0]]()\n    }\n  }\n\n  onMenuToggle() {\n    this.layoutService.onCollapseMenu();\n  }\n\n  logOut() {\n    this.authService.logout().then(result => {\n    });\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\n    <a class=\"btn btn-outline-secondary text-white ml-1\" (click)=\"onMenuToggle()\" title=\"Collapse Menu\">\n        <i class=\"fa fa-reorder\"></i>\n    </a>\n\n    <img src=\"assets/img/dexih/dex_logo_wide_raw.png\" height=\"30\" class=\"d-none d-lg-inline-block align-top pl-1\" alt=\"Data Experts Group\">\n\n    <!-- <messages></messages> -->\n\n    <div class=\"ml-auto\"></div>\n\n    <!-- input: search field -->\n    <form *ngIf=\"this.hubCache\" #searchForm=\"ngForm\" (ngSubmit)=\"onSubmit()\" class=\"d-none d-md-inline form-inline\">\n        <div class=\"input-group\">\n            <input [(ngModel)]=\"searchString\" class=\"form-control\" type=\"text\" name=\"param\" required placeholder=\"Search metadata...\">\n            <div class=\"input-group-append\">\n                <button class=\"btn btn-outline-secondary text-white\" type=\"submit\">\n                    <i class=\"fa fa-search\"></i>\n                </button>\n            </div>\n        </div>\n    </form>\n    <!-- end input: search field -->\n\n    <a *ngIf=\"displayHelp\" class=\"btn btn-outline-danger text-white ml-1\" (click)=\"onHelpToggle()\" title=\"Toggle help off\" data-toggle=\"button\">\n        <i class=\"fa fa-question\"></i>\n    </a>\n\n    <a *ngIf=\"!displayHelp\" class=\"btn btn-outline-success text-white ml-1\" (click)=\"onHelpToggle()\" title=\"Toggle help on\" data-toggle=\"button\">\n        <i class=\"fa fa-question\"></i>\n    </a>\n\n    <a class=\"btn btn-outline-secondary text-white ml-1\" (click)=\"onFullScreenToggle()\" title=\"Full Screen\">\n        <i class=\"fa fa-arrows-alt\"></i>\n    </a>\n\n    <a class=\"btn btn-outline-secondary text-white ml-1\" (click)=\"logOut()\" title=\"Sign Out\" data-action=\"userLogout\" data-logout-msg=\"You can improve your security further after logging out by closing this opened browser\">\n        <i class=\"fa fa-sign-out\"></i>\n    </a>\n\n    <dexih-tasks class=\"pl-1\"></dexih-tasks>\n\n    <d-toast #toasts></d-toast>\n</nav>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n    selector: 'menu-item',\n    templateUrl: './menu-item.component.html'\n})\n\nexport class MenuItemComponent implements OnInit {\n    @Input() name: string;\n    @Input() title: string;\n    @Input() routerLink: string;\n    @Input() iconClass: string;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<li class=\"nav-item feather\" routerLinkActive=\"active\">\n    <a class=\"nav-link feather\" [routerLink]=\"routerLink\" [title]=\"title\">\n        <i [ngClass]=\"iconClass\"></i> <span class=\"menu-item-parent\">{{name}}</span>\n    </a>\n</li>","export * from './icons.module';\n","import { Component, OnDestroy, OnInit, EventEmitter, Output, Input } from '@angular/core';\nimport { downloadFormats } from '../../../../+hub/hub.query.models';\nimport { eDownloadFormat } from '../../../shared.models';\n\n@Component({\n    selector: 'download-button',\n    templateUrl: './download-button.component.html'\n})\n\nexport class DownloadButtonComponent implements OnInit, OnDestroy {\n    @Input() autoCompact = true;\n    @Output() download = new EventEmitter<eDownloadFormat>();\n\n    eDownloadFormat = eDownloadFormat;\n    downloadFormats = downloadFormats;\n\n    constructor() { }\n\n    ngOnInit() {\n\n    }\n\n    ngOnDestroy() {\n     }\n\n     doDownload(format: eDownloadFormat) {\n         this.download.emit(format);\n     }\n\n\n\n}\n","<d-button-dropdown text=\"Download (all rows)\" iconClass=\"fa fa-download\" [autoCompact]=\"autoCompact\">\n    <a *ngFor=\"let downloadFormat of downloadFormats\" class=\"dropdown-item\" (click)=\"doDownload(downloadFormat.key)\">{{downloadFormat.name}}</a>\n</d-button-dropdown>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription} from 'rxjs';\n\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubCache } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { DexihApi, DexihHub, eDataObjectType } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n    selector: 'actions-api-button',\n    templateUrl: './actions-api-button.component.html'\n})\n\nexport class ActionsApiButtonComponent implements OnInit, OnDestroy {\n    @Input() public apis: DexihApi[];\n    @Input() public pullRight = false;\n\n    public hubCache: HubCache;\n\n    private _hubCacheSubscription: Subscription;\n\n    private cancelToken: CancelToken = new CancelToken();\n\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n                private router: Router,\n                private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n            this.hubCache = cache;\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    delete() {\n        this.hubService.deleteApis(this.apis);\n    }\n\n    editApi(api: DexihApi) {\n        this.router.navigate(['api-edit', api.key], { relativeTo: this.route });\n    }\n\n    export() {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        this.apis.forEach(item => { this.hubCache.cacheAddApi(item.key, hub); });\n\n        let filename = this.apis.length === 1 ? 'Api - ' + this.apis[0].name + '.json' : 'apis.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    shareItems(isShared: boolean) {\n        this.hubService.shareItems(this.apis.map(c => c.key), eDataObjectType.Api, isShared);\n    }\n\n    activateApis() {\n        this.hubService.activateApis(this.apis, this.cancelToken);\n    }\n\n    cancelApis() {\n        this.hubService.deactivateApis(this.apis.map(c => c.key), this.cancelToken);\n    }\n}\n","<ng-template [ngIf]=\"apis\">\n    <d-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-table\" [text]=\"apis.length > 1 ? 'apis' : 'Api'\" [pullRight]=\"pullRight\">\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Metadata</li>\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" [routerLink]=\"['api-new']\" title=\"Create a new api.\"><i class=\"fa fa-file-o\"></i> New</a></li>\n        <ng-template [ngIf]=\"apis.length > 0\">\n            <li *ngIf=\"apis.length == 1\">\n                <a class=\"dropdown-item\" [routerLink]=\"['api-edit', apis[0].key]\" queryParamsHandling=\"merge\"><i class=\"fa fa-edit\"></i> Edit</a>\n            </li>\n\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"shareItems(true)\" title=\"Select the selected items as shared.\"><i class=\"fa fa-group\"></i> Share</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"shareItems(false)\" title=\"Select the selected items as private.\"><i class=\"fa fa-user-secret\"></i> Private</a></li>\n\n            <li><a class=\"dropdown-item\" (click)=\"export()\" title=\"Export the metadata for the selected apis to a local file.\"><i class=\"fa fa-save\"></i> Save Locally</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"delete()\" title=\"Delete the metadata for the selected apis.\"><span class=\"text-danger\"><i class=\"fa fa-trash-o text-danger\"></i> Delete</span></a></li>\n    \n            <li class=\"list-group-item list-group-item-heading list-group-item-info\">Operations</li>\n            <li><a class=\"dropdown-item\" *ngIf=\"apis.length == 1\" [routerLink]=\"['results']\" [queryParams]=\"{apiKeys: [apis[0].key]}\" title=\"Show the Api Logs\"><i class=\"fa fa-history\"></i> Logs</a></li>\n\n            <ng-template [ngIf]=\"hubCache.canWrite\">\n                <li><a class=\"dropdown-item\" (click)=\"activateApis()\" title=\"Activates the api.\"><span class=\"text-success\"><i class=\"fa fa-bolt\"></i> Activate Api's</span> </a></li>\n                <li><a class=\"dropdown-item\" (click)=\"cancelApis()\" title=\"Cancel & deactivate the api's\"><span class=\"text-danger\"><i class=\"fa fa-ban\"></i> Cancel/Deactivate Api's</span> </a></li>\n            </ng-template>\n\n        </ng-template>\n    </d-button-dropdown>\n</ng-template>","import { Routes, Route, RouterModule } from '@angular/router';\nimport { HubComponent } from './hub.component';\nimport { SummaryComponent } from './summary';\nimport { SearchComponent} from './search';\nimport { ItemEditGuard} from './item-edit.guard';\n\n\nexport const routes = [\n{\n    path: '',\n    component: HubComponent,\n    children: [\n        { path: '', redirectTo: 'summary'},\n        { path: 'summary', data: { pageTitle: 'Summary' }, children: (<Routes>[\n            { path: '', pathMatch: 'full', component: SummaryComponent, data: { pageTitle: 'Summary' } },\n            { path: '', loadChildren: () => import('./hub.base.module').then(m => m.HubBaseModule) }\n         ])\n        }\n    ]}\n];\n\nexport const Routing = RouterModule.forChild(routes);\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'gtFilter',\n})\nexport class GtFilterPipe implements PipeTransform {\n\n  transform(items: any[], field: string, value: number): any[] {\n    if (!items) {\n        return [];\n    }\n    return items.filter(it => it[field] > value);\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../shared/shared.module';\nimport { ButtonsModule} from '../buttons/buttons.module';\nimport { DatalinkStatusComponent } from './datalink-status/datalink-status.component';\nimport { ColumnValidationViewComponent } from './columnValidation-view/columnValidation-view.component';\nimport { ConnectionViewComponent } from './connection-view/connection-view.component';\nimport { DatajobViewComponent } from './datajob-view/datajob-view.component';\nimport { DatalinkViewComponent } from './datalink-view/datalink-view.component';\nimport { FileFormatViewComponent } from './fileFormat-view/fileFormat-view.component';\nimport { TableViewComponent } from './table-view/table-view.component';\nimport { TableColumnViewComponent } from './table-column-view/table-column-view.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ViewViewComponent } from './view-view/view-view.component';\nimport { ApiViewComponent } from './api-view/api-view.component';\nimport { ApiStatusComponent } from './api-status/api-status.component'\nimport { RemoteAgentViewComponent } from './remoteAgent-view/remoteAgent-view.component';\nimport { TransformPropertiesComponent } from './transform-properties/transform-properties.component';\nimport { TransformPropertiesItemComponent } from './transform-properties/transform-properties-item.component';\nimport { PreviewDataComponent } from './preview-data/preview-data.component';\nimport { InputParametersComponent } from './input-parameters/input-parameters.component'\nimport { InputParametersViewComponent } from './input-parameters-view/input-parameters-view.component'\nimport { DashboardViewComponent } from './dashboard-view/dashboard-view.component';\nimport { ListOfValuesViewComponent } from './listOfValues-view/listOfValues-view.component';\nimport { DatalinkTestViewComponent } from './datalinkTest-view/datalinkTest-view.component';\n\n@NgModule({\n    imports: [\n        SharedModule,\n        ButtonsModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    exports: [\n        DatalinkStatusComponent,\n        ColumnValidationViewComponent,\n        ConnectionViewComponent,\n        ColumnValidationViewComponent,\n        DatalinkViewComponent,\n        DatajobViewComponent,\n        FileFormatViewComponent,\n        TableViewComponent,\n        TableColumnViewComponent,\n        ViewViewComponent,\n        ApiViewComponent,\n        ApiStatusComponent,\n        DashboardViewComponent,\n        RemoteAgentViewComponent,\n        TransformPropertiesComponent, TransformPropertiesItemComponent,\n        PreviewDataComponent,\n        InputParametersComponent,\n        InputParametersViewComponent,\n        ListOfValuesViewComponent,\n        DatalinkTestViewComponent,\n    ],\n    declarations: [\n        DatalinkStatusComponent,\n        ColumnValidationViewComponent,\n        ConnectionViewComponent,\n        DatalinkViewComponent,\n        DatajobViewComponent,\n        FileFormatViewComponent,\n        TableViewComponent,\n        TableColumnViewComponent,\n        ViewViewComponent,\n        ApiViewComponent,\n        ApiStatusComponent,\n        DashboardViewComponent,\n        RemoteAgentViewComponent,\n        TransformPropertiesComponent, TransformPropertiesItemComponent,\n        PreviewDataComponent,\n        InputParametersComponent,\n        InputParametersViewComponent,\n        ListOfValuesViewComponent,\n        DatalinkTestViewComponent,\n    ],\n    providers: [],\n})\nexport class WidgetsModule { }\n","<ng-template [ngIf]=\"datalinks\">\n    <d-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-table\" [text]=\"datalinks.length > 1 ? 'Datalinks' : 'Datalink'\" [pullRight]=\"pullRight\">\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Metadata</li>\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" [routerLink]=\"['datalink-edit', 'new']\" title=\"Create a new datalink.\"><i class=\"fa fa-file-o\"></i> New</a></li>\n        <ng-template [ngIf]=\"datalinks.length > 0\">\n            <li *ngIf=\"showEdit && datalinks.length == 1\">\n                <a class=\"dropdown-item\" [routerLink]=\"['datalink-edit', 'edit', datalinks[0].key]\" queryParamsHandling=\"merge\"><i class=\"fa fa-edit\"></i> Edit</a>\n            </li>\n            <li *ngIf=\"hubCache.canWrite\">\n                <a class=\"dropdown-item\" [routerLink]=\"['datalink-edit', 'copy', datalinks[0].key]\" queryParamsHandling=\"merge\" title=\"Copy the datalink.\">\n                        <i class=\"fa fa-copy\"></i> Copy\n                </a>\n            </li>\n            <li *ngIf=\"hubCache.canWrite && showEdit\"><a class=\"dropdown-item\" (click)=\"shareItems(true)\" title=\"Select the selected datalinks as shared.\"><i class=\"fa fa-group\"></i> Share</a></li>\n            <li *ngIf=\"hubCache.canWrite && showEdit\"><a class=\"dropdown-item\" (click)=\"shareItems(false)\" title=\"Select the selected datalinks as private.\"><i class=\"fa fa-user-secret\"></i> Private</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"createDatajob()\" title=\"Create data job from selected datalinks\"><i class=\"fa fa-calendar\"></i> New Datajob</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"createDatalinkTests()\" title=\"Create test from the selected datalinks\"><i class=\"fa fa-calendar\"></i> New Datalink Tests</a></li>\n\n            <li><a class=\"dropdown-item\" (click)=\"export()\" title=\"Export the metadata for the selected datalinks to a local file.\"><i class=\"fa fa-save\"></i> Save Locally</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"delete()\" title=\"Delete the metadata for the selected datalinks.\"><span class=\"text-danger\"><i class=\"fa fa-trash-o text-danger\"></i> Delete</span></a></li>\n    \n            <li class=\"list-group-item list-group-item-heading list-group-item-info\">Operations</li>\n            <li *ngIf=\"datalink\">\n                <a class=\"dropdown-item\" [routerLink]=\"['datalink-preview', datalinks[0].key, false]\" queryParamsHandling=\"merge\"  title=\"Preview the data output from the datalink.\"><i class=\"fa fa-table\"></i> Preview Datalink</a>\n                <a class=\"dropdown-item\" [routerLink]=\"['datalink-preview', datalinks[0].key, true]\" queryParamsHandling=\"merge\"  title=\"Preview the data changes when the datalink is run.\"><i class=\"fa fa-table\"></i> Preview Datalink (changes)</a>\n                <a class=\"dropdown-item\" *ngFor=\"let table of targetTables\" [routerLink]=\"['table-preview', table.key]\" queryParamsHandling=\"merge\" [title]=\"'Preview the target table ' + table.name\"><i class=\"fa fa-table\"></i> Preview {{table.name}}</a>\n            </li>\n            <li><a class=\"dropdown-item\" *ngIf=\"datalinks.length == 1\" [routerLink]=\"['results']\" [queryParams]=\"{datalinkKeys: [datalinks[0].key]}\" title=\"Show the execution history \"><i class=\"fa fa-history\"></i> Execution History</a></li>\n\n            <li><a class=\"dropdown-item\" (click)=\"download()\" title=\"Download data from selected datalinks data to csv files.\"><i class=\"fa fa-cloud-download\"></i> Download Data</a></li>\n\n            <ng-template [ngIf]=\"hubCache.canWrite\">\n                <li><a class=\"dropdown-item\" (click)=\"cancelDatalinks()\" title=\"Cancel selected running datalinks.\"><span class=\"text-danger\"><i class=\"fa fa-ban\"></i> Cancel Datalinks</span> </a></li>\n                <li><a class=\"dropdown-item\"  (click)=\"runDatalinks(false, false)\" title=\"Run selected datalinks now.\"><i class=\"fa fa-bolt\"></i> Run</a></li>\n                <li><a class=\"dropdown-item\" (click)=\"runDatalinksOptions()\" title=\"Run selected datalinks with options.\"><i class=\"fa fa-bolt\"></i> Run (options)</a></li>\n            </ng-template>\n\n            <ng-template [ngIf]=\"datalinks.length == 1\">\n                <li class=\"list-group-item list-group-item-heading list-group-item-info\">Related</li>\n                <li *ngFor=\"let datalink of relatedDatalinks\">\n                    <a class=\"dropdown-item\" (click)=\"navigateToDatalink(datalink)\">(Datalink) {{datalink.name}}</a>\n                </li>\n                <li *ngFor=\"let datajob of relatedDatajobs\">\n                    <a class=\"dropdown-item\" (click)=\"navigateToDatajob(datajob)\">(DataJob) {{datajob.name}}</a>\n                </li>\n            </ng-template>\n        </ng-template>\n    </d-button-dropdown>\n</ng-template>","import { Component, Input, OnDestroy, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription} from 'rxjs';\nimport { HubCache } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { DexihDatalink, DexihTable, DexihDatajob, DexihHub, DownloadObject, eSourceType, eDownloadFormat, eDataObjectType } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n    selector: 'actions-datalink-button',\n    templateUrl: './actions-datalink-button.component.html'\n})\n\nexport class ActionsDatalinkButtonComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() public datalinks: Array<DexihDatalink>;\n    @Input() public showEdit = true;\n    @Input() public pullRight = false;\n\n    public hubCache: HubCache;\n\n    relatedDatalinks = [];\n    relatedDatajobs = [];\n\n    datalink: DexihDatalink;\n    targetTables: DexihTable[] = [];\n    private cancelToken: CancelToken = new CancelToken();\n\n    private _hubCacheSubscription: Subscription;\n\n    constructor(\n        private hubService: HubService,\n        private router: Router,\n        private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n            this.hubCache = cache;\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (!this.hubCache || !this.hubCache.isLoaded()) { return; }\n\n        if (this.datalinks && this.datalinks.length > 0) {\n            // search any columns for an occurrence of the datajob.\n            this.hubCache.hub.dexihDatajobs.forEach(datajob => {\n                datajob.dexihDatalinkSteps.forEach(step => {\n                    if ( step.datalinkKey === this.datalinks[0].key) {\n                        this.relatedDatajobs.push({\n                            key: datajob.key,\n                            name: `${datajob.name} (datajob step)`\n                        });\n                    }\n                });\n            });\n\n            this.hubCache.hub.dexihDatalinks.forEach(datalink => {\n                if (datalink.sourceDatalinkTable && datalink.sourceDatalinkTable.sourceDatalinkKey === this.datalinks[0].key) {\n                    this.relatedDatalinks.push({\n                        key: datalink.key,\n                        name: `${datalink.name} (datalink source)`\n                    });\n                }\n            });\n\n            this.datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === this.datalinks[0].key);\n            if (this.datalink) {\n                this.targetTables = [];\n                this.datalink.dexihDatalinkTargets.forEach(target => {\n                    if (target.tableKey) {\n                        let table = this.hubCache.getTable(target.tableKey);\n                        if (table) {\n                            this.targetTables.push(table);\n                        }\n                    }\n                });\n            } else {\n                this.targetTables = [];\n            }\n        } else {\n            this.relatedDatajobs = [];\n            this.relatedDatalinks = [];\n        }\n    }\n\n    navigateToDatalink(datalink: DexihDatalink) {\n        this.router.navigate(['datalinks', 'datalink-edit', 'edit', datalink.key], { relativeTo: this.route.parent.parent });\n    }\n\n    navigateToDatajob(datajob: DexihDatajob) {\n        this.router.navigate(['datajobs', 'datajob-edit', datajob.key], { relativeTo: this.route.parent.parent });\n    }\n\n    delete() {\n        this.hubService.deleteDatalinks(this.datalinks);\n    }\n\n    shareItems(isShared: boolean) {\n        this.hubService.shareItems(this.datalinks.map(c => c.key), eDataObjectType.Datalink, isShared);\n    }\n\n    async runDatalinks(truncateTarget: boolean, resetIncremental: boolean) {\n        await this.hubService.runDatalinks(this.datalinks.map(c => c.key), truncateTarget, resetIncremental, null, null, null,\n            this.cancelToken);\n    }\n\n    runDatalinksOptions() {\n        let datalinks = this.datalinks.map(c => c.key);\n        let datalinkString = datalinks.join('|');\n        this.router.navigate(['datalinks', 'datalink-run', datalinkString], { relativeTo: this.route.parent.parent });\n    }\n\n    cancelDatalinks() {\n        this.hubService.cancelDatalinks(this.datalinks.map(c => c.key), this.cancelToken).catch();\n    }\n\n    createDatajob() {\n        this.hubService.setNewDatajob(this.datalinks);\n        this.router.navigateByUrl(this.hubCache.getHubUrl() + '/datajobs/datajob-new');\n    }\n\n    createDatalinkTests() {\n        let datalinkKeys = this.datalinks.map(c => c.key).join('|');\n        this.router.navigateByUrl(this.hubCache.getHubUrl() + '/datalinkTests/datalinkTest-new/' + datalinkKeys);\n    }\n\n    export() {\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        this.datalinks.forEach(datalink => { this.hubCache.cacheAddDatalink(datalink.key, hub); });\n\n        let filename = this.datalinks.length === 1 ? 'Datalink - ' + this.datalinks[0].name + '.json' : 'datalinks.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    download() {\n        let downloadItems = new Array<DownloadObject>();\n\n        this.datalinks.forEach(c => {\n            let downloadObject = new DownloadObject();\n            downloadObject.objectKey = c.key;\n            downloadObject.objectType = eDataObjectType.Datalink;\n            downloadItems.push(downloadObject);\n        });\n        this.hubService.downloadData(downloadItems, true, eDownloadFormat.Csv, this.cancelToken)\n    }\n\n}\n","export const environment = {\n  production: true,\n  apiUrl: 'https://dexih.dataexpertsgroup.com'\n};\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { HubService } from '../../../../+hub/hub.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubCache } from '../../../../+hub/hub.models';\nimport { DexihActiveAgent, eDataPrivacyStatus } from '../../../shared.models';\n\n@Component({\n\n    selector: 'dexih-remote-agent',\n    templateUrl: './remote-agent.component.html'\n})\nexport class RemoteAgentComponent implements OnInit, OnDestroy {\n    hubCache: HubCache;\n\n    activeHubAgents: Array<DexihActiveAgent>;\n\n    selectedRemoteAgent: DexihActiveAgent;\n\n    hubKey: number;\n\n    _subscription: Subscription;\n\n    eDataPrivacyStatus = eDataPrivacyStatus;\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private router: Router\n        ) {\n    }\n\n    ngOnInit() {\n        this._subscription = combineLatest(\n            this.hubService.getHubCacheObservable(),\n            this.hubService.getRemoteAgentObservable(),\n            this.authService.getRemoteAgentsObservable(),\n        ).subscribe(result => {\n            this.hubCache = result[0];\n            let remoteAgents = result[2];\n\n            if (!remoteAgents) {\n                this.selectedRemoteAgent = null;\n                this.activeHubAgents = null;\n                return;\n            }\n\n            if (this.hubCache.isLoaded()) {\n                 this.hubKey = this.hubCache.hub.hubKey;\n                 let remoteAgentHubs = this.hubCache.hub.dexihRemoteAgentHubs.filter(c => c.isAuthorized);\n                 this.activeHubAgents = [];\n                 remoteAgentHubs.forEach(r => {\n                    let remoteAgent = remoteAgents.find(c => c.remoteAgentKey === r.remoteAgentKey);\n                    if (remoteAgent) {\n                        this.activeHubAgents = this.activeHubAgents.concat(remoteAgent['activeAgents']);\n                    }\n                 });\n\n                 if (this.activeHubAgents.length > 0 ) {\n                     console.log('Remote Agents updated, count = ' + this.activeHubAgents.length);\n                    this.selectedRemoteAgent = result[1];\n                 } else {\n                     this.selectedRemoteAgent = null;\n                 }\n            } else {\n                this.hubKey = null;\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    editRemoteAgent(activeAgent: DexihActiveAgent) {\n        let remoteAgentHub = this.hubCache.hub.dexihRemoteAgentHubs\n            .find(c => c.isAuthorized && c.remoteAgentKey === activeAgent.remoteAgentKey);\n\n        this.router.navigate(['/hub', this.hubKey, 'agents', 'agent-edit', activeAgent.remoteAgentKey, remoteAgentHub.remoteAgentHubKey]);\n    }\n\n    setRemoteAgent(activeAgent: DexihActiveAgent) {\n        this.hubService.setCurrentRemoteAgent(activeAgent);\n    }\n\n    refresh() {\n        this.authService.pingRemoteAgents();\n    }\n}\n","<menu-parent [name]=\"selectedRemoteAgent ? selectedRemoteAgent.name : 'No Active Agent'\">\n    <ng-template #item>\n        <encryption-status-icon *ngIf=\"selectedRemoteAgent\" [isEncrypted]=\"selectedRemoteAgent?.isEncrypted\"></encryption-status-icon>\n        <span *ngIf='!selectedRemoteAgent' class=\"text-danger\">\n            <i class=\"fa fa-fw fa-lg fa-exclamation-circle\" title=\"No remote agent is available for this hub.\"></i>\n        </span>\n    </ng-template>\n    <ng-template [ngIf]=\"activeHubAgents\">\n        <li class=\"nav-item\" *ngFor=\"let activeAgent of activeHubAgents\">\n            <a class=\"nav-link\" (click)=\"setRemoteAgent(activeAgent)\">\n                <encryption-status-icon class=\"mr-1\" [isEncrypted]=\"activeAgent.isEncrypted\"></encryption-status-icon>\n                {{activeAgent.name}}\n                <a (click)=\"editRemoteAgent(activeAgent)\" class=\"btn btn-xs btn-primary float-right text-white\"><i class=\"fa fa-edit\"></i></a>\n            </a>\n        </li>\n        <div class=\"dropdown-divider\"></div>\n        <li *ngIf=\"hubCache.canWrite\" class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/hub/{{hubKey}}/agents\">\n                <i class=\"fa fa-wrench\"></i> Manage Agents</a>\n        </li>\n        <li *ngIf=\"hubCache.canWrite\" class=\"nav-item\">\n            <a class=\"nav-link\" (click)=\"refresh()\">\n                <i class=\"fa fa-refresh\"></i> Refresh Agents</a>\n        </li>\n    </ng-template>\n</menu-parent>","import { Component, Input, OnInit, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { DexihApi, ApiData, eApiStatus, eDownloadUrlType } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n    selector: 'api-status',\n    templateUrl: './api-status.component.html'\n})\nexport class ApiStatusComponent implements OnInit, OnDestroy {\n    @Input() public apiKey: number;\n    @Output() public progressClick = new EventEmitter();\n\n    private _subscription: Subscription;\n    private _currentStatusSubscription: Subscription;\n    public cancelToken: CancelToken = new CancelToken();\n\n    private api: DexihApi;\n    public apiData: ApiData;\n\n    eApiStatus = eApiStatus;\n\n    public showCancel = false;\n\n    public statusClass: string;\n    public statusIcon: string;\n    public urls: any[];\n\n    public proxyUrl;\n\n    constructor(private hubService: HubService) {\n    }\n\n    ngOnInit() {\n        this._subscription = combineLatest(\n            this.hubService.getHubCacheObservable(),\n            this.hubService.getRemoteAgentObservable()\n        ).subscribe(result => {\n            let cache = result[0];\n            let remoteAgent = result[1];\n\n            if (this.apiKey) {\n                this.api = cache.hub.dexihApis.find(c => c.key === this.apiKey);\n                if (this.api) {\n                    this._currentStatusSubscription = this.api['currentStatus'].subscribe(apiData => {\n\n                        this.apiData = apiData;\n\n                        if (apiData) {\n\n                            if (apiData.apiStatus === eApiStatus.Activated && remoteAgent) {\n                                this.urls = remoteAgent.downloadUrls.filter(c => c.downloadUrlType !== eDownloadUrlType.Proxy).map(url => {\n                                    return {\n                                        downloadType: url.downloadUrlType,\n                                        downloadUrl: url.url + '/api/' + apiData.securityKey,\n                                        testUrl: url.url + '/api/' + apiData.securityKey + '/ping'\n                                    };\n                                });\n\n                                let proxy = remoteAgent.downloadUrls.find(c => c.downloadUrlType === eDownloadUrlType.Proxy);\n                                if (proxy) {\n                                    this.urls.push({\n                                        downloadType: 'Proxy',\n                                        downloadUrl: window.location.origin + '/api/remote/api/'\n                                            + remoteAgent.instanceId + '/' + apiData.securityKey,\n                                        testUrl: proxy.url + '/ping'\n                                    });\n                                }\n\n                                if (apiData.errorCount === 0 ) {\n                                    this.statusClass = 'success';\n                                    this.statusIcon = 'bolt';\n                                } else {\n                                    this.statusClass = 'warning';\n                                    this.statusIcon = 'exclamation-circle';\n                                }\n                            } else {\n                                this.statusClass = 'danger';\n                                this.statusIcon = 'chain-broken';\n                                this.urls = [];\n                            }\n                        } else {\n                            this.statusClass = 'danger';\n                            this.statusIcon = 'chain-broken';\n                            this.urls = [];                        }\n                    });\n                }\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._currentStatusSubscription) { this._currentStatusSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    deactivate() {\n        if (this.apiKey) {\n            this.hubService.deactivateApis([this.apiKey], this.cancelToken);\n        }\n    }\n\n    activate() {\n        if (this.apiKey) {\n            this.hubService.activateApis([this.api], this.cancelToken);\n        }\n    }\n\n    onProgressClick($event: any) {\n        this.progressClick.emit($event);\n    }\n\n    copyToClipboard(val: string) {\n        let selBox = document.createElement('textarea');\n        selBox.style.position = 'fixed';\n        selBox.style.left = '0';\n        selBox.style.top = '0';\n        selBox.style.opacity = '0';\n        selBox.value = val;\n        document.body.appendChild(selBox);\n        selBox.focus();\n        selBox.select();\n        document.execCommand('copy');\n        document.body.removeChild(selBox);\n      }\n\n}\n\n","<div class=\"list-group\">\n        <div class=\"list-group-item list-group-item-{{statusClass}}\" *ngIf=\"apiData\" >\n                <i class=\"fa fa-{{statusIcon}}\"></i>\n            <div class=\"d-inline\">{{apiData.apiStatus}} endpoint:</div>\n            <div class=\"d-inline\">{{apiData.successCount}} success, {{apiData.errorCount}} errors.</div>\n            <a *ngIf=\"apiData.apiStatus === eApiStatus.Activated\" class=\"btn btn-sm btn-danger float-right\" title=\"Deactivate the Api\" (click)=\"deactivate()\">\n                <i class=\"fa fa-ban\"></i>\n            </a>\n            <a  *ngIf=\"apiData.apiStatus !== eApiStatus.Activated\" class=\"btn btn-sm btn-success float-right\" title=\"Activate the Api\" (click)=\"activate()\">\n                <i class=\"fa fa-check\"></i>\n            </a>\n        </div>\n        <div class=\"list-group-item list-group-item-danger\" *ngIf=\"!apiData\" >\n            <i class=\"fa fa-chain-broken\"></i>\n            <div class=\"d-inline\">Deactivated </div>\n            <a class=\"btn btn-sm btn-success float-right\" title=\"Activate the Api\" (click)=\"activate()\">\n                <i class=\"fa fa-check\"></i>\n            </a>\n        </div>\n            \n    <div class=\"list-group-item\" *ngFor=\"let url of urls\">\n        <form-textarea [label]=\"url.downloadType + ' endpoint'\" [showCopy]=\"true\" [isHidden]=\"true\" [showPreview]=\"false\" [disabled]=\"true\" [rows]=\"3\" [value]=\"url.downloadUrl\" >\n            <a class=\"btn btn-sm btn-outline-primary float-right ml-1\" [href]=\"url.testUrl\" target=\"_blank\">test</a>\n        </form-textarea>\n        \n    </div>\n</div>\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription} from 'rxjs';\n\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubService } from '../../hub.service';\nimport { DexihFileFormat } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'actions-fileFormat-button',\n    templateUrl: './actions-fileFormat-button.component.html'\n})\n\nexport class ActionsFileFormatButtonComponent implements OnInit, OnDestroy {\n    @Input() public fileFormat: DexihFileFormat;\n    @Input() public pullRight = false;\n\n    private _hubCacheSubscription: Subscription;\n\n        tables = [];\n\n        constructor(\n            private authService: AuthService,\n            private hubService: HubService,\n                    private router: Router,\n                    private route: ActivatedRoute) { }\n\n        ngOnInit() {\n            this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n                if (!cache.isLoaded()) { return; }\n\n                // search any columns for an occurrence of the columnValidation.\n                    cache.hub.dexihTables.forEach(tab => {\n                        let con = cache.hub.dexihConnections.find(c => c.key === tab.connectionKey);\n                        if (tab.fileFormatKey === this.fileFormat.key) {\n                            this.tables.push({\n                                name : `${tab.name} (${con ? con.name : 'undefined'})`,\n                                tableKey: tab.key,\n                            });\n                        }\n                });\n            });\n\n        }\n\n        ngOnDestroy() {\n            if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n         }\n\n        navigateToTable(col: any) {\n            this.router.navigate(['table-edit', col.tableKey], { relativeTo: this.route.parent.parent });\n        }\n\n}\n","<d-button-edit class=\"mr-1\" [routerLink]=\"['fileFormat-edit', fileFormat.key]\" queryParamsHandling=\"merge\"></d-button-edit>\n<d-button-dropdown *ngIf=\"tables.length > 0 || tables.length > 0\" buttonClass=\"btn-primary\" iconClass=\"fa fa-info-circle\" text=\"Used In\" [pullRight]=\"pullRight\">\n    <li *ngFor=\"let tab of tables\">\n        <a class=\"dropdown-item\" (click)=\"navigateToTable(tab)\">{{tab.name}}</a>\n    </li>\n</d-button-dropdown>","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { Subscription, combineLatest, Subject} from 'rxjs';\nimport { DexihMessageComponent } from '../../../../shared/ui/dexihMessage/index';\nimport { CancelToken } from '../../../../+auth/auth.models';\nimport { InputColumn, DexihColumnBase, DexihDashboard,\n    DexihActiveAgent, InputParameterBase, eDataObjectType } from '../../../shared.models';\nimport { GridsterConfig, GridType, CompactType, DisplayGrid, GridsterItem, GridsterItemComponent } from 'angular-gridster2';\n\n@Component({\n\n    selector: 'preview-dashboard',\n    templateUrl: './preview-dashboard.component.html',\n    styleUrls: ['./preview-dashboard.component.scss']\n})\nexport class PreviewDashboardComponent implements OnInit, OnDestroy {\n    @ViewChild('DexihMessage', { static: true }) public dexihMessage: DexihMessageComponent;\n\n    private _subscription: Subscription;\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    private refreshDataSubject: Subject<void> = new Subject<void>();\n    public refreshDataObservable = this.refreshDataSubject.asObservable();\n    \n    public inputColumns: InputColumn[];\n    public tableColumns: DexihColumnBase[];\n\n    public name = 'loading...';\n\n    dashboardKey: number;\n    hubKey: number;\n    eDataObjectType = eDataObjectType;\n\n    dashboard: DexihDashboard = null;\n    activeAgent: DexihActiveAgent;\n    maximizedIndex: number;\n\n    public options: GridsterConfig;\n    public parameters: InputParameterBase[];\n\n    private cancelToken = new CancelToken();\n\n    constructor(\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.params,\n                this.authService.getSharedDataIndex('', [], 50, false)\n            ).subscribe(result => {\n                let params = result[0];\n\n                this.hubKey = +params['hubKey'];\n                this.dashboardKey = +params['dashboardKey'];\n\n                this.refresh();\n            });\n        } catch (e) {\n            this.dexihMessage.addMessage(e);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    parameterChange() {\n        this.refresh();\n    }\n\n    refresh() {\n        this.authService.getDashboard(this.hubKey, this.dashboardKey).then((dashboard) => {\n            this.refreshDataSubject.next();\n\n            this.setOptions(dashboard);\n            this.dashboard = dashboard;\n            this.name = dashboard.name;\n            if (!this.parameters) {\n                this.parameters = dashboard.parameters;\n            }\n\n        }).catch(reason => {\n            this.dexihMessage.addMessage(reason);\n            this.dashboard = null;\n        });\n    }\n\n    private setOptions(dashboard: DexihDashboard) {\n        this.options = {\n            gridType: GridType.ScrollVertical,\n            compactType: CompactType.None,\n            margin: 5,\n            outerMargin: true,\n            outerMarginTop: null,\n            outerMarginRight: null,\n            outerMarginBottom: null,\n            outerMarginLeft: null,\n            useTransformPositioning: true,\n            mobileBreakpoint: 640,\n            minCols: dashboard.minCols,\n            maxCols: dashboard.maxCols,\n            minRows: dashboard.minRows,\n            maxRows: dashboard.maxRows,\n            maxItemCols: 100,\n            minItemCols: 1,\n            maxItemRows: 100,\n            minItemRows: 1,\n            maxItemArea: 2500,\n            minItemArea: 1,\n            defaultItemCols: 2,\n            defaultItemRows: 2,\n            fixedColWidth: 105,\n            fixedRowHeight: 105,\n            keepFixedHeightInMobile: false,\n            keepFixedWidthInMobile: false,\n            scrollSensitivity: 10,\n            scrollSpeed: 20,\n            enableEmptyCellClick: false,\n            enableEmptyCellContextMenu: false,\n            enableEmptyCellDrop: false,\n            enableEmptyCellDrag: false,\n            emptyCellDragMaxCols: 50,\n            emptyCellDragMaxRows: 50,\n            ignoreMarginInRow: false,\n            // setGridSize: true,\n            draggable: {\n              enabled: false,\n            },\n            resizable: {\n              enabled: false,\n            },\n            swap: false,\n            pushItems: true,\n            disablePushOnDrag: false,\n            disablePushOnResize: false,\n            pushDirections: {north: true, east: true, south: true, west: true},\n            pushResizeItems: false,\n            displayGrid: DisplayGrid.None,\n            disableWindowResize: false,\n            disableWarnings: false,\n            scrollToNewItems: false,\n            itemChangeCallback: (item, itemComponent: GridsterItemComponent) => {\n            this.itemResize(item, itemComponent);\n            },\n            itemResizeCallback: (item, itemComponent: GridsterItemComponent) => {\n            this.itemResize(item, itemComponent);\n            },\n            itemInitCallback: (item, itemComponent: GridsterItemComponent) => {\n            this.itemResize(item, itemComponent);\n            },\n          };\n    }\n\n    maximize(isMaximized: boolean, index: number) {\n        if (isMaximized) {\n            this.maximizedIndex = index;\n        } else {\n            this.maximizedIndex = -1;\n        }\n      }\n\n      public itemResize(item: GridsterItem, itemComponent: GridsterItemComponent) {\n        // console.debug(`top: ${itemComponent.el.clientTop}, left: ${itemComponent.el.clientLeft},\n        // width: ${itemComponent.el.clientWidth}, height: ${itemComponent.el.clientHeight}`)\n      }\n\n    // downloadData(format: eDownloadFormat) {\n    //     let sharedData = new SharedData();\n    //     sharedData.objectKey = this.dashboardKey;\n    //     sharedData.objectType = this.objectType;\n    //     sharedData.hubKey = this.hubKey;\n    //     sharedData.inputColumns = this.inputColumns;\n    //     sharedData.query = this.selectQuery;\n\n    //     this.hubsService.downloadData([sharedData], true, format, this.cancelToken).then(() => {\n    //         this.dexihMessage.addSuccessMessage('The download task has started.');\n    //     }).catch(reason => {\n    //         this.dexihMessage.addMessage(reason);\n    //     });\n    // }\n\n    edit() {\n        this.router.navigate(['hub', this.hubKey, 'dashboards', 'dashboard-edit', this.dashboardKey]);\n    }\n}\n","<div class=\"container-fluid\">\n    <dexih-message #DexihMessage></dexih-message>\n\n    <d-widget [title]=\"'Preview ' + name\" iconClass=\"fa fa-lg fa-fw fa-table\" [showCloseButton]=\"true\"\n        (close)=\"close()\">\n\n        <ng-template #header>\n            <d-button-refresh (click)=\"refresh()\" text=\"Reload\"></d-button-refresh>\n            <d-button-edit class=\"ml-1\"  (click)=\"edit()\"></d-button-edit>\n        </ng-template>\n\n        <div *ngIf=\"parameters\" class=\"m-3\">\n            <input-parameters-view [hubKey]=\"hubKey\" [objectType]=\"eDataObjectType.Dashboard\" [objectKey]=\"dashboardKey\" [parameters]=\"parameters\" [refreshEvent]=\"refreshDataObservable\" (onRefreshData)=\"refresh()\" (onChange)=\"parameterChange()\"></input-parameters-view>\n        </div>\n        \n        <div>\n            <div style=\"height:800px\">\n                <ng-template [ngIf]=\"dashboard\">\n                    <gridster [options]=\"options\" #gridster>\n                        <gridster-item [item]=\"{x: item.x, y: item.y, cols: item.cols, rows: item.rows, control: item}\"\n                            *ngFor=\"let item of dashboard.dexihDashboardItems; let i = index;\" \n                            [ngClass]=\"{'maximize': i === maximizedIndex}\" [hidden]=\"maximizedIndex >= 0 && i !== maximizedIndex\">\n                            <preview-dashboard-item [hubKey]=\"hubKey\" [item]=\"item\" [parentParameters]=\"parameters\" (onMaximize)=\"maximize($event, i)\" >\n                            </preview-dashboard-item>\n                        </gridster-item>\n                    </gridster>\n                </ng-template>\n            </div>\n        </div>\n    </d-widget>\n</div>","import { HttpClient, HttpHeaders, HttpRequest, HttpEventType, HttpResponse } from '@angular/common/http';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as FileSaver from 'file-saver';\nimport { BehaviorSubject, Observable, Subscription, Subject, ReplaySubject } from 'rxjs';\nimport { timeout, first, take } from 'rxjs/operators'\nimport { eLogLevel, LogFactory } from '../../logging';\nimport {\n    DexihHubAuth, ExternalLoginResult, Message,\n    User, UserLoginInfo, ExternalLogin, FileHandler, eFileStatus, RemoteToken, PromiseWithCancel, CancelToken, eHubAccess, WaitMessage\n} from './auth.models';\nimport { UserAgentApplication, AuthResponse, CacheLocation } from 'msal';\nimport { DModalComponent } from 'ngx-d-components';\nimport { Location } from '@angular/common';\nimport { DexihRemoteAgent, DexihActiveAgent, DownloadUrl, CacheManager, eClientCommand, eLoginProvider,\n    eTypeCode, ManagedTask, eManagedTaskStatus, ePermission, eSharedAccess, DexihIssue,\n    DexihDashboard, ListOfValuesItem, SharedData, eDownloadFormat, eDataObjectType, InputColumn, SelectQuery, InputParameterBase } from '../shared/shared.models';\nimport { PreviewResults } from '../+hub/hub.models';\nimport { WebSocketService} from './websocket.service';\nimport { environment } from '../../environments/environment';\nimport { Functions } from '../shared/utils/functions';\n\ndeclare var gapi: any;\n\n@Injectable()\nexport class AuthService implements OnDestroy {\n    // Create an observable user, so consuming components can update when credentials change.\n    private _currentUser = new BehaviorSubject<User>(null);\n    private _refreshUserAttempted = false;\n    private _refreshUserPromise;\n    public _hubs = new BehaviorSubject<Array<DexihHubAuth>>(null);\n    private _hubErrors = new BehaviorSubject<Array<Message>>([]);\n\n    private _displayHelp = new BehaviorSubject<boolean>(false);\n\n    private _tasks = new BehaviorSubject<Array<ManagedTask>>([]);\n\n    private _notification = new Subject<Message>();\n    private _notifications: Message[] = [];\n\n    private _logErrors = new BehaviorSubject<Message>(null);\n\n    private _waitMessages = new Map<string, WaitMessage>();\n    private _waitMessagesObserve = new BehaviorSubject<Map<string, WaitMessage>>(this._waitMessages);\n\n    private _globalCache = new ReplaySubject<CacheManager>();\n\n    private _remoteAgents = new BehaviorSubject<Array<DexihRemoteAgent>>(null);\n\n    // store the URL so we can redirect after logging in\n    public redirectUrl: string;\n\n    private _userSubscribe: Subscription;\n    private _webSocketSubscribe: Subscription;\n    private _logErrorsSubscribe: Subscription;\n\n    private modalComponent: DModalComponent;\n\n    private logger = new LogFactory('auth.service');\n\n    private updateRemoteAgentsFlag = false;\n\n    private sharedItemsIndex: SharedData[];\n\n    private webSocketService: WebSocketService;\n\n    private isInitialized = false;\n\n    private xSrfToken = null;\n\n    constructor(\n        private http: HttpClient,\n        private router: Router,\n        private route: ActivatedRoute,\n        private location: Location,\n    ) {\n    }\n\n    ngOnDestroy() {\n        this.logger.LogC(() => `ngOnDestroy.`, eLogLevel.Debug);\n\n        if (this._userSubscribe) { this._userSubscribe.unsubscribe(); }\n        if (this._webSocketSubscribe) { this._webSocketSubscribe.unsubscribe(); }\n        if (this._remoteAgents) { this._remoteAgents.unsubscribe(); }\n        if (this._logErrorsSubscribe) { this._logErrorsSubscribe.unsubscribe(); }\n    }\n\n    defaultHeaders(): HttpHeaders {\n        return new HttpHeaders({\n            'Content-Type': 'application/json',\n            'X-XSRF-TOKEN': Functions.getCookie('XSRF-TOKEN') ?? ''\n        });\n    }\n\n    initialize() {\n        // only initialize once\n        if (this.isInitialized) { return; }\n        this.isInitialized = true;\n\n        this.logger.LogC(() => 'Initializing AuthService', eLogLevel.Information);\n\n        this.webSocketService = new WebSocketService(this.location);\n\n        this.refreshGlobalCache();\n        this.refreshUser();\n\n        // whenever user login changes, update the list of hubs, and establish a websocket connection.\n        if (this._userSubscribe) { this._userSubscribe.unsubscribe(); }\n        this._userSubscribe = this.getUserObservable().subscribe(async (user) => {\n            if (user) {\n                this.logger.LogC(() => `New authorized user ${user.email}`, eLogLevel.Information);\n                this.refreshHubs();\n\n                await this.webSocketService.initializeWebSocket();\n\n                if (this._webSocketSubscribe) { this._webSocketSubscribe.unsubscribe(); }\n                this._webSocketSubscribe = this.webSocketService.getWebSocketObservable().subscribe(data => {\n                    if (data) {\n                        switch (data.command) {\n                            case eClientCommand.Disconnect: {\n                                this._remoteAgents.next(null);\n                            }\n                                break;\n                            case eClientCommand.Connect:\n                                // this.refreshGlobalCache();\n                                // this.refreshUser();\n                                this.pingRemoteAgents();\n                                break;\n                            case eClientCommand.ActiveAgentUpdate: {\n                                let remoteAgents = <DexihRemoteAgent[]>this._remoteAgents.value;\n                                if (remoteAgents) {\n                                    let activeAgent = <DexihActiveAgent>data.value;\n                                    let remoteAgent = remoteAgents.find(c => c.remoteAgentKey === activeAgent.remoteAgentKey);\n                                    if (remoteAgent) {\n                                        let existingIndex = remoteAgent['activeAgents']\n                                            .findIndex(c => c.instanceId === activeAgent.instanceId);\n                                        if (existingIndex >= 0) {\n                                            remoteAgent['activeAgents'][existingIndex] = activeAgent;\n                                        } else {\n                                            remoteAgent['activeAgents'].push(activeAgent);\n                                        }\n                                    } else {\n                                        remoteAgent = new DexihRemoteAgent();\n                                        remoteAgent.remoteAgentKey = activeAgent.remoteAgentKey;\n                                        remoteAgent.name = activeAgent.name;\n                                        remoteAgent['activeAgents'] = [activeAgent];\n                                        remoteAgents.push(remoteAgent);\n                                    }\n                                    this._remoteAgents.next(remoteAgents);\n                                } else {\n                                    let activeAgent = <DexihActiveAgent>data.value;\n                                    let remoteAgent = new DexihRemoteAgent();\n                                    remoteAgent.remoteAgentKey = activeAgent.remoteAgentKey;\n                                    remoteAgent.name = activeAgent.name;\n                                    remoteAgent['activeAgents'] = [activeAgent];\n                                    this._remoteAgents.next([remoteAgent]);\n                                }\n                                break;\n                            }\n                            case eClientCommand.RemoteAgentDelete: {\n                                let remoteAgents = <DexihRemoteAgent[]>this._remoteAgents.value;\n                                if (remoteAgents) {\n                                    let instanceId = data.value;\n                                    remoteAgents.forEach(remoteAgent => {\n                                        let existingIndex = remoteAgent['activeAgents'].findIndex(c => c.instanceId === instanceId);\n                                        if (existingIndex >= 0) {\n                                            remoteAgent['activeAgents'].splice(existingIndex, 1);\n                                        }\n                                    });\n                                    this._remoteAgents.next(remoteAgents);\n                                }\n                                break;\n                            }\n\n                            case eClientCommand.RemoteAgentUpdateKey: {\n                                let remoteAgents = <DexihRemoteAgent[]>this._remoteAgents.value;\n                                let index = remoteAgents.findIndex(c => c.remoteAgentKey === data.value);\n                                if (index >= 0) {\n                                    remoteAgents[index] = data.value;\n                                } else {\n                                    remoteAgents.push(data.value);\n                                }\n                                this._remoteAgents.next(remoteAgents);\n                                break;\n                            }\n\n                            case eClientCommand.RemoteAgentDeleteKey: {\n                                let remoteAgents = <DexihRemoteAgent[]>this._remoteAgents.value;\n                                let index = remoteAgents.findIndex(c => c.remoteAgentKey === data.value);\n                                if (index >= 0) {\n                                    remoteAgents.splice(index, 1);\n                                    this._remoteAgents.next(remoteAgents);\n                                }\n                                break;\n                            }\n\n                            case eClientCommand.HubUpdate: {\n                                this.logger.LogC(() => `hub-update: ${data.value}`, eLogLevel.Debug);\n\n                                let hub: DexihHubAuth = data.value;\n                                this.setHubAccess(hub);\n                                let hubs = this._hubs.getValue();\n                                if (hubs) {\n                                    let previousHub = hubs.find(c => c.hubKey === hub.hubKey);\n                                    if (previousHub) {\n                                        Object.assign(previousHub, hub);\n                                        this._hubs\n                                            .next(hubs.sort((a, b) => a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase() ? 1 : -1));\n                                    } else {\n                                        hubs.push(hub);\n                                        this._hubs\n                                            .next(hubs.sort((a, b) => a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase() ? 1 : -1));\n                                    }\n                                }\n                            }\n                                break;\n                            case eClientCommand.HubDelete: {\n                                this.logger.LogC(() => `hubs-delete: ${data.value}`, eLogLevel.Debug);\n\n                                let hubKeys: Array<number> = data.value;\n\n                                let hubs = this._hubs.getValue();\n                                if (hubs) {\n                                    hubKeys.forEach(hubKey => {\n                                        let previousHub = hubs.find(c => c.hubKey === hubKey);\n                                        if (previousHub) {\n                                            let index = hubs.indexOf(previousHub);\n                                            hubs.splice(index, 1);\n                                        }\n                                    });\n                                    this._hubs.next(hubs);\n                                }\n                            }\n                                break;\n                            case eClientCommand.Task:\n                                this.logger.LogC(() => `task: ${data.value}`, eLogLevel.Debug);\n\n                                const task = data.value;\n                                this.addUpdateTask(task);\n                                break;\n                            case eClientCommand.FileDownload: {\n                                this.logger.LogC(() => `file-download: ${data.value}`, eLogLevel.Debug);\n\n                                const downloadData = data.value;\n\n                                let formBody = {\n                                    HubKey: downloadData.hubKey,\n                                    SecurityToken: downloadData.securityToken,\n                                    FileReference: downloadData.reference\n                                }\n\n                                this.downloadFile('/api/Remote/GetFileStream',\n                                    formBody, downloadData.fileName, downloadData.contentType).then(() => {\n                                        // if (currentTask) {\n                                        //     currentTask.percentage = 100;\n                                        //     currentTask.status = eManagedTaskStatus.Success;\n                                        //     this.addUpdateTask(currentTask);\n                                        // }\n                                    }).catch(reason => {\n                                        // currentTask.percentage = 0;\n                                        // currentTask.status = eManagedTaskStatus.Error;\n                                        // currentTask.message = reason;\n                                        // this.addUpdateTask(currentTask);\n                                        this._hubErrors.next(reason);\n                                    });\n                            }\n                                break;\n                            case eClientCommand.DownloadReady: {\n                                this.logger.LogC(() => `download-ready ${data.value.url}`, eLogLevel.Debug);\n\n                                if (data.value.url.startsWith('http://')) {\n                                    this.modalComponent.confirm(\n                                        'Download (NOT ENCRYPTED)',\n                                        // tslint:disable-next-line:max-line-length\n                                        'Your download is ready from a remote agent that is not configured for encrypted (https) downloads.  Would you still like to download the data?',\n                                        'Download Now',\n                                        'Discard'\n                                    ).then((result) => {\n                                        if (result) {\n                                            window.open(data.value.url);\n                                        }\n                                    }).catch(reason => {\n                                        this._hubErrors.next(reason);\n                                    });\n                                } else {\n                                    let newWin = window.open(data.value.url);\n\n                                    if (!newWin || newWin.closed || typeof newWin.closed === 'undefined') {\n                                        this.modalComponent.confirm(\n                                            'Download ready',\n                                            'Your download is ready.  Click here to download directly.',\n                                            'Download Now',\n                                            'Discard'\n                                        ).then((result) => {\n                                            if (result) {\n                                                window.open(data.value.url);\n                                            }\n                                        }).catch(reason => {\n                                            this._hubErrors.next(reason);\n                                        });\n                                    }\n                                }\n                            }\n                                break;\n                        }\n                    }\n                });\n            }\n        });\n\n        if (this._logErrorsSubscribe) { this._logErrorsSubscribe.unsubscribe(); }\n        this._logErrorsSubscribe = this._logErrors.asObservable().subscribe((logMessage: Message) => {\n            if (!logMessage) { return; }\n\n            let headers = this.defaultHeaders(); // new HttpHeaders({ 'Content-Type': 'application/json' });\n\n            const m = {\n                message: logMessage.message,\n                details: logMessage.exceptionDetails,\n                context: 'global',\n                url: this.router.url\n            };\n\n            this.logger.LogC(() =>\n                `Global Error (this has been logged for further analysis)\\n\n                Message: ${logMessage.message}\\n\n                Details: ${logMessage.exceptionDetails}\\n\n                Url: ${this.router.url}\\n\n            `, eLogLevel.Error);\n\n            const body = JSON.stringify(m);\n\n            this.http.post<Message>(this.getApiUrl('/api/Account/LogError'),\n                body,\n                { withCredentials: true, headers: headers }).subscribe(() => {\n                // doesn't matter what is returned.\n            });\n        });\n    }\n\n    // redirects a link click to either a route or an external web site based on the link format\n    // the event should be from the click event (click)=\"getRoute(event)\"\n    getRoute(event) {\n        let element = event.target;\n        while (element) {\n            let link: string = element.getAttribute('href');\n      \n            if (link) {\n                if (link.endsWith('.md') && !link.startsWith('http')) {\n                  this.router.navigate([], { relativeTo: this.route, queryParams: {'path': link} });\n                } else if (link.startsWith('route:')) {\n                  // don't allow link clicks unless logged in\n                } else if (link.startsWith('unsafe:route:')) {\n                    let route = link.substr(13);\n                    this.router.navigate([route]);\n                } else if (link.startsWith('#')) {\n                    this.router.navigate(['.', link]);\n                } else {\n                    window.open(link);\n                }\n                event.preventDefault();\n            }\n      \n            element = element.parentElement;\n        }\n      }\n\n    // // converts a string from underscore notation to camel case\n    // toCamelCase(str): string {\n    //     return str.substring(0, 1).toLowerCase() +\n    //         str.substring(1).replace(/_([a-z])(?=[a-z]|$)/g, function ($0, $1) { return $1.toUpperCase(); });\n    // }\n\n    // // this function adds alternative getters and setters for the camel cased counterparts\n    // // to the runtime message's prototype (i.e. without having to register a custom class):\n    // addCamelCase(type) {\n    //     // type.name = this.toCamelCase(type.name);\n    //     if (type.fieldsArray) {\n    //         type.fieldsArray.forEach(field => {\n    //             field.name = this.toCamelCase(field.name);\n    //         });\n    //     }\n\n    //     // flatten oneofs array\n    //     if (type.oneofsArray) {\n    //         type.oneofsArray.forEach(oneof => {\n    //             oneof.name = this.toCamelCase(oneof.name);\n    //         });\n    //     }\n    //     return type;\n    // }\n\n    setHubAccess(hub: DexihHubAuth) {\n        if (hub.dexihHubUsers.findIndex(c => c.permission === ePermission.Owner || c.permission === ePermission.User) >= 0) {\n            hub['hubAccess'] = eHubAccess.User;\n          } else if (hub.dexihHubUsers.findIndex(c => c.permission === ePermission.FullReader) >= 0) {\n            hub['hubAccess'] = eHubAccess.ReadOnly;\n          } else if (hub.sharedAccess === eSharedAccess.Public || hub.sharedAccess === eSharedAccess.Registered) {\n            hub['hubAccess'] = eHubAccess.Public;\n          }\n    }\n\n    // set available remoteAgents\n    getRemoteAgentsObservable(): Observable<DexihRemoteAgent[]> {\n        return this._remoteAgents.asObservable();\n    }\n\n    getRemoteAgentsPromise(): Promise<DexihRemoteAgent[]> {\n        // return new Promise<DexihRemoteAgent[]>((resolve, reject) => {\n        //   let subscription = this._remoteAgents.subscribe(\n        //     result => {\n        //         resolve(result);\n        //         subscription.unsubscribe();\n        //     },\n        //     error => {\n        //         reject(error);\n        //     }\n        //     );\n        // });\n\n        return this._remoteAgents.asObservable().pipe(take(1)).toPromise();\n    }\n\n    // gets an instance of a remote agent.\n    getRemoteAgent(remoteAgentKey: number): DexihRemoteAgent {\n        let remoteAgents = this._remoteAgents.value;\n        if (remoteAgents) {\n            return remoteAgents.find(c => c.remoteAgentKey === remoteAgentKey);\n        } else {\n            return null;\n        }\n    }\n\n    getAuthErrorsObservable(): Observable<Array<Message>> {\n        return this._hubErrors.asObservable();\n    }\n\n    getAuthErrors(): Array<Message> {\n        return this._hubErrors.value;\n    }\n\n    public getUserObservable(): Observable<User> {\n        return this._currentUser.asObservable();\n    }\n\n    public getUser(): User {\n        if (this._currentUser) {\n            return this._currentUser.value;\n        } else {\n            return null;\n        }\n    }\n\n    public getDisplayHelp(): Observable<boolean> {\n        return this._displayHelp.asObservable();\n    }\n\n    public setDisplayHelp(value: boolean) {\n        this._displayHelp.next(value);\n    }\n\n\n    // if logged in returns the user, otherwise returns null.\n    public isLoggedIn(): Promise<User> {\n        if (!this._refreshUserAttempted) {\n            return Promise.resolve(this._currentUser.value);\n        } else {\n            return this.refreshUser();\n        }\n    }\n\n    public getWebSocketObservable() {\n        return this.webSocketService?.getWebSocketObservable();\n    }\n\n    public getWebSocketStatusObservable() {\n        return this.webSocketService?.getWebSocketStatusObservable();\n    }\n\n    public getWebSocketConnectionId() {\n        return this.webSocketService?.getWebSocketConnectionId();\n    }\n\n    public JsonNoNulls(data) {\n        return JSON.stringify(data, (key, value) => {\n            // don't bother saving the null values.\n            if (value === null) { return undefined; }\n\n            switch (key) {\n                case 'currentStatus':\n                case 'entityStatus':\n                case 'previousStatus':\n                case 'runTime':\n                    return undefined;\n            }\n\n            return value;\n        });\n    }\n\n    public getApiUrl(url) {\n        if (environment.apiUrl ) {\n            return environment.apiUrl + url;\n        } else {\n            // adds path information if the app is installed under a subfolder.\n            return this.location.prepareExternalUrl(url);\n        }\n    }\n\n    // post form data\n    public postForm(url, data, waitMessage = 'Please wait while the operation completes.', cancelToken = null): Promise<any> {\n        // let headers = new HttpHeaders({\n        //     // 'Authorization': `Bearer ${authToken}`,\n        //     // 'Content-Type': 'multipart/form-data'\n        // });\n\n        let headers = new HttpHeaders({\n            'X-XSRF-TOKEN': Functions.getCookie('XSRF-TOKEN') ?? ''\n        });\n        // const headers = this.defaultHeaders();\n\n        return this.postBody(url, data, headers, waitMessage, cancelToken);\n    }\n\n    // posts a command that will be collected from a remoteAgent\n    public postRemote<T>(url: string, data, remoteAgent: DexihActiveAgent,\n        waitMessage = 'Please wait while the operation completes.', cancelToken: CancelToken = null): PromiseWithCancel<T> {\n        \n        let messageKey = this.addWaitMessage(waitMessage, null, cancelToken);\n\n        if (!cancelToken) {\n            cancelToken = new CancelToken();\n        }\n\n        let promise = new PromiseWithCancel<any>((resolve, reject) => {\n\n            // post the command to the web server, and receive unique id that can call the remote agent.\n            this.postRemoteGetKey(url, data, remoteAgent, cancelToken).then(key => {\n\n                // call the remote agent with the unique id.\n                this.getRemoteData<T>(remoteAgent, key, cancelToken, 'download').then(result => {\n                    this.removeWaitMessage(messageKey);\n                    resolve(result);\n                }).catch(reason => {\n                    this.removeWaitMessage(messageKey);\n                    reject(reason);\n                    // reject(`The request failed to the remote agent at ${url} for reason: ${reason}`);\n                });\n            }).catch(reason => {\n                this.removeWaitMessage(messageKey);\n                reject(reason);\n            });\n        });\n\n        return promise;\n    }\n\n    public postRemoteGetKey(url: string, data, remoteAgent: DexihActiveAgent,\n         cancelToken: CancelToken): PromiseWithCancel<string> {\n        if (!cancelToken) {\n            cancelToken = new CancelToken();\n        }\n\n        // let headers = new HttpHeaders({\n        //     // 'Authorization': `Bearer ${authToken}`,\n        //     'Content-Type': 'application/json'\n        // });\n\n        const headers = this.defaultHeaders();\n       \n        if (!cancelToken) {\n           cancelToken = new CancelToken();\n       }\n\n        let promise = new PromiseWithCancel<any>((resolve, reject) => {\n            if (!remoteAgent) {\n                reject(new Message(false, 'The request failed, as there are no available remote agents.', null, null));\n                return;\n            }\n\n            data.remoteAgentId = remoteAgent.instanceId;\n\n            // get the best download route\n            this.getBestDownloadUrl(remoteAgent, 0).then(downloadUrl => {\n                data.downloadUrl = downloadUrl;\n\n                let json = this.JsonNoNulls(data);\n\n                // post command to api server, and return the unique key which can be\n                // used to collect the results form the remote agent.\n                const apiUrl = this.getApiUrl(url);\n                this.http.post(apiUrl, json, { withCredentials: true, headers: headers, responseType: 'text' })\n                .toPromise().then(key => {\n                    resolve(key);\n                }).catch(reason => {\n\n                    // special return code, which means the remote agent has changed.\n                    if (reason.status === 426) {\n\n                        // the new agent is returned as part of the error.\n                        remoteAgent = JSON.parse(reason.error);\n\n                        // run the query again with the new remote agent.\n                        this.getBestDownloadUrl(remoteAgent, 0).then(downloadUrl2 => {\n                            localStorage.setItem(`hub-remote-agent-${data.hubKey}`, JSON.stringify(remoteAgent));\n                            data.downloadUrl = downloadUrl2;\n                            data.remoteAgentId = remoteAgent.instanceId;\n                            json = this.JsonNoNulls(data);\n                            this.http.post(apiUrl, json, { withCredentials: true, headers: headers, responseType: 'text' })\n                            .toPromise().then(key => {\n                                resolve(key);\n                            }).catch(reason2 => reject(reason2));\n                        }).catch(reason2 => reject(reason2));\n                    } else {\n                        reject(this.httpError(url, reason));\n                    }\n                });\n            }).catch(reason => {\n                reject(reason);\n            });\n        });\n\n        return promise;\n    }\n\n    public postFormRemoteGetKey(url: string, formData: FormData, remoteAgent: DexihActiveAgent,\n        cancelToken: CancelToken): PromiseWithCancel<string> {\n       if (!cancelToken) {\n           cancelToken = new CancelToken();\n       }\n\n       formData.append('remoteAgentId', remoteAgent.instanceId);\n\n       let promise = new PromiseWithCancel<any>((resolve, reject) => {\n           this.getBestDownloadUrl(remoteAgent, 0).then(downloadUrl => {\n            //    if (downloadUrl && downloadUrl.downloadUrlType === eDownloadUrlType.Proxy) {\n            //         formData.append('responseUrl', downloadUrl.url);\n            //    }\n\n            formData.append('downloadUrlJson', JSON.stringify(downloadUrl));\n\n               this.http.post(this.getApiUrl(url), formData, { withCredentials: true, responseType: 'text' })\n               .toPromise().then(key => {\n                   resolve(key);\n               }).catch(reason => {\n                   reject(this.httpError(url, reason));\n               });\n           }).catch(reason => {\n               reject(reason);\n           });\n       });\n\n       return promise;\n   }\n\n\n\n    /// posts to api, and returns raw result.\n    public postGetRaw(url: string, data, waitMessage = 'Please wait while the operation completes.',\n      cancelToken: CancelToken): PromiseWithCancel<string> {\n        let messageKey = this.addWaitMessage(waitMessage);\n       if (!cancelToken) {\n           cancelToken = new CancelToken();\n       }\n\n    //    let headers = new HttpHeaders({\n    //        // 'Authorization': `Bearer ${authToken}`,\n    //        'Content-Type': 'application/json'\n    //    });\n\n        const headers = this.defaultHeaders();\n\n       let promise = new PromiseWithCancel<any>((resolve, reject) => {\n            this.http.post(this.getApiUrl(url), this.JsonNoNulls(data), { withCredentials: true, headers: headers, responseType: 'text' })\n            .toPromise().then(value => {\n                this.removeWaitMessage(messageKey);\n                resolve(value);\n            }).catch(reason => {\n                this.removeWaitMessage(messageKey);\n                reject(this.httpError(url, reason));\n            });\n       });\n\n       return promise;\n   }\n\n    // returns a url to upload files to\n    public postRemoteUpload(url: string, data, remoteAgent: DexihActiveAgent,\n        waitMessage = 'Please wait while the operation completes.', cancelToken: CancelToken):\n            PromiseWithCancel<{url: string, key: string}> {\n        let messageKey = this.addWaitMessage(waitMessage);\n        if (!cancelToken) {\n            cancelToken = new CancelToken();\n        }\n\n        // let headers = new HttpHeaders({\n        //     // 'Authorization': `Bearer ${authToken}`,\n        //     'Content-Type': 'application/json'\n        // });\n\n        const headers = this.defaultHeaders();\n\n        data.remoteAgentId = remoteAgent.instanceId;\n\n        let promise = new PromiseWithCancel<{url: string, key: string}>((resolve, reject) => {\n            this.getBestDownloadUrl(remoteAgent, 0).then(downloadUrl => {\n                data.downloadUrl = downloadUrl;\n                // if (downloadUrl && downloadUrl.downloadUrlType === eDownloadUrlType.Proxy) {\n                //     data.responseUrl = downloadUrl.url;\n                // }\n\n                this.http.post(this.getApiUrl(url), this.JsonNoNulls(data),\n                { withCredentials: true, headers: headers, responseType: 'text' })\n                .toPromise().then(key => {\n                    this.removeWaitMessage(messageKey);\n                    resolve({url: downloadUrl.url + '/upload/' + key, key});\n                }).catch(reason => {\n                    this.removeWaitMessage(messageKey);\n                    reject(this.httpError(url, reason));\n                });\n            }).catch(reason => {\n                this.removeWaitMessage(messageKey);\n                reject(reason);\n            });\n        })\n\n        return promise;\n    }\n\n    // gets the url to execute a remote command\n    public async getRemoteUrl(activeAgent: DexihActiveAgent, key: string, command: 'upload' | 'download' | 'setRaw' = 'download',\n        extra: string): Promise<string> {\n        let baseUrl: string;\n\n        if (!activeAgent) {\n            let message = new Message(false, 'The data cannot be downloaded as there is no current remote agent.', null, null);\n            return Promise.reject(message);\n        } else if (activeAgent['currentDownloadUrl']) {\n            baseUrl = activeAgent['currentDownloadUrl'].url;\n        } else if (activeAgent.downloadUrls.length === 0) {\n            let message = new Message(false, 'Current remote agent does not have data download/upload available.', null, null);\n            return Promise.reject(message);\n        } else {\n            let download = await this.getBestDownloadUrl(activeAgent, 0);\n            baseUrl = download.url;\n        }\n\n        let downloadUrl: string;\n        downloadUrl = baseUrl + '/' + command + '/' + key;\n\n        if (extra) {\n            downloadUrl += '/' + extra;\n        }\n\n        return Promise.resolve(downloadUrl);\n    }\n\n    // gets the url to execute a remote command\n    public async getRemoteData<T>(activeAgent: DexihActiveAgent, key: string, cancelToken: CancelToken, command: 'upload' | 'download' | 'setRaw' = 'download', extra = ''): Promise<T> {\n        let downloadUrl = await this.getRemoteUrl(activeAgent, key, command, extra);\n        return this.getFromExternal<T>(downloadUrl, null, cancelToken);\n    }\n\n    // post an object which is converted to json.\n    public post<T>(url, data, waitMessage = 'Please wait while the operation completes.',\n        cancelToken: CancelToken = null): PromiseWithCancel<T> {\n        // let headers = new HttpHeaders({\n        //     // 'Authorization': `Bearer ${authToken}`,\n        //     'content-type': 'application/json'\n        // });\n\n        const headers = this.defaultHeaders();\n\n        let body: string;\n        if (data) {\n            data.clientConnectionId = this.getWebSocketConnectionId()\n            body = this.JsonNoNulls(data);\n        } else {\n            body = '{}';\n        }\n\n        return this.postBody(url, body, headers, waitMessage, cancelToken);\n    }\n\n    // posts data to the api.\n    private postBody<T>(url, body, headers, waitMessage = 'Please wait while the operation completes.',\n        cancelToken: CancelToken): PromiseWithCancel<any> {\n\n        if (!cancelToken) {\n            cancelToken = new CancelToken();\n        }\n\n        let promise = new PromiseWithCancel<T>((resolve, reject) => {\n            let messageKey = this.addWaitMessage(waitMessage);\n            this.logger.LogC(() => `post url: ${url}, data: ${body}.`, eLogLevel.Debug);\n\n            let subscription = this.http.post<T>(this.getApiUrl(url), body, { withCredentials: true, headers: headers }).subscribe(\n                result => {\n                    this.removeWaitMessage(messageKey);\n                    resolve(result);\n                }, error => {\n                    this.removeWaitMessage(messageKey);\n                    reject(this.httpError(url, error));\n                }, () => {\n                    this.removeWaitMessage(messageKey);\n                });\n\n            cancelToken.cancelMethod = () => {\n                subscription.unsubscribe();\n                reject(new Message(false, 'Cancelled', null, null));\n            }\n        }, cancelToken);\n\n        return promise;\n    }\n\n    // get from the api\n    public getFromApi<T>(url, waitMessage = 'Please wait while the operation completes.', cancelToken: CancelToken):\n        PromiseWithCancel<T> {\n        let messageKey: string = null;\n        if (waitMessage) {\n            messageKey = this.addWaitMessage(waitMessage);\n        }\n        let baseUrl = this.getApiUrl(url);\n\n        if (!cancelToken) {\n            cancelToken = new CancelToken();\n        }\n\n        let promise = new PromiseWithCancel<T>((resolve, reject) => {\n            let subscription = this.http.get<T>(baseUrl, {withCredentials: true}).subscribe(result => {\n                this.removeWaitMessage(messageKey);\n                resolve(result);\n            }, error => {\n                this.removeWaitMessage(messageKey);\n                reject(this.httpError(url, error));\n            }, () => {\n                cancelToken.cancelMethod = null;\n            });\n\n            cancelToken.cancelMethod = () => {\n                subscription.unsubscribe();\n                reject(new Message(false, 'Cancelled', null, null));\n            }\n        }, cancelToken);\n\n        return promise;\n    }\n\n    // calls an external url (mostly used for remote agent calls).\n    public getFromExternal<T>(url, waitMessage = 'Please wait while the operation completes.', cancelToken: CancelToken):\n    PromiseWithCancel<T> {\n        let messageKey: string = null;\n        if (waitMessage) {\n            messageKey = this.addWaitMessage(waitMessage);\n        }\n\n        if (!cancelToken) {\n            cancelToken = new CancelToken();\n        }\n\n        let promise = new PromiseWithCancel<T>((resolve, reject) => {\n            let subscription = this.http.get<T>(url).subscribe(result => {\n                this.removeWaitMessage(messageKey);\n                resolve(result);\n            }, error => {\n                this.removeWaitMessage(messageKey);\n                reject(this.httpError(url, error));\n            }, () => {\n                cancelToken.cancelMethod = null;\n            });\n\n            cancelToken.cancelMethod = () => {\n                subscription.unsubscribe();\n                reject(new Message(false, 'Cancelled', null, null));\n            }\n        }, cancelToken);\n\n        return promise;\n    }\n\n    private httpError(url: string, error: any): Message {\n        let message = new Message(false, 'Http Error', `Error calling ${url}.`, null);\n        if (error.error) {\n            if (error.error.error) {\n                message.message = error.error.error.message;\n                message.exceptionDetails += error.error.error.stack;\n            } else {\n                if (error.status === 400) {\n                    if (typeof(error.error) === 'string') {\n                        message = JSON.parse(error.error);\n                    } else {\n                        message = error.error;\n                    }\n                } else {\n                    message.message = error.error;\n                }\n            }\n        } else {\n            this.logger.LogC(() =>\n                `post warning error:${error}`, eLogLevel.Error);\n            if (error.status === 504) {\n                message.message = 'The Integration Hub API could not be reached.';\n            }\n            message.message = error.message;\n        }\n\n        return message;\n    }\n\n    public postConfirm<T>(url, data, waitMessage = 'Please wait while the operation completes.',\n        confirmMessage = 'Please confirm action?', cancelToken = null): Promise<T> {\n        return new Promise<T>((resolve, reject) => {\n            this.confirmDialog('Please confirm?', confirmMessage)\n            .then(result => {\n                if (result) {\n                    resolve(this.post<T>(url, data, waitMessage, cancelToken));\n                } else {\n                    reject();\n                }\n            }).catch(() => { reject(); });\n        });\n    }\n\n    \n\n    public upload(file: FileHandler): Promise<Message> {\n        return new Promise<Message>((resolve, reject) => {\n\n            if (!file.file) {\n                return new Message(false, 'The specified file was not found.', '', '');\n            }\n\n            // create a new multipart-form for every file\n            const formData: FormData = new FormData();\n            formData.append('file', file.file, file.file.name);\n\n\n            // create a http-post request and pass the form\n            // tell it to report the upload progress\n            const req = new HttpRequest('POST', file.url, formData, {\n                // withCredentials: true,\n                // headers: headers,\n                reportProgress: true\n            });\n\n            file.progress = 0;\n            file.status = eFileStatus.Uploading;\n\n            // send the http-request and subscribe for progress-updates\n            file.httpSubscription = this.http.request(req).subscribe(event => {\n                if (event.type === HttpEventType.UploadProgress) {\n\n                    // calculate the progress percentage\n                    const percentDone = Math.round(100 * event.loaded / event.total);\n\n                    // pass the percentage into the progress-stream\n                    file.status = eFileStatus.Uploading;\n                    file.progress = percentDone;\n                } else if (event instanceof HttpResponse) {\n                    if (event.body) {\n                        let result = <Message>event.body;\n                        if (result.success) {\n                            // Close the progress-stream if we get an answer form the API\n                            // The upload is complete\n                            file.status = eFileStatus.Complete;\n                            file.progress = 100;\n                            resolve(result);\n                        } else {\n                            file.status = eFileStatus.Error;\n                            file.message = result.message;\n                            file.progress = 0;\n                            reject(result);\n                        }\n                    } else {\n                        // Close the progress-stream if we get an answer form the API\n                        // The upload is complete\n                        file.status = eFileStatus.Complete;\n                        file.progress = 100;\n                        resolve(new Message(true, 'File upload successful.', '', ''));\n                    }\n                }\n            }, error => {\n                let message: Message;\n                if (error.error) {\n                    message = error.error;\n                } else {\n                    message = new Message(false, error.message, error, '');\n                }\n\n                file.status = eFileStatus.Error;\n                file.message = message.message;\n                file.progress = 0;\n\n                reject(message);\n            });\n        });\n\n    }\n\n    // converts columns returned by preview into columns which can be displayed on <d-table>\n    public constructDataTableColumns(columns: Array<any>): Array<any> {\n        let dtColumns = [];\n\n        if (columns) {\n            columns.forEach((c, index) => {\n                let name = c.logicalName ? c.logicalName : c.name;\n\n                switch (c.dataType) {\n                    case eTypeCode.DateTime:\n                        dtColumns.push({ name: index, title: name, format: 'DateTime'});\n                        break;\n                    case eTypeCode.Date:\n                        dtColumns.push({ name: index, title: name, format: 'Date'});\n                        break;\n                    case eTypeCode.Boolean:\n                        dtColumns.push({ name: index, title: name, format: 'Boolean'});\n                        break;\n                    case eTypeCode.Json:\n                        dtColumns.push({ name: index, title: name, format: 'Json'});\n                        break;\n                    case eTypeCode.Xml:\n                        dtColumns.push({ name: index, title: name, format: 'Code'});\n                        break;\n                    case eTypeCode.CharArray:\n                        dtColumns.push({name: index, title: name, format: 'CharArray'});\n                        break;\n                    case eTypeCode.Node:\n                        dtColumns.push({name: index, title: name, format: 'Node',\n                            childColumns: this.constructDataTableColumns(c.childColumns) });\n                        break;\n                    default:\n                        dtColumns.push({ name: index, title: name, format: ''});\n                }\n            });\n        }\n\n        return dtColumns;\n    }\n\n    // this needs to be set by a top level component so the dialog has a container to load into.\n    setDialogDefaultContainer(modalComponent: DModalComponent) {\n        // this.overlay.defaultViewContainer = defaultViewContainer;\n        this.modalComponent = modalComponent;\n    }\n\n    confirmDialog(title: string, body: string): Promise<boolean> {\n        return this.modalComponent.confirm(title, body, 'Confirm', 'Cancel');\n    }\n\n    promptDialog(title: string, body: string, inputPrompt = '', inputValue = ''): Promise<string> {\n        return this.modalComponent.prompt(title, body, inputPrompt, inputValue);\n    }\n\n    informationDialog(title: string, body: any, details: string = null): Promise<boolean> {\n        return this.modalComponent.information(title, body, 'Close', details);\n    }\n\n\n    public getLoginProviders(): Promise<Array<UserLoginInfo>> {\n        return this.post<Array<UserLoginInfo>>('/api/Account/ExternalLogins', null, 'Getting external login information.')\n    }\n\n    // download a file from the api.\n    public downloadFile(url, data, name, type): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            // let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n            const headers = this.defaultHeaders();\n\n            let body = this.JsonNoNulls(data);\n\n            this.http.post(this.getApiUrl(url), body, { headers: headers, responseType: 'blob' })\n                .subscribe(returnData => {\n                    // let result: any = returnData;\n                    let blob = new Blob([returnData], { type: type });\n                    // var url = window.URL.createObjectURL(blob);\n                    FileSaver.saveAs(blob, name);\n                    resolve(true);\n                }, error => {\n                    if (error.error) {\n                        let reader = new FileReader();\n                        reader.readAsText(error.error);\n                        reader.onload = function () {\n                            let message = JSON.parse(reader.result.toString());\n                            reject(message);\n                        }\n                    } else {\n                        reject(error);\n                    }\n                });\n        });\n    }\n\n\n    refreshUser(force = false): Promise<User> {\n        if (!force && this._currentUser.value) {\n            return Promise.resolve(this._currentUser.value);\n        }\n\n        if (this._refreshUserPromise) {\n            return this._refreshUserPromise;\n        }\n\n        this._refreshUserAttempted = true;\n        this._refreshUserPromise = new Promise<User>((resolve) => {\n            this.post<User>('/api/Account/GetUser', null, 'Refreshing user details...').then(result => {\n                let previousUser = this._currentUser.value;\n                if (!previousUser || (\n                    result.email !== previousUser.email &&\n                    result.firstName !== previousUser.firstName &&\n                    result.lastName !== previousUser.lastName &&\n                    result.isAdmin !== previousUser.isAdmin &&\n                    result.isInvited !== previousUser.isInvited &&\n                    result.rememberMe !== previousUser.rememberMe &&\n                    result.subscription !== previousUser.subscription &&\n                    result.terms !== previousUser.terms\n                )) {\n                    this._currentUser.next(result);\n                }\n                resolve(result);\n                this._refreshUserPromise = null;\n                // this._refreshUserAttempted = false;\n            }).catch(reason => {\n                this.logger.LogC(() => `refreshUser error:${reason.message}`, eLogLevel.Error);\n\n                this._currentUser.next(null);\n                this._hubErrors.next(reason);\n                resolve(null);\n                this._refreshUserPromise = null;\n                // this._refreshUserAttempted = false;\n                // reject(reason);\n            });\n        });\n\n        return this._refreshUserPromise;\n    }\n\n    login(user: User): Promise<User> {\n        return new Promise<User>((resolve, reject) => {\n            // call the login service, followed by get-user.\n            // The second call is to ensure the anti-forgery headers are updated when the user credentials have changed.\n            this.post('/api/Account/Login',\n                {email: user.email, password: user.password, rememberMe: user.rememberMe}, 'Authenticating...').then(() => {\n                return this.refreshUser().then(userResult => {\n                    resolve(userResult);\n                });\n            }).catch(reason => {\n                this.logger.LogC(() => `login error:${reason.message}`, eLogLevel.Error);\n\n                this._currentUser.next(null);\n                this._hubErrors.next(reason);\n                reject(reason);\n            });\n        });\n    }\n\n    googleLoadScript(): Promise<boolean> {\n        // node: safari seems to require script local\n        // original script at https://apis.google.com/js/api.js\n        // return this.loadScript('GOOGLE', '/assets/js/google-api.js');\n        return this.loadScript('GOOGLE', 'https://apis.google.com/js/api.js', true);\n    }\n\n    googleLogin(forceLogin: boolean): Promise<User> {\n        return new Promise<User>((resolve, reject) => {\n            this.getGlobalCachePromise().then(() => {\n            this.googleSignIn(forceLogin).then(externalLogin => {\n                let loginResult = this.identityLogin(eLoginProvider.Google, externalLogin.providerKey, externalLogin.authenticationToken);\n                resolve(loginResult);\n            }).catch(() => {\n                reject('Error with google login.');\n            });\n        }).catch(reason => { reject(reason); });\n        });\n    }\n\n    googleEnable(): Promise<ExternalLogin> {\n        let messageKey: string = null;\n        return new Promise<ExternalLogin>((resolve, reject) => {\n            try {\n                this.getGlobalCachePromise().then(cache => {\n                messageKey = this.addWaitMessage('Loading google sign-in scripts...');\n                this.googleLoadScript().then(() => {\n                    gapi.load('auth2', () => {\n                        gapi.auth2.init({\n                            ...{ scope: 'email', prompt: 'select_account' },\n                            client_id: cache.googleClientId\n                        }).then((auth2) => {\n                            let login: ExternalLogin = null;\n                            if (auth2.isSignedIn.get()) {\n                                let user = auth2.currentUser.get();\n                                login = new ExternalLogin();\n                                let profile = user.getBasicProfile();\n                                login.email = profile.getEmail();\n                                login.firstName = profile.getGivenName();\n                                login.lastName = profile.getFamilyName();\n                                login.providerKey = profile.Eea;\n                                login.authenticationToken = user.getAuthResponse(true).id_token;\n                                resolve(login);\n                            } else {\n                                resolve(null);\n                            }\n                        });\n                    });\n                });\n            }).catch(reason => { reject(reason); });\n\n            } catch (e) {\n                this.logger.LogC(() => `login error:${e.message}`, eLogLevel.Error);\n                this._hubErrors.next(e);\n                reject(e);\n            } finally {\n                if (messageKey) { this.removeWaitMessage(messageKey); }\n            }\n        });\n    }\n\n    googleSignIn(forceLogin: boolean): Promise<ExternalLogin> {\n        return new Promise<ExternalLogin>((resolve, reject) => {\n            try {\n                this.getGlobalCachePromise().then(cache => {\n                this.googleLoadScript().then(() => {\n                    gapi.load('auth2', () => {\n                        gapi.auth2.init({\n                            ...{ scope: 'email', prompt: 'select_account' },\n                            client_id: cache.googleClientId\n                        }).then((auth2) => {\n                            function getLoginDetails(): ExternalLogin {\n                                let login = new ExternalLogin();\n                                let profile = auth2.currentUser.get().getBasicProfile();\n                                let idToken = auth2.currentUser.get().getAuthResponse(true).id_token;\n                                login.email = profile.getEmail();\n                                login.firstName = profile.getGivenName();\n                                login.lastName = profile.getFamilyName();\n                                login.authenticationToken = idToken;\n                                login.providerKey = profile.Eea;\n                                return login;\n                            }\n                            if (!forceLogin && auth2.isSignedIn.get()) {\n                                let result = getLoginDetails();\n                                resolve(result);\n                            } else {\n                                auth2.signIn().then(() => {\n                                    let result = getLoginDetails();\n                                    resolve(result);\n                                }).catch(reason => {\n                                    reject(reason.error);\n                                });\n                            }\n                        });\n                    });\n                }).catch(reason => {\n                    reject(reason);\n                });\n            }).catch(reason => { reject(reason); });\n\n            } catch (e) {\n                this.logger.LogC(() => `login error:${e.message}`, eLogLevel.Error);\n                this._currentUser.next(null);\n                this._hubErrors.next(e);\n                reject(e);\n            }\n        });\n    }\n\n    googleSignOut(): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            try {\n                this.googleLoadScript().then(() => {\n                    let auth2 = gapi.auth2.getAuthInstance();\n                    if (auth2) {\n                        auth2.signOut().then(() => {\n                            resolve(true);\n                        });\n                    } else {\n                        resolve(false);\n                    }\n                });\n            } catch (e) {\n                this.logger.LogC(() => `google sign out error:${e.message}`, eLogLevel.Error);\n                reject(e);\n            }\n        });\n    }\n\n    microsoftApp(clientId: string): UserAgentApplication {\n        const config = {\n            auth: {\n                clientId: clientId,\n                authority: 'https://login.microsoftonline.com/common/',\n                redirectUri: location.origin + '/api/Account/MicrosoftRedirect'\n            },\n            cache: {\n                cacheLocation: <CacheLocation>'sessionStorage',\n                storeAuthStateInCookie: false\n            }\n        };\n\n        let userAgentApplication = new UserAgentApplication(config);\n\n        userAgentApplication.handleRedirectCallback((error, errorDesc) => {\n            if (error) {\n                console.log(error + ':' + errorDesc);\n            }\n        });\n\n        return userAgentApplication;\n    }\n\n\n    microsoftEnable(): Promise<ExternalLogin> {\n        let messageKey: string = null;\n        return new Promise<ExternalLogin>(async (resolve, reject) => {\n            try {\n                this.getGlobalCachePromise().then(cache => {\n\n                messageKey = this.addWaitMessage('Loading microsoft sign-in...');\n\n                let userAgentApplication = this.microsoftApp(cache.microsoftClientId);\n                let user = userAgentApplication.getAccount();\n\n                if (user) {\n                    let login = new ExternalLogin();\n\n                    let userName = user.name;\n                    let userNames = userName.split(' ');\n\n                    login.email = user.userName;\n                    login.firstName = userNames[0];\n                    login.lastName = userNames.length > 1 ? userNames[1] : '';\n                    login.providerKey = user.accountIdentifier;\n\n                    let request = {\n                        scopes: ['user.read'],\n                        // authority: 'https://login.microsoftonline.com/common/',\n                    }\n                    userAgentApplication.acquireTokenSilent(request).then(authResponse => {\n                        login.authenticationToken = authResponse.accessToken;\n                        resolve(login);\n                    }).catch(reason => {\n                        reject(reason);\n                    });\n\n                    this.removeWaitMessage(messageKey);\n                } else {\n                    resolve(null);\n                    this.removeWaitMessage(messageKey);\n                }\n            }).catch(reason => { reject(reason); });\n\n\n            } catch (e) {\n                if (messageKey) { this.removeWaitMessage(messageKey); }\n                this.logger.LogC(() => `login error:${e.message}`, eLogLevel.Error);\n\n                this._currentUser.next(null);\n                this._hubErrors.next(e);\n                reject(e);\n            }\n        });\n    }\n\n    microsoftLogin(forceLogin: boolean): Promise<User> {\n        return new Promise<User>((resolve, reject) => {\n            this.microsoftSignIn(forceLogin).then(externalLogin => {\n                let loginResult = this.identityLogin(eLoginProvider.Microsoft,\n                    externalLogin.providerKey, externalLogin.authenticationToken);\n                resolve(loginResult);\n            }).catch((reason) => {\n                reject(reason);\n            });\n\n        });\n    }\n\n    microsoftSignIn(forceLogin: boolean): Promise<ExternalLogin> {\n        let messageKey: string = null;\n        return new Promise<ExternalLogin>(async (resolve, reject) => {\n            try {\n                messageKey = this.addWaitMessage('Loading microsoft sign-in...');\n\n                this.getGlobalCachePromise().then(cache => {\n\n                let userAgentApplication = this.microsoftApp(cache.microsoftClientId);\n                let tokenPromise: Promise<AuthResponse>;\n                // let user = userAgentApplication.getUser();\n\n                if (forceLogin) {\n                    let request = {\n                        scopes: ['user.read'],\n                        // authority: 'https://login.microsoftonline.com/common/',\n                        prompt: 'select_account'\n                    }\n                    tokenPromise = userAgentApplication.loginPopup(request);\n                } else {\n                    let user = userAgentApplication.getAccount();\n                    let request = {\n                        scopes: ['user.read'],\n                        // authority: 'https://login.microsoftonline.com/common/',\n                    }\n                    if (user) {\n                        tokenPromise = userAgentApplication.acquireTokenSilent(request);\n                    } else {\n                        tokenPromise = userAgentApplication.loginPopup(request);\n                    }\n                }\n\n                tokenPromise.then(authResponse => {\n                    this.removeWaitMessage(messageKey);\n                    if (authResponse) {\n                        if (!authResponse.accessToken) {\n                            let request = {\n                                scopes: ['user.read'],\n                                // authority: 'https://login.microsoftonline.com/common/',\n                            }\n\n                            userAgentApplication.acquireTokenSilent(request).then(result => {\n                                resolve(this.microsoftAuthResponseToLogin(result));\n                            }).catch(reason => {\n                                reject(reason);\n                            });\n                        } else {\n                            resolve(this.microsoftAuthResponseToLogin(authResponse));\n                        }\n                    } else {\n                        reject(new Message(false, 'Microsoft login failed.', null, null));\n                    }\n                }).catch(reason => {\n                    this.removeWaitMessage(messageKey);\n                    reject(reason);\n                }).catch(reason => { reject(reason); });\n            });\n\n            } catch (e) {\n                if (messageKey) { this.removeWaitMessage(messageKey); }\n                this.logger.LogC(() => `login error:${e.message}`, eLogLevel.Error);\n\n                this._currentUser.next(null);\n                this._hubErrors.next(e);\n                reject(e);\n            }\n        });\n    }\n\n    private microsoftAuthResponseToLogin(authResponse: AuthResponse): ExternalLogin {\n        let user = authResponse.account;\n        let login = new ExternalLogin();\n        let userName = user.name;\n        let userNames = userName.split(' ');\n        login.email = user.userName;\n        login.firstName = userNames[0];\n        login.lastName = userNames.length > 1 ? userNames[1] : '';\n        login.authenticationToken = authResponse.accessToken;\n        login.providerKey = user.accountIdentifier;\n        return login;\n    }\n\n\n    microsoftSignOut(): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            try {\n                this.getGlobalCachePromise().then(cache => {\n                let userAgentApplication = this.microsoftApp(cache.microsoftClientId)\n                userAgentApplication.logout();\n                resolve(true);\n                }).catch(reason => { reject(reason); });\n            } catch (e) {\n                this.logger.LogC(() => `microsoft sign out error:${e.message}`, eLogLevel.Error);\n                reject(e);\n            }\n        });\n    }\n\n\n\n    // called for external identity login.\n    identityLogin(provider: eLoginProvider, providerKey: string, authenticationToken: string): Promise<User> {\n        return new Promise<User>((resolve, reject) => {\n            // call the callback api.\n            this.post('/api/Account/ExternalLogin', {\n                provider: provider,\n                providerKey: providerKey,\n                authenticationToken: authenticationToken\n            }, 'Validating external login...')\n                .then(() => {\n                    return this.refreshUser().then(userResult => {\n                        resolve(userResult);\n                    });\n                }).catch(reason => {\n                    this.logger.LogC(() => `externalLoginCallBack error:${reason.message}`, eLogLevel.Error);\n                    this._hubErrors.next(reason);\n                    reject(reason);\n                });\n        });\n    }\n\n    loadScript(id: string, src: string, isExternal = false): Promise<boolean> {\n        return new Promise<boolean>((resolve) => {\n            // if script already loaded, do nothing\n            let script = document.getElementById(id)\n            if (script) {\n                resolve(true);\n                return;\n            }\n\n            // add the script to the page.\n            let newScript = document.createElement('script');\n            newScript.id = id;\n            newScript.type = 'text/javascript';\n            newScript.async = true;\n            newScript.src = isExternal ? src : this.location.prepareExternalUrl(src);\n            newScript.onload = (() => { resolve(true); });\n            document.head.appendChild(newScript);\n        });\n    }\n\n    // redirects browser to the requested login provider.\n    externalLogin(provider: eLoginProvider): Promise<ExternalLoginResult> {\n        return new Promise<ExternalLoginResult>((resolve) => {\n            // attempt to receive external login details (this will save a leaving the page)\n            this.externalLoginCallback().then(loginResult => {\n                if (loginResult.isSignedIn) {\n                    return this.refreshUser().then(() => {\n                        resolve(loginResult);\n                    });\n                } else {\n                    resolve(loginResult);\n                }\n\n            }).catch(reason => {\n                this.logger.LogC(() => `externalLogin error:${reason.message}`, eLogLevel.Error);\n                window.location.href = '/api/Account/ExternalLogin?provider=' + provider + '&returnUrl=/auth/login';\n            });\n        });\n    }\n\n    // redirects browser to the requested login provider.\n    addExternalLogin(provider: eLoginProvider, providerKey: string, authenticationToken: string): Promise<ExternalLoginResult> {\n        return this.post<ExternalLoginResult>('/api/Account/AddExternalLogin', {\n            provider: provider,\n            providerKey: providerKey,\n            authenticationToken: authenticationToken\n        }, 'Adding an external login...')\n    }\n\n    // redirects browser to the requested login provider.\n    removeExternalLogin(provider: eLoginProvider, providerKey: string, ): Promise<boolean> {\n        return this.postConfirm<boolean>('/api/Account/RemoveExternalLogin', {\n            provider: provider,\n            providerKey: providerKey\n        }, 'Removing external login...',\n        'Are you sure you want to remove the login ' +\n        provider + ' from your available logins.  When removed you will not be able to login via ' +\n        provider + ' provider.');\n    }\n\n    // called when provider is redirected back.\n    externalLoginCallback(): Promise<ExternalLoginResult> {\n        return this.post<ExternalLoginResult>('/api/Account/ExternalLoginCallback', null, 'Completing external login...')\n    }\n\n    // register an external login\n    externalLoginConfirmation(user: User): Promise<User> {\n        return this.post<User>('/api/Account/ExternalLoginConfirmation', user, 'Confirming external login...');\n    }\n\n\n    register(user: User): Promise<User> {\n        return this.post<User>('/api/Account/Register', user, 'Registering user...');\n    }\n\n    confirmEmail(email: string, verificationCode: string): Promise<User> {\n        let user = new User(email, null, null, false);\n        user.code = verificationCode;\n\n        return this.post<User>('/api/Account/ConfirmEmail', user, 'Confirming email...');\n    }\n\n    resendConfirmationEmail(email: string): Promise<boolean> {\n        let user = new User(email, null, null, false);\n        return this.post<boolean>('/api/Account/ResendConfirmationEmail', user, 'Resending confirmation email...');\n    }\n\n    forgotPassword(email: string): Promise<boolean> {\n        let user = new User(email, null, null, false);\n        return this.post<boolean>('/api/Account/ForgotPassword', user, 'Sending forgotten password email...')\n    }\n\n    resetPassword(email: string, verificationCode: string, password: string): Promise<boolean> {\n        let user = new User(email, email, password, false);\n        user.code = verificationCode;\n\n        return new Promise<boolean>((resolve, reject) => {\n            // call the login service to reset the password.\n            this.post('/api/Account/ResetPassword', user, 'Resetting password...').then(() => {\n                // after resetting password, we can log the user in.\n                return this.refreshUser().then(() => {\n                    resolve(true);\n                });\n            }).catch(reason => {\n                this.logger.LogC(() => `resetPassword error:${reason.message}`, eLogLevel.Error);\n\n                this._hubErrors.next(reason);\n                reject(reason);\n            });\n        });\n    }\n\n    changePassword(password: string, newPassword: string): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            // call the login service to reset the password.\n            this.post('/api/Account/ChangePassword', {\n                password: password,\n                newPassword: newPassword\n            }, 'Changing password...').then(() => {\n                resolve(true);\n            }).catch(reason => {\n                this.logger.LogC(() => `changePassword error:${reason.message}`, eLogLevel.Error);\n                this._hubErrors.next(reason);\n                reject(reason);\n            });\n        });\n    }\n\n    updateUserDetails(user: User): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            // call the login service to reset the password.\n            this.post('/api/Account/UpdateDetails',\n                {\n                    userName: user.userName,\n                    firstName: user.firstName,\n                    lastName: user.lastName,\n                    subscription: user.subscription,\n                    notifyPrivateMessage: user.notifyPrivateMessage,\n                    notifySupportMessage: user.notifySupportMessage\n                }, 'Updating user details...').then(() => {\n                    this.refreshUser();\n                    resolve(true);\n                }).catch(reason => {\n                    this.logger.LogC(() => `updateUserDetails error:${reason.message}`, eLogLevel.Error);\n\n                    this._hubErrors.next(reason);\n                    reject(reason);\n                });\n        });\n    }\n\n    logout(): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            this.postConfirm<boolean>('/api/Account/Logout', null, 'Logging out current user...',\n            'Proceed to logout?  You can improve your security further after logging out by closing this opened browser').then(() => {\n                    this._currentUser.next(null);\n                    this._hubs.next(null);\n\n                    // this refresh is just to reset the XSRF token\n                    // now that the user is logged out.\n                    this.refreshUser().then(() => {\n                        this.router.navigate(['/auth/login']);\n                    });\n                }).catch(reason => {\n                    if (reason) {\n                        this.logger.LogC(() => `logout error:${reason.message}`, eLogLevel.Error);\n\n                        this._hubErrors.next(reason);\n                        reject(reason);\n                    }\n                });\n        });\n    }\n\n    public pingRemoteAgents() {\n        if (!this.updateRemoteAgentsFlag) {\n            this.updateRemoteAgentsFlag = true;\n            // update the remote agents for this hub.\n            let connectionId = this.getWebSocketConnectionId();\n            if (!connectionId) {\n                this.updateRemoteAgentsFlag = false;\n                return;\n            }\n\n            this.post('/api/Account/PingRemoteAgents', { connectionId: connectionId }, null)\n                .then(result => {\n                    let currentAgents = this._remoteAgents.getValue();\n\n                    let newAgents = <DexihRemoteAgent[]>result;\n\n                    if (currentAgents == null) {\n                        currentAgents = newAgents;\n                        newAgents.map(c => c['activeAgents'] = []);\n                    } else {\n\n                        newAgents.forEach(newAgent => {\n                            let currentAgent = currentAgents.find(c => c.remoteAgentKey === newAgent.remoteAgentKey);\n                            if (currentAgent) {\n                                let activeAgents = currentAgent['activeAgents'];\n                                Object.assign(currentAgent, newAgent);\n                                currentAgent['activeAgents'] = activeAgents;\n                            } else {\n                                newAgent['activeAgents'] = [];\n                                currentAgents.push(newAgent);\n                            }\n                        });\n\n                        for (let i = currentAgents.length - 1; i >= 0; i--) {\n                            if (newAgents.findIndex(c => c.remoteAgentKey === currentAgents[i].remoteAgentKey) < 0) {\n                                currentAgents.splice(i, 1);\n                            }\n                        }\n                    }\n                    this._remoteAgents.next(currentAgents);\n\n                }).catch(reason => {\n                    this.logger.LogC(() => `updateRemoteAgents, error: ${reason.message}.`, eLogLevel.Error);\n                    this._remoteAgents.next(null);\n                }).then(() => this.updateRemoteAgentsFlag = false);\n        }\n    }\n\n    saveRemoteAgent(remoteAgent: DexihRemoteAgent): Promise<boolean> {\n        return this.post<boolean>('/api/Account/SaveRemoteAgent', remoteAgent, 'Saving remote agent details...');\n    }\n\n    // scans each available download url in order, to find one this client can access.\n    public getBestDownloadUrl(activeAgent: DexihActiveAgent, position: number): Promise<DownloadUrl> {\n        return new Promise<DownloadUrl>((resolve, reject) => {\n            if (position >= activeAgent.downloadUrls.length) {\n                let message = new Message(false, 'The client cannot connect to any of the data download/upload endpoints.', null, null);\n                reject(message);\n                return;\n            }\n\n            // if there is only one location, then save a ping test.\n            if (activeAgent.downloadUrls.length === 1) {\n                resolve(activeAgent.downloadUrls[0]);\n                return;\n            }\n\n            if (activeAgent['currentDownloadUrl']) {\n                resolve(activeAgent['currentDownloadUrl']);\n                return;\n            }\n\n            let url = activeAgent.downloadUrls[position].url + '/ping';\n\n            let messageKey = this.addWaitMessage('Testing remote agent connectivity...');\n\n            this.http.get(url).pipe(timeout(5000)).subscribe(() => {\n                activeAgent['currentDownloadUrl'] = activeAgent.downloadUrls[position];\n                this.removeWaitMessage(messageKey);\n                resolve(activeAgent['currentDownloadUrl']);\n            }, () => {\n                this.removeWaitMessage(messageKey);\n                this.getBestDownloadUrl(activeAgent, position + 1).then(result => {\n                    resolve(result);\n                }).catch(msg => {\n                    reject(msg);\n                });\n            });\n        });\n    }\n\n    refreshHubs(): void {\n        this.post<DexihHubAuth[]>('/api/Account/GetAuthorizedHubs', null, 'Getting authorized hubs...').then(result => {\n            let hubs = result.sort((a, b) => a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase() ? 1 : -1);\n            hubs.forEach(hub => {\n                this.setHubAccess(hub);\n            });\n            this._hubs.next(hubs);\n        }).catch(reason => {\n            this.logger.LogC(() => `refreshHubs error:${reason.message}`, eLogLevel.Error);\n\n            this._hubErrors.next(reason);\n            this._hubs.next(null);\n        });\n    }\n\n    getHubsObservable(): Observable<Array<DexihHubAuth>> {\n        return this._hubs.asObservable();\n    }\n\n    getHubs(): Array<DexihHubAuth> {\n        return this._hubs.value;\n    }\n\n    saveHub(hub: DexihHubAuth): Promise<DexihHubAuth> {\n        return this.post<DexihHubAuth>('/api/Account/SaveHub', hub, 'Saving hub details...');\n    }\n\n    saveIssue(issue: DexihIssue): Promise<DexihIssue> {\n        return this.post<DexihIssue>('/api/Account/SaveIssue', issue, 'Creating issue ... ');\n    }\n\n    deleteIssues(issueKeys: number[]): Promise<boolean> {\n        return new Promise((resolve, reject) => {\n            this.confirmDialog('Delete Issues', 'Please confirm that you would like to delete the selected issues.').then(c => {\n                if(c) {\n                    resolve(this.post('/api/Account/DeleteIssues', {issueKeys: issueKeys}, 'Deleting issues ... '));\n                } else {\n                    reject();\n                }\n            }).catch(reason => {\n                reject(reason);\n            });;\n        });\n    }\n\n    getIssue(issueKey: number, cancelToken: CancelToken): Promise<DexihIssue> {\n        return this.post<DexihIssue>('/api/Account/GetIssue', {issueKey: issueKey}, 'Getting issues ... ', cancelToken);\n    }\n\n    getIssues(cancelToken: CancelToken): Promise<DexihIssue[]> {\n        return this.post<DexihIssue[]>('/api/Account/GetIssues', { }, 'Getting issues ... ', cancelToken);\n    }\n\n    addIssueComment(issueKey: number, comment: string) {\n        return this.post<DexihIssue>('/api/Account/AddIssueComment', {issueKey: issueKey, comment: comment}, 'Getting issues ... ');\n    }\n\n    deleteIssueComments(issueCommentKeys: number[]): Promise<DexihIssue> {\n        return new Promise((resolve, reject) => {\n            this.confirmDialog('Delete Issues', 'Please confirm that you would like to delete the selected issue comments.').then(c => {\n                if(c) {\n                    resolve(this.post('/api/Account/DeleteIssueComments', {issueCommentKeys: issueCommentKeys}, 'Deleting issue comments... '));\n                } else {\n                    reject();\n                }\n            }).catch(reason => {\n                reject(reason);\n            });;\n        });\n    }\n\n    hubNameExists(hubKey: number, hubName: string): boolean {\n        if (this._hubs.value) {\n            return this._hubs.value.findIndex(c => c.name === hubName && c.hubKey !== hubKey && c.isValid) >= 0 ? true : false;\n        } else {\n            return false;\n        }\n    }\n\n    deleteHubs(hubs: Array<DexihHubAuth>): Promise<boolean> {\n        let hubNames = hubs.map(c => c.name).join(', ');\n        return this.postConfirm<boolean>('/api/Account/DeleteHubs', {\n            hubKeys: hubs.map(c => c.hubKey)\n        }, 'Deleting hubs...',\n        'This action will delete the following hubs, and any related metadata.<p></p>' + hubNames + '<p></p>Are you sure?');\n    }\n\n    removeUserTokens(remoteAgentKeys: Array<number>): Promise<boolean> {\n        let connectionId = this.getWebSocketConnectionId();\n\n        return this.postConfirm<boolean>('/api/Account/RemoveRemoteAgents', { connectionId, remoteAgentKeys }, 'Removing remote agents...',\n        'This action will revoke the selected tokens.  Remote Agents using these tokens will be immediately logged off.<p></p>' +\n                '<p></p>Are you sure?');\n    }\n\n    refreshRemoteAgentToken(remoteAgentKey: number): Promise<RemoteToken> {\n        let connectionId = this.getWebSocketConnectionId();\n\n        return this.postConfirm<RemoteToken>('/api/Account/RefreshRemoteAgentToken', { connectionId, remoteAgentKey },\n        'Refreshing remote agent token...',\n         // tslint:disable-next-line:max-line-length\n         'This action will revoke the selected token, and create a new one.  Remote agents using these tokens will be immediately logged off.<p></p>' +\n         '<p></p>Are you sure?');\n    }\n\n    createRemoteAgent(): Promise<RemoteToken> {\n        return this.post<RemoteToken>('/api/Account/CreateRemoteAgent', {\n        }, 'Creating remote agent...');\n    }\n\n\n    getRandomEncryptionKey(): Promise<string> {\n        return this.postGetRaw('/api/Account/GetRandomEncryptionKey', null, 'Getting random key...', null)\n    }\n\n\n    getUserToken(): Promise<{ remoteAgentId: string, userToken: string }> {\n        return this.post<{ remoteAgentId: string, userToken: string }>('/api/Account/CreateRemoteAgent', {}, 'Creating remote agent...')\n    }\n\n    parentRoute(route: ActivatedRoute): ActivatedRoute {\n        let currentRoute = route.parent;\n\n        while (currentRoute) {\n            if (currentRoute.outlet === 'primary') {\n                let routeSnapshot = currentRoute.snapshot;\n                let pageTitle = routeSnapshot.data['pageTitle'];\n                let navigateSkip = routeSnapshot.data['navigateSkip'];\n\n                if (pageTitle && !(navigateSkip === true)) {\n                    return currentRoute;\n                }\n            }\n            currentRoute = currentRoute.parent;\n        }\n\n        return route.root;\n    }\n\n    // navigates up one page, ignoring any empty routes\n    navigateUp() {\n        let breadcrumbs: Array<any> = [];\n        let currentRoute = this.route.root;\n        let url = '';\n        do {\n            let childrenRoutes = currentRoute.children;\n            currentRoute = null;\n            childrenRoutes.forEach(route => {\n                if (route.outlet === 'primary') {\n                    let routeSnapshot = route.snapshot;\n                    url += '/' + routeSnapshot.url.map(segment => segment.path).join('/');\n                    let pageTitle = routeSnapshot.data['pageTitle'];\n                    let navigateSkip = routeSnapshot.data['navigateSkip'];\n                    if (pageTitle && !(navigateSkip === true) &&\n                        breadcrumbs.findIndex((value) => value.pageTitle === pageTitle) === -1) {\n                        breadcrumbs.push({\n                            pageTitle: pageTitle,\n                            url: url,\n                        });\n                    }\n                    currentRoute = route;\n                }\n            });\n        } while (currentRoute);\n\n        if (breadcrumbs.length < 2) {\n            this.router.navigate(['/'], { queryParamsHandling: 'merge' });\n        } else {\n            parent = breadcrumbs[breadcrumbs.length - 2].url;\n            this.logger.LogC(() => `navigateUp :${parent}`, eLogLevel.Debug);\n            this.router.navigate([parent], { queryParamsHandling: 'merge' });\n        }\n    }\n\n    getWaitMessagesObservable(): Observable<Map<string, WaitMessage>> {\n        return this._waitMessagesObserve.asObservable();\n    }\n\n    addWaitMessage(message: string, maxTime = 10000, cancelToken: CancelToken = null): string {\n        if (!message) { return; }\n        \n        let key = this.newGuid();\n        this._waitMessages.set(key, {message: message, cancelToken: cancelToken});\n        this._waitMessagesObserve.next(this._waitMessages);\n\n        if (maxTime > 0) {\n            setTimeout(() => {\n                if (this._waitMessages.has(key)) {\n                    this.removeWaitMessage(key);\n                    let errorMessage = new Message(false, `The '${message}' will continue to run in the background.`, null, null);\n                    this.addUpdateNotification(errorMessage, false);\n                }\n            }, maxTime);\n        }\n        return key;\n    }\n\n\n    removeWaitMessage(key: string) {\n        if (this._waitMessages.has(key)) {\n            this._waitMessages.delete(key);\n            this._waitMessagesObserve.next(this._waitMessages);\n        }\n    }\n\n    getTasksObservable(): Observable<Array<ManagedTask>> {\n        return this._tasks.asObservable();\n    }\n\n    addUpdateTask(task: ManagedTask) {\n        if (task.status === eManagedTaskStatus.Error) {\n            const message = new Message(false, `The task ${task.name} failed.  Message: ${task.message}`,\n                task.exceptionDetails, null);\n            this.addUpdateNotification(message, false);\n        }\n\n        const tasks = this._tasks.value;\n        const originalTask = tasks.find(c => c.taskId === task.taskId);\n        if (originalTask) {\n            Object.assign(originalTask, task);\n        } else {\n            tasks.push(task);\n        }\n        this._tasks.next(tasks);\n    }\n\n    getTask(reference: string): ManagedTask {\n        const tasks = this._tasks.value;\n        const task = tasks.find(c => c.taskId === reference);\n        return task;\n    }\n\n    getNotificationObservable(): Observable<Message> {\n        return this._notification.asObservable();\n    }\n\n    addUpdateNotification(message: Message, log: boolean): string {\n        if (!message.reference) {\n            message.reference = this.newGuid();\n        }\n        this._notifications.push(message);\n\n        this._notification.next(message);\n\n        if (log) {\n            this._logErrors.next(message);\n        }\n\n        return message.reference;\n    }\n\n    getNotifications(): Message[] {\n        return this._notifications;\n    }\n\n    getNotification(reference: string): Message {\n        const message = this._notifications.find(c => c.reference === reference);\n        return message;\n    }\n\n    // public isHubCacheLoaded(): boolean {\n    //     if (!this._globalCache.value) {\n    //         return false;\n    //     } else {\n    //         return true;\n    //     }\n    // }\n\n    /**\n     * Generates a new GUID.\n     */\n    public newGuid(): string {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            // tslint:disable-next-line:no-bitwise\n            let r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n\n    public refreshGlobalCache() {\n        let promise = this.getFromApi<CacheManager>('/api/Account/GetGlobalCache', null, null);\n        promise.then(cache => {\n            this._globalCache.next(cache);\n        }).catch(reason => {\n            let message = new Message(false, 'Update global cache failed: ' + reason, reason, null);\n            this.addUpdateNotification(message, false);\n\n            // If cache load error, try again to refresh.\n            setTimeout(() => {\n                this.refreshGlobalCache();\n            }, 5000);\n        });\n    }\n\n    public getGlobalCacheObservable(): Observable<CacheManager> {\n        return this._globalCache.asObservable();\n    }\n\n    public getGlobalCachePromise(): Promise<CacheManager> {\n        return this.getGlobalCacheObservable().pipe(first()).toPromise();\n    }\n\n    // gets all shared data items\n    getSharedDataIndex(searchString: string, hubKeys: number[], maxResults: number, reload: boolean): Promise<SharedData[]> {\n        if (reload || !this.sharedItemsIndex) {\n            return this.post<SharedData[]>('/api/SharedData/SharedDataIndex', {\n                searchString, hubKeys, maxResults\n            }, 'Getting shared data index...');\n        } else {\n            Promise.resolve(this.sharedItemsIndex);\n        }\n    }\n\n    getSharedDataObject(hubKey: number, objectType: eDataObjectType, objectKey: number): Promise<SharedData> {\n        return this.post<SharedData>('/api/SharedData/SharedDataObject', {\n            hubKey, objectType, objectKey\n        }, 'Getting shared item...');\n    }\n\n    getActiveAgent(hubKey: number): Promise<DexihActiveAgent> {\n        // the activeAgent is cached in a localstorage to save an extra roundtrip.\n        let agent = localStorage.getItem(`hub-remote-agent-${hubKey}`);\n\n        if (agent) {\n            let remoteAgent = <DexihActiveAgent>JSON.parse(agent);\n            return Promise.resolve(remoteAgent);\n        }\n\n        return new Promise<DexihActiveAgent>((resolve, reject) => {\n\n            this.post<DexihActiveAgent>('/api/SharedData/GetActiveAgent', { hubKey: hubKey }, 'Getting active remote agent...')\n                .then(activeAgent => {\n                    this.getBestDownloadUrl(activeAgent, 0).then(() => {\n                        localStorage.setItem(`hub-remote-agent-${hubKey}`, JSON.stringify(activeAgent));\n                        resolve(activeAgent);\n                    });\n                }).catch(reason => reject(reason));\n        });\n    }\n\n    downloadData(sharedItems: Array<SharedData>, zipFiles: boolean, downloadFormat: eDownloadFormat, cancelToken: CancelToken):\n        Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n\n            // get distinct list of hubKeys\n            let flags = [], hubKeys = []\n            for (let i = 0; i < sharedItems.length; i++) {\n                if (flags[sharedItems[i].hubKey]) { continue };\n                flags[sharedItems[i].hubKey] = true;\n                hubKeys.push(sharedItems[i].hubKey);\n            }\n\n            let clientId = this.getWebSocketConnectionId();\n            if (!clientId) {\n                let message = new Message(false, 'Data downloads are only available for registered users.', null, null);\n                reject(message);\n                return;\n            }\n\n            hubKeys.forEach(hubKey => {\n                this.getActiveAgent(hubKey).then(activeAgent => {\n                    this.postRemote<ManagedTask>('/api/SharedData/DownloadData', {\n                        hubKey: hubKey,\n                        clientId: this.getWebSocketConnectionId(),\n                        downloadFormat: downloadFormat,\n                        zipFiles: zipFiles,\n                        sharedItems: sharedItems.filter(c => c.hubKey === hubKey),\n                        remoteAgentId: activeAgent.instanceId,\n                    }, activeAgent, 'Downloading data...', cancelToken)\n                        .then(task => {\n                        this.addUpdateTask(task);\n                        resolve(true);\n                    }).catch(reason => {\n                        this.logger.LogC(() => `downloadData, error: ${reason.message}.`, eLogLevel.Error);\n                        reject(reason);\n                    });\n                });\n            });\n        });\n    }\n\n    // starts a preview, and returns the url to get the download stream.\n    previewData(hubKey: number, objectKey: number, objectType: eDataObjectType,\n        inputColumns: InputColumn[], selectQuery: SelectQuery, parameters: InputParameterBase[],\n        parentParameters: InputParameterBase[], cancelToken: CancelToken):\n        Promise<PreviewResults> {\n\n        return new Promise<PreviewResults>((resolve, reject) => {\n            this.getActiveAgent(hubKey).then(activeAgent => {\n                this.postRemote<PreviewResults>('/api/SharedData/PreviewData', {\n                    hubKey: hubKey,\n                    objectType: objectType,\n                    objectKey: objectKey,\n                    selectQuery: selectQuery,\n                    remoteAgentId: activeAgent.instanceId,\n                    inputColumns: inputColumns,\n                    parameters: parameters,\n                    parentParameters: parentParameters\n                }, activeAgent, 'Previewing data...', cancelToken).then(result => {\n                    result.columns = this.constructDataTableColumns(result.columns);\n                    resolve(result);\n                }).catch(reason => {\n                    reject(reason);\n                });\n            }).catch(reason => {\n                reject(reason);\n            });\n        });\n    }\n\n      // starts a preview, and returns the url to get the download stream.\n      previewListOfValues(hubKey: number, objectKey: number, objectType: eDataObjectType, parameterName,\n        resetCache: boolean, cancelToken: CancelToken):\n        Promise<ListOfValuesItem[]> {\n\n        return new Promise<ListOfValuesItem[]>((resolve, reject) => {\n            this.getActiveAgent(hubKey).then(activeAgent => {\n                this.postRemote<ListOfValuesItem[]>('/api/SharedData/PreviewListOfValues', {\n                    hubKey: hubKey,\n                    objectType: objectType,\n                    objectKey: objectKey,\n                    parameterName: parameterName,\n                    resetCache: resetCache,\n                    remoteAgentId: activeAgent.instanceId,\n                }, activeAgent, 'Previewing list of values...', cancelToken).then(result => {\n                    resolve(result);\n                }).catch(reason => {\n                    reject(reason);\n                });\n            }).catch(reason => {\n                reject(reason);\n            });\n        });\n    }\n\n    getDashboard(hubKey: number, dashboardKey: number): Promise<DexihDashboard> {\n\n        return new Promise<DexihDashboard>((resolve, reject) => {\n            this.post<DexihDashboard>('/api/SharedData/PreviewDashboard', {\n                hubKey: hubKey,\n                dashboardKey: dashboardKey,\n            }, 'Getting dashboard download locations...').then(dashboard => {\n                resolve(dashboard);\n            }).catch(reason => reject(reason));\n        });\n    }\n\n}\n\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'fieldFilter',\n})\nexport class FieldFilterPipe implements PipeTransform {\n\n  transform(items: any[], field: string, value: string): any[] {\n    if (!items) { return [] };\n    if (!value) { return items };\n    return items.filter(it => it[field].toLowerCase().indexOf(value.toLowerCase()) > -1);\n  }\n}\n\n","import { UpdateQuery, eAggregate, eCompare, eDownloadFormat } from '../shared/shared.models';\n\nexport class UpdateQueries {\n    public baseUpdateQuery: UpdateQuery;\n    public data: Array<any>;\n}\n\n// export class SelectQuery {\n//     public columns: Array<SelectColumn>;\n//     public table: string;\n//     public filters: Array<Filter>;\n//     public sorts: Array<Sort>;\n//     public groups: Array<TableColumn>;\n//     public rows: number;\n\n//     public fileName: string;\n//     public path: eFlatFilePath;\n\n//     constructor() {\n//         this.columns = new Array<SelectColumn>();\n//         this.filters = new Array<Filter>();\n//         this.sorts = new Array<Sort>();\n//         this.groups = new Array<TableColumn>();\n//         this.rows = 100; // -1 means show all rows.\n//     }\n// }\n\n// export class SelectColumn {\n//     public column: TableColumn;\n//     public aggregate: eAggregate;\n// }\n\n// export class UpdateQuery {\n//     public updateColumns: Array<QueryColumn>;\n//     public table: string;\n//     public filters: Array<Filter>;\n// }\n\n// export class DeleteQuery {\n//     public table: string;\n//     public filters: Array<Filter>;\n// }\n\n// export class InsertQuery {\n//     public table: string;\n//     public insertColumns: Array<QueryColumn>;\n// }\n\n// export class QueryColumn {\n//     public column: TableColumn;\n//     public Value: any;\n// }\n\n// export class Filter {\n//     public column1: TableColumn;\n//     public value1: any;\n//     public compareDataType: eTypeCode;\n\n//     public column2: TableColumn;\n//     public value2: any;\n\n//     public operator: eCompare;\n//     public andOr: eAndOr;\n// }\n\n// export class Sort {\n//     public column: TableColumn;\n//     public direction: eSortDirection;\n\n//     get details(): string {\n//         return this.column + ' ' + this.direction;\n//     };\n// }\n\n// export class DownloadObject {\n//     public objectType: eSourceType;\n//     public objectKey: number;\n//     public query: SelectQuery;\n//     public inputColumns: InputColumn[];\n//     public parameters: DexihInputParameter[];\n// }\n\n// export enum eDownloadFormat {\n//     Csv = <any>'Csv',\n//     Json = <any>'Json',\n//     JsonCompact = <any>'JsonCompact'\n// }\n\nexport const downloadFormats = [\n    {key: eDownloadFormat.Csv, name: 'Comma Separated File'},\n    {key: eDownloadFormat.Json, name: 'Json File'},\n    {key: eDownloadFormat.JsonCompact, name: 'Json File (separate headers section)'},\n];\n\n// export enum eAggregate {\n//     Sum = <any>'Sum',\n//     Average = <any>'Average',\n//     Min = <any>'Min',\n//     Max = <any>'Max',\n//     Count = <any>'Count',\n//     First = <any>'First',\n//     Last = <any>'Last'\n// }\n\n// export const aggregates = [\n//     {key: eAggregate.Sum, name: 'Sum'},\n//     {key: eAggregate.Average, name: 'Average'},\n//     {key: eAggregate.Min, name: 'Minimum'},\n//     {key: eAggregate.Max, name: 'Maximum'},\n//     {key: eAggregate.Count, name: 'Count'},\n//     {key: eAggregate.First, name: 'Last'},\n//     {key: eAggregate.Last, name: 'First'},\n// ];\n\n// export enum eCompare {\n//     IsEqual = <any>'IsEqual',\n//     GreaterThan = <any>'GreaterThan',\n//     GreaterThanEqual = <any>'GreaterThanEqual',\n//     LessThan = <any>'LessThan',\n//     LessThanEqual = <any>'LessThanEqual',\n//     NotEqual = <any>'NotEqual',\n//     IsIn = <any>'IsIn',\n//     IsNull = <any>'IsNull',\n//     IsNotNull = <any>'IsNotNull',\n//     Like = <any>'Like'\n// }\n\nexport const compare = [\n    {key: eCompare.IsEqual, name: '=', showFilter: false},\n    {key: eCompare.GreaterThan, name: '>', showFilter: false},\n    {key: eCompare.GreaterThanEqual, name: '>=', showFilter: false},\n    {key: eCompare.LessThan, name: '<', showFilter: false},\n    {key: eCompare.LessThanEqual, name: '<=', showFilter: false},\n    {key: eCompare.NotEqual, name: '!=', showFilter: false},\n    {key: eCompare.IsIn, name: 'IN', showFilter: false},\n    {key: eCompare.IsNotIn, name: 'NOT IN', showFilter: false},\n    {key: eCompare.IsNull, name: 'Is Null', showFilter: true},\n    {key: eCompare.IsNotNull, name: 'Is Not Null', showFilter: true},\n    {key: eCompare.Like, name: 'like', showFilter: false},\n];\n\n// export enum eAndOr {\n//     And = <any>'And',\n//     Or = <any>'Or'\n// }\n\n\n// export enum eSortDirection {\n//     Ascending = <any>'Ascending',\n//     Descending = <any>'Descending',\n// }\n\n\n","export { RibbonComponent } from './ribbon.component';\nexport { RibbonModule } from './ribbon.module';\n","export {MenuItemComponent} from './menu-item.component';\nexport {MenuParentComponent} from './menu-parent.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { eDataObjectType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'table-preview-data',\n    templateUrl: './table-preview-data.component.html'\n})\nexport class TablePreviewDataComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n\n    public key: number;\n\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    public eDataObjectType = eDataObjectType;\n\n    public title = 'Preview Table';\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.params,\n                this.hubService.getHubCacheObservable(true),\n            ).subscribe(result => {\n                let params = result[0];\n                let hubCache = result[1];\n                this.key = +params['tableKey'];\n\n                let table = hubCache.getTable(this.key);\n                if (table) {\n                    this.title = 'Preview Table - ' + table.logicalName;\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Table Preview Data');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n}\n","<div class=\"container-fluid\">\n    <d-widget [title]=\"title\" iconClass=\"fa fa-lg fa-fw fa-exchange\" [showCloseButton]=\"true\"\n        (close)=\"close()\">\n        <preview-data [key]='key' [viewSource]='eDataObjectType.Table'></preview-data>\n    </d-widget>\n</div>","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Functions } from '../shared/utils/functions';\nimport { tap } from 'rxjs/operators';\n\n\n// intercept is used to map the XSRF-TOKEN to the X-XSRF-TOKEN which is used\n// to present x-scripting attacks.\n// can't use the build in interceptor as it does not support x-domain.\n@Injectable()\nexport class AddCsrfHeaderInterceptorService implements HttpInterceptor {\n\n    // private token;\n    \n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        // const token = this.token ?? Functions.getCookie('XSRF-TOKEN');\n        // if (token) {\n        //     req = req.clone({\n        //         headers: req.headers.set('X-XSRF-TOKEN', token)\n        //     });\n        // }\n\n        return next.handle(req).pipe(tap((event: HttpEvent<any>) => {\n            // if the token is in the header (cross domain request, then set it to the local cookie)\n            if (event instanceof HttpResponse) {\n                const xsrfToken = event.headers.get('XSRF-TOKEN');\n                if (xsrfToken) {\n                    Functions.setCookie('XSRF-TOKEN', xsrfToken);\n                    // this.token = xsrfToken;\n                }\n                return event;\n            }\n        }));\n    }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihListOfValues } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'listOfValues-view',\n    templateUrl: './listOfValues-view.component.html'\n})\n\nexport class ListOfValuesViewComponent implements OnInit {\n    @Input() listOfValues: DexihListOfValues;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div class=\"float-right\">\n    <actions-listOfValues-button [listOfValues]=\"listOfValues\" [pullRight]=\"true\"></actions-listOfValues-button>\n</div>\n<h5>{{listOfValues.name}}</h5>\n<div *ngIf=\"listOfValues.description\">\n    <markdown [data]=\"listOfValues.description\"></markdown>\n</div>\n<div class=\"note\">Updated: {{listOfValues.updateDate | calendar }} </div>","import { Component, OnInit, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\n\n@Component({\n    selector: 'view-edit-button',\n    templateUrl: './view-edit-button.component.html'\n})\nexport class ViewEditButtonComponent implements OnInit {\n    @Input() key = null;\n\n    public hubPath: string;\n\n    constructor(private hubService: HubService) { }\n\n    ngOnInit() {\n        this.hubPath = this.hubService.getHubUrl();\n    }\n}\n","<a [routerLink]=\"[hubPath, 'view-edit', key]\" *ngIf=\"key\" > \n    <i class=\"fa fa-edit\"></i> \n    Edit \n</a>","import {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ChartBuilderComponent } from './chartBuilder/chart-builder.component';\nimport { ChartSeriesComponent } from './chartBuilder/chart-series.component';\nimport { DComponentsModule } from 'ngx-d-components';\n// import { GoogleMapComponent } from './googleMap/google-map.component';\nimport { ChartViewComponent } from './chartView/chart-view.component';\nimport { ChartsModule } from 'ng2-charts';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    DComponentsModule,\n    ChartsModule,\n  ],\n  declarations: [\n    ChartBuilderComponent,\n    ChartSeriesComponent,\n    ChartViewComponent,\n    // GoogleMapComponent,\n  ],\n  exports: [ChartBuilderComponent, ChartViewComponent],\n})\nexport class ChartBuilderModule {\n\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DexihMessageComponent } from './dexih-message.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n  ],\n  declarations: [\n    DexihMessageComponent,\n  ],\n  exports: [\n    DexihMessageComponent\n  ],\n})\nexport class DexihMessageModule {\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n\n  selector: 'support-options',\n  templateUrl: './support-options.component.html'\n})\nexport class SupportOptionsComponent {\n  @Input() isExpanded = false;\n\n  supportOptions = [\n    {name: 'Features / Issues', icon: 'fa fa-github', link: 'https://github.com/DataExperts/Dexih.App.UI/issues', description: 'We are an open source platform.  Raise feature requests and bugs on our github pages.'},\n    {name: 'Forums', icon: 'fa fa-smile-o', link: 'https://dexih.mn.co/feed', description: 'Use the community forums for questions and other integration hub discussion.'},\n    {name: 'Twitter', icon: 'fa fa-twitter', link: 'https://twitter.com/dataexperts', description: 'Send messages to our twitter for quick short queries and comments.'},\n    {name: 'YouTube', icon: 'fa fa-youtube', link: 'https://www.youtube.com/channel/UCUQQ_sVuFti-xYvKtfLJNkg', description: 'Refer to our youtube channel for video tutorials.'},\n  ];\n\n\n  constructor() {\n  }\n\n}\n","<d-widget-section iconClass=\"fa fa-question-circle\" title=\"Support Channels\" [padding]=\"true\"\n\t[showExpandButton]=\"true\" [isExpanded]=\"isExpanded\">\n\t<div class=\"card-deck\">\n\t\t<div *ngFor=\"let supportOption of supportOptions\" class=\"card\">\n\t\t\t<div class=\"card-header\">\n\t\t\t\t<div class=\"d-flex flex-row p-0\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<i [class]=\"supportOption.icon\"></i>\n\t\t\t\t\t\t{{supportOption.name}}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"card-body\">\n\t\t\t\t<p class=\"card-text\">{{supportOption.description}}</p>\n\t\t\t</div>\n\t\t\t<div class=\"card-footer\">\n\t\t\t\t<a [href]=\"supportOption.link\" target=\"_blank\" class=\"btn btn-button btn-info\">\n\t\t\t\t\t<i class=\"fa fa-folder-open\"></i>\n\t\t\t\t\tOpen\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</d-widget-section>","<ng-template [ngIf]=\"connections\">\n    <d-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-database\" [text]=\"connections.length > 1 ? 'Connections' : 'Connection'\" [pullRight]=\"pullRight\">\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Metadata</li>\n        <li *ngIf=\"hubCache.canWrite\">\n            <a class=\"dropdown-item\" [routerLink]=\"['connection-new', eConnectionPurpose.Source]\" title=\"Create a new datalink.\">\n                <i class=\"fa fa-file-o\"></i> New (Source)</a>\n        </li>\n        <li *ngIf=\"hubCache.canWrite\">\n            <a class=\"dropdown-item\" [routerLink]=\"['connection-new', eConnectionPurpose.Managed]\" title=\"Create a new datalink.\">\n                <i class=\"fa fa-file-o\"></i> New (Managed)</a>\n        </li>\n        <li *ngIf=\"hubCache.canWrite\">\n            <a class=\"dropdown-item\" [routerLink]=\"['connection-new', eConnectionPurpose.Target]\" title=\"Create a new datalink.\">\n                <i class=\"fa fa-file-o\"></i> New (Target)</a>\n        </li>\n        <ng-template [ngIf]=\"connections.length > 0\">\n            <li *ngIf=\"!hideEdit && connections.length == 1\">\n                <a class=\"dropdown-item\" [routerLink]=\"['connection-edit', connections[0].key]\" queryParamsHandling=\"merge\">\n                    <i class=\"fa fa-edit\"></i> Edit</a>\n            </li>\n            <li *ngIf=\"hubCache.canWrite\">\n                    <a class=\"dropdown-item\" [routerLink]=\"['connection-copy', connections[0].key]\" queryParamsHandling=\"merge\" title=\"Copy the connection.\">\n                            <i class=\"fa fa-copy\"></i> Copy\n                    </a>\n                </li>\n            <li *ngIf=\"hubCache.canWrite && showEdit\">\n                <a class=\"dropdown-item\" (click)=\"shareSelectedConnections(true)\" title=\"Select the selected connections as shared.\">\n                    <i class=\"fa fa-group\"></i> Share</a>\n            </li>\n            <li *ngIf=\"hubCache.canWrite && showEdit\">\n                <a class=\"dropdown-item\" (click)=\"shareSelectedConnections(false)\" title=\"Select the selected connections as private.\">\n                    <i class=\"fa fa-user-secret\"></i> Private</a>\n            </li>\n            <li>\n                <a class=\"dropdown-item\" (click)=\"export()\" title=\"Export the metadata for the selected connections to a local file.\">\n                    <i class=\"fa fa-save\"></i> Save Locally</a>\n            </li>\n            <li *ngIf=\"hubCache.canWrite\">\n                <a class=\"dropdown-item\" (click)=\"delete()\" title=\"Delete the metadata for the selected connections.\">\n                    <span class=\"text-danger\">\n                        <i class=\"fa fa-trash-o text-danger\"></i> Delete</span>\n                </a>\n            </li>\n\n            <ng-template [ngIf]=\"hubCache.canWrite && connections.length == 1 && connectionReference\">\n                <li class=\"list-group-item list-group-item-heading list-group-item-info\">Operations</li>\n                <ng-template [ngIf]=\"connectionReference.connectionCategory == eConnectionCategory.SqlDatabase || connectionReference.connectionCategory == eConnectionCategory.DatabaseFile || connectionReference.connectionCategory == eConnectionCategory.NoSqlDatabase || connectionReference.connectionCategory == eConnectionCategory.Hub\">\n                    <li>\n                        <a class=\"dropdown-item\"  routerLink=\"tables\" [queryParams]=\"{'connectionKey': connections[0].key}\" title=\"View imported table for this connection.\">\n                            <i class=\"fa fa-folder\"></i> View Imported Tables</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" *ngIf=\"hubCache.canWrite\" [routerLink]=\"['connection-import', connections[0].key]\" title=\"Import tables for this connection.\">\n                            <i class=\"fa fa-plus-square\"></i> Import Tables</a>\n                    </li>\n                </ng-template>\n\n                <ng-template [ngIf]=\"hubCache.canWrite && connections.length == 1\">\n                    <ng-template [ngIf]=\"connectionReference.connectionCategory == eConnectionCategory.File\">\n                        <li>\n                            <a class=\"dropdown-item\" routerLink=\"tables\" [queryParams]=\"{'connectionKey': connections[0].key}\" title=\"View imported files for this connection.\">\n                                <i class=\"fa fa-folder\"></i> View Imported Files</a>\n                        </li>\n                        <li>\n                            <a class=\"dropdown-item\" *ngIf=\"hubCache.canWrite\" [routerLink]=\"[hubPath, 'files', 'bulk-load', connections[0].key]\" title=\"Import a new file for this connection.\">\n                                <i class=\"fa fa-plus-square\"></i> Bulk Create new Files</a>\n                        </li>\n                        <li>\n                            <a class=\"dropdown-item\" *ngIf=\"hubCache.canWrite\" [routerLink]=\"['tables', 'table-new', connections[0].key]\" title=\"Import a new file for this connection.\">\n                                <i class=\"fa fa-plus-square\"></i> Add File(s)</a>\n                        </li>\n                    </ng-template>\n\n                    <ng-template [ngIf]=\"hubCache.canWrite && connections.length == 1\">\n                        <ng-template [ngIf]=\"connectionReference.connectionCategory == eConnectionCategory.WebService\">\n                            <li>\n                                <a class=\"dropdown-item\" routerLink=\"tables\" [queryParams]=\"{'connectionKey': connections[0].key}\" title=\"View imported web services for this connection.\">\n                                    <i class=\"fa fa-folder\"></i> View Imported Web Services</a>\n                            </li>\n                            <li>\n                                <a class=\"dropdown-item\" *ngIf=\"hubCache.canWrite\" [routerLink]=\"['tables', 'table-new', connections[0].key]\" title=\"Import a new web service for this connection.\">\n                                    <i class=\"fa fa-plus-square\"></i> New Web Service</a>\n                            </li>\n                        </ng-template>\n                    </ng-template>\n\n\n                    <ng-template [ngIf]=\"datalinks.length > 0 || datalinks.length > 0 || datajobs.length > 0 || datajobs.length > 0\">\n                        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Related</li>\n                        <li *ngFor=\"let datalink of datalinks\">\n                            <a class=\"dropdown-item\" (click)=\"navigateToDatalink(datalink)\">{{datalink.name}}</a>\n                        </li>\n                        <li *ngFor=\"let datajob of datajobs\">\n                            <a class=\"dropdown-item\" (click)=\"navigateToDatajob(datajob)\">{{datajob.name}}</a>\n                        </li>\n                    </ng-template>\n                </ng-template>\n            </ng-template>\n        </ng-template>\n    </d-button-dropdown>\n    </ng-template>","import { Component, Input, OnDestroy, OnInit, OnChanges } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription ,  Observable, combineLatest} from 'rxjs';\n\nimport { AuthService } from '../../../+auth/auth.service';\nimport {HubCache } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { DexihConnection, ConnectionReference, eConnectionCategory, DexihDatalink, DexihDatajob, eConnectionPurpose } from '../../../shared/shared.models';\nimport { async } from 'q';\n\n@Component({\n    selector: 'actions-connection-button',\n    templateUrl: './actions-connection-button.component.html'\n})\n\nexport class ActionsConnectionButtonComponent implements OnInit, OnDestroy, OnChanges {\n    @Input() public connections: DexihConnection[];\n    @Input() public hideEdit = false;\n    @Input() public pullRight = false;\n\n    public connectionReference: ConnectionReference;\n    eConnectionCategory = eConnectionCategory;\n\n    private _subscription: Subscription;\n\n    public hubCache: HubCache;\n    public eConnectionPurpose = eConnectionPurpose;\n\n    public hubPath: string;\n\n    datalinks = [];\n    datajobs = [];\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n                private router: Router,\n                private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        this._subscription = combineLatest(\n            this.hubService.getHubCacheObservable(),\n        ).subscribe(async result => {\n            this.hubCache = result[0];\n\n            if (!this.hubCache.isLoaded()) {\n                return;\n            }\n\n            this.hubPath = this.hubCache.getHubUrl();\n\n            this.datalinks = [];\n            this.datajobs = [];\n\n            let cache = this.hubCache;\n\n            if (this.connections && this.connections.length === 1) {\n                this.connectionReference = await this.hubService.GetConnectionReference(this.connections[0]);\n\n                // search any columns for an occurrence of the columnValidation.\n                cache.hub.dexihDatajobs.forEach(datajob => {\n                    if ( datajob.auditConnectionKey === this.connections[0].key) {\n                        this.datajobs.push({\n                            key: datajob.key,\n                            name: `${datajob.name} (datajob audit connection)`\n                        });\n                    }\n                });\n\n                cache.hub.dexihDatalinks.forEach(datalink => {\n                    if ( datalink.auditConnectionKey === this.connections[0].key) {\n                        this.datalinks.push({\n                            key: datalink.key,\n                            name: `${datalink.name} (datalink audit connection)`\n                        });\n                    }\n\n                    if (datalink.sourceDatalinkTable && datalink.sourceDatalinkTable.sourceTableKey) {\n                        let table = cache.getTable(datalink.sourceDatalinkTable.sourceTableKey);\n                        if (table && table.connectionKey === this.connections[0].key) {\n                            this.datalinks.push({\n                                key: datalink.key,\n                                name: `${datalink.name} (datalink source)`\n                            });\n                        }\n                    }\n\n                    datalink.dexihDatalinkTransforms.forEach(transform => {\n                        if (transform.joinDatalinkTable && transform.joinDatalinkTable.sourceDatalinkKey) {\n                            let table = cache.getTable(transform.joinDatalinkTable.sourceTableKey);\n                            if (table && table.connectionKey === this.connections[0].key) {\n                                this.datalinks.push({\n                                    key: datalink.key,\n                                    name: `${datalink.name} (datalink join)`\n                                });\n                            }\n                        }\n                    });\n\n                    datalink.dexihDatalinkTargets.forEach(target => {\n                        let table = cache.getTable(target.tableKey);\n                        if (table && table.connectionKey === this.connections[0].key) {\n                            this.datalinks.push({\n                                key: datalink.key,\n                                name: `${datalink.name} (datalink target)`\n                            });\n                        }\n                    });\n                });\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    async ngOnChanges() {\n        if (this.connections && this.connections.length === 1 ) {\n            this.connectionReference = await this.hubService.GetConnectionReference(this.connections[0]);\n        }\n    }\n\n    export() {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        this.connections.forEach(connection => { this.hubCache.cacheAddConnection(connection.key, hub); });\n\n        let filename = this.datalinks.length === 1 ? 'Connection - ' + this.connections[0].name + '.json' : 'connections.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    delete() {\n        this.hubService.deleteConnections(this.connections);\n    }\n\n    navigateToDatalink(datalink: DexihDatalink) {\n        this.router.navigate(['datalinks', 'datalink-edit', 'edit', datalink.key], { relativeTo: this.route.parent.parent });\n    }\n\n    navigateToDatajob(datajob: DexihDatajob) {\n        this.router.navigate(['datajobs', 'datajob-edit', datajob.key], { relativeTo: this.route.parent.parent });\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NavigationComponent} from './navigation.component';\nimport {AuthModule} from '../../../+auth/auth.module';\nimport {RouterModule} from '@angular/router';\nimport {LoginInfoComponent} from './login-info/login-info.component';\nimport {MenuParentComponent, MenuItemComponent } from './menu';\nimport {RemoteAgentComponent} from './remote-agent/remote-agent.component';\nimport {HubsComponent} from './hubs/hubs.component';\nimport { DComponentsModule } from 'ngx-d-components';\nimport { DexihIconsModule} from '../../ui/icons/icons.module'\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    DComponentsModule,\n    DexihIconsModule,\n  ],\n  declarations: [\n    NavigationComponent,\n    LoginInfoComponent,\n    MenuParentComponent, MenuItemComponent,\n    RemoteAgentComponent,\n    HubsComponent,\n  ],\n  exports: [\n    NavigationComponent\n  ]\n})\nexport class NavigationModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'encryption-status-icon',\n    templateUrl: './encryption-status.component.html'\n})\n\nexport class EncryptionStatusIconComponent implements OnInit {\n    @Input() isEncrypted = false;\n\n    @Output() click = new EventEmitter();\n\n    constructor() { }\n\n    ngOnInit() { }\n\n    doClick() {\n        this.click.emit(true);\n    }\n}\n","<span *ngIf='isEncrypted' class=\"text-success\"> <i class=\"fa fa-lg fa-fw fa-lock text-success'\" title=\"This agent is secure and sends/receives data with encryption.\"></i></span>\n<span *ngIf='!isEncrypted' class=\"text-danger\"><i class=\"fa fa-lg fa-fw fa-info-circle text-warning'\" title=\"Warning: This agent sends/receives data without encryption.\" ></i></span>\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription} from 'rxjs';\n\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubService } from '../../hub.service';\nimport { DexihColumnValidation } from '../../../shared/shared.models';\n\n\n@Component({\n    selector: 'actions-columnValidation-button',\n    templateUrl: './actions-columnValidation-button.component.html'\n})\n\nexport class ActionsColumnValidationButtonComponent implements OnInit, OnDestroy {\n    @Input() public columnValidation: DexihColumnValidation;\n    @Input() public pullRight = false;\n\n    private _hubCacheSubscription: Subscription;\n\n    columns = [];\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n                private router: Router,\n                private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n\n            if (cache.isLoaded()) {\n                // search any columns for an occurrence of the columnValidation.\n                cache.hub.dexihTables.forEach(tab => {\n                    let con = cache.hub.dexihConnections.find(c => c.key === tab.connectionKey);\n                    tab.dexihTableColumns.forEach(col => {\n                        if (col.columnValidationKey === this.columnValidation.key) {\n                            this.columns.push({\n                                name : `${col.name} (${con.name}.${tab.name})`,\n                                tableKey: tab.key,\n                                columnKey: col.key\n                            });\n                        }\n                    });\n                });\n            }\n        });\n\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n     }\n\n    navigateToColumn(col: any) {\n        this.router.navigate(['table-edit', col.tableKey, 'column', col.key], { relativeTo: this.route.parent.parent });\n    }\n\n}\n","<d-button-edit class=\"mr-1\" [routerLink]=\"['columnValidation-edit', columnValidation.key]\" queryParamsHandling=\"merge\"></d-button-edit>\n<d-button-dropdown *ngIf=\"columns.length > 0 || columns.length > 0\" buttonClass=\"btn-primary\" iconClass=\"fa fa-info-circle\" text=\"Used In\" [pullRight]=\"pullRight\">\n    <li *ngFor=\"let col of columns\">\n        <a class=\"dropdown-item\" (click)=\"navigateToColumn(col)\">{{col.name}}</a>\n    </li>\n</d-button-dropdown>","import {NgModule} from '@angular/core';\nimport {TimeDirective} from './time.directive';\nimport { FieldFilterPipe } from './field-filter.pipe';\nimport { EqualFilterPipe } from './equal-filter.pipe';\nimport { GtFilterPipe } from './gt-filter.pipe';\nimport { IsValidFilterPipe } from './isValid-filter.pipe';\nimport { AllFilterPipe } from './all-filter.pipe';\nimport { SortPipe } from './sort.pipe';\nimport { SortDescPipe } from './sort.desc.pipe';\nimport { CountdownComponent } from './countdown.component';\nimport { MaxItemsFilterPipe } from './max-items-filter';\nimport { DropZoneDirective } from './dropzone';\nimport { DragZoneDirective } from './dragzone';\nimport { CalendarPipe } from './calendar.pipe'\n@NgModule({\n  declarations: [\n    TimeDirective,\n    FieldFilterPipe,\n    EqualFilterPipe,\n    GtFilterPipe,\n    IsValidFilterPipe,\n    AllFilterPipe,\n    SortPipe,\n    SortDescPipe,\n    CountdownComponent,\n    MaxItemsFilterPipe,\n    DropZoneDirective,\n    DragZoneDirective,\n    CalendarPipe\n    ],\n  imports: [\n    ],\n  exports: [\n    TimeDirective,\n    FieldFilterPipe,\n    EqualFilterPipe,\n    GtFilterPipe,\n    IsValidFilterPipe,\n    AllFilterPipe,\n    SortPipe,\n    SortDescPipe,\n    CountdownComponent,\n    MaxItemsFilterPipe,\n    DropZoneDirective,\n    DragZoneDirective,\n    CalendarPipe\n    ]\n})\nexport class UtilsModule {\n\n}\n","import { Component, OnInit, OnDestroy, HostListener } from '@angular/core';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\nimport { HubService } from '../../hub.service';\nimport { Subscription, combineLatest, merge, Subject } from 'rxjs';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { InputOutputColumns } from '../../hub.lineage.models';\nimport { CancelToken } from '../../../+auth/auth.models';\nimport { HubCache, ConnectionTables, eCacheStatus } from '../../hub.models';\nimport { eViewType, DexihDatalink, InputColumn, DexihColumnBase, SelectQuery,\n  DexihView, DownloadObject, eDataObjectType, ChartConfig, InputParameterBase, DexihActiveAgent, AnimateConfig } from '../../../shared/shared.models';\nimport { FormArray, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'dexih-view-edit-form',\n  templateUrl: './view-edit.component.html',\n  providers: [HubFormsService]\n})\nexport class ViewEditComponent implements OnInit, OnDestroy {\n  public viewKey: number;\n\n  public hubCache: HubCache;\n  public action: string; // new or edit\n  public pageTitle: string;\n  public params: Params;\n  public remoteAgent: DexihActiveAgent;\n\n  public showEdit = false;\n  public hasEdited = false;\n\n  private _subscription: Subscription;\n  private _formChangeSubscription: Subscription;\n  private _changesSubscription: Subscription;\n\n  private refreshDataSubject: Subject<void> = new Subject<void>();\n  public refreshDataObservable = this.refreshDataSubject.asObservable();\n  \n  sourceTypes = [\n    { key: eDataObjectType.Datalink, name: 'Datalink' },\n    { key: eDataObjectType.Table, name: 'Table' }\n  ];\n\n  eViewType = eViewType;\n  eDataObjectType = eDataObjectType;\n\n  public connectionTables: ConnectionTables[] = [];\n  public datalinks: DexihDatalink[] = [];\n\n  public showChart = false;\n  public inputColumns: InputColumn[];\n  public tableColumns: DexihColumnBase[];\n\n  private isLoaded = false;\n\n  private firstLoad = true;\n  private dialogOpen = false;\n\n  columns: Array<any>;\n  public baseData: Array<any>;\n  public data: Array<any>;\n\n  public animationValues = [];\n  public animationValue;\n  public animationTimer;\n  public animationColumnIndex: number;\n  public animationRowIndex: number;\n  public animationPaused = false;\n\n  private cancelToken = new CancelToken();\n\n  get animateConfig(): AnimateConfig {\n    return this.formsService?.currentForm?.controls.animateConfig.value;\n  }\n  set animateConfig(value: AnimateConfig) {\n    this.formsService?.currentForm?.controls.animateConfig.setValue(value);\n  }\n\n  get selectQuery(): SelectQuery {\n    return this.formsService?.currentForm?.controls.selectQuery.value;\n  }\n  set selectQuery(value: SelectQuery) {\n    this.formsService?.currentForm?.controls.selectQuery.setValue(value);\n  }\n\n  constructor(\n    private hubService: HubService,\n    private authService: AuthService,\n    public formsService: HubFormsService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n        this.hubService.getRemoteAgentObservable()\n      ).subscribe(result => {\n        let data = result[0];\n        this.params = result[1];\n        this.hubCache = result[2];\n        this.remoteAgent = result[3];\n\n        this.action = data['action'];\n        this.pageTitle = data['pageTitle'];\n\n        if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded ) { return; }\n\n        if (this.isLoaded && this.action === 'new') { return; }\n\n        if (this.isLoaded && this.formsService.hasChanged) {\n            this.authService.confirmDialog('Synchronization warning',\n            'The hub was disconnected, meaning this edit could have been changed by another session.  Would you like to discard the current changes, and reload the latest version?')\n            .then(confirm => {\n                if (confirm) {\n                    this.load();\n                }\n            }).catch(() => {\n                return;\n            });\n        } else {\n            this.load();\n        }\n\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'View Edit');\n    }\n  }\n\n  load() {\n    this.isLoaded = true;\n\n    if (this.hubCache && this.hubCache.isLoaded()) {\n      this.connectionTables = this.hubCache.getConnectionTables();\n      this.datalinks = this.hubCache.hub.dexihDatalinks;\n    }\n\n    if (this.action === 'edit') {\n      // get the hub key from the route data, and update the service.\n      this.viewKey = + this.params['viewKey'];\n\n      if (!this.viewKey) {\n        this.hubService.addHubErrorMessage('There was no view specified to edit.');\n      } else {\n        if (!this.hubCache.hub || !this.hubCache.hub.dexihColumnValidations) {\n          this.hubService.addHubErrorMessage('The hub cache is not loaded.');\n        } else {\n\n          let view = this.hubCache.hub.dexihViews.find(c => c.key === this.viewKey);\n\n          // create a copy of the view to avoid changes to the hub cache.\n          view = JSON.parse(JSON.stringify(view));\n          if (view.selectQuery == null) {\n            view.selectQuery = new SelectQuery();\n          }\n\n          if (view.animateConfig == null) {\n            view.animateConfig = new AnimateConfig()\n          }\n          this.inputColumns = view.inputValues;\n          this.showChart = view.viewType === eViewType.Chart;\n\n          this.formsService.view(view);\n\n          this.watchChanges();\n\n          this.getColumns();\n        }\n      }\n    }\n\n    if (this.action === 'new') {\n      let view = new DexihView();\n      view.selectQuery = new SelectQuery();\n      view.animateConfig = new AnimateConfig();\n      this.formsService.view(view);\n      this.watchChanges();\n      this.showEdit = true;\n      this.hasEdited = true;\n\n      // update the url with the saved key\n      this._formChangeSubscription = this.formsService.getCurrentFormObservable().subscribe(form => {\n        let key = form.controls.key.value;\n        if (key) {\n          if (history.pushState) {\n            let newUrl = window.location.pathname.replace('/view-new', `/view-edit/${key}`)\n            this.router.navigateByUrl(newUrl);\n            this._formChangeSubscription.unsubscribe();\n          }\n        }\n      });\n    }\n\n  if (this.remoteAgent) {\n    if (!this.firstLoad) {\n      if (!this.dialogOpen) {\n        this.dialogOpen = true;\n        this.authService.confirmDialog('Remote Agent Available',\n          'A remote agent is available, would you like to refresh the data?').then(confirm => {\n            if (confirm) {\n              this.refresh();\n            }\n            this.dialogOpen = false;\n          });\n      }\n    } else {\n      if (this.formsService.currentForm.controls.autoRefresh.value) {\n        this.refresh();\n      }\n    }\n  }\n  }\n\n  watchChanges() {\n    if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n    this._changesSubscription = merge(\n      this.formsService.currentForm.controls.sourceDatalinkKey.valueChanges,\n      this.formsService.currentForm.controls.sourceTableKey.valueChanges\n    ).subscribe(() => {\n      this.reset();\n      this.selectQuery = new SelectQuery();\n      this.animateConfig = new AnimateConfig();\n      this.getColumns();\n      this.refreshDatalink();\n      this.refresh();\n    });\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._formChangeSubscription) { this._formChangeSubscription.unsubscribe(); }\n    if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n    this.cancelToken.cancel();\n  }\n\n  close() {\n    this.authService.navigateUp();\n  }\n\n  toggleChart() {\n    if (this.showChart) {\n      this.showChart = false;\n      this.formsService.currentForm.controls.viewType.setValue(eViewType.Table);\n    } else {\n      this.showChart = true;\n      if (this.formsService.currentForm.controls.chartConfig.value == null) {\n        this.formsService.currentForm.controls.chartConfig.setValue(new ChartConfig());\n      }\n      this.formsService.currentForm.controls.viewType.setValue(eViewType.Chart);\n    }\n  }\n\n  getColumns() {\n\n    let viewForm = this.formsService.currentForm;\n    let viewInputs = <InputColumn[]>viewForm.controls.inputValues.value;\n\n    if (viewForm.controls.sourceType.value === eDataObjectType.Table && viewForm.controls.sourceTableKey.value > 0) {\n      let table = this.hubCache.getTable(viewForm.controls.sourceTableKey.value);\n      if (table) {\n        this.inputColumns = table.dexihTableColumns.filter(c => c.isInput).map(c => {\n          let input = viewInputs.find(i => i.name === c.name);\n          if (input) {\n          } else {\n          }\n          return {\n            datalinkKey: 0, datalinkName: '',\n            name: c.name, logicalName: c.logicalName, dataType: c.dataType, rank: c.rank,\n            value: c.defaultValue, defaultValue: c.defaultValue\n          };\n        }\n        );\n        this.tableColumns = table.dexihTableColumns;\n        return;\n      } else {\n        this.reset();\n      }\n    } else {\n      this.reset();\n    }\n\n    if (viewForm.controls.sourceType.value === eDataObjectType.Datalink && viewForm.controls.sourceDatalinkKey.value > 0) {\n      let datalink = this.datalinks.find(c => c.key === viewForm.controls.sourceDatalinkKey.value);\n      if (datalink) {\n        const ioColumns = new InputOutputColumns();\n        ioColumns.buildInputOutput(datalink);\n        this.tableColumns = ioColumns.getDatalinkOutputColumns(datalink);\n\n        this.inputColumns = datalink.sourceDatalinkTable.dexihDatalinkColumns.filter(c => c.isInput).map(c => {\n          let input = viewInputs.find(i => i.name === c.name);\n          let value = null;\n          if (input) {\n            value = input.value;\n          } else {\n            value = c.defaultValue;\n          }\n          return {\n            datalinkKey: datalink.key, datalinkName: datalink.name,\n            name: c.name, logicalName: c.logicalName, dataType: c.dataType, rank: c.rank, value: value, defaultValue: c.defaultValue\n          };\n        });\n\n      } else {\n        this.reset();\n      }\n    } else {\n      this.reset();\n    }\n  }\n\n  reset() {\n    this.tableColumns = [];\n    this.inputColumns = [];\n    this.columns = null;\n    this.data = null;\n    this.baseData = null;\n  }\n\n  refreshDatalink() {\n    let viewForm = this.formsService.currentForm;\n\n    // clear current datalink parameters.\n    let viewParameters =  <FormArray> this.formsService.currentForm.controls.parameters;\n    for (let i = viewParameters.controls.length - 1; i >= 0; i--) {\n      if (viewParameters.controls[i].value.datalinkParameterKey) {\n        viewParameters.removeAt(i);\n      }\n    }\n\n    if (viewForm.controls.sourceType.value === eDataObjectType.Datalink && viewForm.controls.sourceDatalinkKey.value > 0) {\n      let datalink = this.datalinks.find(c => c.key === viewForm.controls.sourceDatalinkKey.value);\n      if (datalink) {\n        let datalinkParameters = datalink.parameters;\n\n        // add the datalink parameter back again.\n        for (let datalinkParameter of datalinkParameters) {\n          let parameter = Object.assign({}, datalinkParameter);\n          parameter['datalinkParameterKey'] = datalinkParameter.key;\n          parameter.key = this.hubCache.getNextSequence();\n          let parameterForm = this.formsService.parameter(parameter);\n          viewParameters.push(parameterForm);\n        }\n      }\n    }\n  }\n\n  refresh() {\n    let viewForm = this.formsService.currentForm;\n    let parameters: InputParameterBase[] = [];\n\n    let viewParameters =  (<FormGroup> this.formsService.currentForm.controls.parameters).getRawValue();\n\n    if (viewParameters) {\n      parameters = parameters.concat(viewParameters);\n    }\n\n    let view = <DexihView>viewForm.value;\n    view.selectQuery = viewForm.controls.selectQuery.value;\n    view.animateConfig = viewForm.controls.animateConfig.value;\n\n    if ((view.sourceType === eDataObjectType.Table && view.sourceTableKey > 0) ||\n      (view.sourceType === eDataObjectType.Datalink && view.sourceDatalinkKey > 0)) {\n\n      this.hubService.previewView(view, this.inputColumns, parameters, this.cancelToken).then((result) => {\n        this.refreshDataSubject.next();\n        this.columns = result.columns;\n        this.baseData = result.data;\n\n        if (!this.animateConfig.seriesColumn) {\n        //   this.initializeAnimation();\n        // } else {\n          this.data = this.baseData;\n        }\n      }).catch(() => {\n      });\n    }\n  }\n\n  download(format) {\n    let view = <DexihView>this.formsService.currentForm.value;\n    let downloadObject = new DownloadObject();\n    if (view.sourceType === eDataObjectType.Datalink) {\n      downloadObject.objectKey = view.sourceDatalinkKey;\n      downloadObject.objectType = eDataObjectType.Datalink;\n    }\n    if (view.sourceType === eDataObjectType.Table) {\n      downloadObject.objectKey = view.sourceTableKey;\n      downloadObject.objectType = eDataObjectType.Table;\n    }\n\n    downloadObject.query = this.selectQuery;\n    this.hubService.downloadData([downloadObject], false, format, this.cancelToken)\n  }\n\n  hasChanged() {\n    this.formsService.markAsChanged();\n  }\n\n  parameterChange() {\n    if (this.formsService.currentForm.controls.autoRefresh.value) {\n      this.refresh();\n    }\n  }\n\n  toggleEdit() {\n    this.showEdit = !this.showEdit;\n    this.hasEdited = true;\n  }\n\n  public canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>((resolve) => {\n      if (this.hasEdited && this.formsService.hasChanged) {\n        this.authService.confirmDialog('The view has not been saved',\n          'The view changes have not been saved.  Do you want to discard the changes and exit?')\n          .then((confirm) => {\n            resolve(confirm);\n          }).catch(() => {\n            resolve(false);\n          });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  // @HostListener allows is to guard against browser refresh, close, etc.\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.hasEdited && this.formsService.hasChanged) {\n      $event.returnValue = 'The view changes have not been saved.  Do you want to discard the changes and exit?';\n    }\n  }\n}\n","<div class=\"container-fluid\" *ngIf=\"formsService\">\n\t<d-widget title=\"Edit View\" iconClass=\"fa fa-lg fa-fw fa-bar-chart\" [showCloseButton]=\"true\" [padding]=\"false\"\n\t (close)=\"close()\">\n\t\t<ng-template #header>\n\t\t\t<dexih-invalid-form-details [control]=\"formsService.currentForm\" (click)=\"formsService.showErrors()\" class=\"mr-1\"></dexih-invalid-form-details>\n\t\t\t<d-button-refresh class=\"mr-1\" (click)=\"refresh()\" text=\"Reload\"></d-button-refresh>\n\t\t\t<download-button class=\"mr-1\" (download)=\"download($event)\"></download-button>\n\t\t\t\n\t\t\t<div class=\"btn-group btn-group-toggle mr-1\" data-toggle=\"buttons\" title=\"Table\">\n\t\t\t\t<label class=\"btn btn-primary\" [ngClass]=\"{active: showChart===false}\">\n\t\t\t\t\t<input type=\"radio\" name=\"options\" value=\"table\" autocomplete=\"off\" (click)=\"toggleChart()\">\n\t\t\t\t\t<i class=\"fa fa-table\"></i>\n\t\t\t\t</label>\n\t\t\t\t<label class=\"btn btn-primary\" [ngClass]=\"{active: showChart===true}\" title=\"Chart\">\n\t\t\t\t\t<input type=\"radio\" name=\"options\" value=\"chart\" autocomplete=\"off\" (click)=\"toggleChart()\">\n\t\t\t\t\t<i class=\"fa fa-bar-chart\"></i>\n\t\t\t\t</label>\n\t\t\t</div>\n\n\t\t\t<save-button *ngIf=\"hubCache.canWrite\" [formsService]=\"formsService\" class=\"mr-1\"></save-button>\n\t\t\t<d-button-edit class=\"mr-1\" (click)=\"toggleEdit()\" [text]=\"showEdit ? 'Hide Edit' : 'Edit'\"></d-button-edit>\n\t\t\t<cancel-button [formsService]=\"formsService\"></cancel-button>\n\t\t</ng-template>\n\n\t\t<div class=\"container m-3\" *ngIf=\"!showEdit\">\n\t\t\t<input-parameters [showEdit]=\"showEdit\" [parameters]=\"formsService.currentForm?.controls.parameters\" [formsService]=\"formsService\" [refreshEvent]=\"refreshDataObservable\" (onRefreshData)=\"refresh()\" (onChange)=\"parameterChange()\"></input-parameters>\n\t\t\t<series-animate [animateConfig]=\"animateConfig\" [columns]=\"columns\" (hasChanged)=\"hasChanged()\" [baseData]=\"baseData\" [(data)]=\"data\"></series-animate>\n\t\t\t<div class=\"mt-3\"  *ngIf=\"!data || data.length === 0\">\n\t\t\t\t<d-button-refresh  class=\"mr-1\" (click)=\"refresh()\" text=\"Reload\" [autoCompact]=\"false\"></d-button-refresh>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<d-tabs title=\"View Properties\" *ngIf=\"showEdit\" [showExpandButton]=\"true\">\n\t\t\t<d-tab *ngIf=\"formsService.currentForm && (formsService.currentForm?.controls.parameters.length > 0)\" title=\"Properties\" >\n\t\t\t\t<form [formGroup]=\"formsService.currentForm\"  class=\"container\">\n\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<form-input label=\"View Name\" formControlName=\"name\" placeholder=\"Enter the view name.\" [autocapitalize]=\"true\" iconClass=\"fa fa-list\"\n\t\t\t\t\t\t\t[errors]=\"formsService.formErrors['name']\">\n\t\t\t\t\t\t\t</form-input>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<form-textarea label=\"Description\" [showPreview]=\"true\" [isHidden]=\"true\" formControlName=\"description\" placeholder=\"Enter the description.\">\n\t\t\t\t\t\t\t</form-textarea>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t\t\t<form-select label=\"Data Source Type\" formControlName=\"sourceType\" [items]=\"sourceTypes\" itemKey=\"key\" itemName=\"name\"\n\t\t\t\t\t\t\t\t\ticonClass=\"fa fa-database\" note='Specify the source type for this view' [enableFilter]=\"false\">\n\t\t\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t\t<section class=\"form-group col-md-6\" *ngIf=\"formsService.currentForm.value.sourceType == eDataObjectType.Table\">\n\t\t\t\t\t\t\t\t\t<form-select label=\"Source Table\" formControlName=\"sourceTableKey\" [errors]=\"formsService.formErrors?.sourceTableKey\" [items]=\"connectionTables\"\n\t\t\t\t\t\t\t\t\tparentName=\"name\" childItems=\"dexihTables\" itemKey=\"key\" itemName=\"logicalName\" note=\"Select the source table\">\n\t\t\t\t\t\t\t\t\t<table-edit-button [key]=\"formsService.currentForm.controls.sourceTableKey.value\"></table-edit-button>\n\t\t\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t\t<section class=\"form-group col-md-6\" *ngIf=\"formsService.currentForm.value.sourceType == eDataObjectType.Datalink\">\n\t\t\t\t\t\t\t\t\t<form-select label=\"Source Datalink\" formControlName=\"sourceDatalinkKey\" [errors]=\"formsService.formErrors?.sourceDatalinkKey\"\n\t\t\t\t\t\t\t\t\t[items]=\"datalinks\" itemKey=\"key\" itemName=\"name\" note='Select the source datalink'>\n\t\t\t\t\t\t\t\t\t<datalink-edit-button [key]=\"formsService.currentForm.controls.sourceDatalinkKey.value\"></datalink-edit-button>\n\t\t\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<form-checkbox formControlName=\"autoRefresh\" label=\"Automatically refresh data when view is opened\"></form-checkbox>\n\t\t\t\t\t\t\t<form-checkbox label=\"View is shared in the catalog to users with read access.\" formControlName=\"isShared\">\n\t\t\t\t\t\t\t</form-checkbox>\n\t\t\t\n\t\t\t\t\t\t</section>\n\n\t\t\t\t\t</fieldset>\n\t\t\t\t</form>\n\t\t\t</d-tab>\n\n\t\t\t<d-tab title=\"Parameters\">\n\t\t\t\t<div class=\"container\">\n\t\t\t\t\t<div class=\"mb-1\">\n\t\t\t\t\t\t<d-button-refresh [autoCompact]=\"false\" (click)=\"refreshDatalink()\" text=\"Reset\"></d-button-refresh>\n\t\t\t\t\t</div>\n\t\t\t\t\t<input-parameters [showEdit]=\"showEdit\" [parameters]=\"formsService.currentForm?.controls.parameters\" [formsService]=\"formsService\" [refreshEvent]=\"refreshDataObservable\" (onRefreshData)=\"refresh()\" (onChange)=\"parameterChange()\"></input-parameters>\n\t\t\t\t\t<div class=\"mt-3\"  *ngIf=\"!data || data.length === 0\">\n\t\t\t\t\t\t<d-button-refresh  class=\"mr-1\" (click)=\"refresh()\" text=\"Reload\" [autoCompact]=\"false\"></d-button-refresh>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</d-tab>\n\n\t\t\t<d-tab  *ngIf=\"inputColumns && inputColumns.length > 0\" title=\"InputColumns\" >\n\t\t\t\t<span *ngFor=\"let column of inputColumns; let i = index\" class=\"input-group\" class=\"container\">\n\t\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t\t<div class=\"input-group-text\">\n\t\t\t\t\t\t\t{{column.logicalName}}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<form-input name=\"column{{i}}\" class=\"form-control p-0\" [placeholder]=\"'Enter ' + column.logicalName\" [(ngModel)]=\"column.value\"></form-input>\n\t\t\t\t</span>\n\t\t\t</d-tab>\n\n\t\t\t<d-tab  *ngIf=\"showEdit\" title=\"Animation\" >\n\t\t\t\t<series-animate-properties [animateConfig]=\"animateConfig\" [columns]=\"columns\" (hasChanged)=\"hasChanged()\"></series-animate-properties>\n\t\t\t</d-tab>\n\n\t\t\t<d-tab  *ngIf=\"showEdit\" title=\"Query\" >\n\t\t\t\t<query-builder  [selectQuery]=\"formsService.currentForm.controls.selectQuery.value\" [columns]=\"tableColumns\" [inputColumns]=\"inputColumns\" [parameters]=\"formsService.currentForm.controls.parameters.value\" (hasChanged)=\"hasChanged()\" [refreshEvent]=\"refreshDataObservable\" (onRefreshData)=\"refresh()\"></query-builder>\n\t\t\t</d-tab>\n\t\t</d-tabs>\n\t\t<ng-template [ngIf]=\"columns?.length > 0 && data?.length > 0\">\n\t\t\t<d-table *ngIf=\"!showChart\" [enableMultiSelect]=\"false\" [enableSaveCsv]=\"true\" [csvFileName]=\"formsService.currentForm?.controls.name.value + '.csv'\" [columns]=\"columns\" [data]=\"data\" [hideTable]=\"showChart\">\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<d-button-refresh class=\"mr-1\" (click)=\"refresh()\" text=\"Reload\"></d-button-refresh>\n\t\t\t\t</ng-template>\n\t\t\t</d-table>\n\n\t\t\t<div *ngIf=\"showChart\">\n\t\t\t<chart-builder \n\t\t\t\t[title]=\"formsService.currentForm.controls.name.value\" \n\t\t\t\t[columns]=\"columns\" \n\t\t\t\t[data]=\"data\" \n\t\t\t\t[config]=\"formsService.currentForm.controls.chartConfig.value\"\n\t\t\t\t[showEdit]=\"showEdit\"\n\t\t\t\t(hasChanged)=\"hasChanged()\">\n\t\t\t</chart-builder>\n\t\t</div>\n\t\t</ng-template>\n\n\n\t</d-widget>\n\n\t<dexih-help class=\"m-3\" title=\"Views\" path=\"/assets/help/reference/view.md\"></dexih-help>\n\n</div>","import {  OnDestroy, Injectable } from '@angular/core';\nimport { Observable, Subscription, BehaviorSubject} from 'rxjs';\nimport { LogFactory, eLogLevel } from '../../logging';\nimport { HubConnection, HubConnectionBuilder, LogLevel, HubConnectionState } from '@microsoft/signalr';\nimport { Location } from '@angular/common';\nimport { ClientMessage, eClientCommand } from '../shared/shared.models';\nimport { environment } from '../../environments/environment';\n\n@Injectable()\nexport class WebSocketService implements OnDestroy {\n    private _webSocketStatus = new BehaviorSubject<string>('Disconnected');\n    private _connectHubSubscription: Subscription;\n\n    public _webSocketMessages = new BehaviorSubject<ClientMessage>(null);\n    private _connectionId: string;\n\n    private startingWebSocket = false;\n\n    private logger = new LogFactory('WebsocketService');\n\n    private hubConnection: HubConnection;\n    private hubConnected = new BehaviorSubject<boolean>(false);\n\n    constructor(private location: Location\n    ) {\n        this._webSocketStatus.next('Disconnected');\n    }\n\n    ngOnDestroy() {\n        if (this._webSocketStatus) { this._webSocketStatus.unsubscribe(); }\n        if (this._connectHubSubscription) { this._connectHubSubscription.unsubscribe(); }\n    }\n\n    public async initializeWebSocket() {\n        this.logger.LogC(() => `InitializeWebSocket`, eLogLevel.Debug);\n\n        this._webSocketStatus.next('Connecting');\n\n        if (this.hubConnection) {\n            await this.hubConnection.stop();\n        }\n\n        this.hubConnection = new HubConnectionBuilder()\n            .configureLogging(LogLevel.Trace)\n            .withUrl(environment.apiUrl ? environment.apiUrl + '/browser' : this.location.prepareExternalUrl('/browser'))\n            .build();\n\n        this.hubConnection.on('Command', (remoteMessage: ClientMessage) => {\n            this.logger.LogC(() => `startWebSocket: receive new message: ${remoteMessage.command}.`, eLogLevel.Debug);\n            this._webSocketMessages.next(remoteMessage);\n        });\n\n        this.hubConnection.onclose((err: any) => {\n            this.logger.LogC(() => `startWebSocket disconnected. ${err}.`, eLogLevel.Error);\n            this._webSocketStatus.next(`${err}.  Check your network connection.`);\n            this.hubConnected.next(false);\n            this.sendDisconnect();\n            this._connectionId = null;\n\n            // wait 5 seconds, then attempt to reconnect.\n            setTimeout(() => this.startWebSocket(), 5000);\n        });\n\n        await this.startWebSocket();\n    }\n\n    public getWebSocketObservable(): Observable<ClientMessage> {\n        return this._webSocketMessages.asObservable();\n    }\n\n    public getWebSocketStatusObservable(): Observable<string> {\n        return this._webSocketStatus.asObservable();\n    }\n\n    public getWebSocketConnectionId() {\n        return this._connectionId;\n    }\n\n    private startWebSocket(): Promise<void> {\n        if (!this.startingWebSocket) {\n            this.startingWebSocket = true;\n\n            return new Promise<void>((resolve, reject) => {\n                if (this.hubConnection.state === HubConnectionState.Connected) {\n                    resolve();\n                    this.startingWebSocket = false;\n                    return;\n                }\n\n                this.hubConnection.start().then(() => {\n                    this._webSocketStatus.next('Connected');\n                    this.hubConnected.next(true);\n                    this.sendConnect().then(() => {\n                        resolve();\n                        this.logger.LogC(() => `startWebSocket: Hub started.`, eLogLevel.Debug);\n                        this.startingWebSocket = false;\n                    }).catch(reason => {\n                        reject(reason);\n                        this.startingWebSocket = false;\n                    });\n                })\n                    .catch(err => {\n                        this._webSocketStatus.next(`${err}.  Check your network connection.`);\n                        this.sendDisconnect();\n                        this.hubConnected.next(false);\n                        this.logger.LogC(() => `startWebSocket: Hub start failed ${err}.`, eLogLevel.Debug);\n                        setTimeout(() => {\n                            this.startingWebSocket = false;\n                            this.startWebSocket();\n                        }, 5000);\n                        resolve();\n                    });\n            });\n        }\n    }\n\n    private sendDisconnect() {\n        const disconnectMessage = new ClientMessage();\n        disconnectMessage.command = eClientCommand.Disconnect;\n        this._webSocketMessages.next(disconnectMessage);\n    }\n\n    private sendConnect(): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            const message = new ClientMessage();\n            return this.hubConnection.invoke('Connect').then(value => {\n                this._connectionId = value;\n                message.command = eClientCommand.Connect;\n                this._webSocketMessages.next(message);\n                resolve();\n            }).catch(reason => {\n                this._webSocketMessages.next(reason);\n                reject(reason);\n            });\n        });\n    }\n\n\n}\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { HubCache, PreviewResults, DexihInputParameter } from '../../hub.models';\nimport { combineLatest, Subscription, Subject } from 'rxjs';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubService } from '../../hub.service';\nimport { InputOutputColumns } from '../../hub.lineage.models';\nimport { PromiseWithCancel, CancelToken } from '../../../+auth/auth.models';\nimport { eSourceType, DexihTable, DexihDatalink, ChartConfig, InputColumn, DexihColumnBase, SelectQuery,\n    eDownloadFormat, DownloadObject, DexihView, eViewType, eDataObjectType, DexihViewParameter } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'preview-data',\n    templateUrl: 'preview-data.component.html'\n})\n\nexport class PreviewDataComponent implements OnInit, OnDestroy {\n    @Input() viewSource: eDataObjectType;\n    @Input() key: number;\n    @Input() table: DexihTable;\n    @Input() datalink: DexihDatalink;\n    @Input() datalinkTransformKey: number;\n    @Input() previewUpdates = false;\n\n    private _subscription: Subscription;\n\n    private hubCache: HubCache;\n\n    private refreshDataSubject: Subject<void> = new Subject<void>();\n    public refreshDataObservable = this.refreshDataSubject.asObservable();\n\n    private requiresRefreshDataSubject: Subject<void> = new Subject<void>();\n    public requiresRefreshDataObservable = this.requiresRefreshDataSubject.asObservable();\n    \n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    public chartConfig = new ChartConfig();\n    public view = 'table';\n    public transformProperties = null;\n\n    public inputColumns: InputColumn[];\n    public parameters: DexihInputParameter[];\n    public tableColumns: DexihColumnBase[];\n    selectQuery: SelectQuery = new SelectQuery();\n\n    public title: string;\n\n    columns: Array<any>;\n    public data: Array<any>;\n\n    public isRefreshing = false;\n    private firstLoad = true;\n    private dialogOpen = false;\n\n    public allowViewSave = false;\n\n    public previewQuery: PromiseWithCancel<PreviewResults>;\n    public cancelToken: CancelToken = new CancelToken();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        ) {\n            this.selectQuery.rows = 100;\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.hubService.getRemoteAgentObservable()\n            ).subscribe(result => {\n                this.hubCache = result[0];\n                let remoteAgent = result[1];\n\n                if (this.hubCache.isLoaded()) {\n                    // get the hub key from the route data, and update the service.\n\n                    switch (this.viewSource) {\n                        case eDataObjectType.Datalink:\n                            let datalink: DexihDatalink;\n                            if ( this.key ) {\n                                datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === this.key);\n                            } else {\n                                datalink = this.datalink;\n                            }\n\n                            if (!datalink) { return; }\n                            // this.key = datalink.key;\n\n                            // only allows view creation on saved datalink\n                            this.allowViewSave = datalink.key && !this.datalinkTransformKey ? true : false;\n\n                            this.title = 'Datalink - ' + datalink.name;\n\n                            // get the outputs from the last transform in the datalink\n                            const ioColumns = new InputOutputColumns();\n                            ioColumns.buildInputOutput(datalink);\n                            if (this.datalinkTransformKey) {\n                                let transform = datalink.dexihDatalinkTransforms.find(c => c.key === this.datalinkTransformKey);\n                                this.tableColumns = transform['runTime']['outputColumns'];\n                            } else {\n                                this.tableColumns = ioColumns.getDatalinkOutputColumns(datalink);\n                            }\n\n                            this.inputColumns = datalink.sourceDatalinkTable.dexihDatalinkColumns.filter(c => c.isInput).map(c => {\n                                return  {datalinkKey: this.key, datalinkName: datalink.name,\n                                    name: c.name, logicalName: c.logicalName, dataType: c.dataType,\n                                    rank: c.rank, value: c.defaultValue, defaultValue: c.defaultValue};\n                            });\n\n                            this.parameters = datalink.parameters;\n                            break;\n\n                        case eDataObjectType.Table:\n                            let table: DexihTable;\n                            if ( this.key ) {\n                                table = this.hubCache.getTable(this.key);\n                            } else {\n                                table = this.table;\n                            }\n\n                            if (!table) { return; }\n                            // this.key = table.key;\n\n                            // only allows view creation on saved table\n                            this.allowViewSave = table.key ? true : false;\n\n                            this.title = 'Table - ' + table.name;\n\n                            this.tableColumns = table.dexihTableColumns;\n                            this.inputColumns = table.dexihTableColumns.filter(c => c.isInput).map(c => {\n                                return  {datalinkKey: 0, datalinkName: null,\n                                    name: c.name, logicalName: c.logicalName, dataType: c.dataType,\n                                    rank: c.rank, value: c.defaultValue, defaultValue: c.defaultValue};\n                                }\n                            );\n                    }\n                }\n\n                if (remoteAgent) {\n                    if (!this.firstLoad) {\n                        if (!this.dialogOpen) {\n                            this.dialogOpen = true;\n                            this.authService.confirmDialog('Remote Agent Available',\n                                'A remote agent is available, would you like to refresh the data?').then(confirm => {\n                                    if (confirm) {\n                                        this.refresh();\n                                    }\n                                    this.dialogOpen = false;\n                                });\n                        }\n                    } else {\n                        this.refresh();\n                    }\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Preview');\n        }\n\n    }\n\n    ngOnDestroy(): void {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    parameterChange() {\n        this.requiresRefreshDataSubject.next();\n    }\n\n    refresh() {\n        if (!this.isRefreshing) {\n            this.isRefreshing = true;\n\n            // cancel any existing query.\n            if (this.previewQuery) { this.previewQuery.cancel(); }\n\n            let previewQuery: PromiseWithCancel<PreviewResults>;\n\n            switch (this.viewSource) {\n                case eDataObjectType.Datalink:\n                    if (this.key) {\n                        previewQuery = this.hubService.previewDatalinkKeyData(this.key, this.previewUpdates, this.selectQuery,\n                            this.inputColumns, this.parameters, this.cancelToken);\n                    } else {\n                        if (this.datalink) {\n                            previewQuery = this.hubService.previewTransformData(this.datalink, this.datalinkTransformKey,\n                                this.selectQuery, this.inputColumns, this.parameters, this.cancelToken);\n                        }\n                    }\n                    break;\n                case eDataObjectType.Table:\n                    if (this.key) {\n                        previewQuery = this.hubService.previewTableKeyData(this.key, false, this.selectQuery,\n                            this.inputColumns, this.parameters, this.cancelToken);\n                    } else {\n                        if (this.table) {\n                            previewQuery = this.hubService.previewTableData(this.table, false, this.selectQuery,\n                                this.inputColumns, this.parameters, this.cancelToken);\n                        }\n                    }\n                    break;\n            }\n\n            if (previewQuery) {\n                previewQuery.then((result) => {\n                    this.refreshDataSubject.next();\n                    this.columns = result.columns;\n                    this.data = result.data;\n                    this.transformProperties = result.transformProperties;\n                    this.isRefreshing = false;\n\n                    if (result.status) {\n                        this.hubService.addHubMessage(result.status, false, 'Preview Data');\n                    }\n                }).catch(() => {\n                    this.data = [];\n                    this.isRefreshing = false;\n                });\n            }\n        }\n    }\n\n    download(format: eDownloadFormat = eDownloadFormat.Csv) {\n        if (this.key) {\n            let downloadObject = new DownloadObject();\n            downloadObject.objectKey = this.key;\n            downloadObject.objectType = this.viewSource;\n            let query = Object.assign({}, this.selectQuery);\n            query.rows = null;\n            downloadObject.query = query;\n            this.hubService.downloadData([downloadObject], false, format, this.cancelToken)\n        } else {\n            switch (this.viewSource) {\n                case eDataObjectType.Datalink:\n                    this.hubService.downloadDatalinkData(this.datalink, this.datalinkTransformKey,\n                        this.selectQuery, this.inputColumns, false, format, this.parameters, this.cancelToken);\n                    break;\n                case eDataObjectType.Table:\n                    this.hubService.downloadTableData(this.table, false, this.selectQuery, this.inputColumns,\n                        false, format, this.cancelToken);\n                    break;\n            }\n        }\n    }\n\n    save() {\n        if (this.view === 'properties') {\n            this.authService.informationDialog('Cannot save', 'Select a chart or table view to save.');\n            return;\n        }\n\n        this.authService.promptDialog('View Name', 'Enter a name for the view.').then(name => {\n            let view = new DexihView();\n            view.name = name;\n            view.sourceType = this.viewSource;\n            switch (this.viewSource) {\n                case eDataObjectType.Datalink:\n                    view.sourceDatalinkKey = this.key;\n                    for (let datalinkParameter of this.parameters) {\n                        let parameter = <DexihViewParameter> Object.assign({}, datalinkParameter);\n                        parameter['datalinkParameterKey'] = datalinkParameter.key;\n                        parameter.key = this.hubCache.getNextSequence();\n                        view.parameters.push(parameter);\n                      }\n                    break;\n                case eDataObjectType.Table:\n                    view.sourceTableKey = this.key;\n                    break;\n            }\n            view.viewType = this.view === 'chart' ? eViewType.Chart : eViewType.Table;\n            view.selectQuery = this.selectQuery;\n            view.chartConfig = this.chartConfig;\n            view.inputValues = this.inputColumns;\n\n            this.hubService.saveView(view).then(() => {\n                this.hubService.addHubSuccessMessage(`The view ${view.name} was successfully saved.`);\n            }).catch(() => {\n                this.data = null;\n            });\n        });\n    }\n}\n","\n<d-table [enableMultiSelect]=\"false\" [enableSaveCsv]=\"true\" [csvFileName]=\"title + '.csv'\" [columns]=\"columns\"\n    [data]=\"data\" [hideTable]=\"view !== 'table'\">\n\n    <ng-template #actions let-items=\"items\">\n        <d-button-refresh class=\"mr-1\" (click)=\"refresh()\" text=\"Reload\"></d-button-refresh>\n        <download-button class=\"ml-1\" (download)=\"download($event)\"></download-button>\n\n        <div class=\"btn-group btn-group-toggle ml-1\" data-toggle=\"buttons\" title=\"Table\">\n            <label class=\"btn btn-primary\" [ngClass]=\"{active: view==='table'}\">\n                <input type=\"radio\" name=\"options\" value=\"table\" autocomplete=\"off\" [(ngModel)]=\"view\">\n                <i class=\"fa fa-table\"></i>\n            </label>\n            <label class=\"btn btn-primary\" [ngClass]=\"{active: view==='chart'}\" title=\"Chart\">\n                <input type=\"radio\" name=\"options\" value=\"chart\" autocomplete=\"off\" [(ngModel)]=\"view\">\n                <i class=\"fa fa-bar-chart\"></i>\n            </label>\n            <label class=\"btn btn-primary\" [ngClass]=\"{active: view==='properties'}\" title=\"Query plan details\">\n                <input type=\"radio\" name=\"options\" value=\"properties\" autocomplete=\"off\" [(ngModel)]=\"view\">\n                <i class=\"fa fa-info\"></i>\n            </label>\n        </div>\n\n        <d-button-save *ngIf=\"allowViewSave\" class=\"ml-1\" (click)=\"save()\"></d-button-save>\n    </ng-template>\n\n    <ng-template #tableHeader>\n        <div class=\"mt-1\">\n        <div *ngIf=\"parameters?.length > 0\" class=\"mb-3 container\">\n            Parameters\n            <input-parameters-view [parameters]=\"parameters\" [refreshEvent]=\"refreshDataObservable\" (onRefreshData)=\"refresh()\" (onChange)=\"parameterChange()\"></input-parameters-view>\n        </div>\n                \n        <query-builder [selectQuery]=\"selectQuery\" [columns]=\"tableColumns\" [inputColumns]=\"inputColumns\" [parameters]=\"parameters\" [refreshEvent]=\"refreshDataObservable\" (onRefreshData)=\"refresh()\" [requiresRefreshEvent]=\"requiresRefreshDataObservable\">\n        </query-builder>\n    </div>\n    </ng-template>\n\n</d-table>\n\n<div [ngStyle]=\"{'display': view === 'chart' ? 'block' : 'none' }\" class=\"mt-1\">\n    <chart-builder [columns]=\"columns\" [data]=\"data\" [config]=\"chartConfig\"></chart-builder>\n</div>\n<div [ngStyle]=\"{'display': view === 'properties' ? 'block' : 'none' }\" class=\"mt-1\">\n    <transform-properties [transformProperties]='transformProperties'></transform-properties>\n</div>\n","export * from './fileFormat-index/fileFormat-index.component';\nexport * from './fileFormat-edit/fileFormat-edit.component';\n","import { Component, Input, OnInit, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { Subscription} from 'rxjs';\nimport { CancelToken } from '../../../+auth/auth.models';\nimport { Functions } from '../../../shared/utils/functions';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { TransformWriterResult, eRunStatus } from '../../../shared/shared.models';\nimport { runStatus } from '../../hub.models';\n\nclass StatusInfo {\n    public writerResult: TransformWriterResult;\n    public percentage;\n    public message;\n    public statusType;\n    public error;\n    public iconClass;\n}\n\n@Component({\n    selector: 'datalink-status',\n    templateUrl: './datalink-status.component.html'\n})\nexport class DatalinkStatusComponent implements OnInit, OnDestroy {\n    @Input() public datalinkKey: number;\n    @Input() public datalinkTestKey: number;\n    @Input() public datajobKey: number;\n    @Input() public tableKey: number;\n    @Input() public writerResult: TransformWriterResult;\n\n    @Output() public progressClick = new EventEmitter();\n\n    private _hubCacheSubscription: Subscription;\n    private _currentStatusSubscription: Subscription;\n    private _previousStatusSubscription: Subscription;\n    private cancelToken: CancelToken = new CancelToken();\n\n    private dataObject: any;\n\n    eRunStatus = eRunStatus;\n    runStatus = runStatus;\n\n    public currentWriterResult: TransformWriterResult;\n    public currentStatus: StatusInfo;\n    public previousStatus: StatusInfo;\n\n    public showCancel = false;\n\n    constructor(private hubService: HubService, private authService: AuthService) {\n    }\n\n    ngOnInit() {\n        if (this.writerResult) {\n            this.previousStatus = this.getStatus(this.writerResult);\n        } else {\n            this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n                if (!cache.isLoaded()) { return; }\n\n                if (this.datalinkKey) {\n                    this.dataObject = cache.hub.dexihDatalinks.find(c => c.key === this.datalinkKey);\n                } else if (this.datajobKey) {\n                    this.dataObject = cache.hub.dexihDatajobs.find(c => c.key === this.datajobKey);\n                } else if (this.datalinkTestKey) {\n                    this.dataObject = cache.hub.dexihDatalinkTests.find(c => c.key === this.datalinkTestKey);\n                } else if (this.tableKey) {\n                    this.dataObject = cache.getTable(this.tableKey);\n                }\n\n                if (this.dataObject) {\n                    if (this._currentStatusSubscription) { this._currentStatusSubscription.unsubscribe(); }\n                    this._currentStatusSubscription = this.dataObject.currentStatus.subscribe(writerResult => {\n                        this.currentWriterResult = writerResult;\n                        if (writerResult) {\n                            this.currentStatus = this.getStatus(writerResult);\n                        } else {\n                            this.currentStatus = null;\n                        }\n\n                    });\n                    if (this._previousStatusSubscription) { this._previousStatusSubscription.unsubscribe(); }\n                    this._previousStatusSubscription = this.dataObject.previousStatus.subscribe(previousStatus => {\n                        if (previousStatus) {\n                            this.previousStatus = this.getStatus(previousStatus);\n                        } else {\n                            this.previousStatus = null;\n                        }\n                    });\n                }\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n        if (this._currentStatusSubscription) { this._currentStatusSubscription.unsubscribe(); }\n        if (this._previousStatusSubscription) { this._previousStatusSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    getStatus(writerResult: TransformWriterResult): StatusInfo {\n        const statusInfo = new StatusInfo();\n\n        if (! writerResult) {\n            statusInfo.message = 'not running';\n            statusInfo.percentage = 0;\n            statusInfo.statusType = 'info';\n            statusInfo.error = '';\n        } else {\n            statusInfo.writerResult = writerResult;\n\n            // calculate the percentage complete.\n            let value: number;\n            switch (writerResult.runStatus) {\n                case eRunStatus.Running:\n                case eRunStatus.RunningErrors:\n                    // use last row count to calculate percentage\n                    if (writerResult.lastRowTotal > 0) {\n                        value = 100 * (writerResult.rowsTotal / writerResult.lastRowTotal);\n                        if (value >= 100) {\n                            value = 99; // if it exceeds 100 leave it on 99%\n                        }\n                    } else {\n                        value = 50; // no last rows count, then use 50%.\n                    }\n                    this.showCancel = true;\n                    break;\n                case eRunStatus.Abended:\n                case eRunStatus.Cancelled:\n                case eRunStatus.Finished:\n                case eRunStatus.FinishedErrors:\n                case eRunStatus.Passed:\n                case eRunStatus.Failed:\n                    value = 100;\n                    this.showCancel = false;\n                    break;\n                case eRunStatus.NotRunning:\n                    value = 0;\n                    this.showCancel = false;\n                    break;\n                case eRunStatus.Initialised:\n                case eRunStatus.Scheduled:\n                case eRunStatus.Started:\n                    value = 0;\n                    this.showCancel = true;\n                    break;\n            }\n\n            statusInfo.percentage = value;\n\n            // update the type, which is used for the colour of the progress\n            switch (writerResult.runStatus) {\n                case eRunStatus.Abended:\n                case eRunStatus.Cancelled:\n                case eRunStatus.FinishedErrors:\n                case eRunStatus.RunningErrors:\n                case eRunStatus.Failed:\n                    statusInfo.statusType = 'danger';\n                    break;\n                case eRunStatus.Initialised:\n                case eRunStatus.NotRunning:\n                case eRunStatus.Running:\n                case eRunStatus.Scheduled:\n                case eRunStatus.Started:\n                    statusInfo.statusType = 'primary';\n                    break;\n                case eRunStatus.Finished:\n                case eRunStatus.Passed:\n                    statusInfo.statusType = 'success';\n                    break;\n            }\n\n            // update the type, which is used for the colour of the progress\n            switch (writerResult.runStatus) {\n                case eRunStatus.Abended:\n                case eRunStatus.Failed:\n                case eRunStatus.FinishedErrors:\n                    statusInfo.iconClass = 'fa fa-ban text-danger'\n                    break;\n                case eRunStatus.Cancelled:\n                    statusInfo.iconClass = 'fa fa-ban text-warning'\n                    break;\n                case eRunStatus.RunningErrors:\n                    statusInfo.iconClass = 'fa fa-cogs text-danger'\n                    break;\n                case eRunStatus.Initialised:\n                    statusInfo.iconClass = 'fa fa-circle text-success'\n                    break;\n                case eRunStatus.NotRunning:\n                    statusInfo.iconClass = 'fa fa-square'\n                    break;\n                case eRunStatus.Running:\n                    statusInfo.iconClass = 'fa fa-cogs text-success'\n                    break;\n                case eRunStatus.Scheduled:\n                    statusInfo.iconClass = 'fa fa-calendar text-success'\n                    break;\n                case eRunStatus.Started:\n                    statusInfo.iconClass = 'fa fa-cog text-success'\n                    break;\n                case eRunStatus.Finished:\n                case eRunStatus.Passed:\n                    statusInfo.iconClass = 'fa fa-square text-success'\n                    break;\n            }\n\n            // update the message and error\n            const status = this.runStatus.find(c => c.key === writerResult.runStatus).name;\n            // tslint:disable-next-line:max-line-length\n            statusInfo.message = `(read: ${Functions.numberWithCommas(writerResult.rowsReadPrimary)}, written: ${Functions.numberWithCommas(writerResult.rowsTotal)}) ${status}`;\n\n            statusInfo.error = writerResult.message;\n        }\n        return statusInfo;\n    }\n\n    cancelled() {\n        if (this.datalinkKey) {\n            this.hubService.cancelDatalinks([this.datalinkKey], this.cancelToken);\n        } else if (this.datajobKey) {\n            this.hubService.deactivateDatajobs([this.datajobKey], this.cancelToken);\n        } else if (this.datalinkTestKey) {\n            this.hubService.cancelDatalinkTests([this.datalinkTestKey], this.cancelToken);\n        }\n}\n\n    onProgressClick($event: any) {\n        if (this.writerResult && !this.writerResult.auditConnectionKey) {\n            this.authService.informationDialog('No audit connection',\n            'The selected audit item is attached to a datalink/datajob that does not have an Audit Connection specified. ' +\n            'To view detailed results, specify a audit connection.')\n        }\n        this.progressClick.emit($event);\n    }\n\n}\n\n\n","<div *ngIf=\"previousStatus?.writerResult?.auditKey\" class=\"mb-1\" style=\"width: 300px;\">\n    <d-progressbar  \n    [showCancel]=\"false\" \n    [value]=\"previousStatus.percentage\"\n    [type]=\"previousStatus.statusType\" \n    [routerLink]=\"['result-view', previousStatus.writerResult?.auditConnectionKey, previousStatus.writerResult?.auditKey]\" queryParamsHandling=\"merge\"\n    height=\"30px\"\n    title=\"Click to see execution details\" >\n        (Previous) {{previousStatus.message}}\n    </d-progressbar>\n</div>\n\n<div *ngIf=\"currentStatus?.writerResult\" class=\"mb-1\" style=\"width: 300px;\">\n    <d-progressbar *ngIf=\"currentStatus.writerResult.runStatus == eRunStatus.Scheduled\"  \n        [showCancel]=\"true\" \n        (cancelled)=\"cancelled()\" \n        [value]=\"100\" \n        [type]=\"currentStatus.statusType\"\n        height=\"30px\" style=\"width: 300px;\">\n            <div [title]=\"'The job will run at ' + (currentStatus.writerResult.scheduledTime | calendar)\">\n                <i class=\"fa fa-clock-o\"></i>&nbsp;{{currentStatus.writerResult.scheduledTime | calendar}} (in&nbsp;<countdown [end]=\"currentStatus.writerResult.scheduledTime\" ></countdown>)     \n            </div>\n    </d-progressbar>    \n</div>\n\n<div *ngIf=\"currentStatus?.writerResult && currentStatus.writerResult.runStatus != eRunStatus.Scheduled\"   style=\"width: 300px;\">\n    <d-progressbar \n        [showCancel]=\"showCancel\" \n        (cancelled)=\"cancelled()\" \n        (progressClick)=\"onProgressClick()\"\n        [routerLink]=\"['result-view', currentStatus.writerResult?.auditConnectionKey, currentStatus.writerResult?.auditKey]\" queryParamsHandling=\"merge\" \n        [value]=\"currentStatus.percentage\" \n        [type]=\"currentStatus.statusType\"\n        height=\"30px\" style=\"width: 300px;\">\n        {{currentStatus.message}}\n    </d-progressbar>    \n</div>\n","import {Component, OnInit, Injectable, HostListener} from '@angular/core';\nimport {AuthService} from '../../+auth/auth.service';\nimport {Observable, Subscription, BehaviorSubject, combineLatest, fromEvent} from 'rxjs';\nimport {map, debounceTime} from 'rxjs/operators';\n\n\nconst store = {\n  shortcutOpen: false,\n  isMobile: \t(/iphone|ipad|ipod|android|blackberry|mini|windows\\sce|palm/i.test(navigator.userAgent.toLowerCase())),\n  device: '',\n  mobileViewActivated: false,\n  menuCollapsed: false,\n  menuIsOpen: false\n};\n\n@Injectable()\nexport class LayoutService {\n\n  isActivated: boolean;\n  store: any;\n  private subject: BehaviorSubject<any>;\n\n  trigger() {\n    this.subject.next(this.store)\n  }\n\n  subscribe(next, err?, complete?): Subscription {\n    return this.subject.subscribe(next, err, complete)\n  }\n\n  constructor(\n    private authService: AuthService\n  ) {\n    this.subject = new BehaviorSubject<any>(store);\n    this.store = store;\n    this.resizeUpdate();\n\n    fromEvent(window, 'resize').pipe(debounceTime(100), map(() => {\n      this.resizeUpdate();\n      this.trigger();\n    })).subscribe();\n  }\n\n  resizeUpdate() {\n    this.store.mobileViewActivated = window.innerWidth < 992;\n    this.store.menuCollapsed = window.innerWidth < 1200;\n  }\n\n  hideMenu() {\n    this.store.menuIsOpen = false;\n    if (this.store.mobileViewActivated) {\n      this.store.menuCollapsed = true;\n    }\n    this.trigger();\n  }\n\n  onShowMenu() {\n    this.store.menuIsOpen = true;\n    this.trigger();\n  }\n\n  onCollapseMenu() {\n    this.store.menuCollapsed = !this.store.menuCollapsed;\n    this.trigger();\n  }\n\n  menuCollapsed(): boolean {\n    return this.store.menuCollapsed;\n  }\n\n  onShortcutToggle(condition?: any) {\n    if (!condition) {\n      this.store.shortcutOpen = !this.store.shortcutOpen;\n    } else {\n      this.store.shortcutOpen = !!condition;\n    }\n\n    this.trigger();\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihConnection, DexihTable } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'table-view',\n    templateUrl: './table-view.component.html'\n})\n\nexport class TableViewComponent implements OnInit {\n    @Input() connection: DexihConnection;\n    @Input() table: DexihTable;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div class=\"float-right\">\n    <actions-table-button [tables]=\"[table]\" [pullRight]=\"true\"></actions-table-button>\n</div>\n<div>\n    <h5>{{table.name}}</h5>\n    <div *ngIf=\"table.description\">\n        <markdown [data]=\"table.description\"></markdown>\n    </div>\n    <div class=\"note\">Connection: {{connection.name}} / Updated: {{connection.updateDate | calendar }} </div>\n</div>","import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'countdown',\n  template: '{{ displayTime }}',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CountdownComponent implements OnDestroy {\n  private _time: number;\n  private _timing = 1000;\n  private _interval;\n\n  @Input() public set end(value: string) {\n    let endDate = new Date(value);\n    this._time = endDate.getTime();\n    this._startTimer();\n}\n\n  @Input()\n  public set time(value: string | number) {\n    this._time = parseInt(value as string, 10);\n    this._startTimer();\n  }\n\n  @Input()\n  public set timing(value: string | number) {\n    this._timing = parseInt(value as string, 10);\n    this._startTimer();\n  }\n\n  public get delta() {\n    let date = new Date();\n    return Math.max(0, Math.floor((this._time - date.getTime()) / 1000));\n  }\n\n  public get displayTime() {\n    let days, hours, minutes, seconds, delta = this.delta;\n\n    let time = '';\n\n    days = Math.floor(delta / 86400);\n    delta -= days * 86400;\n    hours = Math.floor(delta  / 3600) % 24;\n    delta -= hours * 3600;\n    minutes = Math.floor(delta  / 60) % 60;\n    delta -= minutes * 60;\n    seconds = delta % 60;\n\n    // create the display string\n    time += days > 0 ? days + ' days ' : '';\n    time += hours > 0 ? hours + ' hours ' : '';\n    time += minutes > 0 && days === 0 ? minutes + ' minutes ' : '';\n    time += days === 0 && hours === 0 ? seconds + ' seconds ' : '';\n\n    return time;\n  }\n\n  constructor(private _changeDetector: ChangeDetectorRef) { }\n\n  ngOnDestroy() {\n    this._stopTimer();\n  }\n\n  private _startTimer() {\n    if (this.delta <= 0) { return; }\n    this._stopTimer();\n    this._interval = setInterval(() => {\n      this._changeDetector.detectChanges();\n      if (this.delta <= 0) { this._stopTimer(); }\n    }, this._timing);\n  }\n\n  private _stopTimer() {\n    clearInterval(this._interval);\n    this._interval = undefined;\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihView } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'view-view',\n    templateUrl: './view-view.component.html'\n})\n\nexport class ViewViewComponent implements OnInit {\n    @Input() view: DexihView;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div [routerLink]=\"['view-edit', view.key]\" queryParamsHandling=\"merge\">\n    <h5>{{view.name}}</h5>\n    <div *ngIf=\"view.description\">\n        <markdown [data]=\"view.description\"></markdown>\n    </div>\n    <div class=\"note\">{{view.viewType}} / Updated: {{view.updateDate | calendar }} </div>\n</div>","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { DTableModule } from 'ngx-d-table';\nimport { DComponentsModule } from 'ngx-d-components';\nimport { DMarkdownModule } from 'ngx-d-markdown';\nimport { GridsterModule } from 'angular-gridster2';\n\nimport { LayoutService } from './layout/layout.service';\nimport { UtilsModule } from './utils/utils.module';\nimport { DexihMessageModule } from './ui/dexihMessage';\nimport { DexihFormControlsModule } from './ui/dexihFormControls';\nimport { DexihHelpModule } from './help/dexih-help.module';\nimport { DexihIconsModule } from './ui/icons'\nimport { QueryBuilderModule } from './ui/queryBuilder/query-builder.module';\nimport { ChartBuilderModule } from './ui/charts/charts.module';\nimport { DexihSupportOptionsModule } from './ui/supportOptions/support-options.module'\nimport { SharedDataModule } from './ui/sharedData/shared-data.module';\nimport { SeriesAnimateModule } from './ui/seriesAnimate/series-animate.module';\nimport { ChartsModule } from 'ng2-charts';\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, RouterModule, HttpClientModule,\n\n    DragDropModule,\n\n    DMarkdownModule,\n    DComponentsModule,\n    DTableModule,\n    GridsterModule,\n\n    DexihMessageModule,\n    DexihFormControlsModule,\n    DexihHelpModule,\n    DexihIconsModule,\n    QueryBuilderModule,\n    ChartBuilderModule,\n    DexihSupportOptionsModule,\n    SharedDataModule,\n    SeriesAnimateModule,\n    ChartsModule,\n  ],\n  declarations: [\n  ],\n  exports: [\n    CommonModule, FormsModule, RouterModule, DragDropModule,\n\n    DComponentsModule,\n    DTableModule,\n    GridsterModule,\n\n    UtilsModule,\n    DexihMessageModule,\n    DexihFormControlsModule,\n    DexihHelpModule,\n    DexihIconsModule,\n    QueryBuilderModule,\n    ChartBuilderModule,\n    DexihSupportOptionsModule,\n    SeriesAnimateModule,\n    ChartsModule,\n  ],\n  providers: [\n    LayoutService,\n    HttpClientModule\n  ]\n\n})\nexport class SharedModule {\n\n  static forRoot(): ModuleWithProviders<SharedModule> {\n    return {\n      ngModule: SharedModule,\n      providers: [\n        LayoutService\n      ]\n    };\n  }\n}\n","import { Component, OnDestroy, OnInit, ViewChild, Input, AfterViewChecked, OnChanges, AfterContentChecked } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { DexihMessageComponent } from '../../../ui/dexihMessage/index';\nimport { eDataObjectType } from '../../../shared.models';\nimport { PreviewDataComponent} from '../preview-data/preview-data.component';\n\n@Component({\n\n    selector: 'preview',\n    templateUrl: './preview.component.html'\n})\nexport class PreviewComponent implements OnInit, OnDestroy, AfterContentChecked {\n    @ViewChild('DexihMessage', { static: true }) public dexihMessage: DexihMessageComponent;\n    @ViewChild('PreviewData', { static: false }) public previewData: PreviewDataComponent;\n\n    private _subscription: Subscription;\n\n\n    objectKey: number;\n    objectType: eDataObjectType;\n    hubKey: number;\n    embed = false; // removes frames from data.\n\n    title = '';\n\n    constructor(\n        private authService: AuthService,\n        private route: ActivatedRoute,\n        private router: Router) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.params,\n                this.route.queryParams\n            ).subscribe(result => {\n                let params = result[0];\n                let queryParams = result[1];\n\n                this.hubKey = +params['hubKey'];\n                this.objectType = +params['objectType'];\n                this.objectKey = +params['objectKey'];\n\n                if (queryParams['embed'] === 'true') {\n                    this.embed = true;\n                }\n            });\n        } catch (e) {\n            this.dexihMessage.addMessage(e);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    // use aftercontentchecked to stop\n    ngAfterContentChecked(): void {\n        if (this.previewData) {\n            this.title = this.previewData.name;\n        }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    edit() {\n        switch (this.objectType) {\n            case eDataObjectType.Datalink:\n                this.router.navigate(['hub', this.hubKey, 'datalinks', 'datalink-edit', 'edit', this.objectKey]);\n                break;\n            case eDataObjectType.Table:\n                this.router.navigate(['hub', this.hubKey, 'tables', 'table-edit', this.objectKey]);\n                break;\n            case eDataObjectType.View:\n                this.router.navigate(['hub', this.hubKey, 'views', 'view-edit', this.objectKey]);\n                break;\n        }\n    }\n\n}\n","<div *ngIf=\"!embed\" class=\"container-fluid\">\n    <d-widget [title]=\"'Preview ' + title\" iconClass=\"fa fa-lg fa-fw fa-table\" [showCloseButton]=\"true\"\n        [padding]=\"false\" (close)=\"close()\">\n\n        <ng-template #header>\n            <d-button-refresh class=\"mr-1\" (click)=\"previewData.refresh()\" text=\"Reload\"></d-button-refresh>\n            <download-button class=\"ml-1\" (download)=\"previewData.downloadData($event)\"></download-button>\n            <d-button-edit class=\"ml-1\" (click)=\"edit()\"></d-button-edit>\n\n\n        </ng-template>\n\n            <preview-data #PreviewData [hubKey]=\"hubKey\" [objectType]=\"objectType\" [objectKey]=\"objectKey\" [updateQueryParameters]=\"true\">\n            </preview-data>\n    </d-widget>\n</div>\n\n<div *ngIf=\"embed\">\n    <preview-data [hubKey]=\"hubKey\" [objectType]=\"objectType\" [objectKey]=\"objectKey\" [updateQueryParameters]=\"false\"></preview-data>\n</div>","import { Component, OnInit, Input, OnChanges, Output, EventEmitter, OnDestroy, SimpleChanges } from '@angular/core';\nimport { AnimateConfig } from '../../shared.models';\nimport { Functions } from '../../../shared/utils/functions';\n\n@Component({\n    selector: 'series-animate',\n    templateUrl: 'series-animate.component.html'\n})\n\nexport class SeriesAnimateComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() animateConfig: AnimateConfig;\n    @Input() columns: Array<any>;\n    @Input() baseData: Array<any>;\n\n    @Input() data: Array<any>;\n    @Output() dataChange = new EventEmitter<Array<any>>();\n\n    @Output() hasChanged = new EventEmitter();\n\n\n    public animationValues = [];\n    public animationValue;\n    public animationTimer;\n    public animationColumnIndex: number;\n    public animationRowIndex: number;\n    public animationPaused = false;\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n    ngOnDestroy() {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.baseData || changes.columns || changes.animateConfig) {\n            setTimeout(() => {\n                this.initializeAnimation();\n            });\n\n        }\n    }\n\n    seriesChanged() {\n        this.initializeAnimation();\n        this.hasChanged.emit();\n    }\n\n    initializeAnimation() {\n        if (this.baseData && this.columns && this.animateConfig && this.animateConfig.seriesColumn) {\n\n            this.animationStop();\n            this.animationSeriesValues();\n            this.animationRowIndex = 0;\n\n            if (this.animateConfig.automatic) {\n                this.animationPlay();\n            } else {\n                this.animationFilter();\n            }\n        } else {\n            this.dataChange.emit(this.baseData);\n        }\n    }\n\n    animationSeriesValues() {\n        this.animationColumnIndex = this.columns.findIndex(c => c.title === this.animateConfig.seriesColumn);\n        const format = this.columns[this.animationColumnIndex].format;\n        const values = Array.from(new Set(this.baseData.map(c => c[this.animationColumnIndex]))).sort((a, b) => {\n            if (a > b) {\n                return 1;\n            }\n            if (a < b) {\n                return -1;\n            }\n            return 0;\n        });\n        this.animationValues = values.map(c => {\n            return {\n                name: Functions.formatValue(c, format),\n                value: c\n            }\n        });\n    }\n\n    animationFilter() {\n        const value = this.animationValues[this.animationRowIndex].value;\n        this.animationValue = value;\n        const data = this.baseData.filter(c => c[this.animationColumnIndex] === value);\n        this.dataChange.emit(data);\n    }\n\n    animationPlay() {\n\n        if (this.animationColumnIndex >= 0) {\n            if (!this.animationPaused) {\n                this.animationRowIndex = 0;\n            }\n            this.animationStop();\n\n            let first = true;\n\n            this.animationTimer = setInterval(() => {\n                if (first) {\n                    first = false;\n                } else {\n                    this.animationRowIndex++;\n                }\n\n                if (this.animationRowIndex + 1 >= this.animationValues.length) {\n                    clearInterval(this.animationTimer);\n                } else {\n                    this.animationFilter();\n\n                    // at last item, then stop.\n                    if (this.animationRowIndex + 1 >= this.animationValues.length) {\n                        clearInterval();\n                    }\n                }\n            }, this.animateConfig.delay);\n\n        } else {\n            //   this.hubService.addHubErrorMessage('The animation did not start as a series column is not set.');\n        }\n    }\n\n    animationPause() {\n        if (this.animationTimer) {\n            this.animationPaused = true;\n            clearInterval(this.animationTimer);\n        }\n    }\n\n    animationStepForward() {\n        if (this.animationRowIndex + 1 < this.animationValues.length) {\n            this.animationRowIndex++;\n            this.animationFilter();\n        }\n    }\n\n    animationStepBackward() {\n        if (this.animationRowIndex > 0) {\n            this.animationRowIndex--;\n            this.animationFilter();\n        }\n    }\n\n    animationLast() {\n        if (this.animationRowIndex + 1 < this.animationValues.length) {\n            this.animationRowIndex = this.animationValues.length - 1;\n            this.animationFilter();\n        }\n    }\n\n    animationFirst() {\n        if (this.animationRowIndex > 0) {\n            this.animationRowIndex = 0;\n            this.animationFilter();\n        }\n    }\n\n    animationChange($event) {\n        this.animationRowIndex = this.animationValues.findIndex(c => c.value === $event);\n        this.animationFilter();\n    }\n\n    animationStop() {\n        this.animationPaused = false;\n        if (this.animationTimer) {\n            clearInterval(this.animationTimer);\n        }\n    }\n}\n","<div *ngIf=\"animateConfig?.seriesColumn\" class=\"d-flex flex-wrap\">\n    <div class=\"btn-group\">\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"animationFirst()\"><i class=\"fa fa-fast-backward\"></i></button>\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"animationStepBackward()\"><i class=\"fa fa-step-backward\"></i></button>\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"animationPause()\"><i class=\"fa fa-pause\"></i></button>\n        <!-- <button type=\"button\" class=\"btn btn-secondary\" (click)=\"animationStop()\"><i class=\"fa fa-stop\"></i></button> -->\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"animationPlay()\"><i class=\"fa fa-play\"></i></button>\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"animationStepForward()\"><i class=\"fa fa-step-forward\"></i></button>\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"animationLast()\"><i class=\"fa fa-fast-forward\"></i></button>\n        <form-select class=\"ml-1\" [labelLeft]=\"animateConfig.seriesColumn\" [items]=\"animationValues\" [(ngModel)]=\"animationValue\" (ngModelChange)=\"animationChange($event)\" itemKey=\"value\" itemName=\"name\" >\n        </form-select>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ButtonsModule} from './buttons/buttons.module';\nimport { WidgetsModule} from './widgets/widgets.module';\nimport { TablePreviewDataComponent } from './table/table-preview-data/table-preview-data.component';\nimport { FileFormatEditComponent } from './fileFormat';\nimport { ViewEditComponent } from './view';\n\n@NgModule({\n    imports: [\n        SharedModule,\n        ReactiveFormsModule,\n        ButtonsModule,\n        WidgetsModule\n    ],\n    declarations: [\n        TablePreviewDataComponent,\n        FileFormatEditComponent,\n        ViewEditComponent\n    ],\n    exports: [\n        ButtonsModule,\n        WidgetsModule\n    ]\n})\nexport class HubSharedModule {\n\n}\n","import { Component, OnInit, Input, OnChanges, Output, EventEmitter, OnDestroy, SimpleChanges } from '@angular/core';\nimport { SelectQuery, InputColumn, TableColumn, SelectColumn, eSortDirection, Filter, eTypeCode, eCompare } from '../../shared.models';\nimport { DexihInputParameter } from '../../../+hub/hub.models';\nimport { compare } from '../../../+hub/hub.query.models';\nimport { TypeCodes } from '../../../+hub/hub.remote.models';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n    selector: 'query-builder',\n    templateUrl: 'query-builder.component.html',\n    styleUrls: ['./query-builder.component.scss']\n})\n\nexport class QueryBuilderComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() selectQuery: SelectQuery;\n    @Input() columns: TableColumn[];\n    @Input() inputColumns: InputColumn[];\n    @Input() parameters: DexihInputParameter[];\n    @Input() refreshEvent: Observable<void>;\n    @Input() requiresRefreshEvent: Observable<void>;\n\n    @Output() hasChanged = new EventEmitter();\n    @Output() onRefreshData = new EventEmitter();\n\n    private _refreshSubscription: Subscription;\n    private _requiresRefreshSubscription: Subscription;\n    \n    selectColumns: SelectColumn[];\n    sortColumns: any[];\n\n    compare = compare;\n\n    allRows = false;\n    savedRowCount: number;\n    typeCodes = TypeCodes;\n    eCompare = eCompare;\n\n    requiresRefresh = false;\n\n    variables: string[];\n\n    constructor() { }\n\n    ngOnInit() {\n        if (!this.selectQuery) {\n            this.selectQuery = new SelectQuery();\n            this.selectQuery.rows = 100;\n        }\n\n        if (this.selectQuery.sorts) {\n            this.selectQuery.sorts.forEach(sort => {\n                sort.column['runTime'] = sort.column.name + sort.direction;\n            });\n        }\n\n        if (this.refreshEvent) {\n            this._refreshSubscription = this.refreshEvent.subscribe(() => {\n                this.requiresRefresh = false;\n            });\n        }\n\n        if (this.requiresRefreshEvent) {\n            this._requiresRefreshSubscription = this.requiresRefreshEvent.subscribe(() => {\n                this.requiresRefresh = true;\n            });\n        }\n\n        this.allRows = this.selectQuery.rows < 0 ? true : false;\n    }\n\n    ngOnDestroy() {\n        if (this._refreshSubscription) { this._refreshSubscription.unsubscribe(); }\n        if (this._requiresRefreshSubscription) { this._requiresRefreshSubscription.unsubscribe(); }\n    }\n\n    ngOnChanges(changed: SimpleChanges) {\n        if (this.parameters) {\n            this.variables = this.parameters.map(c => '{' + c.name + '}');\n        }\n        if (this.columns) {\n            this.selectColumns = new Array(this.columns.length);\n            this.sortColumns = new Array(this.columns.length * 2);\n\n            for (let i = 0; i < this.columns.length; i++) {\n                this.selectColumns[i] = { column: this.columns[i], aggregate: null, outputColumn: null };\n\n                let column1 = Object.assign({}, this.columns[i]);\n                column1['details'] = column1.logicalName + ' asc';\n                column1['runTime'] = column1.name + eSortDirection.Ascending;\n                this.sortColumns[i * 2] = { key: column1['details'], column: column1, direction: eSortDirection.Ascending };\n\n                let column2 = Object.assign({}, this.columns[i]);\n                column2['details'] = column2.logicalName + ' desc';\n                column2['runTime'] = column2.name + eSortDirection.Descending;\n                this.sortColumns[i * 2 + 1] = { key: column2['details'], column: column2, direction: eSortDirection.Descending };\n            }\n        }\n    }\n\n    addFilter(index: number) {\n        let filter = new Filter();\n        filter.compareDataType = eTypeCode.String;\n        this.selectQuery.filters.splice(index, 0, filter);\n        this.onChanged();\n    }\n\n    removeFilter(index: number) {\n        this.selectQuery.filters.splice(index, 1);\n        this.onChanged();\n    }\n\n    selectAllRows() {\n        if (this.allRows) {\n            this.selectQuery.rows = this.savedRowCount > 0 ? this.savedRowCount : 100;\n        } else {\n            this.savedRowCount = this.selectQuery.rows;\n            this.selectQuery.rows = -1;\n        }\n        this.onChanged();\n    }\n\n    refreshData() {\n        this.onRefreshData.emit();\n    }\n\n    onChanged() {\n        this.hasChanged.emit();\n        this.requiresRefresh = true;\n    }\n}\n","<div *ngIf=\"selectQuery\" class=\"container\">\n    <div class=\"d-flex flex-wrap\" *ngIf=\"selectColumns || sortColumns\">\n        <div class=\"flex-fill\" *ngIf=\"selectColumns\">\n            <form-tags-dropdown floatingLabel=\"Display Columns\" [(ngModel)]=\"selectQuery.columns\" (ngModelChange)=\"onChanged()\" [items]=\"selectColumns\"\n                itemKey=\"column.name\" itemName=\"column.logicalName\" textEntryNote=\"Specify the columns to select.\"\n                [enableAddAll]=\"true\" [returnKeys]=\"false\">\n            </form-tags-dropdown>\n        </div>\n    \n        <div class=\"flex-fill ml-1\" *ngIf=\"sortColumns\">\n            <form-tags-dropdown floatingLabel=\"Sort Columns\" [(ngModel)]=\"selectQuery.sorts\"  (ngModelChange)=\"onChanged()\" [items]=\"sortColumns\" \n            itemKey=\"column.runTime\" itemName=\"column.details\" textEntryNote=\"Specify the columns to sort.\" [enableAddAll]=\"false\" [returnKeys]=\"false\">\n            </form-tags-dropdown>\n        </div>\n    </div>\n\n    <div class=\"d-flex flex-wrap pt-1\" *ngIf=\"inputColumns && inputColumns.length > 0\" >\n        <div class=\"input-group-text\">\n            Default Input Values\n        </div>\n\n        <span *ngFor=\"let column of inputColumns; let i = index\" class=\"input-group pt-1\">\n            <div class=\"input-group-prepend\">\n                <div class=\"input-group-text\">\n                    {{column.logicalName}}\n                </div>\n            </div>\n            <form-input name=\"column{{i}}\" class=\"form-control p-0\" [placeholder]=\"column.logicalName\" [(ngModel)]=\"column.value\" (ngModelChange)=\"onChanged()\"></form-input>\n        </span>\n    </div>\n\n    <div class=\"d-flex flex-wrap pt-1\">\n        <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">\n                Filters\n            </div>\n        </div>\n\n        <form-checkbox class=\"flex-fill pl-1\" label=\"All Rows\" [(ngModel)]=\"allRows\" (ngModelChange)=\"onChanged()\" (click)=\"selectAllRows()\" [border]=\"true\"></form-checkbox>\n        <form-input type=\"number\" class=\"flex-fill pl-1\" *ngIf=\"!allRows\" labelLeft=\"Max Rows\" placeholder=\"Maximum rows...\" title=\"Specify the maximum rows to return\" [(ngModel)]=\"selectQuery.rows\" (ngModelChange)=\"onChanged()\"></form-input>\n        <d-button *ngIf=\"selectColumns\" class=\"flex-fill pl-1\" buttonClass=\"btn-outline-primary\" (ngModelChange)=\"onChanged()\" (click)=\"addFilter(0)\">Add Filter</d-button>\n    </div>\n\n    <div class=\"d-flex flex-wrap pt-1\" *ngFor=\"let filter of selectQuery.filters; let i = index\">\n        <div class=\"d-flex w-100\">\n            <form-select [(ngModel)]=\"filter.compareDataType\" (ngModelChange)=\"onChanged()\" [border]=\"true\" class=\"flex-fill flex-form pl-1\" [items]=\"typeCodes\" itemName=\"name\" itemKey=\"key\"\n                [enableTextEntry]=\"false\">\n            </form-select>\n\n            <form-select [(ngModel)]=\"filter.column1\" (ngModelChange)=\"onChanged()\" [border]=\"true\" class=\"flex-fill flex-form  pl-1\" [items]=\"columns\" itemKey=\"key\" itemName=\"logicalName\" [enableKeySelect]=\"false\"\n                [(textValue)]=\"filter.value1\" [enableTextEntry]=\"true\"  [setTextEntryToValue]=\"false\" [enableTextEntryMatch]=\"false\" textEntryNote=\"Enter a static value or select a column.\">\n            </form-select>\n\n            <form-select [(ngModel)]=\"filter.operator\" (ngModelChange)=\"onChanged()\" [items]=\"compare\" itemKey=\"key\" itemName=\"name\" [border]=\"true\" class=\"flex-fill  pl-1\">\n            </form-select>\n\n            <form-select *ngIf=\"filter.operator !== eCompare.IsIn && filter.operator !== eCompare.IsNotIn\" [(ngModel)]=\"filter.column2\" [setTextEntryToValue]=\"false\" (ngModelChange)=\"onChanged()\" [border]=\"true\" class=\"flex-fill flex-form  pl-1\" [items]=\"columns\" itemKey=\"key\" itemName=\"logicalName\" [enableKeySelect]=\"false\"\n                [(textValue)]=\"filter.value2\" [enableTextEntry]=\"true\" [enableTextEntryMatch]=\"false\" textEntryNote=\"Enter a static value or select a column.\"\n                [textEntryItems]=\"variables\" textEntryItemsTitle=\"Variables\">\n            </form-select>\n\n            <form-tags *ngIf=\"filter.operator === eCompare.IsIn || filter.operator === eCompare.IsNotIn\" [(ngModel)]=\"filter.value2\" (ngModelChange)=\"onChanged()\" [border]=\"true\" class=\"flex-fill flex-form  pl-1\" >\n            </form-tags>\n\n            <div class=\"btn-group input-group-text p-0 ml-1\">\n                <button class=\"btn btn-transparent border-0\" type=\"button\" (click)=\"addFilter(i)\" value=\"Add\">\n                    <i class=\"fa fa-plus-square-o\"></i>\n                </button>\n                <button class=\"btn btn-transparent border-0\" type=\"button\" (click)=\"removeFilter(i)\" value=\"Remove\">\n                    <i class=\"fa fa-minus-square-o\"></i>\n                </button>\n            </div>\n\n        </div>\n    </div>\n\n    <div *ngIf=\"requiresRefresh\" class=\"alert alert-warning mt-2\">\n        <a href=\"javascript:void(0)\" class=\"alert-link\" (click)=\"refreshData()\">The query has changed.  Click to refresh.</a>\n    </div>\n</div>","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { EncryptionStatusIconComponent } from './encryption-status/encryption-status.component';\nimport { PrivacyStatusButtonComponent } from './privacy-status/privacy-status.component';\nimport { DownloadButtonComponent } from './download-button/download-button.component';\nimport { DComponentsModule } from 'ngx-d-components';\nimport { PrintButtonComponent} from './print/print-button.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    DComponentsModule\n  ],\n  declarations: [\n    EncryptionStatusIconComponent,\n    PrivacyStatusButtonComponent,\n    DownloadButtonComponent,\n    PrintButtonComponent\n  ],\n  exports: [\n    EncryptionStatusIconComponent,\n    PrivacyStatusButtonComponent,\n    DownloadButtonComponent,\n    PrintButtonComponent\n  ],\n})\nexport class DexihIconsModule {\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'dexih-ribbon',\n  templateUrl: './ribbon.component.html'\n})\nexport class RibbonComponent implements OnInit {\n\n  constructor() {}\n\n  ngOnInit() {\n  }\n\n}\n","<!-- RIBBON -->\n<div class=\"mt-0\">\n  <!-- breadcrumb -->\n  <dexih-route-breadcrumbs></dexih-route-breadcrumbs>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription} from 'rxjs';\n\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubCache } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { DexihView, eDataObjectType, DexihDashboard } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'actions-dashboard-button',\n    templateUrl: './actions-dashboard-button.component.html'\n})\n\nexport class ActionsDashboardButtonComponent implements OnInit, OnDestroy {\n    @Input() public dashboards: DexihDashboard[];\n    @Input() public pullRight = false;\n\n    private _hubCacheSubscription: Subscription;\n    public hubCache: HubCache;\n\n        tables = [];\n\n        constructor(\n            private authService: AuthService,\n            private hubService: HubService,\n                    private router: Router,\n                    private route: ActivatedRoute) { }\n\n        ngOnInit() {\n            this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n                this.hubCache = cache;\n            });\n\n        }\n\n        ngOnDestroy() {\n            if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n         }\n\n         delete() {\n            this.hubService.deleteDashboards(this.dashboards);\n        }\n\n        shareItems(isShared: boolean) {\n            this.hubService.shareItems(this.dashboards.map(c => c.key), eDataObjectType.Dashboard, isShared);\n        }\n\n        export() {\n            const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n            this.dashboards.forEach(dashboard => { this.hubCache.cacheAddDashboard(dashboard.key, hub); });\n\n            let filename = this.dashboards.length === 1 ? 'Dashboard - ' + this.dashboards[0].name + '.json' : 'dashboards.json';\n\n            this.hubService.exportHub(hub, filename);\n        }\n\n\n}\n","<ng-template [ngIf]=\"dashboards\">\n    <d-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-pie-chart\" [text]=\"dashboards.length > 1 ? 'Dashboards' : 'Dashboard'\" [pullRight]=\"pullRight\">\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Metadata</li>\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" [routerLink]=\"['dashboard-new']\" title=\"Create a new dashboard.\"><i class=\"fa fa-file-o\"></i> New</a></li>\n        <ng-template [ngIf]=\"dashboards.length > 0\">\n            <li *ngIf=\"dashboards.length == 1\">\n                <a class=\"dropdown-item\" [routerLink]=\"['dashboard-edit', dashboards[0].key]\" queryParamsHandling=\"merge\"><i class=\"fa fa-edit\"></i> Edit</a>\n            </li>\n\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"shareItems(true)\" title=\"Select the selected items as shared.\"><i class=\"fa fa-group\"></i> Share</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"shareItems(false)\" title=\"Select the selected items as private.\"><i class=\"fa fa-user-secret\"></i> Private</a></li>\n\n            <li><a class=\"dropdown-item\" (click)=\"export()\" title=\"Export the metadata for the selected apis to a local file.\"><i class=\"fa fa-save\"></i> Save Locally</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"delete()\" title=\"Delete the metadata for the selected apis.\"><span class=\"text-danger\"><i class=\"fa fa-trash-o text-danger\"></i> Delete</span></a></li>\n\n        </ng-template>\n    </d-button-dropdown>\n</ng-template>","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { Subscription } from 'rxjs';\nimport { DexihConnection } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'new-table-button',\n    templateUrl: './new-table-button.component.html'\n})\n\nexport class NewTableButtonComponent implements OnInit, OnDestroy {\n    @Input() pullRight = true;\n\n    private _hubCacheSubscription: Subscription;\n\n    connections: Array<DexihConnection>;\n\n    constructor(private hubService: HubService) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n            if (cache.isLoaded()) {\n                this.connections = cache.hub.dexihConnections;\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n      }\n}\n","<d-button-dropdown *ngIf=\"connections\" buttonClass=\"btn-primary\" iconClass=\"fa fa-file-o\" text=\"New\" [pullRight]=\"pullRight\"> \n    <li *ngFor=\"let connection of connections\">\n        <a class=\"dropdown-item\" [routerLink]=\"['table-new', connection.key]\">Add to {{connection.name}}</a>\n    </li>\n</d-button-dropdown>","import { Component, ViewContainerRef, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { AuthService } from './+auth/auth.service';\nimport { Subscription } from 'rxjs';\nimport { Router, RouteConfigLoadStart, RouteConfigLoadEnd } from '@angular/router';\nimport { DModalComponent } from 'ngx-d-components';\nimport { WaitMessage } from './+auth/auth.models';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  @ViewChild('modal', { static: true }) modal: DModalComponent;\n\n  private _waitMessagesSubscription: Subscription;\n  private _routeEventsSubscription: Subscription;\n  public waitMessages: WaitMessage[];\n\n  private loadingRouteKey: string;\n\n  public constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.authService.setDialogDefaultContainer(this.modal);\n    let waitMessagesObservable = this.authService.getWaitMessagesObservable();\n\n    this._waitMessagesSubscription = waitMessagesObservable.subscribe(waitMessages => {\n      // setTimeout forces micro-task to stop ExpressionChangedAfterItHasBeenCheckedError\n      setTimeout(() => {\n        this.waitMessages = Array.from(waitMessages.values());\n      });\n    });\n\n    this._routeEventsSubscription = this.router.events.subscribe(event => {\n      if (event instanceof RouteConfigLoadStart) {\n        if (this.loadingRouteKey) {\n          this.authService.removeWaitMessage(this.loadingRouteKey);\n        }\n        this.loadingRouteKey = this.authService.addWaitMessage('Loading scripts...')\n      } else if (event instanceof RouteConfigLoadEnd) {\n        this.authService.removeWaitMessage(this.loadingRouteKey);\n        this.loadingRouteKey = null;\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this._waitMessagesSubscription) { this._waitMessagesSubscription.unsubscribe(); }\n    if (this._routeEventsSubscription) { this._routeEventsSubscription.unsubscribe(); }\n  }\n}\n","<div *ngIf=\"waitMessages?.length > 0\" class=\"loading\">\n    <div class=\"list-group\">\n        <li class=\"list-group-item\">\n            <div class=\"dexih-loader\"></div> &nbsp; &nbsp; Please wait ...\n        </li>\n        <li class=\"list-group-item\" *ngFor=\"let waitMessage of waitMessages\">\n            {{waitMessage.message}}\n            <d-button-cancel [autoCompact]=\"false\" *ngIf=\"waitMessage.cancelToken\" (click)=\"waitMessage.cancelToken.cancel()\" class=\"float-right\" text=\"\"></d-button-cancel>\n        </li>\n    </div>\n</div>\n<d-modal #modal></d-modal>\n<router-outlet></router-outlet>","import { Directive, HostListener, Input, Output, EventEmitter, ElementRef, HostBinding } from '@angular/core';\n\n@Directive({ selector: '[dragZone]' })\nexport class DragZoneDirective {\n    @Input() zone: string;\n    @Input() data: any;\n    @Output() dragStart: EventEmitter<any> = new EventEmitter();\n\n    constructor(public element: ElementRef) { }\n\n    @HostBinding('draggable')\n    get draggable() {\n      return true;\n    }\n\n    @HostListener('dragstart', ['$event']) public onDragStart(event) {\n        // event.preventDefault();\n        // event.stopPropagation();\n\n        event.dataTransfer.setData('zone:' + this.zone, '');\n        event.dataTransfer.setData('data', JSON.stringify(this.data));\n        this.dragStart.emit(this.data);\n    }\n\n    // @HostListener('drop', ['$event']) public onDrop(event) {\n    //     event.preventDefault();\n    //     event.stopPropagation();\n\n    //     event.dataTransfer.setData('zone', this.zone);\n    //     event.dataTransfer.setData('data', JSON.stringify(this.data));\n    //     this.drop.emit();\n    // }\n}\n","<d-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-sitemap\" text=\"Dependencies\" [pullRight]=\"pullRight\">\n    <li *ngIf=\"dependent.dexihDatalinks.length === 0 && dependent.dexihTables.length === 0 && dependent.dexihConnections.length === 0 &&\n        dependent.dexihViews.length === 0 && dependent.dexihListOfValues.length === 0 && dependent.dexihCustomFunctions.length === 0 && \n        dependent.dexihHubVariables.length === 0 && dependent.dexihFileFormats.length === 0\"\n        class=\"dropdown-item\">\n        There are no dependencies\n    </li>\n\n    <li *ngIf=\"dependent.dexihDatalinks.length > 0\" class=\"list-group-item list-group-item-heading list-group-item-info\">Datalinks</li>\n    <li *ngFor=\"let item of dependent.dexihDatalinks\">\n        <a class=\"dropdown-item\" [routerLink]=\"[hubPath, 'datalinks', 'datalink-edit', 'edit', item.key]\">\n            {{item.name}}\n        </a>\n    </li>\n    \n    <li *ngIf=\"dependent.dexihTables.length > 0\" class=\"list-group-item list-group-item-heading list-group-item-info\">Tables</li>\n    <li *ngFor=\"let item of dependent.dexihTables\">\n        <a class=\"dropdown-item\" [routerLink]=\"[hubPath, 'tables', 'table-edit', item.key]\">\n            {{item.logicalName}}\n        </a>\n    </li>\n\n    <li *ngIf=\"dependent.dexihConnections.length > 0\" class=\"list-group-item list-group-item-heading list-group-item-info\">Connections</li>\n    <li *ngFor=\"let item of dependent.dexihConnections\">\n        <a class=\"dropdown-item\" [routerLink]=\"[hubPath, 'connections', 'connection-edit', item.key]\">\n            {{item.name}}\n        </a>\n    </li>\n\n    <li *ngIf=\"dependent.dexihViews.length > 0\" class=\"list-group-item list-group-item-heading list-group-item-info\">Views</li>\n    <li *ngFor=\"let item of dependent.dexihViews\">\n        <a class=\"dropdown-item\" [routerLink]=\"[hubPath, 'views', 'view-edit', item.key]\">\n            {{item.name}}\n        </a>\n    </li>\n\n    <li *ngIf=\"dependent.dexihListOfValues.length > 0\" class=\"list-group-item list-group-item-heading list-group-item-info\">List of Values</li>\n    <li *ngFor=\"let item of dependent.dexihListOfValues\">\n        <a class=\"dropdown-item\" [routerLink]=\"[hubPath, 'listOfValues', 'listOfValue-edit', item.key]\">\n            {{item.name}}\n        </a>\n    </li>\n\n    <li *ngIf=\"dependent.dexihCustomFunctions.length > 0\" class=\"list-group-item list-group-item-heading list-group-item-info\">Custom Functions</li>\n    <li *ngFor=\"let item of dependent.dexihCustomFunctions\">\n        <a class=\"dropdown-item\" [routerLink]=\"[hubPath, 'customFunctions', 'customFunction-edit', item.key]\">\n            {{item.name}}\n        </a>\n    </li>\n\n    <li *ngIf=\"dependent.dexihHubVariables.length > 0\" class=\"list-group-item list-group-item-heading list-group-item-info\">Variables</li>\n    <li *ngFor=\"let item of dependent.dexihHubVariables\">\n        <a class=\"dropdown-item\" [routerLink]=\"[hubPath, 'hubVariables', 'hubVariable-edit', item.key]\">\n            {{item.name}}\n        </a>\n    </li>\n\n    <li *ngIf=\"dependent.dexihFileFormats.length > 0\" class=\"list-group-item list-group-item-heading list-group-item-info\">File Formats</li>\n    <li *ngFor=\"let item of dependent.dexihFileFormats\">\n        <a class=\"dropdown-item\" [routerLink]=\"[hubPath, 'fileFormats', 'fileFormat-edit', item.key]\">\n            {{item.name}}\n        </a>\n    </li>\n</d-button-dropdown>\n","import { Component, Input, OnDestroy, OnInit, OnChanges } from '@angular/core';\nimport { Subscription ,  combineLatest} from 'rxjs';\n\nimport {HubCache, sharedObjectProperties } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { ConnectionReference, eConnectionCategory, eSharedObjectType, DexihHub } from '../../../shared/shared.models';\n\n\n@Component({\n    selector: 'dependent-items-button',\n    templateUrl: './dependent-items-button.component.html'\n})\n\nexport class DependentItemsButtonComponent implements OnInit, OnDestroy, OnChanges {\n    @Input() public objectType: eSharedObjectType\n    @Input() public key: number;\n    @Input() public pullRight = false;\n\n    private _subscription: Subscription;\n\n    public hubCache: HubCache;\n    public hubPath: string;\n\n    public dependent: DexihHub;\n    public sharedObjectProperties = sharedObjectProperties;\n\n    constructor(\n        private hubService: HubService) { }\n\n    ngOnInit() {\n        this._subscription = combineLatest(\n            this.hubService.getHubCacheObservable(),\n        ).subscribe(async result => {\n            this.hubCache = result[0];\n\n            if (!this.hubCache.isLoaded()) {\n                return;\n            }\n\n            this.hubPath = this.hubCache.getHubUrl();\n\n            this.dependent = new DexihHub();\n            this.hubCache.cacheAddObjectFromKey(this.objectType, this.key, this.dependent)\n\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    ngOnChanges() {\n\n    }\n\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Pipe({\n    name: 'isValidFilter'\n})\n@Injectable()\nexport class IsValidFilterPipe implements PipeTransform {\n    transform(items: any[], field: string): any {\n        if (!items) {\n            return [];\n        } else {\n            if (items[0] instanceof FormGroup) {\n                return items.filter(c => c.controls.isValid.value);\n            } else {\n                return items.filter(c => c.isValid);\n            }\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n@NgModule()\nexport class Functions {\n\n    static numberWithCommas = (x) => {\n        let parts = x.toString().split('.');\n        parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n        return parts.join('.');\n    }\n\n    static getLanguage() {\n        let language;\n        if (window.navigator.languages) {\n            language = window.navigator.languages[0];\n        } else {\n            language = window.navigator.language;\n        }\n\n        return language;\n    }\n\n    static formatValue(value: any, format: string): string {\n        if(value && typeof value === 'object' && ('r' in value || 'f' in value)) {\n            return value['f'];\n        }\n\n        moment.locale(this.getLanguage());\n\n        if (!value && value !== false && value !== 0) {\n            return '';\n        } else if (Object.keys(value).length === 0 && value.constructor === Object) {\n            return '(null)';\n        } else {\n            switch (format) {\n                case 'Calendar':\n                    return moment(value).calendar();\n                case 'Date':\n                    return moment(value).format('L');\n                case 'Time':\n                    return moment(value).format('LTS');\n                case 'DateTime':\n                    return moment(value).format('L') + ' ' + moment(value).format('LTS');\n                case 'CharArray':\n                    return [].concat(value).join('');\n                default:\n                    return value;\n            }\n        }\n    }\n\n    static rawValue(value: any): any {\n        if(value && typeof value === 'object' && ('r' in value || 'f' in value)) {\n            return value['r'];\n        }\n\n        if (!value && value !== false && value !== 0) {\n            return null;\n        }\n\n        if (value === 'NaN' || value === '∞') {\n            return null;\n        }\n\n        return value;\n    }\n\n        /*\n    * General utils for managing cookies in Typescript.\n    */\n   static setCookie(name: string, val: string) {\n        const date = new Date();\n        const value = val;\n\n        // Set it expire in 7 days\n        date.setTime(date.getTime() + (7 * 24 * 60 * 60 * 1000));\n\n        if (location.protocol === 'https:') {\n\n        }\n\n        const sameSite = location.protocol === 'https:' ? 'SameSite=None;secure' : 'SameSite=Lax'\n\n        // Set it\n        document.cookie = `${name}=${value};expires=${date.toUTCString()};path=/;${sameSite}`;\n    }\n\n    static getCookie(name: string) {\n        const value = `; ${document.cookie}`;\n        const parts = value.split(`; ${name}=`);\n\n        if (!parts) { return null; }\n\n        if (parts.length === 2) {\n            return parts.pop().split(';').shift();\n        }\n    }\n\n    static deleteCookie(name: string) {\n        const date = new Date();\n\n        // Set it expire in -1 days\n        date.setTime(date.getTime() + (-1 * 24 * 60 * 60 * 1000));\n\n        // Set it\n        document.cookie = `${name}=;expires=${date.toUTCString()};path=/`;\n    }\n\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubCache, sharedObjectProperties, eCacheStatus } from '../hub.models';\nimport { HubService } from '../hub.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { logoSmallUrl } from '../../+auth/auth.models';\nimport { DexihActiveAgent, eConnectionPurpose } from '../../shared/shared.models';\nimport { AuthService } from '../../+auth/auth.service';\n\n@Component({\n  selector: 'dexih-summary',\n  templateUrl: './summary.component.html',\n})\nexport class SummaryComponent implements OnInit, OnDestroy {\n  private _subscription: Subscription;\n  public hubCache: HubCache;\n\n  public datalinkFilterString;\n  public connectionFilterString;\n  public columnValidationFilterString;\n  public fileFormatFilterString;\n  public datajobFilterString;\n  public tableFilterString;\n\n  public remoteAgent: DexihActiveAgent;\n\n  logoSmallUrl = logoSmallUrl;\n  sharedObjectProperties = sharedObjectProperties;\n\n  eCacheStatus = eCacheStatus;\n  \n  public noManagedConnection = false;\n  constructor(public hubService: HubService, public authService: AuthService) { }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.hubService.getHubCacheObservable(),\n        this.hubService.getRemoteAgentObservable(),\n      ).subscribe(result => {\n        this.hubCache = result[0];\n        this.remoteAgent = result[1];\n\n        if (this.hubCache.isLoaded()) {\n          if (this.hubCache.hub.dexihConnections.findIndex(c => c.purpose === eConnectionPurpose.Managed) >= 0) {\n            this.noManagedConnection = false;\n          } else {\n            this.noManagedConnection = true;\n          }\n        }\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Summary');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n  }\n\n  onDatalinkFilterString(filterString: string) {\n    this.datalinkFilterString = filterString;\n  }\n  onConnectionFilterString(filterString: string) {\n    this.connectionFilterString = filterString;\n  }\n  onColumnValidationFilterString(filterString: string) {\n    this.columnValidationFilterString = filterString;\n  }\n  onFileFormatFilterString(filterString: string) {\n    this.fileFormatFilterString = filterString;\n  }\n  onDatajobFilterString(filterString: string) {\n    this.datajobFilterString = filterString;\n  }\n  onTableFilterString(filterString: string) {\n    this.tableFilterString = filterString;\n  }\n}\n","<div class=\"container\" *ngIf=\"hubCache?.hub && hubCache.status === eCacheStatus.Loaded\">\n    <div class=\"d-flex align-items-center p-3 my-3 text-white-50 bg-primary rounded\">\n        <div class=\"lh-100\">\n            <h3 class=\"mb-0 text-white lh-100\">{{hubCache.hub.name}}</h3>\n            <h5 *ngIf=\"hubCache.hub.description\" class=\"mb-0 text-white lh-100\">\n                <markdown [data]=\"hubCache.hub.description\" (click)=\"authService.getRoute($event)\"></markdown>\n            </h5>\n        </div>\n    </div>\n\n    <div class=\"alert alert-warning\" *ngIf=\"noManagedConnection && hubCache.canWrite\">\n        Warning: <b>No Managed connection!</b> A managed connection for auditing data and\n        staging tables. To run any datalink you must\n        have a least one managed connection. Note, if you do not have access to a database use the Sqlite connection to\n        create\n        a local database file.\n        <hr>\n        <d-button-new buttonClass=\"btn btn-primary text-white\" [routerLink]=\"['connection-new', '2']\"\n            text=\"New Managed Connection\"></d-button-new>\n    </div>\n\n    <div class=\"card-deck\">\n        <div class=\"card mb-3\" style=\"min-width: 18rem;\">\n            <div class=\"card-header text-white bg-success\"><i class=\"fa fa-lg fa-fw fa-life-saver\"></i>Common Actions\n            </div>\n            <div class=\"card-body p-0\">\n                <ul class=\"list-group\">\n                        <a routerLink=\"search\" class=\"list-group-item list-group-item-action rounded-0\">\n                            <div class=\"d-flex justify-content-between align-items-center\">\n                                <div>\n                                    <i class=\"fa fa-lg fa-fw fa-search\"></i>\n                                    Search\n                                </div>\n                            </div>\n                            <div class=\"small\">Search for objects within the hub.</div>\n                        </a>\n                        <a routerLink=\"sharedData\" class=\"list-group-item list-group-item-action rounded-0\">\n                            <div class=\"d-flex justify-content-between align-items-center\">\n                                <div>\n                                    <i class=\"fa fa-lg fa-fw fa-newspaper-o\"></i>\n                                    Shared Data\n                                </div>\n                            </div>\n                            <div class=\"small\">Tables and datalinks in the hub which have been shared.</div>\n                        </a>\n                        <a routerLink=\"datalinks/results\" class=\"list-group-item  list-group-item-action rounded-0\">\n                            <div class=\"d-flex justify-content-between align-items-center\">\n                                <div>\n                                    <i class=\"fa fa-lg fa-fw fa-tasks\"></i>\n                                    Datalink/Datajob results\n                                </div>\n                            </div>\n                            <div class=\"small\">Recent execution summaries from datalink and datajobs.</div>\n                        </a>\n                        <a *ngIf=\"hubCache.canAdministrate\" routerLink=\"manage/manage-users\" class=\"list-group-item  list-group-item-action rounded-0\">\n                            <div class=\"d-flex justify-content-between align-items-center\">\n                                <div>\n                                    <i class=\"fa fa-lg fa-fw fa-birthday-cake\"></i>\n                                    Manage Hub Users\n                                </div>\n                            </div>\n                            <div class=\"small\">Invite users and manage user permissions for this hub.</div>\n                        </a>\n                        <a *ngIf=\"hubCache.canAdministrate\" routerLink=\"agents\" class=\"list-group-item  list-group-item-action rounded-0\">\n                            <div class=\"d-flex justify-content-between align-items-center\">\n                                <div>\n                                    <i class=\"fa fa-lg fa-fw fa-wifi\"></i>\n                                    Manage Remote Agents\n                                </div>\n                            </div>\n                            <div class=\"small\">Add and remove remote agents access to this hub.</div>\n                        </a>\n                    <a routerLink=\"files/manage\" class=\"list-group-item  list-group-item-action rounded-0\">\n                        <div class=\"d-flex justify-content-between align-items-center\">\n                            <div>\n                                <i class=\"fa fa-lg fa-fw fa-upload\"></i>\n                                Manage Files\n                            </div>\n                        </div>\n                        <div class=\"small\">Upload and download files in an existing table definition</div>\n                    </a>\n                    <a routerLink=\"files/bulk-load\" class=\"list-group-item  list-group-item-action rounded-0\">\n                        <div class=\"d-flex justify-content-between align-items-center\">\n                            <div>\n                                <i class=\"fa fa-lg fa-fw fa-files-o\"></i>\n                                Bulk Load Files\n                            </div>\n                        </div>\n                        <div class=\"small\">Upload multiple file to create automatic table definitions.</div>\n                    </a>\n                    <a routerLink=\"import\" class=\"list-group-item  list-group-item-action rounded-0\">\n                        <div class=\"d-flex justify-content-between align-items-center\">\n                            <div>\n                                <i class=\"fa fa-lg fa-fw fa-level-down\"></i>\n                                Import\n                            </div>\n                        </div>\n                        <div class=\"small\">Import items into the current hub from an export file.</div>\n                    </a>\n                    <a routerLink=\"export\" class=\"list-group-item  list-group-item-action rounded-0\">\n                        <div class=\"d-flex justify-content-between align-items-center\">\n                            <div>\n                                <i class=\"fa fa-lg fa-fw fa-level-up\"></i>\n                                Export\n                            </div>\n                        </div>\n                        <div class=\"small\">Export items from the current hub to an external file.</div>\n                    </a>\n                    <a routerLink=\"agents\" class=\"list-group-item  list-group-item-action rounded-0\">\n                        <div class=\"d-flex justify-content-between align-items-center\">\n                            <div>\n                                <i class=\"fa fa-lg fa-fw fa-wrench\"></i>\n                                Remote Agents\n                            </div>\n                        </div>\n                        <div class=\"small\">Manage which remote agents are authorized to access the hub.</div>\n                    </a>\n                </ul>\n            </div>\n        </div>\n        <div class=\"card mb-3\" style=\"min-width: 18rem;\">\n            <div class=\"card-header text-white bg-danger\"><i class=\"fa fa-lg fa-fw fa-user\"></i>Hub Objects</div>\n            <div class=\"card-body p-0\">\n                <ul class=\"list-group\">\n                    <a *ngFor=\"let sharedObject of sharedObjectProperties\" [routerLink]=\"sharedObject.routerLink\" class=\"list-group-item  list-group-item-action rounded-0\">\n                        <div class=\"d-flex justify-content-between align-items-center\">\n                            <div>\n                                <i class=\"fa fa-lg fa-fw {{sharedObject.icon}}\"></i>\n                                {{sharedObject.displayName}}\n                            </div>\n                            <span\n                                class=\"badge badge-primary badge-pill\">{{(hubCache.hub[sharedObject.cacheProperty] | equalFilter :'isValid':true ).length}}\n                            </span>\n                        </div>\n                        <div class=\"small\">{{sharedObject.description}}</div>\n                    </a>\n                </ul>\n            </div>\n        </div>\n    </div>\n \n\n</div>","import { Component, OnInit, Input, OnChanges, Output, EventEmitter, OnDestroy, SimpleChanges } from '@angular/core';\nimport { AnimateConfig } from '../../shared.models';\nimport { Functions } from '../../utils/functions';\n\n@Component({\n    selector: 'series-animate-properties',\n    templateUrl: 'series-animate-properties.component.html'\n})\nexport class SeriesAnimatePropertiesComponent {\n    @Input() animateConfig: AnimateConfig;\n    @Input() columns: Array<any>;\n    @Output() hasChanged = new EventEmitter();\n\n    constructor() { }\n\n\n    onChanged() {\n        this.hasChanged.emit();\n    }\n\n    seriesChanged() {\n        this.hasChanged.emit();\n    }\n\n   \n}\n","<div class=\"container\">\n    <fieldset>\n        <div class=\"form-row\">\n\n            <section class=\"form-group col-md-6\">\n                <form-select [(ngModel)]=\"animateConfig.seriesColumn\" label=\"Animation Series Column\"\n                    [allowNullSelect]=\"true\" selectNullMessage=\"Turn off animation\" [items]=\"columns\" itemKey=\"title\"\n                    itemName=\"title\" (ngModelChange)=\"seriesChanged()\">\n                </form-select>\n            </section>\n\n            <section class=\"form-group col-md-6\">\n                <form-input type=\"number\" [(ngModel)]=\"animateConfig.delay\" (ngModelChange)=\"onChanged()\"\n                    label=\"Animation Delay (ms)\"></form-input>\n            </section>\n        </div>\n\n        <section>\n            <form-checkbox label=\"Automatic Start\" [(ngModel)]=\"animateConfig.automatic\" (ngModelChange)=\"onChanged()\">\n            </form-checkbox>\n        </section>\n\n    </fieldset>\n</div>\n","import {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { DexihInvalidFormIconComponent } from './dexih-invalid-form-icon/dexih-invalid-form-icon.component';\nimport { DexihInvalidFormDetailsComponent } from './dexih-invalid-form-details/dexih-invalid-form-details.component';\nimport { DComponentsModule } from 'ngx-d-components';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    DComponentsModule\n  ],\n  declarations: [\n    DexihInvalidFormIconComponent,\n    DexihInvalidFormDetailsComponent\n  ],\n  exports: [\n    DexihInvalidFormIconComponent,\n    DexihInvalidFormDetailsComponent\n  ],\n})\nexport class DexihFormControlsModule {\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n@Pipe({\n  name: 'calendar'\n})\nexport class CalendarPipe implements PipeTransform {\n  transform(value: Date): any {\n    return moment(value).calendar();\n  }\n}","<ng-template [ngIf]=\"tables\">\n<d-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-table\" [text]=\"tables.length > 1 ? 'Tables' : 'Table'\" [pullRight]=\"pullRight\">\n    <li class=\"list-group-item list-group-item-heading list-group-item-info\">Metadata</li>\n    <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\"  [routerLink]=\"['table-new']\" title=\"Create a new table.\"><i class=\"fa fa-file-o\"></i> New</a></li>\n    <ng-template [ngIf]=\"tables.length > 0\">\n        <li *ngIf=\"showEdit && tables.length == 1\">\n            <a class=\"dropdown-item\" [routerLink]=\"['table-edit', tables[0].key]\" queryParamsHandling=\"merge\"><i class=\"fa fa-edit\"></i> Edit</a>\n        </li>\n        <li *ngIf=\"hubCache.canWrite && showEdit\"><a class=\"dropdown-item\" (click)=\"shareItems(true)\" title=\"Select the selected tables as shared.\"><i class=\"fa fa-group\"></i> Share</a></li>\n        <li *ngIf=\"hubCache.canWrite && showEdit\"><a class=\"dropdown-item\" (click)=\"shareItems(false)\" title=\"Select the selected tables as private.\"><i class=\"fa fa-user-secret\"></i> Private</a></li>\n\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"reImport()\" title=\"Re-Import the select tables from the source database\"><i class=\"fa fa-share-square-o\"></i> Re-Import Metadata</a></li>\n        <li><a class=\"dropdown-item\" (click)=\"export()\" title=\"Export the metadata for the selected tables to a local file.\"><i class=\"fa fa-save\"></i> Save Locally</a></li>\n        <li><a class=\"dropdown-item\" (click)=\"dbml()\" title=\"Create a dbml file from the selected tables.\"><i class=\"fa fa-comments\"></i> Export DBML</a></li>\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"delete()\" title=\"Delete the metadata for the selected tables.\"><span class=\"text-danger\"><i class=\"fa fa-trash-o text-danger\"></i> Delete</span></a></li>\n\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Operations</li>\n        <li *ngIf=\"tables.length == 1\">\n            <a class=\"dropdown-item\" [routerLink]=\"['table-preview', tables[0].key]\" queryParamsHandling=\"merge\"><i class=\"fa fa-table\"></i> Preview Data</a>\n        </li>\n        <li><a class=\"dropdown-item\" (click)=\"download()\" title=\"Download data from selected tables to csv files.\"><i class=\"fa fa-cloud-download\"></i> Download Data</a></li>\n\n        <li *ngIf=\"hubCache.canWrite && ( connectionReference?.connectionCategory == eConnectionCategory.File || connection?.purpose !== eConnectionPurpose.Source)\">\n            <a class=\"dropdown-item\" [routerLink]=\"[hubPath, 'files', 'manage']\" [queryParams]=\"{'tableKey': tables[0].key}\" queryParamsHandling=\"merge\"><i class=\"fa fa-upload\"></i> Upload/Download Files</a>\n        </li>\n\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"clear()\" title=\"Clear the data from the selected tables\"><i class=\"fa fa-trash\"></i><span class=\"text-danger\"> Truncate Table<span *ngIf=\"tables.length > 1\">s</span></span></a></li>\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"rebuild()\" title=\"Drop &amp; rebuild the tables\"><i class=\"fa fa-gears\"></i><span class=\"text-danger\"> Drop/Create Table<span *ngIf=\"tables.length > 1\">s</span></span></a></li>\n\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Datalinks</li>\n        <li *ngIf=\"hubCache.canWrite && tables.length == 1\"><a class=\"dropdown-item\" (click)=\"datalinkQuery()\" title=\"Create new datalinks using the selected tables as the source.\"><i class=\"fa fa-exchange\"></i> Datalink Query</a></li>\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"newDatalinks()\" title=\"Create new datalinks using the selected tables as the source.\"><i class=\"fa fa-exchange\"></i> New Datalinks (from selected tables)</a></li>\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Related</li>\n        <li *ngFor=\"let datalink of datalinksSource\">\n            <a class=\"dropdown-item\" [routerLink]=\"['datalink-edit', 'edit', datalink.key, 'source-table']\">(source) {{datalink.name}}</a>\n        </li>\n        <li *ngFor=\"let datalink of datalinksTarget\">\n            <a class=\"dropdown-item\"  [routerLink]=\"['datalink-edit', 'edit', datalink.key, 'target']\">(target) {{datalink.name}}</a>\n        </li>\n    </ng-template>\n</d-button-dropdown>\n</ng-template>","import { Component, OnInit, OnChanges, OnDestroy, Input, Output, EventEmitter } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HubService } from '../../hub.service';\nimport { HubCache } from '../../hub.models';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { DexihTable, eConnectionCategory, DexihConnection, ConnectionReference, DexihDatalink,\n    DownloadObject, eSourceType, eDownloadFormat, DexihHub, eDataObjectType, eConnectionPurpose } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n    selector: 'actions-table-button',\n    templateUrl: './actions-table-button.component.html'\n})\n\nexport class ActionsTableButtonComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() public tables: DexihTable[] = [];\n    @Input() public refreshTables = false;\n    @Input() public showEdit = true;\n    @Input() public pullRight = false;\n\n    @Output() public changedTables: EventEmitter<Array<DexihTable>> = new EventEmitter<Array<DexihTable>>();\n\n    private _subscription: Subscription;\n    private cancelToken: CancelToken = new CancelToken()\n    private hubCache: HubCache;\n    eConnectionCategory = eConnectionCategory;\n\n    public connection: DexihConnection;\n    public connectionReference: ConnectionReference;\n    public eConnectionPurpose = eConnectionPurpose;\n\n    datalinksSource: Array<DexihDatalink> = [];\n    datalinksTarget: Array<DexihDatalink> = [];\n\n    public hubPath: string;\n    public canWrite: boolean;\n\n    constructor(private hubService: HubService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this._subscription = combineLatest(\n            this.hubService.getHubCacheObservable(),\n        ).subscribe(async result => {\n            this.hubCache = result[0];\n\n            if (this.hubCache.isLoaded()) {\n                this.hubPath = this.hubCache.getHubUrl();\n\n                this.canWrite = this.hubCache.canWrite;\n                if (this.tables && this.tables.length === 1) {\n                    this.connection = this.hubCache.getConnection(this.tables[0].connectionKey);\n                    this.connectionReference = await this.hubService.GetConnectionReference(this.connection);\n                }\n            }\n        });\n     }\n\n     async ngOnChanges() {\n        if (this.tables && this.hubCache) {\n            this.datalinksSource = this.hubCache.hub.dexihDatalinks\n                .filter(c => this.tables.find(t => t.key === c.sourceDatalinkTable.sourceTableKey));\n\n            this.datalinksTarget = this.hubCache.hub.dexihDatalinks.filter(c => {\n                for (let target of c.dexihDatalinkTargets) {\n                    if (this.tables.find(t => t.key === target.tableKey)) { return true; }\n                }\n            });\n\n            if (this.tables.length === 1) {\n                this.connection = this.hubCache.getConnection(this.tables[0].connectionKey);\n                this.connectionReference = await this.hubService.GetConnectionReference(this.connection);\n            }\n        }\n     }\n\n     ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.cancelToken.cancel();\n     }\n\n     getTables(): DexihTable[] {\n\n        if (!this.refreshTables) {\n            return this.tables;\n        }\n\n        let tableKeys = this.tables.map(c => c.key);\n        let tables = tableKeys.map(c => this.hubCache.getTable(c));\n        return tables;\n     }\n\n     getTableKeys(): number[] {\n        if (!this.refreshTables) {\n            return this.tables.map(c => c.key);\n        }\n\n        return this.tables.map(c => c.key);\n    }\n\n    reImport() {\n        this.hubService.reImportTables(this.getTableKeys(), true, this.cancelToken).then(tables => {\n            if (tables) {\n                let tableNames = tables.map(c => c.name).join(', ');\n                this.hubService.addHubSuccessMessage(`Tables ${tableNames} imported successfully.`);\n                this.changedTables.emit(tables);\n            }\n        }).catch();\n    }\n\n    clear() {\n        if (this.canWrite) {\n            this.hubService.clearTables(this.getTableKeys(), this.cancelToken).then(tables => {\n                if (tables) {\n                    let tableNames = this.tables.map(c => c.name).join(', ');\n                    this.hubService.addHubSuccessMessage(`Tables ${tableNames} have been truncated.`);\n                }\n            }).catch();\n        }\n    }\n\n    rebuild() {\n        if (this.canWrite) {\n            this.hubService.createTables(this.getTables(), this.cancelToken).then(tables => {\n                if (tables) {\n                    let tableNames = this.tables.map(c => c.name).join(', ');\n                    this.hubService.addHubSuccessMessage(`Tables ${tableNames} have been dropped & recreated.`);\n                }\n            });\n        }\n    }\n\n    delete() {\n        this.hubService.deleteTables(this.getTables());\n    }\n\n    dbml() {\n        this.hubService.getDbml(this.getTables());\n    }\n\n    shareItems(isShared: boolean) {\n        this.hubService.shareItems(this.getTableKeys(), eDataObjectType.Table, isShared);\n    }\n\n    newDatalinks() {\n        let tableKeys = this.getTableKeys().join('|');\n        this.router.navigate(['/hub', this.hubCache.hub.hubKey, 'tables', 'datalink-new', tableKeys, 0],\n            { relativeTo: this.route.root });\n        // this.router.navigate(['datalink-new', tableKeys, 0], { relativeTo: this.route.parent });\n    }\n\n    datalinkQuery() {\n        this.router.navigate(['/hub', this.hubCache.hub.hubKey, 'datalinks', 'datalink-edit', 'sourceTable', this.tables[0].key],\n        { relativeTo: this.route.root });\n    }\n\n    download() {\n        let downloadItems = new Array<DownloadObject>();\n\n        this.getTables().forEach(c => {\n            let downloadObject = new DownloadObject();\n            downloadObject.objectKey = c.key;\n            downloadObject.objectType = eDataObjectType.Table;\n            downloadItems.push(downloadObject);\n        });\n        this.hubService.downloadData(downloadItems, true, eDownloadFormat.Csv, this.cancelToken)\n    }\n\n    export() {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        let tables = this.getTables();\n        tables.forEach(table => { this.hubCache.cacheAddTable(table.key, hub); });\n\n        let filename = tables.length === 1 ? 'Table - ' + tables[0].name + '.json' : 'tables.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n}\n","export { HubService } from './hub.service';\nexport { HubModule } from './hub.module';\nexport { HubComponent } from './hub.component';\n","\n\nimport {NgModule} from '@angular/core';\n\nimport {CommonModule} from '@angular/common';\nimport {RouterModule } from '@angular/router';\nimport {FormsModule} from '@angular/forms';\nimport { SharedModule } from '../../shared.module';\n\nimport {HeaderComponent} from './header.component';\n// import {MessagesComponent} from './messages/messages.component';\nimport {TasksComponent} from './tasks/tasks.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    SharedModule\n  ],\n  declarations: [\n    TasksComponent,\n    HeaderComponent,\n//    MessagesComponent\n  ],\n  exports: [\n    HeaderComponent,\n  ]\n})\nexport class HeaderModule {}\n","import { Component, OnInit, Input, OnChanges, SimpleChanges, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { FormArray, FormGroup } from '@angular/forms';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { DexihConnection, DexihListOfValues, InputParameterBase, ListOfValuesItem, eLOVObjectType } from '../../../shared/shared.models';\nimport { HubService } from '../../hub.service';\nimport { Subscription, merge, Subject, Observable } from 'rxjs';\nimport { CancelToken } from '../../../+auth/auth.models';\nimport { ILogger } from '@microsoft/signalr';\nimport { eLogLevel, LogFactory } from '../../../../logging';\n\n@Component({\n    selector: 'input-parameters',\n    templateUrl: 'input-parameters.component.html'\n})\n\nexport class InputParametersComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() formsService: HubFormsService\n    @Input() parameters: FormArray;\n    @Input() showEdit = false;\n    @Input() parentParameters: InputParameterBase[];\n    @Input() refreshEvent: Observable<void>;\n    @Input() allowAddRemove = true;\n\n    @Output() onChange = new EventEmitter();\n    @Output() onRefreshData = new EventEmitter();\n\n    private _hubSubscription: Subscription;\n    private _refreshSubscription: Subscription;\n\n    public parentParams: string[] = [];\n    public listOfValues: Array<DexihListOfValues>;\n\n    public cancelToken: CancelToken = new CancelToken();\n\n    public showRefresh = false;\n    public isRefreshing = false;\n\n    public requiresRefresh = false;\n\n    public maxKey = 0;\n\n    constructor(private hubService: HubService) { }\n\n    ngOnInit() {\n        this._hubSubscription = this.hubService.getHubCacheObservable(true).subscribe(cache => {\n            this.listOfValues = cache.hub.dexihListOfValues;\n\n            if (!this.parameters) {\n                return;\n            }\n            \n            this.parameters.controls.forEach((parameterForm: FormGroup) => {\n                let parameter = <InputParameterBase>parameterForm.value;\n                if (parameter.listOfValuesKey > 0) {\n                    let lov = this.listOfValues.find(c => c.key === parameter.listOfValuesKey && c.isValid);\n                    if (lov && lov.sourceType === eLOVObjectType.Static) {\n                        this.refreshLOV(parameterForm);\n                    }\n                }\n            });\n        });\n\n        if (this.refreshEvent) {\n            this._refreshSubscription = this.refreshEvent.subscribe(() => {\n                this.requiresRefresh = false;\n            });\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (this.parentParameters) {\n            this.parentParams = this.parentParameters.map(c => '{' + c.name + '}');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._hubSubscription) { this._hubSubscription.unsubscribe(); }\n        if (this._refreshSubscription) { this._refreshSubscription.unsubscribe(); }\n    }\n\n    add(index) {\n        let parameter = new InputParameterBase();\n        parameter.key = --this.maxKey;\n        let parameterForm = this.formsService.parameter(parameter);\n        this.parameters.insert(index + 1, parameterForm);\n    }\n\n    delete(index) {\n        this.parameters.removeAt(index);\n    }\n\n    refreshLOV(parameterForm: FormGroup) {\n        let parameter = <InputParameterBase>parameterForm.value;\n        if (!parameter.listOfValuesKey) { return; }\n\n        let runTime = parameterForm.controls.runTime.value;\n        runTime.isRefreshing = true;\n        this.hubService.previewListOfValuesKey(parameter.listOfValuesKey, false, this.cancelToken).then(result => {\n            // runTime.items = result;\n            // runTime.showRefresh = false;\n\n            // update any other parameters with same list of values.\n            for (let p of this.parameters.controls\n                .filter( (c: FormGroup) => c.controls.listOfValuesKey.value === parameter.listOfValuesKey)) {\n                runTime = (<FormGroup>p).controls.runTime.value;\n                runTime.items = result;\n                runTime.showRefresh = false;\n            }\n        }).finally(() => {\n            runTime.isRefreshing = false;\n        });\n    }\n\n    refreshData() {\n        this.onRefreshData.emit();\n    }\n\n    textValueChange(parameterForm: FormGroup, value: {textValue: string, item: any}) {\n        // parameterForm.controls.value.setValue($event);\n        if (parameterForm.controls.rank.value === 0) {\n            parameterForm.controls.valueDesc.setValue(value.textValue);\n        } else {\n            parameterForm.controls.valueDesc.setValue(null);\n        }\n    }\n\n    change(parameterForm: FormGroup, $event) {\n        this.requiresRefresh = true;\n        if (parameterForm.controls.listOfValuesKey.value > 0) {\n            if (parameterForm.controls.rank.value === 0) {\n                let desc = parameterForm.controls.runTime?.value?.items?.find(c => c.key === $event);\n                parameterForm.controls.valueDesc.setValue(desc.name);\n            } else {\n                parameterForm.controls.valueDesc.setValue(null);\n            }\n            this.onChange.emit();\n        }\n    }\n}\n","<div *ngIf=\"parameters\" [ngClass]=\"{'d-flex': !showEdit}\">\n    <d-button-new *ngIf=\"showEdit && allowAddRemove && parameters.controls.length === 0\" (click)=\"add()\"\n        text=\"Add Parameter\" [autoCompact]=\"false\"></d-button-new>\n    <div *ngFor=\"let parameter of parameters.controls; let i = index\" class=\"pb-3 pr-1\">\n        <form [formGroup]=\"parameter\"\n            *ngIf=\"parameter.controls.isValid.value && (showEdit || parameter.controls.allowUserSelect.value)\">\n\n            <div class=\"d-flex align-items-stretch flex-wrap pb-1\" *ngIf=\"showEdit\">\n                <form-input labelLeft=\"Name\" class=\"pr-1\" formControlName=\"name\">\n                </form-input>\n                <form-select labelLeft=\"LOV\" class=\"pr-1 flex-grow-1\"  formControlName=\"listOfValuesKey\"\n                    [items]=\"listOfValues\" itemKey=\"key\" itemName=\"name\" [allowNullSelect]=\"true\">\n                </form-select>\n\n                <form-checkbox [border]=\"true\" class=\"pr-1\" formControlName=\"allowUserSelect\">Selectable</form-checkbox>\n                <form-checkbox [border]=\"true\" class=\"pr-1\" formControlName=\"rank\" [checkedValue]=\"1\" [unCheckedValue]=\"0\">Array\n                </form-checkbox>\n\n                <div *ngIf=\"allowAddRemove\" class=\"btn-group input-group-text p-0 m-0\">\n                    <button class=\"btn btn-transparent border-0\" type=\"button\" (click)=\"add(i)\" value=\"Add\">\n                        <i class=\"fa fa-plus-square-o\"></i>\n                    </button>\n                    <button class=\"btn btn-transparent border-0\" type=\"button\" (click)=\"delete(i)\" value=\"Remove\">\n                        <i class=\"fa fa-minus-square-o\"></i>\n                    </button>\n                </div>\n            </div>\n            \n            <form-select *ngIf=\"parameter.controls.listOfValuesKey.value > 0\"\n                class=\"p-0\" formControlName=\"value\" \n                [labelLeft]=\"showEdit ? null : parameter.controls.name.value\" itemKey=\"key\" itemName=\"name\"\n                [items]=\"parameter.controls.runTime?.value?.items\"\n                [enableTextEntry]=\"false\"\n                [textEntryItems]=\"(parameter.controls.listOfValuesKey.value > 0) ? null : parentParams\"\n                textEntryItemsTitle=\"Linked Parameters\" (ngModelChange)=\"change(parameter, $event)\"\n                (valueChange)=\"textValueChange(parameter, $event)\"\n                [showRefresh]=\"parameter.controls.runTime?.value?.showRefresh\"\n                [isRefreshing]=\"parameter.controls.runTime?.value?.isRefreshing\" (refreshed)=\"refreshLOV(parameter)\"\n                [multiSelect]=\"parameter.controls.rank.value === 1\">\n            </form-select>\n\n            <form-select *ngIf=\"! (parameter.controls.listOfValuesKey.value > 0)\" [items]=\"[]\"\n                class=\"p-0\" formControlName=\"value\" \n                [enableTextEntry]=\"true\"\n                [labelLeft]=\"showEdit ? null : parameter.controls.name.value\"\n                [textEntryItems]=\"parentParams\" textEntryItemsTitle=\"Linked Parameters\" \n            >\n            </form-select>\n        </form>\n    </div>\n\n    <div *ngIf=\"requiresRefresh\" class=\"alert alert-warning mt-2\">\n        <a href=\"javascript:void(0)\" class=\"alert-link\" (click)=\"refreshData()\">The parameters have changed. Click to\n            refresh.</a>\n    </div>\n</div>","<div id=\"content\">\n    <section *ngIf=\"!hubCache || (hubCache.status != eCacheStatus.Loaded && hubCache.status != eCacheStatus.Error)\">\n        <div class=\"dexih-loader-container\">\n            <div class=\"dexih-loader\"></div>\n            <div class=\"dexih-loader-text\">Loading the hub ...</div>\n        </div>\n    </section>\n\n    <div *ngIf=\"hubCache && hubCache.status == eCacheStatus.Loaded\">\n        <section *ngIf=\"hubCache.hubPermission === ePermission.FullReader\">\n            <div class=\"alert alert-info m-3\">\n                The current user has readonly access to this hub.\n            </div>\n        </section>\n\n        <section *ngIf=\"hubCache.hubPermission === ePermission.PublishReader\">\n            <div class=\"alert alert-info m-3\">\n                The current user only has access to shared items in this hub.\n            </div>\n        </section>\n    \n        <section *ngIf=\"openDelay && webSocketStatus != 'Connected'\">\n            <div class=\"alert alert-danger m-3\">\n                {{webSocketStatus}}.\n            </div>\n        </section>\n        \n        <section *ngIf=\"hubCache && hubCache.status == eCacheStatus.Error\">\n            <div class=\"alert alert-danger m-3\">\n                There was an error encountered when loading the hub.\n            </div>\n        </section>\n\n        <div *ngIf=\"hubCache && hubCache.status == eCacheStatus.Loaded\">\n            <section *ngIf=\"(openDelay && webSocketStatus != 'Connected') && !remoteAgent\">\n                <div class=\"alert alert-danger m-3\">\n                    Warning: There is no remote agent connected.  A remote agent is required for any data access and processing.\n                    <hr>\n                    <d-button buttonClass=\"btn btn-sm btn-primary text-white\" iconClass=\"fa fa-wrench\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary/agents\" text=\"Configure Agent\"></d-button>\n                    <d-button-refresh class=\"ml-1\" buttonClass=\"btn btn-sm btn-primary text-white\" (click)=\"refresh()\"></d-button-refresh>\n                </div>\n            </section>\n        </div>\n\n    </div>\n    <router-outlet></router-outlet>\n</div>\n\n","import { Component, OnDestroy, OnInit, HostListener } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription, combineLatest} from 'rxjs';\n\nimport { AuthService } from '../+auth/auth.service';\nimport { HubCache, eCacheStatus } from './hub.models';\nimport { HubService } from './hub.service';\nimport { DexihHub, DexihActiveAgent, ePermission } from '../shared/shared.models';\n\n@Component({\n    selector: 'dexih-hub',\n    templateUrl: './hub.component.html'\n})\nexport class HubComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n    private _hubCacheSubscription: Subscription;\n    private _remoteAgentSubscription: Subscription;\n    private _webSocketSubscription: Subscription;\n\n    public hubCache: HubCache;\n\n    hubKey: number;\n    hub: DexihHub;\n    remoteAgent: DexihActiveAgent;\n\n    eCacheStatus = eCacheStatus;\n    ePermission = ePermission;\n\n    webSocketStatus: string;\n    openDelay = false; // used to pause the websocket error message displaying whilst a connect attempt occurs.\n\n    constructor(private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(hubCache => {\n            this.hubCache = hubCache;\n        });\n\n        this._webSocketSubscription = this.authService.getWebSocketStatusObservable().subscribe(webSocketStatus => {\n            this.webSocketStatus = webSocketStatus;\n        });\n\n        this._remoteAgentSubscription = this.hubService.getRemoteAgentObservable().subscribe(remoteAgent => {\n            this.remoteAgent = remoteAgent;\n        })\n\n        try {\n            this._subscription = combineLatest([\n                this.route.params,\n                this.authService.getUserObservable()]\n            ).subscribe(async result => {\n                let params = result[0];\n                let user = result[1];\n\n                if (!user) {\n                    return;\n                }\n\n                this.hubKey = + params['hubKey'];\n\n                if (this.hubKey > 0) {\n                    await this.hubService.updateHub(this.hubKey, 'Loading...');\n                } else {\n                    this.router.navigate(['/hubs']);\n                }\n\n                if (this.hubCache.hub != null) {\n                    this.hubKey = this.hubCache.hub.hubKey;\n                    this.hub = this.hubCache.hub;\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Hub Component');\n        }\n\n        setTimeout(() => {\n            this.openDelay = true;\n        }, 5000);\n\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n        if (this._remoteAgentSubscription) { this._remoteAgentSubscription.unsubscribe(); }\n        if (this._webSocketSubscription) { this._webSocketSubscription.unsubscribe(); }\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    refresh() {\n        this.authService.pingRemoteAgents();\n    }\n\n    @HostListener('window:focus', ['$event'])\n    onFocus(): void {\n        this.openDelay = false;\n        setTimeout(() => {\n            this.openDelay = true;\n        }, 5000);\n    }\n}\n","import {HubCache, eMappingStatus } from './hub.models'\nimport { DexihDatalinkColumn, eTypeCode, DexihDatalink, DexihDatalinkTable, eTransformItemType,\n    eTransformType, DexihTableColumn, DexihDatalinkTransform, DexihDatalinkTransformItem, DexihFunctionParameter, eDeltaType, eDuplicateStrategy } from '../shared/shared.models';\n\nexport enum eDatalinkObjectType {\n    SourceTable,\n    TargetTable,\n    Transform\n}\n\nexport enum eObjectUse {\n    Sort,\n    Mapping,\n    Function,\n    Join,\n    PassThrough,\n    Source,\n    Target\n}\n\nexport class ImpactLineage {\n    public objectType: eDatalinkObjectType;\n    public objectUse: eObjectUse;\n\n    public column: DexihDatalinkColumn;\n    public link: string;\n\n    public ImpactItems: ImpactLineage[];\n    public LineageItems: ImpactLineage[];\n\n    private currentMappingStatus(): eMappingStatus {\n        switch (this.objectUse) {\n            case eObjectUse.Sort:\n                return eMappingStatus.Sorted;\n            case eObjectUse.Mapping:\n                return eMappingStatus.Mapped;\n            case eObjectUse.Function:\n                return eMappingStatus.Mapped;\n            case eObjectUse.Join:\n                return eMappingStatus.Joined;\n            case eObjectUse.PassThrough:\n                return eMappingStatus.PassThroughMap;\n            case eObjectUse.Source:\n                return eMappingStatus.Mapped;\n            case eObjectUse.Target:\n                return eMappingStatus.Mapped;\n        }\n    }\n\n    // look at forward mappings to get current impact mapping status for column\n    public GetImpact(): eMappingStatus {\n        let mappingStatus = eMappingStatus.NotMapped;\n\n        this.ImpactItems.forEach(impact => {\n            let newStatus = impact.GetImpact();\n            if (newStatus < mappingStatus) {\n                mappingStatus = newStatus;\n            }\n        });\n\n        return mappingStatus;\n    }\n\n    public GetLineage(): eMappingStatus {\n        let mappingStatus = eMappingStatus.NotMapped;\n        return mappingStatus;\n    }\n}\n\n\nexport class InputOutputColumns {\n\n    // used to find a column within a node structure.\n    findColumn(column: DexihDatalinkColumn, nodeDatalinkColumnKey: number): boolean {\n        if (!nodeDatalinkColumnKey) {\n            return false;\n        }\n        if (column.key === nodeDatalinkColumnKey) {\n            return true;\n        }\n        if (column.childColumns) {\n            for (let childColumn of column.childColumns) {\n                if (this.findColumn(childColumn, nodeDatalinkColumnKey)) {\n                    return true;\n                }\n            };\n        }\n        return false;\n    }\n\n    // used to find a node column within a node structure.\n    findNodeColumn(column: DexihDatalinkColumn, columns: DexihDatalinkColumn[]): DexihDatalinkColumn {\n        if (!column || !columns || columns.length === 0) {\n            return null;\n        }\n\n        for (let col of columns) {\n            if (col.key === column.key) {\n                return col;\n            }\n            if (col.childColumns) {\n                let returnCol = this.findNodeColumn(column, col.childColumns);\n                if (returnCol) {\n                    return returnCol;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    // used to find a node column within a node structure.\n    findParentColumns(column: DexihDatalinkColumn, columns: DexihDatalinkColumn[]): DexihDatalinkColumn[] {\n        if (!column || !columns || columns.length === 0) {\n            return null;\n        }\n\n        for (let col of columns) {\n            if (col.key === column.key) {\n                return columns;\n            }\n            if (col.childColumns) {\n                let returnCol = this.findParentColumns(column, col.childColumns);\n                if (returnCol) {\n                    return returnCol;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    // gets all allowable columns given the specified nodeLevel\n    validColumns(nodeDatalinkColumnKey: number, columns: DexihDatalinkColumn[]): DexihDatalinkColumn[] {\n        if (!nodeDatalinkColumnKey) {\n            return columns;\n        }\n\n        let validColumns: DexihDatalinkColumn[] = [];\n\n        columns.forEach(col => {\n            validColumns.push(col);\n            if (col.key === nodeDatalinkColumnKey) {\n                if (col.childColumns) {\n                    validColumns = validColumns.concat(col.childColumns);\n                }\n            } else if (this.findColumn(col, nodeDatalinkColumnKey)) {\n                let cols = this.validColumns(nodeDatalinkColumnKey, col.childColumns);\n                validColumns = validColumns.concat(cols);\n            }\n        });\n\n        return validColumns;\n    }\n\n    findValidColumn(column: DexihDatalinkColumn, nodeDatalinkColumnKey: number, columns: DexihDatalinkColumn[])\n        : DexihDatalinkColumn {\n\n        for (let col of columns) {\n            if (col.key === column.key) {\n                return col;\n            }\n\n            if (this.findColumn(col, nodeDatalinkColumnKey)) {\n                let newCol = this.findValidColumn(column, nodeDatalinkColumnKey, col.childColumns);\n                if (newCol) { return newCol };\n            }\n        };\n\n        return null;\n    }\n\n\n    // gets a flattened list of the available source columns, which can be used to populate drop-downs\n    getAvailableColumns(columns: DexihDatalinkColumn[], nodeDatalinkColumnKey: number, levelCount: number): DexihDatalinkColumn[] {\n        let returnColumns = [];\n\n        columns.forEach(column => {\n          let newColumn = Object.assign({}, column);\n          newColumn.logicalName = '-'.repeat(levelCount) + column.logicalName;\n          returnColumns.push(newColumn);\n          if (column.dataType === eTypeCode.Node && column.childColumns) {\n            let io = new InputOutputColumns();\n            if (io.findColumn(column, nodeDatalinkColumnKey)) {\n              let childColumns = this.getAvailableColumns(column.childColumns, nodeDatalinkColumnKey, levelCount + 1);\n              returnColumns.push.apply(returnColumns, childColumns);\n            }\n          }\n        });\n\n        return returnColumns;\n      }\n\n      public getDatalinkOutputColumns(datalink: DexihDatalink): DexihDatalinkColumn[] {\n        if (datalink.dexihDatalinkTransforms.length > 0) {\n            let transforms = datalink.dexihDatalinkTransforms.sort((a, b) => b.position - a.position);\n            return transforms[0]['runTime'].outputColumns;\n        } else {\n            return datalink.sourceDatalinkTable.dexihDatalinkColumns;\n        }\n      }\n\n    /// used to copy a datalink column from source to target, modifying properties which shouldn't be passed across.\n    public copyDatalinkColumn(column: DexihDatalinkColumn, newPosition: number, newGroup: string): DexihDatalinkColumn {\n        if (!column) { return null; }\n\n        let newColumn = new DexihDatalinkColumn();\n        Object.assign(newColumn, column);\n        if (column.childColumns) {\n            newColumn.childColumns = column.childColumns\n            .sort((a, b) => a.position - b.position)\n            .map((c, index) => this.copyDatalinkColumn(c, index, newGroup + '.' + column.logicalName));\n        }\n        newColumn.isIncrementalUpdate = false;\n        newColumn.isInput = false;\n        newColumn.position = newPosition;\n\n        if (newGroup) {\n            newColumn.columnGroup = newGroup;\n        } else {\n            newColumn.columnGroup = column.columnGroup;\n        }\n        return newColumn;\n    }\n\n    public copyDatalinkColumns(columns: DexihDatalinkColumn[]): DexihDatalinkColumn[] {\n        let newColumns: DexihDatalinkColumn[] = [];\n        columns.forEach(column => {\n            newColumns.push(this.copyDatalinkColumn(column, column.position, column.columnGroup));\n        });\n        return newColumns;\n    }\n\n    public copyDatalinkTable(table: DexihDatalinkTable): DexihDatalinkTable {\n        let newTable = Object.assign({}, table);\n        let newColumns: DexihDatalinkColumn[] = [];\n\n        table.dexihDatalinkColumns.forEach(column => {\n            newColumns.push(this.copyDatalinkColumn(column, column.position, column.columnGroup));\n        });\n        newTable.dexihDatalinkColumns = newColumns;\n\n        return newTable;\n    }\n\n    public buildInputOutput(datalink: DexihDatalink) {\n\n        // get a reverse sorted list of transforms prior to the current one.\n        let transforms = datalink.dexihDatalinkTransforms\n            .filter(a => a.isValid)\n            .sort((a, b) => a.position - b.position);\n\n        transforms.forEach((transform, index) => {\n            let inputColumns: DexihDatalinkColumn[] = [];\n\n            // if this is the first transform, then the inputs columns will come from the source.\n            if (index === 0) {\n                inputColumns = datalink.sourceDatalinkTable.dexihDatalinkColumns\n                    .filter(c => c.deltaType !== eDeltaType.IgnoreField)\n                    .sort((a, b) => a.position - b.position)\n                    .map((c, i) => this.copyDatalinkColumn(c, i, c.columnGroup));\n\n                // initialize all input columns to not mapped.\n                inputColumns.forEach(c => {\n                    c['runTime'] = {impact: eMappingStatus.NotMapped, lineage: eMappingStatus.NotMapped}\n                });\n            } else {\n                // get outputs from the previous transform\n                inputColumns = transforms[index - 1]['runTime'].outputColumns\n                    .filter(c => c.deltaType !== eDeltaType.IgnoreField)\n                    .sort((a, b) => a.position - b.position)\n                    .map((c, i) => this.copyDatalinkColumn(c, i, c.columnGroup));\n            }\n\n            // get a sorted list of the transform items.\n            let transformItems = transform.dexihDatalinkTransformItems\n                .sort((a, b) => a.position - b.position);\n\n            // outputColumns contains columns at the top level.\n            let outputColumns: DexihDatalinkColumn[] = [];\n\n            // transformColumns the current node which is being transformed (i.e. which mappings and other operations should be applied to)\n            let transformColumns = outputColumns;\n\n            let pos = 0;\n\n            let nodeColumn = transform.nodeDatalinkColumn ?\n                this.findNodeColumn(transform.nodeDatalinkColumn, inputColumns) : null;\n\n            // if the mapping uses a node level, copy parent columns, and set new node level.\n            if (nodeColumn) {\n                outputColumns = this.copyDatalinkColumns(inputColumns);\n\n                nodeColumn = transform.nodeDatalinkColumn ?\n                this.findNodeColumn(transform.nodeDatalinkColumn, outputColumns) : null;\n\n                // create a copy of the inputs columns\n                inputColumns.forEach((column) => {\n                    transformColumns.push(this.copyDatalinkColumn(column, pos++, column.columnGroup));\n                });\n\n                nodeColumn.childColumns = [];\n                transformColumns = nodeColumn.childColumns;\n            }\n\n            // add group columns\n            transformItems\n                .filter(c => (c.transformItemType === eTransformItemType.Series\n                    || c.transformItemType === eTransformItemType.Column) &&\n                    c.sourceDatalinkColumn )\n                .forEach(item => {\n                transformColumns.push(this.copyDatalinkColumn(item.sourceDatalinkColumn, pos++, 'Group'));\n            });\n\n            // if there is group node, all non-group columns should be child columns.\n            let groupNode = transformItems.find(c => c.transformItemType === eTransformItemType.GroupNode)\n            if (groupNode) {\n                let groupColumn = this.copyDatalinkColumn(groupNode.targetDatalinkColumn, pos++, 'Group Node');\n                transformColumns.push(groupColumn);\n\n                // set the current node level to the group column, so transforms are mapped as it's child columns.\n                transformColumns = groupColumn.childColumns;\n            }\n\n            // if the transform is a join, then pull in the join table columns\n            if ((transform.transformType === eTransformType.Join || transform.transformType === eTransformType.Lookup)\n                && transform.joinDatalinkTable) {\n                let joinColumns: DexihDatalinkColumn[];\n                let joinNode = transform.dexihDatalinkTransformItems.find(c => c.transformItemType === eTransformItemType.JoinNode)\n\n                if (joinNode) {\n                    let joinColumn = joinNode.targetDatalinkColumn;\n                    if (joinColumn) {\n                        joinColumn = this.copyDatalinkColumn(joinColumn, pos++, 'Join Node');\n                        joinColumn.childColumns = [];\n                        transformColumns.push(joinColumn);\n                        joinColumns = joinColumn.childColumns;\n                    } else {\n                        joinColumns = [];\n                    }\n                } else {\n                    joinColumns = transformColumns;\n                }\n\n\n                // set join position to high number so join columns are positioned after other columns.\n                let joinPos = 10000;\n                transform.joinDatalinkTable.dexihDatalinkColumns.sort((a, b) => a.position - b.position).forEach(c => {\n                    if(transform.joinDuplicateStrategy !== eDuplicateStrategy.MergeValidDates || (c.deltaType !== eDeltaType.ValidFromDate && c.deltaType !== eDeltaType.ValidToDate)) {\n                        \n                        let jc = this.copyDatalinkColumn(c, joinPos++, transform.joinDatalinkTable.name);\n                        joinColumns.push(jc);\n                    }\n                });\n            }\n\n            // if the transform is a Concatenate, then merge common column names together.\n            if (transform.transformType === eTransformType.Concatenate && transform.joinDatalinkTable) {\n                // get the join tables.\n                let joinTable = transform.joinDatalinkTable;\n\n                // add any missing columns in the join table to the main table.\n                joinTable.dexihDatalinkColumns.sort((a, b) => a.position - b.position).forEach(concat => {\n                    if (!transformColumns.find(c => c.name === concat.name)) {\n                        transformColumns.push(this.copyDatalinkColumn(concat, pos++, 'Concatenate'));\n                    }\n                });\n            }\n\n            // add other mapped columns to the current node level.\n            transformItems.forEach(item => {\n                // if the item type of a column (used for group transform), then the source column is pushed to the output.\n                switch (item.transformItemType) {\n                    case eTransformItemType.AggregatePair:\n                    case eTransformItemType.BuiltInFunction:\n                    case eTransformItemType.ColumnPair:\n                    case eTransformItemType.CustomFunction:\n                    case eTransformItemType.UnGroup:\n                        if (item.targetDatalinkColumn) {\n                            transformColumns.push(item.targetDatalinkColumn);\n                        }\n                        item.dexihFunctionParameters.filter(c => HubCache.parameterIsOutput(c)).forEach(param => {\n                            if (param.datalinkColumn) {\n                                transformColumns.push(param.datalinkColumn);\n                            }\n\n                            param.arrayParameters.forEach(arrayParam => {\n                                if (arrayParam.datalinkColumn) {\n                                    transformColumns.push(arrayParam.datalinkColumn);\n                                }\n                            });\n                        });\n                        break;\n                }\n            });\n\n            // add the passThrough columns\n            if (transform.passThroughColumns) {\n                let columns = inputColumns;\n                // get the matching node from the inputs\n                if (nodeColumn) {\n                    let node = this.findNodeColumn(nodeColumn, columns);\n                    if (node) {\n                        columns = node.childColumns;\n                    }\n                }\n                columns.forEach(column => {\n                    if (transformColumns.findIndex(c => c.name === column.name  ) < 0) {\n                        let newColumn = this.copyDatalinkColumn(column, pos++, column.columnGroup)\n\n                        if(transform.joinDuplicateStrategy === eDuplicateStrategy.MergeValidDates && (newColumn.deltaType === eDeltaType.ValidFromDate || newColumn.deltaType === eDeltaType.ValidToDate)) {\n                            newColumn.columnGroup = 'merged';\n                            newColumn.position = 20000 + pos;\n                        }\n\n                        transformColumns.push(newColumn);\n                    }\n                });\n            }\n\n            transform['runTime'] = {inputColumns: inputColumns, outputColumns: outputColumns, transformColumns: transformColumns }\n        });\n\n        // set the columns for the targets\n        let targetColumns: DexihDatalinkColumn[];\n        if (transforms.length > 0) {\n            targetColumns = transforms[0]['runTime'].outputColumns;\n        } else {\n            targetColumns = datalink.sourceDatalinkTable.dexihDatalinkColumns;\n        }\n\n        datalink.dexihDatalinkTargets.forEach(target => {\n            if (target.nodeDatalinkColumn) {\n                let validColumns =  this.validColumns(target.nodeDatalinkColumn.key, targetColumns);\n                target['runTime'] = {inputColumns: validColumns }\n            } else {\n                target['runTime'] = {inputColumns: targetColumns};\n            }\n\n        });\n\n    }\n}\n\nexport class ColumnUsageNode {\n    public impactTree: Array<ColumnUsageNode>;\n    public lineageTree: Array<ColumnUsageNode>;\n\n    public constructor(\n        public objectType: eDatalinkObjectType,\n        public objectUse: eObjectUse,\n        public datalink: DexihDatalink,\n        // public table: DexihTable,\n        public datalinkColumn: DexihDatalinkColumn,\n        public tableColumn: DexihTableColumn,\n        public datalinkTransform: DexihDatalinkTransform,\n        public datalinkTransformItem: DexihDatalinkTransformItem,\n        public mappingStatus: eMappingStatus,\n        public hubCache: HubCache\n    ) {}\n\n    // get the parameters and array parameter in a single list to save recursive calls.\n    private flattenParameters(params: DexihFunctionParameter[]): any[] {\n        let flat = <any[]> params;\n\n        params.forEach(p => {\n            flat = flat.concat(p.arrayParameters);\n        })\n\n        return flat;\n    }\n\n    // builds the impactTree and returns a status to indicate how the column is mapped.\n    public createDatalinkImpact(useNextTransform: boolean): eMappingStatus  {\n       this.impactTree = [];\n       let newMappingStatus: eMappingStatus = eMappingStatus.NotMapped;\n\n        let nextTransform: DexihDatalinkTransform = null;\n       if (useNextTransform) {\n            switch (this.objectType) {\n                case  eDatalinkObjectType.SourceTable:\n                    if (this.datalink.dexihDatalinkTransforms.length > 0 ) {\n                        nextTransform = this.datalink.dexihDatalinkTransforms.sort((a, b) => a.position - b.position)[0];\n                    }\n                    break;\n                case eDatalinkObjectType.Transform:\n                    let transforms = this.datalink.dexihDatalinkTransforms\n                        .filter(c => c.position > this.datalinkTransform.position).sort((a, b) => a.position - b.position);\n                    if (transforms.length > 0 ) {\n                        nextTransform = transforms[0];\n                    } else {\n                        this.mappingStatus = eMappingStatus.Mapped;\n                    }\n                    break;\n                case eDatalinkObjectType.TargetTable:\n                    return;\n            }\n       } else {\n           if (this.datalinkTransform) {\n                nextTransform = this.datalinkTransform;\n           } else {\n               if (this.datalink.dexihDatalinkTransforms.length > 0) {\n                    let transforms = this.datalink.dexihDatalinkTransforms.sort((a, b) => b.position - a.position); // sort asc\n                    nextTransform = transforms[0];\n               }\n           }\n       }\n\n        // find all occurrences of the current column in the next transform.\n        if (nextTransform) {\n            let columnIsMapped = false;\n            nextTransform.dexihDatalinkTransformItems.forEach(item => {\n                switch (item.transformItemType) {\n                    case eTransformItemType.Column:\n                        // if this column is mapped, then add it to the impact tree.\n                        if (item.sourceDatalinkColumn &&\n                                item.sourceDatalinkColumn.key === this.datalinkColumn.key ) {\n                            let column = item.sourceDatalinkColumn;\n                            if (column) {\n                                let newImpactTree =\n                                    new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Mapping, this.datalink,\n                                        column, null, nextTransform, null, eMappingStatus.Mapped, this.hubCache);\n                                let newStatus = newImpactTree.createDatalinkImpact(true);\n                                if (newStatus < newMappingStatus) {\n                                    newMappingStatus = newStatus;\n                                }\n                                this.impactTree.push(newImpactTree);\n                                if (column.name === this.datalinkColumn.name) {\n                                    columnIsMapped = true;\n                                }\n                            } else {\n                                this.mappingStatus = eMappingStatus.Error;\n                                return eMappingStatus.Error;\n                            }\n                        }\n                        break;\n                    case eTransformItemType.ColumnPair:\n                        // if this column is mapped, then add it to the impact tree.\n                        if (item.sourceDatalinkColumn &&\n                                item.sourceDatalinkColumn.key === this.datalinkColumn.key &&\n                                item.targetDatalinkColumn ) {\n                            let column = item.targetDatalinkColumn;\n                            if (column) {\n                                let newImpactTree =\n                                    new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Mapping, this.datalink,\n                                        column, null, nextTransform, null, eMappingStatus.Mapped, this.hubCache);\n                                let newStatus = newImpactTree.createDatalinkImpact(true);\n                                if (newStatus < newMappingStatus) {\n                                    newMappingStatus = newStatus;\n                                }\n                                this.impactTree.push(newImpactTree);\n                                if (item.targetDatalinkColumn.name === this.datalinkColumn.name) {\n                                    columnIsMapped = true;\n                                }\n                            } else {\n                                this.mappingStatus = eMappingStatus.Error;\n                                return eMappingStatus.Error;\n                            }\n                        }\n                        break;\n                    case eTransformItemType.BuiltInFunction:\n                    case eTransformItemType.CustomFunction:\n                        // if the column is part of a function parameter, then add it to the tree.\n\n                        let inputParams = this.flattenParameters(item.dexihFunctionParameters\n                            .filter(p => HubCache.parameterIsInput(p)));\n\n                            inputParams.forEach(inputParam => {\n\n                                if (inputParam.datalinkColumn &&\n                                    inputParam.datalinkColumn.key === this.datalinkColumn.key) {\n                                    // add the target column (if mapped)\n                                    if (item.targetDatalinkColumn) {\n                                        let column = item.targetDatalinkColumn;\n                                        if (column) {\n                                            let newImpactTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Function,\n                                                this.datalink, column, null, nextTransform, item, eMappingStatus.Mapped, this.hubCache);\n                                            let newStatus = newImpactTree.createDatalinkImpact(true);\n                                            if (newStatus < newMappingStatus) {\n                                                newMappingStatus = newStatus;\n                                            }\n                                            this.impactTree.push(newImpactTree);\n                                            if (column.name === this.datalinkColumn.name) {\n                                                columnIsMapped = true;\n                                            }\n                                        } else {\n                                            this.mappingStatus = eMappingStatus.Error;\n                                            return eMappingStatus.Error;\n                                        }\n                                    }\n\n                                    let outParams = this.flattenParameters(item.dexihFunctionParameters\n                                        .filter(p => HubCache.parameterIsOutput(p)));\n\n                                    // add any output parameters\n                                    outParams.forEach(outParam => {\n                                        if (outParam.datalinkColumn) {\n                                            let column = outParam.datalinkColumn;\n                                            if (column) {\n                                                let newImpactTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Function,\n                                                    this.datalink, column, null, nextTransform,\n                                                    item, eMappingStatus.Mapped, this.hubCache);\n                                                let newStatus = newImpactTree.createDatalinkImpact(true);\n                                                if (newStatus < newMappingStatus) {\n                                                    newMappingStatus = newStatus;\n                                                }\n                                                this.impactTree.push(newImpactTree);\n                                                if (column.name === this.datalinkColumn.name) {\n                                                    columnIsMapped = true;\n                                                }\n                                            } else {\n                                                this.mappingStatus = eMappingStatus.Error;\n                                                return eMappingStatus.Error;\n                                            }\n                                        }\n                                    });\n                                }\n                            });\n                        break;\n                    case eTransformItemType.JoinPair:\n                        // if this column part of a join add it.\n                        if (item.sourceDatalinkColumn && item.sourceDatalinkColumn.key\n                                === this.datalinkColumn.key) {\n                            let joinTable = nextTransform.joinDatalinkTable;\n                            if (joinTable) {\n                                let column = item.joinDatalinkColumn;\n\n                                if (column) {\n                                    let newImpactTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Join,\n                                        this.datalink, column, null, nextTransform, item, eMappingStatus.Joined, this.hubCache);\n                                    this.impactTree.push(newImpactTree);\n                                } else {\n                                    this.mappingStatus = eMappingStatus.Error;\n                                    return eMappingStatus.Error;\n                                }\n                            } else {\n                                return eMappingStatus.Error;\n                            }\n                        }\n                        break;\n                    case eTransformItemType.Sort:\n                        // if this column part of a sort, add it.\n                        if (item.sourceDatalinkColumn &&\n                                item.sourceDatalinkColumn.key === this.datalinkColumn.key) {\n                            let newImpactTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Sort,\n                                    this.datalink, this.datalinkColumn, null, nextTransform, item, eMappingStatus.Sorted, this.hubCache);\n                            this.impactTree.push(newImpactTree);\n                        }\n                        break;\n                }\n\n            });\n\n            // if the column was not mapped, and the transform passes through columns without mapping, then add it.\n            if (!columnIsMapped && nextTransform.passThroughColumns) {\n                if (this.mappingStatus === eMappingStatus.Mapped) {\n                    newMappingStatus = eMappingStatus.Mapped;\n                } else {\n                    newMappingStatus = eMappingStatus.NotMapped;\n                }\n                let newImpactTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.PassThrough,\n                        this.datalink, this.datalinkColumn, null, nextTransform, null, this.mappingStatus, this.hubCache);\n                let newStatus = newImpactTree.createDatalinkImpact(true);\n                if (newStatus < newMappingStatus) {\n                    newMappingStatus = newStatus;\n                }\n                this.impactTree.push(newImpactTree);\n            }\n\n        } else {\n            // if there is no next transform, then check against the target tables.\n            for (let target of this.datalink.dexihDatalinkTargets) {\n\n                let table = this.hubCache.getTable(target.tableKey);\n\n                if (table) {\n                    let column = table.dexihTableColumns.find(c => c.isValid && c.name === this.datalinkColumn.name);\n                    if (column) {\n                        if (this.mappingStatus === eMappingStatus.Mapped) {\n                            newMappingStatus = eMappingStatus.Mapped;\n                        } else {\n                            if (this.isAutoGenerateColumn(column.deltaType)) {\n                                newMappingStatus = eMappingStatus.AutoGenerate;\n                            } else {\n                                if (!this.datalinkTransform || this.datalinkTransform.passThroughColumns) {\n                                    newMappingStatus = eMappingStatus.PassThroughMap;\n                                } else {\n                                    newMappingStatus = eMappingStatus.NotMapped;\n                                }\n\n                            }\n                        }\n                    } else {\n                        if (this.mappingStatus === eMappingStatus.Mapped) {\n                            newMappingStatus = eMappingStatus.MappedToNothing;\n                        } else {\n                            if (!this.datalinkTransform || this.datalinkTransform.passThroughColumns) {\n                                newMappingStatus = eMappingStatus.PassThroughToNothing;\n                            } else {\n                                newMappingStatus = eMappingStatus.NotMapped;\n                            }\n                    }\n                    }\n                    let newImpactTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Target,\n                            this.datalink, null, column, null, null, newMappingStatus, this.hubCache);\n                    this.impactTree.push(newImpactTree);\n                } else {\n                    if (!this.datalink.isQuery) {\n                        if (this.mappingStatus === eMappingStatus.Mapped) {\n                            newMappingStatus = eMappingStatus.MappedToVirtual;\n                        } else {\n                            newMappingStatus = eMappingStatus.PassThroughToVirtual;\n                        }\n\n                    } else {\n                        newMappingStatus = eMappingStatus.Error;\n                    }\n                }\n\n                if (this.mappingStatus === eMappingStatus.NotMapped) { break; }\n            }\n\n        }\n\n        return newMappingStatus;\n\n\n    }\n\n    public createDatalinkLineage(usePreviousTransform: boolean): eMappingStatus  {\n       this.lineageTree = [];\n       let newMappingStatus: eMappingStatus = eMappingStatus.NotMapped;\n       let currentColumn = this.datalinkColumn;\n\n       if (!currentColumn || this.tableColumn ) {\n            currentColumn = new DexihDatalinkColumn();\n            Object.assign(currentColumn, this.tableColumn);\n       }\n\n        let previousTransform: DexihDatalinkTransform = null;\n        if (usePreviousTransform) {\n            switch (this.objectType) {\n                case  eDatalinkObjectType.SourceTable:\n                    return;\n                case eDatalinkObjectType.Transform:\n                    let transforms = this.datalink.dexihDatalinkTransforms\n                        .filter(c => c.position < this.datalinkTransform.position).sort((a, b) => a.position - b.position); // sort asc\n                    if (transforms.length > 0 ) {\n                        previousTransform = transforms[transforms.length - 1];\n                    }\n                    break;\n                case eDatalinkObjectType.TargetTable:\n                    // check for column types which will populate without mappings (i.e. auto-generate)\n                    if (this.tableColumn && this.isAutoGenerateColumn(this.tableColumn.deltaType)) {\n                        newMappingStatus = eMappingStatus.AutoGenerate;\n                    } else {\n                        newMappingStatus = eMappingStatus.NotMapped;\n                    }\n\n                    if (this.datalink.dexihDatalinkTransforms.length > 0 ) {\n                        // get the last transform.\n                        let transforms2 = this.datalink.dexihDatalinkTransforms.sort((a, b ) => b.position - a.position);\n                        previousTransform = transforms2[0];\n\n                        // map the column name to the transform.\n                        if (this.tableColumn) {\n                            let column = previousTransform['runTime'].outputColumns.find(c => c.name === this.tableColumn.name);\n                            if (column) {\n                                currentColumn = column;\n                            }\n                        } else {\n                            currentColumn = this.datalinkColumn;\n                        }\n\n                    } else {\n                        if (this.tableColumn) {\n                            let outputs = this.datalink.sourceDatalinkTable.dexihDatalinkColumns;\n                            let column = outputs.find(c => c.name === this.tableColumn.name);\n                            if (column) {\n                                currentColumn = column;\n                            }\n                        } else {\n                            currentColumn = this.datalinkColumn;\n                        }\n\n                    }\n                    break;\n            }\n        } else {\n            previousTransform = this.datalinkTransform;\n\n            if (this.datalinkTransform) {\n                previousTransform = this.datalinkTransform;\n           } else {\n               if (this.datalink.dexihDatalinkTransforms.length > 0) {\n                    let transforms = this.datalink.dexihDatalinkTransforms.sort((a, b) => a.position - b.position); // sort desc\n                    previousTransform = transforms[0]; // get last transform\n               }\n           }\n\n        }\n\n        // find all occurrences of the current column in the next transform.\n        if (previousTransform) {\n            let columnIsMapped = false;\n            previousTransform.dexihDatalinkTransformItems.forEach(item => {\n                switch (item.transformItemType) {\n                    case eTransformItemType.Column:\n                    // if this column is mapped, then add it to the impact tree.\n                    if (item.sourceDatalinkColumn &&\n                        item.sourceDatalinkColumn.key) {\n                        let newLineageTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Mapping,\n                            this.datalink, item.sourceDatalinkColumn, null, previousTransform, null,\n                            eMappingStatus.Mapped, this.hubCache);\n                        let newStatus = newLineageTree.createDatalinkLineage(true);\n                        if (newStatus < newMappingStatus) {\n                            newMappingStatus = newStatus;\n                        }\n                        this.lineageTree.push(newLineageTree);\n                        // if (item.sourceDatalinkColumn.name === this.datalinkColumn.name) {\n                            columnIsMapped = true;\n                        // }\n                    }\n                    break;\n                    case eTransformItemType.ColumnPair:\n                        // if this column is mapped, then add it to the impact tree.\n                        if (item.targetDatalinkColumn &&\n                            item.targetDatalinkColumn.key === currentColumn.key\n                            && item.sourceDatalinkColumn) {\n                            let newLineageTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Mapping,\n                                this.datalink, item.sourceDatalinkColumn, null, previousTransform, null,\n                                eMappingStatus.Mapped, this.hubCache);\n                            let newStatus = newLineageTree.createDatalinkLineage(true);\n                            if (newStatus < newMappingStatus) {\n                                newMappingStatus = newStatus;\n                            }\n                            this.lineageTree.push(newLineageTree);\n                            // if (item.sourceDatalinkColumn.name === this.datalinkColumn.name) {\n                                columnIsMapped = true;\n                            // }\n                        }\n                        break;\n                    case eTransformItemType.BuiltInFunction:\n                    case eTransformItemType.CustomFunction:\n\n                        // if this column is mapped, then add it to the impact tree.\n                        if (item.targetDatalinkColumn &&\n                            item.targetDatalinkColumn.key === currentColumn.key) {\n                            newMappingStatus = eMappingStatus.Mapped;\n\n                            let inputParams = this.flattenParameters(item.dexihFunctionParameters\n                                .filter(p => HubCache.parameterIsOutput(p)));\n                            inputParams.filter(c => c.datalinkColumn).forEach(inParam => {\n                                if (inParam.datalinkColumn) {\n                                    let newLineageTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Function,\n                                            this.datalink, inParam.datalinkColumn, null, previousTransform, item,\n                                            eMappingStatus.Mapped, this.hubCache);\n                                    let newStatus = newLineageTree.createDatalinkLineage(true);\n                                    if (newStatus < newMappingStatus) {\n                                        newMappingStatus = newStatus;\n                                    }\n                                    this.lineageTree.push(newLineageTree);\n                                    // if (inParam.datalinkColumn.name === this.datalinkColumn.name) {\n                                        columnIsMapped = true;\n                                    // }\n                                }\n                            });\n                        }\n\n                        // add any output parameters\n                        let outParams = this.flattenParameters(item.dexihFunctionParameters\n                            .filter(p => HubCache.parameterIsOutput(p)));\n                        outParams.filter(c => c.datalinkColumn).forEach(outParam => {\n                                if (outParam.datalinkColumn.key === currentColumn.key) {\n                                    newMappingStatus = eMappingStatus.Mapped;\n                                    item.dexihFunctionParameters\n                                        .filter(p => HubCache.parameterIsOutput(p) && p.datalinkColumn).forEach(inParam => {\n                                    if (inParam.datalinkColumn) {\n                                        let newLineageTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Function,\n                                            this.datalink, inParam.datalinkColumn, null, previousTransform, item,\n                                            eMappingStatus.Mapped, this.hubCache);\n                                        let newStatus = newLineageTree.createDatalinkLineage(true);\n                                        if (newStatus < newMappingStatus) {\n                                            newMappingStatus = newStatus;\n                                        }\n                                        this.lineageTree.push(newLineageTree);\n                                        // if (inParam.datalinkColumn.name === this.datalinkColumn.name) {\n                                            columnIsMapped = true;\n                                        // }\n                                    }\n                                });\n                            }\n\n                        });\n\n\n                        break;\n                    case eTransformItemType.JoinPair:\n                        // if this column part of a join add it.\n                        if (item.sourceDatalinkColumn && item.sourceDatalinkColumn.key === currentColumn.key) {\n                            let table = previousTransform.joinDatalinkTable;\n                            let column = item.joinDatalinkColumn;\n                            if (table && column) {\n                                let newLineageTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Join,\n                                        this.datalink, column, null, previousTransform, item, eMappingStatus.Joined, this.hubCache);\n                                this.lineageTree.push(newLineageTree);\n                            } else {\n                                return eMappingStatus.Error;\n                            }\n                        }\n\n                        break;\n                    case eTransformItemType.Sort:\n                        // if this column part of a sort, add it.\n                        if (item.sourceDatalinkColumn && item.sourceDatalinkColumn.key === currentColumn.key) {\n                            let newLineageTree = new ColumnUsageNode( eDatalinkObjectType.Transform, eObjectUse.Sort,\n                                this.datalink, currentColumn, null, previousTransform, item, eMappingStatus.Sorted, this.hubCache);\n                            this.lineageTree.push(newLineageTree);\n                        }\n\n                        break;\n                }\n\n            });\n\n            // if the column was not mapped, and the transform passes through columns without mapping, then add it.\n            if (!columnIsMapped && previousTransform.passThroughColumns) {\n                if (this.mappingStatus === eMappingStatus.Mapped) {\n                    newMappingStatus = eMappingStatus.Mapped;\n                } else if (this.objectType === eDatalinkObjectType.TargetTable && this.tableColumn &&\n                    this.isAutoGenerateColumn(this.tableColumn.deltaType)) {\n                    newMappingStatus = eMappingStatus.AutoGenerate;\n                }\n                let newLineageTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.PassThrough,\n                        this.datalink, currentColumn, null, previousTransform, null, this.mappingStatus, this.hubCache);\n                let newStatus = newLineageTree.createDatalinkLineage(true);\n                if (newStatus < newMappingStatus) {\n                    newMappingStatus = newStatus;\n                }\n                this.lineageTree.push(newLineageTree);\n            } else if (!columnIsMapped && previousTransform.joinDatalinkTable) {\n                // if there is a join table, then check against that.\n                let table = previousTransform.joinDatalinkTable;\n                let column = table.dexihDatalinkColumns.find(c => c.isValid && c.name === currentColumn.name);\n                if (column) {\n                    if (this.mappingStatus === eMappingStatus.Mapped) {\n                        newMappingStatus = eMappingStatus.Mapped;\n                    } else if (newMappingStatus === eMappingStatus.NotMapped) {\n                        newMappingStatus = eMappingStatus.PassThroughMap;\n                    }\n                    let newLineageTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Join, this.datalink,\n                        column, null, null, null, newMappingStatus, this.hubCache);\n                    this.lineageTree.push(newLineageTree);\n                }\n            } else if (!columnIsMapped) {\n                if (newMappingStatus !== eMappingStatus.AutoGenerate) {\n                    newMappingStatus = eMappingStatus.NotMapped;\n                }\n            } else {\n                newMappingStatus = eMappingStatus.Mapped;\n            }\n        } else {\n            // if there is no previous transform, then check against the source table.\n            let table = this.datalink.sourceDatalinkTable;\n            let column = table.dexihDatalinkColumns.find(c => c.isValid && c.name === currentColumn.name);\n            if (column) {\n                if (this.mappingStatus === eMappingStatus.Mapped) {\n                    newMappingStatus = eMappingStatus.Mapped;\n                } else if (newMappingStatus === eMappingStatus.NotMapped) {\n                    newMappingStatus = eMappingStatus.PassThroughMap;\n                }\n            } else {\n                if (this.mappingStatus === eMappingStatus.Mapped) {\n                    newMappingStatus = eMappingStatus.MappedToNothing;\n                } else if (!newMappingStatus) {\n                    newMappingStatus = eMappingStatus.PassThroughToNothing;\n                }\n            }\n            let newLineageTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Source, this.datalink,\n                    column, null, null, null, newMappingStatus, this.hubCache);\n            this.lineageTree.push(newLineageTree);\n\n        }\n\n        return newMappingStatus;\n    }\n\n\n    public isAutoGenerateColumn(deltaType: eDeltaType): boolean {\n        let returnValue: boolean;\n        switch (deltaType) {\n            case eDeltaType.AutoIncrement:\n            case eDeltaType.DbAutoIncrement:\n            case eDeltaType.Version:\n            case eDeltaType.ValidFromDate:\n            case eDeltaType.ValidToDate:\n            case eDeltaType.PartitionKey:\n            case eDeltaType.RowKey:\n            case eDeltaType.CreateAuditKey:\n            case eDeltaType.CreateDate:\n            case eDeltaType.FileName:\n            case eDeltaType.IsCurrentField:\n            case eDeltaType.RejectedReason:\n            case eDeltaType.SourceSurrogateKey:\n            case eDeltaType.TimeStamp:\n            case eDeltaType.UpdateAuditKey:\n            case eDeltaType.UpdateDate:\n            case eDeltaType.ValidationStatus: {\n                returnValue = true;\n            }\n            break;\n            default:\n                returnValue = false;\n        }\n        return returnValue;\n    }\n\n}\n\n\n\n","import {NgModule, ErrorHandler} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {FormsModule}   from '@angular/forms';\n\nimport {SharedModule} from './shared/shared.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport {routing} from './app.routing';\n// import {HubService} from './+hub/hub.service';\nimport {AuthService} from './+auth/auth.service';\nimport {LayoutGuard} from './shared/layout/layout.guard';\nimport {HubsService } from './+hubs/hubs.service';\nimport { GlobalErrorHandler } from './global.error.handler';\nimport { LayoutModule } from './shared/layout/layout.module';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AddCsrfHeaderInterceptorService } from './+auth/token.interceptor.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    routing,\n    LayoutModule,\n    SharedModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [\n    {provide: ErrorHandler, useClass: GlobalErrorHandler},\n    // HubService,\n      HubsService,\n      AuthService,\n      LayoutGuard,\n        { provide: HTTP_INTERCEPTORS,\n          useClass: AddCsrfHeaderInterceptorService,\n          multi: true\n        }\n  ],\n  // entryComponents: [AppComponent],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {\n\n}\n","import { Component, OnInit, OnChanges, OnDestroy, Input, AfterViewInit } from '@angular/core';\nimport { Subscription} from 'rxjs';\nimport { AbstractControl, FormGroup, FormArray } from '@angular/forms';\nimport { DexihFormErrorsModule } from '../dexih-form-errors.module';\n\n@Component({\n    selector: 'dexih-invalid-form-icon',\n    templateUrl: './dexih-invalid-form-icon.component.html'\n})\n\nexport class DexihInvalidFormIconComponent implements AfterViewInit  {\n    @Input() control: AbstractControl;\n\n    public pageLoaded = false;\n\n    constructor() { }\n\n\n    // workaround to stop ExpressionChangedAfterItHasBeenCheckedError\n    ngAfterViewInit() {\n        this.pageLoaded = true;\n    }\n\n    isFormValid(): boolean {\n        if (this.pageLoaded) {\n            return this.control.valid;\n        } else {\n            return false;\n        }\n    }\n\n}\n","<span *ngIf=\"!isFormValid\">&nbsp;<i title='There are errors with this control' class=\"fa fa-exclamation-circle text-danger\"></i></span>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { Router } from '@angular/router';\nimport { User } from '../../../../+auth/auth.models';\nimport { Subscription, combineLatest} from 'rxjs';\n\n@Component({\n\n    selector: 'dexih-login-info',\n    templateUrl: './login-info.component.html'\n})\nexport class LoginInfoComponent implements OnInit, OnDestroy {\n    user: User;\n    userSubcription: Subscription;\n\n    constructor(\n        private authService: AuthService,\n        private router: Router\n        ) {\n        this.userSubcription = this.authService.getUserObservable().subscribe(user => this.user = user);\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnDestroy() {\n        if (this.userSubcription) { this.userSubcription.unsubscribe(); }\n    }\n\n    manageUser() {\n        this.router.navigate(['/hubs/manage']);\n    }\n\n    logout() {\n        this.authService.logout().then(result => {\n            if (result === true) {\n                this.login();\n            }\n        });\n    }\n\n    login() {\n        this.authService.redirectUrl = this.router.url;\n        this.router.navigate(['/auth/login']);\n    }\n}\n","<!-- <d-button-dropdown *ngIf=\"user\" \n    iconClass=\"fa fa-lg fa-fw fa-user\" \n    buttonClass=\"nav-button text-success\" \n    [text]=\"user.userName\"\n    [autoCompact]=\"false\"\n    >\n    <a class=\"dropdown-item\" (click)=\"manageUser()\"><i class=\"fa fa-user\"></i> Update Details</a>\n    <a class=\"dropdown-item\" (click)=\"logout()\"><i class=\"fa fa-sign-out\"></i> Logout</a>\n</d-button-dropdown>\n<d-button *ngIf=\"!user\"\n    (click)=\"login()\"\n    iconClass=\"fa fa-lg fa-fw fa-user\" \n    buttonClass=\"nav-button text-danger\" \n>\nLogin\n</d-button> -->\n\n<menu-parent *ngIf=\"user\"  [name]=\"user.userName\" title=\"User Options\" iconClass=\"fa fa-lg fa-fw fa-user\" textClass=\"text-success\">\n    <li class=\"nav-item\">\n        <a class=\"nav-link\" (click)=\"manageUser()\"><i class=\"fa fa-user\"></i> Update Details</a>\n    </li>\n    <li class=\"nav-item\">\n        <a class=\"nav-link\" (click)=\"logout()\"><i class=\"fa fa-sign-out\"></i> Logout</a>\n    </li>\n</menu-parent>\n<d-button *ngIf=\"!user\"\n    (click)=\"login()\"\n    iconClass=\"fa fa-lg fa-fw fa-user\" \n    buttonClass=\"nav-button text-danger\" \n>\nLogin\n</d-button>\n","import { FormGroup, FormBuilder } from '@angular/forms';\nimport { DexihMessageComponent } from '../dexihMessage';\nimport { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { DexihHubAuth, CancelToken } from '../../../+auth/auth.models';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { eDownloadFormat, SharedData, eSharedObjectType, eDataObjectType, DexihTag } from '../../shared.models';\n\n@Component({\n    selector: 'sharedData',\n    templateUrl: './sharedData.component.html',\n})\nexport class SharedDataComponent implements OnInit, OnDestroy {\n    @ViewChild('DexihMessage', { static: true }) public dexihMessage: DexihMessageComponent;\n\n    public _subscription: Subscription;\n    public _searchSubscription: Subscription;\n    public searchForm: FormGroup;\n    private cancelToken = new CancelToken();\n\n    eDownloadFormat = eDownloadFormat;\n\n    embedLink: string;\n    embedFrame: string;\n\n    hubs: DexihHubAuth[];\n    hubKeys: number[];\n    tags: DexihTag[];\n\n    columns = [\n        { name: 'logicalName', title: 'Details', header: 'hubName', footer: 'description', format: 'Md', tags: 'tags' },\n        { name: 'objectType', title: 'Type', format: 'Enum', enum: eDataObjectType},\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    public dataIndex: SharedData[] = null;\n\n    constructor(private authService: AuthService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private fb: FormBuilder) { }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.params,\n                this.authService.getHubsObservable()\n            ).subscribe(result => {\n                let params = result[0];\n                this.hubs = result[1];\n\n                if (this.hubs) {\n                    this.hubKeys = this.hubs.map(c => c.hubKey);\n                }\n\n                this.searchForm = this.fb.group({\n                    'searchString': ['', [\n                    ]],\n                    'hubKeys': [[], [\n                    ]],\n                });\n\n                this.updateSearch();\n\n                if (this._searchSubscription) { this._searchSubscription.unsubscribe(); }\n                this._searchSubscription = this.searchForm.valueChanges\n                    .pipe(debounceTime(500))\n                    .subscribe(() => {\n                        this.updateSearch();\n                    });\n            });\n        } catch (e) {\n            this.dexihMessage.addErrorMessage(e.message);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    updateSearch() {\n        let hubKeys = <number[]>this.searchForm.value.hubKeys;\n        this.authService.getSharedDataIndex(this.searchForm.value.searchString, hubKeys, 50, true).then(result => {\n\n            this.dataIndex = result.filter(c => c.objectType !== eDataObjectType.DashboardItem);\n\n            this.tags = [];\n            this.dataIndex.forEach(item => {\n                if (item.tags && item.tags.length > 0) {\n                    item.tags.forEach(tag => {\n                        if (this.tags.findIndex(c => c.name === tag.name) < 0) {\n                            this.tags.push(tag);\n                        }\n                    });\n                }\n            });\n\n        }).catch(reason => this.dexihMessage.addMessage(reason));\n    }\n\n    previewData(item: SharedData) {\n        if (item.objectType === eDataObjectType.Dashboard) {\n            this.router.navigate(['previewDashboard', item.hubKey, item.objectKey], { relativeTo: this.route.parent });\n        } else {\n            this.router.navigate(['preview', item.hubKey, item.objectType, item.objectKey], { relativeTo: this.route.parent });\n        }\n    }\n\n    embed(item: SharedData) {\n        let embed: string;\n        if (item.objectType === eDataObjectType.Dashboard) {\n            this.embedLink =\n            `${window.location.origin}/public/index/previewDashboard/${item.hubKey}/${item.objectType}/${item.objectKey}?embed=true`;\n        } else {\n            this.embedLink =\n            `${window.location.origin}/public/index/preview/${item.hubKey}/${item.objectType}/${item.objectKey}?embed=true`;\n        }\n\n        this.embedFrame = `<iframe width=\"560\" height=\"315\" src=\"${this.embedLink}\" frameborder=\"0\" ></iframe>`\n\n        document.body.scrollTop = 0; // For Safari\n        document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\n    }\n\n    downloadData(sharedItems: Array<SharedData>, zipFiles: boolean, downloadFormat: eDownloadFormat) {\n        this.authService.downloadData(sharedItems, zipFiles, downloadFormat, this.cancelToken).then(() => {\n            this.dexihMessage.addSuccessMessage('The download task has started.');\n        }).catch(reason => {\n            this.dexihMessage.addMessage(reason);\n        });\n    }\n\n    edit(item: SharedData) {\n        switch (item.objectType) {\n            case eDataObjectType.Datalink:\n                this.router.navigate(['hub', item.hubKey, 'datalinks', 'datalink-edit', 'edit', item.objectKey]);\n                break;\n            case eDataObjectType.Table:\n                this.router.navigate(['hub', item.hubKey, 'tables', 'table-edit', item.objectKey]);\n                break;\n            case eDataObjectType.View:\n                this.router.navigate(['hub', item.hubKey, 'views', 'view-edit', item.objectKey]);\n                break;\n            case eDataObjectType.Dashboard:\n                this.router.navigate(['hub', item.hubKey, 'dashboards', 'dashboard-edit', item.objectKey]);\n                break;\n            }\n    }\n}\n\n","<div class=\"container\">\n    <div class=\"m-1\">\n        <dexih-message #DexihMessage></dexih-message>\n    </div>\n\n    <d-widget title=\"Shared Data\" iconClass=\"fa fa-lg fa-fw fa-life-saver\">\n        <d-widget-section *ngIf=\"embedLink\" title=\"Embedded html\" [showExpandButton]=\"false\">\n            <ng-template #sectionHeader>\n                <button type=\"button\" class=\"close ml-2\" (click)=\"embedLink = null\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </ng-template>\n            <section>\n                <form-textarea label=\"Link\" [showCopy]=\"true\" [showPreview]=\"false\" [hideToggle]=\"true\" [disabled]=\"true\"\n                    rows=\"1\" [(ngModel)]=\"embedLink\">\n                    <a [href]=\"embedLink\" target=\"_blank\" class=\"ml-1\">(Open)</a>\n                </form-textarea>\n            </section>\n            <section>\n                <form-textarea label=\"Embedded IFrame\" [showCopy]=\"true\" [showPreview]=\"false\" [hideToggle]=\"true\"\n                    [disabled]=\"true\" rows=\"1\" [(ngModel)]=\"embedFrame\"></form-textarea>\n            </section>\n        </d-widget-section>\n\n        <d-table \n            [enableMultiSelect]=\"true\" \n            [enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n            [enableFilter]=\"false\" \n            [columns]=\"columns\" \n            [data]=\"dataIndex\"\n            (rowClick)=\"previewData($event)\" \n            [tags]=\"tags\">\n\n            <ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n                <d-button-preview [routerLink]=\"['preview', item.hubKey, item.objectType, item.objectKey]\">\n                </d-button-preview>\n                <d-button-edit *ngIf=\"hubKeys?.indexOf(item.hubKey)>=0\" class=\"ml-1\" \n                    (click)=\"edit(item)\"></d-button-edit>\n                <d-button class=\"ml-1\" iconClass=\"fa fa-code\" title=\"Get embedded version\" (click)=\"embed(item)\" text=\"Embedded\"></d-button>\n\n            </ng-template>\n\n            <ng-template #filter select=\"filter\" let-items=\"items\">\n                <form [formGroup]=\"searchForm\" class=\"row\">\n                    <div *ngIf=\"hubs\" class=\"col-xs-12 col-sm mr-1\">\n                        <form-tags-dropdown labelLeft=\"Hubs\" formControlName=\"hubKeys\" [items]=\"hubs\" itemKey=\"hubKey\"\n                            itemName=\"name\" [enableAddAll]=\"true\">\n                        </form-tags-dropdown>\n                    </div>\n                    <div class=\"col-xs-12 col-sm mr-1 input-expand\">\n                        <form-input formControlName=\"searchString\" placeholder=\"Search...\" iconClass=\"fa fa-search\">\n                        </form-input>\n                    </div>\n                </form>\n            </ng-template>\n\n            <ng-template #actions let-items=\"items\">\n            </ng-template>\n\n            <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n                <download-button class=\"ml-1\" (download)=\"downloadData(items, true, $event)\"></download-button>\n            </ng-template>\n\n            <!-- <ng-template #rowAction let-item=\"item\">\n                <div *ngFor=\"let column of item.inputColumns; let i = index\" class=\"input-group\">\n                    <div class=\"input-group-prepend\">\n                        <div class=\"input-group-text\">\n                            {{column.logicalName}}\n                        </div>\n                    </div>\n                    <form-input name=\"column{{i}}\" class=\"form-control p-0\" [placeholder]=\"column.logicalName\"\n                        [(ngModel)]=\"column.defaultValue\" [border]=\"false\"></form-input>\n                </div>\n            </ng-template> -->\n\n        </d-table>\n    </d-widget>\n</div>","export * from './dexih-message.component';\nexport * from './dexih-message.module';\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihDatalink, DexihDatalinkTest } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'datalinkTest-view',\n    templateUrl: './datalinkTest-view.component.html'\n})\n\nexport class DatalinkTestViewComponent implements OnInit {\n    @Input() datalinkTest: DexihDatalinkTest;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div [routerLink]=\"['datalinkTest-edit', datalinkTest.key]\" queryParamsHandling=\"merge\">\n    <h5>{{datalinkTest.name}}</h5>\n    <div *ngIf=\"datalinkTest.description\">\n        <markdown [data]=\"datalinkTest.description\"></markdown>\n    </div>\n    <div class=\"note\">Updated: {{datalinkTest.updateDate | calendar }} </div>\n    <datalink-status [datalinkTestKey]=\"datalinkTest.key\"></datalink-status>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription, combineLatest} from 'rxjs';\n\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubCache } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { DexihView, eDataObjectType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'actions-view-button',\n    templateUrl: './actions-view-button.component.html'\n})\n\nexport class ActionsViewButtonComponent implements OnInit, OnDestroy {\n    @Input() public views: DexihView[];\n    @Input() public pullRight = false;\n\n    private _hubCacheSubscription: Subscription;\n    public hubCache: HubCache;\n\n        tables = [];\n\n        constructor(\n            private authService: AuthService,\n            private hubService: HubService,\n                    private router: Router,\n                    private route: ActivatedRoute) { }\n\n        ngOnInit() {\n            this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n                this.hubCache = cache;\n            });\n\n        }\n\n        ngOnDestroy() {\n            if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n         }\n\n         delete() {\n            this.hubService.deleteViews(this.views);\n        }\n\n        shareItems(isShared: boolean) {\n            this.hubService.shareItems(this.views.map(c => c.key), eDataObjectType.View, isShared);\n        }\n\n        export() {\n            const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n            this.views.forEach(view => { this.hubCache.cacheAddView(view.key, hub); });\n\n            let filename = this.views.length === 1 ? 'View - ' + this.views[0].name + '.json' : 'views.json';\n\n            this.hubService.exportHub(hub, filename);\n        }\n\n}\n","<ng-template [ngIf]=\"views\">\n    <d-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-bar-chart\" [text]=\"views.length > 1 ? 'Views' : 'View'\" [pullRight]=\"pullRight\">\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Metadata</li>\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" [routerLink]=\"['view-new']\" title=\"Create a new view.\"><i class=\"fa fa-file-o\"></i> New</a></li>\n        <ng-template [ngIf]=\"views.length > 0\">\n            <li *ngIf=\"views.length == 1\">\n                <a class=\"dropdown-item\" [routerLink]=\"['view-edit', views[0].key]\" queryParamsHandling=\"merge\"><i class=\"fa fa-edit\"></i> Edit</a>\n            </li>\n\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"shareItems(true)\" title=\"Select the selected items as shared.\"><i class=\"fa fa-group\"></i> Share</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"shareItems(false)\" title=\"Select the selected items as private.\"><i class=\"fa fa-user-secret\"></i> Private</a></li>\n\n            <li><a class=\"dropdown-item\" (click)=\"export()\" title=\"Export the metadata for the selected apis to a local file.\"><i class=\"fa fa-save\"></i> Save Locally</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"delete()\" title=\"Delete the metadata for the selected apis.\"><span class=\"text-danger\"><i class=\"fa fa-trash-o text-danger\"></i> Delete</span></a></li>\n\n        </ng-template>\n    </d-button-dropdown>\n</ng-template>","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubService } from '../../../../+hub/hub.service';\nimport { DexihHubAuth, User, eHubAccess } from '../../../../+auth/auth.models';\nimport { Observable, Subscription} from 'rxjs';\nimport { eCacheStatus } from '../../../../+hub/hub.models';\nimport { MenuParentComponent } from '../menu';\n\n@Component({\n    selector: 'dexih-hubs',\n    templateUrl: './hubs.component.html'\n})\nexport class HubsComponent implements OnInit, OnDestroy {\n    @ViewChild('menu', { static: true }) menu: MenuParentComponent;\n\n    hubs: Observable<Array<DexihHubAuth>>;\n    hubCacheStatusSubscription: Subscription;\n    hubStatusMessage: string;\n    user: User;\n\n    eHubAccess = eHubAccess;\n\n    textClass = '';\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private router: Router) {\n    }\n\n    ngOnInit() {\n        this.hubs = this.authService.getHubsObservable();\n        this.authService.getUserObservable().subscribe(u => {\n            this.user = u;\n        });\n\n        this.hubStatusMessage = 'No Hub Selected';\n\n        this.hubCacheStatusSubscription = this.hubService.getHubCacheObservable().subscribe(hubCache => {\n            switch (hubCache.status) {\n                case eCacheStatus.Loading:\n                    this.textClass = 'text-info';\n                    this.hubStatusMessage = hubCache.hub.name + '(Loading...)';\n                    break;\n                case eCacheStatus.Loaded:\n                    this.textClass = 'text-success';\n                    this.hubStatusMessage = hubCache.hub.name;\n                    break;\n                case eCacheStatus.NotLoaded:\n                    this.textClass = 'text-danger';\n                    this.hubStatusMessage = 'Cache Not loaded';\n                    break;\n                case eCacheStatus.NoHub:\n                    this.textClass = 'text-danger';\n                    this.hubStatusMessage = 'No Hub Selected';\n                    break;\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.hubCacheStatusSubscription.unsubscribe();\n    }\n\n\n    openHub(hub: DexihHubAuth) {\n        this.menu.collapse();\n        this.router.navigate(['/hub/' + hub.hubKey + '/summary']);\n    }\n\n\n    manageHubs() {\n        this.router.navigate(['/hubs/hubs-view']);\n    }\n}\n","<menu-parent #menu [name]=\"hubStatusMessage\" title=\"Available Hubs\" iconClass=\"fa fa-lg fa-fw fa-life-saver\" [textClass]=\"textClass\">\n    <li *ngFor=\"let hub of hubs | async\" class=\"nav-item\" [title]=\"hub.name\" >\n        <a class=\"nav-link\" (click)=\"openHub(hub)\">\n            <i *ngIf=\"user.isAdmin || hub.sharedAccess == eHubAccess.User\" class=\"fa fa-fw fa-user-secret\" title=\"Full Access\"></i>\n            <i *ngIf=\"!user.isAdmin  && hub.sharedAccess == eHubAccess.ReadOnly\" class=\"fa fa-fw fa-book\"  title=\"Read only Access\"></i>\n            <i *ngIf=\"!user.isAdmin  && hub.sharedAccess == eHubAccess.Public\" class=\"fa fa-fw fa-users\"  title=\"Public Hub\"></i>\n            {{hub.name}}</a>\n    </li>\n    <div class=\"dropdown-divider\"></div>\n    <li class=\"nav-item\" >\n        <a class=\"nav-link\" (click)=\"manageHubs()\"><i class=\"fa fa-fw fa-power-off\"></i> Manage Hubs</a>\n    </li>\n</menu-parent>","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable, combineLatest} from 'rxjs';\n\nexport interface CanComponentDeactivate {\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\n}\n\n@Injectable()\nexport class ItemEditGuard implements CanDeactivate<CanComponentDeactivate> {\n\n  canDeactivate(component: CanComponentDeactivate) {\n    return component && component.canDeactivate ? component.canDeactivate() : true;\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihDatalink, eDatalinkType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'datalink-view',\n    templateUrl: './datalink-view.component.html'\n})\n\nexport class DatalinkViewComponent implements OnInit {\n    @Input() datalink: DexihDatalink;\n\n    eDatalinkType = eDatalinkType;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div [routerLink]=\"['datalink-edit', 'edit', datalink.key]\" queryParamsHandling=\"merge\">\n    <h5>{{datalink.name}}</h5>\n    <div *ngIf=\"datalink.description\">\n        <markdown [data]=\"datalink.description\"></markdown>\n    </div>\n    <div class=\"note\">{{eDatalinkType[datalink.datalinkType]}} / Updated: {{datalink.updateDate | calendar }} </div>\n    <datalink-status [datalinkKey]=\"datalink.key\"></datalink-status>\n</div>","import {Routes, RouterModule} from '@angular/router';\nimport {MainLayoutComponent} from './shared/layout/app-layouts/main-layout.component';\nimport {AuthLayoutComponent} from './shared/layout/app-layouts/auth-layout.component';\nimport { LayoutGuard } from './shared/layout/layout.guard';\n\nexport const routes: Routes = [\n    { path: '', redirectTo: 'hubs', pathMatch: 'full' },\n    { path: 'admin',  canActivate: [LayoutGuard],\n        component: MainLayoutComponent, loadChildren:  () => import('./+admin/admin.module').then(m => m.AdminModule), data: { pageTitle: '' } },\n    { path: 'hubs',  canActivate: [LayoutGuard],\n        component: MainLayoutComponent, loadChildren:  () => import('./+hubs/hubs.module').then(m => m.HubsModule), data: { pageTitle: '' } },\n    { path: 'hub/:hubKey', canActivate: [LayoutGuard],\n        component: MainLayoutComponent, loadChildren: () => import('./+hub/hub.module').then(m => m.HubModule), data: { pageTitle: 'Hub' } },\n    { path: 'auth', component: AuthLayoutComponent, loadChildren: () => import('./+auth/auth.module').then(m => m.AuthModule) },\n    { path: 'public', loadChildren:  () => import('./+public/public.module').then(m => m.PublicModule), data: { pageTitle: '' } },\n    { path: 'terms', redirectTo: '/auth/terms', pathMatch: 'full'},\n    { path: 'privacy', redirectTo: '/help?path=policies%2Fprivacy.md', pathMatch: 'full'},\n    { path: 'unsubscribe', redirectTo: '/hubs/index/manage', pathMatch: 'full' },\n\n    { path: '**', redirectTo: 'hubs' }\n];\n\nexport const routing = RouterModule.forRoot(routes);\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihDashboard } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'dashboard-view',\n    templateUrl: './dashboard-view.component.html'\n})\n\nexport class DashboardViewComponent implements OnInit {\n    @Input() dashboard: DexihDashboard;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div [routerLink]=\"['dashboard-edit', dashboard.key]\" queryParamsHandling=\"merge\">\n    <h5>{{dashboard.name}}</h5>\n    <div *ngIf=\"dashboard.description\">\n        <markdown [data]=\"dashboard.description\"></markdown>\n    </div>\n    <div class=\"note\">Updated: {{dashboard.updateDate | calendar }} </div>\n</div>","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { HubService } from '../../hub.service';\nimport { DexihRemoteAgentHub } from '../../../shared/shared.models';\n\n\n@Component({\n    selector: 'remoteAgent-view',\n    templateUrl: './remoteAgent-view.component.html'\n})\n\nexport class RemoteAgentViewComponent implements OnInit, OnDestroy {\n    @Input() remoteAgent: DexihRemoteAgentHub;\n\n    _subscription: Subscription;\n\n    public name: string;\n    public isAuthorized: boolean;\n    public isEncrypted: boolean;\n    public lastLoginDateTime: Date;\n    public isConnected: boolean;\n    public isSelected: boolean;\n\n    constructor(private hubService: HubService, private authService: AuthService) { }\n\n    ngOnInit() {\n        this._subscription = combineLatest(\n            this.authService.getRemoteAgentsObservable(),\n            this.hubService.getRemoteAgentObservable(),\n        ).subscribe(result => {\n            let remoteAgents = result[0];\n            let selectedAgent = result[1];\n\n            if (!remoteAgents) { return; }\n\n            let remoteAgent = remoteAgents.find(c => c.remoteAgentKey === this.remoteAgent.remoteAgentKey);\n            let activeAgent = remoteAgent && remoteAgent['activeAgents'] && remoteAgent['activeAgents'].length > 0\n                ? remoteAgent['activeAgents'][0] : null;\n\n            this.isAuthorized = this.remoteAgent.isAuthorized;\n            this.isConnected = activeAgent ? true : false;\n\n            if (remoteAgent) {\n                if (selectedAgent && remoteAgent.remoteAgentKey === selectedAgent.remoteAgentKey) {\n                    this.isSelected = true;\n                } else {\n                    this.isSelected = false;\n                }\n                this.name = activeAgent ? activeAgent.name : ( remoteAgent ? remoteAgent.name : 'Unknown');\n                this.isEncrypted = activeAgent ? activeAgent.isEncrypted : false;\n                this.lastLoginDateTime = remoteAgent ? remoteAgent.lastLoginDateTime : null;\n            } else {\n                this.name = 'Unknown';\n                this.isEncrypted = false;\n                this.lastLoginDateTime = null;\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n}\n","<div [routerLink]=\"['agent-edit', remoteAgent.remoteAgentKey, remoteAgent.remoteAgentHubKey]\" queryParamsHandling=\"merge\">\n    <h5>\n        <i class=\"fa fa-circle mr-1\" [ngClass]=\"{'text-success': isConnected, 'text-danger': !isConnected}\"></i>\n        <encryption-status-icon class=\"mr-1\" [isEncrypted]=\"isEncrypted\"></encryption-status-icon>\n        {{name}} {{isSelected ? '(selected)' : ''}}\n    </h5>\n    <div class=\"note\">{{isAuthorized ? 'Authorized' : 'Not Authorized'}} / Last Login: {{isConnected ? 'Current' : ( lastLoginDateTime | calendar ) }} </div>\n</div>","import { Component, Input, OnDestroy, OnInit, OnChanges } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { HubCache } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { DexihDatalinkTest, DexihDatalink } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n    selector: 'actions-datalinkTest-button',\n    templateUrl: './actions-datalinkTest-button.component.html'\n})\n\nexport class ActionsDatalinkTestButtonComponent implements OnInit, OnDestroy, OnChanges {\n    @Input() public datalinkTests: Array<DexihDatalinkTest>;\n    @Input() public showEdit = true;\n    @Input() public pullRight = false;\n\n    public hubCache: HubCache;\n\n    private cancelToken: CancelToken = new CancelToken();\n\n    relatedDatalinks = [];\n\n    private _hubCacheSubscription: Subscription;\n\n    constructor(\n        private hubService: HubService,\n        private router: Router,\n        private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n            this.hubCache = cache;\n        });\n    }\n\n    ngOnChanges() {\n        if (this.datalinkTests && this.datalinkTests.length === 1 && this.datalinkTests[0].dexihDatalinkTestSteps) {\n            let datalinkKeys = this.datalinkTests[0].dexihDatalinkTestSteps.map(c => c.datalinkKey);\n            this.hubCache.hub.dexihDatalinks.forEach(datalink => {\n                if (datalinkKeys.findIndex(c => c === datalink.key) >= 0) {\n                    this.relatedDatalinks.push({\n                        datalinkKey: datalink.key,\n                        name: `${datalink.name} (datalink source)`\n                    });\n                }\n            });\n        } else {\n            this.relatedDatalinks = [];\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    navigateToDatalink(datalink: DexihDatalink) {\n        this.router.navigate(['datalinks', 'datalink-edit', 'edit', datalink.key], { relativeTo: this.route.parent.parent });\n    }\n\n    delete() {\n        this.hubService.deleteDatalinkTests(this.datalinkTests);\n    }\n\n    run() {\n        this.hubService.runDatalinkTests(this.datalinkTests.map(c => c.key), this.cancelToken).catch();\n    }\n\n    snapshot() {\n        this.hubService.runDatalinkTestSnapshot(this.datalinkTests, this.cancelToken).catch();\n    }\n\n    cancel() {\n        this.hubService.cancelDatalinks(this.datalinkTests.map(c => c.key), this.cancelToken).catch();\n    }\n\n    export() {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        this.datalinkTests.forEach(datalinkTest => { this.hubCache.cacheAddDatalink(datalinkTest.key, hub); });\n\n        let filename = this.datalinkTests.length === 1 ? 'DatalinkTest - ' + this.datalinkTests[0].name + '.json' : 'datalinkTests.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n}\n","<ng-template [ngIf]=\"datalinkTests\">\n    <d-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-table\" [text]=\"datalinkTests.length > 1 ? 'Datalink Test' : 'Datalink Test'\" [pullRight]=\"pullRight\">\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Metadata</li>\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" [routerLink]=\"['datalinkTest-new']\" title=\"Create a new datalink test.\"><i class=\"fa fa-file-o\"></i> New</a></li>\n        <ng-template [ngIf]=\"datalinkTests.length > 0\">\n            <li *ngIf=\"showEdit && datalinkTests.length == 1\">\n                <a class=\"dropdown-item\" [routerLink]=\"['datalinkTest-edit', datalinkTests[0].key]\" queryParamsHandling=\"merge\"><i class=\"fa fa-edit\"></i> Edit</a>\n            </li>\n            <li *ngIf=\"hubCache.canWrite\">\n                <a class=\"dropdown-item\" [routerLink]=\"['datalinkTest-edit', 'copy', datalinkTests[0].key]\" queryParamsHandling=\"merge\" title=\"Copy the datalink test.\">\n                        <i class=\"fa fa-copy\"></i> Copy\n                </a>\n            </li>\n\n            <li><a class=\"dropdown-item\" (click)=\"export()\" title=\"Export the metadata for the selected datalink tests to a local file.\"><i class=\"fa fa-save\"></i> Save Locally</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"delete()\" title=\"Delete the metadata for the selected datalink tests.\"><span class=\"text-danger\"><i class=\"fa fa-trash-o text-danger\"></i> Delete</span></a></li>\n    \n            <li class=\"list-group-item list-group-item-heading list-group-item-info\">Operations</li>\n            <li><a class=\"dropdown-item\" *ngIf=\"datalinkTests.length == 1\" [routerLink]=\"['results']\" [queryParams]=\"{datalinkTestKeys: [datalinkTests[0].key]}\" title=\"Show the execution history \"><i class=\"fa fa-history\"></i> Test History</a></li>\n\n            <ng-template [ngIf]=\"hubCache.canWrite\">\n                <li><a class=\"dropdown-item\" (click)=\"cancel()\" title=\"Cancel selected running datalinks.\"><span class=\"text-danger\"><i class=\"fa fa-ban\"></i> Cancel Tests</span> </a></li>\n                <li><a class=\"dropdown-item\"  (click)=\"snapshot()\" title=\"Snapshot the selected datalinks now.\"><i class=\"fa fa-bolt\"></i> Run Snapshot</a></li>\n                <li><a class=\"dropdown-item\"  (click)=\"run()\" title=\"Run selected datalinks now.\"><i class=\"fa fa-bolt\"></i> Run Test</a></li>\n            </ng-template>\n\n            <ng-template [ngIf]=\"datalinkTests.length == 1\">\n                <li class=\"list-group-item list-group-item-heading list-group-item-info\">Related</li>\n                <li *ngFor=\"let datalink of relatedDatalinks\">\n                    <a class=\"dropdown-item\" (click)=\"navigateToDatalink(datalink)\">(Datalink) {{datalink.name}}</a>\n                </li>\n            </ng-template>\n        </ng-template>\n    </d-button-dropdown>\n</ng-template>","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import { Injectable, OnDestroy, EventEmitter } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators, AsyncValidatorFn, ValidationErrors } from '@angular/forms';\nimport { BehaviorSubject, combineLatest, merge, Observable, pipe, Subscription} from 'rxjs';\n\nimport { AuthService } from '../+auth/auth.service';\nimport { eLogLevel, LogFactory } from '../../logging';\nimport { InputOutputColumns } from './hub.lineage.models';\nimport {\n  HubCache,\n  eMappingStatus,\n  sharedObjectProperties,\n  SharedObjectProperty,\n  DexihInputParameter,\n  DataCache,\n} from './hub.models';\nimport { HubService } from './hub.service';\nimport { eImportAction, Import, DexihConnection, DexihTable, DexihTableColumn, eTypeCode,\n   DexihFileFormat, DexihView, DexihDashboard, DexihDashboardItem, DexihApi, DexihColumnValidation,\n   DexihCustomFunction, DexihCustomFunctionParameter, DexihHubVariable, DexihDatalinkTest,\n   DexihDatalinkTestStep, DexihDatalinkTestTable, DexihTrigger, DexihDatalinkStep, DexihDatalinkDependency,\n   DexihDatalinkStepColumn, DexihDatajob, DexihRemoteAgentHub, DexihDatalink, DexihDatalinkColumn,\n   DexihDatalinkTransform, DexihDatalinkTransformItem, DexihFunctionParameter, DexihFunctionArrayParameter,\n   DexihDatalinkProfile, DexihDatalinkTarget, DexihDatalinkTable,\n   eSourceType, eSharedObjectType, DexihListOfValues, InputParameterBase,\n   eDataObjectType, ListOfValuesItem, eTransformItemType, DexihTag, DexihTableIndex, DexihTableIndexColumn, ChartConfig, SelectQuery, AnimateConfig } from '../shared/shared.models';\nimport { debounceTime, delay, first } from 'rxjs/operators';\n\n@Injectable()\nexport class HubFormsService implements OnDestroy {\n  private hubCache: HubCache;\n\n  private _hubCacheSubscription: Subscription;\n  private _hubCacheChangeSubscription: Subscription;\n  private _valueChangesSubscription: Subscription;\n\n  private _connectionChangesSubscription1: Subscription;\n  private _connectionChangesSubscription2: Subscription;\n  private _connectionChangesSubscription3: Subscription;\n  private _tableChangesSubscription1: Subscription;\n  private _tableChangesSubscription2: Subscription;\n  private _tableColumnChangesSubscription1: Subscription;\n  private _tableColumnChangesSubscription2: Subscription;\n  private _tableColumnChangesSubscription3: Subscription;\n  private _datalinkChangesSubscription1: Subscription;\n  private _datalinkChangesSubscription2: Subscription;\n  private _datalinkChangesSubscription3: Subscription;\n  private _datalinkTestChangesSubscription: Subscription;\n  private _genericParameterSubscription: Subscription;\n  private _datalinkTargetChanges: Subscription[] = [];\n  private _parameterChanges: Subscription[] = [];\n\n  public currentForm: FormGroup;\n  private _currentFormObservable = new BehaviorSubject<FormGroup>(null);\n  public formErrors: any = {};\n  public hasChanged = false;\n  public formSaving = false;\n  public showAllErrors = false;\n  public IgnoreFormChange = false;\n  private ignoreHubCacheChange = false; // used to avoid recursive loop in the hubCacheChange subscription.\n  private formChangeCount = 0;\n\n  private updateDate: Date;\n\n  private saveMethod: string;\n  private property: SharedObjectProperty;\n  private formGroupFunc: (item) => void\n  private valueMethod: string;\n\n  private logger = new LogFactory('hub.forms.service');\n\n  validationMessages = {\n    'required': 'A value is required.',\n    'duplicateName': 'The value is already being used.',\n    'dataType': 'The data types are inconsistent.',\n    'invalidClass': 'The function method could not be found'\n  };\n\n  validationFieldMessages = {\n\n  };\n\n  constructor(\n    private fb: FormBuilder,\n    private hubService: HubService,\n    private authService: AuthService,\n\n  ) {\n    this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(hubCache => {\n      this.hubCache = hubCache\n    });\n  }\n\n  ngOnDestroy() {\n    this.clearFormSubscriptions();\n\n    this.currentForm = null;\n    this.updateDate = null;\n    this.formErrors = {};\n    this.hasChanged = false;\n    this.formSaving = false;\n    this.showAllErrors = false;\n    this.IgnoreFormChange = false;\n    // this.ignoreHubCacheChange = false; // used to avoid recursive loop in the hubCacheChange subscription.\n    this.formChangeCount = 0;\n  }\n\n  clearFormSubscriptions() {\n    this.logger.LogC(() => `clearFormSubscriptions started`, eLogLevel.Trace);\n    if (this._valueChangesSubscription) { this._valueChangesSubscription.unsubscribe(); }\n    // if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n    if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n    if (this._connectionChangesSubscription1) { this._connectionChangesSubscription1.unsubscribe(); }\n    if (this._connectionChangesSubscription2) { this._connectionChangesSubscription2.unsubscribe(); }\n    if (this._connectionChangesSubscription3) { this._connectionChangesSubscription3.unsubscribe(); }\n    if (this._tableChangesSubscription1) { this._tableChangesSubscription1.unsubscribe(); }\n    if (this._tableChangesSubscription2) { this._tableChangesSubscription2.unsubscribe(); }\n    if (this._tableColumnChangesSubscription1) { this._tableColumnChangesSubscription1.unsubscribe(); }\n    if (this._tableColumnChangesSubscription2) { this._tableColumnChangesSubscription2.unsubscribe(); }\n    if (this._tableColumnChangesSubscription3) { this._tableColumnChangesSubscription3.unsubscribe(); }\n    if (this._datalinkChangesSubscription1) { this._datalinkChangesSubscription1.unsubscribe(); }\n    if (this._datalinkChangesSubscription2) { this._datalinkChangesSubscription2.unsubscribe(); }\n    if (this._datalinkChangesSubscription3) { this._datalinkChangesSubscription3.unsubscribe(); }\n    if (this._datalinkTestChangesSubscription) { this._datalinkTestChangesSubscription.unsubscribe(); }\n    if (this._genericParameterSubscription) { this._genericParameterSubscription.unsubscribe(); }\n    this._datalinkTargetChanges.forEach(c => c.unsubscribe());\n    this._parameterChanges.forEach(c => c.unsubscribe());\n  }\n\n  private addMissing(item: any, form: FormGroup, itemTemplate: any, excludeKeys: string[] = []) {\n    if (!item) { return; }\n\n    let keys = Object.keys(itemTemplate);\n    let existingKeys = Object.keys(form.controls);\n    keys.forEach(key => {\n      if ((excludeKeys.findIndex(c => c === key) === -1)\n        && existingKeys.findIndex(c => c === key) === -1) {\n        let control = new FormControl(key);\n        let value = item[key];\n        if (typeof value === 'undefined') {\n          value = null;\n        }\n        control.setValue(value);\n        form.addControl(key, control);\n      }\n    });\n\n    this.updateDate = item['updateDate'];  \n  }\n\n  public startForm(form: FormGroup) {\n    this.logger.LogC(() => `startForm started`, eLogLevel.Trace);\n\n    if (form) {\n      if (this._valueChangesSubscription) { this._valueChangesSubscription.unsubscribe(); }\n      this._valueChangesSubscription = form.valueChanges.subscribe(data => {\n        this.onValueChanged()\n      });\n\n      this.onValueChanged(); // (re)set validation messages now\n    }\n\n    this.currentForm = form;\n    this._currentFormObservable.next(form);\n\n    this.hasChanged = false;\n\n    this.logger.LogC(() => `startForm finished`, eLogLevel.Trace);\n  }\n\n  public getCurrentFormObservable(): Observable<FormGroup> {\n    return this._currentFormObservable.asObservable();\n  }\n\n  // re-create any error messages whenever the form changes.\n  private onValueChanged() {\n    if (this.IgnoreFormChange === false) {\n\n      this.logger.LogC(() => `onValueChanged started.  Counter = ${this.formChangeCount++}`, eLogLevel.Trace);\n\n      if (!this.currentForm || !this.currentForm.value) { return; }\n      const form = this.currentForm;\n\n      this.hasChanged = true;\n      this.formErrors = this.getFormErrorMessages(form, this.showAllErrors);\n\n      this.logger.LogC(() => `onValueChanged completed`, eLogLevel.Trace);\n    }\n  }\n\n  public markAsChanged() {\n    if (!this.currentForm || !this.currentForm.value) { return; }\n\n    this.hasChanged = true;\n    this.currentForm.markAsDirty();\n  }\n\n  public showErrors() {\n    this.showAllErrors = true;\n    this.onValueChanged();\n  }\n\n  // returns an object containing any error message for controls contained within the specified form.\n  public getFormErrorMessages(form: FormGroup, showAllErrors: boolean): {} {\n    let formErrors = {};\n\n    if (!form.controls) { return ''; }\n\n    for (const field of Object.keys(form.controls)) {\n      // clear previous error message (if any)\n      formErrors[field] = '';\n      const control = form.get(field);\n\n      // if the control is dirty or flag is set to show all errors.\n      if (control && (control.dirty || showAllErrors)) {\n        if (!control.valid) {\n          if (control instanceof FormArray) {\n\n          } else {\n            const messages = this.validationFieldMessages[field];\n            if (control && control.errors) {\n              for (const key of Object.keys(control.errors)) {\n                if (messages && messages[key]) {\n                  formErrors[field] += messages[key] + ' ';\n                } else if (this.validationMessages[key]) {\n                  formErrors[field] += this.validationMessages[key] + ' ';\n                } else {\n                  let message = this.createErrorMessage(key, control);\n                  formErrors[field] += message + ' ';\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return formErrors;\n  }\n\n  public getErrorMessage(control: AbstractControl): string {\n    if (control && control.errors) {\n      let errorMessage = '';\n\n      for (const key of Object.keys(control.errors)) {\n        if (this.validationMessages[key]) {\n          errorMessage += this.validationMessages[key] + ' ';\n        } else {\n          errorMessage = this.createErrorMessage(key, control);\n        }\n      }\n      return errorMessage;\n    } else {\n      return '';\n    }\n  }\n\n  private createErrorMessage(key: string, control: AbstractControl): string {\n    let message = '';\n    switch (key) {\n      case 'minlength':\n        message = 'Value is ' +\n          control.errors.minlength.actualLength +\n          ' characters long, required minimum length is '\n          + control.errors.minlength.requiredLength + ' characters.';\n        break;\n      case 'maxlength':\n        message = 'Value is ' +\n          control.errors.maxlength.actualLength +\n          ' characters long, required maximum length is '\n          + control.errors.maxlength.requiredLength + ' characters.';\n        break;\n      case 'maxvalue':\n        message = 'Value is ' +\n          control.value +\n          ' required maximum is '\n          + control.errors.maxvalue.required + '.';\n        break;\n      case 'minvalue':\n        message = 'Value is ' +\n          control.value +\n          ' required minimum is '\n          + control.errors.minvalue.required + '.';\n        break;\n      default:\n        message = 'Field error: ' + key;\n    }\n    return message;\n\n  }\n\n  watchChanges(changeClass: eSharedObjectType, keyField: string, description: string, formGroupFunc: (item) => void) {\n    if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n    // if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n\n    if (this.formSaving) {\n      return;\n    }\n\n    // watch the current form in case it is changed in another session.\n    this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n      if (!this.ignoreHubCacheChange) {\n        this.ignoreHubCacheChange = true;\n        if (hubCacheChange.changeClass === changeClass &&\n          hubCacheChange.data && hubCacheChange.data[keyField] === this.currentForm.value[keyField]) {\n          switch (hubCacheChange.changeType) {\n            case eImportAction.Replace:\n              if (this.currentForm.pristine) {\n                let item = Object.assign({}, hubCacheChange.data);\n                formGroupFunc.call(this, item);\n              } else {\n                this.authService.confirmDialog('The ' + description + ' has changed',\n                  'Another session has updated this ' +\n                  description + ', would you like to discard any changes in this session and update with the new version?')\n                  .then(confirm => {\n                    if (confirm) {\n                      let item = Object.assign({}, hubCacheChange.data);\n                      this.ngOnDestroy() // clear old subscriptions\n                      formGroupFunc.call(this, item);\n                    }\n                  }).catch(() => {\n\n                  });\n              }\n              break;\n            case eImportAction.Delete:\n              this.authService.confirmDialog('The ' + description + ' has been deleted',\n                'Another session has deleted this ' + description + ', would you like to discard current changes?')\n                .then(confirm => {\n                  if (confirm) {\n                    this.authService.navigateUp();\n                  }\n                }).catch(() => {\n\n              });\n          }\n        }\n        this.ignoreHubCacheChange = false;\n      }\n    });\n\n    // this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(hubCache => {\n    //   if (!this.currentForm) { return; }\n\n    //   this.hubCache = hubCache;\n\n    //   let item = hubCache.getCacheItem(changeClass, this.currentForm.value[keyField]);\n\n    //   if (item) {\n    //     // if the version from the cache was updated more recently than current version, prompt user.\n    //     if (this.updateDate && this.updateDate < item.updateDate) {\n    //       this.authService.confirmDialog('The ' + description + ' has changed',\n    //         'This is likely due to a another session changing the ' +\n    //         description + ' whilst this session was disconnected.  ' +\n//         'Would you like to discard the changes and reload the newer version from the server (otherwise this will be created a a copy)?')\n    //         .then(confirm => {\n    //           if (confirm) {\n    //             let newItem = Object.assign({}, item);\n    //             this.ngOnDestroy() // clear old subscriptions\n    //             formGroupFunc.call(this, newItem);\n    //           }\n    //         }).catch(reason => {\n    //           this.currentForm.controls[keyField].setValue(0);\n    //         });\n    //     }\n    //   }\n    // });\n  }\n\n  public async save(navigateUp = false, saveAs = false) {\n    try {\n      if (!saveAs && (this.formSaving || !this.hasChanged)) {\n        return;\n      }\n\n      // if (!this.currentForm.valid) {\n      //   this.showAllErrors = true;\n      //   this.onValueChanged();\n\n      //   let confirm = await this.authService.confirmDialog('There are errors!',\n      //     'There are errors in the current form.  Confirm that would like to save the changes anyhow?');\n      //   if (!confirm) {\n      //     return;\n      //   }\n      // }\n\n      this.formSaving = true;\n\n      let value;\n      if (this.valueMethod) {\n        value = this[this.valueMethod]()\n      } else {\n        value = this.currentForm.getRawValue();\n      }\n\n      if (saveAs) {\n        let name = value.name;\n        while (this.hubCache.hub[this.property.cacheProperty].find(c => c.name === name)) {\n          name = await this.authService.promptDialog('Specify a new name',\n            // tslint:disable-next-line:max-line-length\n            `The name ${name} already exists.  Specify a new name for the ${this.property.displayName} and then select ok to save this as a copy.`,\n            '', name + ' 2');\n\n          if (!name) {\n            return;\n          }\n        }\n\n        value.name = name;\n        value.key = 0;\n      }\n\n      this.ignoreHubCacheChange = true;\n\n      const currentStatus =  value.currentStatus;\n      const entityStatus = value.entityStatus;\n      const previousStatus = value.previousStatus;\n      const runTime = value.runTime;\n\n      // remove status as they will not parse into json.\n      value.currentStatus = null;\n      value.entityStatus = null;\n      value.previousStatus = null;\n      value.runTime = null;\n\n      let result = await this.authService.post('/api/Hub/' + this.saveMethod, {\n        hubKey: this.hubCache.hub.hubKey,\n        value: value\n      }, 'Saving...');\n\n      let import1 = new Import();\n      import1[this.property.property] = [{ importAction: eImportAction.New, item: result }];\n      this.hubService.updateHubChange(import1);\n\n      if (this.formGroupFunc) {\n        // this.ignoreHubCacheChange = true;\n        this.formGroupFunc(result);\n\n        if (this.currentForm.controls.currentStatus) { this.currentForm.controls.currentStatus.setValue(currentStatus); }\n        if (this.currentForm.controls.entityStatus) { this.currentForm.controls.entityStatus.setValue(entityStatus); }\n        if (this.currentForm.controls.previousStatus) { this.currentForm.controls.previousStatus.setValue(previousStatus); }\n        if (this.currentForm.controls.runTime) { this.currentForm.controls.runTime.setValue(runTime); }\n        this.ignoreHubCacheChange = false;\n      }\n\n      this.formSaving = false;\n      this.hasChanged = false;\n\n      if (navigateUp) {\n        this.authService.navigateUp();\n      } else {\n        this.hubService.addHubSuccessMessage('The save operation completed.');\n      }\n    } catch (error) {\n      if (error) {\n        this.hubService.addHubMessage(error);\n        this.currentForm.markAsDirty();\n      }\n    } finally {\n      this.formSaving = false;\n    }\n  }\n\n  public saveLocal() {\n    let value;\n    if (this.valueMethod) {\n      value = this[this.valueMethod]()\n    } else {\n      value = this.currentForm.getRawValue();\n    }\n\n    const cache = this.hubCache;\n    const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n\n    if (this.property.cacheGetMethod) {\n      cache[this.property.cacheGetMethod](value, hub);\n    }\n\n    hub[this.property.cacheProperty].push(value);\n    let filename = this.property.displayName + '-' + value.name + '.json';\n    this.hubService.exportHub(hub, filename);\n  }\n\n  cancel() {\n    if (!this.formSaving) {\n      this.authService.navigateUp();\n    }\n  }\n\n  public getFormErrors(): string {\n    return this.getFormErrorsRecursive(this.currentForm, 0, 0);\n  }\n\n  private getFormErrorsRecursive(form: FormGroup, depth: number, index: number): string {\n    let message = '';\n\n    for (const field of Object.keys(form.controls)) {\n      const control = form.get(field);\n\n      // if the control is dirty or flag is set to show all errors.\n      if (control && !control.valid) {\n        message += ' '.repeat(depth * 3) + `The control ${field} at position ${index} has the following error(s):<p></p>`;\n        if (control instanceof FormArray) {\n          const formArray = <FormArray>control;\n          formArray.controls.forEach((cont, formIndex) => {\n            message += this.getFormErrorsRecursive(<FormGroup>cont, depth + 1, formIndex);\n          });\n        } else if (control instanceof FormGroup) {\n          message += this.getFormErrorsRecursive(<FormGroup>control, depth + 1, 0);\n        } else {\n          for (const key of Object.keys(control.errors)) {\n            message += ' '.repeat(depth * 3 + 1) + key + ':' + this.createErrorMessage(key, control) + '<p></p>';\n          }\n        }\n      }\n    }\n\n    return message;\n  }\n\n  private stringCompare(value1: string, value2: string): boolean {\n    if (!value1 && !value2) {\n      return true;\n    }\n    if (!value1 || !value2) {\n      return false;\n    }\n\n    return value1.trim().toLowerCase() === value2.trim().toLowerCase();\n  }\n\n  public parameter(parameter: InputParameterBase): FormGroup {\n    let runTime = {showRefresh: parameter.listOfValuesKey > 0, isRefreshing: false, items: []};\n    if (parameter.value) {\n      if (parameter.rank === 0 && parameter.listOfValuesKey > 0) {\n        runTime.items = [{key: parameter.value, name: parameter.valueDesc}];\n      }\n    }\n\n    const form = this.fb.group({\n      'name': [{value: parameter.name, disabled: parameter['datalinkParameterKey'] > 0 }, [\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(50),\n      ]],\n      'runTime': [runTime],\n      'datalinkParameterKey': parameter['datalinkParameterKey'] // used specifically for view\n    }\n    );\n\n    this.addMissing(parameter, form, new InputParameterBase());\n\n    let subscription = form.controls.listOfValuesKey.valueChanges.subscribe(() => {\n        form.controls.runTime.setValue({showRefresh: form.controls.listOfValuesKey.value > 0, isRefreshing: false, items: []});\n    });\n    this._parameterChanges.push(subscription);\n\n    let subscription2 = form.controls.rank.valueChanges.subscribe(rank => {\n      let value = form.controls.value.value;\n        if (rank === 0) {\n          if (value && Array.isArray(value)) {\n            if (value.length === 0) {\n              form.controls.value.setValue(null);\n              form.controls.valueDesc.setValue(value[0]);\n            } else {\n              form.controls.value.setValue(value[0]);\n              form.controls.valueDesc.setValue(value[0]);\n            }\n          }\n        }\n\n        if (rank === 1) {\n          if (value && !Array.isArray(value)) {\n            form.controls.value.setValue(null);\n          }\n        }\n      });\n    this._parameterChanges.push(subscription2);\n\n    return form;\n  }\n\n  public connection(connection: DexihConnection) {\n    this.logger.LogC(() => `connection`, eLogLevel.Trace);\n\n    const connectionForm = this.fb.group({\n      'name': [connection.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateConnectionNameValidator()\n      ]],\n      'connectionStringDisplay': [connection.connectionString ? '(Connection string hidden)' : '', [\n      ]],\n      'passwordDisplay': [connection.password ? '**************************' : '', [\n      ]],\n      'connectionStringRaw': ['', [\n      ]],\n      'passwordRaw': ['', [\n      ]],\n    }, { validators: [this.requiredConnectionFields()] }\n    );\n\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.Connection);\n    this.saveMethod = 'SaveConnection';\n    this.formGroupFunc = this.connection;\n    this.addMissing(connection, connectionForm, new DexihConnection());\n\n    this.clearFormSubscriptions();\n\n    // whenever the passwordDisplay or connectionStringDisplay changes, write the value to the raw\n    // this allows encrypted values to be loaded, then overwritten when use changes.\n    if (this._connectionChangesSubscription1) { this._connectionChangesSubscription1.unsubscribe(); }\n    this._connectionChangesSubscription1 = connectionForm.controls.passwordDisplay.valueChanges.subscribe(value => {\n      connectionForm.controls.passwordRaw.setValue(value);\n    });\n\n    if (this._connectionChangesSubscription2) { this._connectionChangesSubscription2.unsubscribe(); }\n    this._connectionChangesSubscription2 = connectionForm.controls.connectionStringDisplay.valueChanges.subscribe(value => {\n      connectionForm.controls.connectionStringRaw.setValue(value);\n    });\n\n    this.startForm(connectionForm);\n    this.watchChanges(eSharedObjectType.Connection, 'key', 'Connection', this.connection);\n\n    this.logger.LogC(() => `connection finished`, eLogLevel.Trace);\n  }\n\n  private duplicateConnectionNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihConnections.findIndex(c =>\n          c.key !== this.currentForm.value.key && c.isValid && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  requiredConnectionFields(): ValidatorFn {\n    return (group: FormGroup): { [key: string]: any } => {\n      if (this.currentForm) {\n        const useConnectionString = group.controls['useConnectionString'];\n        const connectionStringDisplay = group.controls['connectionStringDisplay'];\n        const server = group.controls['server'];\n\n        if (!useConnectionString || !connectionStringDisplay || !server) {\n          return;\n        }\n\n        connectionStringDisplay.setErrors(null);\n        server.setErrors(null);\n\n        // if use connection string is selected, connectionString is required.\n        if (useConnectionString.value && !connectionStringDisplay.value) {\n          connectionStringDisplay.setErrors({ 'required': true });\n        }\n\n        // use not connection string, server is required.\n        if (!useConnectionString.value) {\n          if (!server.value) {\n            server.setErrors({ 'required': true });\n          }\n        }\n        return;\n      }\n    };\n  }\n\n  public table(table: DexihTable) {\n    this.clearFormSubscriptions();\n    const tableForm = this.tableForm(table);\n\n    this.formGroupFunc = this.table;\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.Table);\n    this.saveMethod = 'SaveTable';\n    this.watchChanges(eSharedObjectType.Table, 'tableKey', 'table', this.table);\n    this.startForm(tableForm);\n  }\n\n  public tableIndex(table: DexihTable, index: DexihTableIndex): FormGroup {\n    return this.fb.group({\n      'name': [index.name, [\n        Validators.required,\n        Validators.maxLength(250),\n        this.duplicateIndexNameValidator(table.dexihTableIndexes)\n      ]],\n        'columns': this.fb.array(\n          index.columns.map(ic => {\n            return this.tableIndexColumn(ic);\n          })\n        )\n    });\n  }\n\n  public tableIndexColumn(ic: DexihTableIndexColumn): FormGroup {\n      return this.fb.group({\n        'columnKey': [ic.columnKey, []],\n        'direction': [ic.direction, []],\n      });\n  }\n\n  public tableForm(table: DexihTable): FormGroup {\n\n    const indexes = table.dexihTableIndexes.filter(c => c.isValid).map(index => this.tableIndex(table, index));\n\n    const tableForm = this.fb.group({\n      'name': [table.name, [\n        Validators.required,\n        Validators.maxLength(250),\n        this.duplicateTableNameValidator()\n      ]],\n      'connectionKey': [table.connectionKey, [\n        Validators.required\n      ]],\n      'logicalName': [table.logicalName, [\n        Validators.required,\n        Validators.maxLength(250)\n      ]],\n      'useLogical': [this.hubCache.defaultTableLogicalName(table.schema, table.name) !== table.logicalName, [\n      ]],\n      'dexihTableColumns': this.fb.array([]),\n      'dexihTableIndexes': this.fb.array(indexes),\n    }, { validator: this.requiredTableFields() }\n    );\n\n    let tableColumnsForm = <FormArray>tableForm.controls.dexihTableColumns;\n    table.dexihTableColumns.filter(c => c.isValid).forEach(column => {\n      tableColumnsForm.push(this.tableColumn(tableColumnsForm.value, column));\n    });\n\n    if (this._tableChangesSubscription1) { this._tableChangesSubscription1.unsubscribe(); }\n    this._tableChangesSubscription1 = tableForm.controls.useLogical.valueChanges.subscribe(() => {\n      if (!tableForm.controls.useLogical.value) {\n        tableForm.controls.logicalName.setValue(\n          this.hubCache.defaultTableLogicalName(tableForm.controls.schema.value, tableForm.controls.name.value));\n      }\n    });\n\n    if (this._tableChangesSubscription2) { this._tableChangesSubscription2.unsubscribe(); }\n    this._tableChangesSubscription2 = tableForm.controls.name.valueChanges.subscribe(() => {\n      if (!tableForm.controls.useLogical.value) {\n        tableForm.controls.logicalName.setValue(\n          this.hubCache.defaultTableLogicalName(tableForm.controls.schema.value, tableForm.controls.name.value));\n      }\n    });\n\n    this.addMissing(table, tableForm, new DexihTable());\n\n    return tableForm;\n  }\n\n  private duplicateIndexNameValidator(indexes: DexihTableIndex[]): ValidatorFn {\n    // validate no matching tables names in the same connection.\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n\n        const no = indexes\n        .find(c => c.key !== this.currentForm.controls.key.value &&\n            c.isValid && this.stringCompare(c.name, name));\n          return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  private duplicateTableNameValidator(): ValidatorFn {\n    // validate no matching tables names in the same connection.\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n\n        const no = this.hubCache.hub.dexihTables\n        .find(c => c.key !== this.currentForm.controls.key.value &&\n            c.isValid && this.stringCompare(c.name, name) && c.connectionKey === this.currentForm.value.connectionKey);\n          return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  requiredTableFields(): ValidatorFn {\n    return (group: FormGroup): { [key: string]: any } => {\n      if (this.currentForm) {\n        const useConnectionString = group.controls['useConnectionString'];\n        const connectionStringDisplay = group.controls['connectionStringDisplay'];\n        const server = group.controls['server'];\n\n        if (!useConnectionString || !connectionStringDisplay || !server) {\n          return;\n        }\n\n        connectionStringDisplay.setErrors(null);\n        server.setErrors(null);\n\n        // if use connection string is selected, connectionString is required.\n        if (useConnectionString.value && !connectionStringDisplay.value) {\n          connectionStringDisplay.setErrors({ 'required': true });\n        }\n\n        // use not connection string, server is required.\n        if (!useConnectionString.value) {\n          if (!server.value) {\n            server.setErrors({ 'required': true });\n          }\n        }\n        return;\n      }\n    };\n  }\n\n\n  tableColumn(siblingColumns: DexihTableColumn[], column: DexihTableColumn): FormGroup {\n    let childColumns = column.childColumns ? column.childColumns : [];\n    let columnForm = this.fb.group({\n      'name': [column.name, [\n        Validators.required,\n        Validators.maxLength(250),\n        this.duplicateTableColumnNameValidator(siblingColumns)\n      ]],\n      'logicalName': [column.logicalName, [\n        Validators.required,\n        Validators.maxLength(250)\n      ]],\n      'precision': [column.precision, [\n        this.columnMinRangeValidator(0),\n        this.columnMaxRangeValidator(30),\n      ]],\n      'scale': [column.scale, [\n        this.columnMinRangeValidator(0),\n        this.columnMaxRangeValidator(30),\n      ]],\n      'useLogical': [column.name !== column.logicalName, [\n      ]],\n      'isString': [column.dataType === eTypeCode.String || column.dataType === eTypeCode.CharArray ? true : false, [\n      ]],\n      'isNumber': [column.dataType === eTypeCode.Double || column.dataType === eTypeCode.Decimal ||\n        column.dataType === eTypeCode.Single ? true : false, [\n      ]],\n      'childColumns': this.fb.array(childColumns.filter(c => c.isValid).map(col => {\n        return this.tableColumn(childColumns, col);\n      })),\n      'runTime': {impact: eMappingStatus, lineage: eMappingStatus}\n    }\n    );\n\n    this.addMissing(column, columnForm, new DexihTableColumn());\n\n    // update isString and isNumber properties automatically when dataType changes.\n    if (this._tableColumnChangesSubscription1) { this._tableColumnChangesSubscription1.unsubscribe(); }\n    this._tableColumnChangesSubscription1 = columnForm.controls.dataType.valueChanges.subscribe(dataType => {\n      if (dataType === eTypeCode.String || dataType === eTypeCode.CharArray) {\n        columnForm.controls.isString.setValue(true);\n      } else {\n        columnForm.controls.isString.setValue(false);\n      }\n\n      if (dataType === eTypeCode.Double || dataType === eTypeCode.Decimal || dataType === eTypeCode.Single) {\n        columnForm.controls.isNumber.setValue(true);\n      } else {\n        columnForm.controls.isNumber.setValue(false);\n      }\n    });\n\n    // match logical name, unless the logical name is changed.\n    if (this._tableColumnChangesSubscription2) { this._tableColumnChangesSubscription2.unsubscribe(); }\n    this._tableColumnChangesSubscription2 = columnForm.controls.useLogical.valueChanges.subscribe(() => {\n      if (!columnForm.controls.useLogical.value) {\n        columnForm.controls.logicalName.setValue(columnForm.controls.name.value);\n      }\n    });\n\n    if (this._tableColumnChangesSubscription3) { this._tableColumnChangesSubscription3.unsubscribe(); }\n    this._tableColumnChangesSubscription3 = columnForm.controls.name.valueChanges.subscribe(() => {\n      if (!columnForm.controls.useLogical.value) {\n        columnForm.controls.logicalName.setValue(columnForm.controls.name.value);\n      }\n    });\n\n    for (const field of Object.keys(columnForm.controls)) {\n      let control = columnForm.controls[field];\n      if (control.validator) {\n        columnForm.controls[field].updateValueAndValidity();\n      }\n    }\n    return columnForm;\n  }\n\n  private duplicateTableColumnNameValidator(columnsArray: DexihTableColumn[]): ValidatorFn {\n    if (!columnsArray) { return null; }\n\n    // validate no matching tables names in the same connection.\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        if (control.parent) {\n          const key = control.parent.value.key;\n          const columnGroup = control.parent.value.columnGroup;\n          if (columnsArray) {\n            const no = columnsArray.findIndex(c =>\n              c.key !== key &&\n              c.columnGroup === columnGroup &&\n              c.isValid &&\n              this.stringCompare(c.name, name)) >= 0;\n            return no ? { 'duplicateName': { name } } : null;\n          }\n        }\n      }\n    };\n  }\n\n  private requiredNotZero(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      const name = control.value;\n      const value = control.value;\n      const no = !value || value === 0;\n      return no ? { 'required': { name } } : null;\n    }\n  }\n\n  private columnMinRangeValidator(min: number): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      const name = control.value;\n      const column = <FormGroup>control.parent;\n      if (column) {\n        if (column.controls.isNumber.value) {\n          const value = control.value;\n          const no = Number(value) >= min;\n          return no ? null : { 'minvalue': { name, required: min }};\n        } else {\n          return;\n        }\n      }\n    };\n  }\n\n  private columnMaxRangeValidator(max: number): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      const name = control.value;\n      const column = <FormGroup>control.parent;\n      if (column) {\n        if (column.controls.isNumber.value) {\n          const value = control.value;\n          const no = Number(value) <= max;\n          return no ? null : { 'maxvalue': { name , required: max } };\n        } else {\n          return;\n        }\n      }\n    };\n  }\n\n  public fileFormat(fileFormat: DexihFileFormat) {\n    const fileFormatForm = this.fb.group({\n      'name': [fileFormat.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateFileFormatNameValidator()\n      ]],\n      'quote': [fileFormat.quote, [\n        Validators.maxLength(1)\n      ]],\n    }\n    );\n\n    this.formGroupFunc = this.fileFormat;\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.FileFormat);\n    this.saveMethod = 'SaveFileFormat';\n    this.addMissing(fileFormat, fileFormatForm, new DexihFileFormat());\n    this.clearFormSubscriptions();\n    this.watchChanges(eSharedObjectType.FileFormat, 'fileFormatKey', 'file format', this.fileFormat);\n    this.startForm(fileFormatForm);\n  }\n\n  duplicateFileFormatNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihFileFormats.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  public view(view: DexihView) {\n\n    this.clearFormSubscriptions();\n\n    let parameters = view.parameters.filter(c => c.isValid).map(parameter => {\n      return this.parameter(parameter);\n    });\n\n    const viewForm = this.fb.group({\n      'name': [view.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateViewNameValidator()\n      ]],\n      'sourceType': [view.sourceType, [\n        Validators.required,\n      ]],\n      'sourceDatalinkKey': [view.sourceDatalinkKey],\n      'sourceTableKey': [view.sourceTableKey],\n      'parameters': this.fb.array(parameters),\n      'chartConfig': [view.chartConfig ?? new ChartConfig()],\n      'selectQuery': [view.selectQuery ?? new SelectQuery()],\n      'animateConfig': [view.animateConfig ?? new AnimateConfig()],\n\n    }, { validator: this.validateViewSource() }\n    );\n\n    this.formGroupFunc = this.view;\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.View);\n    this.saveMethod = 'SaveView';\n    this.addMissing(view, viewForm, new DexihView());\n    this.watchChanges(eSharedObjectType.View, 'viewKey', 'view', this.view);\n    this.startForm(viewForm);\n  }\n\n  duplicateViewNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihViews.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  private validateViewSource() {\n    return (group: FormGroup) => {\n      let sourceType = group.get('sourceType').value;\n      let sourceTableKey = group.get('sourceTableKey');\n      let sourceDatalinkKey = group.get('sourceDatalinkKey');\n\n      sourceTableKey.setErrors(null);\n      sourceDatalinkKey.setErrors(null);\n\n      if (sourceType === eDataObjectType.Table) {\n        if (!sourceTableKey.value) {\n          return sourceTableKey.setErrors({ required: true });\n        }\n      } else if (sourceType === eDataObjectType.Datalink) {\n        if (!sourceDatalinkKey.value) {\n          return sourceDatalinkKey.setErrors({ required: true });\n        }\n      }\n    };\n  }\n\n  public dashboard(dashboard: DexihDashboard) {\n    this.clearFormSubscriptions();\n\n    let parameters = dashboard.parameters.filter(c => c.isValid).map(parameter => {\n      return this.parameter(parameter);\n    });\n\n\n    const form = this.fb.group({\n      'name': [dashboard.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateDashboardNameValidator()\n      ]],\n      'dexihDashboardItems': this.fb.array([]),\n      'parameters': this.fb.array(parameters),\n      'runTime': {showEdit: false, lock: true},\n    }, { }\n    );\n\n    let dashboardItemsForm = <FormArray>form.controls.dexihDashboardItems;\n    dashboard.dexihDashboardItems.filter(c => c.isValid).forEach(item => {\n      dashboardItemsForm.push(this.dashboardItem(item));\n    });\n\n    this.formGroupFunc = this.dashboard;\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.Dashboard);\n    this.saveMethod = 'SaveDashboard';\n    this.addMissing(dashboard, form, new DexihDashboard());\n    this.watchChanges(eSharedObjectType.Dashboard, 'dashboardKey', 'dashboard', this.dashboard);\n    this.startForm(form);\n  }\n\n  duplicateDashboardNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihDashboards.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  public dashboardItem(dashboardItem: DexihDashboardItem): FormGroup {\n    let parameters = dashboardItem.parameters.filter(c => c.isValid).map(parameter => {\n      return this.parameter(parameter);\n    });\n\n    const form = this.fb.group({\n      'name': [dashboardItem.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n      ]],\n      'parameters': this.fb.array(parameters),\n      'runTime': {resizeEvent: new EventEmitter<any[]>(), data: new DataCache()},\n    }\n    );\n\n    this.addMissing(dashboardItem, form, new DexihDashboardItem());\n\n    return form;\n  }\n\n  // updates the parameters when a new dashboard item is created.\n  public updateDashboardItemView(item: FormGroup) {\n    let views = this.hubCache.hub.dexihViews;\n    if (views && item.controls.viewKey.value) {\n        let view = this.hubCache.hub.dexihViews.find(c => c.key === item.controls.viewKey.value);\n        if (this.view) {\n            item.controls.name.setValue(this.view.name);\n            item.controls.runTime.value.data = new DataCache();\n\n            // reset parameters.\n            let formParameters = <FormArray> item.controls.parameters;\n            let currentParameters = <DexihInputParameter[]> formParameters.value;\n\n            formParameters.clear();\n\n            let parameters = <InputParameterBase[]> view.parameters;\n            // if (view.sourceType === eDataObjectType.Datalink) {\n            //     let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === view.sourceDatalinkKey);\n            //     if (datalink && datalink.parameters) {\n            //         parameters = parameters.concat(datalink.parameters);\n            //     }\n            // }\n\n            parameters.forEach(parameter => {\n                let currentParameter = currentParameters.find( c => c.name === parameter.name);\n                let newParameter = new InputParameterBase();\n                if (currentParameter) {\n                    newParameter.name = currentParameter.name;\n                    newParameter.value = currentParameter.value;\n                  //  newParameter.listOfValuesKey = currentParameter.listOfValuesKey;\n                } else {\n                    newParameter.name = parameter.name;\n                    newParameter.value = parameter.value;\n                    newParameter.listOfValuesKey = parameter.listOfValuesKey;\n                }\n                let newFormParameter = this.parameter(newParameter);\n                formParameters.push(newFormParameter);\n            });\n        }\n    }\n}\n\n  public listOfValuesItem(item: ListOfValuesItem) {\n    const form = this.fb.group({\n      'key': [item.key, [\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(50),\n      ]],\n    }\n    );\n\n    this.addMissing(item, form, new ListOfValuesItem());\n\n    return form;\n  }\n\n  public listOfValues(listOfValues: DexihListOfValues) {\n\n    let staticData: FormGroup[]\n    if (listOfValues.staticData) {\n      staticData = listOfValues.staticData.map(item => {\n        return this.listOfValuesItem(item);\n      });\n    } else {\n      staticData = [];\n    }\n\n    const lovForm = this.fb.group({\n      'name': [listOfValues.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateLovNameValidator()\n      ]],\n      'sourceType': [listOfValues.sourceType, [\n        Validators.required,\n      ]],\n      'sourceDatalinkKey': [listOfValues.sourceDatalinkKey],\n      'sourceTableKey': [listOfValues.sourceTableKey],\n      'staticData': this.fb.array(staticData),\n    }, { validator: this.validateViewSource() }\n    );\n\n    this.formGroupFunc = this.listOfValues;\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.ListOfValues);\n    this.saveMethod = 'SaveListOfValues';\n    this.addMissing(listOfValues, lovForm, new DexihListOfValues());\n    this.clearFormSubscriptions();\n    this.watchChanges(eSharedObjectType.ListOfValues, 'listOfValuesKey', 'listOfValues', this.listOfValues);\n    this.startForm(lovForm);\n  }\n\n  duplicateLovNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihListOfValues.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  public api(api: DexihApi) {\n    this.clearFormSubscriptions();\n\n    let parameters = api.parameters.filter(c => c.isValid).map(parameter => {\n      return this.parameter(parameter);\n    });\n\n    const apiForm = this.fb.group({\n      'name': [api.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n      ]],\n      'sourceType': [api.sourceType, [\n        Validators.required,\n      ]],\n      'sourceDatalinkKey': [api.sourceDatalinkKey],\n      'sourceTableKey': [api.sourceTableKey],\n      'parameters': this.fb.array(parameters),\n    }, { validator: this.validateDatalinkTable() }\n    );\n\n    this.formGroupFunc = this.api;\n    this.saveMethod = 'SaveApi';\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.Api);\n    this.addMissing(api, apiForm, new DexihApi());\n    this.watchChanges(eSharedObjectType.Api, 'apiKey', 'api', this.api);\n    this.startForm(apiForm);\n  }\n\n  public validation(validation: DexihColumnValidation) {\n    const validationForm = this.fb.group({\n      'name': [validation.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateValidationNameValidator()\n      ]],\n    }\n    );\n\n    this.formGroupFunc = this.validation;\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.ColumnValidation);\n    this.saveMethod = 'SaveColumnValidation';\n    this.addMissing(validation, validationForm, new DexihColumnValidation());\n    this.watchChanges(eSharedObjectType.ColumnValidation, 'key', 'column validation', this.validation);\n    this.startForm(validationForm);\n  }\n\n  duplicateValidationNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihColumnValidations.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid\n          && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  public customFunction(customFunction: DexihCustomFunction) {\n    const customFunctionForm = this.fb.group({\n      'name': [customFunction.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateCustomFunctionNameValidator()\n      ]],\n      'dexihCustomFunctionParameters': this.fb.array(customFunction.dexihCustomFunctionParameters.filter(c => c.isValid).map(parameter => {\n        return this.customFunctionParametersFormGroup(parameter);\n      })),\n\n    }\n    );\n\n    this.formGroupFunc = this.customFunction;\n    this.saveMethod = 'SaveCustomFunction';\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.CustomFunction);\n    this.addMissing(customFunction, customFunctionForm, new DexihCustomFunction());\n    this.watchChanges(eSharedObjectType.CustomFunction, 'customFunctionKey', 'custom function', this.customFunction);\n    this.startForm(customFunctionForm);\n  }\n\n  duplicateCustomFunctionNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihCustomFunctions.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid\n          && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  public customFunctionParametersFormGroup(parameter: DexihCustomFunctionParameter): FormGroup {\n    const parameterForm = this.fb.group({\n      'name': [parameter.name, [\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(50),\n      ]],\n    });\n\n    this.addMissing(parameter, parameterForm, new DexihCustomFunctionParameter());\n    return parameterForm;\n  }\n\n  public hubVariable(hubVariable: DexihHubVariable) {\n    const hubVariableForm = this.fb.group({\n      'name': [hubVariable.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateHubVariableNameValidator()\n      ]],\n      'valueRaw': [hubVariable.isEncrypted ? null : hubVariable.value]\n    }\n    );\n\n    this.formGroupFunc = this.hubVariable;\n    this.saveMethod = 'SaveHubVariable';\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.HubVariable);\n    this.addMissing(hubVariable, hubVariableForm, new DexihHubVariable());\n    this.watchChanges(eSharedObjectType.HubVariable, 'hubVariable', 'hub variable', this.hubVariable);\n    this.startForm(hubVariableForm);\n  }\n\n  duplicateHubVariableNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihHubVariables.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid\n          && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  public tag(tag: DexihTag) {\n    const form = this.fb.group({\n      'name': [tag.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateTagNameValidator()\n      ]],\n    }\n    );\n\n    this.formGroupFunc = this.tag;\n    this.saveMethod = 'SaveTag';\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.Tags);\n    this.addMissing(tag, form, new DexihTag());\n    this.watchChanges(eSharedObjectType.Tags, 'tag', 'hub variable', this.tag);\n    this.startForm(form);\n  }\n\n  duplicateTagNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihTags.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid\n          && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  public datalinkTest(datalinkTest: DexihDatalinkTest) {\n    const form = this.fb.group({\n      'name': [datalinkTest.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateDatalinkTestNameValidator()\n      ]],\n      'dexihDatalinkTestSteps': this.fb.array([]),\n    });\n\n    let testStepsForm = <FormArray>form.controls.dexihDatalinkTestSteps;\n    datalinkTest.dexihDatalinkTestSteps.filter(c => c.isValid).forEach(step => {\n      testStepsForm.push(this.datalinkTestStep(step));\n    });\n\n    this.formGroupFunc = this.datalinkTest;\n    this.saveMethod = 'SaveDatalinkTest';\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.DatalinkTest);\n    this.addMissing(datalinkTest, form, new DexihDatalinkTest());\n    this.watchChanges(eSharedObjectType.DatalinkTest, 'datalinkTest', 'datalink test', this.datalinkTest);\n    this.startForm(form);\n  }\n\n  duplicateDatalinkTestNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihDatalinkTests.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid\n          && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  public datalinkTestStep(step: DexihDatalinkTestStep): FormGroup {\n    const form = this.fb.group({\n      'dexihDatalinkTestTables': this.fb.array([]),\n    });\n\n    let testTablesForm = <FormArray>form.controls.dexihDatalinkTestTables;\n    step.dexihDatalinkTestTables.filter(c => c.isValid).forEach(table => {\n      testTablesForm.push(this.datalinkTestTable(table));\n    });\n\n    this.addMissing(step, form, new DexihDatalinkTestStep());\n\n    if (this._datalinkTestChangesSubscription) {this._datalinkTestChangesSubscription.unsubscribe(); }\n    this._datalinkTestChangesSubscription = form.controls.datalinkKey.valueChanges.subscribe(datalinkKey => {\n      let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === datalinkKey);\n\n      while (testTablesForm.length > 0) {testTablesForm.removeAt(0); }\n\n      if (datalink.sourceDatalinkTable.sourceTableKey) {\n          let testTable = new DexihDatalinkTestTable();\n          testTable.tableKey = datalink.sourceDatalinkTable.sourceTableKey;\n          testTable.isValid = true;\n          testTablesForm.push(this.datalinkTestTable(testTable));\n      }\n\n      datalink.dexihDatalinkTransforms.filter(c => c.joinDatalinkTable && c.joinDatalinkTable.sourceTableKey).forEach(transform => {\n          let testTable = new DexihDatalinkTestTable();\n          testTable.tableKey = transform.joinDatalinkTable.sourceTableKey;\n          testTable.isValid = true;\n          testTablesForm.push(this.datalinkTestTable(testTable));\n      });\n    });\n    return form;\n  }\n\n  public datalinkTestTable(table: DexihDatalinkTestTable): FormGroup {\n    const form = this.fb.group({});\n    this.addMissing(table, form, new DexihDatalinkTestTable());\n    return form;\n  }\n\n\n\n  /// ***********\n  /// Datajob forms\n  /// ***********\n\n  public triggerFormGroup(trigger: DexihTrigger): FormGroup {\n    let triggerForm = this.fb.group({\n    });\n\n    this.addMissing(trigger, triggerForm, new DexihTrigger());\n    return triggerForm;\n  }\n\n  public datalinkStepFormGroup(datajobForm: FormGroup, step: DexihDatalinkStep): FormGroup {\n\n    let parameters = step.parameters.filter(c => c.isValid).map(parameter => {\n      return this.parameter(parameter);\n    });\n\n    let stepForm = this.fb.group({\n      'key': [step.key, [\n      ]],\n      'name': [step.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateStepNameValidator(datajobForm)\n      ]],\n      'datalinkKey': [step.datalinkKey, [\n        Validators.required\n      ]],\n      'dexihDatalinkDependencies': this.fb.array(step.dexihDatalinkDependencies.filter(c => c.isValid).map(dep => {\n        return this.datalinkDependencyFormGroup(dep);\n      })),\n      'dexihDatalinkStepColumns': this.fb.array(step.dexihDatalinkStepColumns.filter(c => c.isValid).map(col => {\n        return this.datalinkStepColumnFormGroup(col);\n      })),\n      'parameters': this.fb.array(parameters)\n    });\n\n    this.addMissing(step, stepForm, new DexihDatalinkStep());\n    return stepForm;\n  }\n\n  public datalinkDependencyFormGroup(dep: DexihDatalinkDependency): FormGroup {\n    let depForm = this.fb.group({\n    });\n\n    this.addMissing(dep, depForm, new DexihDatalinkDependency());\n    return depForm;\n  }\n\n  public datalinkStepColumnFormGroup(col: DexihDatalinkStepColumn): FormGroup {\n    let colForm = this.fb.group({\n    });\n\n    this.addMissing(col, colForm, new DexihDatalinkStepColumn());\n    return colForm;\n  }\n\n  public datajob(datajob: DexihDatajob): void {\n    this.clearFormSubscriptions();\n\n    const triggers = datajob.dexihTriggers.filter(c => c.isValid).map(trigger => {\n      return this.triggerFormGroup(trigger);\n    });\n\n    let parameters = datajob.parameters.filter(c => c.isValid).map(parameter => {\n      return this.parameter(parameter);\n    });\n\n    const stepsArray = this.fb.array([]);\n\n    const datajobForm = this.fb.group({\n      'key': [datajob.key, [\n      ]],\n      'name': [datajob.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateDatajobNameValidator()\n      ]],\n      'auditConnectionKey': [datajob.auditConnectionKey, [\n        this.requiredNotZero()\n      ]],\n      'failAction': [datajob.failAction, [\n        Validators.required\n      ]],\n      'dexihDatalinkSteps': stepsArray,\n      'dexihTriggers': this.fb.array(triggers),\n      'parameters': this.fb.array(parameters)\n    });\n\n    datajob.dexihDatalinkSteps.filter(c => c.isValid).forEach(step => {\n      stepsArray.push(this.datalinkStepFormGroup(datajobForm, step));\n    });\n\n    this.formGroupFunc = this.datajob;\n    this.saveMethod = 'SaveDatajob';\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.Datajob);\n    this.addMissing(datajob, datajobForm, new DexihDatajob());\n    this.watchChanges(eSharedObjectType.Datajob, 'key', 'data job', this.datajob);\n    this.startForm(datajobForm);\n  }\n\n  duplicateDatajobNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihDatajobs.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n\n  duplicateStepNameValidator(datajobForm: FormGroup): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        if (control && control.parent) {\n          let key = control.parent.controls['key'].value;\n          const no = datajobForm.value.dexihDatalinkSteps.findIndex(c =>\n            c.key !== key && c.isValid && c.name === name) >= 0;\n          return no ? { 'duplicateName': { name } } : null;\n        }\n      }\n    };\n  }\n\n  public remoteAgent(remoteAgent: DexihRemoteAgentHub) {\n    const remoteAgentForm = this.fb.group({\n    }\n    );\n\n    // this.formGroupFunc = this.remoteAgentSettings;\n    // this.saveMethod = 'SaveRemoteAgent';\n    // this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.RemoteAgent);\n    this.clearFormSubscriptions();\n    this.addMissing(remoteAgent, remoteAgentForm, new DexihRemoteAgentHub());\n    this.startForm(remoteAgentForm);\n  }\n\n  //\n  //\n  // Datalink Edit Forms\n  //\n  //\n\n  // gets the datalink object with embedded data stripped off.\n  public getDatalinkValue(): DexihDatalink {\n    const datalink = this.currentForm.value;\n\n    // causes problems with target table as output columns seems to get set null in the form.\n    // datalink.dexihDatalinkTransforms.forEach(t => {\n    //   t.inputColumns = null;\n    //   t.outputColumns = null;\n    // });\n\n    // datalink.targetTable = null;\n\n    return datalink;\n  }\n\n  datalinkTableColumn(siblingColumns: DexihDatalinkColumn[], column: DexihDatalinkColumn): FormGroup {\n    let childColumns = column.childColumns ? column.childColumns : [];\n\n    let columnForm = this.fb.group({\n      'name': [column.name, [\n        Validators.required,\n        Validators.maxLength(250),\n        this.duplicateDatalinkColumnNameValidator(siblingColumns)\n      ]],\n      'logicalName': [column.logicalName, [\n        Validators.required,\n        Validators.maxLength(250)\n      ]],\n      'precision': [column.precision, [\n        this.columnMinRangeValidator(0),\n        this.columnMaxRangeValidator(30),\n      ]],\n      'scale': [column.scale, [\n        this.columnMinRangeValidator(0),\n        this.columnMaxRangeValidator(30),\n      ]],\n      'useLogical': [column.name !== column.logicalName, [\n      ]],\n      'isString': [column.dataType === eTypeCode.String  || column.dataType === eTypeCode.CharArray ? true : false, [\n      ]],\n      'isNumber': [column.dataType === eTypeCode.Double || column.dataType === eTypeCode.Decimal ||\n        column.dataType === eTypeCode.Single ? true : false, [\n      ]],\n      'childColumns': this.fb.array(childColumns.filter(c => c.isValid).map(col => {\n        return this.datalinkTableColumn(childColumns, col);\n      })),\n      'runTime': {impact: eMappingStatus, lineage: eMappingStatus}\n    });\n\n    this.addMissing(column, columnForm, new DexihDatalinkColumn());\n\n    // update isString and isNumber properties automatically when dataType changes.\n    if (this._tableColumnChangesSubscription1) { this._tableColumnChangesSubscription1.unsubscribe(); }\n    this._tableColumnChangesSubscription1 = columnForm.controls.dataType.valueChanges.subscribe(dataType => {\n      if (dataType === eTypeCode.String  || dataType === eTypeCode.CharArray) {\n        columnForm.controls.isString.setValue(true);\n      } else {\n        columnForm.controls.isString.setValue(false);\n      }\n\n      if (dataType === eTypeCode.Double || dataType === eTypeCode.Decimal || dataType === eTypeCode.Single) {\n        columnForm.controls.isNumber.setValue(true);\n      } else {\n        columnForm.controls.isNumber.setValue(false);\n      }\n    });\n\n    // match logical name, unless the logical name is changed.\n    if (this._tableColumnChangesSubscription2) { this._tableColumnChangesSubscription2.unsubscribe(); }\n    this._tableColumnChangesSubscription2 = columnForm.controls.useLogical.valueChanges.subscribe(() => {\n      if (!columnForm.controls.useLogical.value) {\n        columnForm.controls.logicalName.setValue(columnForm.controls.name.value);\n      }\n    });\n\n    if (this._tableColumnChangesSubscription3) { this._tableColumnChangesSubscription3.unsubscribe(); }\n    this._tableColumnChangesSubscription3 = columnForm.controls.name.valueChanges.subscribe(() => {\n      if (!columnForm.controls.useLogical.value) {\n        columnForm.controls.logicalName.setValue(columnForm.controls.name.value);\n      }\n    });\n\n    for (const field of Object.keys(columnForm.controls)) {\n      let control = columnForm.controls[field];\n      if (control.validator) {\n        columnForm.controls[field].updateValueAndValidity();\n      }\n    }\n    return columnForm;\n  }\n\n  private duplicateDatalinkColumnNameValidator(columnsArray: DexihDatalinkColumn[]): ValidatorFn {\n    // validate no matching tables names in the same connection.\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (!columnsArray) { return null; }\n      if (this.currentForm) {\n        const name = control.value;\n        if (control.parent) {\n          const key = control.parent.value.key;\n          if (columnsArray) {\n            const no = columnsArray.findIndex(c =>\n              c.key !== key && c.isValid && this.stringCompare(c.name, name)) >= 0;\n            return no ? { 'duplicateName': { name } } : null;\n          }\n        }\n      }\n    };\n  }\n\n  public datalinkTransformFormGroup(transform: DexihDatalinkTransform): FormGroup {\n\n    const transformForm = this.fb.group({\n      'datalinkTransformKey': [transform.key, [\n      ]],\n      'name': [transform.name, [\n        // Validators.required,\n        // Validators.minLength(3),\n        // Validators.maxLength(50),\n      ]],\n      'datalinkKey': [transform.datalinkKey, [\n        Validators.required\n      ]],\n      'joinDatalinkTable': transform.joinDatalinkTable ? this.sourceDatalinkTableFormGroup(transform.joinDatalinkTable) : null,\n      'nodeDatalinkColumn': transform.nodeDatalinkColumn ? transform.nodeDatalinkColumn : null,\n      'isValid': true,\n\n      'runTime': {inputColumns: null, outputColumns: null, transformColumns: null},\n    });\n\n    transformForm.addControl('dexihDatalinkTransformItems', this.fb.array(transform.dexihDatalinkTransformItems\n      .filter(c => c.isValid).map(item => {\n        return this.datalinkDatalinkTransformItemFormGroup(transformForm, item);\n      })));\n\n    this.addMissing(transform, transformForm, new DexihDatalinkTransform());\n    return transformForm;\n  }\n\n\n  public  datalinkDatalinkTransformItemFormGroup(datalinkTransformForm: FormGroup, item: DexihDatalinkTransformItem): FormGroup {\n    const itemForm = this.fb.group({\n      'dexihFunctionParameters': this.fb.array(item.dexihFunctionParameters.filter(c => c.isValid).map(parameter => {\n        return this.datalinkFunctionParametersFormGroup(parameter);\n      })),\n      // 'standardFunction': item.standardFunction,\n      'targetDatalinkColumn': [item.targetDatalinkColumn, [\n        this.duplicateOutputColumn(datalinkTransformForm)\n      ]],\n      'functionClassName': [item.functionClassName],\n      'functionMethodName': [item.functionMethodName],\n      'isValid': true\n    }, {asyncValidators: [this.invalidClassName()]});\n\n    this.addMissing(item, itemForm, new DexihDatalinkTransformItem());\n\n    // itemForm.controls.functionMethodName.setAsyncValidators(this.invalidClassName(itemForm));\n\n    // when ever generic parameter changes, change all underlying types.\n    if (this._genericParameterSubscription) { this._genericParameterSubscription.unsubscribe(); }\n    this._genericParameterSubscription = itemForm.controls.genericTypeCode.valueChanges.subscribe(() => {\n      let typeCode = itemForm.controls.genericTypeCode.value;\n      let parameters = <FormArray> itemForm.controls.dexihFunctionParameters;\n      parameters.controls.filter(c => c.value.isGeneric).forEach(p => {\n        let param = <FormGroup>p;\n        param.controls.dataType.setValue(typeCode);\n        let arrayParams = <FormArray> param.controls.arrayParameters;\n        arrayParams.controls.forEach(ap => {\n          let aParam = <FormGroup>ap;\n          aParam.controls.dataType.setValue(typeCode);\n        });\n      });\n    });\n\n\n    return itemForm;\n  }\n\n  duplicateOutputColumn(datalinkTransformForm: FormGroup): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const column = <DexihDatalinkColumn>control.value;\n        const transformColumns = <DexihDatalinkColumn[]>datalinkTransformForm.controls.runTime.value.transformColumns;\n        if (transformColumns && column) {\n          const no = transformColumns.filter(c => c.name === column.name).length > 1;\n          return no ? { 'duplicateName': { name } } : null;\n        } else {\n          return null;\n        }\n      }\n    };\n  }\n\n  invalidClassName(): AsyncValidatorFn {\n    return (control: AbstractControl): Promise<ValidationErrors | null> => {\n      const datalinkTransformItemForm = <FormGroup>control;\n      datalinkTransformItemForm.controls.functionMethodName.setErrors(null);\n      if (this.currentForm && datalinkTransformItemForm.controls.transformItemType\n        && datalinkTransformItemForm.controls.transformItemType.value === eTransformItemType.BuiltInFunction ) {\n        return new Promise((resolve, reject) => {\n          this.hubService.GetFunctionReference(datalinkTransformItemForm.value).then(func => {\n          if (func) {\n            resolve(null);\n          } else {\n            const value = datalinkTransformItemForm.controls.functionClassName.value + '.' +\n              datalinkTransformItemForm.controls.functionMethodName.value;\n              datalinkTransformItemForm.controls.functionMethodName.setErrors({ 'invalidClass': { value } });\n            resolve({ 'invalidClass': { value } });\n          }\n        }).catch(reason => {\n          reject(reason);\n        });\n      });\n      } else {\n        return Promise.resolve(null);\n      }\n    };\n  }\n\n  public datalinkFunctionParametersFormGroup(parameter: DexihFunctionParameter): FormGroup {\n    const parameterForm = this.fb.group({\n      // 'name': [, [ // used for adding new columns\n      // ]],\n      'datalinkColumn': parameter.datalinkColumn,\n      'runTime': parameter['runTime'],\n      'arrayParameters': this.fb.array(parameter.arrayParameters.filter(c => c.isValid).map(p => {\n        return this.datalinkFunctionArrayParametersFormGroup(p);\n      })),\n    }, { validator: this.inconsistentDataType()});\n\n    this.addMissing(parameter, parameterForm, new DexihFunctionParameter());\n\n    return parameterForm;\n  }\n\n  public datalinkFunctionArrayParametersFormGroup(parameter: DexihFunctionArrayParameter): FormGroup {\n    const parameterForm = this.fb.group({\n      // 'name': [, [ // used for adding new columns\n      // ]],\n      'datalinkColumn': parameter.datalinkColumn,\n      'runTime': parameter['runTime'],\n    }, { validator: this.inconsistentDataType()});\n\n    this.addMissing(parameter, parameterForm, new DexihFunctionArrayParameter());\n\n    return parameterForm;\n  }\n\n  inconsistentDataType(): ValidatorFn {\n    return (group: FormGroup): { [key: string]: any } => {\n      if (this.currentForm) {\n        const datalinkColumn = group.controls.datalinkColumn;\n        if (datalinkColumn && datalinkColumn.value) {\n          const dataType = datalinkColumn.value.dataType;\n          const parameterDataType = group.controls.dataType?.value;\n          if (dataType !== parameterDataType && parameterDataType !== eTypeCode.Unknown) {\n            datalinkColumn.setErrors({'dataType': { dataType }});\n            return { 'dataType': { dataType }};\n          } else {\n            datalinkColumn.setErrors(null);\n          }\n        }\n      }\n      return null;\n    };\n  }\n\n  public datalinkProfileFormGroup(profile: DexihDatalinkProfile): FormGroup {\n    const profileForm = this.fb.group({\n      'isValid': true\n    });\n\n    this.addMissing(profile, profileForm, new DexihDatalinkProfile());\n    return profileForm;\n  }\n\n  public datalinkTargetFormGroup(target: DexihDatalinkTarget, table: DexihTable = null): FormGroup {\n\n    if (!table && target.tableKey) {\n      table = this.hubCache.getTable(target.tableKey);\n    }\n    // if (!table) {\n    //   table = new DexihTable();\n    // }\n\n    const targetForm = this.fb.group({\n      'table': table ? this.tableForm(table) : null,\n      'runTime': {inputColumns: null},\n      'nodeDatalinkColumn': target.nodeDatalinkColumn ? target.nodeDatalinkColumn : null,\n      'isValid': true\n    });\n\n    this.addMissing(target, targetForm, new DexihDatalinkTarget());\n\n    let subscription = targetForm.controls.tableKey.valueChanges.subscribe(tableKey => {\n      if (tableKey > 0) {\n        table = this.hubCache.getTable(tableKey);\n        const tableForm = table ? this.tableForm(table) : null;\n        targetForm.setControl('table', tableForm);\n      }\n    });\n\n    this._datalinkTargetChanges.push(subscription);\n\n    return targetForm;\n  }\n\n\n  public sourceDatalinkTableFormGroup(datalinkTable: DexihDatalinkTable): FormGroup {\n    const form = this.fb.group({\n      'sourceType': [datalinkTable.sourceType, [\n        Validators.required,\n      ]],\n      'sourceTableKey': [datalinkTable.sourceTableKey, [\n      ]],\n      'sourceDatalinkKey': [datalinkTable.sourceDatalinkKey, [\n      ]],\n      'isValid': true,\n      'dexihDatalinkColumns': this.fb.array([]),\n    }, { validator: this.validateDatalinkTable() });\n\n    let tableColumnsForm = <FormArray>form.controls.dexihDatalinkColumns;\n    datalinkTable.dexihDatalinkColumns.filter(c => c.isValid).forEach(column => {\n      tableColumnsForm.push(this.datalinkTableColumn(tableColumnsForm.value, column));\n    });\n\n    this.addMissing(datalinkTable, form, new DexihDatalinkTable());\n    return form;\n  }\n\n  private validateDatalinkTable() {\n    return (group: FormGroup) => {\n      let sourceType = group.get('sourceType').value;\n      let sourceTableKey = group.get('sourceTableKey');\n      let sourceDatalinkKey = group.get('sourceDatalinkKey');\n\n      sourceTableKey.setErrors(null);\n      sourceDatalinkKey.setErrors(null);\n\n      if (sourceType === eSourceType.Table) {\n        if (!sourceTableKey.value) {\n          return sourceTableKey.setErrors({ required: true });\n        }\n      } else if (sourceType === eSourceType.Datalink) {\n        if (!sourceDatalinkKey.value) {\n          return sourceDatalinkKey.setErrors({ required: true });\n        }\n      }\n    };\n  }\n\n\n  datalink(datalink: DexihDatalink): void {\n    this.logger.LogC(() => `datalink key:${datalink.key} datalink:${datalink.name}`, eLogLevel.Debug);\n\n    this.clearFormSubscriptions();\n\n    let profiles = datalink.dexihDatalinkProfiles.filter(c => c.isValid).map(profile => {\n      return this.datalinkProfileFormGroup(profile);\n    });\n\n    let source = this.sourceDatalinkTableFormGroup(datalink.sourceDatalinkTable);\n\n    let targets = datalink.dexihDatalinkTargets.filter(c => c.isValid).map(target => {\n      return this.datalinkTargetFormGroup(target);\n    });\n\n    let transforms = datalink.dexihDatalinkTransforms.filter(c => c.isValid).map(transform => {\n      return this.datalinkTransformFormGroup(transform);\n    });\n\n    let parameters = datalink.parameters.filter(c => c.isValid).map(parameter => {\n      return this.parameter(parameter);\n    });\n\n\n    const datalinkForm = this.fb.group({\n      'name': [datalink.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateDatalinkNameValidator(datalink.key)\n      ]],\n      'sourceDatalinkTable': source,\n      'auditConnectionKey': [datalink.auditConnectionKey, [\n        // Validators.required,\n      ]],\n      'updateStrategy': [datalink.updateStrategy, [\n        // Validators.required,\n      ]],\n      'dexihDatalinkTransforms': this.fb.array(transforms),\n      'dexihDatalinkProfiles': this.fb.array(profiles),\n      'dexihDatalinkTargets': this.fb.array(targets),\n      'parameters': this.fb.array(parameters),\n      'isValid': true\n    });\n\n    let templateDatalink = new DexihDatalink();\n    templateDatalink.sourceDatalinkTable = new DexihDatalinkTable();\n    this.addMissing(datalink, datalinkForm, templateDatalink);\n\n    this.formGroupFunc = this.datalink;\n    this.saveMethod = 'SaveDatalink';\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.Datalink);\n    this.valueMethod = 'getDatalinkValue';\n\n    // whenever a source table, transform mapping, or target table changes update the input/output columns\n    // let listenControls = new Array<Observable<any>>();\n    // listenControls.push(source.controls.dexihDatalinkColumns.valueChanges);\n\n    // transforms.forEach(transform => {\n    //   listenControls.push(transform.valueChanges);\n    // });\n\n    // targets.forEach(target => {\n    //   const table = <FormGroup> target.controls.table;\n    //   listenControls.push(table.controls.dexihTableColumns.valueChanges);\n    // });\n\n    if (this._datalinkChangesSubscription1) { this._datalinkChangesSubscription1.unsubscribe(); }\n    this._datalinkChangesSubscription1 = datalinkForm.valueChanges.subscribe(() => {\n      this.updateTransformFormColumns(datalinkForm);\n    });\n    this.updateTransformFormColumns(datalinkForm);\n\n    this.watchChanges(eSharedObjectType.Datalink, 'key', 'datalink', this.datalink);\n    this.startForm(datalinkForm);\n  }\n\n  private duplicateDatalinkNameValidator(datalinkKey: number): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihDatalinks.findIndex(c =>\n          c.key !== datalinkKey && c.isValid && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  private updateTransformFormColumns(datalinkForm: FormGroup) {\n    if (this.IgnoreFormChange === false) {\n      this.IgnoreFormChange = true;\n      const transformsArray = <FormArray>datalinkForm.controls.dexihDatalinkTransforms;\n      const datalink = <DexihDatalink> datalinkForm.value;\n      const ioColumns = new InputOutputColumns();\n\n      ioColumns.buildInputOutput(datalink);\n\n      transformsArray.controls.forEach(transformFormControl => {\n        const datalinkTransformForm = <FormGroup>transformFormControl;\n        const datalinkTransform = datalinkTransformForm.value;\n\n        // const inputColumns = ioColumns.getInputColumns(this.hubCache, datalink, datalinkTransform, []);\n        // const outputColumns = ioColumns.getOutputColumns(this.hubCache, datalink, datalinkTransform);\n\n        const transform = datalink.dexihDatalinkTransforms.find(c => c.key === datalinkTransform.datalinkTransformKey);\n\n        datalinkTransformForm.controls.runTime.setValue(transform['runTime'], { emitEvent: false } );\n\n        const items = <FormArray>datalinkTransformForm.controls.dexihDatalinkTransformItems;\n        items.controls.forEach(item => {\n          const transformItemForm = <FormGroup>item;\n          if (transformItemForm.controls.targetDatalinkColumn) {\n            transformItemForm.controls.targetDatalinkColumn.updateValueAndValidity( {emitEvent: false});\n          }\n          if (transformItemForm.controls.sourceDatalinkColumn) {\n            transformItemForm.controls.sourceDatalinkColumn.updateValueAndValidity( {emitEvent: false});\n          }\n\n          const params = <FormArray>transformItemForm.controls.dexihFunctionParameters;\n          params.controls.forEach(param => {\n            const paramForm = <FormGroup>param;\n            if (paramForm.controls.datalinkColumn) {\n              paramForm.controls.datalinkColumn.updateValueAndValidity( {emitEvent: false} );\n            }\n          });\n        });\n      });\n\n      const targetsArray = <FormArray>datalinkForm.controls.dexihDatalinkTargets;\n      targetsArray.controls.forEach((targetForm: FormGroup) => {\n        let target = datalink.dexihDatalinkTargets.find(c => c.key === targetForm.controls.key.value);\n        if (target) {\n          targetForm.controls.runTime.setValue(target['runTime'], {emitEvent: false});\n        }\n      });\n\n      this.IgnoreFormChange = false;\n    }\n  }\n}\n","<div [routerLink]=\"['connection-edit', connection.key]\" queryParamsHandling=\"merge\">\n    <h5>{{connection.name}}</h5>\n    <div *ngIf=\"connection.description\">\n        <markdown [data]=\"connection.description\"></markdown>\n    </div>\n    <div class=\"note\">{{connectionReference?.name}} / {{eConnectionPurpose[connection.purpose]}} / Updated: {{connection.updateDate | calendar }} </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { DexihConnection, ConnectionReference, eConnectionPurpose } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'connection-view',\n    templateUrl: './connection-view.component.html'\n})\n\nexport class ConnectionViewComponent implements OnInit {\n    @Input() connection: DexihConnection;\n\n    connectionReference: ConnectionReference;\n    eConnectionPurpose = eConnectionPurpose;\n\n    constructor(private hubService: HubService) {\n\n    }\n\n    ngOnInit() {\n        this.hubService.getRemoteLibrariesObservable().subscribe(async remoteLibraries => {\n            if ( remoteLibraries ) {\n                this.connectionReference = await this.hubService.GetConnectionReference(this.connection);\n            }\n        })\n    }\n}\n","import { AbstractControl, FormGroup, FormArray } from '@angular/forms';\n\nexport class DexihFormErrorsModule {\n\n    public static createErrorMessage(key: string, control: AbstractControl): string {\n        let message = '';\n        switch (key) {\n            case 'minlength':\n                message = 'Value is ' +\n                    control.errors.minlength.actualLength +\n                    ' characters long, required minimum length is '\n                    + control.errors.minlength.requiredLength + ' characters.';\n                break;\n            case 'maxlength':\n                message = 'Value is ' +\n                    control.errors.maxlength.actualLength +\n                    ' characters long, required maximum length is '\n                    + control.errors.maxlength.requiredLength + ' characters.';\n                break;\n            case 'maxvalue':\n                message = 'Value is ' +\n                    control.value +\n                    ' required maximum is '\n                    + control.errors.maxvalue.requiredValue + '.';\n                break;\n            case 'minvalue':\n                message = 'Value is ' +\n                    control.value +\n                    ' required minimum is '\n                    + control.errors.minvalue.requiredValue + '.';\n                break;\n            case 'required':\n                message = 'A value is required.';\n                break;\n            case 'dataType':\n                message = 'There is a datatype mismatch.';\n                break;\n            default:\n                message = 'Field error: ' + key;\n        }\n        return message;\n    }\n    \n}","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HubService } from './hub.service';\nimport { Routing } from './hub.routing';\nimport { SharedModule } from '../shared/shared.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HubSharedModule} from './hub.shared.module';\n\nimport { HubComponent } from './hub.component';\nimport { SummaryComponent } from './summary';\nimport { ItemEditGuard } from './item-edit.guard';\n\n@NgModule({\n    imports: [\n        SharedModule,\n        Routing,\n        ReactiveFormsModule,\n        HubSharedModule,\n    ],\n    declarations: [\n        HubComponent,\n        SummaryComponent,\n    ],\n    providers: [ ItemEditGuard ],\n    exports: [ ]\n})\nexport class HubModule {\n\n    static forRoot(): ModuleWithProviders<HubModule> {\n        return {\n            ngModule: HubModule,\n            providers: [HubService, ItemEditGuard]\n        };\n    }\n}\n","import { ChartDataSets } from 'chart.js';\nimport { Label } from 'ng2-charts';\nimport { eChartType } from '../../shared.models';\n\nexport enum eInputFormat {\n    SingleSeries,\n    MultiSeries,\n    ComboSeries,\n    InverseSeries,\n    Xy,\n    XyMinMax,\n    XyBubble,\n //   GeoCoordinates\n}\n\nexport const inputFormats = [\n{key: eInputFormat.SingleSeries, allowLabel: true, maxSeries: 1, allowYSeries: false,\n    allowMinMax: false, allowBubble: false, inverse: false },\n{key: eInputFormat.MultiSeries, allowLabel: true, maxSeries: 10, allowYSeries: false,\n    allowMinMax: false, allowBubble: false, inverse: false },\n{key: eInputFormat.ComboSeries, allowLabel: true, maxSeries: 10, allowYSeries: false,\n    allowMinMax: false, allowBubble: false, inverse: false },\n{key: eInputFormat.InverseSeries, allowLabel: true, maxSeries: 10, allowYSeries: false,\n    allowMinMax: false, allowBubble: false, inverse: true },\n{key: eInputFormat.Xy, allowLabel: false, maxSeries: 1, allowYSeries: true,\n    allowMinMax: false, allowBubble: false, inverse: false },\n{key: eInputFormat.XyMinMax, allowLabel: false, maxSeries: 1, allowYSeries: true,\n    allowMinMax: true, allowBubble: false, inverse: false },\n{key: eInputFormat.XyBubble, allowLabel: false, maxSeries: 1, allowYSeries: true,\n    allowMinMax: false, allowBubble: true, inverse: false },\n]\n\n\nexport class ChartItem {\n    public name: string;\n    public labels: Label[];\n    public dataSets: ChartDataSets[];\n    public data: ChartDataSets[];\n}\n\nexport class ChartType {\n    public key: eChartType;\n    public name: string;\n    public type: string;\n    public inputFormat: eInputFormat;\n    public isHorizontal = false;\n    public allowGradient = true;\n    public allowLegend = true;\n    public allowXAxis = true;\n    public allowYAxis = true;\n    public allowXScaleMin = false;\n    public allowXScaleMax = false;\n    public allowYScaleMin = true;\n    public allowYScaleMax = true;\n    public allowLabels = true;\n    public allowExplodeSlices = false;\n    public allowDoughnut = false;\n    public allowGridLines = true;\n    public defaultShowXAxisLabel = true;\n    public defaultShowYAxisLabel = true;\n    public defaultShowXAxis = true;\n    public defaultShowYAxis = true;\n    public defaultShowGridLines = true;\n    public defaultColorScheme = 'natural';\n    public defaultShowLegend = false;\n    public defaultShowLabels = false;\n    public isBar = true;\n}\n\nexport const ChartTypes = [\n    {\n        name: 'Bar Charts',\n        charts: [\n            {\n                key: eChartType.BarVertical, name: 'Vertical Bar Chart',\n                type: 'bar',\n                inputFormat: eInputFormat.MultiSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: true,\n                allowYScaleMax: true,\n                allowLabels: true,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                defaultShowLabels: false,\n                isBar: true,\n                isLine: true\n            },\n            {\n                key: eChartType.BarHorizontal, name: 'Horizontal Bar Chart',\n                type: 'horizontalBar',\n                inputFormat: eInputFormat.MultiSeries,\n                isHorizontal: true,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: true,\n                allowXScaleMax: true,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: true,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                defaultShowLabels: false,\n                isBar: true,\n                isLine: false\n            },\n            // {\n            //     key: eChartType.BarVertical2D, name: 'Vertical Bar Chart (MultiSeries)',\n            //     type: 'bar',\n            //     inputFormat: eInputFormat.MultiSeries,\n            //     isHorizontal: false,\n            //     allowGradient: true,\n            //     allowLegend: true,\n            //     allowXAxis: true,\n            //     allowYAxis: true,\n            //     allowXScaleMin: false,\n            //     allowXScaleMax: false,\n            //     allowYScaleMin: false,\n            //     allowYScaleMax: true,\n            //     allowLabels: false,\n            //     allowExplodeSlices: false,\n            //     allowDoughnut: false,\n            //     allowGridLines: true,\n            //     defaultShowXAxisLabel: true,\n            //     defaultShowYAxisLabel: true,\n            //     defaultShowXAxis: true,\n            //     defaultShowYAxis: true,\n            //     defaultShowGridLines: true,\n            //     defaultColorScheme: 'natural',\n            //     defaultShowLegend: false,\n            //     isBar: true\n            // },\n            // {\n            //     key: eChartType.BarHorizontal2D, name: 'Horizontal Bar Chart (MultiSeries)',\n            //     type: 'horizontalBar',\n            //     inputFormat: eInputFormat.MultiSeries,\n            //     isHorizontal: true,\n            //     allowGradient: true,\n            //     allowLegend: true,\n            //     allowXAxis: true,\n            //     allowYAxis: true,\n            //     allowXScaleMin: false,\n            //     allowXScaleMax: true,\n            //     allowYScaleMin: false,\n            //     allowYScaleMax: false,\n            //     allowLabels: false,\n            //     allowExplodeSlices: false,\n            //     allowDoughnut: false,\n            //     allowGridLines: true,\n            //     defaultShowXAxisLabel: true,\n            //     defaultShowYAxisLabel: true,\n            //     defaultShowXAxis: true,\n            //     defaultShowYAxis: true,\n            //     defaultShowGridLines: true,\n            //     defaultColorScheme: 'natural',\n            //     defaultShowLegend: false,\n            //     isBar: true\n            // },\n            // {\n            //     key: eChartType.BarVerticalStacked, name: 'Vertical Stacked Bar Chart',\n            //     inputFormat: eInputFormat.MultiSeries,\n            //     isHorizontal: false,\n            //     allowGradient: true,\n            //     allowLegend: true,\n            //     allowXAxis: true,\n            //     allowYAxis: true,\n            //     allowXScaleMin: false,\n            //     allowXScaleMax: false,\n            //     allowYScaleMin: false,\n            //     allowYScaleMax: true,\n            //     allowLabels: false,\n            //     allowExplodeSlices: false,\n            //     allowDoughnut: false,\n            //     allowGridLines: true,\n            //     defaultShowXAxisLabel: true,\n            //     defaultShowYAxisLabel: true,\n            //     defaultShowXAxis: true,\n            //     defaultShowYAxis: true,\n            //     defaultShowGridLines: true,\n            //     defaultColorScheme: 'natural',\n            //     defaultShowLegend: false,\n            //     isBar: true\n            // },\n            // {\n            //     key: eChartType.BarHorizontalStacked, name: 'Horizontal Stacked Bar Chart',\n            //     inputFormat: eInputFormat.MultiSeries,\n            //     isHorizontal: true,\n            //     allowGradient: true,\n            //     allowLegend: true,\n            //     allowXAxis: true,\n            //     allowYAxis: true,\n            //     allowXScaleMin: false,\n            //     allowXScaleMax: true,\n            //     allowYScaleMin: false,\n            //     allowYScaleMax: false,\n            //     allowLabels: false,\n            //     allowExplodeSlices: false,\n            //     allowDoughnut: false,\n            //     allowGridLines: true,\n            //     defaultShowXAxisLabel: true,\n            //     defaultShowYAxisLabel: true,\n            //     defaultShowXAxis: true,\n            //     defaultShowYAxis: true,\n            //     defaultShowGridLines: true,\n            //     defaultColorScheme: 'natural',\n            //     defaultShowLegend: false,\n            //     isBar: true\n            // },\n            // {\n            //     key: eChartType.BarVerticalNormalized, name: 'Vertical Normalized Bar Chart',\n            //     inputFormat: eInputFormat.MultiSeries,\n            //     isHorizontal: false,\n            //     allowGradient: true,\n            //     allowLegend: true,\n            //     allowXAxis: true,\n            //     allowYAxis: true,\n            //     allowXScaleMin: false,\n            //     allowXScaleMax: false,\n            //     allowYScaleMin: false,\n            //     allowYScaleMax: false,\n            //     allowLabels: false,\n            //     allowExplodeSlices: false,\n            //     allowDoughnut: false,\n            //     allowGridLines: true,\n            //     defaultShowXAxisLabel: true,\n            //     defaultShowYAxisLabel: true,\n            //     defaultShowXAxis: true,\n            //     defaultShowYAxis: true,\n            //     defaultShowGridLines: true,\n            //     defaultColorScheme: 'natural',\n            //     defaultShowLegend: false,\n            //     isBar: true\n            // },\n            // {\n            //     key: eChartType.BarHorizontalNormalized, name: 'Horizontal Normalized Bar Chart',\n            //     inputFormat: eInputFormat.MultiSeries,\n            //     isHorizontal: true,\n            //     allowGradient: true,\n            //     allowLegend: true,\n            //     allowXAxis: true,\n            //     allowYAxis: true,\n            //     allowXScaleMin: false,\n            //     allowXScaleMax: false,\n            //     allowYScaleMin: false,\n            //     allowYScaleMax: false,\n            //     allowLabels: false,\n            //     allowExplodeSlices: false,\n            //     allowDoughnut: false,\n            //     allowGridLines: true,\n            //     defaultShowXAxisLabel: true,\n            //     defaultShowYAxisLabel: true,\n            //     defaultShowXAxis: true,\n            //     defaultShowYAxis: true,\n            //     defaultShowGridLines: true,\n            //     defaultColorScheme: 'natural',\n            //     defaultShowLegend: false,\n            //     isBar: true\n            // },\n        ]\n    },\n    {\n        name: 'Pie Charts',\n        charts: [\n            {\n                key: eChartType.Pie, name: 'Pie Chart',\n                type:'pie',\n                inputFormat: eInputFormat.MultiSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: false,\n                allowYAxis: false,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: true,\n                allowExplodeSlices: true,\n                allowDoughnut: true,\n                allowGridLines: false,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                defaultShowLabels: true,\n                isBar: false,\n                isLine: false\n            },\n            // {\n            //     key: eChartType.Pie, name: 'Doughnut',\n            //     type:'doughnut',\n            //     inputFormat: eInputFormat.MultiSeries,\n            //     isHorizontal: false,\n            //     allowGradient: true,\n            //     allowLegend: true,\n            //     allowXAxis: false,\n            //     allowYAxis: false,\n            //     allowXScaleMin: false,\n            //     allowXScaleMax: false,\n            //     allowYScaleMin: false,\n            //     allowYScaleMax: false,\n            //     allowLabels: true,\n            //     allowExplodeSlices: true,\n            //     allowDoughnut: true,\n            //     allowGridLines: false,\n            //     defaultShowXAxisLabel: true,\n            //     defaultShowYAxisLabel: true,\n            //     defaultShowXAxis: true,\n            //     defaultShowYAxis: true,\n            //     defaultShowGridLines: true,\n            //     defaultColorScheme: 'natural',\n            //     defaultShowLegend: false,\n            //     isBar: false\n            // },\n            // {\n            //     key: eChartType.PieAdvanced, name: 'Pie Chart (Advanced)',\n            //     inputFormat: eInputFormat.SingleSeries,\n            //     isHorizontal: false,\n            //     allowGradient: true,\n            //     allowLegend: false,\n            //     allowXAxis: false,\n            //     allowYAxis: false,\n            //     allowXScaleMin: false,\n            //     allowXScaleMax: false,\n            //     allowYScaleMin: false,\n            //     allowYScaleMax: false,\n            //     allowLabels: false,\n            //     allowExplodeSlices: false,\n            //     allowDoughnut: false,\n            //     allowGridLines: false,\n            //     defaultShowXAxisLabel: true,\n            //     defaultShowYAxisLabel: true,\n            //     defaultShowXAxis: true,\n            //     defaultShowYAxis: true,\n            //     defaultShowGridLines: true,\n            //     defaultColorScheme: 'natural',\n            //     defaultShowLegend: false,\n            //     isBar: false\n            // },\n            // {\n            //     key: eChartType.PieGrid, name: 'Pie Chart (Grid)',\n            //     inputFormat: eInputFormat.SingleSeries,\n            //     isHorizontal: false,\n            //     allowGradient: false,\n            //     allowLegend: false,\n            //     allowXAxis: false,\n            //     allowYAxis: false,\n            //     allowXScaleMin: false,\n            //     allowXScaleMax: false,\n            //     allowYScaleMin: false,\n            //     allowYScaleMax: false,\n            //     allowLabels: false,\n            //     allowExplodeSlices: false,\n            //     allowDoughnut: false,\n            //     allowGridLines: false,\n            //     defaultShowXAxisLabel: true,\n            //     defaultShowYAxisLabel: true,\n            //     defaultShowXAxis: true,\n            //     defaultShowYAxis: true,\n            //     defaultShowGridLines: true,\n            //     defaultColorScheme: 'natural',\n            //     defaultShowLegend: false,\n            //     isBar: false\n            // },\n        ]\n    },\n    {\n        name: 'Line/Area Charts',\n        charts: [\n            {\n                key: eChartType.Line, name: 'Line Chart',\n                type: 'line',\n                inputFormat: eInputFormat.MultiSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: true,\n                allowYScaleMax: true,\n                allowLabels: true,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowFill: true,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                defaultShowLabels: false,\n                isBar: false,\n                isLine: true\n            },\n            // {\n            //     key: eChartType.Area, name: 'Area Chart',\n            //     inputFormat: eInputFormat.InverseSeries,\n            //     isHorizontal: false,\n            //     allowGradient: true,\n            //     allowLegend: true,\n            //     allowXAxis: true,\n            //     allowYAxis: true,\n            //     allowXScaleMin: false,\n            //     allowXScaleMax: false,\n            //     allowYScaleMin: true,\n            //     allowYScaleMax: true,\n            //     allowLabels: false,\n            //     allowExplodeSlices: false,\n            //     allowDoughnut: false,\n            //     allowGridLines: true,\n            //     defaultShowXAxisLabel: true,\n            //     defaultShowYAxisLabel: true,\n            //     defaultShowXAxis: true,\n            //     defaultShowYAxis: true,\n            //     defaultShowGridLines: true,\n            //     defaultColorScheme: 'natural',\n            //     defaultShowLegend: false,\n            //     isBar: false\n            // },\n            {\n                key: eChartType.Polar, name: 'Polar Area Chart',\n                type: 'polarArea',\n                inputFormat: eInputFormat.MultiSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: false,\n                allowYAxis: false,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: true,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowFill: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                defaultShowLabels: true,\n                isBar: false,\n                isLine: false\n            },\n            {\n                key: eChartType.Radar, name: 'Radar Chart',\n                type: 'radar',\n                inputFormat: eInputFormat.MultiSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: false,\n                allowYAxis: false,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: true,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowFill: true,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                defaultShowLabels: true,\n                isBar: false,\n                isLine: false\n            },\n            // {\n            //     key: eChartType.AreaStacked, name: 'Area Stacked Chart',\n            //     inputFormat: eInputFormat.InverseSeries,\n            //     isHorizontal: false,\n            //     allowGradient: true,\n            //     allowLegend: true,\n            //     allowXAxis: true,\n            //     allowYAxis: true,\n            //     allowXScaleMin: true,\n            //     allowXScaleMax: true,\n            //     allowYScaleMin: false,\n            //     allowYScaleMax: false,\n            //     allowLabels: false,\n            //     allowExplodeSlices: false,\n            //     allowDoughnut: false,\n            //     allowGridLines: true,\n            //     defaultShowXAxisLabel: true,\n            //     defaultShowYAxisLabel: true,\n            //     defaultShowXAxis: true,\n            //     defaultShowYAxis: true,\n            //     defaultShowGridLines: true,\n            //     defaultColorScheme: 'natural',\n            //     defaultShowLegend: false,\n            //     isBar: false\n            // },\n            // {\n            //     key: eChartType.AreaNormalized, name: 'Area Normalized Chart',\n            //     inputFormat: eInputFormat.InverseSeries,\n            //     isHorizontal: false,\n            //     allowGradient: true,\n            //     allowLegend: true,\n            //     allowXAxis: true,\n            //     allowYAxis: true,\n            //     allowXScaleMin: false,\n            //     allowXScaleMax: false,\n            //     allowYScaleMin: false,\n            //     allowYScaleMax: false,\n            //     allowLabels: false,\n            //     allowExplodeSlices: false,\n            //     allowDoughnut: false,\n            //     allowGridLines: true,\n            //     defaultShowXAxisLabel: true,\n            //     defaultShowYAxisLabel: true,\n            //     defaultShowXAxis: true,\n            //     defaultShowYAxis: true,\n            //     defaultShowGridLines: true,\n            //     defaultColorScheme: 'natural',\n            //     defaultShowLegend: false,\n            //     isBar: false\n            // },\n        ]\n    },\n    {\n        name: 'X-Y Charts',\n        charts: [\n            {\n                key: eChartType.Scatter, name: 'X-Y Scatter Chart',\n                type: 'scatter',\n                inputFormat: eInputFormat.Xy,\n                isHorizontal: false,\n                allowGradient: false,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: true,\n                allowXScaleMax: true,\n                allowYScaleMin: true,\n                allowYScaleMax: true,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                defaultShowLabels: false,\n                isBar: false,\n                isLine: false\n            },\n            {\n                key: eChartType.Error, name: 'X-Y Error Chart',\n                inputFormat: eInputFormat.XyMinMax,\n                isHorizontal: false,\n                allowGradient: false,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: true,\n                allowXScaleMax: true,\n                allowYScaleMin: true,\n                allowYScaleMax: true,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                defaultShowLabels: false,\n                isBar: false,\n                isLine: false\n            },\n            {\n                key: eChartType.Bubble, name: 'X-Y Bubble Chart',\n                type: 'bubble',\n                inputFormat: eInputFormat.XyBubble,\n                isHorizontal: false,\n                allowGradient: false,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: true,\n                allowXScaleMax: true,\n                allowYScaleMin: true,\n                allowYScaleMax: true,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                defaultShowLabels: false,\n                isBar: false,\n                isLine: false\n            },\n        ]\n    },\n    {\n        name: 'Other',\n        charts: [\n            // {\n            //     key: eChartType.BarLineCombo, name: 'Bar/Line Combo Chart',\n            //     type: 'bar',\n            //     inputFormat: eInputFormat.ComboSeries,\n            //     isHorizontal: false,\n            //     allowGradient: true,\n            //     allowLegend: true,\n            //     allowXAxis: true,\n            //     allowYAxis: true,\n            //     allowXScaleMin: false,\n            //     allowXScaleMax: false,\n            //     allowYScaleMin: false,\n            //     allowYScaleMax: false,\n            //     allowLabels: false,\n            //     allowExplodeSlices: false,\n            //     allowDoughnut: false,\n            //     allowGridLines: true,\n            //     defaultShowXAxisLabel: true,\n            //     defaultShowYAxisLabel: true,\n            //     defaultShowXAxis: true,\n            //     defaultShowYAxis: true,\n            //     defaultShowGridLines: true,\n            //     defaultColorScheme: 'natural',\n            //     defaultShowLegend: false,\n            //     defaultShowLabels: false,\n            //     isBar: true\n            // },\n            // {\n            //     key: eChartType.HeatMap, name: 'Heat Map',\n            //     inputFormat: eInputFormat.MultiSeries,\n            //     isHorizontal: false,\n            //     allowGradient: true,\n            //     allowLegend: true,\n            //     allowXAxis: true,\n            //     allowYAxis: true,\n            //     allowXScaleMin: true,\n            //     allowXScaleMax: true,\n            //     allowYScaleMin: false,\n            //     allowYScaleMax: false,\n            //     allowLabels: false,\n            //     allowExplodeSlices: false,\n            //     allowDoughnut: false,\n            //     allowGridLines: false,\n            //     defaultShowXAxisLabel: true,\n            //     defaultShowYAxisLabel: false,\n            //     defaultShowXAxis: true,\n            //     defaultShowYAxis: true,\n            //     defaultShowGridLines: true,\n            //     defaultColorScheme: 'flame',\n            //     defaultShowLegend: true,\n            //     isBar: false\n            // },\n            // {\n            //     key: eChartType.TreeMap, name: 'Tree Map',\n            //     inputFormat: eInputFormat.SingleSeries,\n            //     isHorizontal: false,\n            //     allowGradient: true,\n            //     allowLegend: false,\n            //     allowXAxis: false,\n            //     allowYAxis: false,\n            //     allowXScaleMin: false,\n            //     allowXScaleMax: false,\n            //     allowYScaleMin: false,\n            //     allowYScaleMax: false,\n            //     allowLabels: false,\n            //     allowExplodeSlices: false,\n            //     allowDoughnut: false,\n            //     allowGridLines: true,\n            //     defaultShowXAxisLabel: true,\n            //     defaultShowYAxisLabel: true,\n            //     defaultShowXAxis: true,\n            //     defaultShowYAxis: true,\n            //     defaultShowGridLines: true,\n            //     defaultColorScheme: 'natural',\n            //     defaultShowLegend: false,\n            //     isBar: false\n            // },\n            // {\n            //     key: eChartType.Cards, name: 'Number Cards',\n            //     inputFormat: eInputFormat.SingleSeries,\n            //     isHorizontal: false,\n            //     allowGradient: false,\n            //     allowLegend: false,\n            //     allowXAxis: false,\n            //     allowYAxis: false,\n            //     allowXScaleMin: false,\n            //     allowXScaleMax: false,\n            //     allowYScaleMin: false,\n            //     allowYScaleMax: false,\n            //     allowLabels: false,\n            //     allowExplodeSlices: false,\n            //     allowDoughnut: false,\n            //     allowGridLines: false,\n            //     defaultShowXAxisLabel: true,\n            //     defaultShowYAxisLabel: true,\n            //     defaultShowXAxis: true,\n            //     defaultShowYAxis: true,\n            //     defaultShowGridLines: true,\n            //     defaultColorScheme: 'natural',\n            //     defaultShowLegend: false,\n            //     isBar: false\n            // },\n            // {\n            //     key: eChartType.Gauge, name: 'Gauge',\n            //     inputFormat: eInputFormat.SingleSeries,\n            //     isHorizontal: false,\n            //     allowGradient: false,\n            //     allowLegend: true,\n            //     allowXAxis: true,\n            //     allowYAxis: false,\n            //     allowXScaleMin: true,\n            //     allowXScaleMax: true,\n            //     allowYScaleMin: false,\n            //     allowYScaleMax: false,\n            //     allowLabels: false,\n            //     allowExplodeSlices: false,\n            //     allowDoughnut: false,\n            //     allowGridLines: false,\n            //     defaultShowXAxisLabel: true,\n            //     defaultShowYAxisLabel: true,\n            //     defaultShowXAxis: true,\n            //     defaultShowYAxis: true,\n            //     defaultShowGridLines: true,\n            //     defaultColorScheme: 'natural',\n            //     defaultShowLegend: true,\n            //     isBar: false\n            // },\n            // {\n            //     key: eChartType.LinearGauge, name: 'Linear Gauge',\n            //     inputFormat: eInputFormat.SingleSeries,\n            //     isHorizontal: false,\n            //     allowGradient: false,\n            //     allowLegend: true,\n            //     allowXAxis: true,\n            //     allowYAxis: false,\n            //     allowXScaleMin: true,\n            //     allowXScaleMax: true,\n            //     allowYScaleMin: false,\n            //     allowYScaleMax: false,\n            //     allowLabels: false,\n            //     allowExplodeSlices: false,\n            //     allowDoughnut: false,\n            //     allowGridLines: false,\n            //     defaultShowXAxisLabel: true,\n            //     defaultShowYAxisLabel: true,\n            //     defaultShowXAxis: true,\n            //     defaultShowYAxis: true,\n            //     defaultShowGridLines: true,\n            //     defaultColorScheme: 'natural',\n            //     defaultShowLegend: true,\n            //     isBar: false\n            // },\n            // {\n            //     key: eChartType.Map, name: 'Google Map',\n            //     inputFormat: eInputFormat.GeoCoordinates,\n            //     isHorizontal: false,\n            //     allowGradient: false,\n            //     allowLegend: false,\n            //     allowXAxis: false,\n            //     allowYAxis: false,\n            //     allowXScaleMin: false,\n            //     allowXScaleMax: false,\n            //     allowYScaleMin: false,\n            //     allowYScaleMax: false,\n            //     allowLabels: false,\n            //     allowExplodeSlices: false,\n            //     allowDoughnut: false,\n            //     allowGridLines: false,\n            //     defaultShowXAxisLabel: false,\n            //     defaultShowYAxisLabel: false,\n            //     defaultShowXAxis: false,\n            //     defaultShowYAxis: false,\n            //     defaultShowGridLines: false,\n            //     defaultColorScheme: 'natural',\n            //     defaultShowLegend: false,\n            //     isBar: false,\n            //     isLine: false\n            // },\n\n        ]\n    }\n]\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n    selector: 'new-datalink-button',\n    templateUrl: './new-datalink-button.component.html'\n})\n\nexport class NewDatalinkButtonComponent implements OnInit {\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<d-button-new [routerLink]=\"['datalink-edit', 'new']\"></d-button-new>\n","import { Component, OnInit, Input, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { DexihListOfValues, InputParameterBase, eDataObjectType, ListOfValuesItem } from '../../../shared.models';\nimport { Subscription, Observable } from 'rxjs';\nimport { CancelToken } from '../../../../+auth/auth.models';\nimport { AuthService } from '../../../../+auth/auth.service';\n\n@Component({\n    selector: 'input-parameters-view',\n    templateUrl: 'input-parameters-view.component.html'\n})\nexport class InputParametersViewComponent implements OnInit, OnDestroy {\n    @Input() hubKey: number;\n    @Input() objectType: eDataObjectType;\n    @Input() objectKey: number;\n    @Input() parameters: InputParameterBase[];\n    @Input() refreshEvent: Observable<void>;\n    @Output() onChange = new EventEmitter();\n    @Output() onRefreshData = new EventEmitter();\n\n    private _hubSubscription: Subscription;\n    private _refreshSubscription: Subscription;\n\n    public parentParams: string[] = [];\n    public values: ListOfValuesItem[] = [];\n    public listOfValues: Array<DexihListOfValues>;\n\n    public cancelToken: CancelToken = new CancelToken();\n\n    public userParameters: InputParameterBase[];\n\n    public requiresRefresh = false;\n\n    public showRefresh = false;\n    public isRefreshing = false;\n\n    constructor(private authService: AuthService) { }\n\n    ngOnInit() {\n        this.userParameters = [];\n        this.parameters.filter(c => c.isValid && c.allowUserSelect).forEach((parameter: InputParameterBase) => {\n            parameter['runTime'] = {showRefresh: parameter.listOfValuesKey > 0, isRefreshing: false, items: []};\n            if (parameter.value && parameter.listOfValuesKey && parameter.rank === 0) {\n                parameter['runTime'].items = [{key: parameter.value, name: parameter.valueDesc}];\n            }\n\n            this.userParameters.push(parameter);\n        });\n\n        this._refreshSubscription = this.refreshEvent.subscribe(() => {\n            this.requiresRefresh = false;\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._hubSubscription) { this._hubSubscription.unsubscribe(); }\n        if (this._refreshSubscription) { this._refreshSubscription.unsubscribe(); }\n    }\n\n    refresh(parameter: InputParameterBase) {\n        if (!parameter.listOfValuesKey) { return; }\n        parameter['runTime'].isRefreshing = true;\n        this.authService.previewListOfValues(this.hubKey, this.objectKey, this.objectType,\n            parameter.name, false, this.cancelToken).then(result => {\n            parameter['runTime'].items = result;\n            parameter['runTime'].showRefresh = false;\n        }).catch(reason => {\n            this.authService.addUpdateNotification(reason, false);\n        }).finally(() => {\n            parameter['runTime'].isRefreshing = false;\n        });\n    }\n\n    refreshData() {\n        this.onRefreshData.emit();\n    }\n\n    change(parameter: InputParameterBase) {\n        if (parameter.listOfValuesKey > 0) {\n            this.onChange.emit();\n        } else {\n            this.requiresRefresh = true;\n        }\n    }\n}\n","<div *ngIf=\"parameters\" class=\"d-flex flex-wrap\">\n    <div *ngFor=\"let parameter of userParameters; let i = index\" class=\"pr-1\">\n        <form-select *ngIf=\"parameter.listOfValuesKey > 0\" [labelLeft]=\"parameter.name\" [(ngModel)]=\"parameter.value\"\n            itemKey=\"key\" itemName=\"name\" [items]=\"parameter['runTime'].items\"\n            [enableTextEntry]=\"! (parameter.listOfValuesKey > 0)\" [textEntryItems]=\"parentParams\"\n            textEntryItemsTitle=\"Linked Parameters\" (ngModelChange)=\"change(parameter)\"\n            [showRefresh]=\"parameter['runTime'].showRefresh\" [isRefreshing]=\"parameter['runTime'].isRefreshing\"\n            (refreshed)=\"refresh(parameter)\" [multiSelect]=\"parameter.rank === 1\">\n        </form-select>\n        <form-input *ngIf=\"!( parameter.listOfValuesKey > 0)\" [labelLeft]=\"parameter.name\" [(ngModel)]=\"parameter.value\"\n            (ngModelChange)=\"change(parameter)\">\n        </form-input>\n    </div>\n</div>\n<div *ngIf=\"requiresRefresh\" class=\"alert alert-warning mt-2\">\n    <a href=\"javascript:void(0)\" class=\"alert-link\" (click)=\"refreshData()\">The parameters have changed. Click to\n        refresh.</a>\n</div>\n","import { Component, OnInit, Input, OnChanges, OnDestroy,\n    SimpleChanges, ViewChildren } from '@angular/core';\nimport { eInputFormat, ChartTypes, ChartItem } from '../chart-groups';\nimport { colorSets } from '../chart-colors';\nimport { Subscription, Observable } from 'rxjs';\nimport { ChartConfig, ChartSeries, eChartType, eLineCurve } from '../../../shared.models';\nimport { Functions } from '../../../utils/functions';\nimport { BaseChartDirective, Label } from 'ng2-charts';\nimport { ChartDataSets, ChartOptions, PositionType } from 'chart.js';\nimport { QueryList } from '@angular/core';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n    selector: 'chart-view',\n    templateUrl: 'chart-view.component.html',\n    styleUrls: ['./chart-view.component.scss']\n})\n\nexport class ChartViewComponent implements OnInit, OnDestroy, OnChanges {\n    @Input() config: ChartConfig;\n    @Input() columns: any[];\n    @Input() data: Array<any>;\n    @Input() updateDataEvent: Observable<void>;\n    @Input() updateOptionsEvent: Observable<void>;\n    @Input() responsive = false;\n\n    @ViewChildren(BaseChartDirective) charts: QueryList<BaseChartDirective>;\n\n    public gridColumnIndex: any = null;\n    public labelColumnIndex: any = null;\n    public seriesPivotIndex: any = null;\n    public seriesColumnsIndex: {column, config: ChartSeries}[] = [];\n    public xColumnIndex: any = null;\n    public yColumnIndex: any = null;\n    public minColumnIndex: any = null;\n    public maxColumnIndex: any = null;\n    public radiusColumnIndex: any = null;\n    public latitudeColumnIndex: any = null;\n    public longitudeColumnIndex: any = null;\n\n    eChartType = eChartType;\n    eInputFormat = eInputFormat;\n    chartTypes = ChartTypes;\n\n    resultArray: ChartItem[];\n\n    chartType: any;\n    colorSets = colorSets;\n\n    customColors = [];\n    colorIndex = 0;\n    labelColors = {};\n\n    view: any;\n\n    public chartOptions: ChartOptions;\n\n    private _updateChartSubscription: Subscription;\n    private _updateOptionsSubscription: Subscription;\n\n\n    constructor() {\n    }\n\n    ngOnInit() {\n        this.getChartType();\n\n        if (this.updateDataEvent) {\n            this._updateChartSubscription = this.updateDataEvent.pipe(debounceTime(1000)).subscribe(() => {\n                this.ngOnChanges(null);\n            });\n\n            this._updateOptionsSubscription = this.updateOptionsEvent.pipe(debounceTime(1000)).subscribe(() => {\n                this.getChartType();\n                this.updateChartLayout();\n                this.updateChartOptions();\n                if (this.charts) {\n                    for(const chart of this.charts) {\n                        (<any>chart).refresh(); // workaround https://github.com/valor-software/ng2-charts/issues/547\n                    }\n                }\n            });\n\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this._updateChartSubscription) { this._updateChartSubscription.unsubscribe(); }\n        if (this._updateOptionsSubscription) { this._updateOptionsSubscription.unsubscribe(); }\n    }\n\n    ngOnChanges(simpleChanges: SimpleChanges) {\n        if (this.columns) {\n            this.gridColumnIndex = this.getColumnIndex(this.config.multiGridColumn);\n            this.labelColumnIndex = this.getColumnIndex(this.config.labelColumn);\n            // this.seriesColumnIndex = this.getColumnIndex(this.config.seriesColumn);\n            this.seriesPivotIndex = this.getColumnIndex(this.config.pivotColumn);\n            this.xColumnIndex = this.getColumnIndex(this.config.xColumn);\n            this.yColumnIndex = this.getColumnIndex(this.config.yColumn);\n            this.minColumnIndex = this.getColumnIndex(this.config.minColumn);\n            this.maxColumnIndex = this.getColumnIndex(this.config.maxColumn);\n            this.radiusColumnIndex = this.getColumnIndex(this.config.radiusColumn);\n            this.latitudeColumnIndex = this.getColumnIndex(this.config.latitudeColumn);\n            this.longitudeColumnIndex = this.getColumnIndex(this.config.longitudeColumn);\n\n            if (simpleChanges !== null) {\n                let keys = Object.keys(simpleChanges);\n                if (keys.length === 1 && keys[0] === 'data') {\n                    // do nothing\n                } else {\n                    this.customColors = [];\n                }\n            } else {\n                this.customColors = [];\n            }\n\n            if (this.config.seriesColumns) {\n                this.seriesColumnsIndex = [];\n                for (let i = 0; i < this.config.seriesColumns.length; i++) {\n                    let col = this.columns.find(c => c.title === this.config.seriesColumns[i].column);\n                    if (col) {\n                        this.seriesColumnsIndex.push({column: col, config: this.config.seriesColumns[i]});\n                    }\n                }\n            }\n\n            this.getChartType();\n            this.updateChart();\n            // this.view = [this.wrapper.nativeElement.clientWidth, this.wrapper.nativeElement.clientHeight];\n        }\n    }\n\n    trackChartChange(index: number, data: any) {\n        if (data && data[index]) {\n            return data[index].name;\n        }\n      }\n\n    getChartType() {\n        this.chartType = null;\n        ChartTypes.forEach(chartGroup => {\n            if (!this.chartType) {\n                this.chartType = chartGroup.charts.find(c => c.key === this.config.chartType);\n            }\n        });\n    }\n\n    getColumnTitle(index: number): string {\n        if (index >= 0) {\n            let col = this.columns[index];\n            if (col) {\n                return col.title;\n            }\n        }\n        return null;\n    }\n\n    getColumnIndex(title: string): number {\n        if (title) {\n            let index = this.columns.findIndex(c => c.title === title);\n            return index;\n        }\n        return null;\n    }\n\n    // sets the label to either x-series or y-series depending on whether horizontal/vertical chart.\n    setLabel(label: string) {\n        if (this.chartType.isHorizontal) {\n            this.config.yAxisLabel = label;\n        } else {\n            this.config.xAxisLabel = label;\n        }\n    }\n\n    setSeriesLabel(seriesLabel: string) {\n        if (this.chartType.isHorizontal) {\n            this.config.xAxisLabel = seriesLabel;\n        } else {\n            this.config.yAxisLabel = seriesLabel;\n        }\n    }\n\n    addCustomColor(label: string, changeColor = true) {\n        if ( this.customColors.findIndex(c => c.name === label) < 0) {\n            let colorSet;\n\n            if (this.config.colorScheme) {\n                colorSet = colorSets.find(c => c.name === this.config.colorScheme);\n            }\n            if (!colorSet) {\n                colorSet = colorSets[0];\n            }\n\n            let colors = colorSet.domain;\n\n            if (this.colorIndex >= colors.length) {\n                this.colorIndex = 0;\n            }\n\n            this.customColors.push({name: label, value: colors[this.colorIndex] });\n\n            if (changeColor) {\n                this.colorIndex++;\n            }\n        }\n    }\n\n    getColor(index): string {\n        let colorSet = this.getColorSet();\n        let i = index % colorSet.length;\n\n        return colorSet[i];\n    }\n\n    getColorSet(): string[] {\n        let colorSet;\n        if (this.config.colorScheme) {\n            colorSet = colorSets.find(c => c.name === this.config.colorScheme);\n        }\n        if (!colorSet) {\n            colorSet = colorSets[0];\n        }\n        return colorSet.domain;\n    }\n\n    generateColorSet(labels: Label[], lightenPercent = 1): string[] {\n        let count = labels.length;\n        const colors = new Array<string>(labels.length);\n\n        for (let i = 0; i < labels.length; i++) {\n            const label = labels[i];\n            let color = this.labelColors[label.toString()];\n\n            if(!color) {\n                color = this.getColor(count++);\n                this.labelColors[label.toString()] = color;\n            }\n            if(lightenPercent === 1) {\n                colors[i] = color;\n            } else {\n                colors[i] = this.pSBC(lightenPercent, color, null, null);\n            }\n        }\n\n        return colors;\n    }\n\n    updateChart() {\n        if (this.chartType && this.data) {\n\n            this.getChartType();\n\n            if (this.labelColumnIndex !== null && this.labelColumnIndex >= 0) {\n                this.setLabel(this.columns[this.labelColumnIndex].title);\n            }\n\n            let values: Array<any>;\n\n            if (!this.resultArray) {\n                this.resultArray = [];\n            }\n\n            let chartItems: Array<any> = this.resultArray;\n\n            if (this.gridColumnIndex != null && this.gridColumnIndex >= 0) {\n                values = this.gridSeriesValues(this.data);\n            } else {\n                values = [null];\n            }\n\n            // resize the chartItems array to match the values.\n            while (values.length > chartItems.length) {\n                chartItems.push({});\n            }\n            if(chartItems.length !== values.length) {\n                chartItems.length = values.length;\n            }\n\n\n\n            for (let chartIndex = 0; chartIndex < values.length; chartIndex++) {\n                let value = values[chartIndex];\n                let chartItem = chartItems[chartIndex];\n\n                // let chartItem: Array<any>;\n                let data;\n                if (this.gridColumnIndex != null && this.gridColumnIndex >= 0 ) {\n                    data = this.data.filter(c => c[this.gridColumnIndex] === value.value);\n                } else {\n                    data = this.data;\n                }\n\n  \n                switch (this.chartType.inputFormat) {\n                    case eInputFormat.MultiSeries:\n                        let dataSets: ChartDataSets[];\n                        let labels: Label[];\n\n                        if (this.seriesPivotIndex != null) {\n                            let pivotValues: any[] = this.uniqueValues(data, this.seriesPivotIndex);\n                            let seriesCount = pivotValues.length * this.seriesColumnsIndex.length;\n                            let pivotData = {};\n\n                            let seriesLabels = new Array<string>(seriesCount);\n\n                            for (let pivotIndex = 0; pivotIndex < pivotValues.length; pivotIndex++) {\n                                let pivotValue = pivotValues[pivotIndex];\n                                let seriesData = data.filter(c => c[this.seriesPivotIndex] === pivotValue.value);\n\n                                for (let i = 0; i < seriesData.length; i++) {\n\n                                    const label = seriesData[i][this.labelColumnIndex];\n                                    let row = pivotData[label];\n                                    if (!row) {\n                                        row = new Array(seriesCount);\n                                        pivotData[label] = row;\n                                    }\n\n\n                                    for (let j = 0; j < this.seriesColumnsIndex.length; j++) {\n                                        if (i === 0) {\n                                            seriesLabels[((j + 1) * (pivotIndex + 1)) - 1] = pivotValue.name + ' / ' + this.seriesColumnsIndex[j].column.title\n                                        }\n    \n                                        if (this.seriesColumnsIndex[j]) {\n                                            row[((j + 1) * (pivotIndex + 1)) - 1 ] = this.rawValue(seriesData, this.seriesColumnsIndex[j].column.name, i)\n                                        }\n                                    }\n                                }\n                            }\n\n                            labels = Object.keys(pivotData);\n                            dataSets = new Array<ChartDataSets>(seriesLabels.length);\n\n                            for (let i  = 0; i < seriesLabels.length; i++) {\n                                const dataSet: ChartDataSets = {};\n                                dataSet.data = new Array(labels.length);\n                                dataSet.label = seriesLabels[i];\n\n                                for (let j = 0; j < labels.length; j++) {\n                                    dataSet.data[j] = pivotData[labels[j].toString()][i];\n                                }\n                                dataSets[i] = dataSet;\n                            }\n\n                            let labelColumn = this.columns[this.labelColumnIndex];\n                            labels = labels.map(label => Functions.formatValue(label, labelColumn.format));\n\n                            this.setSeriesLabel(this.seriesColumnsIndex.map(c => c.column.title).join(' / '));\n                        } else {\n                            labels = new Array<Label>(data.length);\n                            for (let i = 0; i < data.length; i++) {\n                                labels[i] = this.formatValue(data, this.labelColumnIndex, i).toString();\n                            }\n\n                            dataSets = new Array<ChartDataSets>(this.seriesColumnsIndex.length);\n                            for (let i = 0; i < this.seriesColumnsIndex.length; i++) {\n                                const dataSet: ChartDataSets = {};\n                                dataSet.data = new Array(data.length);\n                                dataSet.label = this.seriesColumnsIndex[i].column.title;\n                                dataSet.type = this.chartType.key === eChartType.BarVertical && this.seriesColumnsIndex[i].config.lineChart ? 'line' : null;\n                                dataSet.yAxisID = this.chartType.key === eChartType.BarVertical && this.chartType.isBar && this.seriesColumnsIndex[i].config.alternateAxis ? 'right' : null;\n\n                                for (let j = 0; j < data.length; j++) {\n                                    dataSet.data[j] = this.rawValue(data, this.seriesColumnsIndex[i].column.name, j);\n                                }\n\n                                dataSets[i] = dataSet;\n                            }\n                        }\n\n                        // configure other dataset options.\n                        for(let i = 0; i < dataSets.length; i++) {\n                            let dataSet = dataSets[i];\n                            dataSet.fill = this.config.fill;\n                            dataSet.spanGaps = this.config.spanGaps;\n\n                            switch(this.config.lineCurve) {\n                                case eLineCurve.Straight:\n                                    dataSet.lineTension = 0;\n                                    dataSet.cubicInterpolationMode = 'default';\n                                    break;\n                                case eLineCurve.Bezier:\n                                    dataSet.lineTension = 0.4;\n                                    dataSet.cubicInterpolationMode = 'default';\n                                    break;\n                                case eLineCurve.Monotone:\n                                    dataSet.lineTension = 0;\n                                    dataSet.cubicInterpolationMode = 'monotone';\n                                    break;\n                            }\n                            // dataSet.lineTension = 1;\n\n                            // if this is not a pivot series, then attempt to get the series color.\n                            const baseColor = this.seriesPivotIndex === null ? \n                                this.seriesColumnsIndex[i].config.color ?? this.getColor(i) :\n                                this.getColor(i);\n\n                            this.labelColors = {};\n\n                            if((this.config.singleBarColor && this.chartType.isBar)) {\n                                dataSet.hoverBackgroundColor = this.pSBC(-0.3, baseColor, null, null);\n                                dataSet.backgroundColor = baseColor;\n                            }\n                            else if(this.chartType.type === 'line' || dataSet.type === 'line' ) {\n                                dataSet.pointBackgroundColor = this.pSBC(-0.3, baseColor, null, null);\n                                dataSet.hoverBackgroundColor = this.pSBC(-0.3, baseColor, null, null);\n                                dataSet.borderColor = baseColor;\n                                dataSet.backgroundColor = this.pSBC(0.3, baseColor, null, null);\n                            } else {\n                                dataSet.hoverBackgroundColor = this.generateColorSet(labels, -0.3);\n                                if (this.chartType.isBar) {\n                                    dataSet.backgroundColor = this.generateColorSet(labels, 0);\n                                } else {\n                                    dataSet.pointBackgroundColor = this.generateColorSet(labels, 0);\n                                    dataSet.borderColor = this.generateColorSet(labels, -0.3);\n                                    dataSet.backgroundColor = this.generateColorSet(labels, 0);\n                                }\n                            }\n                        }\n\n                        this.setSeriesLabel(this.seriesColumnsIndex.filter(c => !c.config.alternateAxis).map(c => c.column.title).join(' / '));\n                        this.config.yAxisLabelRight = this.seriesColumnsIndex.filter(c => c.config.alternateAxis).map(c => c.column.title).join(' / ')\n\n                        if (chartItem.dataSets) {\n                            for(let i = 0; i < dataSets.length; i++) {\n                                if(i < chartItem.dataSets.length) {\n                                    // copy each property to update the chart item\n                                    const dataSetKeys = Object.keys(chartItem.dataSets[i]);\n                                    dataSetKeys.forEach(key => {\n                                        chartItem.dataSets[i][key] = dataSets[i][key];\n                                    });\n                                } else {\n                                    chartItem.dataSets.push(dataSets[i])\n                                }\n                            }\n\n                            if (chartItem.dataSets.length > dataSets.length) {\n                                chartItem.dataSets.length = dataSets.length;\n                            }\n                        } else {\n                            chartItem.dataSets = dataSets;\n                        }\n\n                        chartItem.name = value?.name;\n                        // chartItem.data = undefined;\n                        // chartItem.dataSets = dataSets;\n                        chartItem.labels = labels;\n\n\n                        // if(chartItem.labels) {\n                        //     chartItem.labels.splice(0, chartItem.labels.length);\n                        //     labels.forEach(label => {chartItem.labels.push(label)})\n                        // } else {\n                        //     chartItem.labels = labels;\n                        // }\n\n\n                        // chartItems.push({name: value?.name, dataSets: dataSets, data: undefined, labels: labels});\n                        break;\n                    case eInputFormat.Xy:\n                    case eInputFormat.XyBubble:\n                        let labelValues: any[] = this.uniqueValues(data, this.labelColumnIndex);\n                        let data1 = new Array<ChartDataSets>(labelValues.length);\n\n                        for (let i = 0; i < labelValues.length; i++) {\n                            let labelData = data.filter(c => c[this.labelColumnIndex] === labelValues[i].value);\n                            let xyData = new Array(labelData.length);\n\n                            for (let j = 0; j < labelData.length; j++) {\n                                xyData[j] = {\n                                    x: this.rawValue(labelData, this.xColumnIndex, j),\n                                    y: this.rawValue(labelData, this.yColumnIndex, j),\n                                    r: this.chartType.inputFormat === eInputFormat.XyBubble ? this.rawValue(labelData, this.radiusColumnIndex, i) ?? 3 : 3\n                                };\n                            }\n\n                            let color = this.getColor(i);\n\n                            data1[i] = {\n                                  data: xyData,\n                                  radius: 3,\n                                  label: labelValues[i].name,\n                                  backgroundColor: color,\n                                  pointBackgroundColor: color,\n                            };\n                        }\n\n                        this.config.yAxisLabel = this.columns[this.yColumnIndex].title;\n                        this.config.xAxisLabel = this.columns[this.xColumnIndex].title;\n\n                        chartItem.name = value?.name;\n                        chartItem.dataSets = data1;\n                        chartItem.data = undefined;\n                        chartItem.labels = undefined;\n\n                        // chartItems.push({name: value?.name, dataSets: data1, data: undefined, labels: undefined})\n                        break;\n                }\n\n                this.updateChartOptions();\n\n            }\n\n            // this.resultArray = chartItems;\n\n            this.updateChartData();\n\n        }\n\n    }\n\n    updateChartData() {\n        if (this.charts) {\n            for(const chart of this.charts) {\n                // chart.chart.destroy();\n                // chart.datasets = this.chartData;\n                // chart.labels = this.labels;\n                // chart.options = this.chartOptions;\n                chart.plugins = this.config.showDataLabel ? [ChartDataLabels] : [];\n                // chart.chartType = this.chartType.type;\n                // chart.ngOnInit();\n                chart.update();\n            }\n        }\n    }\n\n    updateChartLayout() {\n        if (this.charts) {\n            for(const chart of this.charts) {\n                chart.chart.destroy();\n                // chart.datasets = this.chartData;\n                // chart.labels = this.labels;\n                chart.options = this.chartOptions;\n                chart.chartType = this.chartType.type;\n                chart.ngOnInit();\n                // chart.update();\n            }\n        }\n    }\n\n\n    gridSeriesValues(data: any[]): any {\n        const format = this.columns[this.gridColumnIndex].format;\n        const values = Array.from(new Set(data.map(c => c[this.gridColumnIndex]))).sort((a, b) => {\n            if (a > b) {\n                return 1;\n            }\n            if (a < b) {\n                return -1;\n            }\n            return 0;\n        });\n        let gridValues = values.map(c => {\n            return {\n                name: Functions.formatValue(c, format),\n                value: Functions.rawValue(c)\n            }\n        });\n\n        return gridValues;\n    }\n\n    initChartOptions(): ChartOptions {\n        return {\n            responsive: this.responsive,\n            maintainAspectRatio: false,\n            scales: { \n                xAxes: [{\n                    display: this.chartType.allowXAxis && this.config.showXAxis,\n                    scaleLabel: {\n                        display: this.config.showXAxisLabel,\n                        labelString: this.config.xAxisLabel\n                    },\n                    ticks: {\n                        min: this.config.autoScale ? undefined : this.config.xScaleMin,\n                        max: this.config.autoScale ? undefined : this.config.xScaleMax\n                    },\n                    gridLines: {\n                        display: true,\n                        color: this.config.showGridLines ? 'LightGray' : 'transparent',\n                        drawBorder: true,\n                        zeroLineColor: 'black'\n                    }\n                }],\n                yAxes: [{\n                    display: this.chartType.allowYAxis && this.config.showYAxis,\n                    scaleLabel: {\n                        display: this.config.showYAxisLabel,\n                        labelString: this.config.yAxisLabel\n                    },\n                    ticks: {\n                        min: this.config.autoScale ? undefined : this.config.yScaleMin,\n                        max: this.config.autoScale ? undefined : this.config.yScaleMax\n                    },\n                    gridLines: {\n                        display: true,\n                        color: this.config.showGridLines ? 'LightGray' : 'transparent',\n                        drawBorder: true,\n                        zeroLineColor: 'black'\n                    }\n                },\n                {\n                    id: 'right',\n                    position: 'right',\n                    display: this.chartType.allowYAxis && this.config.yAxisLabelRight,\n                    scaleLabel: {\n                        display: this.config.yAxisLabelRight ? true : false,\n                        labelString: this.config.yAxisLabelRight\n                    },\n                    ticks: {\n                        min: this.config.autoScale ? undefined : this.config.yScaleMin,\n                        max: this.config.autoScale ? undefined : this.config.yScaleMax\n                    },\n                    gridLines: {\n                        display: true,\n                        color: this.config.showGridLines ? 'LightGray' : 'transparent',\n                        drawBorder: true,\n                        zeroLineColor: 'black'\n                    }\n                }\n            ]\n            },\n            plugins: {\n              datalabels: {\n                formatter: (value, ctx) => {\n                    let label = [];\n                    if(this.config.showDataLabel) {\n                        label.push(ctx.chart.data.labels[ctx.dataIndex]);\n                    }\n                    if (this.config.showDataValue) {\n                        label.push(Functions.numberWithCommas(value));\n                    }\n                    return label.join('\\n');\n                  },\n                anchor: <any> this.config.labelAnchor,\n                align: <any> this.config.labelAlign,\n              }\n            },\n            legend: { \n                display: this.config.showLegend, \n                position: <PositionType> this.config.legendPosition ?? 'top'\n            },\n            cutoutPercentage: this.config.cutOutPercentage\n        };\n    }\n\n    updateChartOptions() {\n        if (!this.chartOptions) {\n            this.chartOptions = this.initChartOptions();\n            return;\n        }\n        \n        const chartOptions = this.chartOptions;\n\n        chartOptions.scales.xAxes[0].display = this.chartType.allowXAxis && this.config.showXAxis;\n        chartOptions.scales.xAxes[0].scaleLabel.display = this.config.showXAxisLabel;\n        chartOptions.scales.xAxes[0].scaleLabel.labelString = this.config.xAxisLabel;\n        chartOptions.scales.xAxes[0].ticks.min = this.config.xScaleMin;\n        chartOptions.scales.xAxes[0].ticks.max = this.config.xScaleMax;\n        chartOptions.scales.xAxes[0].gridLines.color = this.config.showGridLines ? 'LightGray' : 'transparent';\n\n        chartOptions.scales.yAxes[0].display = this.chartType.allowYAxis && this.config.showYAxis;\n        chartOptions.scales.yAxes[0].scaleLabel.display = this.config.showYAxisLabel;\n        chartOptions.scales.yAxes[0].scaleLabel.labelString = this.config.yAxisLabel;\n        chartOptions.scales.yAxes[0].ticks.min = this.config.autoScale ? undefined : this.config.yScaleMin;\n        chartOptions.scales.yAxes[0].ticks.max = this.config.autoScale ? undefined : this.config.yScaleMax;\n        chartOptions.scales.yAxes[0].gridLines.color = this.config.showGridLines ? 'LightGray' : 'transparent';\n\n        chartOptions.scales.yAxes[1].display = this.chartType.allowYAxis && this.config.yAxisLabelRight;\n        chartOptions.scales.yAxes[1].scaleLabel.display = this.config.showYAxisLabel;\n        chartOptions.scales.yAxes[1].scaleLabel.labelString = this.config.yAxisLabelRight;\n        chartOptions.scales.yAxes[1].ticks.min = this.config.autoScale ? undefined : this.config.yScaleMin;\n        chartOptions.scales.yAxes[1].ticks.max = this.config.autoScale ? undefined : this.config.yScaleMax;\n        chartOptions.scales.yAxes[1].gridLines.color = this.config.showGridLines ? 'LightGray' : 'transparent';\n\n        chartOptions.plugins.datalabels.anchor = <any> this.config.labelAnchor;\n        chartOptions.plugins.datalabels.align = <any> this.config.labelAlign;\n\n        chartOptions.legend.display = this.config.showLegend;\n        chartOptions.legend.position = <PositionType> this.config.legendPosition ?? 'top';\n\n        chartOptions.cutoutPercentage = this.config.cutOutPercentage;\n\n    }\n\n\n    uniqueValues(data, index: number): any[] {\n        const format = this.columns[index].format;\n        const values = Array.from(new Set(data.map(c => c[index]))).sort((a, b) => {\n            if (a > b) {\n                return 1;\n            }\n            if (a < b) {\n                return -1;\n            }\n            return 0;\n        });\n\n        const valuesSet = values.map(c => {\n            return {\n                name: Functions.formatValue(c, format),\n                value: Functions.rawValue(c)\n            }\n        });\n        return valuesSet;\n    }\n\n    formatValue(data, columnIndex: number, row: number): string|number {\n        if (columnIndex === null || columnIndex < 0) {\n            return row;\n        }\n\n        let value = data[row][columnIndex];\n        let column = this.columns[columnIndex];\n\n        return Functions.formatValue(value, column.format);\n    }\n\n    rawValue(data, columnIndex: number, row: number) {\n        if (columnIndex === null) {\n            return null;\n        }\n\n        let value = data[row][columnIndex];\n    return Functions.rawValue(value);\n    }\n\n    // Version 4.0\n    // https://github.com/PimpTrizkit/PJs/wiki/12.-Shade,-Blend-and-Convert-a-Web-Color-(pSBC.js)\n    pSBC(p, c0, c1, l) {\n        let r, g, b, P, f, t, h, i = parseInt, m = Math.round, a;\n\n        if ( typeof(p) !== 'number' || p < -1 || p > 1 || typeof(c0) !== 'string' || (c0[0] !== 'r' && c0[0] !== '#') || ( c1 && !a )) {\n            return null;\n        }\n\n        const pSBCr = (d) => {\n            let n = d.length, x: any = {};\n            if (n > 9) {\n                [r, g, b, a] = d = d.split(','), n=d.length;\n                if(n<3||n>4)return null;\n                x.r=i(r[3]=='a'?r.slice(5):r.slice(4)),x.g=i(g),x.b=i(b),x.a=a?parseFloat(a):-1\n            }else{\n                if(n==8||n==6||n<4)return null;\n                if(n<6)d='#'+d[1]+d[1]+d[2]+d[2]+d[3]+d[3]+(n>4?d[4]+d[4]:'');\n                d=i(d.slice(1),16);\n                if(n==9||n==5)x.r=d>>24&255,x.g=d>>16&255,x.b=d>>8&255,x.a=m((d&255)/0.255)/1000;\n                else x.r=d>>16,x.g=d>>8&255,x.b=d&255,x.a=-1\n            }\n            return x\n        };\n        \n        h=c0.length>9,h=a?c1.length>9?true:c1=='c'?!h:false:h,f=pSBCr(c0),P=p<0,t=c1&&c1!='c'?pSBCr(c1):P?{r:0,g:0,b:0,a:-1}:{r:255,g:255,b:255,a:-1},p=P?p*-1:p,P=1-p;\n        if(!f||!t)return null;\n        if(l)r=m(P*f.r+p*t.r),g=m(P*f.g+p*t.g),b=m(P*f.b+p*t.b);\n        else r=m((P*f.r**2+p*t.r**2)**0.5),g=m((P*f.g**2+p*t.g**2)**0.5),b=m((P*f.b**2+p*t.b**2)**0.5);\n\n        a=f.a,t=t.a,f=a>=0||t>=0,a=f?a<0?t:t<0?a:a*P+t*p:0;\n        if(h)return'rgb'+(f?'a(':'(')+r+','+g+','+b+(f?','+m(a*1000)/1000:'')+')';\n        else return'#'+(4294967296+r*16777216+g*65536+b*256+(f?m(a*255):0)).toString(16).slice(1,f?undefined:-2)\n    }\n\n}\n","<div class=\"m-3\" *ngIf=\"!resultArray || resultArray?.length === 0 || !chartType\">\n    <div class=\"alert alert-warning\">\n        Chart not displayed.  Check the chart type, labels and series have been set.\n    </div>\n</div>\n\n<div #wrapper class=\"chart-parent border\" *ngFor=\"let results of resultArray; trackBy:trackChartChange; let index = index\" >\n   <div class=\"w-100 text-center \"><div class=\"badge badge-secondary\">{{results?.name}}</div></div> \n    <div *ngIf=\"results && chartType && chartOptions\" class=\"position-relative w-100 h-100\">\n        <canvas baseChart \n            [datasets]=\"results.dataSets\"\n            [data]=\"results.data\"\n            [labels]=\"results.labels\"\n            [options]=\"chartOptions\"\n            [chartType]=\"chartType.type\">\n        </canvas>    \n    </div>\n</div>","import {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { QueryBuilderComponent } from './query-builder.component';\nimport { DComponentsModule } from 'ngx-d-components';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    DComponentsModule\n  ],\n  declarations: [\n    QueryBuilderComponent,\n  ],\n  exports: [QueryBuilderComponent],\n})\nexport class QueryBuilderModule {\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\n\n@Component({\n    selector: 'columnValidation-edit-button',\n    templateUrl: './columnValidation-edit-button.component.html'\n})\nexport class ColumnValidationEditButtonComponent implements OnInit {\n    @Input() key = null;\n\n    public hubPath: string;\n\n    constructor(private hubService: HubService) { }\n\n    ngOnInit() {\n        this.hubPath = this.hubService.getHubUrl();\n    }\n}\n","<a [routerLink]=\"[hubPath, 'columnValidation-edit', key]\" *ngIf=\"key\" > \n    <i class=\"fa fa-edit\"></i> \n    Edit \n</a>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'allFilter',\n})\nexport class AllFilterPipe implements PipeTransform {\n\n  transform(items: any[], value: string): any[] {\n    if (!items) { return []; }\n    if (!value) { return items; }\n\n    const filterValue = value.toLowerCase();\n    return items.filter(item => {\n      const keys = Object.keys(item);\n      let found = false;\n      keys.forEach(key => {\n        if (!found) {\n          if ((typeof item[key] === 'string' || item[key] instanceof String)) {\n            if (item[key].toLowerCase().indexOf(value.toLowerCase()) > -1) {\n              found = true;\n            }\n          }\n        }\n      });\n      return found;\n    });\n  }\n}\n\n","import {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SeriesAnimateComponent } from './series-animate.component';\nimport { SeriesAnimatePropertiesComponent } from './series-animate-properties.component';\nimport { DComponentsModule } from 'ngx-d-components';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    DComponentsModule\n  ],\n  declarations: [\n    SeriesAnimateComponent,\n    SeriesAnimatePropertiesComponent\n  ],\n  exports: [SeriesAnimateComponent, SeriesAnimatePropertiesComponent],\n})\nexport class SeriesAnimateModule {\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\n\n@Component({\n    selector: 'datalink-edit-button',\n    templateUrl: './datalink-edit-button.component.html'\n})\nexport class DatalinkEditButtonComponent implements OnInit {\n    @Input() key = null;\n\n    public hubPath: string;\n\n    constructor(private hubService: HubService) { }\n\n    ngOnInit() {\n        this.hubPath = this.hubService.getHubUrl();\n    }\n}\n","<a [routerLink]=\"[hubPath, 'datalink-edit', 'edit', key]\" *ngIf=\"key\" > \n    <i class=\"fa fa-edit\"></i> \n    Edit \n</a>","// This file includes polyfills needed by Angular 2 and is loaded before\n// the app. You can add your own extra polyfills to this file.\n// import 'core-js/es/symbol';\n// import 'core-js/es/object';\n// import 'core-js/es/function';\n// import 'core-js/es/parse-int';\n// import 'core-js/es/parse-float';\n// import 'core-js/es/number';\n// import 'core-js/es/math';\n// import 'core-js/es/string';\n// import 'core-js/es/date';\n// import 'core-js/es/array';\n// import 'core-js/es/regexp';\n// import 'core-js/es/map';\n// import 'core-js/es/set';\n// import 'core-js/es/reflect';\n\n// import 'core-js/es/reflect';\nimport 'zone.js/dist/zone';\n\n","import { Component, OnDestroy, OnInit, EventEmitter, Output, Input } from '@angular/core';\n\n@Component({\n    selector: 'print-button',\n    templateUrl: './print-button.component.html'\n})\n\nexport class PrintButtonComponent implements OnInit, OnDestroy {\n    @Input() autoCompact = true;\n    @Input() element = 'print-body';\n\n    constructor() { }\n\n    ngOnInit() {\n\n    }\n\n    ngOnDestroy() {\n     }\n\n     print(): void {\n        let printContents, popupWin;\n        printContents = document.getElementById(this.element).innerHTML;\n        popupWin = window.open('', '_blank', 'top=0,left=0,height=100%,width=auto');\n        popupWin.document.open();\n        popupWin.document.write(`\n          <html>\n            <head>\n              <title>Print tab</title>\n              <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n              <style>\n              </style>\n            </head>\n        <body onload=\"window.print();window.close()\">${printContents}</body>\n          </html>`\n        );\n        popupWin.document.close();\n    }\n\n}\n","<d-button iconClass=\"fa fa-print\" (click)=\"print()\" id=\"print\">Print</d-button>","import { Component, OnInit, OnChanges, OnDestroy, Input } from '@angular/core';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { AbstractControl, FormGroup, FormArray, FormControl } from '@angular/forms';\nimport { map } from 'rxjs/operators';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DexihDatalinkTransformItem, eTransformItemType, DexihDatalinkTransform, eFunctionType, eTransformType } from '../../../shared.models';\nimport { DexihFormErrorsModule} from '../dexih-form-errors.module';\n\nclass ControlError {\n    public field: string;\n    public name: string;\n    public position: number;\n    public errors: string[];\n    public link: string[];\n\n    public childControlErrors: ControlError[];\n\n    constructor() {\n        this.childControlErrors = new Array<ControlError>();\n        this.errors = [];\n    }\n}\n\n@Component({\n    selector: 'dexih-invalid-form-details',\n    templateUrl: './dexih-invalid-form-details.component.html',\n})\nexport class DexihInvalidFormDetailsComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() control: AbstractControl;\n    @Input() baseLink: string;\n\n    public showErrors = false;\n\n    private _changesSubscription: Subscription;\n\n    valid = true;\n    public controlErrors = [];\n\n    constructor(public router: Router, public route: ActivatedRoute) { }\n\n    ngOnInit() { }\n\n    ngOnChanges() {\n        if (!this.control) {\n            this.valid = true;\n            this.controlErrors = [];\n            return;\n        }\n\n        this.refresh();\n\n        if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n        this._changesSubscription = this.control.statusChanges.subscribe(() => {\n            this.refresh();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n    }\n\n    refresh() {\n        if (this.control && this.control.invalid) {\n            this.valid = false;\n            this.controlErrors = this.getFormErrors();\n        } else {\n            this.valid = true;\n            this.controlErrors = [];\n        }\n    }\n\n    public getFormErrors(): ControlError[] {\n        return this.getFormErrorsRecursive(<FormGroup>this.control, 0, null);\n    }\n\n\n    private getFormErrorsRecursive(form: FormGroup, depth: number, parentControlError: ControlError): ControlError[] {\n        let controlErrors = [];\n\n        if (form && form.invalid && form.controls) {\n            for (const field of Object.keys(form.controls)) {\n                const control = form.get(field);\n\n                // if the control is dirty or flag is set to show all errors.\n                if (control && control.invalid) {\n\n                    if (control instanceof FormArray) {\n                        const formArray = <FormArray>control;\n                        let controls = formArray.controls.sort((a: FormGroup, b: FormGroup) => {\n                            if (a.controls.position) {\n                                return a.controls.position.value - b.controls.position.value;\n                            }\n                            return 1;\n                        });\n\n                        controls.forEach((cont, formIndex) => {\n                            if (cont.invalid) {\n                            let controlError = new ControlError();\n\n                            if (cont.value && cont.value.name) {\n                                controlError.name = cont.value.name;\n                            }\n\n                            this.setError(field, cont, controlError, form, parentControlError);\n                            controlError.position = formIndex + 1;\n                            controlError.childControlErrors = this.getFormErrorsRecursive(<FormGroup>cont, depth + 1,\n                                    controlError);\n                            controlErrors.push(controlError);\n                        }\n                        });\n                    } else if (control instanceof FormGroup) {\n                        let controlError = new ControlError();\n\n                        if (control.value && control.value.name) {\n                            controlError.name = control.value.name;\n                        }\n\n                        this.setError(field, control, controlError, form, parentControlError);\n                        controlError.position = null;\n                        controlError.childControlErrors = this.getFormErrorsRecursive(<FormGroup>control, depth + 1, controlError);\n                        controlErrors.push(controlError);\n\n                    } else {\n                        let controlError = new ControlError();\n                        this.setError(field, control, controlError, form, parentControlError);\n                        controlError.position = null;\n                        for (const key of Object.keys(control.errors)) {\n                                let message = DexihFormErrorsModule.createErrorMessage(key, control);\n                                controlError.errors.push(message);\n                            }\n                            controlErrors.push(controlError);\n                        }\n                }\n            }\n        }\n\n        return controlErrors;\n    }\n\n    private setError(field: string, control: AbstractControl, controlError: ControlError,\n            parentControl: AbstractControl, parentControlError: ControlError) {\n        let link: any[];\n\n        switch (field) {\n            case 'dexihDatalinkTransforms':\n                let transform = <DexihDatalinkTransform>control.value;\n                if (transform.name) {\n                    controlError.field = 'Transform ' + transform.name;\n                } else {\n                    controlError.field = 'Transform ' + eTransformType[transform.transformType];\n                }\n\n                link = ['transforms', 'transform', control.value.key];\n                break;\n            case 'dexihDatalinkTransformItems':\n                let item = <DexihDatalinkTransformItem>control.value;\n                const functionType = this.getFunctionType(parentControl.value);\n\n                switch (item.transformItemType) {\n                    case eTransformItemType.BuiltInFunction:\n                        controlError.field = item.functionMethodName;\n                        link = ['standard-function-edit', functionType, item.key];\n                        break;\n                    case eTransformItemType.CustomFunction:\n                        controlError.field = 'Custom Function';\n                        link = ['custom-function-edit', functionType, item.key];\n                        break;\n                    case eTransformItemType.Column:\n                    case eTransformItemType.JoinNode:\n                    case eTransformItemType.GroupNode:\n                    case eTransformItemType.ColumnPair:\n                    case eTransformItemType.Sort:\n                    case eTransformItemType.JoinPair:\n                    case eTransformItemType.FilterPair:\n                    case eTransformItemType.AggregatePair:\n                    case eTransformItemType.Series:\n                        controlError.field = eTransformItemType[item.transformItemType] + ' mapping';\n                        link = ['mapping-edit', item.transformItemType, item.key];\n                        break;\n                    case eTransformItemType.UnGroup:\n                        controlError.field = 'UnGroup';\n                        link = ['unGroup-edit', item.key];\n                        break;\n                }\n                controlError.link = [];\n                break;\n            case 'dexihFunctionParameters':\n                controlError.field = 'Parameter';\n                controlError.link = [];\n                break;\n            case 'arrayParameters':\n                controlError.field = 'Array Item';\n                controlError.link = [];\n                break;\n            case 'functionMethodName':\n                controlError.field = 'Standard Function';\n                controlError.link = [];\n                break;\n            default:\n                controlError.field = field;\n                controlError.link = [];\n        }\n\n        if (link) {\n            if (parentControlError && parentControlError.link) {\n                controlError.link = parentControlError.link.concat(link);\n            } else {\n                controlError.link = link;\n            }\n        } else {\n            if (parentControlError && parentControlError.link) {\n                controlError.link = parentControlError.link\n            }\n        }\n    }\n\n    public getFunctionType(datalinkTransform: DexihDatalinkTransform): eFunctionType {\n        let functionType: eFunctionType;\n        switch (datalinkTransform.transformType) {\n            case eTransformType.Filter:\n                functionType = eFunctionType.Condition;\n                break;\n            case eTransformType.Mapping:\n                functionType = eFunctionType.Map;\n                break;\n            case eTransformType.Join:\n                functionType = eFunctionType.JoinCondition;\n                break;\n            case eTransformType.Group:\n            case eTransformType.Aggregate:\n                functionType = eFunctionType.Aggregate;\n                break;\n            case eTransformType.Series:\n                functionType = eFunctionType.Series;\n                break;\n            case eTransformType.Sort:\n                functionType = eFunctionType.Sort;\n                break;\n            case eTransformType.Validation:\n                functionType = eFunctionType.Validate;\n                break;\n            case eTransformType.Rows:\n                functionType = eFunctionType.Rows;\n                break;\n            case eTransformType.Lookup:\n                functionType = eFunctionType.JoinCondition;\n                break;\n            case eTransformType.Delta:\n                break;\n        }\n\n        return functionType;\n    }\n}\n","<d-button-dropdown \n[iconClass]=\"valid ? 'fa fa-check' : 'fa fa-exclamation-circle'\"\n[buttonClass]=\"valid ? 'btn btn-success' : 'btn btn-danger'\"\n[text]= \"valid ? 'Valid' : 'Warnings'\" \ntitle=\"Potential errors and warnings.\"\n[pullRight]=\"true\"\n>\n\n<ng-template [ngIf]=\"valid\">\n    <h5 class=\"dropdown-header\">The current form is valid.</h5>\n</ng-template>\n\n<!-- Recurs through the errors -->\n<ng-template #recursiveList let-list>\n    \n    <li *ngFor=\"let item of list\">\n        <span *ngIf=\"item.childControlErrors.length > 0\">\n            <a class=\"dropdown-item\" [routerLink]=\"item.link\">{{item.field}} {{item.name}}</a>\n            <ul>\n                <ng-container *ngTemplateOutlet=\"recursiveList; context:{ $implicit: item.childControlErrors }\">\n                </ng-container>\n            </ul>\n        </span>\n        <a *ngFor=\"let error of item.errors\" class=\"dropdown-item\" [routerLink]=\"item.link\">{{item.field}} - {{error}}</a>\n    </li>\n</ng-template>\n\n<!-- Recurs through the errors -->\n<ng-container *ngTemplateOutlet=\"recursiveList; context:{ $implicit: controlErrors }\">\n</ng-container>\n\n</d-button-dropdown>\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription} from 'rxjs';\n\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubService } from '../../hub.service';\nimport { DexihListOfValues } from '../../../shared/shared.models';\n\n\n@Component({\n    selector: 'actions-listOfValues-button',\n    templateUrl: './actions-listOfValues-button.component.html'\n})\n\nexport class ActionsListOfValuesButtonComponent implements OnInit, OnDestroy {\n    @Input() public listOfValues: DexihListOfValues;\n    @Input() public pullRight = false;\n\n    private _hubCacheSubscription: Subscription;\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n                private router: Router,\n                private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n\n            if (cache.isLoaded()) {\n                // search any columns for an occurrence of the columnValidation.\n            }\n        });\n\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n     }\n\n\n}\n","<d-button-edit class=\"mr-1\" [routerLink]=\"['listOfValues-edit', listOfValues.key]\" queryParamsHandling=\"merge\"></d-button-edit>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { eDataPrivacyStatus } from '../../../shared.models';\n\n@Component({\n    selector: 'privacy-status-icon',\n    templateUrl: './privacy-status.component.html'\n})\n\nexport class PrivacyStatusButtonComponent implements OnInit {\n    @Input() privacyStatus: eDataPrivacyStatus;\n\n    eDataPrivacyStatus = eDataPrivacyStatus;\n\n    @Output() click = new EventEmitter();\n\n    constructor() { }\n\n    ngOnInit() {  }\n\n    doClick() {\n        this.click.emit(true);\n    }\n}\n","<span *ngIf='privacyStatus == eDataPrivacyStatus.Internet' class=\"text-primary\"><i  class=\"fa fa-lg fa-globe\" title=\"This item sends data across the internet.\"></i></span>\n<span *ngIf='privacyStatus == eDataPrivacyStatus.Lan' class=\"text-success\"><i class=\"fa fa-lg fa-shield\" title=\"This item sends data to the local network.\" ></i></span>\n<span *ngIf='privacyStatus == eDataPrivacyStatus.Proxy' class=\"text-warning\"><i class=\"fa fa-lg fa-info-circle\" title=\"This item sends data through a proxy server.\" ></i></span>\n<span *ngIf='privacyStatus == eDataPrivacyStatus.NotAllowed' class=\"text-warning\"><i class=\"fa fa-lg fa-stop-circle-o\" title=\"This item is not allowed to send data.\" ></i></span>\n","import {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { DComponentsModule } from 'ngx-d-components';\nimport { DTableModule} from 'ngx-d-table';\nimport { DMarkdownModule } from 'ngx-d-markdown';\nimport { GridsterModule} from 'angular-gridster2';\n\nimport { SharedDataComponent, PreviewDataComponent, PreviewDashboardComponent, PreviewDashboardItemComponent,\n  PreviewComponent, InputParametersViewComponent} from './';\nimport { ChartBuilderModule } from '../charts/charts.module';\nimport { DexihMessageModule } from '../dexihMessage';\nimport { DexihIconsModule } from '../icons';\nimport { SeriesAnimateModule} from '../seriesAnimate/series-animate.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n   DComponentsModule,\n   DTableModule,\n    DMarkdownModule,\n    ChartBuilderModule,\n    GridsterModule,\n    DexihMessageModule,\n    DexihIconsModule,\n    SeriesAnimateModule,\n  ],\n  declarations: [\n    SharedDataComponent, PreviewDataComponent, PreviewDashboardComponent, PreviewDashboardItemComponent, PreviewComponent,\n    InputParametersViewComponent\n  ],\n  exports: [],\n})\nexport class SharedDataModule {\n\n}\n","import { NgModule } from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {RouteBreadcrumbsComponent} from './route-breadcrumbs/route-breadcrumbs.component'\nimport {RibbonComponent} from './ribbon.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n    ],\n    exports: [\n        RibbonComponent,\n        RouteBreadcrumbsComponent,\n    ],\n    declarations: [\n        RibbonComponent,\n        RouteBreadcrumbsComponent,\n        ],\n    providers: [],\n})\nexport class RibbonModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { eConnectionPurpose } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'new-connection-button',\n    templateUrl: './new-connection-button.component.html'\n})\n\nexport class NewConnectionButtonComponent implements OnInit {\n    @Input() pullRight = true;\n\n    eConnectionPurpose = eConnectionPurpose;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<d-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-file-o\" text=\"New\" [pullRight]=\"pullRight\">\n        <li>\n            <a class=\"dropdown-item\" [routerLink]=\"['connection-new', eConnectionPurpose.Source]\">Source Database/Service</a>\n        </li>\n        <li>\n            <a class=\"dropdown-item\"  [routerLink]=\"['connection-new', eConnectionPurpose.Managed]\">Managed Database</a>\n        </li>\n        <li>\n            <a class=\"dropdown-item\" [routerLink]=\"['connection-new', eConnectionPurpose.Target]\">Target Connection</a>\n        </li>\n</d-button-dropdown>\n","import { Component, OnInit, Input, OnChanges, EventEmitter, Output } from '@angular/core';\nimport { ChartTypes, eInputFormat } from '../chart-groups';\nimport { colorSets } from '../chart-colors';\nimport * as html2canvas from 'html2canvas';\nimport { Subject } from 'rxjs';\nimport { ChartConfig, eChartType, eLineCurveItems } from '../../../shared.models';\n\n@Component({\n    selector: 'chart-builder',\n    templateUrl: 'chart-builder.component.html'\n})\n\nexport class ChartBuilderComponent implements OnInit, OnChanges {\n    @Input() title = '';\n    @Input() config: ChartConfig;\n    @Input() columns: any[];\n    @Input() data: Array<any>;\n    @Input() showEdit = true;\n    @Output() hasChanged = new EventEmitter();\n\n    // public labelColumnIndex: any = null;\n    // public seriesColumnIndex: any = null;\n    // public seriesColumnsIndex = [];\n    // public xColumnIndex: any = null;\n    // public yColumnIndex: any = null;\n    // public minColumnIndex: any = null;\n    // public maxColumnIndex: any = null;\n    // public radiusColumnIndex: any = null;\n    // public latitudeColumnIndex: any = null;\n    // public longitudeColumnIndex: any = null;\n\n    eChartType = eChartType;\n    eInputFormat = eInputFormat;\n    chartTypes = ChartTypes;\n    eLineCurveItems = eLineCurveItems;\n\n    results: any[];\n\n    chartType: any;\n    colorSets = colorSets;\n\n    public updateDataSubject: Subject<void> = new Subject<void>();\n    public updateOptionsSubject: Subject<void> = new Subject<void>();\n\n    constructor() { }\n\n    ngOnInit() {\n        if (!this.config) {\n            this.config = new ChartConfig();\n        }\n    }\n\n    ngOnChanges() {\n        this.chartType = null;\n        if (this.columns && this.config) {\n            ChartTypes.forEach(chartGroup => {\n                if (!this.chartType) {\n                    this.chartType = chartGroup.charts.find(c => c.key === this.config.chartType);\n                }\n            });\n        }\n    }\n\n    changeChart() {\n        this.config.showXAxisLabel = this.chartType.defaultShowXAxisLabel;\n        this.config.showYAxisLabel = this.chartType.defaultShowYAxisLabel;\n        this.config.showXAxis = this.chartType.defaultShowXAxis;\n        this.config.showYAxis = this.chartType.defaultShowYAxis;\n        this.config.showGridLines = this.chartType.defaultShowGridLines;\n        this.config.colorScheme = this.chartType.defaultColorScheme;\n        this.config.showLegend = this.chartType.defaultShowLegend;\n        this.config.showDataLabel = this.chartType.defaultShowLabels;\n        this.config.showDataValue = this.chartType.defaultShowLabels;\n        this.hasChanged.emit();\n        this.ngOnChanges();\n    }\n\n    updateChartType() {\n        this.updateChartLayout();\n        this.updateChartData();\n    }\n\n    updateChartData() {\n        // trigger a change event in the chart\n        // this.config = Object.assign({}, this.config);\n        this.hasChanged.emit();\n        this.updateDataSubject.next();\n        this.ngOnChanges();\n\n    }\n\n    updateChartLayout() {\n        this.ngOnChanges();\n        this.updateOptionsSubject.next();\n        this.hasChanged.emit();\n    }\n\n    export() {\n        const chart = document.getElementById('chart');\n        if (chart == null) {\n            return;\n        }\n\n        let svgElem = chart.getElementsByTagName('svg');\n        for (const node of Array.from(svgElem)) {\n            node.setAttribute('font-family', window.getComputedStyle(node, null).getPropertyValue('font-family'));\n            node.replaceWith(node);\n        }\n\n        html2canvas.default(chart, <html2canvas.Options> {\n            height: chart.clientHeight,\n            width: chart.clientWidth,\n            scale: 3,\n            // backgroundColor: null,\n            logging: false,\n            // onclone: (document) => {\n            //     document.getElementById('chart').style.visibility = 'visible';\n            // }\n        }).then((canvas) => {\n            // // Get chart data so we can append to the pdf\n            // const chartData = canvas.toDataURL();\n            // // Prepare pdf structure\n            // const docDefinition = {\n            //     content: [],\n            //     styles: {\n            //         subheader: {\n            //             fontSize: 16,\n            //             bold: true,\n            //             margin: [0, 10, 0, 5],\n            //             alignment: 'left'\n            //         },\n            //         subsubheader: {\n            //             fontSize: 12,\n            //             italics: true,\n            //             margin: [0, 10, 0, 25],\n            //             alignment: 'left'\n            //         }\n            //     },\n            //     defaultStyle: {\n            //         // alignment: 'justify'\n            //     }\n            // };\n\n            canvas.toBlob((blob) => {\n                saveAs(blob, 'chart.png');\n            }, 'image/png');\n        });\n    }\n}\n","<d-tabs *ngIf=\"columns && showEdit\" title=\"Chart Builder\" [showExpandButton]=\"true\" tabStyle=\"pills\">\n\n    <d-tab title=\"Properties\">\n        <div class=\"container\">\n        <div class=\"d-flex flex-wrap\">\n            <div class=\"flex-fill\">\n                <form-select [(ngModel)]=\"config.chartType\" (ngModelChange)=\"updateChartType($event)\" labelLeft=\"Chart\"\n                    [items]=\"chartTypes\" parentName='name' childItems='charts' itemKey='key' itemName='name'>\n                </form-select>\n            </div>\n    \n            <div class=\"flex-fill pl-1\">\n                <form-select [(ngModel)]=\"config.colorScheme\" (ngModelChange)=\"updateChartData($event)\" labelLeft=\"Color\" [items]=\"colorSets\" itemName='name'\n                    itemKey='name'>\n                </form-select>\n            </div>\n    \n            <div class=\"flex-fill\">\n                <form-select [(ngModel)]=\"config.multiGridColumn\" (ngModelChange)=\"updateChartData($event)\" labelLeft=\"Grid Column\"\n                    [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n                </form-select>\n            </div>\n        </div>\n\n        <div *ngIf=\"chartType\">\n            <!-- <div class=\"d-flex flex-wrap pt-1\"\n                *ngIf=\"chartType.inputFormat === eInputFormat.SingleSeries || chartType.inputFormat === eInputFormat.GeoCoordinates\">\n                <div class=\"flex-fill\">\n                    <form-select [(ngModel)]=\"config.labelColumn\" (ngModelChange)=\"updateChartData($event)\" labelLeft=\"Labels\"\n                        [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n                    </form-select>\n                </div>\n        \n                <div class=\"flex-fill pl-1\">\n                    <form-select [(ngModel)]=\"config.seriesColumn\" (ngModelChange)=\"updateChartData($event)\"\n                        labelLeft=\"Series Column\" [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n                    </form-select>\n                </div>\n            </div> -->\n        \n            <!-- <div class=\"d-flex flex-wrap pt-1\" *ngIf=\"chartType.inputFormat === eInputFormat.GeoCoordinates\">\n                <div class=\"flex-fill\">\n                    <form-select [(ngModel)]=\"config.latitudeColumn\" (ngModelChange)=\"updateChartData($event)\" labelLeft=\"Latitude\"\n                        [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n                    </form-select>\n                </div>\n        \n                <div class=\"flex-fill pl-1\">\n                    <form-select [(ngModel)]=\"config.longitudeColumn\" (ngModelChange)=\"updateChartData($event)\"\n                        labelLeft=\"Longitude\" [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n                    </form-select>\n                </div>\n            </div> -->\n        \n            <div class=\"d-flex flex-wrap pt-1\"\n                *ngIf=\"chartType.inputFormat === eInputFormat.MultiSeries || chartType.inputFormat === eInputFormat.InverseSeries\">\n                <div class=\"flex-fill\">\n                    <form-select [(ngModel)]=\"config.labelColumn\" (ngModelChange)=\"updateChartData($event)\" labelLeft=\"Labels\"\n                        [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n                    </form-select>\n                </div>\n                <div class=\"flex-fill pl-1\">\n                    <form-select [(ngModel)]=\"config.pivotColumn\" (ngModelChange)=\"updateChartData($event)\"\n                    [allowNullSelect]=\"true\" selectNullMessage=\"(No pivot column)\"\n                    labelLeft=\"Series Pivot\" [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n                    </form-select>\n                </div>\n            </div>\n        \n            <chart-series [columns]=\"columns\" [(series)]=\"config.seriesColumns\" (seriesChange)=\"updateChartData()\" [allowLineChart]=\"chartType.isBar && chartType.isLine\" [allowAlternateAxis]=\"chartType.isBar\" ></chart-series>\n        \n            <div class=\"d-flex flex-wrap pt-1\" *ngIf=\" chartType.inputFormat===eInputFormat.Xy || chartType.inputFormat===eInputFormat.XyMinMax\n                    || chartType.inputFormat===eInputFormat.XyBubble\">\n                <div class=\"flex-fill\">\n                    <form-select [(ngModel)]=\"config.labelColumn\" (ngModelChange)=\"updateChartData($event)\" labelLeft=\"Labels\"\n                        [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n                    </form-select>\n                </div>\n        \n                <div class=\"flex-fill pl-1\">\n                    <form-select [(ngModel)]=\"config.xColumn\" (ngModelChange)=\"updateChartData($event)\" labelLeft=\"X-Column\"\n                        [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n                    </form-select>\n                </div>\n        \n                <div class=\"flex-fill pl-1\">\n                    <form-select [(ngModel)]=\"config.yColumn\" (ngModelChange)=\"updateChartData($event)\" labelLeft=\"Y-Column\"\n                        [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n                    </form-select>\n                </div>\n        \n                <ng-template [ngIf]=\"chartType.inputFormat === eInputFormat.XyMinMax\">\n                    <div class=\"flex-fill pl-1\">\n                        <form-select [(ngModel)]=\"config.minColumn\" (ngModelChange)=\"updateChartData($event)\"\n                            labelLeft=\"Error Min Column\" [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n                        </form-select>\n                    </div>\n        \n                    <div class=\"flex-fill pl-1\">\n                        <form-select [(ngModel)]=\"config.maxColumn\" (ngModelChange)=\"updateChartData($event)\"\n                            labelLeft=\"Error Max Column\" [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n                        </form-select>\n                    </div>\n                </ng-template>\n        \n                <ng-template [ngIf]=\"chartType.inputFormat === eInputFormat.XyBubble\">\n                    <div class=\"flex-fill pl-1\">\n                        <form-select [(ngModel)]=\"config.radiusColumn\" (ngModelChange)=\"updateChartData($event)\"\n                            labelLeft=\"Bubble Radius\" [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n                        </form-select>\n                    </div>\n                </ng-template>\n        \n            </div>\n        \n\n        \n\n        \n\n            </div>\n        </div>\n    </d-tab>\n\n    <d-tab *ngIf=\"chartType.allowLabels\" title=\"Labels\">\n        <div class=\"container\">\n            <div class=\"d-flex flex-wrap pt-1\">\n                <div class=\"flex-fill pl-1\">\n                    <form-checkbox label=\"Display Labels on Charts Points\" [(ngModel)]=\"config.showDataLabel\"\n                        (ngModelChange)=\"updateChartLayout()\" [border]=\"true\">\n                    </form-checkbox>\n                </div>\n                <div class=\"flex-fill pl-1\">\n                    <form-checkbox label=\"Display Values on Chart Points\" [(ngModel)]=\"config.showDataValue\"\n                        (ngModelChange)=\"updateChartLayout()\" [border]=\"true\"></form-checkbox>\n                </div>\n            </div>\n            <div class=\"d-flex flex-wrap pt-1\">\n                <div class=\"flex-fill pl-1\">\n                    <form-select [(ngModel)]=\"config.labelAlign\" (ngModelChange)=\"updateChartLayout()\"\n                        labelLeft=\"Anchor Label Position\" [items]=\"['center', 'start', 'end']\">\n                    </form-select>\n                </div>\n                <div class=\"flex-fill pl-1\">\n                    <form-select [(ngModel)]=\"config.labelAnchor\" (ngModelChange)=\"updateChartLayout()\"\n                        labelLeft=\"Label Alignment\" [items]=\"['center', 'start', 'end', 'top', 'bottom', 'right', 'left']\">\n                    </form-select>\n                </div>\n            </div>\n        </div>\n    </d-tab>\n\n    <d-tab title=\"Axis\">\n        <div class=\"container\">\n            <div class=\"d-flex flex-wrap pt-1\">\n                <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowXAxis\">\n                    <form-checkbox label=\"X-Axis Title\" [(ngModel)]=\"config.showXAxisLabel\"\n                        (ngModelChange)=\"updateChartLayout()\" [border]=\"true\"></form-checkbox>\n                </div>\n                <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowXAxis\">\n                    <form-checkbox label=\"X-Axis Labels\" [(ngModel)]=\"config.showXAxis\"\n                        (ngModelChange)=\"updateChartLayout()\" [border]=\"true\"></form-checkbox>\n                </div>\n                <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowYAxis\">\n                    <form-checkbox label=\"Y-Axis Title\" [(ngModel)]=\"config.showYAxisLabel\"\n                        (ngModelChange)=\"updateChartLayout()\" [border]=\"true\"></form-checkbox>\n                </div>\n                <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowYAxis\">\n                    <form-checkbox label=\"Y-Axis Labels\" [(ngModel)]=\"config.showYAxis\"\n                        (ngModelChange)=\"updateChartLayout()\" [border]=\"true\"></form-checkbox>\n                </div>\n                <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowGridLines\">\n                    <form-checkbox label=\"Grid Lines\" [(ngModel)]=\"config.showGridLines\"\n                        (ngModelChange)=\"updateChartLayout()\" [border]=\"true\"></form-checkbox>\n                </div>\n            </div>\n            <div class=\"d-flex flex-wrap pt-1\"\n            *ngIf=\"chartType.allowYScaleMin || chartType.allowYScaleMax ||chartType.allowXScaleMin ||chartType.allowXScaleMax\">\n            <div class=\"flex-fill  pl-1\">\n                <form-checkbox label=\"Auto scale\" [(ngModel)]=\"config.autoScale\"\n                    (ngModelChange)=\"updateChartLayout()\" [border]=\"true\"></form-checkbox>\n            </div>\n\n            <ng-template [ngIf]=\"!config.autoScale\">\n                <div class=\"flex-fill  pl-1\" *ngIf=\"chartType.allowXScaleMin\">\n                    <form-input type=\"number\" labelLeft=\"X-Min\" [(ngModel)]=\"config.xScaleMin\"\n                        (ngModelChange)=\"updateChartLayout()\"></form-input>\n                </div>\n                <div class=\"flex-fill  pl-1\" *ngIf=\"chartType.allowXScaleMax\">\n                    <form-input type=\"number\" labelLeft=\"X-Max\" [(ngModel)]=\"config.xScaleMax\"\n                        (ngModelChange)=\"updateChartLayout()\"></form-input>\n                </div>\n                <div class=\"flex-fill  pl-1\" *ngIf=\"chartType.allowYScaleMin\">\n                    <form-input type=\"number\" labelLeft=\"Y-Min\" [(ngModel)]=\"config.yScaleMin\"\n                        (ngModelChange)=\"updateChartLayout()\"></form-input>\n                </div>\n                <div class=\"flex-fill  pl-1\" *ngIf=\"chartType.allowYScaleMax\">\n                    <form-input type=\"number\" labelLeft=\"Y-Max\" [(ngModel)]=\"config.yScaleMax\"\n                        (ngModelChange)=\"updateChartLayout()\"></form-input>\n                </div>\n            </ng-template>\n        </div>\n        </div>\n    </d-tab>\n\n    <d-tab title=\"Formatting\">\n        <div class=\"d-flex flex-wrap pt-1\">\n            <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowLegend\">\n                <form-checkbox label=\"Display Legend\" [(ngModel)]=\"config.showLegend\" (ngModelChange)=\"updateChartLayout()\" [border]=\"true\">\n                </form-checkbox>\n            </div>\n            <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowLegend && config.showLegend\">\n                <form-select [(ngModel)]=\"config.legendPosition\" (ngModelChange)=\"updateChartLayout()\" labelLeft=\"Legend Position\"\n                    [items]=\"['top', 'bottom', 'right', 'left']\">\n                </form-select>\n            </div>\n        </div>\n        <div class=\"d-flex flex-wrap pt-1\">\n            <ng-template [ngIf]=\"chartType.isBar\">\n                <div class=\"flex-fill pl-1\" >\n                    <form-checkbox label=\"Single Color\" [(ngModel)]=\"config.singleBarColor\" (ngModelChange)=\"updateChartData($event)\"\n                        [border]=\"true\"></form-checkbox>\n                </div>\n            </ng-template>\n    \n            <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowDoughnut\">\n                <form-input type=\"number\" labelLeft=\"Doughnut CutOut %\" [(ngModel)]=\"config.cutOutPercentage\" (ngModelChange)=\"updateChartLayout()\"\n                    [border]=\"true\"></form-input>\n            </div>\n    \n            <div class=\"flex-fill  pl-1\" *ngIf=\"chartType.allowFill\">\n                <form-checkbox label=\"Fill Area\" [(ngModel)]=\"config.fill\" (ngModelChange)=\"updateChartData()\"\n                    [border]=\"true\"></form-checkbox>\n            </div>\n    \n            <ng-template [ngIf]=\"chartType.isLine\">\n                <div class=\"flex-fill  pl-1\">\n                    <form-checkbox label=\"Span Null Gaps\" [(ngModel)]=\"config.spanGaps\" (ngModelChange)=\"updateChartData()\"\n                        [border]=\"true\"></form-checkbox>\n                </div>\n                <div class=\"flex-fill pl-1\">\n                    <form-select [(ngModel)]=\"config.lineCurve\" (ngModelChange)=\"updateChartData()\" labelLeft=\"Line Curve\"\n                        [items]=\"eLineCurveItems\" itemKey='key' itemName='name'>\n                    </form-select>\n                </div>\n            </ng-template>\n    \n    \n        </div>\n    </d-tab>\n\n</d-tabs>\n\n<d-widget-section [title]=\"title\" [showExpandButton]=\"true\" [padding]=\"false\">\n    <ng-template #sectionHeader>\n        <d-button buttonClass=\"btn-sm btn-primary m-1\" iconClass=\"fa fa-download\" (click)=\"export()\" text=\"export\"></d-button>\n    </ng-template>\n\n    <div style=\"height: 80vh\">\n        <chart-view [responsive]=\"true\" #chartView [config]=\"config\" [columns]=\"columns\" [data]=\"data\" [updateOptionsEvent]=\"updateOptionsSubject\" [updateDataEvent]=\"updateDataSubject\">\n        </chart-view>\n    </div>\n\n</d-widget-section>\n","// Generate more colorsets at https://medialab.github.io/iwanthue/\n\nexport let colorSets = [\n    {\n        name: 'bright',\n        selectable: true,\n        group: 'Ordinal',\n        domain: [\n            '#00d352',\n            '#c300dc',\n            '#00bd00',\n            '#000371',\n            '#56ff75',\n            '#e944c1',\n            '#67c436',\n            '#005fd8',\n            '#c2cc33',\n            '#548eff',\n            '#da9d00',\n            '#0093ff',\n            '#ff871a',\n            '#16c1ff',\n            '#b80006',\n            '#00eea2',\n            '#ff6bba',\n            '#23b54f',\n            '#95003e',\n            '#58f7ba',\n            '#330328',\n            '#ffc649',\n            '#002f5f',\n            '#459c3a',\n            '#9375c3',\n            '#004e00',\n            '#6d1c4d',\n            '#7aa84b',\n            '#0097d6',\n            '#905e00',\n            '#00aed4',\n            '#415e00',\n            '#008aa0',\n            '#464500',\n            '#00af8b',\n            '#003400',\n            '#796d39',\n            '#00724f',\n            '#003500',\n            '#003700'\n        ]\n    },\n    {\n        name: 'pastel',\n        selectable: true,\n        group: 'Ordinal',\n        domain: ['#7cd7d5',\n            '#ecabb7',\n            '#5ecee9',\n            '#eab494',\n            '#98c2ec',\n            '#b5d08d',\n            '#e1b0dd',\n            '#9ab474',\n            '#bcb8ec',\n            '#c6eeb6',\n            '#80b6aa',\n            '#ece6af',\n            '#9bd1c6',\n            '#adaf74',\n            '#acefd7',\n            '#d3c195',\n            '#92ca9c',\n            '#c2c387',\n            '#98c3a6',\n            '#c2cba1']\n    },\n    {\n        name: 'dark',\n        selectable: true,\n        group: 'Ordinal',\n        domain:\n            ['#361a31',\n                '#2d562b',\n                '#5f345c',\n                '#1b3516',\n                '#393c6b',\n                '#4f4b23',\n                '#405167',\n                '#704125',\n                '#192f3e',\n                '#6b2f38',\n                '#2d564d',\n                '#4f2f2a',\n                '#091f1b',\n                '#51503f',\n                '#091f1b',\n                '#332412',\n                '#091f1b',\n                '#273421',\n                '#1e3430',\n                '#131f0b']\n    },\n    {\n        name: 'fluorescent',\n        selectable: true,\n        group: 'Ordinal',\n        domain:\n            ['#97eb43',\n                '#ed7781',\n                '#4dd747',\n                '#ee7d45',\n                '#59e388',\n                '#dc9e51',\n                '#65e9c1',\n                '#e5c434',\n                '#43b78b',\n                '#dbed3b',\n                '#7db986',\n                '#77b624',\n                '#e2de80',\n                '#56b569',\n                '#b2a446',\n                '#ade872',\n                '#8daf63',\n                '#b1c43c',\n                '#b6e89e',\n                '#6bb44a']\n    },\n    {\n        name: 'roses',\n        selectable: true,\n        group: 'Ordinal',\n        domain:\n            ['#9e7681',\n                '#d339b7',\n                '#e6bbcd',\n                '#bb297b',\n                '#845865',\n                '#e954af',\n                '#8b6582',\n                '#e73d74',\n                '#c691b1',\n                '#b82f51',\n                '#e288cb',\n                '#904251',\n                '#ee84b0',\n                '#8d476f',\n                '#de8e9b',\n                '#af5090',\n                '#a96370',\n                '#9d3862',\n                '#b56993',\n                '#cf637e']\n    },\n    {\n        name: 'ocean',\n        selectable: true,\n        group: 'Ordinal',\n        domain:\n            ['#6d9fde',\n                '#274c56',\n                '#427ee2',\n                '#274c56',\n                '#576eb0',\n                '#43a8ba',\n                '#3a4e86',\n                '#2b777f',\n                '#2e6ea9',\n                '#274c56',\n                '#84a2b8',\n                '#154975',\n                '#5e7d94',\n                '#3e4756',\n                '#4283b0',\n                '#555f6e',\n                '#2e5b88',\n                '#3f646e',\n                '#3c5472',\n                '#1c5872']\n    },\n    {\n        name: 'fire',\n        selectable: true,\n        group: 'Ordinal',\n        domain:\n            ['#983151',\n                '#e27e8e',\n                '#dd3e66',\n                '#ac595b',\n                '#a3302b',\n                '#7d3f36',\n                '#de4f37',\n                '#e38a6b',\n                '#c15f2a',\n                '#ab7254',\n                '#84421c',\n                '#e38d30',\n                '#a66f2b',\n                '#755121',\n                '#e5b782',\n                '#b19359',\n                '#b7902e',\n                '#e5b946',\n                '#7c671a',\n                '#6d5d2c']\n    },\n    {\n        name: 'green',\n        selectable: true,\n        group: 'Ordinal',\n        domain:\n            ['#415a1f',\n                '#6c8548',\n                '#669a36',\n                '#97ce64',\n                '#66be3b',\n                '#326e20',\n                '#3c5a31',\n                '#66865a',\n                '#98c38a',\n                '#599954',\n                '#34983a',\n                '#245b28',\n                '#51d672',\n                '#5fcb87',\n                '#3d8d5f',\n                '#27755d',\n                '#57d9b6',\n                '#50ae94',\n                '#63dad7',\n                '#42afc1']\n    },\n    {\n        name: 'nightshade',\n        selectable: true,\n        group: 'Ordinal',\n        domain:\n            ['#23337c',\n                '#121331',\n                '#433d9f',\n                '#33285d',\n                '#4838c0',\n                '#150e3f',\n                '#574e6a',\n                '#2d206f',\n                '#342c46',\n                '#594588',\n                '#15064d',\n                '#3d1584',\n                '#771fba',\n                '#1d1224',\n                '#220c31',\n                '#3f264e',\n                '#46155c',\n                '#782d89',\n                '#673d6c',\n                '#401142']\n    },\n    {\n        name: 'vibrant',\n        selectable: true,\n        group: 'Ordinal',\n        domain:\n        ['#7ad78b',\n        '#763ecb',\n        '#70d64c',\n        '#d345c5',\n        '#c9d642',\n        '#686fd7',\n        '#d59c33',\n        '#4d468c',\n        '#cec87a',\n        '#8b3476',\n        '#4d8039',\n        '#c87dd1',\n        '#59caba',\n        '#d84930',\n        '#709bd6',\n        '#ce7c54',\n        '#d94475',\n        '#7b6729',\n        '#d483a4',\n        '#8c3636']\n    },\n];\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { Observable, Subscription} from 'rxjs';\nimport { Router } from '@angular/router';\nimport { ManagedTask, eManagedTaskStatus, eManagedTaskStatusItems } from '../../../shared.models';\n\n@Component({\n    selector: 'dexih-tasks',\n    templateUrl: './tasks.component.html',\n    styleUrls: ['./tasks.component.scss']\n})\nexport class TasksComponent implements OnInit, OnDestroy {\n    private _tasksSubscription: Subscription;\n\n    count: number;\n    lastUpdate: any;\n    active: boolean;\n    activities: any;\n    loading: boolean;\n    tasksRunning = false;\n\n    eManagedTaskStatus = eManagedTaskStatus;\n    eManagedTaskStatusItems = eManagedTaskStatusItems\n\n    tasks: Observable<Array<ManagedTask>>;\n\n    constructor(\n        private authService: AuthService,\n        private router: Router\n    ) {\n        this.active = false;\n        this.loading = false;\n        this.activities = [];\n        this.count = 0;\n        this.lastUpdate = new Date();\n    }\n\n    ngOnInit() {\n        this.tasks = this.authService.getTasksObservable();\n\n        this._tasksSubscription = this.tasks.subscribe(tasks => {\n            this.count = tasks.length;\n            this.tasksRunning = tasks.findIndex(c => c.status === eManagedTaskStatus.Created\n                || c.status === eManagedTaskStatus.Queued\n                || c.status === eManagedTaskStatus.Running) >= 0;\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._tasksSubscription) { this._tasksSubscription.unsubscribe(); }\n        if (this._tasksSubscription) { this._tasksSubscription.unsubscribe(); }\n    }\n\n    update() {\n        this.loading = true;\n        setTimeout(() => {\n            this.lastUpdate = new Date()\n            this.loading = false\n        }, 1000)\n    }\n\n    showTask(item: ManagedTask) {\n        this.router.navigate(['/hubs/tasks/view', item.taskId])\n      }\n\n    cancelTask() {\n        // TBC\n        alert('cancel task not completed.');\n    }\n\n}\n","<d-button-dropdown buttonClass=\"btn btn-outline-secondary text-white\" iconClass=\"fa fa-tasks\" [pullRight]=\"true\" [badge]=\"count\" badgeClass=\"badge-light\" [hideCarrot]=\"true\" title=\"Tasks\">\n    <div *ngIf=\"count==0\">\n        <h5 class=\"p-3\">No tasks</h5>\n    </div>\n    <div class=\"m-0 list-group\" class=\"tasks\">\n        <ng-template ngFor let-item [ngForOf]=\"tasks | async | fieldSortDesc : 'lastUpdate'\">\n            <a (click)=\"showTask(item)\" class=\"list-group-item list-group-item-action flex-column align-items-start\">\n                <div class=\"d-flex w-100 justify-content-between\">\n                    <h5 class=\"mb-1\">{{item.name}}</h5>\n                    <small>{{eManagedTaskStatus[item.status]}} {{item.percentage}}%</small>\n                </div>\n                <small *ngIf=\"item.stepName && !item.isCompleted\">Step: {{item.stepName}}</small>\n                <div class=\"mb-1\">\n                    <div class=\"progress\" style=\"width: 100%\">\n                        <div class=\"progress-bar \" [ngClass]=\"{'bg-success': item.status == eManagedTaskStatus.Completed, 'bg-info': item.status == eManagedTaskStatus.Created || item.status == eManagedTaskStatus.Running || item.status == eManagedTaskStatus.Scheduled, 'bg-danger':  item.status == eManagedTaskStatus.Error || item.status == eManagedTaskStatus.Cancelled }\"\n                            role=\"progressbar\" [style.width]=\"item.percentage + '%'\" [attr.aria-valuenow]=\"item.percentage\" aria-valuemin=\"0\"\n                            aria-valuemax=\"100\">\n                            &nbsp;\n                        </div>\n                    </div>\n                </div>\n                <d-button-cancel *ngIf=\"!item.isCompleted\" [compact]=\"true\" (click)=\"cancel(item)\"></d-button-cancel>\n                <small>Updated: {{item.lastUpdate | calendar }}</small>\n            </a>\n\n        </ng-template>\n    </div>\n\n</d-button-dropdown>","import { Component, OnDestroy, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { Subscription} from 'rxjs';\nimport { HubCache } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { DexihTag } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\nclass TagState {\n    public tag: DexihTag\n    public isChecked = false;\n    \n}\n\n@Component({\n    selector: 'tags-filter-button',\n    templateUrl: './tags-filter-button.component.html'\n})\nexport class TagsFilterButtonComponent implements OnInit, OnDestroy {\n    @Input() public pullRight = false;\n    @Output() public tags = new EventEmitter<DexihTag[]>();\n\n    public hubCache: HubCache;\n    public tagStates: TagState[];\n\n    private _hubCacheSubscription: Subscription;\n\n    private cancelToken: CancelToken = new CancelToken();\n\n    constructor(\n        private hubService: HubService) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n            if (cache.isLoaded) {\n                this.hubCache = cache;\n\n                let dexihTags = this.hubCache.hub.dexihTags;\n\n                this.tagStates = new Array(dexihTags.length);\n                for (let i = 0; i < this.tagStates.length; i++) {\n                    let tag = dexihTags[i];\n                    this.tagStates[i] = new TagState();\n                    this.tagStates[i].tag = tag;\n                    this.tagStates[i].isChecked = false;\n                }\n            }\n        });\n    }\n\n\n    clear() {\n        this.tagStates.forEach(c => c.isChecked = false);\n        this.tagChange();\n    }\n\n    tagChange() {\n        let selectedTags = this.tagStates.filter(c => c.isChecked).map(c => c.tag);\n        this.tags.emit(selectedTags);\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n}\n","<ng-template [ngIf]=\"tagStates\">\n    <d-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-tags\" text=\"Tag Filters\" [pullRight]=\"pullRight\">\n      <a class=\"dropdown-item\" (click)=\"clear()\" title=\"Clear tag filters\"><span class=\"text-danger\"><i class=\"fa fa-trash-o text-danger\"></i> Clear Filter</span></a>\n        <a *ngFor=\"let tagState of tagStates\" class=\"dropdown-item\" >\n            <div class=\"input-group\">\n              <input type=\"checkbox\" class=\"form-check-input\" [(ngModel)]=\"tagState.isChecked\" (change)=\"tagChange(tagState)\" >\n              <h5><span class=\"badge\" [ngStyle]=\"{'background-color': tagState.tag.color}\" ><span class=\"blend-text\">{{tagState.tag.name}}</span></span></h5>\n            </div>\n          </a>\n    </d-button-dropdown>\n</ng-template>","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { HubCache } from '../../hub.models';\nimport { Subscription } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DexihDatajob, DexihHub } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n    selector: 'actions-datajob-button',\n    templateUrl: './actions-datajob-button.component.html'\n})\n\nexport class ActionsDatajobButtonComponent implements OnInit, OnDestroy {\n    @Input() public datajobs: DexihDatajob[];\n    @Input() public showEdit = true;\n    @Input() public pullRight = false;\n\n    public hubCache: HubCache;\n\n    private _hubCacheSubscription: Subscription;\n    private cancelToken: CancelToken = new CancelToken();\n\n\n    constructor(private hubService: HubService,\n        private router: Router,\n        private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n            this.hubCache = cache;\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    delete() {\n        this.hubService.deleteDatajobs(this.datajobs);\n    }\n\n    runDatajobs(truncate: boolean, resetIncremental: boolean) {\n        this.hubService.runDatajobs(this.datajobs, truncate, resetIncremental, null, null, this.cancelToken);\n    }\n\n    runDatajobsOptions() {\n        let datajobs = this.datajobs.map(c => c.key);\n        let datajobsString = datajobs.join('|');\n        this.router.navigate(['datajobs', 'datajob-run', datajobsString], { relativeTo: this.route.parent.parent });\n    }\n\n    export() {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        this.datajobs.forEach(datajob => { this.hubCache.cacheAddDatajob(datajob.key, hub); });\n\n        let filename = this.datajobs.length === 1 ? 'Datajob - ' + this.datajobs[0].name + '.json' : 'datajobs.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    activateDatajobs() {\n        this.hubService.activateDatajobs(this.datajobs, null, this.cancelToken);\n    }\n\n    cancelDatajobs() {\n        this.hubService.deactivateDatajobs(this.datajobs.map(c => c.key), this.cancelToken);\n    }\n\n    editDatajob(datajob: DexihDatajob) {\n        this.router.navigate(['datajob-edit', datajob.key], { relativeTo: this.route });\n    }\n}\n","<ng-template [ngIf]=\"datajobs\">\n    <d-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-table\" [text]=\"datajobs.length > 1 ? 'Datajobs' : 'Datajob'\" [pullRight]=\"pullRight\">\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Metadata</li>\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" [routerLink]=\"['datajob-new']\" title=\"Create a new datajob.\"><i class=\"fa fa-file-o\"></i> New</a></li>\n        <ng-template [ngIf]=\"datajobs.length > 0\">\n            <li *ngIf=\"showEdit && datajobs.length == 1\">\n                <a class=\"dropdown-item\" [routerLink]=\"['datajob-edit', datajobs[0].key]\" queryParamsHandling=\"merge\"><i class=\"fa fa-edit\"></i> Edit</a>\n            </li>\n\n            <li><a class=\"dropdown-item\" (click)=\"export()\" title=\"Export the metadata for the selected datajobs to a local file.\"><i class=\"fa fa-save\"></i> Save Locally</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"delete()\" title=\"Delete the metadata for the selected datajobs.\"><span class=\"text-danger\"><i class=\"fa fa-trash-o text-danger\"></i> Delete</span></a></li>\n    \n            <li class=\"list-group-item list-group-item-heading list-group-item-info\">Operations</li>\n            <li><a class=\"dropdown-item\" *ngIf=\"datajobs.length == 1\" [routerLink]=\"['results']\" [queryParams]=\"{datajobKeys: [datajobs[0].key]}\" title=\"Show the execution history \"><i class=\"fa fa-history\"></i> Execution History</a></li>\n\n            <ng-template [ngIf]=\"hubCache.canWrite\">\n                <li><a class=\"dropdown-item\" (click)=\"activateDatajobs()\" title=\"Activates the datajob schedules/triggers\"><span class=\"text-success\"><i class=\"fa fa-bolt\"></i> Activate Triggers</span> </a></li>\n                <li><a class=\"dropdown-item\" (click)=\"cancelDatajobs()\" title=\"Cancel & deactivate the datajob schedules/triggers\"><span class=\"text-danger\"><i class=\"fa fa-ban\"></i> Cancel/Deactivate Triggers</span> </a></li>\n                <li><a class=\"dropdown-item\"  (click)=\"runDatajobs(false, false)\" title=\"Run selected datajobs now.\"><i class=\"fa fa-bolt\"></i> Run</a></li>\n                <li><a class=\"dropdown-item\" (click)=\"runDatajobs(true, false)\" title=\"Run selected datajobs now (truncate target tables).\"><i class=\"fa fa-bolt\"></i> Run (truncate)</a></li>\n                <li><a class=\"dropdown-item\" (click)=\"runDatajobs(false, true)\" title=\"Run selected datajobs now (reset delta counter).\"><i class=\"fa fa-bolt\"></i> Run (reset delta)</a></li>\n                <li><a class=\"dropdown-item\" (click)=\"runDatajobsOptions()\" title=\"Run selected datajobs with options.\"><i class=\"fa fa-bolt\"></i> Run (options)</a></li>\n            </ng-template>\n\n        </ng-template>\n    </d-button-dropdown>\n</ng-template>","import { Component, Input, OnDestroy, OnInit, OnChanges } from '@angular/core';\nimport { Subscription} from 'rxjs';\nimport { HubCache } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { eSharedObjectType, DexihTag, eSharedObjectTypeItems, DexihHubNamedEntity } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\nclass TagState {\n    public tag: DexihTag\n    public isChecked = false;\n    public isIndeterminate = false;\n}\n\n@Component({\n    selector: 'tags-update-button',\n    templateUrl: './tags-update-button.component.html'\n})\nexport class TagsUpdateButtonComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() public objectType: eSharedObjectType;\n    @Input() public objects: DexihHubNamedEntity[];\n\n    public hubCache: HubCache;\n    public tags: TagState[];\n    public objectTypeName: string;\n\n    private _hubCacheSubscription: Subscription;\n\n    private cancelToken: CancelToken = new CancelToken();\n\n    constructor(\n        private hubService: HubService) { }\n\n    ngOnInit() {\n        this.objectTypeName = eSharedObjectTypeItems.find(c => c.key === this.objectType)?.name;\n\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n            if (cache.isLoaded) {\n                this.hubCache = cache;\n                this.updateTags();\n            }\n        });\n    }\n\n    ngOnChanges(): void {\n        if (this.hubCache?.isLoaded) {\n            this.updateTags();\n        }\n    }\n\n    updateTags() {\n        let objectTags = this.hubCache.hub.dexihTagObjects.filter(c =>\n            c.objectType === this.objectType &&\n            this.objects.findIndex(d => d.key === c.objectKey) >= 0);\n\n        let dexihTags = this.hubCache.hub.dexihTags;\n\n        this.tags = new Array(dexihTags.length);\n        for (let i = 0; i < this.tags.length; i++) {\n            let tag = dexihTags[i];\n            this.tags[i] = new TagState();\n            this.tags[i].tag = tag;\n            let matchingTags = objectTags.filter(c => c.tagKey === tag.key);\n            if (matchingTags.length > 0 && matchingTags.length === this.objects.length) {\n                this.tags[i].isChecked = true;\n                this.tags[i].isIndeterminate = false;\n            } else if (matchingTags.length > 0) {\n                this.tags[i].isChecked = false;\n                this.tags[i].isIndeterminate = true;\n            } else {\n                this.tags[i].isChecked = false;\n                this.tags[i].isIndeterminate = false;\n            }\n        }\n    }\n\n    delete() {\n        this.hubService.deleteTagObjects(this.objects.map(c => {\n            return {objectType: this.objectType, objectKey: c.key};\n        }));\n    }\n\n    tagChange(tag: TagState) {\n        this.hubService.saveTagObjects(tag.tag.key, tag.isChecked,\n            this.objects.map(c => {\n                return {objectType: this.objectType, objectKey: c.key};\n            }));\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n}\n","<ng-template [ngIf]=\"tags && tags.length > 0\">\n    <d-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-tags\" [text]=\"'Tag ' + objectTypeName + 's'\">\n        <a class=\"dropdown-item\" (click)=\"delete()\" title=\"Clear tags from selected {{objectTypeName}}s\"><span class=\"text-danger\"><i class=\"fa fa-trash-o text-danger\"></i> Clear</span></a>\n        <a *ngFor=\"let tag of tags\" class=\"dropdown-item\" >\n            <div class=\"input-group\">\n              <input type=\"checkbox\" class=\"form-check-input\" [indeterminate]=\"tag.isIndeterminate\" [(ngModel)]=\"tag.isChecked\" (change)=\"tagChange(tag)\" >\n              <h5><span class=\"badge\" [ngStyle]=\"{'background-color': tag.tag.color}\" ><span class=\"blend-text\">{{tag.tag.name}}</span></span></h5>\n            </div>\n          </a>\n    </d-button-dropdown>\n</ng-template>","import { Message, CancelToken } from '../+auth/auth.models';\nimport { eLogLevel, LogFactory } from '../../logging';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { AuthService } from '../+auth/auth.service';\nimport { BehaviorSubject, Observable} from 'rxjs';\nimport { DexihActiveAgent, DexihRemoteAgent, logLevel, eEnvironment, RemoteAgentSettings,\n    RemoteAgentSettingsSubset, ManagedTask } from '../shared/shared.models';\n\n@Injectable()\nexport class HubsService implements OnDestroy {\n\n    private logger = new LogFactory('hubs.service');\n    private _hubMessages = new BehaviorSubject<Array<Message>>([]);\n\n    constructor(\n        private authService: AuthService\n        ) {\n    }\n\n    ngOnDestroy() {\n    }\n\n    getHubMessagesObservable(): Observable<Array<Message>> {\n        return this._hubMessages.asObservable();\n    }\n\n    getHubMessages(): Array<Message> {\n        return this._hubMessages.value;\n    }\n\n    addHubMessage(message: Message) {\n        this.authService.addUpdateNotification(message, false);\n        let messages = this.getHubMessages();\n        messages.push(message);\n        this._hubMessages.next(messages);\n    }\n\n    addHubErrorMessage(message: string) {\n        let newMessage = new Message(false, message, null, null);\n        this.addHubMessage(newMessage);\n    }\n\n    addHubClientErrorMessage(error: Error, context: string) {\n        let message = context + '.  The following error occurred on the client: ' + error.message;\n        let newMessage = new Message(false, message, error.stack, null);\n        this.addHubMessage(newMessage);\n    }\n\n    addHubSuccessMessage(message: string) {\n        let newMessage = new Message(true, message, null, null);\n        this.addHubMessage(newMessage);\n    }\n\n    remoteAgents(): Promise<Array<DexihRemoteAgent>> {\n        return this.authService.post<Array<DexihRemoteAgent>>('/api/Account/GetUserRemoteAgents', { }, 'Getting user remote agents...');\n    }\n\n    cancelTasks(tasks: Array<ManagedTask>): Promise<boolean> {\n        return this.authService.post<boolean>('/api/Account/CancelTasks', tasks, 'Cancelling task(s)...');\n    }\n\n    restartAgent(activeAgent: DexihActiveAgent, force: boolean, cancelToken: CancelToken): Promise<boolean> {\n        return this.authService.postRemote<boolean>('/api/Account/RestartAgent',\n        { instanceId: activeAgent.instanceId, force}, activeAgent, 'Restarting agent...', cancelToken);\n    }\n\n    public downloadRemoteAgent(embedUserName: boolean, environment: eEnvironment, ll: logLevel, settings: RemoteAgentSettingsSubset):\n    Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            let remoteAgentSettings = new RemoteAgentSettings();\n            remoteAgentSettings.embedUserName = embedUserName;\n            remoteAgentSettings.environment = environment;\n            remoteAgentSettings.logLevel = ll;\n            remoteAgentSettings.remoteApplicationSettings = settings;\n\n            this.authService.downloadFile('/api/Remote/DownloadZip', {\n                embedUserName,\n                environment,\n                ll,\n                RemoteApplicationSettings: settings\n            }, 'dexih.remote.zip', 'application/zip').then(() => {\n                resolve(true);\n            }).catch(reason => {\n                this.logger.LogC(() => `downloadRemoteAgent, error: ${reason.message}.`, eLogLevel.Error);\n                this.addHubMessage(reason);\n                reject(reason);\n            });\n        });\n    }\n\n    public downloadRemoteSettings(embedUserName: boolean, environment: eEnvironment, ll: logLevel,\n        settings: RemoteAgentSettingsSubset): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            let remoteAgentSettings = new RemoteAgentSettings();\n            remoteAgentSettings.embedUserName = embedUserName;\n            remoteAgentSettings.environment = environment;\n            remoteAgentSettings.logLevel = ll;\n            remoteAgentSettings.remoteApplicationSettings = settings;\n\n            this.authService.downloadFile('/api/Remote/DownloadAppSettings', {\n                embedUserName,\n                environment,\n                ll,\n                RemoteApplicationSettings: settings\n            }, 'appsettings.json', 'application/json').then(() => {\n                    resolve(true);\n            }).catch(reason => {\n                this.logger.LogC(() => `downloadRemoteSettings, error: ${reason.message}.`, eLogLevel.Error);\n                this.addHubMessage(reason);\n                reject(reason);\n            });\n        });\n    }\n\n}\n\n\n\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihTable, DexihTableColumn } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'table-column-view',\n    templateUrl: './table-column-view.component.html'\n})\n\nexport class TableColumnViewComponent implements OnInit {\n    @Input() table: DexihTable;\n    @Input() column: DexihTableColumn;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div class=\"float-right\">\n    <d-button iconClass=\"fa fa-list\" class=\"mr-1\" [routerLink]=\"['table-edit', table.key]\" queryParamsHandling=\"merge\" text=\"Edit Table\" title=\"Edit table\" ></d-button>\n    <d-button-edit [routerLink]=\"['table-edit', table.key, 'column', column.key]\" queryParamsHandling=\"merge\" text=\"Edit Column\" title=\"Edit column\" ></d-button-edit>\n</div>\n<div>\n    <h5>{{column.name}}</h5>\n    <div *ngIf=\"column.description\">\n        <markdown [data]=\"column.description\"></markdown>\n    </div>\n    <div class=\"note\">Table: {{table.name}}, Updated: {{column.updateDate | calendar }} </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihDatajob } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'datajob-view',\n    templateUrl: './datajob-view.component.html'\n})\n\nexport class DatajobViewComponent implements OnInit {\n    @Input() datajob: DexihDatajob;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div [routerLink]=\"['datajob-edit', datajob.key]\" queryParamsHandling=\"merge\">\n    <h5>{{datajob.name}}</h5>\n    <div *ngIf=\"datajob.description\">\n        <markdown [data]=\"datajob.description\"></markdown>\n    </div>\n    <datalink-status [datajobKey]=\"datajob.key\"></datalink-status>\n    <div class=\"note\">Updated: {{datajob.updateDate | calendar }} </div>\n</div>\n","import { Component, OnInit, Input, ContentChild, TemplateRef } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n@Component({\n    selector: 'menu-parent',\n    templateUrl: './menu-parent.component.html',\n    animations: [\n        // trigger name for attaching this animation to an element using the [@triggerName] syntax\n        trigger('slideDown', [\n            state('collapsed', style({ height: 0 })),\n            state('expanded', style({ height: '*' })),\n            transition('expanded <=> collapsed', animate('300ms ease-in')),\n        ])\n    ]\n})\n\nexport class MenuParentComponent implements OnInit {\n    @Input() name: string;\n    @Input() title: string;\n    @Input() iconClass: string;\n    @Input() textClass: string;\n\n    @ContentChild('item') itemTemplate: TemplateRef<any>;\n\n    public expanded = false;\n    public state = 'collapsed';\n\n    constructor() { }\n\n    ngOnInit() { }\n\n    public toggle() {\n        this.expanded = !this.expanded;\n        this.state = this.expanded ? 'expanded' : 'collapsed';\n    }\n\n    public collapse() {\n        this.expanded = false;\n        this.state = 'collapsed';\n    }\n}\n","<li class=\"nav-item\" [ngClass]=\"{'active open' : expanded}\">\n    <a class=\"nav-link d-flex\" [title]=\"title\" (click)=\"toggle()\" [title]=\"name\">\n        <span class=\"{{textClass}}\" >\n            <ng-template [ngTemplateOutlet]=\"itemTemplate\">\n            </ng-template>\n            <i [class]=\"iconClass\"></i>\n        </span>\n        <span class=\"menu-item-parent\">{{name}}</span>\n        <b class=\"ml-auto\">\n            <em *ngIf=\"expanded\" class='fa fa-minus-square-o'></em>\n            <em *ngIf=\"!expanded\" class='fa fa-plus-square-o'></em>\n        </b>\n    </a>\n    <ul class=\"nav-item\" [@slideDown]='state' style=\"overflow: hidden; display: block\">\n        <ng-content></ng-content>\n    </ul>\n</li>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { LayoutService } from '../layout.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main-layout.component.html',\n  styleUrls: ['./main-layout.component.scss'],\n  // animation moves sidebar -250 left, and main -250 left, whilst increasing the main margin by 250\n  // to keep everything aligned.\n  animations: [\n    trigger('sidebar', [\n      state('in', style({\n        transform: 'translate(-250px, 0)'\n      })),\n      state('out', style({\n        transform: 'translate(0, 0)'\n      })),\n      transition('in => out', animate('200ms ease-in-out')),\n      transition('out => in', animate('200ms ease-in-out'))\n    ]),\n    trigger('main', [\n      state('in', style({\n        transform: 'translate(0px, 0)'\n      })),\n      state('out', style({\n        transform: 'translate(250px, 0)', 'margin-right': '250px'\n      })),\n      transition('in => out', animate('200ms ease-in-out')),\n      transition('out => in', animate('200ms ease-in-out'))\n    ]),\n  ]\n})\nexport class MainLayoutComponent implements OnInit, OnDestroy {\n  _layoutSubscription: Subscription;\n\n  collapsed = false;\n  mobileViewActivated = false;\n  sidebarState = 'out';\n  mainState = 'out';\n\n  constructor(private layoutService: LayoutService) {\n  }\n\n  ngOnInit() {\n    this._layoutSubscription = this.layoutService.subscribe(store => {\n      this.collapsed = store.menuCollapsed;\n      this.mobileViewActivated = store.mobileViewActivated;\n\n      if (this.collapsed) {\n        this.sidebarState = 'in';\n        this.mainState = 'in';\n      } else {\n        this.sidebarState = 'out';\n        this.mainState = this.mobileViewActivated ? 'in' : 'out';\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this._layoutSubscription) { this._layoutSubscription.unsubscribe(); }\n  }\n\n}\n","<dexih-header class=\"header\"></dexih-header>\n\n<div class=\"mobile content\">\n    <dexih-navigation class=\"sidebar\"  [@sidebar]='sidebarState' ></dexih-navigation>\n    <div class=\"main\" [@main]='mainState'>\n      <dexih-ribbon></dexih-ribbon>\n      <router-outlet></router-outlet>\n    </div>\n</div>\n\n<div class=\"footer\">\n  <dexih-footer></dexih-footer>\n</div>\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { HubService } from '../../hub.service';\nimport { Subscription } from 'rxjs';\nimport { HubCache } from '../../hub.models';\n\n@Component({\n    selector: 'save-button',\n    templateUrl: './save-button.component.html'\n})\n\nexport class SaveButtonComponent implements OnInit, OnDestroy {\n    @Input() formsService: HubFormsService;\n\n    private _hubCacheSubscription: Subscription;\n    public hubCache: HubCache;\n\n    constructor(public hubService: HubService) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n            this.hubCache = cache;\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n    }\n}\n","<d-button-splitdropdown *ngIf=\"hubCache.canWrite\" [disabled]=\"!formsService.hasChanged\" buttonClass=\"btn-primary\" iconClass=\"fa fa-cloud-download\" text=\"Save\" (buttonClick)=\"formsService.save()\" [pullRight]=\"true\" title=\"Save to the Hub\">\n        <li><a class=\"dropdown-item\" (click)=\"formsService.save(false, false)\" title=\"Save in the hub\"><i class=\"fa fa-cloud-download\"></i> Save</a></li>\n        <li><a class=\"dropdown-item\" (click)=\"formsService.saveLocal()\" title=\"Export as a local file\"><i class=\"fa fa-floppy-o\"></i> Save as file</a></li>\n        <li><a class=\"dropdown-item\" (click)=\"formsService.save(false, true)\" title=\"Save another version\"><i class=\"fa fa-plus-circle\"></i> Save As...</a></li>\n</d-button-splitdropdown>\n<d-button *ngIf=\"!hubCache.canWrite\" (click)=\"formsService.saveLocal()\" iconClass=\"fa fa-floppy-o\"></d-button>","import { Directive, HostListener, Input, Output, EventEmitter, HostBinding } from '@angular/core';\n\n@Directive({ selector: '[dropZone]' })\nexport class DropZoneDirective {\n    @Input() requireFiles = false;\n    @Input() zones: string[];\n    @Input() zone: string;\n    @Input() dropAllowedClass = '';\n    @Input() dropNotAllowedClass = '';\n    @Output() dropFiles: EventEmitter<File> = new EventEmitter<File>();\n    @Output() dragFilesOver: EventEmitter<any> = new EventEmitter();\n    @Output() dragLeave: EventEmitter<any> = new EventEmitter();\n    @Output() dragInvalid: EventEmitter<any> = new EventEmitter();\n    @Output() dropData: EventEmitter<any> = new EventEmitter();\n\n    private isMouseOver = false;\n    private isDropAllowed = false;\n\n    private _elementClass: string\n\n    @Input('class')\n    @HostBinding('class')\n    get elementClass(): string {\n        let dragClass = this.isMouseOver ?\n        (this.isDropAllowed ? this.dropAllowedClass : this.dropNotAllowedClass) : '';\n\n        return this._elementClass + ' ' + dragClass;\n    }\n    set elementClass(val: string) {\n        this._elementClass = val;\n    }\n\n    constructor() { }\n\n    @HostListener('dragover', ['$event']) public onDragOver(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.isMouseOver = true;\n\n        if (this.dropAllowed(event)) {\n            event.dataTransfer.dropEffect = 'copy';\n            this.isDropAllowed = true;\n            this.dragFilesOver.emit();\n            return;\n        }\n\n        this.isDropAllowed = false;\n        event.dataTransfer.dropEffect = 'none';\n        this.dragInvalid.emit();\n    }\n\n    dropAllowed(event): boolean {\n        if (this.requireFiles) {\n            if (event.dataTransfer.types) {\n                for (let i = 0; i < event.dataTransfer.types.length; i++) {\n                    if (event.dataTransfer.types[i] === 'Files') {\n                        return true;\n                    }\n                }\n            }\n        } else {\n            let zone = this.getZone(event);\n            if (!zone && !this.zone && !this.zones) {\n                return true;\n            }\n            if (this.zone && this.zone === zone) {\n                return true;\n            }\n            if (this.zones && Array.isArray(this.zones) && this.zones.findIndex(z => z === zone) >= 0) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    getZone(event): string {\n        if (event.dataTransfer.types) {\n            for (let i = 0; i < event.dataTransfer.types.length; i++) {\n                let type = <string> event.dataTransfer.types[i];\n                if (type && type.substr(0, 5) === 'zone:') {\n                    return type.substr(5);\n                }\n            }\n        }\n    }\n\n    @HostListener('dragleave', ['$event']) public onDragLeave(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.isMouseOver = false;\n        this.isDropAllowed = false;\n        this.dragLeave.emit();\n    }\n\n    @HostListener('drop', ['$event']) public onDrop(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.isMouseOver = false;\n        this.isDropAllowed = false;\n\n        if (this.dropAllowed(event)) {\n            let files = event.dataTransfer.files;\n            if (files.length > 0) {\n                this.dropFiles.emit(files);\n            }\n\n            let data = event.dataTransfer.getData('data');\n            if (data) {\n                this.dropData.emit(JSON.parse(data));\n            }\n        }\n\n        this.dragLeave.emit();\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.scss']\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div id=\"auth-page\">\n    <router-outlet></router-outlet>\n</div>\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport { RouterModule} from '@angular/router';\nimport { RibbonModule } from './ribbon';\nimport { SharedModule} from '../shared.module';\n\nimport {HeaderModule} from './header/header.module';\n\nimport {FooterComponent} from './footer/footer.component';\nimport {NavigationModule} from './navigation/navigation.module';\nimport { MainLayoutComponent } from './app-layouts/main-layout.component';\nimport { EmptyLayoutComponent } from './app-layouts/empty-layout.component';\nimport { AuthLayoutComponent } from './app-layouts/auth-layout.component';\nimport { HubService } from '../../+hub';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n\n    SharedModule,\n    HeaderModule,\n    NavigationModule,\n    RibbonModule,\n  ],\n  declarations: [\n    FooterComponent,\n    MainLayoutComponent,\n    EmptyLayoutComponent,\n    AuthLayoutComponent,\n  ],\n  exports: [\n    // HeaderModule,\n    // NavigationModule,\n    // FooterComponent,\n    // RibbonComponent,\n  ],\n  providers: [\n    HubService\n  ]\n})\nexport class LayoutModule {\n  static forRoot(): ModuleWithProviders<LayoutModule> {\n    return {\n        ngModule: LayoutModule,\n        providers: [HubService]\n    };\n}\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SupportOptionsComponent } from './support-options.component';\nimport { DComponentsModule } from 'ngx-d-components';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    DComponentsModule,\n  ],\n  declarations: [\n    SupportOptionsComponent,\n  ],\n  exports: [\n    SupportOptionsComponent\n  ],\n})\nexport class DexihSupportOptionsModule {\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-empty-layout',\n  templateUrl: './empty-layout.component.html',\n  styles: []\n})\nexport class EmptyLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihFileFormat } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'fileFormat-view',\n    templateUrl: './fileFormat-view.component.html'\n})\n\nexport class FileFormatViewComponent implements OnInit {\n    @Input() fileFormat: DexihFileFormat;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div class=\"float-right\">\n    <actions-fileFormat-button [fileFormat]=\"fileFormat\" [pullRight]=\"true\"></actions-fileFormat-button>\n</div>\n<div>\n    <h5>{{fileFormat.name}}</h5>\n    <div *ngIf=\"fileFormat.description\">\n        <markdown [data]=\"fileFormat.description\"></markdown>\n    </div>\n    <div class=\"note\">Updated: {{fileFormat.updateDate | calendar }} </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\n\n@Component({\n    selector: 'connection-edit-button',\n    templateUrl: './connection-edit-button.component.html'\n})\nexport class ConnectionEditButtonComponent implements OnInit {\n    @Input() key = null;\n\n    public hubPath: string;\n\n    constructor(private hubService: HubService) { }\n\n    ngOnInit() {\n        this.hubPath = this.hubService.getHubUrl();\n    }\n}\n","<a [routerLink]=\"[hubPath, 'connection-edit', key]\" *ngIf=\"key\" > \n    <i class=\"fa fa-edit\"></i> \n    Edit \n</a>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'fieldSortDesc',\n})\nexport class SortDescPipe implements PipeTransform {\n\n  transform(items: any[], field: string): any[] {\n    if (!items) { return []; }\n    return items.sort((b, a) => {\n      if (a[field] > b[field]) {\n        return 1;\n    }\n\n    if (a[field] < b[field]) {\n        return -1;\n    }\n\n    return 0;\n    });\n  }\n}\n\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'dexih-footer',\n  templateUrl: './footer.component.html'\n})\nexport class FooterComponent implements OnInit, OnDestroy {\n  buildDate: string;\n  buildVersion: string;\n  year: number;\n\n  _globalCacheSubscription: Subscription;\n\n  constructor(private authService: AuthService) {\n     this._globalCacheSubscription = authService.getGlobalCacheObservable().subscribe(cache => {\n       if (cache) {\n        let date = new Date(cache.buildDate);\n        this.year = date.getFullYear();\n        this.buildDate = date.toLocaleDateString(); // cache.buildDate;\n        this.buildVersion = cache.buildVersion;\n       }\n     });\n  }\n\n  ngOnInit() {}\n\n  ngOnDestroy() {\n    if (this._globalCacheSubscription) { this._globalCacheSubscription.unsubscribe(); }\n  }\n\n}\n","<div class=\"text-white bg-primary d-flex flex-row align-middle\" style=\"height: 30px;\">\n        <div class=\"pl-2\"><a class=\"text-white\" href=\"https://dataexpertsgroup.com\"> Data Experts Group © {{year}}</a></div>\n        <div class=\"d-none d-sm-inline ml-auto pr-2\">Version: {{buildVersion}}, Date: {{buildDate}}</div>\n</div>\n","import { environment } from './environments/environment';\nimport { Message } from './app/+auth/auth.models';\n\nexport enum eLogLevel {\n    Trace,\n    Debug,\n    Warning,\n    Error,\n    Information\n}\n\nexport class LogFactory {\n    constructor(private category: string) {\n\n    }\n\n    private formatMessage(message): string {\n        return this.category + '::' + (new Date()).toISOString() + '::' + message;\n    }\n\n    public Log(message: string, logLevel: eLogLevel) {\n        if (!environment.production) {\n            switch (logLevel) {\n                case eLogLevel.Trace:\n                   // tslint:disable-next-line:no-console\n                   console.debug(this.formatMessage(message));\n                    break;\n                case eLogLevel.Debug:\n                    // tslint:disable-next-line:no-console\n                    console.debug(this.formatMessage(message));\n                    break;\n                case eLogLevel.Warning:\n                    console.warn(this.formatMessage(message));\n                    break;\n                case eLogLevel.Error:\n                    console.error(this.formatMessage(message));\n                    break;\n                case eLogLevel.Information:\n                    // tslint:disable-next-line:no-console\n                    console.info(this.formatMessage(message));\n                    break;\n            }\n        }\n    }\n\n    public LogC(message: () => string, logLevel: eLogLevel) {\n        if (!environment.production) {\n            this.Log(message(), logLevel);\n        }\n    }\n\n    public LogMessage(message: Message) {\n        if (message.success) {\n            this.Log(message.message, eLogLevel.Information);\n        } else {\n            this.Log(message.message + '/n' + message.exceptionDetails, eLogLevel.Error);\n        }\n    }\n\n}\n","import { Component, OnDestroy, OnInit, ViewChild, Input, Output, EventEmitter } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { Subscription, combineLatest, Subject} from 'rxjs';\nimport { DexihMessageComponent } from '../../../../shared/ui/dexihMessage/index';\nimport { CancelToken, Message } from '../../../../+auth/auth.models';\nimport { InputColumn, DexihColumnBase, SelectQuery, eDownloadFormat, SharedData, eDataObjectType,\n    ViewConfig, InputParameterBase, eViewType } from '../../../shared.models';\n\n@Component({\n\n    selector: 'preview-data',\n    templateUrl: './preview-data.component.html',\n})\nexport class PreviewDataComponent implements OnInit, OnDestroy {\n    @Input() public objectType: eDataObjectType;\n    @Input() public objectKey: number;\n    @Input() public hubKey: number;\n    @Input() public parentParameters: InputParameterBase[]; // parameters passed from parent\n    @Input() public showToolbar = false;\n    @Input() public updateQueryParameters = true;\n    @Input() isMaximized = false;\n    @Output() onMaximize = new EventEmitter<boolean>();\n\n    private _subscription: Subscription;\n\n    private refreshDataSubject: Subject<void> = new Subject<void>();\n    public refreshDataObservable = this.refreshDataSubject.asObservable();\n    \n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    public inputColumns: InputColumn[];\n    public tableColumns: DexihColumnBase[];\n    public userParameters: InputParameterBase[]; // parameters that can be edited by user\n    public parameters: InputParameterBase[]; // combined parameters\n\n    public name = 'loading...';\n\n    columns: Array<any>;\n    selectQuery: SelectQuery = new SelectQuery();\n\n    public baseData: Array<any>;\n    public data: Array<any>;\n    public viewConfig: ViewConfig;\n    public showChart = false;\n\n    public eViewType = eViewType;\n\n    private cancelToken = new CancelToken();\n\n    constructor(\n        private authService: AuthService,\n        private route: ActivatedRoute ) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.authService.getSharedDataObject(this.hubKey, this.objectType, this.objectKey),\n                this.route.queryParams\n            ).subscribe(result => {\n                let object = result[0];\n                let queryParams = result[1];\n\n                if (object != null) {\n                    this.inputColumns = object.inputColumns;\n                    this.tableColumns = object.outputColumns;\n                    this.parameters = object.parameters;\n                    this.userParameters = this.parameters;\n\n                    let p = queryParams['p'];\n                    if (p) {\n                        let paramValues = JSON.parse(p);\n\n                        for (let parameter of this.userParameters) {\n                            let value = paramValues[parameter.name];\n                            if (value !== undefined) {\n                                parameter.value = value;\n                                if (parameter.rank === 0) {\n                                    parameter.valueDesc = value;\n                                }\n                            }\n                        }\n                    }\n                } else {\n                    this.parameters = [];\n                }\n\n                this.refresh();\n            });\n        } catch (e) {\n            this.authService.addUpdateNotification(e, false);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    public parameterChange() {\n            // update the query parameters so page refresh will be the same.\n        if (this.updateQueryParameters && this.userParameters.length > 0) {\n            let parameters = {};\n            for (let parameter of this.userParameters) {\n                parameters[parameter.name] = parameter.value;\n            }\n\n            if ('URLSearchParams' in window) {\n                let searchParams = new URLSearchParams(window.location.search)\n                searchParams.set('p', JSON.stringify(parameters));\n                let newRelativePathQuery = window.location.pathname + '?' + searchParams.toString();\n                history.pushState(null, '', newRelativePathQuery);\n            }\n        }\n\n        this.refresh();\n    }\n\n    public refresh() {\n        this.authService.previewData(this.hubKey, this.objectKey, this.objectType, this.inputColumns, this.selectQuery,\n            this.parameters, this.parentParameters, this.cancelToken).then((result) => {\n                this.refreshDataSubject.next();\n                this.columns = result.columns;\n                this.baseData = result.data;\n                this.name = result.name;\n                this.viewConfig = result.viewConfig;\n                if (!this.viewConfig) {\n                    this.data = this.baseData;\n                }\n                if (this.viewConfig && this.viewConfig.viewType === eViewType.Chart) {\n                    this.showChart = true;\n                } else {\n                    this.showChart = false;\n                }\n\n                if (result.status) {\n                    // this.dexihMessage.addMessage(result.status);\n                    this.authService.addUpdateNotification(result.status, false);\n                }\n            }).catch(reason => {\n                this.authService.addUpdateNotification(reason, false);\n                this.baseData = [];\n                this.data = [];\n                this.name = 'failed';\n            });\n    }\n\n    public downloadData(format: eDownloadFormat) {\n        let sharedData = new SharedData();\n        sharedData.objectKey = this.objectKey;\n        sharedData.objectType = this.objectType;\n        sharedData.hubKey = this.hubKey;\n        sharedData.inputColumns = this.inputColumns;\n        sharedData.parameters = this.parameters;\n        sharedData.parentParameters = this.parentParameters;\n        sharedData.query = this.selectQuery;\n\n        this.authService.downloadData([sharedData], true, format, this.cancelToken).then(() => {\n            let message = new Message(true, 'The download task has started.', null, null);\n            this.authService.addUpdateNotification(message, false);\n        }).catch(reason => {\n            this.authService.addUpdateNotification(reason, false);\n        });\n    }\n\n    public maximize() {\n        this.isMaximized = true;\n        this.onMaximize.emit(true);\n    }\n\n    public minimize() {\n        this.isMaximized = false;\n        this.onMaximize.emit(false);\n    }\n\n}\n","<div *ngIf=\"showToolbar\" class=\"side-menu\">\n    <div class=\"side-menu-content\">\n        <div class=\"spin-icon\">\n            <i class=\"fa fa-cog fa-spin\"></i>\n        </div>\n        <div class=\"side-menu-box\">\n            <div class=\"bg-light rounded p-1\">\n                <div>\n                    <download-button (download)=\"downloadData($event)\"></download-button>\n\n                    <div *ngIf=\"viewConfig?.viewType === eViewType.Chart\" class=\"btn-group btn-group-toggle ml-1\"\n                        data-toggle=\"buttons\" title=\"Table\">\n                        <label class=\"btn btn-primary\" [ngClass]=\"{active: showChart===false}\">\n                            <input type=\"radio\" name=\"options\" value=\"table\" autocomplete=\"off\"\n                                (click)=\"showChart = false\">\n                            <i class=\"fa fa-table\"></i>\n                        </label>\n                        <label class=\"btn btn-primary\" [ngClass]=\"{active: showChart===true}\" title=\"Chart\">\n                            <input type=\"radio\" name=\"options\" value=\"chart\" autocomplete=\"off\"\n                                (click)=\"showChart = true\">\n                            <i class=\"fa fa-bar-chart\"></i>\n                        </label>\n                    </div>\n                    <d-button-refresh class=\"ml-1\" [compact]=\"true\" (click)=\"refresh()\"></d-button-refresh>\n                    <d-button *ngIf=\"!isMaximized\" class=\"ml-1\" buttonClass=\"btn btn-primary\"\n                        iconClass=\"fa fa-window-maximize text-white\" (click)=\"maximize()\" tooltip=\"Maximize window\">\n                    </d-button>\n                    <d-button *ngIf=\"isMaximized\" class=\"ml-1\" buttonClass=\"btn btn-primary\"\n                        iconClass=\"fa fa-window-minimize text-white\" (click)=\"minimize()\" tooltip=\"Minimize window\">\n                    </d-button>\n                </div>\n\n                <div *ngIf=\"userParameters && userParameters.length > 0\" class=\"m-1\">\n                    <input-parameters-view [hubKey]=\"hubKey\" [objectType]=\"objectType\" [objectKey]=\"objectKey\"\n                        [parameters]=\"userParameters\" [refreshEvent]=\"refreshDataObservable\"\n                        (onRefreshData)=\"refresh()\" (onChange)=\"parameterChange()\"></input-parameters-view>\n                </div>\n\n                <div *ngIf=\"viewConfig && baseData\" class=\"m-1\">\n                    <series-animate [animateConfig]=\"viewConfig.animateConfig\"\n                        [columns]=\"columns\" [baseData]=\"baseData\" [(data)]=\"data\">\n                    </series-animate>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<div *ngIf=\"!data\" class=\"m-3\">\n    <div class=\"dexih-loader\"></div> &nbsp; &nbsp; Loading ...\n</div>\n\n<div *ngIf=\"!showToolbar && baseData\" class=\"d-flex\">\n    <div *ngIf=\"viewConfig?.chartConfig\" class=\"align-self-start btn-group btn-sm btn-group-toggle\" data-toggle=\"buttons\" title=\"Table\">\n        <label class=\"btn btn-primary\" [ngClass]=\"{active: showChart===false}\">\n            <input type=\"radio\" name=\"options\" value=\"table\" autocomplete=\"off\" (click)=\"showChart = false\">\n            <i class=\"fa fa-table\"></i>\n        </label>\n        <label class=\"btn btn-primary\" [ngClass]=\"{active: showChart===true}\" title=\"Chart\">\n            <input type=\"radio\" name=\"options\" value=\"chart\" autocomplete=\"off\" (click)=\"showChart = true\">\n            <i class=\"fa fa-bar-chart\"></i>\n        </label>\n    </div>\n\n    <div *ngIf=\"userParameters && userParameters.length > 0\" class=\"mt-1\">\n        <input-parameters-view [hubKey]=\"hubKey\" [objectType]=\"objectType\" [objectKey]=\"objectKey\"\n            [parameters]=\"userParameters\" [refreshEvent]=\"refreshDataObservable\" (onRefreshData)=\"refresh()\"\n            (onChange)=\"parameterChange()\">\n        </input-parameters-view>\n    </div>\n\n    <div *ngIf=\"viewConfig && baseData\">\n        <series-animate [animateConfig]=\"viewConfig.animateConfig\"\n            [columns]=\"columns\" [baseData]=\"baseData\" [(data)]=\"data\">\n        </series-animate>\n    </div>\n</div>\n\n<div class=\"h-100 box\" *ngIf=\"data\">\n    <div class=\"box-content\" style=\"height: 90vh;\">\n\n        <d-table *ngIf=\"!showChart\" [enableMultiSelect]=\"false\" [enableSaveCsv]=\"true\" [csvFileName]=\"name + '.csv'\"\n            [enableFilter]=\"false\" [columns]=\"columns\" [data]=\"data\">\n\n            <ng-template #actions let-items=\"items\">\n            </ng-template>\n\n            <ng-template #tableHeader>\n            </ng-template>\n\n        </d-table>\n\n        <chart-view *ngIf=\"showChart\" [responsive]=\"true\" [columns]=\"columns\" [data]=\"data\"\n            [config]=\"viewConfig.chartConfig\">\n        </chart-view>\n    </div>\n</div>","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { DexihDashboardItem, eDataObjectType, InputParameter, InputParameterBase } from '../../../shared.models';\n\n@Component({\n    selector: 'preview-dashboard-item',\n    templateUrl: 'preview-dashboard-item.component.html',\n    styleUrls: ['./preview-dashboard-item.component.scss']\n\n})\n\nexport class PreviewDashboardItemComponent implements OnInit {\n    @Input() hubKey: number;\n    @Input() item: DexihDashboardItem;\n    @Input() refreshData: EventEmitter<string>;\n    @Input() isMaximized = false;\n    @Input() parentParameters: InputParameterBase[];\n    @Output() onMaximize = new EventEmitter<boolean>();\n\n    eDataObjectType = eDataObjectType;\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n\n    // public refresh() {\n    //     let data = <DataCache> this.item['data'];\n    //     let view = this.hubCache.hub.dexihViews.find(c => c.key === this.item.controls.viewKey.value);\n    //     view = Object.assign({}, view);\n    //     view.parameters = this.item.controls.parameters.value;\n    //     if (view) {\n    //         let preview = this.hubService.previewView(view, view.inputValues,\n    //                 this.formsService.currentForm.controls.parameters.value, this.cancelToken);\n    //         data.refresh(preview);\n    //     }\n    // }\n\n    public maximize($event) {\n        this.onMaximize.emit($event);\n    }\n}\n","<div class=\"box\">\n\n    <div *ngIf=\"item.header\" class=\"box-header\">\n        <div class=\"p-3 bg-secondary text-white\">\n            <b>{{item.name}}</b>\n        </div>\n    </div>\n\n    <div *ngIf=\"item.description\" class=\"box-header\">\n        <div class=\"m-1\">\n            <markdown [data]=\"item.description\"></markdown>\n        </div>\n    </div>\n\n    <dexih-message #DexihMessage></dexih-message>\n\n    <div class=\"box-content\">\n        <preview-data [hubKey]=\"hubKey\" [parentParameters]=\"parentParameters\"\n            [objectType]=\"eDataObjectType.DashboardItem\" [objectKey]=\"item.key\" [showToolbar]=\"true\"\n            (onMaximize)=\"maximize($event)\"></preview-data>\n    </div>\n</div>","import { Directive } from '@angular/core';\n@Directive({ selector: 'time'})\nexport class TimeDirective {}\n","import { Subscription, combineLatest} from 'rxjs';\nimport { Component, OnDestroy, OnInit, HostListener, ViewChild } from '@angular/core';\nimport { HubService } from '../../../+hub/hub.service';\nimport { AuthService, } from '../../../+auth/auth.service';\nimport { DexihHubAuth, User } from '../../../+auth/auth.models';\nimport { LayoutService } from '../layout.service';\nimport { HubCache, sharedObjectProperties } from '../../../+hub/hub.models';\nimport { DexihRemoteAgentHub, ePermission } from '../../shared.models';\n\n@Component({\n\n  selector: 'dexih-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n})\nexport class NavigationComponent implements OnInit, OnDestroy {\n  @ViewChild('sidebar', { static: true }) sidebarElement: any;\n\n  hubKey: number;\n\n  _layoutSubscription: Subscription;\n  _subscription: Subscription;\n  _hubCacheObserve: Subscription;\n\n  hubCache: HubCache;\n  message: string;\n\n  hubCacheLoaded = false;\n\n  public expanded = false;\n  public state = 'collapsed';\n\n  user: User;\n  hubs: Array<DexihHubAuth>;\n  remoteAgents: Array<DexihRemoteAgentHub>;\n  ePermission = ePermission;\n  sharedObjectProperties = sharedObjectProperties;\n  objectCounts = [];\n  ignoreClick = false;\n\n  mobileViewActivated = false;\n\n  activeAgentCount = 0;\n\n\n  constructor(\n    private hubService: HubService,\n    private authService: AuthService,\n    private layoutService: LayoutService) {\n  }\n\n  ngOnInit() {\n    this._subscription = combineLatest(\n      this.hubService.getHubCacheObservable(),\n      this.authService.getUserObservable(),\n      this.authService.getHubsObservable(),\n      this.authService.getRemoteAgentsObservable()\n    ).subscribe(result => {\n      this.hubCache = result[0];\n      this.user = result[1];\n      this.hubs = result[2];\n      let activeAgents = result[3];\n\n\n      if (activeAgents) {\n        this.activeAgentCount = activeAgents.length;\n      } else {\n        this.activeAgentCount = 0;\n      }\n\n      if (this.hubCache && this.hubCache.isLoaded()) {\n        this.remoteAgents = this.hubCache.hub.dexihRemoteAgentHubs;\n\n        this.sharedObjectProperties.forEach(c => {\n          if (!this.hubCache.hub[c.cacheProperty]) {\n            this.objectCounts[c.type] = 0;\n          } else {\n            this.objectCounts[c.type] = this.hubCache.hub[c.cacheProperty].filter(d => d.isValid).length;\n          }\n\n        });\n\n        this.hubCacheLoaded = true;\n        this.watchChanges();\n    } else {\n        this.hubCacheLoaded = false;\n    }\n    });\n\n    if (this._layoutSubscription) { this._layoutSubscription.unsubscribe(); }\n      this._layoutSubscription = this.layoutService.subscribe(store => {\n        this.mobileViewActivated = store.mobileViewActivated;\n        if (store.menuCollapsed) {\n          this.expanded = false;\n          this.state = 'collapsed';\n        } else {\n          this.ignoreClick = true;\n          this.expanded = true;\n          this.state = 'expanded';\n        }\n      });\n\n  }\n\n  hideMenu() {\n    this.layoutService.hideMenu();\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._layoutSubscription) { this._layoutSubscription.unsubscribe(); }\n    if (this._hubCacheObserve) { this._hubCacheObserve.unsubscribe(); }\n  }\n\n  watchChanges() {\n    // watch the current connection in case it is changed in another session.\n    if (this._hubCacheObserve) { this._hubCacheObserve.unsubscribe(); }\n    this._hubCacheObserve = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n      let hubCache = this.hubCache;\n      this.hubCache = hubCache;\n\n      let property = this.sharedObjectProperties.find(c => c.type === hubCacheChange.changeClass);\n      if (property) {\n        this.objectCounts[hubCacheChange.changeClass] = this.hubCache.hub[property.cacheProperty].filter(d => d.isValid).length;\n      }\n\n    });\n  }\n\n  // detect a click outside the control, and hide the sidebar\n  @HostListener('document:click', ['$event.target'])\n  public onClick(targetElement: any) {\n        const clickedInside = this.sidebarElement.nativeElement.contains(targetElement);\n        if (!clickedInside && !this.ignoreClick && this.mobileViewActivated && this.expanded) {\n            this.layoutService.hideMenu();\n        }\n    }\n\n}\n","\n<nav #sidebar id=\"dexih-sidebar\" >            \n        <ul class=\"flex-column\">\n            <dexih-login-info></dexih-login-info>\n\n            <menu-parent name=\"Configure\" title=\"Management functions\" iconClass=\"fa fa-lg fa-fw fa-wrench\">\n                    <li class=\"nav-item\" *ngIf=\"user?.isAdmin\">\n                        <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\"  routerLink=\"/admin/users\">\n                            <i class=\"fa fa-lg fa-fw fa-users\"></i>\n                            \n                            <span class=\"menu-item-parent\">{{'Users' }}</span>\n                        </a>\n                    </li>\n                    <li class=\"nav-item\" >\n                        <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hubs/index/hubs-view\">\n                            <i class=\"fa fa-lg fa-fw fa-life-saver\"></i>\n                            <span class=\"menu-item-parent\">{{'Hubs'}}</span>\n                        </a>\n                    </li>\n    \n                    <li class=\"nav-item\"  *ngIf=\"hubCacheLoaded && hubCache.canAdministrate\">\n                        <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary/manage/manage-users\" title=\"Manage Hub User Permissions\">\n                            <i class=\"fa fa-lg fa-fw fa-user-plus\"></i> <span class=\"menu-item-parent\">{{'Hub Users'}}</span>\n                        </a>\n                    </li>\n\n                    <li class=\"nav-item\"  *ngIf=\"hubCacheLoaded && hubCache.canAdministrate\">\n                        <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hubs/index/hubs-view/hub-edit/{{hubCache.hub.hubKey}}\" title=\"Edit Hub Details\">\n                            <i class=\"fa fa-lg fa-fw fa-edit\"></i> <span class=\"menu-item-parent\">{{'Hub Edit'}}</span>\n                        </a>\n                    </li>\n\n                    <li class=\"nav-item\">\n                        <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hubs/agents\" title=\"Manage Remote Agents\">\n                            <i class=\"fa fa-lg fa-fw fa-wifi\"></i> <span class=\"menu-item-parent\">{{'Remote Agents'}}</span>\n                        </a>\n                    </li>\n\n                    <li class=\"nav-item\"  *ngIf=\"hubCacheLoaded && hubCache.canAdministrate\">\n                        <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary/agents\" title=\"Manage Remote Agents\">\n                            <i class=\"fa fa-lg fa-fw fa-wrench\"></i> <span class=\"menu-item-parent\">{{'Hub Agents'}}</span>\n                        </a>\n                    </li>\n        \n            </menu-parent>\n            \n            <div class=\"dropdown-divider\"></div>\n\n            <li class=\"nav-item\">\n                <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\"  [routerLinkActiveOptions]=\"{exact: true}\" routerLink=\"/hubs/index\"  title=\"Home\">\n                    <span data-feather=\"Hubs\"><i class=\"fa fa-lg fa-fw fa-home\"></i></span>\n                     {{'Overview'}}\n                </a>\n            </li>\n\n            <li class=\"nav-item\" >\n                <a (click)=\"hideMenu()\" class=\"nav-link text-primary\"  routerLinkActive=\"active\" routerLink=\"/hubs/index/help\">\n                    <span data-feather=\"Getting Started\"><i class=\"fa fa-lg fa-fw fa-question-circle\"></i></span>\n                    {{'Getting Started' }}\n                </a>\n            </li>\n   \n            <li class=\"nav-item\" >\n                 <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hubs/index/sharedData\">\n                    <span data-feather=\"Shared Data\"><i class=\"fa fa-lg fa-fw fa-newspaper-o\"></i></span>\n                    {{'Shared Data' }}\n                </a>\n            </li>\n\n            <li class=\"nav-item\" >\n                <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hubs/index/notifications\">\n                    <span data-feather=\"Notifications\"><i class=\"fa fa-lg fa-fw fa-envelope-o\"></i></span>\n                    {{'Notifications'}}\n                </a>\n            </li>\n\n            <li class=\"nav-item\" >\n                <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hubs/index/tasks\">\n                    <span data-feather=\"Notifications\"><i class=\"fa fa-lg fa-fw fa-tasks\"></i></span>\n                    {{'Remote Tasks'}}\n                </a>\n            </li>\n\n            <li class=\"nav-item\" >\n                <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hubs/index/support\">\n                    <span data-feather=\"Support\"><i class=\"fa fa-lg fa-fw fa-comment-o\"></i></span>\n                    {{'Support'}}\n                </a>\n            </li>\n\n            <div class=\"dropdown-divider\"></div>\n            <dexih-hubs></dexih-hubs>\n\n            <ng-template [ngIf]=\"hubCacheLoaded\">\n                <dexih-remote-agent></dexih-remote-agent>\n                \n                <li class=\"nav-item\"  >\n                    <a (click)=\"hideMenu()\" class=\"nav-link\" (click)=\"hideMenu()\"  routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary\"  title=\"Hub Summary\">\n                        <i class=\"fa fa-lg fa-fw fa-dashboard\"></i> <span class=\"menu-item-parent\">{{'Summary'}}</span>\n                    </a>\n                </li>\n\n                <li class=\"nav-item\" >\n                    <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/search\" title=\"Search\">\n                        <i class=\"fa fa-lg fa-fw fa-search\"></i> <span class=\"menu-item-parent\">{{'Search'}}</span>\n                    </a>\n                </li>\n    \n                <li *ngFor=\"let sharedObject of sharedObjectProperties\" class=\"nav-item\">\n                    <a class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary/{{sharedObject.routerLink}}\" title=\"{{sharedObject.description}}\">\n                        <i class=\"fa fa-lg fa-fw {{sharedObject.icon}}\"></i> <span class=\"menu-item-parent\">{{sharedObject.displayName}}</span>\n                        <span class=\"badge badge-primary float-right\">{{objectCounts[sharedObject.type]}}</span>\n                    </a>\n                </li>\n\n                <li class=\"nav-item\" >\n                    <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"sharedData\">\n                       <span data-feather=\"Shared Data\"><i class=\"fa fa-lg fa-fw fa-newspaper-o\"></i></span>\n                       {{'Shared Data' }}\n                   </a>\n               </li>\n\n                <li class=\"nav-item\">\n                    <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary/files/manage\" title=\"Manage Flat Files within an existing table definition\">\n                        <i class=\"fa fa-lg fa-fw fa-upload\"></i> <span class=\"menu-item-parent\">{{'Manage Files'}}</span>\n                    </a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary/files/bulk-load\" title=\"Bulk upload files to create auto create table definitions.\">\n                        <i class=\"fa fa-lg fa-fw fa-files-o\"></i> <span class=\"menu-item-parent\">{{'Bulk Load Files'}}</span>\n                    </a>\n                </li>\n    \n                <li class=\"nav-item\">\n                    <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary/datalinks/results\" title=\"Recent execution summaries from datalink and datajobs.\">\n                        <i class=\"fa fa-lg fa-fw fa-tasks\"></i> <span class=\"menu-item-parent\">{{'Job Results'}}</span>\n                    </a>\n                </li>\n\n                <li class=\"nav-item\" *ngIf=\"hubCache.canWrite\">\n                    <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary/import\" title=\"Import Objects\">\n                        <i class=\"fa fa-lg fa-fw fa-level-down\"></i> <span class=\"menu-item-parent\">{{'Import'}}</span><span class=\"badge badge-primary float-right\"></span>\n                    </a>\n                </li>\n\n                <li class=\"nav-item\" *ngIf=\"hubCache.canWrite\">\n                    <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary/export\" title=\"Export Objects\">\n                        <i class=\"fa fa-lg fa-fw fa-level-up\"></i> <span class=\"menu-item-parent\">{{'Export'}}</span><span class=\"badge badge-primary float-right\"></span>\n                    </a>\n                </li>\n            </ng-template>\n\n        </ul>\n    </nav>\n\n\n\n","// Auto generated shared classes.\n// Regenerate at http://localhost:5000/api/Dev/JSModels.\n\n// tslint:disable: no-inferrable-types no-use-before-declare\n\n// auto generated classes\n\nexport class AnimateConfig {\n    public seriesColumn: string = null;\n    public automatic: boolean = true;\n    public delay: number = 500;\n   }\n   \n   export class ApiData {\n    public apiStatus: eApiStatus = null;\n    public hubKey: number = 0;\n    public apiKey: number = 0;\n    public selectQuery: SelectQuery = null;\n    public securityKey: string = null;\n    public successCount: number = 0;\n    public errorCount: number = 0;\n   }\n   \n   export class ApplicationUser {\n    public id: string = '57bb7c8f-83fe-4376-a6b7-22f9ea9bf646';\n    public email: string = null;\n    public concurrencyStamp: string = null;\n    public emailConfirmed: boolean = false;\n    public lockoutEnabled: boolean = false;\n    public lockoutEnd: any = null;\n    public normalizedEmail: string = null;\n    public passwordHash: string = null;\n    public phoneNumber: string = null;\n    public securityStamp: string = '563c3971-1fda-44b2-b1b9-11f7800ec9d7';\n    public userName: string = null;\n    public accessFailedCount: number = 0;\n    public normalizedUserName: string = null;\n    public phoneNumberConfirmed: boolean = false;\n    public twoFactorEnabled: boolean = false;\n    public isInvited: boolean = false;\n    public isRegistered: boolean = false;\n    public isEnabled: boolean = false;\n    public firstName: string = null;\n    public lastName: string = null;\n    public terms: boolean = false;\n    public subscription: boolean = false;\n    public inviteQuota: number = 0;\n    public hubQuota: number = 0;\n    public privateKey: string = null;\n    public certificateChain: string = null;\n    public certificateExpiry: Date = null;\n    public notifyPrivateMessage: boolean = false;\n    public notifySupportMessage: boolean = false;\n   }\n   \n   export class AppSettingsSection {\n    public userPrompt: boolean = true;\n    public remoteAgentId: string = null;\n    public user: string = null;\n    public userToken: string = null;\n    public encryptionKey: string = null;\n    public webServer: string = 'https://dexih.com';\n    public name: string = null;\n    public autoUpgrade: boolean = false;\n    public allowPreReleases: boolean = false;\n    public autoStartPath: string = null;\n   }\n   \n   export class CacheManager {\n    public hub: DexihHub = null;\n    public buildVersion: string = null;\n    public buildDate: Date = null;\n    public googleClientId: string = null;\n    public microsoftClientId: string = null;\n    public googleMapsAPIKey: string = null;\n    public defaultRemoteLibraries: RemoteLibraries = null;\n    public hubKey: number = 0;\n    public cacheEncryptionKey: string = null;\n   }\n   \n   export class ChartConfig {\n    public labelColumn: string = null;\n    public seriesColumns: ChartSeries[] = [];\n    public pivotColumn: string = null;\n    public xColumn: string = null;\n    public yColumn: string = null;\n    public minColumn: string = null;\n    public maxColumn: string = null;\n    public radiusColumn: string = null;\n    public latitudeColumn: string = null;\n    public longitudeColumn: string = null;\n    public chartType: eChartType = eChartType.BarVertical;\n    public colorScheme: string = 'natural';\n    public showXAxis: boolean = true;\n    public showYAxis: boolean = true;\n    public showLegend: boolean = false;\n    public legendPosition: string = 'bottom';\n    public showXAxisLabel: boolean = true;\n    public showYAxisLabel: boolean = true;\n    public showGridLines: boolean = false;\n    public xAxisLabel: string = null;\n    public yAxisLabel: string = null;\n    public xScaleMax: number = null;\n    public xScaleMin: number = null;\n    public yScaleMax: number = null;\n    public yScaleMin: number = null;\n    public autoScale: boolean = true;\n    public cutOutPercentage: number = 0;\n    public fill: boolean = false;\n    public separateAxis: boolean = false;\n    public lineCurve: eLineCurve = eLineCurve.Bezier;\n    public spanGaps: boolean = false;\n    public showDataLabel: boolean = false;\n    public showDataValue: boolean = false;\n    public labelAnchor: string = 'center';\n    public labelAlign: string = 'center';\n    public singleBarColor: boolean = true;\n    public multiGridColumn: string = null;\n    public yAxisLabelRight: string = null;\n   }\n   \n   export class ChartSeries {\n    public column: string = null;\n    public lineChart: boolean = false;\n    public color: string = null;\n    public alternateAxis: boolean = false;\n   }\n   \n   export class ClientMessage {\n    public command: eClientCommand = eClientCommand.Connect;\n    public value: any = null;\n    public success: boolean = false;\n    public message: string = null;\n    public exceptionDetails: string = null;\n   }\n   \n   export class ConnectionAttribute {\n    public connectionCategory: eConnectionCategory = null;\n    public name: string = null;\n    public description: string = null;\n    public databaseDescription: string = null;\n    public serverDescription: string = null;\n    public allowsConnectionString: boolean = false;\n    public allowsSql: boolean = false;\n    public allowsFlatFiles: boolean = false;\n    public allowsManagedConnection: boolean = false;\n    public allowsSourceConnection: boolean = false;\n    public allowsTargetConnection: boolean = false;\n    public allowsUserPassword: boolean = false;\n    public allowsWindowsAuth: boolean = false;\n    public requiresDatabase: boolean = false;\n    public requiresLocalStorage: boolean = false;\n    public serverHelp: string = null;\n    public allowsToken: boolean = false;\n    public defaultSchema: string = null;\n   }\n   \n   export class ConnectionReference {\n    public connectionAssemblyName: string = null;\n    public connectionClassName: string = null;\n    public connectionCategory: eConnectionCategory = null;\n    public name: string = null;\n    public description: string = null;\n    public databaseDescription: string = null;\n    public serverDescription: string = null;\n    public serverHelp: string = null;\n    public allowsConnectionString: boolean = false;\n    public allowsSql: boolean = false;\n    public allowsFlatFiles: boolean = false;\n    public allowsManagedConnection: boolean = false;\n    public allowsSourceConnection: boolean = false;\n    public allowsTargetConnection: boolean = false;\n    public allowsUserPassword: boolean = false;\n    public allowsToken: boolean = false;\n    public allowsWindowsAuth: boolean = false;\n    public requiresDatabase: boolean = false;\n    public requiresLocalStorage: boolean = false;\n    public defaultSchema: string = null;\n   }\n   \n   export class DatalinkProgress {\n    public instanceId: string = null;\n    public securityToken: string = null;\n    public command: eMessageCommand = eMessageCommand.Connect;\n    public results: ManagedTask[] = [];\n   }\n   \n   export class DataPack {\n    public name: string = null;\n    public columns: DataPackColumn[] = [];\n    public data: any[] = [];\n    public transformProperties: TransformProperties = null;\n   }\n   \n   export class DataPackColumn {\n    public name: string = null;\n    public logicalName: string = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n   }\n   \n   export class DeleteQuery {\n    public table: string = null;\n    public filters: Filter[] = [];\n   }\n   \n   export class DexihActiveAgent {\n    public remoteAgentKey: number = 0;\n    public instanceId: string = null;\n    public user: string = null;\n    public name: string = null;\n    public isRunning: boolean = false;\n    public ipAddress: string = null;\n    public isEncrypted: boolean = false;\n    public dataPrivacyStatus: eDataPrivacyStatus = null;\n    public downloadUrls: DownloadUrl[] = [];\n    public upgradeAvailable: boolean = false;\n    public version: string = null;\n    public latestVersion: string = null;\n    public latestDownloadUrl: string = null;\n    public namingStandards: string[] = [];\n    public autoUpgrade: boolean = false;\n   }\n   \n   export class DexihApi {\n    public sourceType: eSourceType = null;\n    public sourceTableKey: number = null;\n    public sourceDatalinkKey: number = null;\n    public autoStart: boolean = false;\n    public cacheQueries: boolean = false;\n    public cacheResetInterval: any = null;\n    public logDirectory: string = null;\n    public selectQuery: SelectQuery = null;\n    public parameters: DexihApiParameter[] = [];\n    public isShared: boolean = false;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihApiParameter {\n    public apiKey: number = 0;\n    public api: DexihApi = null;\n    public value: any = null;\n    public listOfValuesKey: number = null;\n    public allowUserSelect: boolean = true;\n    public valueDesc: any = null;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihBaseEntity {\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihColumnBase {\n    public position: number = 0;\n    public logicalName: string = null;\n    public columnGroup: string = null;\n    public dataType: eTypeCode = eTypeCode.String;\n    public maxLength: number = null;\n    public precision: number = null;\n    public isUnicode: boolean = null;\n    public scale: number = null;\n    public allowDbNull: boolean = false;\n    public deltaType: eDeltaType = eDeltaType.TrackingField;\n    public defaultValue: string = null;\n    public isUnique: boolean = false;\n    public isMandatory: boolean = false;\n    public isIncrementalUpdate: boolean = false;\n    public isInput: boolean = false;\n    public rank: number = 0;\n    public format: string = null;\n    public securityFlag: eSecurityFlag = eSecurityFlag.None;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihColumnValidation {\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public minLength: number = null;\n    public maxLength: number = null;\n    public allowDbNull: boolean = false;\n    public minValue: number = null;\n    public maxValue: number = null;\n    public patternMatch: string = null;\n    public regexMatch: string = null;\n    public listOfValues: string[] = [];\n    public listOfNotValues: string[] = [];\n    public lookupColumnKey: number = null;\n    public lookupIsValid: boolean = false;\n    public lookupMultipleRecords: boolean = false;\n    public invalidAction: eInvalidAction = null;\n    public cleanAction: eCleanAction = null;\n    public cleanValue: string = null;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihConnection {\n    public connectionAssemblyName: string = null;\n    public connectionClassName: string = null;\n    public purpose: eConnectionPurpose = null;\n    public server: string = null;\n    public useWindowsAuth: boolean = false;\n    public username: string = null;\n    public password: string = null;\n    public usePasswordVariable: boolean = false;\n    public defaultDatabase: string = null;\n    public filename: string = null;\n    public useConnectionString: boolean = false;\n    public connectionString: string = null;\n    public useConnectionStringVariable: boolean = false;\n    public embedTableKey: boolean = false;\n    public connectionTimeout: number = 30;\n    public commandTimeout: number = 60;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihCustomFunction {\n    public methodCode: string = null;\n    public resultCode: string = null;\n    public returnType: eTypeCode = null;\n    public functionType: eFunctionType = null;\n    public isGeneric: boolean = false;\n    public genericTypeDefault: eTypeCode = eTypeCode.Unknown;\n    public dexihCustomFunctionParameters: DexihCustomFunctionParameter[] = [];\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihCustomFunctionParameter {\n    public customFunctionKey: number = 0;\n    public position: number = 0;\n    public direction: eParameterDirection = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public allowNull: boolean = false;\n    public isGeneric: boolean = false;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDashboard {\n    public isShared: boolean = false;\n    public minRows: number = 0;\n    public minCols: number = 0;\n    public maxRows: number = 0;\n    public maxCols: number = 0;\n    public autoRefresh: boolean = false;\n    public dexihDashboardItems: DexihDashboardItem[] = [];\n    public parameters: DexihDashboardParameter[] = [];\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDashboardItem {\n    public cols: number = 0;\n    public rows: number = 0;\n    public x: number = 0;\n    public y: number = 0;\n    public header: boolean = false;\n    public scrollable: boolean = false;\n    public viewKey: number = 0;\n    public dashboardKey: number = 0;\n    public parameters: DexihDashboardItemParameter[] = [];\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDashboardItemParameter {\n    public dashboardItemKey: number = 0;\n    public value: any = null;\n    public listOfValuesKey: number = null;\n    public allowUserSelect: boolean = true;\n    public valueDesc: any = null;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDashboardParameter {\n    public dashboardKey: number = 0;\n    public value: any = null;\n    public listOfValuesKey: number = null;\n    public allowUserSelect: boolean = true;\n    public valueDesc: any = null;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatajob {\n    public failAction: eFailAction = eFailAction.Abend;\n    public auditConnectionKey: number = null;\n    public fileWatch: boolean = false;\n    public autoStart: boolean = false;\n    public dexihDatalinkSteps: DexihDatalinkStep[] = [];\n    public dexihTriggers: DexihTrigger[] = [];\n    public parameters: DexihDatajobParameter[] = [];\n    public alertLevel: eAlertLevel = eAlertLevel.None;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatajobParameter {\n    public datajobKey: number = 0;\n    public value: any = null;\n    public listOfValuesKey: number = null;\n    public allowUserSelect: boolean = true;\n    public valueDesc: any = null;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalink {\n    public sourceDatalinkTableKey: number = 0;\n    public auditConnectionKey: number = null;\n    public updateStrategy: eUpdateStrategy = eUpdateStrategy.Reload;\n    public loadStrategy: eTransformWriterMethod = eTransformWriterMethod.Bulk;\n    public datalinkType: eDatalinkType = null;\n    public rowsPerCommit: number = 1000;\n    public rowsPerProgress: number = 1000;\n    public rollbackOnFail: boolean = false;\n    public isQuery: boolean = false;\n    public maxRows: number = 0;\n    public addDefaultRow: boolean = false;\n    public profileTableName: string = null;\n    public isShared: boolean = false;\n    public entityStatus: EntityStatus = new EntityStatus();\n    public dexihDatalinkProfiles: DexihDatalinkProfile[] = [];\n    public dexihDatalinkTransforms: DexihDatalinkTransform[] = [];\n    public dexihDatalinkTargets: DexihDatalinkTarget[] = [];\n    public parameters: DexihDatalinkParameter[] = [];\n    public sourceDatalinkTable: DexihDatalinkTable = null;\n    public alertLevel: eAlertLevel = eAlertLevel.None;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkColumn {\n    public key: number = 0;\n    public datalinkTableKey: number = null;\n    public childColumns: DexihDatalinkColumn[] = [];\n    public position: number = 0;\n    public logicalName: string = null;\n    public columnGroup: string = null;\n    public dataType: eTypeCode = eTypeCode.String;\n    public maxLength: number = null;\n    public precision: number = null;\n    public isUnicode: boolean = null;\n    public scale: number = null;\n    public allowDbNull: boolean = false;\n    public deltaType: eDeltaType = eDeltaType.TrackingField;\n    public defaultValue: string = null;\n    public isUnique: boolean = false;\n    public isMandatory: boolean = false;\n    public isIncrementalUpdate: boolean = false;\n    public isInput: boolean = false;\n    public rank: number = 0;\n    public format: string = null;\n    public securityFlag: eSecurityFlag = eSecurityFlag.None;\n    public name: string = null;\n    public description: string = null;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkDependency {\n    public datalinkStepKey: number = 0;\n    public dependentDatalinkStepKey: number = 0;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkParameter {\n    public datalinkKey: number = 0;\n    public value: any = null;\n    public listOfValuesKey: number = null;\n    public allowUserSelect: boolean = true;\n    public valueDesc: any = null;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkProfile {\n    public datalinkKey: number = 0;\n    public functionClassName: string = null;\n    public functionAssemblyName: string = null;\n    public functionMethodName: string = null;\n    public detailedResults: boolean = false;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkStep {\n    public datajobKey: number = 0;\n    public datalinkKey: number = null;\n    public position: number = 0;\n    public dexihDatalinkStepColumns: DexihDatalinkStepColumn[] = [];\n    public dexihDatalinkDependencies: DexihDatalinkDependency[] = [];\n    public parameters: DexihDatalinkStepParameter[] = [];\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkStepColumn {\n    public datalinkStepKey: number = 0;\n    public position: number = 0;\n    public logicalName: string = null;\n    public columnGroup: string = null;\n    public dataType: eTypeCode = eTypeCode.String;\n    public maxLength: number = null;\n    public precision: number = null;\n    public isUnicode: boolean = null;\n    public scale: number = null;\n    public allowDbNull: boolean = false;\n    public deltaType: eDeltaType = eDeltaType.TrackingField;\n    public defaultValue: string = null;\n    public isUnique: boolean = false;\n    public isMandatory: boolean = false;\n    public isIncrementalUpdate: boolean = false;\n    public isInput: boolean = false;\n    public rank: number = 0;\n    public format: string = null;\n    public securityFlag: eSecurityFlag = eSecurityFlag.None;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkStepParameter {\n    public datalinkStepKey: number = 0;\n    public value: any = null;\n    public listOfValuesKey: number = null;\n    public allowUserSelect: boolean = true;\n    public valueDesc: any = null;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkTable {\n    public sourceTableKey: number = null;\n    public sourceDatalinkKey: number = null;\n    public rowsStartAt: number = 1;\n    public rowsEndAt: number = 1;\n    public rowsIncrement: number = 1;\n    public sourceType: eSourceType = eSourceType.Table;\n    public disableVersioning: boolean = true;\n    public disablePushDown: boolean = false;\n    public dexihDatalinkColumns: DexihDatalinkColumn[] = [];\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkTarget {\n    public datalinkKey: number = 0;\n    public nodeDatalinkColumnKey: number = null;\n    public nodeDatalinkColumn: DexihDatalinkColumn = null;\n    public position: number = 0;\n    public tableKey: number = 0;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkTest {\n    public auditConnectionKey: number = null;\n    public dexihDatalinkTestSteps: DexihDatalinkTestStep[] = [];\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkTestStep {\n    public position: number = 0;\n    public datalinkTestKey: number = 0;\n    public datalinkKey: number = 0;\n    public targetConnectionKey: number = 0;\n    public targetTableName: string = null;\n    public targetSchema: string = null;\n    public expectedConnectionKey: number = 0;\n    public expectedTableName: string = null;\n    public expectedSchema: string = null;\n    public errorConnectionKey: number = 0;\n    public errorTableName: string = null;\n    public errorSchema: string = null;\n    public dexihDatalinkTestTables: DexihDatalinkTestTable[] = [];\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkTestTable {\n    public datalinkTestStepKey: number = 0;\n    public action: eTestTableAction = null;\n    public tableKey: number = 0;\n    public sourceConnectionKey: number = 0;\n    public sourceSchema: string = null;\n    public sourceTableName: string = null;\n    public testConnectionKey: number = 0;\n    public testSchema: string = null;\n    public testTableName: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkTransform {\n    public datalinkKey: number = 0;\n    public position: number = 0;\n    public passThroughColumns: boolean = false;\n    public joinDatalinkTableKey: number = null;\n    public joinSortDatalinkColumnKey: number = null;\n    public nodeDatalinkColumnKey: number = null;\n    public transformType: eTransformType = null;\n    public transformClassName: string = null;\n    public transformAssemblyName: string = null;\n    public joinStrategy: eJoinStrategy = eJoinStrategy.Auto;\n    public joinDuplicateStrategy: eDuplicateStrategy = eDuplicateStrategy.All;\n    public joinNotFoundStrategy: eJoinNotFoundStrategy = eJoinNotFoundStrategy.Filter;\n    public entityStatus: EntityStatus = null;\n    public dexihDatalinkTransformItems: DexihDatalinkTransformItem[] = [];\n    public joinDatalinkTable: DexihDatalinkTable = null;\n    public joinSortDatalinkColumn: DexihDatalinkColumn = null;\n    public nodeDatalinkColumn: DexihDatalinkColumn = null;\n    public maxInputRows: number = 0;\n    public maxOutputRows: number = 0;\n    public dataCache: boolean = false;\n    public dataCacheConnectionKey: number = null;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkTransformItem {\n    public datalinkTransformKey: number = 0;\n    public position: number = 0;\n    public transformItemType: eTransformItemType = null;\n    public targetDatalinkColumnKey: number = null;\n    public sourceDatalinkColumnKey: number = null;\n    public joinDatalinkColumnKey: number = null;\n    public filterDatalinkColumnKey: number = null;\n    public sourceValue: string = null;\n    public joinValue: string = null;\n    public filterValue: string = null;\n    public functionClassName: string = null;\n    public functionAssemblyName: string = null;\n    public functionMethodName: string = null;\n    public isGeneric: boolean = false;\n    public genericTypeCode: eTypeCode = null;\n    public functionCaching: eFunctionCaching = eFunctionCaching.NoCache;\n    public customFunctionKey: number = null;\n    public sortDirection: eSortDirection = null;\n    public filterCompare: eCompare = null;\n    public aggregate: eAggregate = null;\n    public seriesGrain: eSeriesGrain = null;\n    public seriesStep: string = null;\n    public seriesFill: boolean = false;\n    public seriesStart: string = null;\n    public seriesFinish: string = null;\n    public seriesProject: string = null;\n    public functionCode: string = null;\n    public functionResultCode: string = null;\n    public onError: eErrorAction = eErrorAction.Abend;\n    public onNull: eErrorAction = eErrorAction.Execute;\n    public notCondition: boolean = false;\n    public invalidAction: eInvalidAction = eInvalidAction.Abend;\n    public entityStatus: EntityStatus = null;\n    public dexihFunctionParameters: DexihFunctionParameter[] = [];\n    public sourceDatalinkColumn: DexihDatalinkColumn = null;\n    public targetDatalinkColumn: DexihDatalinkColumn = null;\n    public joinDatalinkColumn: DexihDatalinkColumn = null;\n    public filterDatalinkColumn: DexihDatalinkColumn = null;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihFileFormat {\n    public isDefault: boolean = false;\n    public matchHeaderRecord: boolean = true;\n    public skipHeaderRows: number = 0;\n    public allowComments: boolean = false;\n    public bufferSize: number = 2048;\n    public comment: string = '#';\n    public delimiter: string = ',';\n    public detectColumnCountChanges: boolean = false;\n    public hasHeaderRecord: boolean = true;\n    public ignoreHeaderWhiteSpace: boolean = false;\n    public ignoreReadingExceptions: boolean = false;\n    public ignoreQuotes: boolean = false;\n    public quote: string = '\"';\n    public quoteAllFields: boolean = false;\n    public quoteNoFields: boolean = false;\n    public skipEmptyRecords: boolean = false;\n    public trimFields: boolean = false;\n    public trimHeaders: boolean = false;\n    public willThrowOnMissingField: boolean = true;\n    public setWhiteSpaceCellsToNull: boolean = true;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihFunctionArrayParameter {\n    public functionParameterKey: number = 0;\n    public datalinkColumnKey: number = null;\n    public value: string = null;\n    public listOfValues: string[] = [];\n    public entityStatus: EntityStatus = null;\n    public datalinkColumn: DexihDatalinkColumn = null;\n    public position: number = 0;\n    public direction: eParameterDirection = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public allowNull: boolean = false;\n    public isGeneric: boolean = false;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihFunctionParameter {\n    public datalinkTransformItemKey: number = 0;\n    public arrayParameters: DexihFunctionArrayParameter[] = [];\n    public datalinkColumnKey: number = null;\n    public value: string = null;\n    public listOfValues: string[] = [];\n    public entityStatus: EntityStatus = null;\n    public datalinkColumn: DexihDatalinkColumn = null;\n    public position: number = 0;\n    public direction: eParameterDirection = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public allowNull: boolean = false;\n    public isGeneric: boolean = false;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihFunctionParameterBase {\n    public datalinkColumnKey: number = null;\n    public value: string = null;\n    public listOfValues: string[] = [];\n    public entityStatus: EntityStatus = null;\n    public datalinkColumn: DexihDatalinkColumn = null;\n    public position: number = 0;\n    public direction: eParameterDirection = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public allowNull: boolean = false;\n    public isGeneric: boolean = false;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihHub {\n    public hubKey: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public encryptionKey: string = null;\n    public sharedAccess: eSharedAccess = eSharedAccess.Public;\n    public timeZone: string = null;\n    public dexihConnections: DexihConnection[] = [];\n    public dexihTables: DexihTable[] = [];\n    public dexihDatajobs: DexihDatajob[] = [];\n    public dexihDatalinks: DexihDatalink[] = [];\n    public dexihHubUsers: DexihHubUser[] = [];\n    public dexihFileFormats: DexihFileFormat[] = [];\n    public dexihHubVariables: DexihHubVariable[] = [];\n    public dexihDatalinkTests: DexihDatalinkTest[] = [];\n    public dexihViews: DexihView[] = [];\n    public dexihDashboards: DexihDashboard[] = [];\n    public dexihApis: DexihApi[] = [];\n    public dexihColumnValidations: DexihColumnValidation[] = [];\n    public dexihCustomFunctions: DexihCustomFunction[] = [];\n    public dexihRemoteAgentHubs: DexihRemoteAgentHub[] = [];\n    public dexihListOfValues: DexihListOfValues[] = [];\n    public dexihTags: DexihTag[] = [];\n    public dexihTagObjects: DexihTagObject[] = [];\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihHubEntity {\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihHubKeyEntity {\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihHubNamedEntity {\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihHubUser {\n    public hubKey: number = 0;\n    public userId: string = null;\n    public permission: ePermission = ePermission.None;\n    public receiveAlerts: boolean = false;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihHubVariable {\n    public valueRaw: string = null;\n    public value: string = null;\n    public isEncrypted: boolean = false;\n    public isEnvironmentVariable: boolean = false;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihIssue {\n    public type: eIssueType = eIssueType.Other;\n    public category: eIssueCategory = eIssueCategory.Other;\n    public severity: eIssueSeverity = eIssueSeverity.Critical;\n    public link: string = null;\n    public data: string = null;\n    public gitHubLink: string = null;\n    public isPrivate: boolean = true;\n    public userId: string = null;\n    public issueStatus: eIssueStatus = eIssueStatus.Open;\n    public dexihIssueComments: DexihIssueComment[] = [];\n    public userName: string = null;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihIssueComment {\n    public issueKey: number = 0;\n    public key: number = 0;\n    public comment: string = null;\n    public userId: string = null;\n    public userName: string = null;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihListOfValues {\n    public sourceType: eLOVObjectType = null;\n    public sourceTableKey: number = null;\n    public sourceDatalinkKey: number = null;\n    public selectQuery: SelectQuery = null;\n    public keyColumn: string = null;\n    public nameColumn: string = null;\n    public descriptionColumn: string = null;\n    public staticData: ListOfValuesItem[] = [];\n    public cache: boolean = false;\n    public cacheSeconds: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihParameterBase {\n    public position: number = 0;\n    public direction: eParameterDirection = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public allowNull: boolean = false;\n    public isGeneric: boolean = false;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihRemoteAgent {\n    public remoteAgentKey: number = 0;\n    public name: string = null;\n    public userId: string = null;\n    public restrictIp: boolean = false;\n    public allowExternalConnect: boolean = false;\n    public ipAddresses: string[] = [];\n    public remoteAgentId: string = null;\n    public hashedToken: string = null;\n    public lastLoginIpAddress: string = null;\n    public lastLoginDateTime: Date = null;\n    public dexihRemoteAgentHubs: DexihRemoteAgentHub[] = [];\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihRemoteAgentHub {\n    public remoteAgentHubKey: number = 0;\n    public remoteAgentKey: number = 0;\n    public isDefault: boolean = false;\n    public isAuthorized: boolean = false;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihTable {\n    public connectionKey: number = 0;\n    public schema: string = null;\n    public baseTableName: string = null;\n    public logicalName: string = null;\n    public tableType: eTableType = eTableType.Table;\n    public sourceConnectionName: string = null;\n    public fileFormatKey: number = null;\n    public rejectedTableName: string = null;\n    public queryString: string = null;\n    public rowPath: string = null;\n    public formatType: eTypeCode = eTypeCode.Json;\n    public sortColumnKeys: number[] = [];\n    public autoManageFiles: boolean = false;\n    public useCustomFilePaths: boolean = false;\n    public fileRootPath: string = null;\n    public fileIncomingPath: string = null;\n    public fileOutgoingPath: string = null;\n    public fileProcessedPath: string = null;\n    public fileRejectedPath: string = null;\n    public fileMatchPattern: string = null;\n    public restfulUri: string = null;\n    public maxImportLevels: number = 0;\n    public isVersioned: boolean = false;\n    public isShared: boolean = false;\n    public entityStatus: EntityStatus = new EntityStatus();\n    public fileSample: string = null;\n    public dexihTableColumns: DexihTableColumn[] = [];\n    public dexihTableIndexes: DexihTableIndex[] = [];\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihTableColumn {\n    public tableKey: number = null;\n    public childColumns: DexihTableColumn[] = [];\n    public columnValidationKey: number = null;\n    public entityStatus: EntityStatus = null;\n    public position: number = 0;\n    public logicalName: string = null;\n    public columnGroup: string = null;\n    public dataType: eTypeCode = eTypeCode.String;\n    public maxLength: number = null;\n    public precision: number = null;\n    public isUnicode: boolean = null;\n    public scale: number = null;\n    public allowDbNull: boolean = false;\n    public deltaType: eDeltaType = eDeltaType.TrackingField;\n    public defaultValue: string = null;\n    public isUnique: boolean = false;\n    public isMandatory: boolean = false;\n    public isIncrementalUpdate: boolean = false;\n    public isInput: boolean = false;\n    public rank: number = 0;\n    public format: string = null;\n    public securityFlag: eSecurityFlag = eSecurityFlag.None;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihTableIndex {\n    public tableKey: number = 0;\n    public columns: DexihTableIndexColumn[] = [];\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihTableIndexColumn {\n    public tableIndexKey: number = null;\n    public columnKey: number = 0;\n    public direction: eSortDirection = eSortDirection.Ascending;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihTag {\n    public color: string = null;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihTagObject {\n    public tagKey: number = 0;\n    public objectKey: number = 0;\n    public objectType: eSharedObjectType = null;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihTrigger {\n    public datajobKey: number = 0;\n    public startDate: Date = null;\n    public intervalTime: any = null;\n    public position: number = 0;\n    public daysOfWeek: eDayOfWeek[] = [];\n    public startTime: any = null;\n    public endTime: any = null;\n    public cronExpression: string = null;\n    public maxRecurs: number = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihView {\n    public viewType: eViewType = eViewType.Table;\n    public sourceTableKey: number = null;\n    public sourceDatalinkKey: number = null;\n    public sourceType: eDataObjectType = null;\n    public autoRefresh: boolean = true;\n    public inputValues: InputColumn[] = [];\n    public selectQuery: SelectQuery = null;\n    public chartConfig: ChartConfig = null;\n    public animateConfig: AnimateConfig = null;\n    public isShared: boolean = false;\n    public parameters: DexihViewParameter[] = [];\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihViewParameter {\n    public viewKey: number = 0;\n    public datalinkParameterKey: number = 0;\n    public value: any = null;\n    public listOfValuesKey: number = null;\n    public allowUserSelect: boolean = true;\n    public valueDesc: any = null;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DownloadData {\n    public transformSettings: TransformSettings = null;\n    public cache: CacheManager = null;\n    public downloadObjects: DownloadObject[] = [];\n    public downloadFormat: eDownloadFormat = null;\n    public zipFiles: boolean = false;\n   }\n   \n   export class DownloadObject {\n    public objectType: eDataObjectType = null;\n    public objectKey: number = 0;\n    public query: SelectQuery = null;\n    public inputParameters: InputParameter[] = [];\n    public inputColumns: InputColumn[] = [];\n    public datalinkTransformKey: number = null;\n   }\n   \n   export class DownloadReadyBase {\n    public instanceId: string = null;\n    public securityToken: string = null;\n    public connectionId: string = null;\n    public reference: string = null;\n    public hubKey: number = 0;\n   }\n   \n   export class DownloadReadyMessage {\n    public url: string = null;\n    public instanceId: string = null;\n    public securityToken: string = null;\n    public connectionId: string = null;\n    public reference: string = null;\n    public hubKey: number = 0;\n   }\n   \n   export class DownloadUrl {\n    public url: string = null;\n    public downloadUrlType: eDownloadUrlType = null;\n    public isEncrypted: boolean = false;\n   }\n   \n   export class EntityStatus {\n    public lastStatus: eStatus = eStatus.None;\n    public message: string = '';\n    public isBusy: boolean = false;\n   }\n   \n   export class FileConfiguration {\n    public matchHeaderRecord: boolean = true;\n    public skipHeaderRows: number = 0;\n    public setWhiteSpaceCellsToNull: boolean = true;\n   }\n   \n   export class Filter {\n    public column1: TableColumn = null;\n    public value1: any = null;\n    public compareDataType: eTypeCode = eTypeCode.Unknown;\n    public column2: TableColumn = null;\n    public value2: any = null;\n    public operator: eCompare = eCompare.IsEqual;\n    public andOr: eAndOr = eAndOr.And;\n    public allowNull: boolean = false;\n   }\n   \n   export class FlatFile {\n    public autoManageFiles: boolean = false;\n    public useCustomFilePaths: boolean = false;\n    public fileRootPath: string = null;\n    public fileIncomingPath: string = '';\n    public fileOutgoingPath: string = '';\n    public fileProcessedPath: string = '';\n    public fileRejectedPath: string = '';\n    public fileMatchPattern: string = null;\n    public formatType: eTypeCode = eTypeCode.Unknown;\n    public fileConfiguration: FileConfiguration = new FileConfiguration();\n    public fileSample: string = null;\n    public rowPath: string = null;\n    public name: string = null;\n    public schema: string = null;\n    public sourceConnectionName: string = null;\n    public logicalName: string = null;\n    public description: string = null;\n    public baseTableName: string = null;\n    public tableType: eTableType = eTableType.Table;\n    public isVersioned: boolean = false;\n    public queryString: string = null;\n    public outputSortFields: Sort[] = [];\n    public columns: TableColumn[] = [];\n    public maxImportLevels: number = 10;\n    public indexes: TableIndex[] = [];\n   }\n   \n   export class FunctionParameter {\n    public parameterName: string = null;\n    public name: string = null;\n    public description: string = null;\n    public isGeneric: boolean = false;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public allowNull: boolean = false;\n    public rank: number = 0;\n    public isIndex: boolean = false;\n    public linkedName: string = null;\n    public linkedDescription: string = null;\n    public isLabel: boolean = false;\n    public listOfValues: string[] = [];\n    public defaultValue: string = null;\n    public isPassword: boolean = false;\n    public defaultFormat: string = null;\n   }\n   \n   export class FunctionReference {\n    public functionType: eFunctionType = null;\n    public category: string = null;\n    public name: string = null;\n    public description: string = null;\n    public functionAssemblyName: string = null;\n    public functionClassName: string = null;\n    public functionMethodName: string = null;\n    public resultMethodName: string = null;\n    public resetMethodName: string = null;\n    public importMethodName: string = null;\n    public genericType: eGenericType = null;\n    public genericTypeDefault: eTypeCode = eTypeCode.Unknown;\n    public compare: eCompare = eCompare.IsEqual;\n    public isStandardFunction: boolean = false;\n    public returnParameters: FunctionParameter[] = [];\n    public inputParameters: FunctionParameter[] = [];\n    public outputParameters: FunctionParameter[] = [];\n    public resultReturnParameters: FunctionParameter[] = [];\n    public resultInputParameters: FunctionParameter[] = [];\n    public resultOutputParameters: FunctionParameter[] = [];\n   }\n   \n   export class HubUser {\n    public firstName: string = null;\n    public lastName: string = null;\n    public userName: string = null;\n    public id: string = null;\n    public permission: ePermission = ePermission.None;\n    public receiveAlerts: boolean = false;\n   }\n   \n   export class Import {\n    public hubKey: number = 0;\n    public hubVariables: ImportObject<DexihHubVariable>[] = [];\n    public datajobs: ImportObject<DexihDatajob>[] = [];\n    public datalinks: ImportObject<DexihDatalink>[] = [];\n    public connections: ImportObject<DexihConnection>[] = [];\n    public tables: ImportObject<DexihTable>[] = [];\n    public columnValidations: ImportObject<DexihColumnValidation>[] = [];\n    public fileFormats: ImportObject<DexihFileFormat>[] = [];\n    public customFunctions: ImportObject<DexihCustomFunction>[] = [];\n    public remoteAgentHubs: ImportObject<DexihRemoteAgentHub>[] = [];\n    public datalinkTests: ImportObject<DexihDatalinkTest>[] = [];\n    public views: ImportObject<DexihView>[] = [];\n    public apis: ImportObject<DexihApi>[] = [];\n    public dashboards: ImportObject<DexihDashboard>[] = [];\n    public listOfValues: ImportObject<DexihListOfValues>[] = [];\n    public tags: ImportObject<DexihTag>[] = [];\n    public tagObjects: ImportObject<DexihTagObject>[] = [];\n    public warnings: string[] = [];\n   }\n   \n   export class ImportAction {\n    public objectType: eSharedObjectType = null;\n    public action: eImportAction = null;\n   }\n   \n   export class ImportObject<T> {\n    public item: T = null;\n    public importAction: eImportAction = null;\n   }\n   \n   export class InputColumn {\n    public datalinkKey: number = 0;\n    public datalinkName: string = null;\n    public name: string = null;\n    public logicalName: string = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public rank: number = 0;\n    public value: any = null;\n    public defaultValue: any = null;\n   }\n   \n   export class InputParameter {\n    public name: string = null;\n    public value: any = null;\n    public rank: number = 0;\n   }\n   \n   export class InputParameterBase {\n    public value: any = null;\n    public listOfValuesKey: number = null;\n    public allowUserSelect: boolean = true;\n    public valueDesc: any = null;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class InputParameters {\n   }\n   \n   export class InsertQuery {\n    public insertColumns: QueryColumn[] = [];\n   }\n   \n   export class ListOfValuesItem {\n    public key: string = null;\n    public name: string = null;\n    public description: string = null;\n   }\n   \n   export class LoggingSection {\n    public includeScopes: boolean = false;\n    public logLevel: LogLevelSection = new LogLevelSection();\n    public logFilePath: string = null;\n   }\n   \n   export class LoginModel {\n   }\n   \n   export class LogLevelSection {\n    public default: logLevel = logLevel.Information;\n    public system: logLevel = logLevel.Information;\n    public microsoft: logLevel = logLevel.Information;\n   }\n   \n   export class ManagedTask {\n    public success: boolean = false;\n    public message: string = null;\n    public taskId: string = null;\n    public originatorId: string = null;\n    public name: string = null;\n    public description: string = null;\n    public lastUpdate: Date = null;\n    public status: eManagedTaskStatus = eManagedTaskStatus.Created;\n    public category: string = null;\n    public categoryKey: number = 0;\n    public referenceKey: number = 0;\n    public referenceId: string = null;\n    public percentage: number = 0;\n    public counter: number = 0;\n    public concurrentTaskAction: eConcurrentTaskAction = eConcurrentTaskAction.Abend;\n    public stepName: string = null;\n    public startTime: Date = null;\n    public endTime: Date = null;\n    public triggers: ManagedTaskTrigger[] = [];\n    public fileWatchers: ManagedTaskFileWatcher[] = [];\n    public nextTriggerTime: any = null;\n    public runCount: number = 0;\n    public dependentTaskIds: string[] = [];\n    public dependenciesMet: boolean = true;\n    public data: any = null;\n    public exceptionDetails: string = '';\n   }\n   \n   export class ManagedTaskFileWatcher {\n    public path: string = null;\n    public filter: string = null;\n    public isStarted: boolean = false;\n   }\n   \n   export class ManagedTaskProgressItem {\n    public stepName: string = null;\n    public percentage: number = 0;\n    public counter: number = 0;\n   }\n   \n   export class ManagedTaskTrigger {\n    public startDate: Date = null;\n    public endDate: Date = null;\n    public intervalType: eIntervalType = eIntervalType.Interval;\n    public intervalTime: any = null;\n    public daysOfWeek: eDayOfWeek[] = [];\n    public daysOfMonth: number[] = [];\n    public weeksOfMonth: eWeekOfMonth[] = [];\n    public skipDates: Date[] = [];\n    public startTime: any = null;\n    public endTime: any = null;\n    public maxRecurs: number = 1;\n    public timeZone: string = null;\n    public details: string = 'Error: Interval specified, however no interval time set.\\n';\n   }\n   \n   export class NamingStandards {\n   }\n   \n   export class NetworkSection {\n    public externalDownloadUrl: string = null;\n    public localIpAddress: string = null;\n    public localPort: number = null;\n    public proxyUrl: string = null;\n    public downloadPort: number = 33944;\n    public enforceHttps: boolean = true;\n    public autoGenerateCertificate: boolean = true;\n    public dynamicDomain: string = 'dexih.com';\n    public certificateFilename: string = null;\n    public certificatePassword: string = null;\n    public enableUPnP: boolean = true;\n   }\n   \n   export class ParameterArray {\n    public name: string = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public rank: number = 0;\n   }\n   \n   export class ParameterColumn {\n    public name: string = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public rank: number = 0;\n    public value: any = null;\n   }\n   \n   export class ParameterJoinColumn {\n    public name: string = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public rank: number = 0;\n    public value: any = null;\n   }\n   \n   export class ParameterOutputColumn {\n    public name: string = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public rank: number = 0;\n    public value: any = null;\n   }\n   \n   export class Parameters {\n   }\n   \n   export class ParameterValue {\n    public name: string = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public rank: number = 0;\n    public value: any = null;\n   }\n   \n   export class PermissionsSection {\n    public allowLocalFiles: boolean = true;\n    public allowAllPaths: boolean = false;\n    public allowedPaths: string[] = [];\n    public allowAllHubs: boolean = true;\n    public allowedHubs: number[] = [];\n   }\n   \n   export class PluginsSection {\n    public mLNet: boolean = false;\n    public excel: boolean = false;\n    public oracle: boolean = false;\n    public dB2: boolean = false;\n    public mongo: boolean = false;\n   }\n   \n   export class PrivacySection {\n    public allowDataDownload: boolean = true;\n    public allowDataUpload: boolean = true;\n    public allowLanAccess: boolean = true;\n    public allowExternalAccess: boolean = true;\n    public allowProxy: boolean = true;\n   }\n   \n   export class QueryColumn {\n    public column: TableColumn = null;\n    public value: any = null;\n   }\n   \n   export class RegisterModel {\n    public provider: eLoginProvider = eLoginProvider.Dexih;\n    public userName: string = null;\n    public email: string = null;\n    public code: string = null;\n    public password: string = null;\n    public firstname: string = null;\n    public lastname: string = null;\n    public subscription: boolean = false;\n    public terms: boolean = false;\n    public authenticationToken: string = null;\n   }\n   \n   export class RemoteAgentProperties {\n    public name: string = null;\n    public ipAddress: string = null;\n    public securityToken: string = null;\n    public remoteAgentKey: number = 0;\n    public encryptionKey: string = null;\n    public userId: string = null;\n    public connectionId: string = null;\n    public namingStandards: string[] = [];\n    public downloadUrls: DownloadUrl[] = [];\n   }\n   \n   export class RemoteAgentSettings {\n    public embedUserName: boolean = false;\n    public environment: eEnvironment = null;\n    public logLevel: logLevel = logLevel.Trace;\n    public remoteApplicationSettings: RemoteAgentSettingsSubset = null;\n   }\n   \n   export class RemoteAgentSettingsSubset {\n    public allowedHubs: number[] = [];\n    public allowedPaths: string[] = [];\n    public allowAllHubs: boolean = true;\n    public allowAllPaths: boolean = true;\n    public allowDownload: boolean = true;\n    public allowExternalAccess: boolean = true;\n    public allowLanAccess: boolean = true;\n    public allowLocalFiles: boolean = true;\n    public allowProxy: boolean = true;\n    public allowUpload: boolean = true;\n    public autoGenerateCertificate: boolean = true;\n    public autoSchedule: boolean = true;\n    public autoUpgrade: boolean = true;\n    public downloadPort: number = 33944;\n    public enableUPnP: boolean = true;\n    public encryptionKey: string = null;\n    public enforceHttps: boolean = true;\n    public externalDownloadUrl: string = null;\n    public firstRun: boolean = false;\n    public name: string = null;\n    public preRelease: boolean = false;\n    public remoteAgentId: string = null;\n    public user: string = null;\n    public userToken: string = null;\n    public webServer: string = null;\n    public mLNet: boolean = false;\n    public excel: boolean = false;\n    public oracle: boolean = false;\n    public dB2: boolean = false;\n    public mongo: boolean = false;\n    public smtpServer: string = null;\n    public smtpUserName: string = null;\n    public smtpPassword: string = null;\n    public smtpPort: number = 25;\n    public enableSsl: boolean = true;\n    public fromEmail: string = null;\n    public adminEmails: string[] = [];\n    public alertOnShutdown: boolean = false;\n    public alertOnCritical: boolean = false;\n   }\n   \n   export class RemoteAgentStatus {\n    public activeApis: ApiData[] = [];\n    public activeDatajobs: ManagedTask[] = [];\n    public activeDatalinks: ManagedTask[] = [];\n    public activeDatalinkTests: ManagedTask[] = [];\n    public previousDatajobs: ManagedTask[] = [];\n    public previousDatalinks: ManagedTask[] = [];\n    public previousDatalinkTests: ManagedTask[] = [];\n    public remoteLibraries: RemoteLibraries = null;\n    public requiresUpgrade: boolean = false;\n   }\n   \n   export class RemoteLibraries {\n    public functions: FunctionReference[] = [];\n    public connections: ConnectionReference[] = [];\n    public transforms: TransformReference[] = [];\n    public timeZones: RemoteTimeZone[] = [];\n   }\n   \n   export class RemoteMessage {\n    public messageId: string = null;\n    public securityToken: string = null;\n    public method: string = null;\n    public hubKey: number = 0;\n    public timeOut: number = null;\n    public hubVariables: DexihHubVariable[] = [];\n    public clientConnectionId: string = null;\n    public downloadUrl: DownloadUrl = null;\n    public value: any[] = [];\n    public success: boolean = true;\n    public message: string = null;\n    public exceptionDetails: string = null;\n   }\n   \n   export class RemoteSettings {\n    public appSettings: AppSettingsSection = new AppSettingsSection();\n    public systemSettings: SystemSettingsSection = new SystemSettingsSection();\n    public logging: LoggingSection = new LoggingSection();\n    public runtime: RuntimeSection = new RuntimeSection();\n    public network: NetworkSection = new NetworkSection();\n    public privacy: PrivacySection = new PrivacySection();\n    public permissions: PermissionsSection = new PermissionsSection();\n    public namingStandards: string[] = [];\n    public plugins: PluginsSection = new PluginsSection();\n    public alerts: any = null;\n    public cache: any = null;\n   }\n   \n   export class RemoteTimeZone {\n    public name: string = null;\n    public description: string = null;\n   }\n   \n   export class RenewSslCertificateModel {\n    public domain: string = null;\n    public password: string = null;\n   }\n   \n   export class ResponseMessage {\n    public messageId: string = null;\n    public securityToken: string = null;\n    public success: boolean = false;\n    public message: string = null;\n    public exceptionDetails: string = null;\n   }\n   \n   export class RuntimeSection {\n    public configDirectory: string = null;\n    public appSettingsPath: string = null;\n    public password: string = null;\n    public localIpAddress: string = null;\n    public externalIpAddress: string = null;\n    public defaultProxyUrl: string = null;\n    public remoteAgentKey: number = 0;\n    public userHash: string = null;\n    public version: string = null;\n    public latestVersion: string = null;\n    public latestDownloadUrl: string = null;\n    public generateUserToken: boolean = false;\n    public saveSettings: boolean = false;\n    public doUpgrade: boolean = false;\n   }\n   \n   export class SelectColumn {\n    public column: TableColumn = null;\n    public aggregate: eAggregate = eAggregate.None;\n    public outputColumn: TableColumn = null;\n   }\n   \n   export class SelectQuery {\n    public columns: SelectColumn[] = [];\n    public tableName: string = null;\n    public filters: Filter[] = [];\n    public sorts: Sort[] = [];\n    public groups: TableColumn[] = [];\n    public groupFilters: Filter[] = [];\n    public joins: any[] = [];\n    public rows: number = -1;\n    public inputColumns: TableColumn[] = [];\n    public fileName: string = null;\n    public path: eFlatFilePath = eFlatFilePath.None;\n    public alias: string = null;\n   }\n   \n   export class SharedData {\n    public hubKey: number = 0;\n    public hubName: string = null;\n    public objectType: eDataObjectType = null;\n    public objectKey: number = 0;\n    public name: string = null;\n    public logicalName: string = null;\n    public description: string = null;\n    public updateDate: Date = null;\n    public inputColumns: InputColumn[] = [];\n    public parameters: InputParameterBase[] = [];\n    public parentParameters: InputParameter[] = [];\n    public query: SelectQuery = null;\n    public outputColumns: DexihColumnBase[] = [];\n    public tags: DexihTag[] = [];\n   }\n   \n   export class Sort {\n    public column: TableColumn = null;\n    public direction: eSortDirection = null;\n   }\n   \n   export class Sorts {\n   }\n   \n   export class SystemSettingsSection {\n    public maxAcknowledgeWait: number = 5000;\n    public responseTimeout: number = 1000000;\n    public cancelDelay: number = 1000;\n    public encryptionIterations: number = 1000;\n    public maxPreviewDuration: number = 10000;\n    public maxConcurrentTasks: number = 50;\n    public maxUploadSize: number = 1000000000;\n    public socketTransportType: string = 'WebSockets';\n    public defaultPreviewRows: number = 100;\n    public maxPreviewRows: number = 5000;\n   }\n   \n   export class Table {\n    public name: string = null;\n    public schema: string = null;\n    public sourceConnectionName: string = null;\n    public logicalName: string = null;\n    public description: string = null;\n    public baseTableName: string = null;\n    public tableType: eTableType = eTableType.Table;\n    public isVersioned: boolean = false;\n    public queryString: string = null;\n    public outputSortFields: Sort[] = [];\n    public columns: TableColumn[] = [];\n    public maxImportLevels: number = 10;\n    public indexes: TableIndex[] = [];\n   }\n   \n   export class TableColumn {\n    public referenceTable: string = null;\n    public name: string = null;\n    public logicalName: string = null;\n    public description: string = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public maxLength: number = null;\n    public columnGroup: string = null;\n    public rank: number = 0;\n    public precision: number = null;\n    public scale: number = null;\n    public allowDbNull: boolean = false;\n    public deltaType: eDeltaType = null;\n    public isUnicode: boolean = null;\n    public defaultValue: any = null;\n    public isUnique: boolean = false;\n    public isMandatory: boolean = false;\n    public securityFlag: eSecurityFlag = eSecurityFlag.None;\n    public isInput: boolean = false;\n    public isIncrementalUpdate: boolean = false;\n    public isParent: boolean = false;\n    public childColumns: TableColumn[] = [];\n    public format: string = null;\n   }\n   \n   export class TableColumns {\n   }\n   \n   export class TableIndex {\n    public name: string = null;\n    public columns: TableIndexColumn[] = [];\n   }\n   \n   export class TableIndexColumn {\n    public columnName: string = null;\n    public direction: eSortDirection = eSortDirection.Ascending;\n   }\n   \n   export class TransformAttribute {\n    public name: string = null;\n    public description: string = null;\n    public transformType: eTransformType = null;\n   }\n   \n   export class TransformPerformance {\n    public transformName: string = null;\n    public action: string = null;\n    public rows: number = 0;\n    public seconds: number = 0;\n    public children: TransformPerformance[] = [];\n   }\n   \n   export class TransformProperties {\n    public name: string = null;\n    public transformType: eTransformType = null;\n    public transformName: string = null;\n    public selectQuery: SelectQuery = null;\n    public properties: any[] = [];\n    public rows: number = 0;\n    public seconds: number = 0;\n    public primaryProperties: TransformProperties = null;\n    public referenceProperties: TransformProperties = null;\n   }\n   \n   export class TransformReference {\n    public transformClassName: string = null;\n    public transformAssemblyName: string = null;\n    public transformType: eTransformType = null;\n    public name: string = null;\n    public description: string = null;\n   }\n   \n   export class TransformSettings {\n    public hubVariables: DexihHubVariable[] = [];\n    public inputParameters: InputParameterBase[] = [];\n    public remoteSettings: RemoteSettings = null;\n   }\n   \n   export class TransformWriterOptions {\n   }\n   \n   export class TransformWriterResult {\n    public auditKey: number = 0;\n    public auditType: string = null;\n    public referenceKey: number = 0;\n    public parentAuditKey: number = 0;\n    public referenceName: string = null;\n    public sourceTableKey: number = 0;\n    public sourceTableName: string = null;\n    public targetTableKey: number = 0;\n    public targetTableName: string = null;\n    public hubKey: number = 0;\n    public auditConnectionKey: number = 0;\n    public lastRowTotal: number = 0;\n    public lastMaxIncrementalValue: any = null;\n    public rowsPerProgressEvent: number = 1000;\n    public rowsTotal: number = 0;\n    public rowsCreated: number = 0;\n    public rowsUpdated: number = 0;\n    public rowsDeleted: number = 0;\n    public rowsPreserved: number = 0;\n    public rowsIgnored: number = 0;\n    public rowsRejected: number = 0;\n    public rowsFiltered: number = 0;\n    public rowsSorted: number = 0;\n    public rowsReadPrimary: number = 0;\n    public rowsReadReference: number = 0;\n    public passed: number = 0;\n    public failed: number = 0;\n    public readTicks: number = 0;\n    public writeTicks: number = 0;\n    public processingTicks: number = 0;\n    public maxIncrementalValue: any = null;\n    public maxSurrogateKey: number = 0;\n    public message: string = null;\n    public exceptionDetails: string = null;\n    public initializeTime: Date = null;\n    public scheduledTime: any = null;\n    public startTime: Date = null;\n    public endTime: Date = null;\n    public lastUpdateTime: Date = null;\n    public triggerMethod: eTriggerMethod = eTriggerMethod.Manual;\n    public triggerInfo: string = null;\n    public performanceSummary: TransformPerformance[] = [];\n    public profileTableName: string = null;\n    public rejectTableName: string = null;\n    public isCurrent: boolean = true;\n    public isPrevious: boolean = false;\n    public isPreviousSuccess: boolean = false;\n    public childResults: TransformWriterResult[] = [];\n    public runStatus: eRunStatus = eRunStatus.Initialised;\n    public isRunning: boolean = true;\n    public isFinished: boolean = false;\n    public isScheduled: boolean = false;\n    public percentageComplete: number = 0;\n   }\n   \n   export class UpdateQuery {\n    public updateColumns: QueryColumn[] = [];\n    public filters: Filter[] = [];\n   }\n   \n   export class UserModel {\n    public email: string = null;\n    public userName: string = null;\n    public emailConfirmed: boolean = false;\n    public accessFailedCount: number = 0;\n    public id: string = null;\n    public lockoutEnabled: boolean = false;\n    public lockoutEnd: any = null;\n    public logins: any[] = [];\n    public roles: string[] = [];\n    public claims: any[] = [];\n    public twoFactorEnabled: boolean = false;\n    public phoneNumber: string = null;\n    public phoneNumberConfirmed: boolean = false;\n    public firstName: string = null;\n    public lastName: string = null;\n    public terms: boolean = false;\n    public subscription: boolean = false;\n    public inviteQuota: number = 0;\n    public hubQuota: number = 0;\n    public isRegistered: boolean = false;\n    public isInvited: boolean = false;\n    public isEnabled: boolean = false;\n   }\n   \n   export class ViewConfig {\n    public viewType: eViewType = null;\n    public chartConfig: ChartConfig = null;\n    public animateConfig: AnimateConfig = null;\n   }\n   \n   export class WebService {\n    public restfulUri: string = null;\n    public rowPath: string = null;\n    public formatType: eTypeCode = eTypeCode.Json;\n    public fileConfiguration: FileConfiguration = new FileConfiguration();\n    public name: string = null;\n    public schema: string = null;\n    public sourceConnectionName: string = null;\n    public logicalName: string = null;\n    public description: string = null;\n    public baseTableName: string = null;\n    public tableType: eTableType = eTableType.Table;\n    public isVersioned: boolean = false;\n    public queryString: string = null;\n    public outputSortFields: Sort[] = [];\n    public columns: TableColumn[] = [];\n    public maxImportLevels: number = 10;\n    public indexes: TableIndex[] = [];\n   }\n   \n   // auto generated enums\n   \n   export enum eAggregate {\n    None = 0,\n    Sum = 1,\n    Average = 2,\n    Min = 3,\n    Max = 4,\n    Count = 5,\n    First = 6,\n    Last = 7,\n   }\n   \n   export const eAggregateItems = [\n    {key: eAggregate.None, name: 'None'},\n    {key: eAggregate.Sum, name: 'Sum'},\n    {key: eAggregate.Average, name: 'Average'},\n    {key: eAggregate.Min, name: 'Min'},\n    {key: eAggregate.Max, name: 'Max'},\n    {key: eAggregate.Count, name: 'Count'},\n    {key: eAggregate.First, name: 'First'},\n    {key: eAggregate.Last, name: 'Last'},\n   ]\n   \n   export enum eAlertLevel {\n    None = 0,\n    Critical = 1,\n    Errors = 2,\n    All = 3,\n   }\n   \n   export const eAlertLevelItems = [\n    {key: eAlertLevel.None, name: 'None', description: 'No alerting.'},\n    {key: eAlertLevel.Critical, name: 'Critical', description: 'Alert on critical failures only.'},\n    {key: eAlertLevel.Errors, name: 'Errors', description: 'Alert on any errors.'},\n    {key: eAlertLevel.All, name: 'All', description: 'Alert on start/stop and errors'},\n   ]\n   \n   export enum eAndOr {\n    And = 1,\n    Or = 2,\n   }\n   \n   export const eAndOrItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eAndOr.And, name: 'And'},\n    {key: eAndOr.Or, name: 'Or'},\n   ]\n   \n   export enum eApiStatus {\n    Activated = 1,\n    Deactivated = 2,\n   }\n   \n   export const eApiStatusItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eApiStatus.Activated, name: 'Activated'},\n    {key: eApiStatus.Deactivated, name: 'Deactivated'},\n   ]\n   \n   export enum eChartType {\n    BarVertical = 1,\n    BarHorizontal = 2,\n    Pie = 3,\n    Line = 4,\n    Polar = 5,\n    Scatter = 6,\n    Error = 7,\n    Bubble = 8,\n    Map = 9,\n    BarLineCombo = 10,\n    Radar = 11,\n   }\n   \n   export const eChartTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eChartType.BarVertical, name: 'BarVertical'},\n    {key: eChartType.BarHorizontal, name: 'BarHorizontal'},\n    {key: eChartType.Pie, name: 'Pie'},\n    {key: eChartType.Line, name: 'Line'},\n    {key: eChartType.Polar, name: 'Polar'},\n    {key: eChartType.Scatter, name: 'Scatter'},\n    {key: eChartType.Error, name: 'Error'},\n    {key: eChartType.Bubble, name: 'Bubble'},\n    {key: eChartType.Map, name: 'Map'},\n    {key: eChartType.BarLineCombo, name: 'BarLineCombo'},\n    {key: eChartType.Radar, name: 'Radar'},\n   ]\n   \n   export enum eCleanAction {\n    DefaultValue = 1,\n    Truncate = 2,\n    Blank = 3,\n    Null = 4,\n    OriginalValue = 5,\n    CleanValue = 6,\n   }\n   \n   export const eCleanActionItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eCleanAction.DefaultValue, name: 'DefaultValue'},\n    {key: eCleanAction.Truncate, name: 'Truncate'},\n    {key: eCleanAction.Blank, name: 'Blank'},\n    {key: eCleanAction.Null, name: 'Null'},\n    {key: eCleanAction.OriginalValue, name: 'OriginalValue'},\n    {key: eCleanAction.CleanValue, name: 'CleanValue'},\n   ]\n   \n   export enum eClientCommand {\n    Connect = 0,\n    Disconnect = 1,\n    Message = 2,\n    ActiveAgentUpdate = 3,\n    RemoteAgentUpdateKey = 4,\n    RemoteAgentDelete = 5,\n    RemoteAgentDeleteKey = 6,\n    HubUpdate = 7,\n    HubDelete = 8,\n    Task = 9,\n    FileDownload = 10,\n    DownloadReady = 11,\n    HubChange = 12,\n    HubError = 13,\n    DatalinkProgress = 14,\n    DatalinkStatus = 15,\n    DatajobProgress = 16,\n    DatajobStatus = 17,\n    DatalinkTestProgress = 18,\n    TableProgress = 19,\n    ApiStatus = 20,\n    ApiQuery = 21,\n    FlatFilesReady = 22,\n    Command = 23,\n   }\n   \n   export const eClientCommandItems = [\n    {key: eClientCommand.Connect, name: 'Connect'},\n    {key: eClientCommand.Disconnect, name: 'Disconnect'},\n    {key: eClientCommand.Message, name: 'Message'},\n    {key: eClientCommand.ActiveAgentUpdate, name: 'ActiveAgentUpdate'},\n    {key: eClientCommand.RemoteAgentUpdateKey, name: 'RemoteAgentUpdateKey'},\n    {key: eClientCommand.RemoteAgentDelete, name: 'RemoteAgentDelete'},\n    {key: eClientCommand.RemoteAgentDeleteKey, name: 'RemoteAgentDeleteKey'},\n    {key: eClientCommand.HubUpdate, name: 'HubUpdate'},\n    {key: eClientCommand.HubDelete, name: 'HubDelete'},\n    {key: eClientCommand.Task, name: 'Task'},\n    {key: eClientCommand.FileDownload, name: 'FileDownload'},\n    {key: eClientCommand.DownloadReady, name: 'DownloadReady'},\n    {key: eClientCommand.HubChange, name: 'HubChange'},\n    {key: eClientCommand.HubError, name: 'HubError'},\n    {key: eClientCommand.DatalinkProgress, name: 'DatalinkProgress'},\n    {key: eClientCommand.DatalinkStatus, name: 'DatalinkStatus'},\n    {key: eClientCommand.DatajobProgress, name: 'DatajobProgress'},\n    {key: eClientCommand.DatajobStatus, name: 'DatajobStatus'},\n    {key: eClientCommand.DatalinkTestProgress, name: 'DatalinkTestProgress'},\n    {key: eClientCommand.TableProgress, name: 'TableProgress'},\n    {key: eClientCommand.ApiStatus, name: 'ApiStatus'},\n    {key: eClientCommand.ApiQuery, name: 'ApiQuery'},\n    {key: eClientCommand.FlatFilesReady, name: 'FlatFilesReady'},\n    {key: eClientCommand.Command, name: 'Command'},\n   ]\n   \n   export enum eCompare {\n    IsEqual = 0,\n    GreaterThan = 1,\n    GreaterThanEqual = 2,\n    LessThan = 3,\n    LessThanEqual = 4,\n    NotEqual = 5,\n    IsIn = 6,\n    IsNull = 7,\n    IsNotNull = 8,\n    Like = 9,\n    IsNotIn = 10,\n   }\n   \n   export const eCompareItems = [\n    {key: eCompare.IsEqual, name: 'IsEqual'},\n    {key: eCompare.GreaterThan, name: 'GreaterThan'},\n    {key: eCompare.GreaterThanEqual, name: 'GreaterThanEqual'},\n    {key: eCompare.LessThan, name: 'LessThan'},\n    {key: eCompare.LessThanEqual, name: 'LessThanEqual'},\n    {key: eCompare.NotEqual, name: 'NotEqual'},\n    {key: eCompare.IsIn, name: 'IsIn'},\n    {key: eCompare.IsNull, name: 'IsNull'},\n    {key: eCompare.IsNotNull, name: 'IsNotNull'},\n    {key: eCompare.Like, name: 'Like'},\n    {key: eCompare.IsNotIn, name: 'IsNotIn'},\n   ]\n   \n   export enum eConcurrentTaskAction {\n    Parallel = 1,\n    Abend = 2,\n    Sequence = 3,\n   }\n   \n   export const eConcurrentTaskActionItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eConcurrentTaskAction.Parallel, name: 'Parallel'},\n    {key: eConcurrentTaskAction.Abend, name: 'Abend'},\n    {key: eConcurrentTaskAction.Sequence, name: 'Sequence'},\n   ]\n   \n   export enum eConnectionCategory {\n    SqlDatabase = 1,\n    NoSqlDatabase = 2,\n    DatabaseFile = 3,\n    File = 4,\n    WebService = 5,\n    Hub = 6,\n   }\n   \n   export const eConnectionCategoryItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eConnectionCategory.SqlDatabase, name: 'SqlDatabase'},\n    {key: eConnectionCategory.NoSqlDatabase, name: 'NoSqlDatabase'},\n    {key: eConnectionCategory.DatabaseFile, name: 'DatabaseFile'},\n    {key: eConnectionCategory.File, name: 'File'},\n    {key: eConnectionCategory.WebService, name: 'WebService'},\n    {key: eConnectionCategory.Hub, name: 'Hub'},\n   ]\n   \n   export enum eConnectionPurpose {\n    Source = 1,\n    Managed = 2,\n    Target = 3,\n   }\n   \n   export const eConnectionPurposeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eConnectionPurpose.Source, name: 'Source'},\n    {key: eConnectionPurpose.Managed, name: 'Managed'},\n    {key: eConnectionPurpose.Target, name: 'Target'},\n   ]\n   \n   export enum eDatalinkType {\n    General = 1,\n    Stage = 2,\n    Validate = 3,\n    Transform = 4,\n    Deliver = 5,\n    Publish = 6,\n    Share = 7,\n    Query = 8,\n   }\n   \n   export const eDatalinkTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eDatalinkType.General, name: 'General', description: 'Non-categorized general purpose datalink'},\n    {key: eDatalinkType.Stage, name: 'Stage', description: 'Staging - loads data into a central/interim database'},\n    {key: eDatalinkType.Validate, name: 'Validate', description: 'Validate - performs data validation and cleaning'},\n    {key: eDatalinkType.Transform, name: 'Transform', description: 'Transform - reshapes, aggregates data'},\n    {key: eDatalinkType.Deliver, name: 'Deliver', description: 'Deliver - prepares data for delivering to a system/database'},\n    {key: eDatalinkType.Publish, name: 'Publish', description: 'Publish - sends data to a target system/database'},\n    {key: eDatalinkType.Share, name: 'Share', description: 'Share - datalink designed to be shared with other users'},\n    {key: eDatalinkType.Query, name: 'Query', description: 'Query - datalink query used for data extracts or as a source for other datalinks'},\n   ]\n   \n   export enum eDataObjectType {\n    Table = 1,\n    Datalink = 2,\n    View = 3,\n    Dashboard = 4,\n    DashboardItem = 5,\n    Api = 6,\n   }\n   \n   export const eDataObjectTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eDataObjectType.Table, name: 'Table'},\n    {key: eDataObjectType.Datalink, name: 'Datalink'},\n    {key: eDataObjectType.View, name: 'View'},\n    {key: eDataObjectType.Dashboard, name: 'Dashboard'},\n    {key: eDataObjectType.DashboardItem, name: 'DashboardItem'},\n    {key: eDataObjectType.Api, name: 'Api'},\n   ]\n   \n   export enum eDataPrivacyStatus {\n    NotAllowed = 1,\n    Proxy = 2,\n    Lan = 3,\n    Internet = 4,\n   }\n   \n   export const eDataPrivacyStatusItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eDataPrivacyStatus.NotAllowed, name: 'NotAllowed'},\n    {key: eDataPrivacyStatus.Proxy, name: 'Proxy'},\n    {key: eDataPrivacyStatus.Lan, name: 'Lan'},\n    {key: eDataPrivacyStatus.Internet, name: 'Internet'},\n   ]\n   \n   export enum eDayOfWeek {\n    Sunday = 1,\n    Monday = 2,\n    Tuesday = 3,\n    Wednesday = 4,\n    Thursday = 5,\n    Friday = 6,\n    Saturday = 7,\n   }\n   \n   export const eDayOfWeekItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eDayOfWeek.Sunday, name: 'Sunday'},\n    {key: eDayOfWeek.Monday, name: 'Monday'},\n    {key: eDayOfWeek.Tuesday, name: 'Tuesday'},\n    {key: eDayOfWeek.Wednesday, name: 'Wednesday'},\n    {key: eDayOfWeek.Thursday, name: 'Thursday'},\n    {key: eDayOfWeek.Friday, name: 'Friday'},\n    {key: eDayOfWeek.Saturday, name: 'Saturday'},\n   ]\n   \n   export enum eDeltaType {\n    AutoIncrement = 1,\n    DbAutoIncrement = 2,\n    SourceSurrogateKey = 3,\n    ValidFromDate = 4,\n    ValidToDate = 5,\n    CreateDate = 6,\n    UpdateDate = 7,\n    CreateAuditKey = 8,\n    UpdateAuditKey = 9,\n    IsCurrentField = 10,\n    Version = 11,\n    NaturalKey = 12,\n    TrackingField = 13,\n    NonTrackingField = 14,\n    IgnoreField = 15,\n    ValidationStatus = 16,\n    RejectedReason = 17,\n    FileName = 18,\n    FileRowNumber = 19,\n    RowKey = 20,\n    PartitionKey = 21,\n    TimeStamp = 22,\n    DatabaseOperation = 23,\n    ResponseSuccess = 24,\n    ResponseData = 25,\n    ResponseStatus = 26,\n    ResponseSegment = 27,\n    Error = 28,\n    Url = 29,\n    UpdateReason = 30,\n    FileDate = 31,\n   }\n   \n   export const eDeltaTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eDeltaType.AutoIncrement, name: 'AutoIncrement'},\n    {key: eDeltaType.DbAutoIncrement, name: 'DbAutoIncrement'},\n    {key: eDeltaType.SourceSurrogateKey, name: 'SourceSurrogateKey'},\n    {key: eDeltaType.ValidFromDate, name: 'ValidFromDate'},\n    {key: eDeltaType.ValidToDate, name: 'ValidToDate'},\n    {key: eDeltaType.CreateDate, name: 'CreateDate'},\n    {key: eDeltaType.UpdateDate, name: 'UpdateDate'},\n    {key: eDeltaType.CreateAuditKey, name: 'CreateAuditKey'},\n    {key: eDeltaType.UpdateAuditKey, name: 'UpdateAuditKey'},\n    {key: eDeltaType.IsCurrentField, name: 'IsCurrentField'},\n    {key: eDeltaType.Version, name: 'Version'},\n    {key: eDeltaType.NaturalKey, name: 'NaturalKey'},\n    {key: eDeltaType.TrackingField, name: 'TrackingField'},\n    {key: eDeltaType.NonTrackingField, name: 'NonTrackingField'},\n    {key: eDeltaType.IgnoreField, name: 'IgnoreField'},\n    {key: eDeltaType.ValidationStatus, name: 'ValidationStatus'},\n    {key: eDeltaType.RejectedReason, name: 'RejectedReason'},\n    {key: eDeltaType.FileName, name: 'FileName'},\n    {key: eDeltaType.FileRowNumber, name: 'FileRowNumber'},\n    {key: eDeltaType.RowKey, name: 'RowKey'},\n    {key: eDeltaType.PartitionKey, name: 'PartitionKey'},\n    {key: eDeltaType.TimeStamp, name: 'TimeStamp'},\n    {key: eDeltaType.DatabaseOperation, name: 'DatabaseOperation'},\n    {key: eDeltaType.ResponseSuccess, name: 'ResponseSuccess'},\n    {key: eDeltaType.ResponseData, name: 'ResponseData'},\n    {key: eDeltaType.ResponseStatus, name: 'ResponseStatus'},\n    {key: eDeltaType.ResponseSegment, name: 'ResponseSegment'},\n    {key: eDeltaType.Error, name: 'Error'},\n    {key: eDeltaType.Url, name: 'Url'},\n    {key: eDeltaType.UpdateReason, name: 'UpdateReason'},\n    {key: eDeltaType.FileDate, name: 'FileDate'},\n   ]\n   \n   export enum eDownloadFormat {\n    Csv = 1,\n    Json = 2,\n    JsonCompact = 3,\n   }\n   \n   export const eDownloadFormatItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eDownloadFormat.Csv, name: 'Csv'},\n    {key: eDownloadFormat.Json, name: 'Json'},\n    {key: eDownloadFormat.JsonCompact, name: 'JsonCompact'},\n   ]\n   \n   export enum eDownloadUrlType {\n    Proxy = 1,\n    Direct = 2,\n   }\n   \n   export const eDownloadUrlTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eDownloadUrlType.Proxy, name: 'Proxy'},\n    {key: eDownloadUrlType.Direct, name: 'Direct'},\n   ]\n   \n   export enum eDuplicateStrategy {\n    Abend = 0,\n    First = 1,\n    Last = 2,\n    All = 3,\n    MergeValidDates = 4,\n   }\n   \n   export const eDuplicateStrategyItems = [\n    {key: eDuplicateStrategy.Abend, name: 'Abend', description: 'Abend Datalink'},\n    {key: eDuplicateStrategy.First, name: 'First', description: 'First Row'},\n    {key: eDuplicateStrategy.Last, name: 'Last', description: 'Last Row'},\n    {key: eDuplicateStrategy.All, name: 'All', description: 'All Rows'},\n    {key: eDuplicateStrategy.MergeValidDates, name: 'MergeValidDates', description: 'Merge Valid To/From'},\n   ]\n   \n   export enum eEnvironment {\n    Windows = 1,\n    Osx = 2,\n    Linux = 3,\n   }\n   \n   export const eEnvironmentItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eEnvironment.Windows, name: 'Windows', description: 'Windows 7/8/8.1/10'},\n    {key: eEnvironment.Osx, name: 'Osx', description: 'Mac OSX'},\n    {key: eEnvironment.Linux, name: 'Linux', description: 'Linux'},\n   ]\n   \n   export enum eErrorAction {\n    Abend = 1,\n    Null = 2,\n    Ignore = 3,\n    Execute = 4,\n   }\n   \n   export const eErrorActionItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eErrorAction.Abend, name: 'Abend'},\n    {key: eErrorAction.Null, name: 'Null'},\n    {key: eErrorAction.Ignore, name: 'Ignore'},\n    {key: eErrorAction.Execute, name: 'Execute'},\n   ]\n   \n   export enum eFailAction {\n    Continue = 1,\n    ContinueNonDependent = 2,\n    Abend = 3,\n   }\n   \n   export const eFailActionItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eFailAction.Continue, name: 'Continue'},\n    {key: eFailAction.ContinueNonDependent, name: 'ContinueNonDependent'},\n    {key: eFailAction.Abend, name: 'Abend'},\n   ]\n   \n   export enum eFlatFilePath {\n    None = 0,\n    Incoming = 1,\n    Outgoing = 2,\n    Processed = 3,\n    Rejected = 4,\n   }\n   \n   export const eFlatFilePathItems = [\n    {key: eFlatFilePath.None, name: 'None'},\n    {key: eFlatFilePath.Incoming, name: 'Incoming'},\n    {key: eFlatFilePath.Outgoing, name: 'Outgoing'},\n    {key: eFlatFilePath.Processed, name: 'Processed'},\n    {key: eFlatFilePath.Rejected, name: 'Rejected'},\n   ]\n   \n   export enum eFunctionCaching {\n    NoCache = 0,\n    EnableCache = 1,\n    CallOnce = 2,\n   }\n   \n   export const eFunctionCachingItems = [\n    {key: eFunctionCaching.NoCache, name: 'NoCache'},\n    {key: eFunctionCaching.EnableCache, name: 'EnableCache'},\n    {key: eFunctionCaching.CallOnce, name: 'CallOnce'},\n   ]\n   \n   export enum eFunctionType {\n    Map = 1,\n    Condition = 2,\n    Aggregate = 3,\n    Series = 4,\n    Rows = 5,\n    Validate = 6,\n    Profile = 7,\n    Sort = 8,\n    JoinCondition = 9,\n   }\n   \n   export const eFunctionTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eFunctionType.Map, name: 'Map'},\n    {key: eFunctionType.Condition, name: 'Condition'},\n    {key: eFunctionType.Aggregate, name: 'Aggregate'},\n    {key: eFunctionType.Series, name: 'Series'},\n    {key: eFunctionType.Rows, name: 'Rows'},\n    {key: eFunctionType.Validate, name: 'Validate'},\n    {key: eFunctionType.Profile, name: 'Profile'},\n    {key: eFunctionType.Sort, name: 'Sort'},\n    {key: eFunctionType.JoinCondition, name: 'JoinCondition'},\n   ]\n   \n   export enum eGenericType {\n    None = 1,\n    Numeric = 2,\n    DateTime = 3,\n    All = 4,\n    String = 5,\n   }\n   \n   export const eGenericTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eGenericType.None, name: 'None'},\n    {key: eGenericType.Numeric, name: 'Numeric'},\n    {key: eGenericType.DateTime, name: 'DateTime'},\n    {key: eGenericType.All, name: 'All'},\n    {key: eGenericType.String, name: 'String'},\n   ]\n   \n   export enum eImportAction {\n    Replace = 1,\n    New = 2,\n    Leave = 3,\n    Skip = 4,\n    Delete = 5,\n   }\n   \n   export const eImportActionItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eImportAction.Replace, name: 'Replace'},\n    {key: eImportAction.New, name: 'New'},\n    {key: eImportAction.Leave, name: 'Leave'},\n    {key: eImportAction.Skip, name: 'Skip'},\n    {key: eImportAction.Delete, name: 'Delete'},\n   ]\n   \n   export enum eIntervalType {\n    None = 0,\n    Once = 1,\n    Interval = 2,\n    Daily = 3,\n    Monthly = 4,\n   }\n   \n   export const eIntervalTypeItems = [\n    {key: eIntervalType.None, name: 'None'},\n    {key: eIntervalType.Once, name: 'Once'},\n    {key: eIntervalType.Interval, name: 'Interval'},\n    {key: eIntervalType.Daily, name: 'Daily'},\n    {key: eIntervalType.Monthly, name: 'Monthly'},\n   ]\n   \n   export enum eInvalidAction {\n    Pass = 1,\n    Clean = 2,\n    RejectClean = 3,\n    Reject = 4,\n    Discard = 5,\n    Abend = 6,\n   }\n   \n   export const eInvalidActionItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eInvalidAction.Pass, name: 'Pass'},\n    {key: eInvalidAction.Clean, name: 'Clean'},\n    {key: eInvalidAction.RejectClean, name: 'RejectClean'},\n    {key: eInvalidAction.Reject, name: 'Reject'},\n    {key: eInvalidAction.Discard, name: 'Discard'},\n    {key: eInvalidAction.Abend, name: 'Abend'},\n   ]\n   \n   export enum eIssueCategory {\n    Other = 0,\n    Web = 1,\n    Saving = 2,\n    RemoteAgent = 3,\n    Datalink = 4,\n    Datajob = 5,\n    Api = 6,\n    View = 7,\n    Dashboard = 8,\n    Security = 9,\n   }\n   \n   export const eIssueCategoryItems = [\n    {key: eIssueCategory.Other, name: 'Other', description: 'Other'},\n    {key: eIssueCategory.Web, name: 'Web', description: 'Web Interface'},\n    {key: eIssueCategory.Saving, name: 'Saving', description: 'Saving / loading / importing / exporting items'},\n    {key: eIssueCategory.RemoteAgent, name: 'RemoteAgent', description: 'Remote Agent Configuration / Connections'},\n    {key: eIssueCategory.Datalink, name: 'Datalink', description: 'Running / previewing datalink'},\n    {key: eIssueCategory.Datajob, name: 'Datajob', description: 'Scheduling / running datajob'},\n    {key: eIssueCategory.Api, name: 'Api', description: 'Using the API'},\n    {key: eIssueCategory.View, name: 'View', description: 'Using a View'},\n    {key: eIssueCategory.Dashboard, name: 'Dashboard', description: 'Using a Dashboard'},\n    {key: eIssueCategory.Security, name: 'Security', description: 'Login, permissions, and other security issues'},\n   ]\n   \n   export enum eIssueSeverity {\n    Critical = 0,\n    Major = 1,\n    Minor = 2,\n    Trivial = 3,\n   }\n   \n   export const eIssueSeverityItems = [\n    {key: eIssueSeverity.Critical, name: 'Critical', description: 'Critical (currently unusable)'},\n    {key: eIssueSeverity.Major, name: 'Major', description: 'Major (temporary workarounds exist)'},\n    {key: eIssueSeverity.Minor, name: 'Minor', description: 'Minor (productivity imporovments)'},\n    {key: eIssueSeverity.Trivial, name: 'Trivial', description: 'Trivial (Nice to Have)'},\n   ]\n   \n   export enum eIssueStatus {\n    Open = 0,\n    UnderReview = 1,\n    InProgress = 2,\n    Complete = 3,\n    Closed = 4,\n   }\n   \n   export const eIssueStatusItems = [\n    {key: eIssueStatus.Open, name: 'Open', description: 'Open - Issue has been opened.'},\n    {key: eIssueStatus.UnderReview, name: 'UnderReview', description: 'Under Review - Issue is under review by support team.'},\n    {key: eIssueStatus.InProgress, name: 'InProgress', description: 'In Progress - Issue is currently being worked on.'},\n    {key: eIssueStatus.Complete, name: 'Complete', description: 'Complete - Issue has been completed.'},\n    {key: eIssueStatus.Closed, name: 'Closed', description: 'Closed'},\n   ]\n   \n   export enum eIssueType {\n    Other = 0,\n    Bug = 1,\n    Request = 2,\n    Question = 3,\n    Feedback = 4,\n   }\n   \n   export const eIssueTypeItems = [\n    {key: eIssueType.Other, name: 'Other', description: 'Other'},\n    {key: eIssueType.Bug, name: 'Bug', description: 'Bug'},\n    {key: eIssueType.Request, name: 'Request', description: 'Feature Request'},\n    {key: eIssueType.Question, name: 'Question', description: 'Question'},\n    {key: eIssueType.Feedback, name: 'Feedback', description: 'General Feedback'},\n   ]\n   \n   export enum eJoinNotFoundStrategy {\n    Abend = 0,\n    NullJoin = 1,\n    Filter = 2,\n   }\n   \n   export const eJoinNotFoundStrategyItems = [\n    {key: eJoinNotFoundStrategy.Abend, name: 'Abend', description: 'Abend Datalink'},\n    {key: eJoinNotFoundStrategy.NullJoin, name: 'NullJoin', description: 'Add Null Join'},\n    {key: eJoinNotFoundStrategy.Filter, name: 'Filter', description: 'Filter Row'},\n   ]\n   \n   export enum eJoinStrategy {\n    Auto = 0,\n    Sorted = 1,\n    Hash = 2,\n    Database = 3,\n   }\n   \n   export const eJoinStrategyItems = [\n    {key: eJoinStrategy.Auto, name: 'Auto', description: 'Automatic'},\n    {key: eJoinStrategy.Sorted, name: 'Sorted', description: 'Pre-Sorted Join'},\n    {key: eJoinStrategy.Hash, name: 'Hash', description: 'In Memory (hash) join'},\n    {key: eJoinStrategy.Database, name: 'Database', description: 'Database Join'},\n   ]\n   \n   export enum eLineCurve {\n    Straight = 0,\n    Bezier = 1,\n    Monotone = 2,\n   }\n   \n   export const eLineCurveItems = [\n    {key: eLineCurve.Straight, name: 'Straight'},\n    {key: eLineCurve.Bezier, name: 'Bezier'},\n    {key: eLineCurve.Monotone, name: 'Monotone'},\n   ]\n   \n   export enum eLoginProvider {\n    Dexih = 1,\n    Google = 2,\n    Microsoft = 3,\n   }\n   \n   export const eLoginProviderItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eLoginProvider.Dexih, name: 'Dexih'},\n    {key: eLoginProvider.Google, name: 'Google'},\n    {key: eLoginProvider.Microsoft, name: 'Microsoft'},\n   ]\n   \n   export enum eLOVObjectType {\n    Table = 1,\n    Datalink = 2,\n    Static = 3,\n   }\n   \n   export const eLOVObjectTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eLOVObjectType.Table, name: 'Table'},\n    {key: eLOVObjectType.Datalink, name: 'Datalink'},\n    {key: eLOVObjectType.Static, name: 'Static'},\n   ]\n   \n   export enum eManagedTaskStatus {\n    Created = 1,\n    FileWatching = 2,\n    Scheduled = 3,\n    Queued = 4,\n    Running = 5,\n    Cancelled = 6,\n    Error = 7,\n    Completed = 8,\n   }\n   \n   export const eManagedTaskStatusItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eManagedTaskStatus.Created, name: 'Created'},\n    {key: eManagedTaskStatus.FileWatching, name: 'FileWatching'},\n    {key: eManagedTaskStatus.Scheduled, name: 'Scheduled'},\n    {key: eManagedTaskStatus.Queued, name: 'Queued'},\n    {key: eManagedTaskStatus.Running, name: 'Running'},\n    {key: eManagedTaskStatus.Cancelled, name: 'Cancelled'},\n    {key: eManagedTaskStatus.Error, name: 'Error'},\n    {key: eManagedTaskStatus.Completed, name: 'Completed'},\n   ]\n   \n   export enum eMessageCommand {\n    Connect = 0,\n    Disconnect = 1,\n    MessageResponse = 2,\n    RemoteAgentUpdate = 3,\n    RemoteAgentDelete = 4,\n    RemoteAgentDeleteKey = 5,\n    HubUpdate = 6,\n    HubDelete = 7,\n    Task = 8,\n    FileDownload = 9,\n    DownloadReady = 10,\n    HubChange = 11,\n    HubError = 12,\n    DatalinkProgress = 13,\n    DatalinkStatus = 14,\n    DatajobProgress = 15,\n    DatajobStatus = 16,\n    DatalinkTestProgress = 17,\n    TableProgress = 18,\n    ApiStatus = 19,\n    ApiQuery = 20,\n    FlatFilesReady = 21,\n    RemoteMethod = 22,\n   }\n   \n   export const eMessageCommandItems = [\n    {key: eMessageCommand.Connect, name: 'Connect'},\n    {key: eMessageCommand.Disconnect, name: 'Disconnect'},\n    {key: eMessageCommand.MessageResponse, name: 'MessageResponse'},\n    {key: eMessageCommand.RemoteAgentUpdate, name: 'RemoteAgentUpdate'},\n    {key: eMessageCommand.RemoteAgentDelete, name: 'RemoteAgentDelete'},\n    {key: eMessageCommand.RemoteAgentDeleteKey, name: 'RemoteAgentDeleteKey'},\n    {key: eMessageCommand.HubUpdate, name: 'HubUpdate'},\n    {key: eMessageCommand.HubDelete, name: 'HubDelete'},\n    {key: eMessageCommand.Task, name: 'Task'},\n    {key: eMessageCommand.FileDownload, name: 'FileDownload'},\n    {key: eMessageCommand.DownloadReady, name: 'DownloadReady'},\n    {key: eMessageCommand.HubChange, name: 'HubChange'},\n    {key: eMessageCommand.HubError, name: 'HubError'},\n    {key: eMessageCommand.DatalinkProgress, name: 'DatalinkProgress'},\n    {key: eMessageCommand.DatalinkStatus, name: 'DatalinkStatus'},\n    {key: eMessageCommand.DatajobProgress, name: 'DatajobProgress'},\n    {key: eMessageCommand.DatajobStatus, name: 'DatajobStatus'},\n    {key: eMessageCommand.DatalinkTestProgress, name: 'DatalinkTestProgress'},\n    {key: eMessageCommand.TableProgress, name: 'TableProgress'},\n    {key: eMessageCommand.ApiStatus, name: 'ApiStatus'},\n    {key: eMessageCommand.ApiQuery, name: 'ApiQuery'},\n    {key: eMessageCommand.FlatFilesReady, name: 'FlatFilesReady'},\n    {key: eMessageCommand.RemoteMethod, name: 'RemoteMethod'},\n   ]\n   \n   export enum eParameterDirection {\n    Input = 1,\n    Output = 2,\n    ResultInput = 3,\n    ResultOutput = 4,\n    ReturnValue = 5,\n    ResultReturnValue = 6,\n    Join = 7,\n   }\n   \n   export const eParameterDirectionItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eParameterDirection.Input, name: 'Input'},\n    {key: eParameterDirection.Output, name: 'Output'},\n    {key: eParameterDirection.ResultInput, name: 'ResultInput'},\n    {key: eParameterDirection.ResultOutput, name: 'ResultOutput'},\n    {key: eParameterDirection.ReturnValue, name: 'ReturnValue'},\n    {key: eParameterDirection.ResultReturnValue, name: 'ResultReturnValue'},\n    {key: eParameterDirection.Join, name: 'Join'},\n   ]\n   \n   export enum ePermission {\n    None = 0,\n    Suspended = 1,\n    PublishReader = 2,\n    FullReader = 3,\n    User = 4,\n    Owner = 5,\n   }\n   \n   export const ePermissionItems = [\n    {key: ePermission.None, name: 'None', description: 'No access.'},\n    {key: ePermission.Suspended, name: 'Suspended', description: 'Suspended (banned from hub)'},\n    {key: ePermission.PublishReader, name: 'PublishReader', description: 'Publish Reader (only access shared)'},\n    {key: ePermission.FullReader, name: 'FullReader', description: 'Reader (read only access)'},\n    {key: ePermission.User, name: 'User', description: 'User (add/modify permission)'},\n    {key: ePermission.Owner, name: 'Owner', description: 'Owner (full permissions)'},\n   ]\n   \n   export enum eRunStatus {\n    Initialised = 1,\n    Scheduled = 2,\n    Started = 3,\n    Running = 4,\n    RunningErrors = 5,\n    Finished = 6,\n    FinishedErrors = 7,\n    Abended = 8,\n    Cancelled = 9,\n    NotRunning = 10,\n    Passed = 11,\n    Failed = 12,\n   }\n   \n   export const eRunStatusItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eRunStatus.Initialised, name: 'Initialised'},\n    {key: eRunStatus.Scheduled, name: 'Scheduled'},\n    {key: eRunStatus.Started, name: 'Started'},\n    {key: eRunStatus.Running, name: 'Running'},\n    {key: eRunStatus.RunningErrors, name: 'RunningErrors'},\n    {key: eRunStatus.Finished, name: 'Finished'},\n    {key: eRunStatus.FinishedErrors, name: 'FinishedErrors'},\n    {key: eRunStatus.Abended, name: 'Abended'},\n    {key: eRunStatus.Cancelled, name: 'Cancelled'},\n    {key: eRunStatus.NotRunning, name: 'NotRunning'},\n    {key: eRunStatus.Passed, name: 'Passed'},\n    {key: eRunStatus.Failed, name: 'Failed'},\n   ]\n   \n   export enum eSecurityFlag {\n    None = 0,\n    FastEncrypt = 1,\n    FastDecrypt = 2,\n    FastEncrypted = 3,\n    StrongEncrypt = 4,\n    StrongDecrypt = 5,\n    StrongEncrypted = 6,\n    OneWayHash = 7,\n    OneWayHashed = 8,\n    Hide = 9,\n   }\n   \n   export const eSecurityFlagItems = [\n    {key: eSecurityFlag.None, name: 'None'},\n    {key: eSecurityFlag.FastEncrypt, name: 'FastEncrypt'},\n    {key: eSecurityFlag.FastDecrypt, name: 'FastDecrypt'},\n    {key: eSecurityFlag.FastEncrypted, name: 'FastEncrypted'},\n    {key: eSecurityFlag.StrongEncrypt, name: 'StrongEncrypt'},\n    {key: eSecurityFlag.StrongDecrypt, name: 'StrongDecrypt'},\n    {key: eSecurityFlag.StrongEncrypted, name: 'StrongEncrypted'},\n    {key: eSecurityFlag.OneWayHash, name: 'OneWayHash'},\n    {key: eSecurityFlag.OneWayHashed, name: 'OneWayHashed'},\n    {key: eSecurityFlag.Hide, name: 'Hide'},\n   ]\n   \n   export enum eSeriesGrain {\n    Second = 1,\n    Minute = 2,\n    Hour = 3,\n    Day = 4,\n    Week = 5,\n    Month = 6,\n    Year = 7,\n    Number = 8,\n   }\n   \n   export const eSeriesGrainItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eSeriesGrain.Second, name: 'Second'},\n    {key: eSeriesGrain.Minute, name: 'Minute'},\n    {key: eSeriesGrain.Hour, name: 'Hour'},\n    {key: eSeriesGrain.Day, name: 'Day'},\n    {key: eSeriesGrain.Week, name: 'Week'},\n    {key: eSeriesGrain.Month, name: 'Month'},\n    {key: eSeriesGrain.Year, name: 'Year'},\n    {key: eSeriesGrain.Number, name: 'Number'},\n   ]\n   \n   export enum eSharedAccess {\n    Public = 1,\n    Registered = 2,\n    Reader = 3,\n   }\n   \n   export const eSharedAccessItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eSharedAccess.Public, name: 'Public', description: 'Shared data can be accessed by the public.'},\n    {key: eSharedAccess.Registered, name: 'Registered', description: 'Shared data can be accessed any registered user.'},\n    {key: eSharedAccess.Reader, name: 'Reader', description: 'Shared data can be accessed only by users with \"PublishReader\" permission.'},\n   ]\n   \n   export enum eSharedObjectType {\n    Connection = 1,\n    Table = 2,\n    FileFormat = 3,\n    Datalink = 4,\n    Datajob = 5,\n    RemoteAgent = 6,\n    ColumnValidation = 7,\n    HubVariable = 8,\n    CustomFunction = 9,\n    DatalinkTest = 10,\n    View = 11,\n    Api = 12,\n    Dashboard = 13,\n    ListOfValues = 14,\n    Tags = 15,\n    TagObjects = 16,\n   }\n   \n   export const eSharedObjectTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eSharedObjectType.Connection, name: 'Connection'},\n    {key: eSharedObjectType.Table, name: 'Table'},\n    {key: eSharedObjectType.FileFormat, name: 'FileFormat'},\n    {key: eSharedObjectType.Datalink, name: 'Datalink'},\n    {key: eSharedObjectType.Datajob, name: 'Datajob'},\n    {key: eSharedObjectType.RemoteAgent, name: 'RemoteAgent'},\n    {key: eSharedObjectType.ColumnValidation, name: 'ColumnValidation'},\n    {key: eSharedObjectType.HubVariable, name: 'HubVariable'},\n    {key: eSharedObjectType.CustomFunction, name: 'CustomFunction'},\n    {key: eSharedObjectType.DatalinkTest, name: 'DatalinkTest'},\n    {key: eSharedObjectType.View, name: 'View'},\n    {key: eSharedObjectType.Api, name: 'Api'},\n    {key: eSharedObjectType.Dashboard, name: 'Dashboard'},\n    {key: eSharedObjectType.ListOfValues, name: 'ListOfValues'},\n    {key: eSharedObjectType.Tags, name: 'Tags'},\n    {key: eSharedObjectType.TagObjects, name: 'TagObjects'},\n   ]\n   \n   export enum eSortDirection {\n    Ascending = 1,\n    Descending = 2,\n   }\n   \n   export const eSortDirectionItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eSortDirection.Ascending, name: 'Ascending'},\n    {key: eSortDirection.Descending, name: 'Descending'},\n   ]\n   \n   export enum eSourceType {\n    Datalink = 1,\n    Table = 2,\n    Rows = 3,\n    Function = 4,\n   }\n   \n   export const eSourceTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eSourceType.Datalink, name: 'Datalink'},\n    {key: eSourceType.Table, name: 'Table'},\n    {key: eSourceType.Rows, name: 'Rows'},\n    {key: eSourceType.Function, name: 'Function'},\n   ]\n   \n   export enum eStatus {\n    None = 1,\n    Ready = 2,\n    Imported = 3,\n    Updated = 4,\n    Added = 5,\n    Error = 6,\n   }\n   \n   export const eStatusItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eStatus.None, name: 'None'},\n    {key: eStatus.Ready, name: 'Ready'},\n    {key: eStatus.Imported, name: 'Imported'},\n    {key: eStatus.Updated, name: 'Updated'},\n    {key: eStatus.Added, name: 'Added'},\n    {key: eStatus.Error, name: 'Error'},\n   ]\n   \n   export enum eTableType {\n    Table = 1,\n    View = 2,\n    Query = 3,\n   }\n   \n   export const eTableTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eTableType.Table, name: 'Table'},\n    {key: eTableType.View, name: 'View'},\n    {key: eTableType.Query, name: 'Query'},\n   ]\n   \n   export enum eTestTableAction {\n    None = 1,\n    Truncate = 2,\n    DropCreate = 3,\n    TruncateCopy = 4,\n    DropCreateCopy = 5,\n   }\n   \n   export const eTestTableActionItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eTestTableAction.None, name: 'None'},\n    {key: eTestTableAction.Truncate, name: 'Truncate'},\n    {key: eTestTableAction.DropCreate, name: 'DropCreate'},\n    {key: eTestTableAction.TruncateCopy, name: 'TruncateCopy'},\n    {key: eTestTableAction.DropCreateCopy, name: 'DropCreateCopy'},\n   ]\n   \n   export enum eTransformItemType {\n    BuiltInFunction = 1,\n    CustomFunction = 2,\n    ColumnPair = 3,\n    JoinPair = 4,\n    Sort = 5,\n    Column = 6,\n    FilterPair = 7,\n    AggregatePair = 8,\n    Series = 9,\n    JoinNode = 10,\n    GroupNode = 11,\n    Node = 12,\n    UnGroup = 13,\n   }\n   \n   export const eTransformItemTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eTransformItemType.BuiltInFunction, name: 'BuiltInFunction'},\n    {key: eTransformItemType.CustomFunction, name: 'CustomFunction'},\n    {key: eTransformItemType.ColumnPair, name: 'ColumnPair'},\n    {key: eTransformItemType.JoinPair, name: 'JoinPair'},\n    {key: eTransformItemType.Sort, name: 'Sort'},\n    {key: eTransformItemType.Column, name: 'Column'},\n    {key: eTransformItemType.FilterPair, name: 'FilterPair'},\n    {key: eTransformItemType.AggregatePair, name: 'AggregatePair'},\n    {key: eTransformItemType.Series, name: 'Series'},\n    {key: eTransformItemType.JoinNode, name: 'JoinNode'},\n    {key: eTransformItemType.GroupNode, name: 'GroupNode'},\n    {key: eTransformItemType.Node, name: 'Node'},\n    {key: eTransformItemType.UnGroup, name: 'UnGroup'},\n   ]\n   \n   export enum eTransformType {\n    Mapping = 1,\n    Filter = 2,\n    Sort = 3,\n    Group = 4,\n    Aggregate = 5,\n    Series = 6,\n    Join = 7,\n    Rows = 8,\n    Lookup = 9,\n    Validation = 10,\n    Delta = 11,\n    Concatenate = 12,\n    Profile = 13,\n    Internal = 14,\n   }\n   \n   export const eTransformTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eTransformType.Mapping, name: 'Mapping'},\n    {key: eTransformType.Filter, name: 'Filter'},\n    {key: eTransformType.Sort, name: 'Sort'},\n    {key: eTransformType.Group, name: 'Group'},\n    {key: eTransformType.Aggregate, name: 'Aggregate'},\n    {key: eTransformType.Series, name: 'Series'},\n    {key: eTransformType.Join, name: 'Join'},\n    {key: eTransformType.Rows, name: 'Rows'},\n    {key: eTransformType.Lookup, name: 'Lookup'},\n    {key: eTransformType.Validation, name: 'Validation'},\n    {key: eTransformType.Delta, name: 'Delta'},\n    {key: eTransformType.Concatenate, name: 'Concatenate'},\n    {key: eTransformType.Profile, name: 'Profile'},\n    {key: eTransformType.Internal, name: 'Internal'},\n   ]\n   \n   export enum eTransformWriterMethod {\n    Bulk = 1,\n    Transaction = 2,\n   }\n   \n   export const eTransformWriterMethodItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eTransformWriterMethod.Bulk, name: 'Bulk'},\n    {key: eTransformWriterMethod.Transaction, name: 'Transaction'},\n   ]\n   \n   export enum eTriggerMethod {\n    NotTriggered = 1,\n    Manual = 2,\n    Schedule = 3,\n    FileWatcher = 4,\n    External = 5,\n    Datajob = 6,\n   }\n   \n   export const eTriggerMethodItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eTriggerMethod.NotTriggered, name: 'NotTriggered'},\n    {key: eTriggerMethod.Manual, name: 'Manual'},\n    {key: eTriggerMethod.Schedule, name: 'Schedule'},\n    {key: eTriggerMethod.FileWatcher, name: 'FileWatcher'},\n    {key: eTriggerMethod.External, name: 'External'},\n    {key: eTriggerMethod.Datajob, name: 'Datajob'},\n   ]\n   \n   export enum eTypeCode {\n    Unknown = 0,\n    Binary = 1,\n    Byte = 2,\n    Char = 3,\n    SByte = 4,\n    UInt16 = 5,\n    UInt32 = 6,\n    UInt64 = 7,\n    Int16 = 8,\n    Int32 = 9,\n    Int64 = 10,\n    Decimal = 11,\n    Double = 12,\n    Single = 13,\n    String = 14,\n    Text = 15,\n    Boolean = 16,\n    DateTime = 17,\n    Time = 18,\n    Guid = 19,\n    Json = 20,\n    Xml = 21,\n    Enum = 22,\n    CharArray = 23,\n    Object = 24,\n    Node = 25,\n    Geometry = 26,\n    Date = 27,\n    DateTimeOffset = 28,\n   }\n   \n   export const eTypeCodeItems = [\n    {key: eTypeCode.Unknown, name: 'Unknown'},\n    {key: eTypeCode.Binary, name: 'Binary'},\n    {key: eTypeCode.Byte, name: 'Byte'},\n    {key: eTypeCode.Char, name: 'Char'},\n    {key: eTypeCode.SByte, name: 'SByte'},\n    {key: eTypeCode.UInt16, name: 'UInt16'},\n    {key: eTypeCode.UInt32, name: 'UInt32'},\n    {key: eTypeCode.UInt64, name: 'UInt64'},\n    {key: eTypeCode.Int16, name: 'Int16'},\n    {key: eTypeCode.Int32, name: 'Int32'},\n    {key: eTypeCode.Int64, name: 'Int64'},\n    {key: eTypeCode.Decimal, name: 'Decimal'},\n    {key: eTypeCode.Double, name: 'Double'},\n    {key: eTypeCode.Single, name: 'Single'},\n    {key: eTypeCode.String, name: 'String'},\n    {key: eTypeCode.Text, name: 'Text'},\n    {key: eTypeCode.Boolean, name: 'Boolean'},\n    {key: eTypeCode.DateTime, name: 'DateTime'},\n    {key: eTypeCode.Time, name: 'Time'},\n    {key: eTypeCode.Guid, name: 'Guid'},\n    {key: eTypeCode.Json, name: 'Json'},\n    {key: eTypeCode.Xml, name: 'Xml'},\n    {key: eTypeCode.Enum, name: 'Enum'},\n    {key: eTypeCode.CharArray, name: 'CharArray'},\n    {key: eTypeCode.Object, name: 'Object'},\n    {key: eTypeCode.Node, name: 'Node'},\n    {key: eTypeCode.Geometry, name: 'Geometry'},\n    {key: eTypeCode.Date, name: 'Date'},\n    {key: eTypeCode.DateTimeOffset, name: 'DateTimeOffset'},\n   ]\n   \n   export enum eUpdateStrategy {\n    Reload = 1,\n    Append = 2,\n    AppendUpdate = 3,\n    AppendUpdateDelete = 4,\n    AppendUpdatePreserve = 5,\n    AppendUpdateDeletePreserve = 6,\n   }\n   \n   export const eUpdateStrategyItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eUpdateStrategy.Reload, name: 'Reload'},\n    {key: eUpdateStrategy.Append, name: 'Append'},\n    {key: eUpdateStrategy.AppendUpdate, name: 'AppendUpdate'},\n    {key: eUpdateStrategy.AppendUpdateDelete, name: 'AppendUpdateDelete'},\n    {key: eUpdateStrategy.AppendUpdatePreserve, name: 'AppendUpdatePreserve'},\n    {key: eUpdateStrategy.AppendUpdateDeletePreserve, name: 'AppendUpdateDeletePreserve'},\n   ]\n   \n   export enum eViewType {\n    Table = 1,\n    Chart = 2,\n   }\n   \n   export const eViewTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eViewType.Table, name: 'Table'},\n    {key: eViewType.Chart, name: 'Chart'},\n   ]\n   \n   export enum eWeekOfMonth {\n    First = 1,\n    Second = 2,\n    Third = 3,\n    Fourth = 4,\n    Last = 5,\n   }\n   \n   export const eWeekOfMonthItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eWeekOfMonth.First, name: 'First'},\n    {key: eWeekOfMonth.Second, name: 'Second'},\n    {key: eWeekOfMonth.Third, name: 'Third'},\n    {key: eWeekOfMonth.Fourth, name: 'Fourth'},\n    {key: eWeekOfMonth.Last, name: 'Last'},\n   ]\n   \n   export enum logLevel {\n    Trace = 0,\n    Debug = 1,\n    Information = 2,\n    Warning = 3,\n    Error = 4,\n    Critical = 5,\n    None = 6,\n   }\n   \n   export const logLevelItems = [\n    {key: logLevel.Trace, name: 'Trace'},\n    {key: logLevel.Debug, name: 'Debug'},\n    {key: logLevel.Information, name: 'Information'},\n    {key: logLevel.Warning, name: 'Warning'},\n    {key: logLevel.Error, name: 'Error'},\n    {key: logLevel.Critical, name: 'Critical'},\n    {key: logLevel.None, name: 'None'},\n   ]\n   \n   ","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { transformTypes } from '../../hub.remote.models';\nimport { TransformProperties } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'transform-properties-item',\n    templateUrl: 'transform-properties-item.component.html'\n})\n\nexport class TransformPropertiesItemComponent implements OnInit, OnChanges {\n    @Input() transformProperties: TransformProperties;\n\n    transformTypes = transformTypes;\n\n    public icon: string;\n    public propertyKeys: string[];\n\n\n\n    constructor() { }\n\n    ngOnInit(): void {\n        this.refresh();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this.refresh();\n    }\n\n    refresh() {\n        this.icon = null;\n        this.propertyKeys = null;\n\n        if (!this.transformProperties) { return; }\n        let transform = this.transformTypes.find(c => c.key === this.transformProperties.transformType);\n        if (transform) {\n            this.icon = transform.icon;\n        }\n\n        if (this.transformProperties.properties) {\n            this.propertyKeys = Object.keys(this.transformProperties.properties);\n        }\n    }\n\n}\n","<li class=\"list-group-item p-1\">\n    <div class=\"d-flex justify-content-between align-items-center\">\n        <div>\n            <i [class]=\"icon\"></i>\n            {{transformProperties.transformName}}\n            <span *ngIf=\"transformProperties.name && transformProperties.name !== transformProperties.transformName\">\n                ( {{transformProperties.name}} )\n            </span>\n        </div>\n    </div>\n\n    <ul class=\"list-group mt-3\">\n        <li class=\"list-group-item list-group-item-primary\">\n            Rows: {{transformProperties.rows}}, \n            Seconds: {{transformProperties.seconds | number: '1.2-2'}}, \n            Rows/Second: {{transformProperties.seconds ? (( transformProperties.rows/transformProperties.seconds) | number: '1.2-2') : 'N/A'}}</li>\n    </ul>\n\n    <ul *ngIf=\"propertyKeys?.length > 0\" class=\"list-group mt-3\">\n        <li class=\"list-group-item list-group-item-primary\">Properties</li>\n        <li *ngFor=\"let key of propertyKeys\" class=\"list-group-item\"><b>{{key}}:</b> {{transformProperties.properties[key]}}</li>\n    </ul>\n    \n\n    <ul *ngIf=\"transformProperties.referenceProperties\" class=\"list-group mt-3\">\n        <li class=\"list-group-item list-group-item-primary\">Linked Transform</li>\n        <transform-properties [transformProperties]=\"transformProperties.referenceProperties\"></transform-properties>\n    </ul>\n</li>\n\n<transform-properties-item *ngIf=\"transformProperties.primaryProperties\" [transformProperties]=\"transformProperties.primaryProperties\">\n</transform-properties-item>\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'maxItems',\n})\nexport class MaxItemsFilterPipe implements PipeTransform {\n\n  transform(items: any[], value: number): any[] {\n    if (!items) { return []; }\n    if (!value) { return items; }\n\n    return items.slice(0, value);\n\n  }\n}\n\n","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\nimport { HubService } from '../../hub.service';\nimport { Observable, Subscription, combineLatest} from 'rxjs';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubCache, eCacheStatus } from '../../hub.models';\nimport { DexihFileFormat } from '../../../shared/shared.models';\n\n@Component({\n  selector: 'dexih-fileFormat-edit-form',\n  templateUrl: './fileFormat-edit.component.html',\n  providers: [HubFormsService]\n})\nexport class FileFormatEditComponent implements OnInit, OnDestroy {\n  public fileFormatKey: number;\n\n  public hubCache: HubCache;\n  public action: string; // new or edit\n  public pageTitle: string;\n  public params: Params;\n\n  // public parseErrorActions = ParseErrorActions;\n  // public missingFieldActions = MissingFieldActions;\n  // public valueTrimmingOptions = ValueTrimmingOptions;\n\n  private _subscription: Subscription;\n  private _formChangeSubscription: Subscription;\n  private _hubCacheChangeSubscription: Subscription;\n  private isLoaded = false;\n\n  constructor(\n    private hubService: HubService,\n    private authService: AuthService,\n    public formsService: HubFormsService,\n    private route: ActivatedRoute,\n    private router: Router,\n  ) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n      ).subscribe(result => {\n        let data = result[0];\n        this.params = result[1];\n        this.hubCache = result[2];\n\n        this.action = data['action'];\n        this.pageTitle = data['pageTitle'];\n\n        if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded ) { return; }\n\n        if (this.isLoaded && this.action === 'new') { return; }\n\n        if (this.isLoaded && this.formsService.hasChanged) {\n            this.authService.confirmDialog('Synchronization warning',\n            'The hub was disconnected, meaning this edit could have been changed by another session.  Would you like to discard the current changes, and reload the latest version?')\n            .then(confirm => {\n                if (confirm) {\n                    this.load();\n                }\n            }).catch(reason => {\n                return;\n            });\n        } else {\n            this.load();\n        }\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'File Format Edit');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._formChangeSubscription) { this._formChangeSubscription.unsubscribe(); }\n  }\n\n  load() {\n\n    if (this.hubCache.isLoaded()) {\n      if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded || this.isLoaded) { return; }\n      this.isLoaded = true;\n\n      if (this.action === 'edit') {\n        // get the hub key from the route data, and update the service.\n        this.fileFormatKey = + this.params['fileFormatKey'];\n\n        if (!this.fileFormatKey) {\n          this.hubService.addHubErrorMessage('There was no file format specified to edit.');\n        } else {\n          if (!this.hubCache.hub || !this.hubCache.hub.dexihColumnValidations) {\n            this.hubService.addHubErrorMessage('The hub cache is not loaded.');\n          } else {\n\n            let fileFormat = this.hubCache.hub.dexihFileFormats.find(c => c.key === this.fileFormatKey);\n            this.formsService.fileFormat(fileFormat);\n          }\n        }\n      }\n\n      if (this.action === 'new') {\n        let fileFormat = new DexihFileFormat();\n        this.formsService.fileFormat(fileFormat);\n\n        // update the url with the saved key\n        this._formChangeSubscription = this.formsService.getCurrentFormObservable().subscribe(form => {\n          let key = form.controls.key.value;\n          if (key) {\n            if (history.pushState) {\n              let newUrl = window.location.pathname.replace('/fileFormat-new', `/fileFormat-edit/${key}`)\n              this.router.navigateByUrl(newUrl);\n              this._formChangeSubscription.unsubscribe();\n            }\n          }\n        });\n      }\n    }\n  }\n\n  close() {\n    this.authService.navigateUp();\n  }\n}\n","<div class=\"container\">\n\t<d-widget \n\t\ttitle=\"Edit Format\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-file-text-o\" \n\t\t[showCloseButton]=\"true\"\n\t\t[padding]=\"true\"\n\t\t(close)=\"close()\"\n\t\t>\n        <ng-template #header>\n\t\t\t<dexih-invalid-form-details [control]=\"formsService.currentForm\" (click)=\"formsService.showErrors()\" class=\"mr-1\"></dexih-invalid-form-details>\n            <save-button *ngIf=\"hubCache.canWrite\" [formsService]=\"formsService\"  class=\"mr-1\"></save-button>\n            <cancel-button [formsService]=\"formsService\"></cancel-button>\n        </ng-template>\n\n\t\t<form *ngIf=\"formsService.currentForm\"  [formGroup]=\"formsService.currentForm\">\n\t\t\t<fieldset>\n\t\t\t\t<section>\n\t\t\t\t\t<form-input label=\"File Format Name\" formControlName=\"name\" placeholder=\"Enter the file format name.\" iconClass=\"fa fa-list\" [errors]=\"formsService.formErrors['name']\" [autocapitalize]=\"true\">\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<form-textarea label=\"Description\" [showPreview]=\"true\" [isHidden]=\"true\" formControlName=\"description\" placeholder=\"Enter the description.\" >\n\t\t\t\t\t</form-textarea>\n\t\t\t\t</section>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Delimiter\" formControlName=\"delimiter\" placeholder=\"Enter the delimiter\" iconClass=\"fa fa-list\"\n\t\t\t\t\t\t [errors]=\"formsService.formErrors['delimiter']\" note=\"The field delimiter (use \\t=tab, \\n=new line, \\r=carriage return).\">\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input type=\"number\" label=\"Buffer Size\" formControlName=\"bufferSize\" placeholder=\"Enter buffer size\" iconClass=\"fa fa-list\" [errors]=\"formsService.formErrors['bufferSize']\" note=\"The size of the internal buffer that is used when reader or writing data.\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input type=\"number\" label=\"Skip Header Rows Count\" formControlName=\"skipHeaderRows\" placeholder=\"Enter row count\" iconClass=\"fa fa-list\" [errors]=\"formsService.formErrors['skipHeaderRows']\" note=\"The number of rows at the start of the file that will be ignored.\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Has Header Record\" formControlName=\"hasHeaderRecord\" note=\"Tells the reader/writer if there is a header row in the CSV file.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Ignore Header White Space\" formControlName=\"ignoreHeaderWhiteSpace\" note=\"Tells the reader to ignore white space in the headers when matching the columns to the properties by name.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Match to Column to Header\" formControlName=\"matchHeaderRecord\" note=\"Tells the reader to use the column heading name to load the data.  If unchecked, columns will be read into fields in the order specified in the table columns.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Set White Space Cells to Null \" formControlName=\"setWhiteSpaceCellsToNull\" note=\"Set empty cells or cells containing only white spaces to null.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Allow Comments\" formControlName=\"allowComments\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t\t<div *ngIf=\"formsService.currentForm.controls.allowComments.value\">\n\t\t\t\t\t\t\t<form-input label=\"Comment\" formControlName=\"comment\" placeholder=\"Enter comment character\" iconClass=\"fa fa-list\"\n\t\t\t\t\t\t\t note=\"The value used to denote a line that is commented out.\" [errors]=\"formsService.formErrors['comment']\">\n\t\t\t\t\t\t\t</form-input>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Ignore Quotes\" formControlName=\"ignoreQuotes\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t\t<div *ngIf=\"!formsService.currentForm.controls.ignoreQuotes.value\">\n\t\t\t\t\t\t\t<form-input label=\"Quote\" formControlName=\"quote\" placeholder=\"Enter the quote\" [maxlength]=\"1\" iconClass=\"fa fa-list\"\n\t\t\t\t\t\t\t [errors]=\"formsService.formErrors['quote']\" note=\"The value used to escape fields that contain a delimiter, quote, or line ending.\">\n\t\t\t\t\t\t\t</form-input>\n\t\t\t\t\t\t</div>\t\t\t\t\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Quote All Fields\" formControlName=\"quoteAllFields\" note=\"Tells the writer whether all fields written should have quotes around them; regardless if the field contains anything that should be escaped.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Quote No Fields\" formControlName=\"quoteNoFields\" note=\"Tells the writer whether all fields written should not have quotes around them; regardless if the field contains anything that should be escaped.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Trim Fields\" formControlName=\"trimFields\" note=\"Tells the reader to trim whitespace from the beginning and ending of the field value when reading.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Trim Headers\" formControlName=\"trimHeaders\" note=\"Tells the reader to ignore white space from the beginning and ending of the headers when matching the columns to the properties by name.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Detect Column Count Changes\" formControlName=\"detectColumnCountChanges\" note=\"Check for changes in the number of column from row to row.  If true, the job will abend.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Ignore Reading Exceptions\" formControlName=\"ignoreReadingExceptions\" note=\"Tells the reader to ignore any issues when parsing the file.  Issues mean the file is bad in some way, and the parser isn't able to recover.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Will Abend On Missing Field\" formControlName=\"willThrowOnMissingField\" note=\"Indicates if the job should be abended if reading and an expected field is missing.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Skip Empty Records\" formControlName=\"skipEmptyRecords\" note=\"Tells the reader a record should be skipped when reading if it's empty. A record is considered empty if all fields are empty.\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t</fieldset>\n\t\t</form>\n \n\t</d-widget>\n\t\n\t<dexih-help class=\"m-3\" title=\"File Formats\" path=\"/assets/help/reference/fileFormat.md\"></dexih-help>\n</div>\n","import { Component, OnInit, Input, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { DexihListOfValues, InputParameterBase, ListOfValuesItem } from '../../../shared/shared.models';\nimport { HubService } from '../../hub.service';\nimport { Subscription, Observable } from 'rxjs';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n    selector: 'input-parameters-view',\n    templateUrl: 'input-parameters-view.component.html'\n})\n\nexport class InputParametersViewComponent implements OnInit, OnDestroy {\n    @Input() parameters: InputParameterBase[];\n    @Input() refreshEvent: Observable<void>;\n\n    @Output() onChange = new EventEmitter();\n    @Output() onRefreshData = new EventEmitter();\n\n    private _hubSubscription: Subscription;\n    private _refreshSubscription: Subscription;\n\n    public parentParams: string[] = [];\n    public values: ListOfValuesItem[] = [];\n    public listOfValues: Array<DexihListOfValues>;\n\n    public userParameters: InputParameterBase[];\n\n    public requiresRefresh = false;\n\n    public cancelToken: CancelToken = new CancelToken();\n\n    constructor(private hubService: HubService) { }\n\n    ngOnInit() {\n        this._hubSubscription = this.hubService.getHubCacheObservable(true).subscribe(cache => {\n            this.listOfValues = cache.hub.dexihListOfValues;\n\n            this.userParameters = [];\n\n            this.parameters.filter(c => c.isValid && c.allowUserSelect).forEach((parameter: InputParameterBase) => {\n                parameter['runTime'] = {showRefresh: parameter.listOfValuesKey > 0, isRefreshing: false, items: []};\n                if (parameter.value) {\n                    parameter['runTime'].items = [{key: parameter.value, name: parameter.valueDesc}];\n                }\n                this.userParameters.push(parameter);\n            });\n\n        });\n\n        this._refreshSubscription = this.refreshEvent.subscribe(() => {\n            this.requiresRefresh = false;\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._hubSubscription) { this._hubSubscription.unsubscribe(); }\n        if (this._refreshSubscription) { this._refreshSubscription.unsubscribe(); }\n    }\n\n    refreshLOV(parameter: InputParameterBase) {\n        if (!parameter.listOfValuesKey) { return; }\n        parameter['runTime'].isRefreshing = true;\n        this.hubService.previewListOfValuesKey(parameter.listOfValuesKey, false, this.cancelToken).then(result => {\n            parameter['runTime'].items = result;\n            parameter['runTime'].showRefresh = false;\n        }).finally(() => {\n            parameter['runTime'].isRefreshing = false;\n        });\n    }\n\n    refreshData() {\n        this.onRefreshData.emit();\n    }\n\n    change(parameter: InputParameterBase, $event) {\n        if (parameter.listOfValuesKey > 0) {\n            this.onChange.emit();\n        } else {\n            this.requiresRefresh = true;\n        }\n    }\n}\n","<div *ngIf=\"parameters\" class=\"d-flex\">\n    <span *ngFor=\"let parameter of userParameters\" class=\"pr-1\">\n        <!-- <form-input [disabled]=\"true\" [labelLeft]=\"parameter.name\" [(ngModel)]=\"parameter.name\">\n        </form-input> -->\n        <form-select *ngIf=\"(parameter.listOfValuesKey > 0)\"\n            [labelLeft]=\"parameter.name\" [(ngModel)]=\"parameter.value\" itemKey=\"key\" itemName=\"name\"\n            [items]=\"parameter['runTime'].items\" [enableTextEntry]=\"! (parameter.listOfValuesKey > 0)\"\n            [textEntryItems]=\"parentParams\" textEntryItemsTitle=\"Linked Parameters\"\n            (ngModelChange)=\"change(parameter, $event)\" [showRefresh]=\"parameter['runTime'].showRefresh\"\n            [isRefreshing]=\"parameter['runTime'].isRefreshing\" (refreshed)=\"refreshLOV(parameter)\"\n            [multiSelect]=\"parameter.rank === 1\">\n        </form-select>\n        <form-input *ngIf=\"! (parameter.listOfValuesKey > 0)\"\n            [labelLeft]=\"parameter.name\" [(ngModel)]=\"parameter.value\"\n            (ngModelChange)=\"change(parameter, $event)\"></form-input>\n    </span>\n    <div *ngIf=\"requiresRefresh\" class=\"alert alert-warning mt-2\">\n        <a href=\"javascript:void(0)\" class=\"alert-link\" (click)=\"refreshData()\">The parameters have changed. Click to\n            refresh.</a>\n    </div>\n</div>","export * from './view-index/view-index.component';\nexport * from './view-edit/view-edit.component';\n","export {CancelButtonComponent} from './cancel-button/cancel-button.component';\nexport {SaveButtonComponent} from './save-button/save-button.component';\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { HubCache } from '../../hub.models';\nimport { DexihView, DexihHub, eSharedObjectType, eViewTypeItems, eDataObjectType, eViewType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'views',\n    templateUrl: './view-index.component.html',\n    styles: []\n})\nexport class ViewIndexComponent implements OnInit, OnDestroy {\n    @Input() public hubKey: number;\n\n    private _subscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n\n    hubCache: HubCache;\n\n    views: Array<DexihView>;\n    public eSharedObjectType = eSharedObjectType;\n\n    columns = [\n        { name: 'name', title: 'Name', footer: 'description', format: 'Md', tags: 'tags' },\n        { iconClass: 'sharedIcon', tooltip: 'sharedToolTip', width: '1%', align: 'center' },\n        { name: 'viewType', title: 'Chart/Table' },\n        { name: 'sourceName', title: 'Source'},\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        // watch for any changes in the validations.\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n\n                this.updateViews();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'View Index');\n        }\n\n\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    deleteViews(views: Array<DexihView>) {\n        this.hubService.deleteViews(views);\n    }\n\n    updateViews() {\n        if (this.hubCache && this.hubCache.isLoaded()) {\n            let views: Array<DexihView>;\n            views = this.hubCache.hub.dexihViews.filter(c => c.isValid);\n            let tableData = views.map(view => {\n                let sourceName = '';\n\n                switch (view.sourceType) {\n                    case eDataObjectType.Table:\n                        let sourceTable = this.hubCache.getTable(view.sourceTableKey);\n                        sourceName = sourceTable ? sourceTable.logicalName : 'Error, not found';\n                        break;\n                    case eDataObjectType.Datalink:\n                        let sourceDatalink = this.hubCache.hub.dexihDatalinks\n                            .find(c => c.key === view.sourceDatalinkKey);\n                        sourceName = sourceDatalink ? 'Datalink: ' + sourceDatalink.name : 'Error, not found';\n                        break;\n                }\n\n                return {\n                    key: view.key,\n                    name: view.name,\n                    tags: this.hubCache.getObjectTags(eSharedObjectType.View, view.key),\n                    viewType: eViewType[view.viewType],\n                    sourceName: sourceName,\n                    updateDate: view.updateDate,\n                    sharedIcon: view.isShared ? 'fa fa-group' : 'fa fa-user-secret',\n                    sharedToolTip: view.isShared ? 'Table is shared' : 'Table is private'\n                };\n            });\n            this._tableData.next(tableData);\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    editView(view: DexihView) {\n        this.router.navigate(['view-edit', view.key], { relativeTo: this.route });\n    }\n\n    export(items: Array<DexihView>) {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(cache.hub.hubKey, '');\n        items.forEach(item => { cache.cacheAddView(item.key, hub); });\n\n        let filename = items.length === 1 ? 'View - ' + items[0].name + '.json' : 'views.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    watchChanges() {\n        // watch the current validation in case it is changed in another session.\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n            if (hubCacheChange.changeClass === eSharedObjectType.View || hubCacheChange.changeClass === eSharedObjectType.TagObjects) {\n                this.updateViews();\n            }\n        });\n    }\n}\n","<div class=\"container\">\n    <d-widget title=\"Views\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-bar-chart\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\t>\n\t\t\t<d-table \n\t\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t\t[columns]=\"columns\"\n\t\t\t\t[dataObservable]=\"tableData\"\n\t\t\t\t(rowClick)=\"editView($event)\"\n\t\t\t\t[tags]=\"this.hubCache.hub.dexihTags\"\n\t\t\t\t>\n\t\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t\t<tags-update-button class=\"ml-1\" [objectType]=\"eSharedObjectType.View\" [objects]=\"items\" ></tags-update-button>\n\t\t\t\t\t</ng-template>\n\n\t\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n\t\t\t\t\t\t<dependent-items-button class=\"ml-1\" [key]=\"item.key\" [objectType]='eSharedObjectType.View'></dependent-items-button>\n\t\t\t\t\t</ng-template>\n\t\n\t\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t\t<actions-view-button [views]=\"items\"></actions-view-button>\n\t\t\t\t\t</ng-template>\n\n\t\t\t</d-table>\n\n\t</d-widget>\n\t\n\t<dexih-help class=\"m-3\" title=\"Views\" path=\"/assets/help/reference/view.md\"></dexih-help>\n\n</div>\n\n\n","export * from './summary.component';\n","import './polyfills';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n","import { Component, OnInit, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\n\n@Component({\n    selector: 'customFunction-edit-button',\n    templateUrl: './customFunction-edit-button.component.html'\n})\nexport class CustomFunctionEditButtonComponent implements OnInit {\n    @Input() key = null;\n\n    public hubPath: string;\n\n    constructor(private hubService: HubService) { }\n\n    ngOnInit() {\n        this.hubPath = this.hubService.getHubUrl();\n    }\n}\n","<a [routerLink]=\"[hubPath, 'customFunction-edit', key]\" *ngIf=\"key\" > \n    <i class=\"fa fa-edit\"></i> \n    Edit \n</a>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationEnd }    from '@angular/router';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { filter} from 'rxjs/operators';\n\n@Component({\n    selector: 'dexih-route-breadcrumbs',\n    templateUrl: './route-breadcrumbs.component.html',\n    styleUrls: ['./route-breadcrumbs.component.scss']\n})\nexport class RouteBreadcrumbsComponent implements OnInit, OnDestroy {\n    breadcrumbs: Array<Breadcrumb>;\n\n    private _eventSubscription: Subscription;\n\n    constructor(private router: Router, private route: ActivatedRoute) {}\n\n    ngOnInit(): void {\n\n        this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\n            let breadcrumbs = [];\n            let currentRoute = this.route.root,\n            url = '';\n            do {\n                let childrenRoutes = currentRoute.children;\n                currentRoute = null;\n                childrenRoutes.forEach(route => {\n                    if (route.outlet === 'primary') {\n                        let routeSnapshot = route.snapshot;\n                        url += '/' + routeSnapshot.url.map(segment => segment.path).join('/');\n                        let pageTitle = routeSnapshot.data['pageTitle'];\n                        if (pageTitle &&\n                            breadcrumbs.findIndex((value) => value.pageTitle === pageTitle) === -1 ) {\n                            breadcrumbs.push({\n                                pageTitle: pageTitle,\n                                url: url\n                            });\n                        }\n                        currentRoute = route;\n                    }\n                });\n            } while (currentRoute);\n            this.breadcrumbs = breadcrumbs;\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._eventSubscription) { this._eventSubscription.unsubscribe(); }\n    }\n}\n\nexport class Breadcrumb {\n  constructor(\n    public url: string,\n    public pageTitle: string) { }\n}\n","<nav class=\"py-0\" aria-label=\"breadcrumb\">\n    <ol class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\">\n                <a routerLink=\"/home\" >\n                <i class=\"fa-fw fa fa-home\"></i>Home</a>\n            </li>\n\n            <li *ngFor=\"let breadcrumb of breadcrumbs; let last = last\" class=\"breadcrumb-item\" [ngClass]=\"{active: last}\">\n                <a *ngIf=\"!last\"  [routerLink]=\"breadcrumb.url\" queryParamsHandling=\"merge\">{{breadcrumb.pageTitle}}</a>\n                <span *ngIf=\"last\">{{breadcrumb.pageTitle}} (current)</span>\n            </li>\n    </ol>\n</nav>"]}