{"version":3,"sources":["webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/+auth/auth.models.ts","webpack:///src/app/+auth/auth.service.ts","webpack:///src/app/+auth/token.interceptor.service.ts","webpack:///src/app/+auth/websocket.service.ts","webpack:///src/app/+hub/buttons/actions-api-button/actions-api-button.component.ts","webpack:///src/app/+hub/buttons/actions-api-button/actions-api-button.component.html","webpack:///src/app/+hub/buttons/actions-columnValidation-button/actions-columnValidation-button.component.ts","webpack:///src/app/+hub/buttons/actions-columnValidation-button/actions-columnValidation-button.component.html","webpack:///src/app/+hub/buttons/actions-connection-button/actions-connection-button.component.html","webpack:///src/app/+hub/buttons/actions-connection-button/actions-connection-button.component.ts","webpack:///src/app/+hub/buttons/actions-dashboard-button/actions-dashboard-button.component.ts","webpack:///src/app/+hub/buttons/actions-dashboard-button/actions-dashboard-button.component.html","webpack:///src/app/+hub/buttons/actions-datajob-button/actions-datajob-button.component.ts","webpack:///src/app/+hub/buttons/actions-datajob-button/actions-datajob-button.component.html","webpack:///src/app/+hub/buttons/actions-datalink-button/actions-datalink-button.component.html","webpack:///src/app/+hub/buttons/actions-datalink-button/actions-datalink-button.component.ts","webpack:///src/app/+hub/buttons/actions-datalinkTest-button/actions-datalinkTest-button.component.ts","webpack:///src/app/+hub/buttons/actions-datalinkTest-button/actions-datalinkTest-button.component.html","webpack:///src/app/+hub/buttons/actions-fileFormat-button/actions-fileFormat-button.component.ts","webpack:///src/app/+hub/buttons/actions-fileFormat-button/actions-fileFormat-button.component.html","webpack:///src/app/+hub/buttons/actions-listOfValues-button/actions-listOfValues-button.component.ts","webpack:///src/app/+hub/buttons/actions-listOfValues-button/actions-listOfValues-button.component.html","webpack:///src/app/+hub/buttons/actions-table-button/actions-table-button.component.html","webpack:///src/app/+hub/buttons/actions-table-button/actions-table-button.component.ts","webpack:///src/app/+hub/buttons/actions-view-button/actions-view-button.component.ts","webpack:///src/app/+hub/buttons/actions-view-button/actions-view-button.component.html","webpack:///src/app/+hub/buttons/buttons.module.ts","webpack:///src/app/+hub/buttons/cancel-button/cancel-button.component.ts","webpack:///src/app/+hub/buttons/cancel-button/cancel-button.component.html","webpack:///src/app/+hub/buttons/columnValidation-edit-button/columnValidation-edit-button.component.ts","webpack:///src/app/+hub/buttons/columnValidation-edit-button/columnValidation-edit-button.component.html","webpack:///src/app/+hub/buttons/connection-edit-button/connection-edit-button.component.ts","webpack:///src/app/+hub/buttons/connection-edit-button/connection-edit-button.component.html","webpack:///src/app/+hub/buttons/customFunction-edit-button/customFunction-edit-button.component.ts","webpack:///src/app/+hub/buttons/customFunction-edit-button/customFunction-edit-button.component.html","webpack:///src/app/+hub/buttons/datalink-edit-button/datalink-edit-button.component.ts","webpack:///src/app/+hub/buttons/datalink-edit-button/datalink-edit-button.component.html","webpack:///src/app/+hub/buttons/dependent-items/dependent-items-button.component.html","webpack:///src/app/+hub/buttons/dependent-items/dependent-items-button.component.ts","webpack:///src/app/+hub/buttons/index.ts","webpack:///src/app/+hub/buttons/new-connection-button/new-connection-button.component.ts","webpack:///src/app/+hub/buttons/new-connection-button/new-connection-button.component.html","webpack:///src/app/+hub/buttons/new-datalink-button/new-datalink-button.component.ts","webpack:///src/app/+hub/buttons/new-datalink-button/new-datalink-button.component.html","webpack:///src/app/+hub/buttons/new-table-button/new-table-button.component.ts","webpack:///src/app/+hub/buttons/new-table-button/new-table-button.component.html","webpack:///src/app/+hub/buttons/save-button/save-button.component.ts","webpack:///src/app/+hub/buttons/save-button/save-button.component.html","webpack:///src/app/+hub/buttons/table-edit-button/table-edit-button.component.ts","webpack:///src/app/+hub/buttons/table-edit-button/table-edit-button.component.html","webpack:///src/app/+hub/buttons/tags-filter-button/tags-filter-button.component.ts","webpack:///src/app/+hub/buttons/tags-filter-button/tags-filter-button.component.html","webpack:///src/app/+hub/buttons/tags-update-button/tags-update-button.component.ts","webpack:///src/app/+hub/buttons/tags-update-button/tags-update-button.component.html","webpack:///src/app/+hub/buttons/view-edit-button/view-edit-button.component.ts","webpack:///src/app/+hub/buttons/view-edit-button/view-edit-button.component.html","webpack:///src/app/+hub/fileFormat/fileFormat-edit/fileFormat-edit.component.ts","webpack:///src/app/+hub/fileFormat/fileFormat-edit/fileFormat-edit.component.html","webpack:///src/app/+hub/fileFormat/fileFormat-index/fileFormat-index.component.ts","webpack:///src/app/+hub/fileFormat/fileFormat-index/fileFormat-index.component.html","webpack:///src/app/+hub/fileFormat/index.ts","webpack:///src/app/+hub/hub.component.html","webpack:///src/app/+hub/hub.component.ts","webpack:///src/app/+hub/hub.forms.service.ts","webpack:///src/app/+hub/hub.lineage.models.ts","webpack:///src/app/+hub/hub.models.ts","webpack:///src/app/+hub/hub.module.ts","webpack:///src/app/+hub/hub.query.models.ts","webpack:///src/app/+hub/hub.remote.models.ts","webpack:///src/app/+hub/hub.routing.ts","webpack:///src/app/+hub/hub.service.ts","webpack:///src/app/+hub/hub.shared.module.ts","webpack:///src/app/+hub/index.ts","webpack:///src/app/+hub/item-edit.guard.ts","webpack:///src/app/+hub/summary/index.ts","webpack:///src/app/+hub/summary/summary.component.ts","webpack:///src/app/+hub/summary/summary.component.html","webpack:///src/app/+hub/table/table-preview-data/table-preview-data.component.ts","webpack:///src/app/+hub/table/table-preview-data/table-preview-data.component.html","webpack:///src/app/+hub/view/index.ts","webpack:///src/app/+hub/view/view-edit/view-edit.component.ts","webpack:///src/app/+hub/view/view-edit/view-edit.component.html","webpack:///src/app/+hub/view/view-index/view-index.component.ts","webpack:///src/app/+hub/view/view-index/view-index.component.html","webpack:///src/app/+hub/widgets/api-status/api-status.component.ts","webpack:///src/app/+hub/widgets/api-status/api-status.component.html","webpack:///src/app/+hub/widgets/api-view/api-view.component.ts","webpack:///src/app/+hub/widgets/api-view/api-view.component.html","webpack:///src/app/+hub/widgets/columnValidation-view/columnValidation-view.component.ts","webpack:///src/app/+hub/widgets/columnValidation-view/columnValidation-view.component.html","webpack:///src/app/+hub/widgets/connection-view/connection-view.component.html","webpack:///src/app/+hub/widgets/connection-view/connection-view.component.ts","webpack:///src/app/+hub/widgets/dashboard-view/dashboard-view.component.ts","webpack:///src/app/+hub/widgets/dashboard-view/dashboard-view.component.html","webpack:///src/app/+hub/widgets/datajob-view/datajob-view.component.ts","webpack:///src/app/+hub/widgets/datajob-view/datajob-view.component.html","webpack:///src/app/+hub/widgets/datalink-status/datalink-status.component.ts","webpack:///src/app/+hub/widgets/datalink-status/datalink-status.component.html","webpack:///src/app/+hub/widgets/datalink-view/datalink-view.component.ts","webpack:///src/app/+hub/widgets/datalink-view/datalink-view.component.html","webpack:///src/app/+hub/widgets/datalinkTest-view/datalinkTest-view.component.ts","webpack:///src/app/+hub/widgets/datalinkTest-view/datalinkTest-view.component.html","webpack:///src/app/+hub/widgets/fileFormat-view/fileFormat-view.component.ts","webpack:///src/app/+hub/widgets/fileFormat-view/fileFormat-view.component.html","webpack:///src/app/+hub/widgets/input-parameters-view/input-parameters-view.component.ts","webpack:///src/app/+hub/widgets/input-parameters-view/input-parameters-view.component.html","webpack:///src/app/+hub/widgets/input-parameters/input-parameters.component.ts","webpack:///src/app/+hub/widgets/input-parameters/input-parameters.component.html","webpack:///src/app/+hub/widgets/listOfValues-view/listOfValues-view.component.ts","webpack:///src/app/+hub/widgets/listOfValues-view/listOfValues-view.component.html","webpack:///src/app/+hub/widgets/preview-data/preview-data.component.ts","webpack:///src/app/+hub/widgets/preview-data/preview-data.component.html","webpack:///src/app/+hub/widgets/remoteAgent-view/remoteAgent-view.component.ts","webpack:///src/app/+hub/widgets/remoteAgent-view/remoteAgent-view.component.html","webpack:///src/app/+hub/widgets/table-column-view/table-column-view.component.ts","webpack:///src/app/+hub/widgets/table-column-view/table-column-view.component.html","webpack:///src/app/+hub/widgets/table-view/table-view.component.ts","webpack:///src/app/+hub/widgets/table-view/table-view.component.html","webpack:///src/app/+hub/widgets/transform-properties/transform-properties-item.component.ts","webpack:///src/app/+hub/widgets/transform-properties/transform-properties-item.component.html","webpack:///src/app/+hub/widgets/transform-properties/transform-properties.component.ts","webpack:///src/app/+hub/widgets/transform-properties/transform-properties.component.html","webpack:///src/app/+hub/widgets/view-view/view-view.component.ts","webpack:///src/app/+hub/widgets/view-view/view-view.component.html","webpack:///src/app/+hub/widgets/widgets.module.ts","webpack:///src/app/+hubs/hubs.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/global.error.handler.ts","webpack:///src/app/shared/help/dexih-help.component.ts","webpack:///src/app/shared/help/dexih-help.component.html","webpack:///src/app/shared/help/dexih-help.module.ts","webpack:///src/app/shared/layout/app-layouts/auth-layout.component.ts","webpack:///src/app/shared/layout/app-layouts/auth-layout.component.html","webpack:///src/app/shared/layout/app-layouts/empty-layout.component.ts","webpack:///src/app/shared/layout/app-layouts/empty-layout.component.html","webpack:///src/app/shared/layout/app-layouts/main-layout.component.ts","webpack:///src/app/shared/layout/app-layouts/main-layout.component.html","webpack:///src/app/shared/layout/footer/footer.component.ts","webpack:///src/app/shared/layout/footer/footer.component.html","webpack:///src/app/shared/layout/header/header.component.ts","webpack:///src/app/shared/layout/header/header.component.html","webpack:///src/app/shared/layout/header/header.module.ts","webpack:///src/app/shared/layout/header/messages/messages.component.ts","webpack:///src/app/shared/layout/header/messages/messages.component.html","webpack:///src/app/shared/layout/header/tasks/tasks.component.ts","webpack:///src/app/shared/layout/header/tasks/tasks.component.html","webpack:///src/app/shared/layout/layout.guard.ts","webpack:///src/app/shared/layout/layout.module.ts","webpack:///src/app/shared/layout/layout.service.ts","webpack:///src/app/shared/layout/navigation/hubs/hubs.component.ts","webpack:///src/app/shared/layout/navigation/hubs/hubs.component.html","webpack:///src/app/shared/layout/navigation/login-info/login-info.component.ts","webpack:///src/app/shared/layout/navigation/login-info/login-info.component.html","webpack:///src/app/shared/layout/navigation/menu/index.ts","webpack:///src/app/shared/layout/navigation/menu/menu-item.component.ts","webpack:///src/app/shared/layout/navigation/menu/menu-item.component.html","webpack:///src/app/shared/layout/navigation/menu/menu-parent.component.ts","webpack:///src/app/shared/layout/navigation/menu/menu-parent.component.html","webpack:///src/app/shared/layout/navigation/navigation.component.ts","webpack:///src/app/shared/layout/navigation/navigation.component.html","webpack:///src/app/shared/layout/navigation/navigation.module.ts","webpack:///src/app/shared/layout/navigation/remote-agent/remote-agent.component.ts","webpack:///src/app/shared/layout/navigation/remote-agent/remote-agent.component.html","webpack:///src/app/shared/layout/ribbon/index.ts","webpack:///src/app/shared/layout/ribbon/ribbon.component.ts","webpack:///src/app/shared/layout/ribbon/ribbon.component.html","webpack:///src/app/shared/layout/ribbon/ribbon.module.ts","webpack:///src/app/shared/layout/ribbon/route-breadcrumbs/route-breadcrumbs.component.ts","webpack:///src/app/shared/layout/ribbon/route-breadcrumbs/route-breadcrumbs.component.html","webpack:///src/app/shared/shared.models.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/ui/charts/chart-colors.ts","webpack:///src/app/shared/ui/charts/chart-groups.ts","webpack:///src/app/shared/ui/charts/chartBuilder/chart-builder.component.ts","webpack:///src/app/shared/ui/charts/chartBuilder/chart-builder.component.html","webpack:///src/app/shared/ui/charts/chartView/chart-view.component.ts","webpack:///src/app/shared/ui/charts/chartView/chart-view.component.html","webpack:///src/app/shared/ui/charts/charts.module.ts","webpack:///src/app/shared/ui/charts/comboChart/combo-chart.component.ts","webpack:///src/app/shared/ui/charts/comboChart/combo-chart.component.html","webpack:///src/app/shared/ui/charts/comboChart/combo-series-vertical.component.ts","webpack:///src/app/shared/ui/charts/comboChart/index.ts","webpack:///src/app/shared/ui/charts/googleMap/google-map.component.ts","webpack:///src/app/shared/ui/charts/googleMap/google-map.component.html","webpack:///src/app/shared/ui/dexihFormControls/dexih-form-controls.module.ts","webpack:///src/app/shared/ui/dexihFormControls/dexih-form-errors.module.ts","webpack:///src/app/shared/ui/dexihFormControls/dexih-invalid-form-details/dexih-invalid-form-details.component.ts","webpack:///src/app/shared/ui/dexihFormControls/dexih-invalid-form-details/dexih-invalid-form-details.component.html","webpack:///src/app/shared/ui/dexihFormControls/dexih-invalid-form-icon/dexih-invalid-form-icon.component.ts","webpack:///src/app/shared/ui/dexihFormControls/dexih-invalid-form-icon/dexih-invalid-form-icon.component.html","webpack:///src/app/shared/ui/dexihFormControls/index.ts","webpack:///src/app/shared/ui/dexihMessage/dexih-message.component.ts","webpack:///src/app/shared/ui/dexihMessage/dexih-message.component.html","webpack:///src/app/shared/ui/dexihMessage/dexih-message.module.ts","webpack:///src/app/shared/ui/dexihMessage/index.ts","webpack:///src/app/shared/ui/icons/download-button/download-button.component.ts","webpack:///src/app/shared/ui/icons/download-button/download-button.component.html","webpack:///src/app/shared/ui/icons/encryption-status/encryption-status.component.ts","webpack:///src/app/shared/ui/icons/encryption-status/encryption-status.component.html","webpack:///src/app/shared/ui/icons/icons.module.ts","webpack:///src/app/shared/ui/icons/index.ts","webpack:///src/app/shared/ui/icons/print/print-button.component.ts","webpack:///src/app/shared/ui/icons/print/print-button.component.html","webpack:///src/app/shared/ui/icons/privacy-status/privacy-status.component.ts","webpack:///src/app/shared/ui/icons/privacy-status/privacy-status.component.html","webpack:///src/app/shared/ui/queryBuilder/query-builder.component.ts","webpack:///src/app/shared/ui/queryBuilder/query-builder.component.html","webpack:///src/app/shared/ui/queryBuilder/query-builder.module.ts","webpack:///src/app/shared/ui/seriesAnimate/series-animate.component.ts","webpack:///src/app/shared/ui/seriesAnimate/series-animate.component.html","webpack:///src/app/shared/ui/seriesAnimate/series-animate.module.ts","webpack:///src/app/shared/ui/sharedData/index.ts","webpack:///src/app/shared/ui/sharedData/input-parameters-view/input-parameters-view.component.ts","webpack:///src/app/shared/ui/sharedData/input-parameters-view/input-parameters-view.component.html","webpack:///src/app/shared/ui/sharedData/preview-dashboard/preview-dashboard-item.component.ts","webpack:///src/app/shared/ui/sharedData/preview-dashboard/preview-dashboard-item.component.html","webpack:///src/app/shared/ui/sharedData/preview-dashboard/preview-dashboard.component.ts","webpack:///src/app/shared/ui/sharedData/preview-dashboard/preview-dashboard.component.html","webpack:///src/app/shared/ui/sharedData/preview-data/preview-data.component.ts","webpack:///src/app/shared/ui/sharedData/preview-data/preview-data.component.html","webpack:///src/app/shared/ui/sharedData/preview/preview.component.ts","webpack:///src/app/shared/ui/sharedData/preview/preview.component.html","webpack:///src/app/shared/ui/sharedData/shared-data.module.ts","webpack:///src/app/shared/ui/sharedData/sharedData.component.ts","webpack:///src/app/shared/ui/sharedData/sharedData.component.html","webpack:///src/app/shared/ui/supportOptions/support-options.component.ts","webpack:///src/app/shared/ui/supportOptions/support-options.component.html","webpack:///src/app/shared/ui/supportOptions/support-options.module.ts","webpack:///src/app/shared/utils/all-filter.pipe.ts","webpack:///src/app/shared/utils/calendar.pipe.ts","webpack:///src/app/shared/utils/countdown.component.ts","webpack:///src/app/shared/utils/dragzone.ts","webpack:///src/app/shared/utils/dropzone.ts","webpack:///src/app/shared/utils/equal-filter.pipe.ts","webpack:///src/app/shared/utils/field-filter.pipe.ts","webpack:///src/app/shared/utils/functions.ts","webpack:///src/app/shared/utils/gt-filter.pipe.ts","webpack:///src/app/shared/utils/isValid-filter.pipe.ts","webpack:///src/app/shared/utils/max-items-filter.ts","webpack:///src/app/shared/utils/sort.desc.pipe.ts","webpack:///src/app/shared/utils/sort.pipe.ts","webpack:///src/app/shared/utils/time.directive.ts","webpack:///src/app/shared/utils/utils.module.ts","webpack:///src/environments/environment.ts","webpack:///src/logging.ts","webpack:///src/main.ts","webpack:///src/polyfills.ts"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","webpackContextKeys","Object","resolve","module","exports","webpackEmptyAsyncContext","Promise","then","logoUrl","logoSmallUrl","User","_email","_userName","_password","_rememberMe","email","userName","password","rememberMe","firstName","lastName","terms","subscription","emailConfirmed","isInvited","inviteQuota","notifyPrivateMessage","notifySupportMessage","newPassword","confirmPassword","UserLoginInfo","loginProvider","providerDisplayName","providerKey","DexihHubAuth","sharedAccess","Registered","isValid","ExternalLoginResult","ExternalLogin","Parameter","Message","success","message","exceptionDetails","value","time","Date","now","eHubAccess","eFileStatus","FileHandler","file","url","Math","random","toString","substr","status","Waiting","progress","Uploading","Downloading","httpSubscription","unsubscribe","RemoteToken","CancelToken","cancelMethod","PromiseWithCancel","executor","cancel","_cancel","AuthService","http","router","route","location","_currentUser","_refreshUserAttempted","_hubs","_hubErrors","_displayHelp","_tasks","_notification","_notifications","_logErrors","_waitMessages","Map","_waitMessagesObserve","_globalCache","_remoteAgents","logger","updateRemoteAgentsFlag","isInitialized","xSrfToken","LogC","Debug","_userSubscribe","_webSocketSubscribe","_logErrorsSubscribe","Information","webSocketService","refreshGlobalCache","refreshUser","getUserObservable","subscribe","user","refreshHubs","initializeWebSocket","getWebSocketObservable","data","command","Disconnect","next","Connect","pingRemoteAgents","ActiveAgentUpdate","remoteAgents","activeAgent","remoteAgent","find","c","remoteAgentKey","existingIndex","findIndex","instanceId","push","name","RemoteAgentDelete","forEach","splice","RemoteAgentUpdateKey","index","RemoteAgentDeleteKey","HubUpdate","hub","setHubAccess","hubs","getValue","previousHub","hubKey","assign","sort","a","b","toLocaleLowerCase","HubDelete","hubKeys","indexOf","Task","task","addUpdateTask","FileDownload","downloadData","formBody","HubKey","SecurityToken","securityToken","FileReference","reference","downloadFile","fileName","contentType","reason","DownloadReady","startsWith","modalComponent","confirm","result","window","open","newWin","closed","asObservable","logMessage","headers","defaultHeaders","m","details","context","body","JSON","stringify","post","getApiUrl","withCredentials","event","element","target","link","getAttribute","endsWith","navigate","relativeTo","queryParams","preventDefault","parentElement","dexihHubUsers","permission","Owner","FullReader","ReadOnly","Public","pipe","toPromise","getWebSocketStatusObservable","getWebSocketConnectionId","key","undefined","apiUrl","prepareExternalUrl","waitMessage","cancelToken","postBody","messageKey","addWaitMessage","promise","reject","postRemoteGetKey","getRemoteData","removeWaitMessage","remoteAgentId","getBestDownloadUrl","downloadUrl","json","JsonNoNulls","responseType","parse","error","downloadUrl2","localStorage","setItem","reason2","httpError","formData","append","extra","baseUrl","downloadUrls","length","download","getRemoteUrl","getFromExternal","clientConnectionId","get","stack","confirmMessage","confirmDialog","FormData","reportProgress","request","type","UploadProgress","percentDone","round","loaded","total","Complete","columns","dtColumns","logicalName","dataType","DateTime","title","format","Boolean","Json","Xml","CharArray","Node","childColumns","constructDataTableColumns","inputPrompt","inputValue","prompt","information","returnData","blob","Blob","reader","FileReader","readAsText","onload","force","_refreshUserPromise","previousUser","isAdmin","userResult","loadScript","forceLogin","getGlobalCachePromise","googleSignIn","externalLogin","loginResult","identityLogin","Google","authenticationToken","cache","googleLoadScript","gapi","load","auth2","init","scope","client_id","googleClientId","login","isSignedIn","currentUser","profile","getBasicProfile","getEmail","getGivenName","getFamilyName","Eea","getAuthResponse","id_token","getLoginDetails","idToken","signIn","getAuthInstance","signOut","clientId","config","auth","authority","redirectUri","origin","cacheLocation","storeAuthStateInCookie","userAgentApplication","handleRedirectCallback","errorDesc","console","log","microsoftApp","microsoftClientId","getAccount","userNames","split","accountIdentifier","scopes","acquireTokenSilent","authResponse","accessToken","microsoftSignIn","Microsoft","tokenPromise","loginPopup","microsoftAuthResponseToLogin","account","logout","provider","src","isExternal","script","document","getElementById","newScript","createElement","async","head","appendChild","externalLoginCallback","href","postConfirm","verificationCode","connectionId","currentAgents","newAgents","newAgent","currentAgent","activeAgents","i","position","msg","issue","issueKey","getFromApi","comment","hubName","hubNames","join","remoteAgentKeys","postGetRaw","currentRoute","parent","outlet","routeSnapshot","snapshot","pageTitle","navigateSkip","root","breadcrumbs","childrenRoutes","children","segment","path","queryParamsHandling","maxTime","newGuid","set","setTimeout","has","errorMessage","addUpdateNotification","tasks","originalTask","taskId","replace","r","v","getGlobalCacheObservable","searchString","maxResults","reload","sharedItemsIndex","objectType","objectKey","agent","getItem","sharedItems","zipFiles","downloadFormat","flags","getActiveAgent","postRemote","filter","inputColumns","selectQuery","parameters","parentParameters","parameterName","resetCache","dashboardKey","dashboard","AddCsrfHeaderInterceptorService","token","getCookie","clone","handle","xsrfToken","setCookie","WebSocketService","_webSocketStatus","_webSocketMessages","startingWebSocket","hubConnected","_connectHubSubscription","hubConnection","stop","configureLogging","Trace","withUrl","build","on","remoteMessage","onclose","err","sendDisconnect","_connectionId","startWebSocket","state","Connected","start","sendConnect","disconnectMessage","invoke","ActionsApiButtonComponent","authService","hubService","pullRight","_hubCacheSubscription","getHubCacheObservable","hubCache","deleteApis","apis","api","createHub","item","cacheAddApi","filename","exportHub","isShared","shareItems","Api","activateApis","deactivateApis","selector","templateUrl","ActionsColumnValidationButtonComponent","isLoaded","dexihTables","tab","con","dexihConnections","connectionKey","dexihTableColumns","col","columnValidationKey","columnValidation","tableKey","columnKey","ActionsConnectionButtonComponent","hideEdit","eConnectionCategory","eConnectionPurpose","datalinks","datajobs","_subscription","hubPath","getHubUrl","connections","GetConnectionReference","connectionReference","dexihDatajobs","datajob","auditConnectionKey","dexihDatalinks","datalink","sourceDatalinkTable","sourceTableKey","table","getTable","dexihDatalinkTransforms","transform","joinDatalinkTable","sourceDatalinkKey","dexihDatalinkTargets","connection","cacheAddConnection","deleteConnections","ActionsDashboardButtonComponent","tables","deleteDashboards","dashboards","Dashboard","cacheAddDashboard","ActionsDatajobButtonComponent","showEdit","deleteDatajobs","truncate","resetIncremental","runDatajobs","datajobsString","cacheAddDatajob","activateDatajobs","deactivateDatajobs","ActionsDatalinkButtonComponent","relatedDatalinks","relatedDatajobs","targetTables","changes","dexihDatalinkSteps","step","datalinkKey","deleteDatalinks","Datalink","truncateTarget","runDatalinks","datalinkString","cancelDatalinks","setNewDatajob","navigateByUrl","datalinkKeys","cacheAddDatalink","downloadItems","Array","downloadObject","Csv","ActionsDatalinkTestButtonComponent","datalinkTests","dexihDatalinkTestSteps","deleteDatalinkTests","runDatalinkTests","runDatalinkTestSnapshot","datalinkTest","ActionsFileFormatButtonComponent","fileFormatKey","fileFormat","ActionsListOfValuesButtonComponent","ActionsTableButtonComponent","refreshTables","changedTables","datalinksSource","datalinksTarget","canWrite","getConnection","t","tableKeys","reImportTables","getTableKeys","tableNames","addHubSuccessMessage","emit","clearTables","createTables","getTables","deleteTables","getDbml","Table","cacheAddTable","ActionsViewButtonComponent","deleteViews","views","View","view","cacheAddView","ButtonsModule","imports","declarations","providers","CancelButtonComponent","formsService","ColumnValidationEditButtonComponent","ConnectionEditButtonComponent","CustomFunctionEditButtonComponent","DatalinkEditButtonComponent","DependentItemsButtonComponent","sharedObjectProperties","dependent","cacheAddObjectFromKey","NewConnectionButtonComponent","NewDatalinkButtonComponent","NewTableButtonComponent","SaveButtonComponent","TableEditButtonComponent","TagState","isChecked","TagsFilterButtonComponent","tags","dexihTags","tagStates","tag","tagChange","selectedTags","isIndeterminate","TagsUpdateButtonComponent","objectTypeName","updateTags","objectTags","dexihTagObjects","objects","d","matchingTags","tagKey","deleteTagObjects","saveTagObjects","ViewEditButtonComponent","FileFormatEditComponent","params","action","Loaded","hasChanged","addHubClientErrorMessage","_formChangeSubscription","addHubErrorMessage","dexihColumnValidations","dexihFileFormats","getCurrentFormObservable","form","controls","history","pushState","newUrl","pathname","navigateUp","close","FileFormatIndexComponent","eSharedObjectType","footer","_tableData","tableData","watchChanges","updateFileFormats","_hubCacheChangeSubscription","fileFormats","deleteFileFormats","description","updateDate","getObjectTags","FileFormat","items","cacheAddFileFormat","getHubCacheChangeObservable","hubCacheChange","changeClass","TagObjects","editFileFormat","styles","HubComponent","eCacheStatus","ePermission","openDelay","_webSocketSubscription","webSocketStatus","_remoteAgentSubscription","getRemoteAgentObservable","updateHub","HubFormsService","fb","_datalinkTargetChanges","_parameterChanges","_currentFormObservable","formErrors","formSaving","showAllErrors","IgnoreFormChange","ignoreHubCacheChange","formChangeCount","validationMessages","validationFieldMessages","clearFormSubscriptions","currentForm","_valueChangesSubscription","_connectionChangesSubscription1","_connectionChangesSubscription2","_connectionChangesSubscription3","_tableChangesSubscription1","_tableChangesSubscription2","_tableColumnChangesSubscription1","_tableColumnChangesSubscription2","_tableColumnChangesSubscription3","_datalinkChangesSubscription1","_datalinkChangesSubscription2","_datalinkChangesSubscription3","_datalinkTestChangesSubscription","_genericParameterSubscription","itemTemplate","excludeKeys","existingKeys","control","setValue","addControl","valueChanges","onValueChanged","getFormErrorMessages","markAsDirty","field","dirty","valid","messages","errors","createErrorMessage","minlength","actualLength","requiredLength","maxlength","maxvalue","required","minvalue","keyField","formGroupFunc","changeType","Replace","pristine","call","ngOnDestroy","Delete","saveAs","valueMethod","getRawValue","property","cacheProperty","promptDialog","displayName","currentStatus","entityStatus","previousStatus","runTime","saveMethod","import1","importAction","New","updateHubChange","addHubMessage","cacheGetMethod","getFormErrorsRecursive","depth","repeat","formArray","cont","formIndex","value1","value2","trim","toLowerCase","parameter","showRefresh","listOfValuesKey","isRefreshing","rank","valueDesc","group","disabled","minLength","maxLength","addMissing","subscription2","isArray","connectionForm","duplicateConnectionNameValidator","connectionString","validators","requiredConnectionFields","Connection","passwordDisplay","passwordRaw","connectionStringDisplay","connectionStringRaw","startForm","no","stringCompare","useConnectionString","server","setErrors","tableForm","duplicateTableNameValidator","defaultTableLogicalName","schema","array","validator","requiredTableFields","tableColumnsForm","column","tableColumn","useLogical","siblingColumns","columnForm","duplicateTableColumnNameValidator","precision","columnMinRangeValidator","columnMaxRangeValidator","scale","String","Double","Decimal","Single","impact","lineage","isString","isNumber","updateValueAndValidity","columnsArray","columnGroup","min","Number","max","fileFormatForm","duplicateFileFormatNameValidator","quote","viewForm","duplicateViewNameValidator","sourceType","validateViewSource","dexihViews","duplicateDashboardNameValidator","lock","dashboardItemsForm","dexihDashboardItems","dashboardItem","dexihDashboards","resizeEvent","viewKey","formParameters","currentParameters","clear","concat","currentParameter","newParameter","newFormParameter","listOfValues","staticData","listOfValuesItem","lovForm","duplicateLovNameValidator","ListOfValues","dexihListOfValues","apiForm","validateDatalinkTable","validation","validationForm","duplicateValidationNameValidator","ColumnValidation","customFunction","customFunctionForm","duplicateCustomFunctionNameValidator","dexihCustomFunctionParameters","customFunctionParametersFormGroup","CustomFunction","dexihCustomFunctions","parameterForm","hubVariable","hubVariableForm","duplicateHubVariableNameValidator","isEncrypted","HubVariable","dexihHubVariables","duplicateTagNameValidator","Tags","duplicateDatalinkTestNameValidator","testStepsForm","datalinkTestStep","DatalinkTest","dexihDatalinkTests","testTablesForm","dexihDatalinkTestTables","datalinkTestTable","removeAt","testTable","trigger","triggerForm","datajobForm","stepForm","duplicateStepNameValidator","dexihDatalinkDependencies","dep","datalinkDependencyFormGroup","dexihDatalinkStepColumns","datalinkStepColumnFormGroup","depForm","colForm","triggers","dexihTriggers","triggerFormGroup","stepsArray","duplicateDatajobNameValidator","requiredNotZero","failAction","datalinkStepFormGroup","Datajob","remoteAgentForm","duplicateDatalinkColumnNameValidator","datalinkTableColumn","transformForm","sourceDatalinkTableFormGroup","nodeDatalinkColumn","outputColumns","transformColumns","dexihDatalinkTransformItems","datalinkDatalinkTransformItemFormGroup","datalinkTransformForm","itemForm","dexihFunctionParameters","datalinkFunctionParametersFormGroup","targetDatalinkColumn","duplicateOutputColumn","functionClassName","functionMethodName","asyncValidators","invalidClassName","genericTypeCode","typeCode","isGeneric","p","param","arrayParams","arrayParameters","ap","aParam","datalinkTransformItemForm","transformItemType","BuiltInFunction","GetFunctionReference","func","datalinkColumn","datalinkFunctionArrayParametersFormGroup","inconsistentDataType","parameterDataType","profileForm","targetForm","setControl","datalinkTable","dexihDatalinkColumns","profiles","dexihDatalinkProfiles","datalinkProfileFormGroup","targets","datalinkTargetFormGroup","transforms","datalinkTransformFormGroup","datalinkForm","duplicateDatalinkNameValidator","updateStrategy","templateDatalink","updateTransformFormColumns","transformsArray","ioColumns","buildInputOutput","transformFormControl","datalinkTransform","datalinkTransformKey","transformItemForm","sourceDatalinkColumn","paramForm","targetsArray","eDatalinkObjectType","eObjectUse","ImpactLineage","objectUse","Sort","Sorted","Mapping","Mapped","Function","Join","Joined","PassThrough","PassThroughMap","Source","Target","mappingStatus","NotMapped","ImpactItems","newStatus","GetImpact","InputOutputColumns","nodeDatalinkColumnKey","childColumn","findColumn","returnCol","findNodeColumn","findParentColumns","validColumns","cols","newCol","findValidColumn","levelCount","returnColumns","newColumn","io","getAvailableColumns","apply","newPosition","newGroup","copyDatalinkColumn","isIncrementalUpdate","isInput","newColumns","newTable","deltaType","IgnoreField","transformItems","pos","nodeColumn","copyDatalinkColumns","Series","Column","groupNode","GroupNode","groupColumn","transformType","Lookup","joinColumns","joinNode","JoinNode","joinColumn","joinPos","joinDuplicateStrategy","MergeValidDates","ValidFromDate","ValidToDate","jc","Concatenate","joinTable","AggregatePair","ColumnPair","UnGroup","parameterIsOutput","arrayParam","passThroughColumns","node","targetColumns","ColumnUsageNode","datalinkTransformItem","flat","useNextTransform","impactTree","newMappingStatus","nextTransform","SourceTable","Transform","TargetTable","columnIsMapped","newImpactTree","createDatalinkImpact","inputParams","flattenParameters","parameterIsInput","inputParam","outParams","outParam","JoinPair","joinDatalinkColumn","isAutoGenerateColumn","AutoGenerate","MappedToNothing","PassThroughToNothing","isQuery","MappedToVirtual","PassThroughToVirtual","usePreviousTransform","lineageTree","currentColumn","previousTransform","transforms2","outputs","newLineageTree","createDatalinkLineage","inParam","returnValue","AutoIncrement","DbAutoIncrement","Version","PartitionKey","RowKey","CreateAuditKey","CreateDate","FileName","IsCurrentField","RejectedReason","SourceSurrogateKey","TimeStamp","UpdateAuditKey","UpdateDate","ValidationStatus","EntityStatus","isBusy","lastStatus","None","eSearchObjectType","SearchObjectTypes","All","TableColumn","SearchResult","object","objectParent","SharedObjectProperty","parentKey","parentType","cacheAddMethod","icon","routerLink","SharedObject","HubCacheChange","HubCache","_sequenceGenerator","purpose","Managed","itemType","dexihApis","to","connectionCopy","datalinkTestStepKey","test","testStep","minKey","maxPos","deltaTypeDetail","deltaTypes","unique","defaultName","allowDbNull","getNextSequence","addColumn","TrackingField","Int64","Int32","newConnection","j","search","searchObject","results","searchAll","searchItem","itemParent","found","dataTypeIsString","dataTypeIsDecimal","getParametersCache","ti","customFunctionKey","cacheAddCustomFunction","datalinkDup","getDatalinkCache","expectedConnectionKey","targetConnectionKey","sourceConnectionKey","testConnectionKey","lookupColumnKey","lookupColumn","getColumn","cacheAddListOfValues","lov","parentObject","parentItem","obj","label","sharedType","sharedObject","datajobKey","dup","getDatajobCache","datajobCopy","dupDatalink","datalinkCopy","datalinkTestKey","dupDatalinkTest","getDatalinkTestCache","datalinkTestCopy","getConnectionCopy","cacheAddColumnValidation","dupValidation","getColumnValidationCache","dupFunction","apiKey","hubVariableKey","variable","startDate","toLocaleDateString","startTime","endTime","daysOfWeek","intervalTime","maxRecurs","originalDatalink","copyDatalink","datalinkColumnKeys","datalinkTableKey","filterDatalinkColumn","datalinkTransformItemKey","direction","Input","hubPermission","Output","ResultOutput","ResultReturnValue","ReturnValue","ResultInput","DataCache","previewQuery","DexihInputParameter","sortDirections","Ascending","Descending","seriesGrains","Second","Minute","Hour","Day","Week","Month","Year","NaturalKey","NonTrackingField","FileRowNumber","FileDate","ResponseSuccess","ResponseData","ResponseStatus","ResponseSegment","DatabaseOperation","Url","securityFlags","FastEncrypt","FastDecrypt","FastEncrypted","StrongEncrypt","StrongDecrypt","StrongEncrypted","OneWayHash","OneWayHashed","Hide","loadStrategies","Bulk","Transaction","updateStrategies","Reload","Append","AppendUpdate","AppendUpdateDelete","AppendUpdatePreserve","AppendUpdateDeletePreserve","transformItemTypes","useSource","useTarget","useJoin","useFilter","FilterPair","transformFunctionTypes","Condition","Aggregate","Rows","Profile","Validate","JoinCondition","FailActions","Abend","Continue","ContinueNonDependent","InvalidActions","Pass","Clean","RejectClean","Reject","Discard","FunctionCache","NoCache","EnableCache","CallOnce","CleanActions","DefaultValue","Truncate","Blank","Null","OriginalValue","CleanValue","sourceTypes","FileProperties","runStatus","Initialised","Scheduled","Started","Running","RunningErrors","Finished","FinishedErrors","Abended","Cancelled","NotRunning","Passed","Failed","formatTypes","Text","importActions","Leave","Skip","eMappingStatus","lineageMappingStatuses","statusClass","impactMappingStatuses","ConnectionTables","PreviewResults","FlatFilesReady","DashboardUrl","HubModule","ngModule","UpdateQueries","downloadFormats","JsonCompact","compare","IsEqual","showFilter","GreaterThan","GreaterThanEqual","LessThan","LessThanEqual","NotEqual","IsIn","IsNotIn","IsNull","IsNotNull","Like","RemoteAgentStatus","activeDatajobs","activeDatalinks","activeApis","functionTypes","transformTypes","allowUserConfig","Filter","Group","Validation","Delta","TransformReference","TypeCodes","isNumeric","Binary","Int16","UInt16","UInt32","UInt64","Byte","SByte","Time","Guid","Geometry","eBasicType","TypeFunctions","Numeric","Any","columnIsString","columnIsDecimal","routes","component","redirectTo","pathMatch","loadChildren","HubBaseModule","Routing","forChild","HubService","_hubKey","_hubCache","NoHub","_hubMessages","_hubCacheChange","_transformWriterResultChange","_apiStatusChange","_remoteLibraries","_flatFiles","_remoteAgent","isResettingRemoteAgent","_refreshHubRunning","processWebSocketMessage","getHubsObservable","getRemoteAgentsObservable","globalCache","remoteLibraries","defaultRemoteLibraries","functions","resetRemoteAgent","getHubCache","filterLoaded","observable","converted","getHubMessages","newMessage","refreshHubCache","Loading","hubPost","filterActive","isRunning","dexihRemoteAgentHubs","setNoRemoteAgent","getRemoteAgentsPromise","isAuthorized","defaultAgents","isDefault","getRemoteAgentStatus","otherAgents","remoteAgentHubs","authorized","getRemoteLibrariesPromise","ref","connectionAssemblyName","connectionClassName","userConfig","u","functionAssemblyName","functionType","HubChange","hubChange","HubError","DatalinkProgress","addDatalinkProgress","DatalinkStatus","DatajobProgress","addDatajobProgress","DatalinkTestProgress","addDatalinkTestProgress","ApiStatus","apiData","addApiStatus","flatFiles","mergeChange","hubVariables","columnValidations","customFunctions","RemoteAgent","tagObjects","mergeChangeTagObjects","source","current","isHubCacheLoaded","writerResult","referenceKey","targetTableKey","addTableProgress","childResults","auditKey","LogMessage","getRemoteAgentCurrent","hubPostRemote","hubPostConfirm","remoteAgentHubKey","remoteAgentHub","remoteAgentPromise","globalCachePromise","hubPromise","getHubCachePromise","all","values","agentStatus","getTransformWriterResult","previousDatalinks","getTransformWriterTable","previousDatajobs","activeDatalinkTests","previousDatalinkTests","referentKey","datalinkResult","SearchForTable","child","emails","sendInvites","userIds","alertEmails","content","navigator","msSaveBlob","URL","createObjectURL","setAttribute","style","visibility","click","removeChild","importPackage","connectionNames","itemKeys","getRemoteResponse","save","importedTables","doImport","saveTables","hubPostRemoteConfirm","dropTables","names","getCurrentRemoteAgentId","sourceTableKeys","datalinkType","targetTableName","addSourceColumns","auditColumns","datalinkName","datalinkNames","resetIncrementalValue","inputParameters","datalinkTestKeys","auditType","connectionKeys","referenceKeys","childItems","rows","datajobKeys","viewNames","objectKeys","apiNames","apiKeys","showRejectedData","previewTableDataQuery","previewData","transformProperties","viewConfig","getData","previewUpdates","urls","Static","httpPromise","summaryOnly","profileTableName","downloadObjects","getProfileTable","downloadTableData","validations","validationNames","functionNames","testValues","fileFormatNames","testValue","variables","variableNames","itemNames","createDefaultDatajob","stepKey","newDatajob","managedConnections","flatFilePath","subdirectory","useCustomFilePaths","Incoming","fileIncomingPath","Processed","fileProcessedPath","Rejected","fileRejectedPath","Outgoing","fileOutgoingPath","fixTrailingSlash","defaultDatabase","fileRootPath","files","fileNames","fromFilePath","toFilePath","fromPath","toPath","filePath","postRemoteUpload","formatType","includeFileName","includeFileDate","includeFileRowNumber","HubSharedModule","ItemEditGuard","canDeactivate","SummaryComponent","noManagedConnection","filterString","datalinkFilterString","connectionFilterString","columnValidationFilterString","fileFormatFilterString","datajobFilterString","tableFilterString","TablePreviewDataComponent","eDataObjectType","ViewEditComponent","hasEdited","refreshDataSubject","eViewType","connectionTables","showChart","firstLoad","dialogOpen","animationValues","animationPaused","getConnectionTables","animateConfig","inputValues","viewType","Chart","getColumns","refresh","autoRefresh","_changesSubscription","reset","refreshDatalink","chartConfig","viewInputs","input","defaultValue","tableColumns","getDatalinkOutputColumns","baseData","viewParameters","datalinkParameterKey","datalinkParameters","datalinkParameter","previewView","seriesColumn","query","markAsChanged","$event","ViewIndexComponent","iconClass","tooltip","width","align","updateViews","sourceName","sourceTable","sourceDatalink","sharedIcon","sharedToolTip","editView","ApiStatusComponent","progressClick","eApiStatus","showCancel","_currentStatusSubscription","apiStatus","Activated","downloadUrlType","Proxy","downloadType","securityKey","testUrl","proxy","errorCount","statusIcon","val","selBox","left","top","opacity","focus","select","execCommand","ApiViewComponent","eSourceType","ColumnValidationViewComponent","ConnectionViewComponent","getRemoteLibrariesObservable","DashboardViewComponent","DatajobViewComponent","StatusInfo","DatalinkStatusComponent","eRunStatus","getStatus","dataObject","currentWriterResult","_previousStatusSubscription","statusInfo","percentage","statusType","lastRowTotal","rowsTotal","numberWithCommas","rowsReadPrimary","cancelDatalinkTests","informationDialog","DatalinkViewComponent","eDatalinkType","DatalinkTestViewComponent","FileFormatViewComponent","InputParametersViewComponent","onChange","onRefreshData","parentParams","requiresRefresh","_hubSubscription","userParameters","allowUserSelect","_refreshSubscription","refreshEvent","previewListOfValuesKey","InputParametersComponent","allowAddRemove","refreshLOV","insert","ListOfValuesViewComponent","PreviewDataComponent","allowViewSave","viewSource","previewDatalinkKeyData","previewTransformData","previewTableKeyData","previewTableData","downloadDatalinkData","saveView","RemoteAgentViewComponent","selectedAgent","isConnected","isSelected","lastLoginDateTime","TableColumnViewComponent","TableViewComponent","TransformPropertiesItemComponent","propertyKeys","properties","TransformPropertiesComponent","ViewViewComponent","WidgetsModule","HubsService","embedUserName","environment","ll","settings","remoteAgentSettings","logLevel","remoteApplicationSettings","RemoteApplicationSettings","AppComponent","viewContainerRef","setDialogDefaultContainer","modal","waitMessagesObservable","getWaitMessagesObservable","_waitMessagesSubscription","waitMessages","from","_routeEventsSubscription","events","loadingRouteKey","styleUrls","AppModule","provide","useClass","multi","bootstrap","canActivate","AdminModule","HubsModule","AuthModule","PublicModule","routing","forRoot","GlobalErrorHandler","injector","rejection","DexihHelpComponent","display","linkClick","_displayHelpSubscription","getDisplayHelp","displayHelp","matches","RegExp","match","setDisplayHelp","str","DexihHelpModule","AuthLayoutComponent","EmptyLayoutComponent","MainLayoutComponent","layoutService","collapsed","mobileViewActivated","sidebarState","mainState","_layoutSubscription","store","menuCollapsed","animations","FooterComponent","_globalCacheSubscription","date","buildDate","buildVersion","HeaderComponent","_notificationSubscription","getNotificationObservable","toastMessage","buttonName","delay","onButtonClick","toastClick","toasts","add","documentMethods","enter","exit","classList","contains","documentElement","method","remove","onCollapseMenu","onMenuToggle","onFullScreenToggle","logOut","HeaderModule","MessagesComponent","size","TasksComponent","tasksRunning","eManagedTaskStatus","eManagedTaskStatusItems","active","loading","activities","count","lastUpdate","getTasksObservable","_tasksSubscription","Created","Queued","alert","LayoutGuard","initialize","isLoggedIn","redirectUrl","LayoutModule","shortcutOpen","isMobile","userAgent","device","menuIsOpen","LayoutService","subject","resizeUpdate","complete","innerWidth","condition","HubsComponent","textClass","hubStatusMessage","hubCacheStatusSubscription","NotLoaded","manageHubs","LoginInfoComponent","userSubcription","MenuItemComponent","MenuParentComponent","expanded","toggle","height","NavigationComponent","hubCacheLoaded","objectCounts","ignoreClick","activeAgentCount","hideMenu","_hubCacheObserve","targetElement","clickedInside","sidebarElement","nativeElement","NavigationModule","RemoteAgentComponent","eDataPrivacyStatus","selectedRemoteAgent","activeHubAgents","setCurrentRemoteAgent","RibbonComponent","RibbonModule","RouteBreadcrumbsComponent","_eventSubscription","Breadcrumb","AnimateConfig","automatic","ApiData","successCount","ApplicationUser","concurrencyStamp","lockoutEnabled","lockoutEnd","normalizedEmail","passwordHash","phoneNumber","securityStamp","accessFailedCount","normalizedUserName","phoneNumberConfirmed","twoFactorEnabled","isRegistered","isEnabled","hubQuota","privateKey","certificateChain","certificateExpiry","AppSettingsSection","userPrompt","userToken","encryptionKey","webServer","autoUpgrade","allowPreReleases","autoStartPath","CacheManager","googleMapsAPIKey","cacheEncryptionKey","ChartConfig","labelColumn","pivotColumn","seriesColumns","xColumn","yColumn","minColumn","maxColumn","radiusColumn","latitudeColumn","longitudeColumn","chartType","eChartType","BarVertical","colorScheme","showGradient","showXAxis","showYAxis","showLegend","legendPosition","showXAxisLabel","showYAxisLabel","showGridLines","xAxisLabel","yAxisLabel","xScaleMax","xScaleMin","yScaleMax","yScaleMin","autoScale","explodeSlices","doughnut","separateAxis","barPadding","roundEdges","showDataLabel","singleBarColor","multiGridColumn","yAxisLabelRight","ClientMessage","eClientCommand","ConnectionAttribute","connectionCategory","databaseDescription","serverDescription","allowsConnectionString","allowsSql","allowsFlatFiles","allowsManagedConnection","allowsSourceConnection","allowsTargetConnection","allowsUserPassword","allowsWindowsAuth","requiresDatabase","requiresLocalStorage","serverHelp","allowsToken","defaultSchema","ConnectionReference","eMessageCommand","DataPack","DataPackColumn","eTypeCode","Unknown","DeleteQuery","filters","DexihActiveAgent","ipAddress","dataPrivacyStatus","upgradeAvailable","version","latestVersion","latestDownloadUrl","namingStandards","DexihApi","autoStart","cacheQueries","cacheResetInterval","logDirectory","createDate","DexihApiParameter","DexihBaseEntity","DexihColumnBase","isUnicode","eDeltaType","isUnique","isMandatory","securityFlag","eSecurityFlag","DexihColumnValidation","minValue","maxValue","patternMatch","regexMatch","listOfNotValues","lookupIsValid","lookupMultipleRecords","invalidAction","cleanAction","cleanValue","DexihConnection","useWindowsAuth","username","usePasswordVariable","useConnectionStringVariable","embedTableKey","connectionTimeout","commandTimeout","DexihCustomFunction","methodCode","resultCode","returnType","genericTypeDefault","DexihCustomFunctionParameter","allowNull","DexihDashboard","minRows","minCols","maxRows","maxCols","DexihDashboardItem","x","y","header","scrollable","DexihDashboardItemParameter","dashboardItemKey","DexihDashboardParameter","DexihDatajob","eFailAction","fileWatch","alertLevel","eAlertLevel","DexihDatajobParameter","DexihDatalink","sourceDatalinkTableKey","eUpdateStrategy","loadStrategy","eTransformWriterMethod","rowsPerCommit","rowsPerProgress","rollbackOnFail","addDefaultRow","DexihDatalinkColumn","DexihDatalinkDependency","datalinkStepKey","dependentDatalinkStepKey","DexihDatalinkParameter","DexihDatalinkProfile","detailedResults","DexihDatalinkStep","DexihDatalinkStepColumn","DexihDatalinkStepParameter","DexihDatalinkTable","rowsStartAt","rowsEndAt","rowsIncrement","disableVersioning","disablePushDown","DexihDatalinkTarget","DexihDatalinkTest","DexihDatalinkTestStep","targetSchema","expectedTableName","expectedSchema","errorConnectionKey","errorTableName","errorSchema","DexihDatalinkTestTable","sourceSchema","sourceTableName","testSchema","testTableName","DexihDatalinkTransform","joinDatalinkTableKey","joinSortDatalinkColumnKey","transformClassName","transformAssemblyName","eDuplicateStrategy","joinNotFoundStrategy","eJoinNotFoundStrategy","joinSortDatalinkColumn","maxInputRows","maxOutputRows","DexihDatalinkTransformItem","targetDatalinkColumnKey","sourceDatalinkColumnKey","joinDatalinkColumnKey","filterDatalinkColumnKey","sourceValue","joinValue","filterValue","functionCaching","eFunctionCaching","sortDirection","filterCompare","aggregate","seriesGrain","seriesFill","seriesStart","seriesFinish","functionCode","functionResultCode","onError","eErrorAction","onNull","Execute","notCondition","eInvalidAction","DexihFileFormat","matchHeaderRecord","skipHeaderRows","allowComments","bufferSize","delimiter","detectColumnCountChanges","hasHeaderRecord","ignoreHeaderWhiteSpace","ignoreReadingExceptions","ignoreQuotes","quoteAllFields","quoteNoFields","skipEmptyRecords","trimFields","trimHeaders","willThrowOnMissingField","setWhiteSpaceCellsToNull","DexihFunctionArrayParameter","functionParameterKey","datalinkColumnKey","DexihFunctionParameter","DexihFunctionParameterBase","DexihHub","eSharedAccess","DexihHubEntity","DexihHubKeyEntity","DexihHubNamedEntity","DexihHubUser","userId","receiveAlerts","DexihHubVariable","valueRaw","isEnvironmentVariable","DexihIssue","eIssueType","Other","category","eIssueCategory","severity","eIssueSeverity","Critical","gitHubLink","isPrivate","issueStatus","eIssueStatus","Open","dexihIssueComments","DexihIssueComment","DexihListOfValues","keyColumn","nameColumn","descriptionColumn","cacheSeconds","DexihParameterBase","DexihRemoteAgent","restrictIp","allowExternalConnect","ipAddresses","hashedToken","lastLoginIpAddress","DexihRemoteAgentHub","DexihTable","baseTableName","tableType","eTableType","sourceConnectionName","rejectedTableName","queryString","rowPath","sortColumnKeys","autoManageFiles","fileMatchPattern","restfulUri","maxImportLevels","isVersioned","fileSample","DexihTableColumn","DexihTag","color","DexihTagObject","DexihTrigger","cronExpression","DexihView","DexihViewParameter","DownloadData","transformSettings","DownloadObject","DownloadReadyBase","DownloadReadyMessage","DownloadUrl","eStatus","FileConfiguration","column1","compareDataType","column2","operator","eCompare","andOr","eAndOr","And","FlatFile","fileConfiguration","outputSortFields","FunctionParameter","isIndex","linkedName","linkedDescription","isLabel","isPassword","FunctionReference","resultMethodName","resetMethodName","importMethodName","genericType","isStandardFunction","returnParameters","outputParameters","resultReturnParameters","resultInputParameters","resultOutputParameters","HubUser","Import","warnings","ImportAction","ImportObject","InputColumn","InputParameter","InputParameterBase","InputParameters","InsertQuery","insertColumns","ListOfValuesItem","LoggingSection","includeScopes","LogLevelSection","logFilePath","LoginModel","system","microsoft","ManagedTask","originatorId","categoryKey","referenceId","counter","concurrentTaskAction","eConcurrentTaskAction","stepName","fileWatchers","nextTriggerTime","runCount","dependentTaskIds","dependenciesMet","ManagedTaskFileWatcher","isStarted","ManagedTaskProgressItem","ManagedTaskTrigger","endDate","intervalType","eIntervalType","Interval","daysOfMonth","weeksOfMonth","skipDates","NamingStandards","NetworkSection","externalDownloadUrl","localIpAddress","localPort","proxyUrl","downloadPort","enforceHttps","autoGenerateCertificate","dynamicDomain","certificateFilename","certificatePassword","enableUPnP","ParameterArray","ParameterColumn","ParameterJoinColumn","ParameterOutputColumn","Parameters","ParameterValue","PermissionsSection","allowLocalFiles","allowAllPaths","allowedPaths","allowAllHubs","allowedHubs","PluginsSection","mLNet","excel","oracle","dB2","mongo","PrivacySection","allowDataDownload","allowDataUpload","allowLanAccess","allowExternalAccess","allowProxy","QueryColumn","RegisterModel","eLoginProvider","Dexih","firstname","lastname","RemoteAgentProperties","RemoteAgentSettings","RemoteAgentSettingsSubset","allowDownload","allowUpload","autoSchedule","firstRun","preRelease","smtpServer","smtpUserName","smtpPassword","smtpPort","enableSsl","fromEmail","adminEmails","alertOnShutdown","alertOnCritical","requiresUpgrade","RemoteLibraries","RemoteMessage","messageId","timeOut","RemoteSettings","appSettings","systemSettings","SystemSettingsSection","logging","runtime","RuntimeSection","network","privacy","permissions","plugins","alerts","RenewSslCertificateModel","domain","ResponseMessage","configDirectory","appSettingsPath","externalIpAddress","defaultProxyUrl","userHash","generateUserToken","saveSettings","doUpgrade","SelectColumn","eAggregate","outputColumn","SelectQuery","tableName","sorts","groups","groupFilters","eFlatFilePath","SharedData","Sorts","maxAcknowledgeWait","responseTimeout","cancelDelay","encryptionIterations","maxPreviewDuration","maxConcurrentTasks","maxUploadSize","socketTransportType","defaultPreviewRows","maxPreviewRows","referenceTable","isParent","TableColumns","TransformAttribute","TransformPerformance","transformName","seconds","TransformProperties","primaryProperties","referenceProperties","TransformSettings","remoteSettings","TransformWriterOptions","TransformWriterResult","parentAuditKey","referenceName","lastMaxIncrementalValue","rowsPerProgressEvent","rowsCreated","rowsUpdated","rowsDeleted","rowsPreserved","rowsIgnored","rowsRejected","rowsFiltered","rowsSorted","rowsReadReference","passed","failed","readTicks","writeTicks","processingTicks","maxIncrementalValue","maxSurrogateKey","initializeTime","scheduledTime","lastUpdateTime","triggerMethod","eTriggerMethod","Manual","triggerInfo","performanceSummary","rejectTableName","isCurrent","isPrevious","isPreviousSuccess","isFinished","isScheduled","percentageComplete","UpdateQuery","updateColumns","UserModel","logins","roles","claims","ViewConfig","WebService","eAggregateItems","Sum","Average","Min","Max","Count","First","Last","eAlertLevelItems","Errors","eAndOrItems","Or","eApiStatusItems","Deactivated","eChartTypeItems","BarHorizontal","BarVertical2D","BarHorizontal2D","BarVerticalStacked","BarHorizontalStacked","BarVerticalNormalized","BarHorizontalNormalized","Pie","PieAdvanced","PieGrid","Line","Area","Polar","AreaStacked","AreaNormalized","Scatter","Bubble","ForceDirected","HeatMap","TreeMap","Cards","Gauge","LinearGauge","BarLineCombo","eCleanAction","eCleanActionItems","eClientCommandItems","DatajobStatus","TableProgress","ApiQuery","Command","eCompareItems","eConcurrentTaskActionItems","Parallel","Sequence","eConnectionCategoryItems","SqlDatabase","NoSqlDatabase","DatabaseFile","File","Hub","eConnectionPurposeItems","eDatalinkTypeItems","General","Stage","Deliver","Publish","Share","Query","eDataObjectTypeItems","DashboardItem","eDataPrivacyStatusItems","NotAllowed","Lan","Internet","eDayOfWeek","eDayOfWeekItems","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","eDeltaTypeItems","UpdateReason","eDownloadFormat","eDownloadFormatItems","eDownloadUrlType","eDownloadUrlTypeItems","Direct","eDuplicateStrategyItems","eEnvironment","eEnvironmentItems","Windows","Osx","Linux","eErrorActionItems","Ignore","eFailActionItems","eFlatFilePathItems","eFunctionCachingItems","eFunctionType","eFunctionTypeItems","eGenericType","eGenericTypeItems","eImportAction","eImportActionItems","eIntervalTypeItems","Once","Daily","Monthly","eInvalidActionItems","eIssueCategoryItems","Web","Saving","Security","eIssueSeverityItems","Major","Minor","Trivial","eIssueStatusItems","UnderReview","InProgress","Closed","eIssueTypeItems","Bug","Request","Question","Feedback","eJoinNotFoundStrategyItems","NullJoin","eLoginProviderItems","eLOVObjectType","eLOVObjectTypeItems","FileWatching","Completed","eMessageCommandItems","MessageResponse","RemoteAgentUpdate","RemoteMethod","eParameterDirection","eParameterDirectionItems","ePermissionItems","Suspended","PublishReader","eRunStatusItems","eSecurityFlagItems","eSeriesGrain","eSeriesGrainItems","eSharedAccessItems","Reader","eSharedObjectTypeItems","eSortDirection","eSortDirectionItems","eSourceTypeItems","eStatusItems","Ready","Imported","Updated","Added","eTableTypeItems","eTestTableAction","eTestTableActionItems","DropCreate","TruncateCopy","DropCreateCopy","eTransformItemType","eTransformItemTypeItems","eTransformType","eTransformTypeItems","Internal","eTransformWriterMethodItems","eTriggerMethodItems","NotTriggered","Schedule","FileWatcher","External","eTypeCodeItems","Char","Enum","eUpdateStrategyItems","eViewTypeItems","eWeekOfMonth","eWeekOfMonthItems","Third","Fourth","logLevelItems","Warning","SharedModule","colorSets","selectable","eInputFormat","inputFormats","SingleSeries","allowLabel","maxSeries","allowYSeries","allowMinMax","allowBubble","inverse","MultiSeries","ComboSeries","InverseSeries","Xy","XyMinMax","XyBubble","ChartTypes","charts","inputFormat","isHorizontal","allowGradient","allowLegend","allowXAxis","allowYAxis","allowXScaleMin","allowXScaleMax","allowYScaleMin","allowYScaleMax","allowLabels","allowExplodeSlices","allowDoughnut","allowGridLines","defaultShowXAxisLabel","defaultShowYAxisLabel","defaultShowXAxis","defaultShowYAxis","defaultShowGridLines","defaultColorScheme","defaultShowLegend","isBar","GeoCoordinates","ChartBuilderComponent","chartTypes","updateChartSubject","chartGroup","ngOnChanges","chart","svgElem","getElementsByTagName","getComputedStyle","getPropertyValue","replaceWith","clientHeight","clientWidth","canvas","toBlob","ChartViewComponent","responsive","gridColumnIndex","labelColumnIndex","seriesColumnIndex","seriesPivotIndex","seriesColumnsIndex","xColumnIndex","yColumnIndex","minColumnIndex","maxColumnIndex","radiusColumnIndex","latitudeColumnIndex","longitudeColumnIndex","customColors","colorIndex","getChartType","updateChartEvent","_updateChartSubscription","simpleChanges","getColumnIndex","updateChart","newWidth","newHeight","seriesLabel","changeColor","colorSet","colors","setLabel","chartItems","gridSeriesValues","singleColor","chartItem","singleSeries","multiSeries","inverseSeries","formatValue","series","latitude","longitude","addCustomColor","resultArray","Set","gridValues","chartData","setSeriesLabel","pivotValues","uniqueValues","seriesCount","pivotData","pivotIndex","pivotValue","seriesData","row","labels","labelValues","seriesIndex","seriesValue","pivotItem","valuesSet","columnIndex","ChartBuilderModule","ComboChartComponent","curve","legend","legendTitle","tooltipDisabled","activeEntries","roundDomains","colorSchemeLine","noBarWhenZero","activate","deactivate","margin","xAxisHeight","yAxisWidth","scaleType","yOrientLeft","yOrientRight","legendSpacing","dims","margins","xAxis","yAxis","showXLabel","showYLabel","legendType","schemeType","xScale","getXScale","yScale","getYScale","lineChart","xDomainLine","getXDomainLine","filteredDomain","yDomainLine","getYDomainLine","scaleLines","seriesDomain","getSeriesDomain","setColors","legendOptions","getLegendOptions","xOffset","entry","entries","hoveredVertical","deactivateAll","xScaleLine","getXScaleLine","yScaleLine","getYScaleLine","combinedSeries","slice","num","isDate","includes","getScaleType","xSet","yRightAxisScaleFactor","minMax","bandwidth","offset","floor","range","nice","xDomain","getXDomain","spacing","paddingInner","yDomain","getYDomain","yLeftAxisScaleFactor","scheme","colorsLine","opts","update","idx","onClick","onActivate","onDeactivate","updateLineWidth","encapsulation","ComboSeriesVerticalComponent","dataLabelHeightChanged","barsForDataLabels","d0","reduce","sum","bars","formattedLabel","bar","abs","offset0","offset1","toFixed","getColor","gradientStops","getLinearGradientStops","tooltipLabel","ariaLabel","toLocaleString","seriesName","tooltipText","dataLabelFormatting","updateDataLabels","section","totalPositive","totalNegative","template","changeDetection","OnPush","GoogleMapComponent","addMapsScript","loadMapsData","googleMapsUrl","querySelectorAll","mapProp","center","google","maps","LatLng","zoom","mapTypeId","MapTypeId","ROADMAP","bounds","LatLngBounds","latLong","lat","lng","marker","Marker","animation","Animation","DROP","extend","fitBounds","DexihFormControlsModule","DexihFormErrorsModule","requiredValue","ControlError","childControlErrors","DexihInvalidFormDetailsComponent","showErrors","controlErrors","statusChanges","invalid","getFormErrors","parentControlError","controlError","setError","parentControl","getFunctionType","DexihInvalidFormIconComponent","pageLoaded","DexihMessageComponent","isHidden","messageString","addMessage","DexihMessageModule","DownloadButtonComponent","autoCompact","EncryptionStatusIconComponent","DexihIconsModule","PrintButtonComponent","printContents","popupWin","innerHTML","write","print","PrivacyStatusButtonComponent","QueryBuilderComponent","allRows","typeCodes","selectColumns","sortColumns","onChanged","savedRowCount","QueryBuilderModule","SeriesAnimateComponent","showFrame","dataChange","initializeAnimation","animationStop","animationSeriesValues","animationRowIndex","animationPlay","animationFilter","animationColumnIndex","animationValue","first","animationTimer","setInterval","clearInterval","SeriesAnimateModule","previewListOfValues","PreviewDashboardItemComponent","isMaximized","onMaximize","maximize","PreviewDashboardComponent","getSharedDataIndex","dexihMessage","getDashboard","setOptions","options","gridType","ScrollVertical","compactType","outerMargin","outerMarginTop","outerMarginRight","outerMarginBottom","outerMarginLeft","useTransformPositioning","mobileBreakpoint","maxItemCols","minItemCols","maxItemRows","minItemRows","maxItemArea","minItemArea","defaultItemCols","defaultItemRows","fixedColWidth","fixedRowHeight","keepFixedHeightInMobile","keepFixedWidthInMobile","scrollSensitivity","scrollSpeed","enableEmptyCellClick","enableEmptyCellContextMenu","enableEmptyCellDrop","enableEmptyCellDrag","emptyCellDragMaxCols","emptyCellDragMaxRows","ignoreMarginInRow","draggable","enabled","resizable","swap","pushItems","disablePushOnDrag","disablePushOnResize","pushDirections","north","east","south","west","pushResizeItems","displayGrid","disableWindowResize","disableWarnings","scrollToNewItems","itemChangeCallback","itemComponent","itemResize","itemResizeCallback","itemInitCallback","maximizedIndex","showToolbar","updateQueryParameters","getSharedDataObject","paramValues","searchParams","URLSearchParams","newRelativePathQuery","sharedData","PreviewComponent","embed","SharedDataModule","SharedDataComponent","dataIndex","searchForm","updateSearch","_searchSubscription","addErrorMessage","embedLink","embedFrame","scrollTop","addSuccessMessage","SupportOptionsComponent","isExpanded","supportOptions","DexihSupportOptionsModule","AllFilterPipe","moment","CalendarPipe","calendar","CountdownComponent","_changeDetector","_timing","_stopTimer","delta","_interval","detectChanges","_time","getTime","_startTimer","parseInt","days","hours","minutes","DragZoneDirective","dragStart","dataTransfer","setData","zone","DropZoneDirective","requireFiles","dropAllowedClass","dropNotAllowedClass","dropFiles","dragFilesOver","dragLeave","dragInvalid","dropData","isMouseOver","isDropAllowed","stopPropagation","dropAllowed","dropEffect","types","getZone","zones","z","dragClass","_elementClass","EqualFilterPipe","it","FieldFilterPipe","Functions","language","languages","locale","getLanguage","constructor","setTime","protocol","sameSite","cookie","toUTCString","parts","pop","shift","GtFilterPipe","IsValidFilterPipe","MaxItemsFilterPipe","SortDescPipe","SortPipe","TimeDirective","UtilsModule","production","eLogLevel","LogFactory","toISOString","debug","formatMessage","warn","info","Log","bootstrapModule"],"mappings":"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CAACxqB,IAAL,CAAUG,IAAV,CAAe,IAAf;;AACA,oBAAI,CAACqqB,YAAL,GAAoB,KAApB;AACH,WAND;AAOH;;;;SAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;QAEamc,mB,GAAb;AAAA;;AACW,WAAA1gC,GAAA,GAAM,CAAN;AACA,WAAAhF,IAAA,GAAe,IAAf;AACA,WAAAuiB,WAAA,GAAsB,IAAtB;AACA,WAAAznB,KAAA,GAAQ,IAAR;AACV,K,EAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEO,QAAM6qC,cAAc,GAAG,CAC1B;AAAC3gC,SAAG,EAAE,qEAAe4gC,SAArB;AAAgC5lC,UAAI,EAAE;AAAtC,KAD0B,EAE1B;AAACgF,SAAG,EAAE,qEAAe6gC,UAArB;AAAiC7lC,UAAI,EAAE;AAAvC,KAF0B,CAAvB,C,CAKP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,QAAM8lC,YAAY,GAAG,CACxB;AAAC9gC,SAAG,EAAE,mEAAa+gC,MAAnB;AAA2B/lC,UAAI,EAAE;AAAjC,KADwB,EAExB;AAACgF,SAAG,EAAE,mEAAaghC,MAAnB;AAA2BhmC,UAAI,EAAE;AAAjC,KAFwB,EAGxB;AAACgF,SAAG,EAAE,mEAAaihC,IAAnB;AAAyBjmC,UAAI,EAAE;AAA/B,KAHwB,EAIxB;AAACgF,SAAG,EAAE,mEAAakhC,GAAnB;AAAwBlmC,UAAI,EAAE;AAA9B,KAJwB,EAKxB;AAACgF,SAAG,EAAE,mEAAamhC,IAAnB;AAAyBnmC,UAAI,EAAE;AAA/B,KALwB,EAMxB;AAACgF,SAAG,EAAE,mEAAaohC,KAAnB;AAA0BpmC,UAAI,EAAE;AAAhC,KANwB,EAOxB;AAACgF,SAAG,EAAE,mEAAaqhC,IAAnB;AAAyBrmC,UAAI,EAAE;AAA/B,KAPwB,EAQxB;AAACgF,SAAG,EAAE,mEAAa+nB,MAAnB;AAA2B/sB,UAAI,EAAE;AAAjC,KARwB,CAArB,C,CAWP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,QAAMwgC,UAAU,GAAG,CACtB;AAACx7B,SAAG,EAAE,iEAAWk5B,kBAAjB;AAAqCl+B,UAAI,EAAE,sBAA3C;AAAmEsI,cAAQ,EAAE,gEAAUy4B,KAAvF;AAA8FL,iBAAW,EAAE,UAA3G;AAAuHD,YAAM,EAAE;AAA/H,KADsB,EAEtB;AAACz7B,SAAG,EAAE,iEAAWq1B,aAAjB;AAAgCr6B,UAAI,EAAE,iBAAtC;AAAyDsI,cAAQ,EAAE,gEAAUC,QAA7E;AAAuFm4B,iBAAW,EAAE,eAApG;AAAqHD,YAAM,EAAE;AAA7H,KAFsB,EAGtB;AAACz7B,SAAG,EAAE,iEAAWs1B,WAAjB;AAA8Bt6B,UAAI,EAAE,eAApC;AAAqDsI,cAAQ,EAAE,gEAAUC,QAAzE;AAAmFm4B,iBAAW,EAAE,aAAhG;AAA+GD,YAAM,EAAE;AAAvH,KAHsB,EAItB;AAACz7B,SAAG,EAAE,iEAAW84B,UAAjB;AAA6B99B,UAAI,EAAE,aAAnC;AAAkDsI,cAAQ,EAAE,gEAAUC,QAAtE;AAAgFm4B,iBAAW,EAAE,YAA7F;AAA2GD,YAAM,EAAE;AAAnH,KAJsB,EAKtB;AAACz7B,SAAG,EAAE,iEAAWq5B,UAAjB;AAA6Br+B,UAAI,EAAE,aAAnC;AAAkDsI,cAAQ,EAAE,gEAAUC,QAAtE;AAAgFm4B,iBAAW,EAAE,YAA7F;AAA2GD,YAAM,EAAE;AAAnH,KALsB,EAMtB;AAACz7B,SAAG,EAAE,iEAAW64B,cAAjB;AAAiC79B,UAAI,EAAE,kBAAvC;AAA2DsI,cAAQ,EAAE,gEAAUy4B,KAA/E;AAAsFL,iBAAW,EAAE,gBAAnG;AAAqHD,YAAM,EAAE;AAA7H,KANsB,EAOtB;AAACz7B,SAAG,EAAE,iEAAWo5B,cAAjB;AAAiCp+B,UAAI,EAAE,kBAAvC;AAA2DsI,cAAQ,EAAE,gEAAUy4B,KAA/E;AAAsFL,iBAAW,EAAE,gBAAnG;AAAqHD,YAAM,EAAE;AAA7H,KAPsB,EAQtB;AAACz7B,SAAG,EAAE,iEAAWg5B,cAAjB;AAAiCh+B,UAAI,EAAE,kBAAvC;AAA2DsI,cAAQ,EAAE,gEAAUI,OAA/E;AAAwFg4B,iBAAW,EAAE,WAArG;AAAkHD,YAAM,EAAE;AAA1H,KARsB,EAStB;AAACz7B,SAAG,EAAE,iEAAW04B,OAAjB;AAA0B19B,UAAI,EAAE,gBAAhC;AAAkDsI,cAAQ,EAAE,gEAAUI,OAAtE;AAA+Eg4B,iBAAW,EAAE,SAA5F;AAAuGD,YAAM,EAAE;AAA/G,KATsB,EAUtB;AAACz7B,SAAG,EAAE,iEAAWshC,UAAjB;AAA6BtmC,UAAI,EAAE,aAAnC;AAAkDsI,cAAQ,EAAE,IAA5D;AAAkEo4B,iBAAW,EAAE,IAA/E;AAAqFD,YAAM,EAAE;AAA7F,KAVsB,EAWtB;AAACz7B,SAAG,EAAE,iEAAW87B,aAAjB;AAAgC9gC,UAAI,EAAE,gBAAtC;AAAwDsI,cAAQ,EAAE,IAAlE;AAAwEo4B,iBAAW,EAAE,IAArF;AAA2FD,YAAM,EAAE;AAAnG,KAXsB,EAYtB;AAACz7B,SAAG,EAAE,iEAAWuhC,gBAAjB;AAAmCvmC,UAAI,EAAE,oBAAzC;AAA+DsI,cAAQ,EAAE,IAAzE;AAA+Eo4B,iBAAW,EAAE,IAA5F;AAAkGD,YAAM,EAAE;AAA1G,KAZsB,EAatB;AAACz7B,SAAG,EAAE,iEAAWk0B,WAAjB;AAA8Bl5B,UAAI,EAAE,eAApC;AAAqDsI,cAAQ,EAAE,IAA/D;AAAqEo4B,iBAAW,EAAE,IAAlF;AAAwFD,YAAM,EAAE;AAAhG,KAbsB,EActB;AAACz7B,SAAG,EAAE,iEAAWi5B,cAAjB;AAAiCj+B,UAAI,EAAE,eAAvC;AAAwDsI,cAAQ,EAAE,gEAAU6jB,MAA5E;AAAoFuU,iBAAW,EAAE,cAAjG;AAAiHD,YAAM,EAAE;AAAzH,KAdsB,EAetB;AAACz7B,SAAG,EAAE,iEAAW+4B,QAAjB;AAA2B/9B,UAAI,EAAE,WAAjC;AAA8CsI,cAAQ,EAAE,gEAAU6jB,MAAlE;AAA0EuU,iBAAW,EAAE,UAAvF;AAAmGD,YAAM,EAAE;AAA3G,KAfsB,EAgBtB;AAACz7B,SAAG,EAAE,iEAAWwhC,aAAjB;AAAgCxmC,UAAI,EAAE,iBAAtC;AAAyDsI,cAAQ,EAAE,gEAAUy4B,KAA7E;AAAoFL,iBAAW,EAAE,eAAjG;AAAkHD,YAAM,EAAE;AAA1H,KAhBsB,EAiBtB;AAACz7B,SAAG,EAAE,iEAAWyhC,QAAjB;AAA2BzmC,UAAI,EAAE,oBAAjC;AAAuDsI,cAAQ,EAAE,gEAAUy4B,KAA3E;AAAkFL,iBAAW,EAAE,UAA/F;AAA2GD,YAAM,EAAE;AAAnH,KAjBsB,EAkBtB;AAACz7B,SAAG,EAAE,iEAAW44B,MAAjB;AAAyB59B,UAAI,EAAE,sBAA/B;AAAuDsI,cAAQ,EAAE,IAAjE;AAAuEo4B,iBAAW,EAAE,IAApF;AAA0FD,YAAM,EAAE;AAAlG,KAlBsB,EAmBtB;AAACz7B,SAAG,EAAE,iEAAW24B,YAAjB;AAA+B39B,UAAI,EAAE,2BAArC;AAAkEsI,cAAQ,EAAE,IAA5E;AAAkFo4B,iBAAW,EAAE,IAA/F;AAAqGD,YAAM,EAAE;AAA7G,KAnBsB,EAoBtB;AAACz7B,SAAG,EAAE,iEAAWm5B,SAAjB;AAA4Bn+B,UAAI,EAAE,gBAAlC;AAAoDsI,cAAQ,EAAE,IAA9D;AAAoEo4B,iBAAW,EAAE,IAAjF;AAAuFD,YAAM,EAAE;AAA/F,KApBsB,EAqBtB;AAACz7B,SAAG,EAAE,iEAAWw4B,aAAjB;AAAgCx9B,UAAI,EAAE,gBAAtC;AAAwDsI,cAAQ,EAAE,gEAAUy4B,KAA5E;AAAmFL,iBAAW,EAAE,IAAhG;AAAsGD,YAAM,EAAE;AAA9G,KArBsB,EAsBtB;AAACz7B,SAAG,EAAE,iEAAWy4B,eAAjB;AAAkCz9B,UAAI,EAAE,yBAAxC;AAAmEsI,cAAQ,EAAE,gEAAUy4B,KAAvF;AAA8FL,iBAAW,EAAE,IAA3G;AAAiHD,YAAM,EAAE;AAAzH,KAtBsB,EAuBtB;AAACz7B,SAAG,EAAE,iEAAW0hC,eAAjB;AAAkC1mC,UAAI,EAAE,kBAAxC;AAA4DsI,cAAQ,EAAE,gEAAU6jB,MAAhF;AAAwFuU,iBAAW,EAAE,iBAArG;AAAwHD,YAAM,EAAE;AAAhI,KAvBsB,EAwBtB;AAACz7B,SAAG,EAAE,iEAAW2hC,YAAjB;AAA+B3mC,UAAI,EAAE,eAArC;AAAsDsI,cAAQ,EAAE,gEAAU6jB,MAA1E;AAAkFuU,iBAAW,EAAE,cAA/F;AAA+GD,YAAM,EAAE;AAAvH,KAxBsB,EAyBtB;AAACz7B,SAAG,EAAE,iEAAW4hC,cAAjB;AAAiC5mC,UAAI,EAAE,iBAAvC;AAA0DsI,cAAQ,EAAE,gEAAU6jB,MAA9E;AAAsFuU,iBAAW,EAAE,gBAAnG;AAAqHD,YAAM,EAAE;AAA7H,KAzBsB,EA0BtB;AAACz7B,SAAG,EAAE,iEAAW6hC,eAAjB;AAAkC7mC,UAAI,EAAE,kBAAxC;AAA4DsI,cAAQ,EAAE,gEAAU6jB,MAAhF;AAAwFuU,iBAAW,EAAE,IAArG;AAA2GD,YAAM,EAAE;AAAnH,KA1BsB,EA2BtB;AAACz7B,SAAG,EAAE,iEAAW8hC,iBAAjB;AAAoC9mC,UAAI,EAAE,oBAA1C;AAAgEsI,cAAQ,EAAE,gEAAU6jB,MAApF;AAA4FuU,iBAAW,EAAE,IAAzG;AAA+GD,YAAM,EAAE;AAAvH,KA3BsB,EA4BtB;AAACz7B,SAAG,EAAE,iEAAWlN,KAAjB;AAAwBkI,UAAI,EAAE,OAA9B;AAAuCsI,cAAQ,EAAE,gEAAU6jB,MAA3D;AAAmEuU,iBAAW,EAAE,IAAhF;AAAsFD,YAAM,EAAE;AAA9F,KA5BsB,EA6BtB;AAACz7B,SAAG,EAAE,iEAAW+hC,GAAjB;AAAsB/mC,UAAI,EAAE,KAA5B;AAAmCsI,cAAQ,EAAE,gEAAU6jB,MAAvD;AAA+DuU,iBAAW,EAAE,IAA5E;AAAkFD,YAAM,EAAE;AAA1F,KA7BsB,EA8BtB;AAACz7B,SAAG,EAAE,iEAAWs5B,gBAAjB;AAAmCt+B,UAAI,EAAE,mBAAzC;AACIsI,cAAQ,EAAE,gEAAU6jB,MADxB;AACgCuU,iBAAW,EAAE,kBAD7C;AACiED,YAAM,EAAE;AADzE,KA9BsB,CAAnB,C,CAkCP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,QAAMuG,aAAa,GAAG,CACzB;AAAChiC,SAAG,EAAE,oEAAc05B,IAApB;AAA0B1+B,UAAI,EAAE;AAAhC,KADyB,EAEzB;AAACgF,SAAG,EAAE,oEAAciiC,WAApB;AAAiCjnC,UAAI,EAAE;AAAvC,KAFyB,EAGzB;AAACgF,SAAG,EAAE,oEAAckiC,WAApB;AAAiClnC,UAAI,EAAE;AAAvC,KAHyB,EAIzB;AAACgF,SAAG,EAAE,oEAAcmiC,aAApB;AAAmCnnC,UAAI,EAAE;AAAzC,KAJyB,EAKzB;AAACgF,SAAG,EAAE,oEAAcoiC,aAApB;AAAmCpnC,UAAI,EAAE;AAAzC,KALyB,EAMzB;AAACgF,SAAG,EAAE,oEAAcqiC,aAApB;AAAmCrnC,UAAI,EAAE;AAAzC,KANyB,EAOzB;AAACgF,SAAG,EAAE,oEAAcsiC,eAApB;AAAqCtnC,UAAI,EAAE;AAA3C,KAPyB,EAQzB;AAACgF,SAAG,EAAE,oEAAcuiC,UAApB;AAAgCvnC,UAAI,EAAE;AAAtC,KARyB,EASzB;AAACgF,SAAG,EAAE,oEAAcwiC,YAApB;AAAkCxnC,UAAI,EAAE;AAAxC,KATyB,EAUzB;AAACgF,SAAG,EAAE,oEAAcyiC,IAApB;AAA0BznC,UAAI,EAAE;AAAhC,KAVyB,CAAtB,C,CAaP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEO,QAAM0nC,cAAc,GAAG,CAC1B;AAAC1iC,SAAG,EAAE,6EAAuB2iC,IAA7B;AAAmCplB,iBAAW,EAAE;AAAhD,KAD0B,EAE1B;AAACvd,SAAG,EAAE,6EAAuB4iC,WAA7B;AAA0CrlB,iBAAW,EAAE;AAAvD,KAF0B,CAAvB,C,CAKP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,QAAMslB,gBAAgB,GAAG,CAC5B;AAAC7iC,SAAG,EAAE,sEAAgB8iC,MAAtB;AAA8BvlB,iBAAW,EAAE;AAA3C,KAD4B,EAE5B;AAACvd,SAAG,EAAE,sEAAgB+iC,MAAtB;AAA8BxlB,iBAAW,EAAE;AAA3C,KAF4B,EAG5B;AAACvd,SAAG,EAAE,sEAAgBgjC,YAAtB;AAAoCzlB,iBAAW,EAAE;AAAjD,KAH4B,EAI5B;AAACvd,SAAG,EAAE,sEAAgBijC,kBAAtB;AAA0C1lB,iBAAW,EAAE;AAAvD,KAJ4B,EAK5B;AAACvd,SAAG,EAAE,sEAAgBkjC,oBAAtB;AAA4C3lB,iBAAW,EAAE;AAAzD,KAL4B,EAM5B;AAACvd,SAAG,EAAE,sEAAgBmjC,0BAAtB;AAAkD5lB,iBAAW,EAAE;AAA/D,KAN4B,CAAzB,C,CASP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,QAAM6lB,kBAAkB,GAAG,CAC9B;AACA;AAACpjC,SAAG,EAAE,yEAAmBmvB,eAAzB;AAA0Cn0B,UAAI,EAAE,mBAAhD;AAAqEqoC,eAAS,EAAE,KAAhF;AAAuFC,eAAS,EAAE,KAAlG;AAAyGC,aAAO,EAAE,KAAlH;AAAyHC,eAAS,EAAE;AAApI,KAF8B,EAG9B;AACA;AAACxjC,SAAG,EAAE,yEAAmB0qB,cAAzB;AAAyC1vB,UAAI,EAAE,iBAA/C;AAAkEqoC,eAAS,EAAE,KAA7E;AAAoFC,eAAS,EAAE,KAA/F;AAAsGC,aAAO,EAAE,KAA/G;AAAsHC,eAAS,EAAE;AAAjI,KAJ8B,EAK9B;AAACxjC,SAAG,EAAE,yEAAmB21B,UAAzB;AAAqC36B,UAAI,EAAE,SAA3C;AAAsDqoC,eAAS,EAAE,IAAjE;AAAuEC,eAAS,EAAE,IAAlF;AAAwFC,aAAO,EAAE,KAAjG;AAAwGC,eAAS,EAAE;AAAnH,KAL8B,EAM9B;AAACxjC,SAAG,EAAE,yEAAmBq3B,QAAzB;AAAmCr8B,UAAI,EAAE,MAAzC;AAAiDqoC,eAAS,EAAE,IAA5D;AAAkEC,eAAS,EAAE,KAA7E;AAAoFC,aAAO,EAAE,IAA7F;AAAmGC,eAAS,EAAE;AAA9G,KAN8B,EAO9B;AAACxjC,SAAG,EAAE,yEAAmByjC,UAAzB;AAAqCzoC,UAAI,EAAE,QAA3C;AAAqDqoC,eAAS,EAAE,IAAhE;AAAsEC,eAAS,EAAE,IAAjF;AAAuFC,aAAO,EAAE,KAAhG;AAAuGC,eAAS,EAAE;AAAlH,KAP8B,EAQ9B;AAACxjC,SAAG,EAAE,yEAAmB01B,aAAzB;AAAwC16B,UAAI,EAAE,WAA9C;AAA2DqoC,eAAS,EAAE,IAAtE;AAA4EC,eAAS,EAAE,IAAvF;AAA6FC,aAAO,EAAE,KAAtG;AAA6GC,eAAS,EAAE;AAAxH,KAR8B,EAS9B;AAACxjC,SAAG,EAAE,yEAAmBu0B,MAAzB;AAAiCv5B,UAAI,EAAE,QAAvC;AAAiDqoC,eAAS,EAAE,IAA5D;AAAkEC,eAAS,EAAE,KAA7E;AAAoFC,aAAO,EAAE,KAA7F;AAAoGC,eAAS,EAAE;AAA/G,KAT8B,EAU9B;AAACxjC,SAAG,EAAE,yEAAmByxB,IAAzB;AAA+Bz2B,UAAI,EAAE,SAArC;AAAgDqoC,eAAS,EAAE,IAA3D;AAAiEC,eAAS,EAAE,KAA5E;AAAmFC,aAAO,EAAE,KAA5F;AAAmGC,eAAS,EAAE;AAA9G,KAV8B,EAW9B;AAACxjC,SAAG,EAAE,yEAAmBw0B,MAAzB;AAAiCx5B,UAAI,EAAE,UAAvC;AAAmDqoC,eAAS,EAAE,IAA9D;AAAoEC,eAAS,EAAE,KAA/E;AAAsFC,aAAO,EAAE,KAA/F;AAAsGC,eAAS,EAAE;AAAjH,KAX8B,EAY9B;AAACxjC,SAAG,EAAE,yEAAmBg1B,QAAzB;AAAmCh6B,UAAI,EAAE,WAAzC;AAAsDqoC,eAAS,EAAE,IAAjE;AAAuEC,eAAS,EAAE,KAAlF;AAAyFC,aAAO,EAAE,IAAlG;AAAwGC,eAAS,EAAE;AAAnH,KAZ8B,EAa9B;AAACxjC,SAAG,EAAE,yEAAmB00B,SAAzB;AAAoC15B,UAAI,EAAE,YAA1C;AAAwDqoC,eAAS,EAAE,IAAnE;AAAyEC,eAAS,EAAE,KAApF;AAA2FC,aAAO,EAAE,KAApG;AAA2GC,eAAS,EAAE;AAAtH,KAb8B,EAc9B;AAACxjC,SAAG,EAAE,yEAAmB8D,IAAzB;AAA+B9I,UAAI,EAAE,MAArC;AAA6CqoC,eAAS,EAAE,IAAxD;AAA8DC,eAAS,EAAE,KAAzE;AAAgFC,aAAO,EAAE,KAAzF;AAAgGC,eAAS,EAAE;AAA3G,KAd8B,EAe9B;AAACxjC,SAAG,EAAE,yEAAmB41B,OAAzB;AAAkC56B,UAAI,EAAE,UAAxC;AAAoDqoC,eAAS,EAAE,IAA/D;AAAqEC,eAAS,EAAE,KAAhF;AAAuFC,aAAO,EAAE,KAAhG;AAAuGC,eAAS,EAAE;AAAlH,KAf8B,CAA3B,C,CAkBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,QAAME,sBAAsB,GAAG,CAClC;AAAC1jC,SAAG,EAAE,oEAAc2jC,SAApB;AAA+B3oC,UAAI,EAAE;AAArC,KADkC,EAElC;AAACgF,SAAG,EAAE,oEAAcxH,GAApB;AAAyBwC,UAAI,EAAE;AAA/B,KAFkC,EAGlC;AAACgF,SAAG,EAAE,oEAAc4jC,SAApB;AAA+B5oC,UAAI,EAAE;AAArC,KAHkC,EAIlC;AAACgF,SAAG,EAAE,oEAAc6jC,IAApB;AAA0B7oC,UAAI,EAAE;AAAhC,KAJkC,EAKlC;AAACgF,SAAG,EAAE,oEAAc8jC,OAApB;AAA6B9oC,UAAI,EAAE;AAAnC,KALkC,EAMlC;AAACgF,SAAG,EAAE,oEAAc+jC,QAApB;AAA8B/oC,UAAI,EAAE;AAApC,KANkC,EAOlC;AAACgF,SAAG,EAAE,oEAAcgkC,aAApB;AAAmChpC,UAAI,EAAE;AAAzC,KAPkC,EAQlC;AAACgF,SAAG,EAAE,oEAAcyxB,IAApB;AAA0Bz2B,UAAI,EAAE;AAAhC,KARkC,CAA/B,C,CAWP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEO,QAAMipC,WAAW,GAAG,CACvB;AAACjkC,SAAG,EAAE,kEAAYkkC,KAAlB;AAAyBlpC,UAAI,EAAE;AAA/B,KADuB,EAEvB;AAACgF,SAAG,EAAE,kEAAYmkC,QAAlB;AAA4BnpC,UAAI,EAAE;AAAlC,KAFuB,EAGvB;AAACgF,SAAG,EAAE,kEAAYokC,oBAAlB;AAAwCppC,UAAI,EAAE;AAA9C,KAHuB,CAApB,C,CAMP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,QAAMqpC,cAAc,GAAG,CAC1B;AAACrkC,SAAG,EAAE,qEAAeskC,IAArB;AAA2BtpC,UAAI,EAAE;AAAjC,KAD0B,EAE1B;AAACgF,SAAG,EAAE,qEAAeukC,KAArB;AAA4BvpC,UAAI,EAAE;AAAlC,KAF0B,EAG1B;AAACgF,SAAG,EAAE,qEAAewkC,WAArB;AAAkCxpC,UAAI,EAAE;AAAxC,KAH0B,EAI1B;AAACgF,SAAG,EAAE,qEAAeykC,MAArB;AAA6BzpC,UAAI,EAAE;AAAnC,KAJ0B,EAK1B;AAACgF,SAAG,EAAE,qEAAe0kC,OAArB;AAA8B1pC,UAAI,EAAE;AAApC,KAL0B,EAM1B;AAACgF,SAAG,EAAE,qEAAekkC,KAArB;AAA4BlpC,UAAI,EAAE;AAAlC,KAN0B,CAAvB,C,CASP;AACA;AACA;AACA;AACA;;AAEO,QAAM2pC,aAAa,GAAG,CACzB;AAAC3kC,SAAG,EAAE,uEAAiB4kC,OAAvB;AAAgC5pC,UAAI,EAAE;AAAtC,KADyB,EAEzB;AAACgF,SAAG,EAAE,uEAAiB6kC,WAAvB;AAAoC7pC,UAAI,EAAE;AAA1C,KAFyB,EAGzB;AAACgF,SAAG,EAAE,uEAAiB8kC,QAAvB;AAAiC9pC,UAAI,EAAE;AAAvC,KAHyB,CAAtB,C,CAMP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,QAAM+pC,YAAY,GAAG,CACxB;AAAC/kC,SAAG,EAAE,mEAAaglC,YAAnB;AAAiChqC,UAAI,EAAE;AAAvC,KADwB,EAExB;AAACgF,SAAG,EAAE,mEAAailC,QAAnB;AAA6BjqC,UAAI,EAAE;AAAnC,KAFwB,EAGxB;AAACgF,SAAG,EAAE,mEAAaklC,KAAnB;AAA0BlqC,UAAI,EAAE;AAAhC,KAHwB,EAIxB;AAACgF,SAAG,EAAE,mEAAamlC,IAAnB;AAAyBnqC,UAAI,EAAE;AAA/B,KAJwB,EAKxB;AAACgF,SAAG,EAAE,mEAAaolC,aAAnB;AAAkCpqC,UAAI,EAAE;AAAxC,KALwB,EAMxB;AAACgF,SAAG,EAAE,mEAAaqlC,UAAnB;AAA+BrqC,UAAI,EAAE;AAArC,KANwB,CAArB,C,CASP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEO,QAAMsqC,WAAW,GAAG,CACvB;AAACtlC,SAAG,EAAE,kEAAY8V,QAAlB;AAA4B9a,UAAI,EAAE;AAAlC,KADuB,EAEvB;AAACgF,SAAG,EAAE,kEAAYyY,KAAlB;AAAyBzd,UAAI,EAAE;AAA/B,KAFuB,EAGvB;AAACgF,SAAG,EAAE,kEAAY6jC,IAAlB;AAAwB7oC,UAAI,EAAE;AAA9B,KAHuB,CAApB,C,CAMP;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;;QAGauqC,c;;OAOb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEO,QAAMC,SAAS,GAAG,CACrB;AAACxlC,SAAG,EAAE,iEAAWylC,WAAjB;AAA8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AA;AAAA;AAAA;;QAGaW,iB,GAUT,6BAAc;AAAA;;AACV,WAAKC,cAAL,GAAsB,EAAtB;AACA,WAAKC,eAAL,GAAuB,EAAvB;AACA,WAAKC,UAAL,GAAkB,EAAlB;AACH,K,EAGL;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEO,QAAMC,aAAa,GAAG,CACzB;AAACxoC,SAAG,EAAE,oEAAc2jC,SAApB;AAA+B3oC,UAAI,EAAE;AAArC,KADyB,EAEzB;AAACgF,SAAG,EAAE,oEAAcxH,GAApB;AAAyBwC,UAAI,EAAE;AAA/B,KAFyB,EAGzB;AAACgF,SAAG,EAAE,oEAAc4jC,SAApB;AAA+B5oC,UAAI,EAAE;AAArC,KAHyB,EAIzB;AAACgF,SAAG,EAAE,oEAAc6jC,IAApB;AAA0B7oC,UAAI,EAAE;AAAhC,KAJyB,EAKzB;AAACgF,SAAG,EAAE,oEAAc8jC,OAApB;AAA6B9oC,UAAI,EAAE;AAAnC,KALyB,EAMzB;AAACgF,SAAG,EAAE,oEAAc+jC,QAApB;AAA8B/oC,UAAI,EAAE;AAApC,KANyB,CAAtB,C,CASP;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","file":"main-es5.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Subscription } from 'rxjs';\nimport { DexihHubUser, eSharedAccess, eLoginProvider } from '../shared/shared.models';\n\nexport const logoUrl = 'assets/img/dexih/dex_logo_wide_raw.png';\nexport const logoSmallUrl = 'assets/img/dexih/dexih_small.png';\n\nexport class User {\n        public email: string = null;\n        public userName: string = null;\n        public password: string = null;\n        public rememberMe = false;\n        public firstName: string = null;\n        public lastName: string = null;\n        public terms = false;\n        public subscription = false;\n        public code: string = null;\n        public emailConfirmed = false;\n        public isInvited = false;\n        public inviteQuota = 0;\n        public notifyPrivateMessage = true;\n        public notifySupportMessage = true;\n\n        // used when resetting passwords.\n        public newPassword = '';\n        public confirmPassword = '';\n\n        public isAdmin: boolean;\n\n    constructor(\n        _email?: string,\n        _userName?: string,\n        _password?: string,\n        _rememberMe?: boolean,\n    ) {\n        this.email = _email;\n        this.userName = _userName;\n        this.password = _password;\n        this.rememberMe = _rememberMe;\n    }\n}\n\nexport class UserLoginInfo {\n    public loginProvider: eLoginProvider = null;\n    public providerDisplayName: string = null;\n    public providerKey: string = null;\n}\n\nexport class DexihHubAuth {\n    public hubKey: number;\n    public name: string;\n    public description: string;\n    public encryptionKey: string;\n    public sharedAccess: eSharedAccess = eSharedAccess.Registered;\n    public expiryDate: Date;\n\n    public dexihHubUsers: Array<DexihHubUser>;\n\n    public remoteAgentId: string;\n\n    public createDate: Date;\n    public updateDate: Date;\n    public isValid = true;\n\n}\n\nexport class ExternalLoginResult {\n    public provider: string;\n    public email: string;\n    public isSignedIn: boolean;\n    public isLocked: boolean;\n    public isAlreadyRegistered: boolean;\n}\n\nexport class ExternalLogin {\n    public provider: string;\n    public email: string;\n    public firstName: string;\n    public lastName: string;\n    public providerKey: string;\n    public authenticationToken: string;\n}\n\nexport class Parameter {\n    public key: string;\n    public value;\n}\n\nexport class Message {\n    public reference: string;\n    public time: Number;\n\n    constructor(\n        public success: boolean,\n        public message: string,\n        public exceptionDetails: string,\n        public value: any\n    ) {\n        this.time = Date.now();\n    }\n}\n\n// export class ManagedTask {\n//     public reference: string;\n//     public remoteAgentId: string;\n//     public referenceKey: number;\n//     public referenceId: string;\n//     public status: eManagedTaskStatus;\n//     public name: string;\n//     public description: string;\n//     public category: string;\n//     public data: any;\n//     public percentage: number;\n//     public stepName: string;\n//     public isCompleted: boolean;\n//     public lastUpdate: string;\n//     public success: boolean;\n//     public message: string;\n//     public exceptionDetails: string;\n\n//     constructor() {\n//         this.status = eManagedTaskStatus.Created;\n//     }\n// }\n\n// export enum eManagedTaskStatus {\n//     Created = <any>'Created',\n//     Scheduled = <any>'Scheduled',\n//     Queued = <any>'Queued',\n//     Running = <any>'Running',\n//     Cancelled = <any>'Cancelled',\n//     Error = <any>'Error',\n//     Completed = <any>'Completed',\n//     FileWatching = <any>'FileWatching'\n// }\n\n// export class DexihRemoteAgent extends EntityBase {\n//     public remoteAgentKey = 0;\n//     public name: string = null;\n//     public restrictIp: boolean = null;\n//     public ipAddresses: string[] = null;\n//     public remoteAgentId: string = null;\n//     public userId: string = null;\n//     public hashedToken: string = null;\n//     public allowExternalConnect: boolean = null;\n//     public lastLoginIpAddress: string = null;\n//     public lastLoginDateTime: Date = null;\n\n//     public activeAgents: DexihActiveAgent[];\n// }\n\n// export class DexihActiveAgent {\n//     public remoteAgentKey: number;\n//     public user: string;\n//     public name: string;\n//     public isRunning: boolean;\n//     public ipAddress: string;\n//     public instanceId: string;\n//     public isEncrypted: boolean;\n//     public dataPrivacyStatus: eDataPrivacyStatus;\n//     public downloadUrls: DownloadUrl[];\n//     public currentDownloadUrl: DownloadUrl;\n//     public downloadUrlSummary: string;\n\n//     public upgradeAvailable: boolean;\n//     public version: string;\n//     public latestVersion: string;\n//     public latestDownloadUrl: string;\n// }\n\n// export enum eDataPrivacyStatus {\n//     NotAllowed = <any>'NotAllowed',\n//     Proxy = <any>'Proxy',\n//     Lan = <any>'Lan',\n//     Internet = <any>'Internet',\n//     CustomUrl = <any>'CustomUrl',\n// }\n\n// export enum EDownloadUrlType {\n//     Proxy = <any>'Proxy',\n//     Direct = <any>'Direct',\n// }\n\n// export class DownloadUrl {\n//     public url: string;\n//     public downloadUrlType: EDownloadUrlType;\n//     public isEncrypted: boolean;\n//     public testStatus: string;\n//     public testMessage: string;\n// }\n\nexport enum eHubAccess {\n    All, User, ReadOnly, Public\n}\n\nexport enum eFileStatus {\n    Waiting = <any>'Waiting',\n    Uploading = <any>'Uploading',\n    Downloading = <any>'Downloading',\n    Complete = <any>'Complete',\n    Error = <any>'Error',\n    Cancelled = <any>'Cancelled'\n}\n\nexport class FileHandler {\n    public id = Math.random().toString(36).substr(2, 9);\n    public progress: number;\n    public status: eFileStatus;\n    public message: string;\n    public httpSubscription: Subscription;\n    public file: File;\n    public url: string;\n\n    public constructor(file: File, url: string) {\n        this.file = file;\n        this.status = eFileStatus.Waiting;\n        this.progress = 0;\n        this.url = url;\n    }\n\n    public isRunning(): boolean {\n        switch (this.status) {\n            case eFileStatus.Uploading:\n            case eFileStatus.Downloading:\n                return true;\n        }\n\n        return false;\n    }\n\n    public cancel() {\n        if (this.httpSubscription) {\n            this.httpSubscription.unsubscribe();\n        }\n    }\n}\n\nexport class RemoteToken {\n    public user: string;\n    public remoteAgentId: string;\n    public userToken: string;\n}\n\n// export class PromiseWithCancel<T> implements Promise<T> {\n//     then<TResult1 = T, TResult2 = never>(onfulfilled?: (value: T) => TResult1 | PromiseLike<TResult1>, onrejected?:\n//    (reason: any) => TResult2 | PromiseLike<TResult2>): Promise<TResult1 | TResult2> {\n//         return this._promise.then(onfulfilled);\n//     }\n\n//     catch<TResult = never>(onrejected?: (reason: any) => TResult | PromiseLike<TResult>): Promise<T | TResult> {\n//         return this._promise.catch(onrejected);\n//     }\n\n//     [Symbol.toStringTag]: string;\n//     finally(onfinally?: () => void): Promise<T> {\n//         return this._promise.finally(onfinally);\n//     }\n\n//     public constructor(executor: (\n//         resolve: (value?: T | PromiseLike<T>) => void,\n//         reject: (reason?: any) => void) => void, cancel: () => void) {\n\n//         this._promise = new Promise<T>((resolve, reject) => {executor(resolve, reject)});\n//       }\n\n//     private _promise: Promise<T>;\n//     private _cancel?: () => void;\n\n//     onCancel(cancel?: () => void) {\n//         this._cancel = cancel;\n//     }\n\n//     cancel() {\n//         this._cancel();\n//     }\n// }\n\nexport class CancelToken {\n    public cancelMethod: () => void;\n\n    // cancel the operation\n    public cancel() {\n        if (this.cancelMethod) {\n            this.cancelMethod();\n        }\n    }\n}\n\nexport class PromiseWithCancel<T> extends Promise<T> {\n\n    private _cancel: CancelToken;\n\n\n    constructor(executor: (resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void,\n        cancel: CancelToken = new CancelToken()) {\n        super(executor);\n        this._cancel = cancel;\n    }\n\n    public cancel() {\n        if (this._cancel) {\n            this._cancel.cancel();\n        }\n    }\n\n}\n\n\n\n","import { HttpClient, HttpHeaders, HttpRequest, HttpEventType, HttpResponse } from '@angular/common/http';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as FileSaver from 'file-saver';\nimport { BehaviorSubject, Observable, Subscription, Subject, ReplaySubject } from 'rxjs';\nimport { timeout, first, take } from 'rxjs/operators'\nimport { eLogLevel, LogFactory } from '../../logging';\nimport {\n    DexihHubAuth, ExternalLoginResult, Message,\n    User, UserLoginInfo, ExternalLogin, FileHandler, eFileStatus, RemoteToken, PromiseWithCancel, CancelToken, eHubAccess\n} from './auth.models';\nimport { UserAgentApplication, AuthResponse, CacheLocation } from 'msal';\nimport { DexihModalComponent } from 'dexih-ngx-components';\nimport { Location } from '@angular/common';\nimport { DexihRemoteAgent, DexihActiveAgent, DownloadUrl, CacheManager, eClientCommand, eLoginProvider,\n    eTypeCode, ManagedTask, eManagedTaskStatus, ePermission, eSharedAccess, DexihIssue,\n    DexihDashboard, ListOfValuesItem, SharedData, eDownloadFormat, eDataObjectType, InputColumn, SelectQuery, InputParameterBase } from '../shared/shared.models';\nimport { PreviewResults } from '../+hub/hub.models';\nimport { WebSocketService} from './websocket.service';\nimport { environment } from '../../environments/environment';\nimport { Functions } from '../shared/utils/functions';\n\ndeclare var gapi: any;\n\n@Injectable()\nexport class AuthService implements OnDestroy {\n    // Create an observable user, so consuming components can update when credentials change.\n    private _currentUser = new BehaviorSubject<User>(null);\n    private _refreshUserAttempted = false;\n    private _refreshUserPromise;\n    public _hubs = new BehaviorSubject<Array<DexihHubAuth>>(null);\n    private _hubErrors = new BehaviorSubject<Array<Message>>([]);\n\n    private _displayHelp = new BehaviorSubject<boolean>(false);\n\n    private _tasks = new BehaviorSubject<Array<ManagedTask>>([]);\n\n    private _notification = new Subject<Message>();\n    private _notifications: Message[] = [];\n\n    private _logErrors = new BehaviorSubject<Message>(null);\n\n    private _waitMessages = new Map<string, any>();\n    private _waitMessagesObserve = new BehaviorSubject<any>(this._waitMessages);\n\n    private _globalCache = new ReplaySubject<CacheManager>();\n\n    private _remoteAgents = new BehaviorSubject<Array<DexihRemoteAgent>>(null);\n\n    // store the URL so we can redirect after logging in\n    public redirectUrl: string;\n\n    private _userSubscribe: Subscription;\n    private _webSocketSubscribe: Subscription;\n    private _logErrorsSubscribe: Subscription;\n\n    private modalComponent: DexihModalComponent;\n\n    private logger = new LogFactory('auth.service');\n\n    private updateRemoteAgentsFlag = false;\n\n    private sharedItemsIndex: SharedData[];\n\n    private webSocketService: WebSocketService;\n\n    private isInitialized = false;\n\n    private xSrfToken = null;\n\n    constructor(\n        private http: HttpClient,\n        private router: Router,\n        private route: ActivatedRoute,\n        private location: Location,\n    ) {\n    }\n\n    ngOnDestroy() {\n        this.logger.LogC(() => `ngOnDestroy.`, eLogLevel.Debug);\n\n        if (this._userSubscribe) { this._userSubscribe.unsubscribe(); }\n        if (this._webSocketSubscribe) { this._webSocketSubscribe.unsubscribe(); }\n        if (this._remoteAgents) { this._remoteAgents.unsubscribe(); }\n        if (this._logErrorsSubscribe) { this._logErrorsSubscribe.unsubscribe(); }\n    }\n\n    defaultHeaders(): HttpHeaders {\n        return new HttpHeaders({\n            'Content-Type': 'application/json',\n//            'X-XSRF-TOKEN': Functions.getCookie('XSRF-TOKEN')\n        });\n    }\n\n    initialize() {\n        // only initialize once\n        if (this.isInitialized) { return; }\n        this.isInitialized = true;\n\n        this.logger.LogC(() => 'Initializing AuthService', eLogLevel.Information);\n\n        this.webSocketService = new WebSocketService(this.location);\n\n        this.refreshGlobalCache();\n        this.refreshUser();\n\n        // whenever user login changes, update the list of hubs, and establish a websocket connection.\n        if (this._userSubscribe) { this._userSubscribe.unsubscribe(); }\n        this._userSubscribe = this.getUserObservable().subscribe(async (user) => {\n            if (user) {\n                this.logger.LogC(() => `New authorized user ${user.email}`, eLogLevel.Information);\n                this.refreshHubs();\n\n                await this.webSocketService.initializeWebSocket();\n\n                if (this._webSocketSubscribe) { this._webSocketSubscribe.unsubscribe(); }\n                this._webSocketSubscribe = this.webSocketService.getWebSocketObservable().subscribe(data => {\n                    if (data) {\n                        switch (data.command) {\n                            case eClientCommand.Disconnect: {\n                                this._remoteAgents.next(null);\n                            }\n                                break;\n                            case eClientCommand.Connect:\n                                // this.refreshGlobalCache();\n                                // this.refreshUser();\n                                this.pingRemoteAgents();\n                                break;\n                            case eClientCommand.ActiveAgentUpdate: {\n                                let remoteAgents = <DexihRemoteAgent[]>this._remoteAgents.value;\n                                if (remoteAgents) {\n                                    let activeAgent = <DexihActiveAgent>data.value;\n                                    let remoteAgent = remoteAgents.find(c => c.remoteAgentKey === activeAgent.remoteAgentKey);\n                                    if (remoteAgent) {\n                                        let existingIndex = remoteAgent['activeAgents']\n                                            .findIndex(c => c.instanceId === activeAgent.instanceId);\n                                        if (existingIndex >= 0) {\n                                            remoteAgent['activeAgents'][existingIndex] = activeAgent;\n                                        } else {\n                                            remoteAgent['activeAgents'].push(activeAgent);\n                                        }\n                                    } else {\n                                        remoteAgent = new DexihRemoteAgent();\n                                        remoteAgent.remoteAgentKey = activeAgent.remoteAgentKey;\n                                        remoteAgent.name = activeAgent.name;\n                                        remoteAgent['activeAgents'] = [activeAgent];\n                                        remoteAgents.push(remoteAgent);\n                                    }\n                                    this._remoteAgents.next(remoteAgents);\n                                } else {\n                                    let activeAgent = <DexihActiveAgent>data.value;\n                                    let remoteAgent = new DexihRemoteAgent();\n                                    remoteAgent.remoteAgentKey = activeAgent.remoteAgentKey;\n                                    remoteAgent.name = activeAgent.name;\n                                    remoteAgent['activeAgents'] = [activeAgent];\n                                    this._remoteAgents.next([remoteAgent]);\n                                }\n                                break;\n                            }\n                            case eClientCommand.RemoteAgentDelete: {\n                                let remoteAgents = <DexihRemoteAgent[]>this._remoteAgents.value;\n                                if (remoteAgents) {\n                                    let instanceId = data.value;\n                                    remoteAgents.forEach(remoteAgent => {\n                                        let existingIndex = remoteAgent['activeAgents'].findIndex(c => c.instanceId === instanceId);\n                                        if (existingIndex >= 0) {\n                                            remoteAgent['activeAgents'].splice(existingIndex, 1);\n                                        }\n                                    });\n                                    this._remoteAgents.next(remoteAgents);\n                                }\n                                break;\n                            }\n\n                            case eClientCommand.RemoteAgentUpdateKey: {\n                                let remoteAgents = <DexihRemoteAgent[]>this._remoteAgents.value;\n                                let index = remoteAgents.findIndex(c => c.remoteAgentKey === data.value);\n                                if (index >= 0) {\n                                    remoteAgents[index] = data.value;\n                                } else {\n                                    remoteAgents.push(data.value);\n                                }\n                                this._remoteAgents.next(remoteAgents);\n                                break;\n                            }\n\n                            case eClientCommand.RemoteAgentDeleteKey: {\n                                let remoteAgents = <DexihRemoteAgent[]>this._remoteAgents.value;\n                                let index = remoteAgents.findIndex(c => c.remoteAgentKey === data.value);\n                                if (index >= 0) {\n                                    remoteAgents.splice(index, 1);\n                                    this._remoteAgents.next(remoteAgents);\n                                }\n                                break;\n                            }\n\n                            case eClientCommand.HubUpdate: {\n                                this.logger.LogC(() => `hub-update: ${data.value}`, eLogLevel.Debug);\n\n                                let hub: DexihHubAuth = data.value;\n                                this.setHubAccess(hub);\n                                let hubs = this._hubs.getValue();\n                                if (hubs) {\n                                    let previousHub = hubs.find(c => c.hubKey === hub.hubKey);\n                                    if (previousHub) {\n                                        Object.assign(previousHub, hub);\n                                        this._hubs\n                                            .next(hubs.sort((a, b) => a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase() ? 1 : -1));\n                                    } else {\n                                        hubs.push(hub);\n                                        this._hubs\n                                            .next(hubs.sort((a, b) => a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase() ? 1 : -1));\n                                    }\n                                }\n                            }\n                                break;\n                            case eClientCommand.HubDelete: {\n                                this.logger.LogC(() => `hubs-delete: ${data.value}`, eLogLevel.Debug);\n\n                                let hubKeys: Array<number> = data.value;\n\n                                let hubs = this._hubs.getValue();\n                                if (hubs) {\n                                    hubKeys.forEach(hubKey => {\n                                        let previousHub = hubs.find(c => c.hubKey === hubKey);\n                                        if (previousHub) {\n                                            let index = hubs.indexOf(previousHub);\n                                            hubs.splice(index, 1);\n                                        }\n                                    });\n                                    this._hubs.next(hubs);\n                                }\n                            }\n                                break;\n                            case eClientCommand.Task:\n                                this.logger.LogC(() => `task: ${data.value}`, eLogLevel.Debug);\n\n                                const task = data.value;\n                                this.addUpdateTask(task);\n                                break;\n                            case eClientCommand.FileDownload: {\n                                this.logger.LogC(() => `file-download: ${data.value}`, eLogLevel.Debug);\n\n                                const downloadData = data.value;\n\n                                let formBody = {\n                                    HubKey: downloadData.hubKey,\n                                    SecurityToken: downloadData.securityToken,\n                                    FileReference: downloadData.reference\n                                }\n\n                                this.downloadFile('/api/Remote/GetFileStream',\n                                    formBody, downloadData.fileName, downloadData.contentType).then(() => {\n                                        // if (currentTask) {\n                                        //     currentTask.percentage = 100;\n                                        //     currentTask.status = eManagedTaskStatus.Success;\n                                        //     this.addUpdateTask(currentTask);\n                                        // }\n                                    }).catch(reason => {\n                                        // currentTask.percentage = 0;\n                                        // currentTask.status = eManagedTaskStatus.Error;\n                                        // currentTask.message = reason;\n                                        // this.addUpdateTask(currentTask);\n                                        this._hubErrors.next(reason);\n                                    });\n                            }\n                                break;\n                            case eClientCommand.DownloadReady: {\n                                this.logger.LogC(() => `download-ready ${data.value.url}`, eLogLevel.Debug);\n\n                                if (data.value.url.startsWith('http://')) {\n                                    this.modalComponent.confirm(\n                                        'Download (NOT ENCRYPTED)',\n                                        // tslint:disable-next-line:max-line-length\n                                        'Your download is ready from a remote agent that is not configured for encrypted (https) downloads.  Would you still like to download the data?',\n                                        'Download Now',\n                                        'Discard'\n                                    ).then((result) => {\n                                        if (result) {\n                                            window.open(data.value.url);\n                                        }\n                                    }).catch(reason => {\n                                        this._hubErrors.next(reason);\n                                    });\n                                } else {\n                                    let newWin = window.open(data.value.url);\n\n                                    if (!newWin || newWin.closed || typeof newWin.closed === 'undefined') {\n                                        this.modalComponent.confirm(\n                                            'Download ready',\n                                            'Your download is ready.  Click here to download directly.',\n                                            'Download Now',\n                                            'Discard'\n                                        ).then((result) => {\n                                            if (result) {\n                                                window.open(data.value.url);\n                                            }\n                                        }).catch(reason => {\n                                            this._hubErrors.next(reason);\n                                        });\n                                    }\n                                }\n                            }\n                                break;\n                        }\n                    }\n                });\n            }\n        });\n\n        if (this._logErrorsSubscribe) { this._logErrorsSubscribe.unsubscribe(); }\n        this._logErrorsSubscribe = this._logErrors.asObservable().subscribe((logMessage: Message) => {\n            if (!logMessage) { return; }\n\n            let headers = this.defaultHeaders(); // new HttpHeaders({ 'Content-Type': 'application/json' });\n\n            const m = {\n                message: logMessage.message,\n                details: logMessage.exceptionDetails,\n                context: 'global',\n                url: this.router.url\n            };\n\n            this.logger.LogC(() =>\n                `Global Error (this has been logged for further analysis)\\n\n                Message: ${logMessage.message}\\n\n                Details: ${logMessage.exceptionDetails}\\n\n                Url: ${this.router.url}\\n\n            `, eLogLevel.Error);\n\n            const body = JSON.stringify(m);\n\n            this.http.post<Message>(this.getApiUrl('/api/Account/LogError'),\n                body,\n                { withCredentials: true, headers: headers }).subscribe(() => {\n                // doesn't matter what is returned.\n            });\n        });\n    }\n\n    // redirects a link click to either a route or an external web site based on the link format\n    // the event should be from the click event (click)=\"getRoute(event)\"\n    getRoute(event) {\n        let element = event.target;\n        while (element) {\n            let link: string = element.getAttribute('href');\n      \n            if (link) {\n                if (link.endsWith('.md') && !link.startsWith('http')) {\n                  this.router.navigate([], { relativeTo: this.route, queryParams: {'path': link} });\n                } else if (link.startsWith('route:')) {\n                  // don't allow link clicks unless logged in\n                } else if (link.startsWith('unsafe:route:')) {\n                    let route = link.substr(13);\n                    this.router.navigate([route]);\n                } else if (link.startsWith('#')) {\n                    this.router.navigate(['.', link]);\n                } else {\n                    window.open(link);\n                }\n                event.preventDefault();\n            }\n      \n            element = element.parentElement;\n        }\n      }\n\n    // // converts a string from underscore notation to camel case\n    // toCamelCase(str): string {\n    //     return str.substring(0, 1).toLowerCase() +\n    //         str.substring(1).replace(/_([a-z])(?=[a-z]|$)/g, function ($0, $1) { return $1.toUpperCase(); });\n    // }\n\n    // // this function adds alternative getters and setters for the camel cased counterparts\n    // // to the runtime message's prototype (i.e. without having to register a custom class):\n    // addCamelCase(type) {\n    //     // type.name = this.toCamelCase(type.name);\n    //     if (type.fieldsArray) {\n    //         type.fieldsArray.forEach(field => {\n    //             field.name = this.toCamelCase(field.name);\n    //         });\n    //     }\n\n    //     // flatten oneofs array\n    //     if (type.oneofsArray) {\n    //         type.oneofsArray.forEach(oneof => {\n    //             oneof.name = this.toCamelCase(oneof.name);\n    //         });\n    //     }\n    //     return type;\n    // }\n\n    setHubAccess(hub: DexihHubAuth) {\n        if (hub.dexihHubUsers.findIndex(c => c.permission === ePermission.Owner || c.permission === ePermission.User) >= 0) {\n            hub['hubAccess'] = eHubAccess.User;\n          } else if (hub.dexihHubUsers.findIndex(c => c.permission === ePermission.FullReader) >= 0) {\n            hub['hubAccess'] = eHubAccess.ReadOnly;\n          } else if (hub.sharedAccess === eSharedAccess.Public || hub.sharedAccess === eSharedAccess.Registered) {\n            hub['hubAccess'] = eHubAccess.Public;\n          }\n    }\n\n    // set available remoteAgents\n    getRemoteAgentsObservable(): Observable<DexihRemoteAgent[]> {\n        return this._remoteAgents.asObservable();\n    }\n\n    getRemoteAgentsPromise(): Promise<DexihRemoteAgent[]> {\n        // return new Promise<DexihRemoteAgent[]>((resolve, reject) => {\n        //   let subscription = this._remoteAgents.subscribe(\n        //     result => {\n        //         resolve(result);\n        //         subscription.unsubscribe();\n        //     },\n        //     error => {\n        //         reject(error);\n        //     }\n        //     );\n        // });\n\n        return this._remoteAgents.asObservable().pipe(take(1)).toPromise();\n    }\n\n    // gets an instance of a remote agent.\n    getRemoteAgent(remoteAgentKey: number): DexihRemoteAgent {\n        let remoteAgents = this._remoteAgents.value;\n        if (remoteAgents) {\n            return remoteAgents.find(c => c.remoteAgentKey === remoteAgentKey);\n        } else {\n            return null;\n        }\n    }\n\n    getAuthErrorsObservable(): Observable<Array<Message>> {\n        return this._hubErrors.asObservable();\n    }\n\n    getAuthErrors(): Array<Message> {\n        return this._hubErrors.value;\n    }\n\n    public getUserObservable(): Observable<User> {\n        return this._currentUser.asObservable();\n    }\n\n    public getUser(): User {\n        if (this._currentUser) {\n            return this._currentUser.value;\n        } else {\n            return null;\n        }\n    }\n\n    public getDisplayHelp(): Observable<boolean> {\n        return this._displayHelp.asObservable();\n    }\n\n    public setDisplayHelp(value: boolean) {\n        this._displayHelp.next(value);\n    }\n\n\n    // if logged in returns the user, otherwise returns null.\n    public isLoggedIn(): Promise<User> {\n        if (!this._refreshUserAttempted) {\n            return Promise.resolve(this._currentUser.value);\n        } else {\n            return this.refreshUser();\n        }\n    }\n\n    public getWebSocketObservable() {\n        return this.webSocketService?.getWebSocketObservable();\n    }\n\n    public getWebSocketStatusObservable() {\n        return this.webSocketService?.getWebSocketStatusObservable();\n    }\n\n    public getWebSocketConnectionId() {\n        return this.webSocketService?.getWebSocketConnectionId();\n    }\n\n    public JsonNoNulls(data) {\n        return JSON.stringify(data, (key, value) => {\n            // don't bother saving the null values.\n            if (value === null) { return undefined; }\n\n            switch (key) {\n                case 'currentStatus':\n                case 'entityStatus':\n                case 'previousStatus':\n                case 'runTime':\n                    return undefined;\n            }\n\n            return value;\n        });\n    }\n\n    public getApiUrl(url) {\n        if (environment.apiUrl ) {\n            return environment.apiUrl + url;\n        } else {\n            // adds path information if the app is installed under a subfolder.\n            return this.location.prepareExternalUrl(url);\n        }\n    }\n\n    // post form data\n    public postForm(url, data, waitMessage = 'Please wait while the operation completes.', cancelToken = null): Promise<any> {\n        // let headers = new HttpHeaders({\n        //     // 'Authorization': `Bearer ${authToken}`,\n        //     // 'Content-Type': 'multipart/form-data'\n        // });\n\n        const headers = this.defaultHeaders();\n\n        return this.postBody(url, data, headers, waitMessage, cancelToken);\n    }\n\n    // posts a command that will be collected from a remoteAgent\n    public postRemote<T>(url: string, data, remoteAgent: DexihActiveAgent,\n        waitMessage = 'Please wait while the operation completes.', cancelToken: CancelToken = null): PromiseWithCancel<T> {\n        let messageKey = this.addWaitMessage(waitMessage, null, cancelToken);\n\n        if (!cancelToken) {\n            cancelToken = new CancelToken();\n        }\n\n        let promise = new PromiseWithCancel<any>((resolve, reject) => {\n\n            // post the command to the web server, and receive unique id that can call the remote agent.\n            this.postRemoteGetKey(url, data, remoteAgent, cancelToken).then(key => {\n\n                // call the remote agent with the unique id.\n                this.getRemoteData<T>(remoteAgent, key, cancelToken, 'download').then(result => {\n                    this.removeWaitMessage(messageKey);\n                    resolve(result);\n                }).catch(reason => {\n                    this.removeWaitMessage(messageKey);\n                    reject(reason);\n                    // reject(`The request failed to the remote agent at ${url} for reason: ${reason}`);\n                });\n            }).catch(reason => {\n                this.removeWaitMessage(messageKey);\n                reject(reason);\n            });\n        });\n\n        return promise;\n    }\n\n    public postRemoteGetKey(url: string, data, remoteAgent: DexihActiveAgent,\n         cancelToken: CancelToken): PromiseWithCancel<string> {\n        if (!cancelToken) {\n            cancelToken = new CancelToken();\n        }\n\n        // let headers = new HttpHeaders({\n        //     // 'Authorization': `Bearer ${authToken}`,\n        //     'Content-Type': 'application/json'\n        // });\n\n        const headers = this.defaultHeaders();\n       \n        if (!cancelToken) {\n           cancelToken = new CancelToken();\n       }\n\n        let promise = new PromiseWithCancel<any>((resolve, reject) => {\n            if (!remoteAgent) {\n                reject(new Message(false, 'The request failed, as there are no available remote agents.', null, null));\n                return;\n            }\n\n            data.remoteAgentId = remoteAgent.instanceId;\n\n            // get the best download route\n            this.getBestDownloadUrl(remoteAgent, 0).then(downloadUrl => {\n                data.downloadUrl = downloadUrl;\n\n                let json = this.JsonNoNulls(data);\n\n                // post command to api server, and return the unique key which can be\n                // used to collect the results form the remote agent.\n                const apiUrl = this.getApiUrl(url);\n                this.http.post(apiUrl, json, { withCredentials: true, headers: headers, responseType: 'text' })\n                .toPromise().then(key => {\n                    resolve(key);\n                }).catch(reason => {\n\n                    // special return code, which means the remote agent has changed.\n                    if (reason.status === 426) {\n\n                        // the new agent is returned as part of the error.\n                        remoteAgent = JSON.parse(reason.error);\n\n                        // run the query again with the new remote agent.\n                        this.getBestDownloadUrl(remoteAgent, 0).then(downloadUrl2 => {\n                            localStorage.setItem(`hub-remote-agent-${data.hubKey}`, JSON.stringify(remoteAgent));\n                            data.downloadUrl = downloadUrl2;\n                            data.remoteAgentId = remoteAgent.instanceId;\n                            json = this.JsonNoNulls(data);\n                            this.http.post(apiUrl, json, { withCredentials: true, headers: headers, responseType: 'text' })\n                            .toPromise().then(key => {\n                                resolve(key);\n                            }).catch(reason2 => reject(reason2));\n                        }).catch(reason2 => reject(reason2));\n                    } else {\n                        reject(this.httpError(url, reason));\n                    }\n                });\n            }).catch(reason => {\n                reject(reason);\n            });\n        });\n\n        return promise;\n    }\n\n    public postFormRemoteGetKey(url: string, formData: FormData, remoteAgent: DexihActiveAgent,\n        cancelToken: CancelToken): PromiseWithCancel<string> {\n       if (!cancelToken) {\n           cancelToken = new CancelToken();\n       }\n\n       formData.append('remoteAgentId', remoteAgent.instanceId);\n\n       let promise = new PromiseWithCancel<any>((resolve, reject) => {\n           this.getBestDownloadUrl(remoteAgent, 0).then(downloadUrl => {\n            //    if (downloadUrl && downloadUrl.downloadUrlType === eDownloadUrlType.Proxy) {\n            //         formData.append('responseUrl', downloadUrl.url);\n            //    }\n\n            formData.append('downloadUrlJson', JSON.stringify(downloadUrl));\n\n               this.http.post(this.getApiUrl(url), formData, { withCredentials: true, responseType: 'text' })\n               .toPromise().then(key => {\n                   resolve(key);\n               }).catch(reason => {\n                   reject(this.httpError(url, reason));\n               });\n           }).catch(reason => {\n               reject(reason);\n           });\n       });\n\n       return promise;\n   }\n\n    /// posts to api, and returns raw result.\n    public postGetRaw(url: string, data, waitMessage = 'Please wait while the operation completes.',\n      cancelToken: CancelToken): PromiseWithCancel<string> {\n        let messageKey = this.addWaitMessage(waitMessage);\n       if (!cancelToken) {\n           cancelToken = new CancelToken();\n       }\n\n    //    let headers = new HttpHeaders({\n    //        // 'Authorization': `Bearer ${authToken}`,\n    //        'Content-Type': 'application/json'\n    //    });\n\n        const headers = this.defaultHeaders();\n\n       let promise = new PromiseWithCancel<any>((resolve, reject) => {\n            this.http.post(this.getApiUrl(url), this.JsonNoNulls(data), { withCredentials: true, headers: headers, responseType: 'text' })\n            .toPromise().then(value => {\n                this.removeWaitMessage(messageKey);\n                resolve(value);\n            }).catch(reason => {\n                this.removeWaitMessage(messageKey);\n                reject(this.httpError(url, reason));\n            });\n       });\n\n       return promise;\n   }\n\n    // returns a url to upload files to\n    public postRemoteUpload(url: string, data, remoteAgent: DexihActiveAgent,\n        waitMessage = 'Please wait while the operation completes.', cancelToken: CancelToken):\n            PromiseWithCancel<{url: string, key: string}> {\n        let messageKey = this.addWaitMessage(waitMessage);\n        if (!cancelToken) {\n            cancelToken = new CancelToken();\n        }\n\n        // let headers = new HttpHeaders({\n        //     // 'Authorization': `Bearer ${authToken}`,\n        //     'Content-Type': 'application/json'\n        // });\n\n        const headers = this.defaultHeaders();\n\n        data.remoteAgentId = remoteAgent.instanceId;\n\n        let promise = new PromiseWithCancel<{url: string, key: string}>((resolve, reject) => {\n            this.getBestDownloadUrl(remoteAgent, 0).then(downloadUrl => {\n                data.downloadUrl = downloadUrl;\n                // if (downloadUrl && downloadUrl.downloadUrlType === eDownloadUrlType.Proxy) {\n                //     data.responseUrl = downloadUrl.url;\n                // }\n\n                this.http.post(this.getApiUrl(url), this.JsonNoNulls(data),\n                { withCredentials: true, headers: headers, responseType: 'text' })\n                .toPromise().then(key => {\n                    this.removeWaitMessage(messageKey);\n                    resolve({url: downloadUrl.url + '/upload/' + key, key});\n                }).catch(reason => {\n                    this.removeWaitMessage(messageKey);\n                    reject(this.httpError(url, reason));\n                });\n            }).catch(reason => {\n                this.removeWaitMessage(messageKey);\n                reject(reason);\n            });\n        })\n\n        return promise;\n    }\n\n    // gets the url to execute a remote command\n    public async getRemoteUrl(activeAgent: DexihActiveAgent, key: string, command: 'upload' | 'download' | 'setRaw' = 'download',\n        extra: string): Promise<string> {\n        let baseUrl: string;\n\n        if (!activeAgent) {\n            let message = new Message(false, 'The data cannot be downloaded as there is no current remote agent.', null, null);\n            return Promise.reject(message);\n        } else if (activeAgent['currentDownloadUrl']) {\n            baseUrl = activeAgent['currentDownloadUrl'].url;\n        } else if (activeAgent.downloadUrls.length === 0) {\n            let message = new Message(false, 'Current remote agent does not have data download/upload available.', null, null);\n            return Promise.reject(message);\n        } else {\n            let download = await this.getBestDownloadUrl(activeAgent, 0);\n            baseUrl = download.url;\n        }\n\n        let downloadUrl: string;\n        downloadUrl = baseUrl + '/' + command + '/' + key;\n\n        if (extra) {\n            downloadUrl += '/' + extra;\n        }\n\n        return Promise.resolve(downloadUrl);\n    }\n\n    // gets the url to execute a remote command\n    public async getRemoteData<T>(activeAgent: DexihActiveAgent, key: string, cancelToken: CancelToken, command: 'upload' | 'download' | 'setRaw' = 'download', extra = ''): Promise<T> {\n        let downloadUrl = await this.getRemoteUrl(activeAgent, key, command, extra);\n        return this.getFromExternal<T>(downloadUrl, null, cancelToken);\n    }\n\n    // post an object which is converted to json.\n    public post<T>(url, data, waitMessage = 'Please wait while the operation completes.',\n        cancelToken: CancelToken = null): PromiseWithCancel<T> {\n        // let headers = new HttpHeaders({\n        //     // 'Authorization': `Bearer ${authToken}`,\n        //     'content-type': 'application/json'\n        // });\n\n        const headers = this.defaultHeaders();\n\n        let body: string;\n        if (data) {\n            data.clientConnectionId = this.getWebSocketConnectionId()\n            body = this.JsonNoNulls(data);\n        } else {\n            body = '{}';\n        }\n\n        return this.postBody(url, body, headers, waitMessage, cancelToken);\n    }\n\n    // posts data to the api.\n    private postBody<T>(url, body, headers, waitMessage = 'Please wait while the operation completes.',\n        cancelToken: CancelToken): PromiseWithCancel<any> {\n\n        if (!cancelToken) {\n            cancelToken = new CancelToken();\n        }\n\n        let promise = new PromiseWithCancel<T>((resolve, reject) => {\n            let messageKey = this.addWaitMessage(waitMessage);\n            this.logger.LogC(() => `post url: ${url}, data: ${body}.`, eLogLevel.Debug);\n\n            let subscription = this.http.post<T>(this.getApiUrl(url), body, { withCredentials: true, headers: headers }).subscribe(\n                result => {\n                    this.removeWaitMessage(messageKey);\n                    resolve(result);\n                }, error => {\n                    this.removeWaitMessage(messageKey);\n                    reject(this.httpError(url, error));\n                }, () => {\n                    this.removeWaitMessage(messageKey);\n                });\n\n            cancelToken.cancelMethod = () => {\n                subscription.unsubscribe();\n                reject(new Message(false, 'Cancelled', null, null));\n            }\n        }, cancelToken);\n\n        return promise;\n    }\n\n    // get from the api\n    public getFromApi<T>(url, waitMessage = 'Please wait while the operation completes.', cancelToken: CancelToken):\n        PromiseWithCancel<T> {\n        let messageKey: string = null;\n        if (waitMessage) {\n            messageKey = this.addWaitMessage(waitMessage);\n        }\n        let baseUrl = this.getApiUrl(url);\n\n        if (!cancelToken) {\n            cancelToken = new CancelToken();\n        }\n\n        let promise = new PromiseWithCancel<T>((resolve, reject) => {\n            let subscription = this.http.get<T>(baseUrl, {withCredentials: true}).subscribe(result => {\n                this.removeWaitMessage(messageKey);\n                resolve(result);\n            }, error => {\n                this.removeWaitMessage(messageKey);\n                reject(this.httpError(url, error));\n            }, () => {\n                cancelToken.cancelMethod = null;\n            });\n\n            cancelToken.cancelMethod = () => {\n                subscription.unsubscribe();\n                reject(new Message(false, 'Cancelled', null, null));\n            }\n        }, cancelToken);\n\n        return promise;\n    }\n\n    // calls an external url (mostly used for remote agent calls).\n    public getFromExternal<T>(url, waitMessage = 'Please wait while the operation completes.', cancelToken: CancelToken):\n    PromiseWithCancel<T> {\n        let messageKey: string = null;\n        if (waitMessage) {\n            messageKey = this.addWaitMessage(waitMessage);\n        }\n\n        if (!cancelToken) {\n            cancelToken = new CancelToken();\n        }\n\n        let promise = new PromiseWithCancel<T>((resolve, reject) => {\n            let subscription = this.http.get<T>(url).subscribe(result => {\n                this.removeWaitMessage(messageKey);\n                resolve(result);\n            }, error => {\n                this.removeWaitMessage(messageKey);\n                reject(this.httpError(url, error));\n            }, () => {\n                cancelToken.cancelMethod = null;\n            });\n\n            cancelToken.cancelMethod = () => {\n                subscription.unsubscribe();\n                reject(new Message(false, 'Cancelled', null, null));\n            }\n        }, cancelToken);\n\n        return promise;\n    }\n\n    private httpError(url: string, error: any): Message {\n        let message = new Message(false, 'Http Error', `Error calling ${url}.`, null);\n        if (error.error) {\n            if (error.error.error) {\n                message.message = error.error.error.message;\n                message.exceptionDetails += error.error.error.stack;\n            } else {\n                if (error.status === 400) {\n                    if (typeof(error.error) === 'string') {\n                        message = JSON.parse(error.error);\n                    } else {\n                        message = error.error;\n                    }\n                } else {\n                    message.message = error.error;\n                }\n            }\n        } else {\n            this.logger.LogC(() =>\n                `post warning error:${error}`, eLogLevel.Error);\n            if (error.status === 504) {\n                message.message = 'The Integration Hub API could not be reached.';\n            }\n            message.message = error.message;\n        }\n\n        return message\n    }\n\n    public postConfirm<T>(url, data, waitMessage = 'Please wait while the operation completes.',\n        confirmMessage = 'Please confirm action?', cancelToken = null): Promise<T> {\n        return new Promise<T>((resolve, reject) => {\n            this.confirmDialog('Please confirm?', confirmMessage)\n            .then(result => {\n                if (result) {\n                    resolve(this.post<T>(url, data, waitMessage, cancelToken));\n                } else {\n                    reject();\n                }\n            }).catch(() => { reject(); });\n        });\n    }\n\n    \n\n    public upload(file: FileHandler): Promise<Message> {\n        return new Promise<Message>((resolve, reject) => {\n\n            if (!file.file) {\n                return new Message(false, 'The specified file was not found.', '', '');\n            }\n\n            // create a new multipart-form for every file\n            const formData: FormData = new FormData();\n            formData.append('file', file.file, file.file.name);\n\n\n            // create a http-post request and pass the form\n            // tell it to report the upload progress\n            const req = new HttpRequest('POST', file.url, formData, {\n                // withCredentials: true,\n                // headers: headers,\n                reportProgress: true\n            });\n\n            file.progress = 0;\n            file.status = eFileStatus.Uploading;\n\n            // send the http-request and subscribe for progress-updates\n            file.httpSubscription = this.http.request(req).subscribe(event => {\n                if (event.type === HttpEventType.UploadProgress) {\n\n                    // calculate the progress percentage\n                    const percentDone = Math.round(100 * event.loaded / event.total);\n\n                    // pass the percentage into the progress-stream\n                    file.status = eFileStatus.Uploading;\n                    file.progress = percentDone;\n                } else if (event instanceof HttpResponse) {\n                    if (event.body) {\n                        let result = <Message>event.body;\n                        if (result.success) {\n                            // Close the progress-stream if we get an answer form the API\n                            // The upload is complete\n                            file.status = eFileStatus.Complete;\n                            file.progress = 100;\n                            resolve(result);\n                        } else {\n                            file.status = eFileStatus.Error;\n                            file.message = result.message;\n                            file.progress = 0;\n                            reject(result);\n                        }\n                    } else {\n                        // Close the progress-stream if we get an answer form the API\n                        // The upload is complete\n                        file.status = eFileStatus.Complete;\n                        file.progress = 100;\n                        resolve(new Message(true, 'File upload successful.', '', ''));\n                    }\n                }\n            }, error => {\n                let message: Message;\n                if (error.error) {\n                    message = error.error;\n                } else {\n                    message = new Message(false, error.message, error, '');\n                }\n\n                file.status = eFileStatus.Error;\n                file.message = message.message;\n                file.progress = 0;\n\n                reject(message);\n            });\n        });\n\n    }\n\n    // converts columns returned by preview into columns which can be displayed on <dexih-table>\n    public constructDataTableColumns(columns: Array<any>): Array<any> {\n        let dtColumns = [];\n\n        if (columns) {\n            columns.forEach((c, index) => {\n                let name = c.logicalName ? c.logicalName : c.name;\n\n                switch (c.dataType) {\n                    case eTypeCode.DateTime:\n                        dtColumns.push({ name: index, title: name, format: 'DateTime'});\n                        break;\n                    case eTypeCode.Date:\n                        dtColumns.push({ name: index, title: name, format: 'Date'});\n                        break;\n                    case eTypeCode.Boolean:\n                        dtColumns.push({ name: index, title: name, format: 'Boolean'});\n                        break;\n                    case eTypeCode.Json:\n                        dtColumns.push({ name: index, title: name, format: 'Json'});\n                        break;\n                    case eTypeCode.Xml:\n                        dtColumns.push({ name: index, title: name, format: 'Code'});\n                        break;\n                    case eTypeCode.CharArray:\n                        dtColumns.push({name: index, title: name, format: 'CharArray'});\n                        break;\n                    case eTypeCode.Node:\n                        dtColumns.push({name: index, title: name, format: 'Node',\n                            childColumns: this.constructDataTableColumns(c.childColumns) });\n                        break;\n                    default:\n                        dtColumns.push({ name: index, title: name, format: ''});\n                }\n            });\n        }\n\n        return dtColumns;\n    }\n\n    // this needs to be set by a top level component so the dialog has a container to load into.\n    setDialogDefaultContainer(modalComponent: DexihModalComponent) {\n        // this.overlay.defaultViewContainer = defaultViewContainer;\n        this.modalComponent = modalComponent;\n    }\n\n    confirmDialog(title: string, body: string): Promise<boolean> {\n        return this.modalComponent.confirm(title, body, 'Confirm', 'Cancel');\n    }\n\n    promptDialog(title: string, body: string, inputPrompt = '', inputValue = ''): Promise<string> {\n        return this.modalComponent.prompt(title, body, inputPrompt, inputValue);\n    }\n\n    informationDialog(title: string, body: any, details: string = null): Promise<boolean> {\n        return this.modalComponent.information(title, body, 'Close', details);\n    }\n\n\n    public getLoginProviders(): Promise<Array<UserLoginInfo>> {\n        return this.post<Array<UserLoginInfo>>('/api/Account/ExternalLogins', null, 'Getting external login information.')\n    }\n\n    // download a file from the api.\n    public downloadFile(url, data, name, type): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            // let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n            const headers = this.defaultHeaders();\n\n            let body = this.JsonNoNulls(data);\n\n            this.http.post(this.getApiUrl(url), body, { headers: headers, responseType: 'blob' })\n                .subscribe(returnData => {\n                    // let result: any = returnData;\n                    let blob = new Blob([returnData], { type: type });\n                    // var url = window.URL.createObjectURL(blob);\n                    FileSaver.saveAs(blob, name);\n                    resolve(true);\n                }, error => {\n                    if (error.error) {\n                        let reader = new FileReader();\n                        reader.readAsText(error.error);\n                        reader.onload = function () {\n                            let message = JSON.parse(reader.result.toString());\n                            reject(message);\n                        }\n                    } else {\n                        reject(error);\n                    }\n                });\n        });\n    }\n\n\n    refreshUser(force = false): Promise<User> {\n        if (!force && this._currentUser.value) {\n            return Promise.resolve(this._currentUser.value);\n        }\n\n        if (this._refreshUserPromise) {\n            return this._refreshUserPromise;\n        }\n\n        this._refreshUserAttempted = true;\n        this._refreshUserPromise = new Promise<User>((resolve) => {\n            this.post<User>('/api/Account/GetUser', null, 'Refreshing user details...').then(result => {\n                let previousUser = this._currentUser.value;\n                if (!previousUser || (\n                    result.email !== previousUser.email &&\n                    result.firstName !== previousUser.firstName &&\n                    result.lastName !== previousUser.lastName &&\n                    result.isAdmin !== previousUser.isAdmin &&\n                    result.isInvited !== previousUser.isInvited &&\n                    result.rememberMe !== previousUser.rememberMe &&\n                    result.subscription !== previousUser.subscription &&\n                    result.terms !== previousUser.terms\n                )) {\n                    this._currentUser.next(result);\n                }\n                resolve(result);\n                this._refreshUserPromise = null;\n                // this._refreshUserAttempted = false;\n            }).catch(reason => {\n                this.logger.LogC(() => `refreshUser error:${reason.message}`, eLogLevel.Error);\n\n                this._currentUser.next(null);\n                this._hubErrors.next(reason);\n                resolve(null);\n                this._refreshUserPromise = null;\n                // this._refreshUserAttempted = false;\n                // reject(reason);\n            });\n        });\n\n        return this._refreshUserPromise;\n    }\n\n    login(user: User): Promise<User> {\n        return new Promise<User>((resolve, reject) => {\n            // call the login service, followed by get-user.\n            // The second call is to ensure the anti-forgery headers are updated when the user credentials have changed.\n            this.post('/api/Account/Login',\n                {email: user.email, password: user.password, rememberMe: user.rememberMe}, 'Authenticating...').then(() => {\n                return this.refreshUser().then(userResult => {\n                    resolve(userResult);\n                });\n            }).catch(reason => {\n                this.logger.LogC(() => `login error:${reason.message}`, eLogLevel.Error);\n\n                this._currentUser.next(null);\n                this._hubErrors.next(reason);\n                reject(reason);\n            });\n        });\n    }\n\n    googleLoadScript(): Promise<boolean> {\n        // node: safari seems to require script local\n        // original script at https://apis.google.com/js/api.js\n        // return this.loadScript('GOOGLE', '/assets/js/google-api.js');\n        return this.loadScript('GOOGLE', 'https://apis.google.com/js/api.js', true);\n    }\n\n    googleLogin(forceLogin: boolean): Promise<User> {\n        return new Promise<User>((resolve, reject) => {\n            this.getGlobalCachePromise().then(() => {\n            this.googleSignIn(forceLogin).then(externalLogin => {\n                let loginResult = this.identityLogin(eLoginProvider.Google, externalLogin.providerKey, externalLogin.authenticationToken);\n                resolve(loginResult);\n            }).catch(() => {\n                reject('Error with google login.');\n            });\n        }).catch(reason => { reject(reason); });\n        });\n    }\n\n    googleEnable(): Promise<ExternalLogin> {\n        let messageKey: string = null;\n        return new Promise<ExternalLogin>((resolve, reject) => {\n            try {\n                this.getGlobalCachePromise().then(cache => {\n                messageKey = this.addWaitMessage('Loading google sign-in scripts...');\n                this.googleLoadScript().then(() => {\n                    gapi.load('auth2', () => {\n                        gapi.auth2.init({\n                            ...{ scope: 'email', prompt: 'select_account' },\n                            client_id: cache.googleClientId\n                        }).then((auth2) => {\n                            let login: ExternalLogin = null;\n                            if (auth2.isSignedIn.get()) {\n                                let user = auth2.currentUser.get();\n                                login = new ExternalLogin();\n                                let profile = user.getBasicProfile();\n                                login.email = profile.getEmail();\n                                login.firstName = profile.getGivenName();\n                                login.lastName = profile.getFamilyName();\n                                login.providerKey = profile.Eea;\n                                login.authenticationToken = user.getAuthResponse(true).id_token;\n                                resolve(login);\n                            } else {\n                                resolve(null);\n                            }\n                        });\n                    });\n                });\n            }).catch(reason => { reject(reason); });\n\n            } catch (e) {\n                this.logger.LogC(() => `login error:${e.message}`, eLogLevel.Error);\n                this._hubErrors.next(e);\n                reject(e);\n            } finally {\n                if (messageKey) { this.removeWaitMessage(messageKey); }\n            }\n        });\n    }\n\n    googleSignIn(forceLogin: boolean): Promise<ExternalLogin> {\n        return new Promise<ExternalLogin>((resolve, reject) => {\n            try {\n                this.getGlobalCachePromise().then(cache => {\n                this.googleLoadScript().then(() => {\n                    gapi.load('auth2', () => {\n                        gapi.auth2.init({\n                            ...{ scope: 'email', prompt: 'select_account' },\n                            client_id: cache.googleClientId\n                        }).then((auth2) => {\n                            function getLoginDetails(): ExternalLogin {\n                                let login = new ExternalLogin();\n                                let profile = auth2.currentUser.get().getBasicProfile();\n                                let idToken = auth2.currentUser.get().getAuthResponse(true).id_token;\n                                login.email = profile.getEmail();\n                                login.firstName = profile.getGivenName();\n                                login.lastName = profile.getFamilyName();\n                                login.authenticationToken = idToken;\n                                login.providerKey = profile.Eea;\n                                return login;\n                            }\n                            if (!forceLogin && auth2.isSignedIn.get()) {\n                                let result = getLoginDetails();\n                                resolve(result);\n                            } else {\n                                auth2.signIn().then(() => {\n                                    let result = getLoginDetails();\n                                    resolve(result);\n                                }).catch(reason => {\n                                    reject(reason.error);\n                                });\n                            }\n                        });\n                    });\n                }).catch(reason => {\n                    reject(reason);\n                });\n            }).catch(reason => { reject(reason); });\n\n            } catch (e) {\n                this.logger.LogC(() => `login error:${e.message}`, eLogLevel.Error);\n                this._currentUser.next(null);\n                this._hubErrors.next(e);\n                reject(e);\n            }\n        });\n    }\n\n    googleSignOut(): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            try {\n                this.googleLoadScript().then(() => {\n                    let auth2 = gapi.auth2.getAuthInstance();\n                    if (auth2) {\n                        auth2.signOut().then(() => {\n                            resolve(true);\n                        });\n                    } else {\n                        resolve(false);\n                    }\n                });\n            } catch (e) {\n                this.logger.LogC(() => `google sign out error:${e.message}`, eLogLevel.Error);\n                reject(e);\n            }\n        });\n    }\n\n    microsoftApp(clientId: string): UserAgentApplication {\n        const config = {\n            auth: {\n                clientId: clientId,\n                authority: 'https://login.microsoftonline.com/common/',\n                redirectUri: location.origin + '/api/Account/MicrosoftRedirect'\n            },\n            cache: {\n                cacheLocation: <CacheLocation>'sessionStorage',\n                storeAuthStateInCookie: false\n            }\n        };\n\n        let userAgentApplication = new UserAgentApplication(config);\n\n        userAgentApplication.handleRedirectCallback((error, errorDesc) => {\n            if (error) {\n                console.log(error + ':' + errorDesc);\n            }\n        });\n\n        return userAgentApplication;\n    }\n\n\n    microsoftEnable(): Promise<ExternalLogin> {\n        let messageKey: string = null;\n        return new Promise<ExternalLogin>(async (resolve, reject) => {\n            try {\n                this.getGlobalCachePromise().then(cache => {\n\n                messageKey = this.addWaitMessage('Loading microsoft sign-in...');\n\n                let userAgentApplication = this.microsoftApp(cache.microsoftClientId);\n                let user = userAgentApplication.getAccount();\n\n                if (user) {\n                    let login = new ExternalLogin();\n\n                    let userName = user.name;\n                    let userNames = userName.split(' ');\n\n                    login.email = user.userName;\n                    login.firstName = userNames[0];\n                    login.lastName = userNames.length > 1 ? userNames[1] : '';\n                    login.providerKey = user.accountIdentifier;\n\n                    let request = {\n                        scopes: ['user.read'],\n                        // authority: 'https://login.microsoftonline.com/common/',\n                    }\n                    userAgentApplication.acquireTokenSilent(request).then(authResponse => {\n                        login.authenticationToken = authResponse.accessToken;\n                        resolve(login);\n                    }).catch(reason => {\n                        reject(reason);\n                    });\n\n                    this.removeWaitMessage(messageKey);\n                } else {\n                    resolve(null);\n                    this.removeWaitMessage(messageKey);\n                }\n            }).catch(reason => { reject(reason); });\n\n\n            } catch (e) {\n                if (messageKey) { this.removeWaitMessage(messageKey); }\n                this.logger.LogC(() => `login error:${e.message}`, eLogLevel.Error);\n\n                this._currentUser.next(null);\n                this._hubErrors.next(e);\n                reject(e);\n            }\n        });\n    }\n\n    microsoftLogin(forceLogin: boolean): Promise<User> {\n        return new Promise<User>((resolve, reject) => {\n            this.microsoftSignIn(forceLogin).then(externalLogin => {\n                let loginResult = this.identityLogin(eLoginProvider.Microsoft,\n                    externalLogin.providerKey, externalLogin.authenticationToken);\n                resolve(loginResult);\n            }).catch((reason) => {\n                reject(reason);\n            });\n\n        });\n    }\n\n    microsoftSignIn(forceLogin: boolean): Promise<ExternalLogin> {\n        let messageKey: string = null;\n        return new Promise<ExternalLogin>(async (resolve, reject) => {\n            try {\n                messageKey = this.addWaitMessage('Loading microsoft sign-in...');\n\n                this.getGlobalCachePromise().then(cache => {\n\n                let userAgentApplication = this.microsoftApp(cache.microsoftClientId);\n                let tokenPromise: Promise<AuthResponse>;\n                // let user = userAgentApplication.getUser();\n\n                if (forceLogin) {\n                    let request = {\n                        scopes: ['user.read'],\n                        // authority: 'https://login.microsoftonline.com/common/',\n                        prompt: 'select_account'\n                    }\n                    tokenPromise = userAgentApplication.loginPopup(request);\n                } else {\n                    let user = userAgentApplication.getAccount();\n                    let request = {\n                        scopes: ['user.read'],\n                        // authority: 'https://login.microsoftonline.com/common/',\n                    }\n                    if (user) {\n                        tokenPromise = userAgentApplication.acquireTokenSilent(request);\n                    } else {\n                        tokenPromise = userAgentApplication.loginPopup(request);\n                    }\n                }\n\n                tokenPromise.then(authResponse => {\n                    this.removeWaitMessage(messageKey);\n                    if (authResponse) {\n                        if (!authResponse.accessToken) {\n                            let request = {\n                                scopes: ['user.read'],\n                                // authority: 'https://login.microsoftonline.com/common/',\n                            }\n\n                            userAgentApplication.acquireTokenSilent(request).then(result => {\n                                resolve(this.microsoftAuthResponseToLogin(result));\n                            }).catch(reason => {\n                                reject(reason);\n                            });\n                        } else {\n                            resolve(this.microsoftAuthResponseToLogin(authResponse));\n                        }\n                    } else {\n                        reject(new Message(false, 'Microsoft login failed.', null, null));\n                    }\n                }).catch(reason => {\n                    this.removeWaitMessage(messageKey);\n                    reject(reason);\n                }).catch(reason => { reject(reason); });\n            });\n\n            } catch (e) {\n                if (messageKey) { this.removeWaitMessage(messageKey); }\n                this.logger.LogC(() => `login error:${e.message}`, eLogLevel.Error);\n\n                this._currentUser.next(null);\n                this._hubErrors.next(e);\n                reject(e);\n            }\n        });\n    }\n\n    private microsoftAuthResponseToLogin(authResponse: AuthResponse): ExternalLogin {\n        let user = authResponse.account;\n        let login = new ExternalLogin();\n        let userName = user.name;\n        let userNames = userName.split(' ');\n        login.email = user.userName;\n        login.firstName = userNames[0];\n        login.lastName = userNames.length > 1 ? userNames[1] : '';\n        login.authenticationToken = authResponse.accessToken;\n        login.providerKey = user.accountIdentifier;\n        return login;\n    }\n\n\n    microsoftSignOut(): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            try {\n                this.getGlobalCachePromise().then(cache => {\n                let userAgentApplication = this.microsoftApp(cache.microsoftClientId)\n                userAgentApplication.logout();\n                resolve(true);\n                }).catch(reason => { reject(reason); });\n            } catch (e) {\n                this.logger.LogC(() => `microsoft sign out error:${e.message}`, eLogLevel.Error);\n                reject(e);\n            }\n        });\n    }\n\n\n\n    // called for external identity login.\n    identityLogin(provider: eLoginProvider, providerKey: string, authenticationToken: string): Promise<User> {\n        return new Promise<User>((resolve, reject) => {\n            // call the callback api.\n            this.post('/api/Account/ExternalLogin', {\n                provider: provider,\n                providerKey: providerKey,\n                authenticationToken: authenticationToken\n            }, 'Validating external login...')\n                .then(() => {\n                    return this.refreshUser().then(userResult => {\n                        resolve(userResult);\n                    });\n                }).catch(reason => {\n                    this.logger.LogC(() => `externalLoginCallBack error:${reason.message}`, eLogLevel.Error);\n                    this._hubErrors.next(reason);\n                    reject(reason);\n                });\n        });\n    }\n\n    loadScript(id: string, src: string, isExternal = false): Promise<boolean> {\n        return new Promise<boolean>((resolve) => {\n            // if script already loaded, do nothing\n            let script = document.getElementById(id)\n            if (script) {\n                resolve(true);\n                return;\n            }\n\n            // add the script to the page.\n            let newScript = document.createElement('script');\n            newScript.id = id;\n            newScript.type = 'text/javascript';\n            newScript.async = true;\n            newScript.src = isExternal ? src : this.location.prepareExternalUrl(src);\n            newScript.onload = (() => { resolve(true); });\n            document.head.appendChild(newScript);\n        });\n    }\n\n    // redirects browser to the requested login provider.\n    externalLogin(provider: eLoginProvider): Promise<ExternalLoginResult> {\n        return new Promise<ExternalLoginResult>((resolve) => {\n            // attempt to receive external login details (this will save a leaving the page)\n            this.externalLoginCallback().then(loginResult => {\n                if (loginResult.isSignedIn) {\n                    return this.refreshUser().then(() => {\n                        resolve(loginResult);\n                    });\n                } else {\n                    resolve(loginResult);\n                }\n\n            }).catch(reason => {\n                this.logger.LogC(() => `externalLogin error:${reason.message}`, eLogLevel.Error);\n                window.location.href = '/api/Account/ExternalLogin?provider=' + provider + '&returnUrl=/auth/login';\n            });\n        });\n    }\n\n    // redirects browser to the requested login provider.\n    addExternalLogin(provider: eLoginProvider, providerKey: string, authenticationToken: string): Promise<ExternalLoginResult> {\n        return this.post<ExternalLoginResult>('/api/Account/AddExternalLogin', {\n            provider: provider,\n            providerKey: providerKey,\n            authenticationToken: authenticationToken\n        }, 'Adding an external login...')\n    }\n\n    // redirects browser to the requested login provider.\n    removeExternalLogin(provider: eLoginProvider, providerKey: string, ): Promise<boolean> {\n        return this.postConfirm<boolean>('/api/Account/RemoveExternalLogin', {\n            provider: provider,\n            providerKey: providerKey\n        }, 'Removing external login...',\n        'Are you sure you want to remove the login ' +\n        provider + ' from your available logins.  When removed you will not be able to login via ' +\n        provider + ' provider.');\n    }\n\n    // called when provider is redirected back.\n    externalLoginCallback(): Promise<ExternalLoginResult> {\n        return this.post<ExternalLoginResult>('/api/Account/ExternalLoginCallback', null, 'Completing external login...')\n    }\n\n    // register an external login\n    externalLoginConfirmation(user: User): Promise<User> {\n        return this.post<User>('/api/Account/ExternalLoginConfirmation', user, 'Confirming external login...');\n    }\n\n\n    register(user: User): Promise<User> {\n        return this.post<User>('/api/Account/Register', user, 'Registering user...');\n    }\n\n    confirmEmail(email: string, verificationCode: string): Promise<User> {\n        let user = new User(email, null, null, false);\n        user.code = verificationCode;\n\n        return this.post<User>('/api/Account/ConfirmEmail', user, 'Confirming email...');\n    }\n\n    resendConfirmationEmail(email: string): Promise<boolean> {\n        let user = new User(email, null, null, false);\n        return this.post<boolean>('/api/Account/ResendConfirmationEmail', user, 'Resending confirmation email...');\n    }\n\n    forgotPassword(email: string): Promise<boolean> {\n        let user = new User(email, null, null, false);\n        return this.post<boolean>('/api/Account/ForgotPassword', user, 'Sending forgotten password email...')\n    }\n\n    resetPassword(email: string, verificationCode: string, password: string): Promise<boolean> {\n        let user = new User(email, email, password, false);\n        user.code = verificationCode;\n\n        return new Promise<boolean>((resolve, reject) => {\n            // call the login service to reset the password.\n            this.post('/api/Account/ResetPassword', user, 'Resetting password...').then(() => {\n                // after resetting password, we can log the user in.\n                return this.refreshUser().then(() => {\n                    resolve(true);\n                });\n            }).catch(reason => {\n                this.logger.LogC(() => `resetPassword error:${reason.message}`, eLogLevel.Error);\n\n                this._hubErrors.next(reason);\n                reject(reason);\n            });\n        });\n    }\n\n    changePassword(password: string, newPassword: string): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            // call the login service to reset the password.\n            this.post('/api/Account/ChangePassword', {\n                password: password,\n                newPassword: newPassword\n            }, 'Changing password...').then(() => {\n                resolve(true);\n            }).catch(reason => {\n                this.logger.LogC(() => `changePassword error:${reason.message}`, eLogLevel.Error);\n                this._hubErrors.next(reason);\n                reject(reason);\n            });\n        });\n    }\n\n    updateUserDetails(user: User): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            // call the login service to reset the password.\n            this.post('/api/Account/UpdateDetails',\n                {\n                    userName: user.userName,\n                    firstName: user.firstName,\n                    lastName: user.lastName,\n                    subscription: user.subscription,\n                    notifyPrivateMessage: user.notifyPrivateMessage,\n                    notifySupportMessage: user.notifySupportMessage\n                }, 'Updating user details...').then(() => {\n                    this.refreshUser();\n                    resolve(true);\n                }).catch(reason => {\n                    this.logger.LogC(() => `updateUserDetails error:${reason.message}`, eLogLevel.Error);\n\n                    this._hubErrors.next(reason);\n                    reject(reason);\n                });\n        });\n    }\n\n    logout(): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            this.postConfirm<boolean>('/api/Account/Logout', null, 'Logging out current user...',\n            'Proceed to logout?  You can improve your security further after logging out by closing this opened browser').then(() => {\n                    this._currentUser.next(null);\n                    this._hubs.next(null);\n\n                    // this refresh is just to reset the XSRF token\n                    // now that the user is logged out.\n                    this.refreshUser().then(() => {\n                        this.router.navigate(['/auth/login']);\n                    });\n                }).catch(reason => {\n                    if (reason) {\n                        this.logger.LogC(() => `logout error:${reason.message}`, eLogLevel.Error);\n\n                        this._hubErrors.next(reason);\n                        reject(reason);\n                    }\n                });\n        });\n    }\n\n    public pingRemoteAgents() {\n        if (!this.updateRemoteAgentsFlag) {\n            this.updateRemoteAgentsFlag = true;\n            // update the remote agents for this hub.\n            let connectionId = this.getWebSocketConnectionId();\n            if (!connectionId) {\n                this.updateRemoteAgentsFlag = false;\n                return;\n            }\n\n            this.post('/api/Account/PingRemoteAgents', { connectionId: connectionId }, null)\n                .then(result => {\n                    let currentAgents = this._remoteAgents.getValue();\n\n                    let newAgents = <DexihRemoteAgent[]>result;\n\n                    if (currentAgents == null) {\n                        currentAgents = newAgents;\n                        newAgents.map(c => c['activeAgents'] = []);\n                    } else {\n\n                        newAgents.forEach(newAgent => {\n                            let currentAgent = currentAgents.find(c => c.remoteAgentKey === newAgent.remoteAgentKey);\n                            if (currentAgent) {\n                                let activeAgents = currentAgent['activeAgents'];\n                                Object.assign(currentAgent, newAgent);\n                                currentAgent['activeAgents'] = activeAgents;\n                            } else {\n                                newAgent['activeAgents'] = [];\n                                currentAgents.push(newAgent);\n                            }\n                        });\n\n                        for (let i = currentAgents.length - 1; i >= 0; i--) {\n                            if (newAgents.findIndex(c => c.remoteAgentKey === currentAgents[i].remoteAgentKey) < 0) {\n                                currentAgents.splice(i, 1);\n                            }\n                        }\n                    }\n                    this._remoteAgents.next(currentAgents);\n\n                }).catch(reason => {\n                    this.logger.LogC(() => `updateRemoteAgents, error: ${reason.message}.`, eLogLevel.Error);\n                    this._remoteAgents.next(null);\n                }).then(() => this.updateRemoteAgentsFlag = false);\n        }\n    }\n\n    saveRemoteAgent(remoteAgent: DexihRemoteAgent): Promise<boolean> {\n        return this.post<boolean>('/api/Account/SaveRemoteAgent', remoteAgent, 'Saving remote agent details...');\n    }\n\n    // scans each available download url in order, to find one this client can access.\n    public getBestDownloadUrl(activeAgent: DexihActiveAgent, position: number): Promise<DownloadUrl> {\n        return new Promise<DownloadUrl>((resolve, reject) => {\n            if (position >= activeAgent.downloadUrls.length) {\n                let message = new Message(false, 'The client cannot connect to any of the data download/upload endpoints.', null, null);\n                reject(message);\n                return;\n            }\n\n            // if there is only one location, then save a ping test.\n            if (activeAgent.downloadUrls.length === 1) {\n                resolve(activeAgent.downloadUrls[0]);\n                return;\n            }\n\n            if (activeAgent['currentDownloadUrl']) {\n                resolve(activeAgent['currentDownloadUrl']);\n                return;\n            }\n\n            let url = activeAgent.downloadUrls[position].url + '/ping';\n\n            let messageKey = this.addWaitMessage('Testing remote agent connectivity...');\n\n            this.http.get(url).pipe(timeout(5000)).subscribe(() => {\n                activeAgent['currentDownloadUrl'] = activeAgent.downloadUrls[position];\n                this.removeWaitMessage(messageKey);\n                resolve(activeAgent['currentDownloadUrl']);\n            }, () => {\n                this.removeWaitMessage(messageKey);\n                this.getBestDownloadUrl(activeAgent, position + 1).then(result => {\n                    resolve(result);\n                }).catch(msg => {\n                    reject(msg);\n                });\n            });\n        });\n    }\n\n    refreshHubs(): void {\n        this.post<DexihHubAuth[]>('/api/Account/GetAuthorizedHubs', null, 'Getting authorized hubs...').then(result => {\n            let hubs = result.sort((a, b) => a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase() ? 1 : -1);\n            hubs.forEach(hub => {\n                this.setHubAccess(hub);\n            });\n            this._hubs.next(hubs);\n        }).catch(reason => {\n            this.logger.LogC(() => `refreshHubs error:${reason.message}`, eLogLevel.Error);\n\n            this._hubErrors.next(reason);\n            this._hubs.next(null);\n        });\n    }\n\n    getHubsObservable(): Observable<Array<DexihHubAuth>> {\n        return this._hubs.asObservable();\n    }\n\n    getHubs(): Array<DexihHubAuth> {\n        return this._hubs.value;\n    }\n\n    saveHub(hub: DexihHubAuth): Promise<DexihHubAuth> {\n        return this.post<DexihHubAuth>('/api/Account/SaveHub', hub, 'Saving hub details...');\n    }\n\n    saveIssue(issue: DexihIssue): Promise<DexihIssue> {\n        return this.post<DexihIssue>('/api/Account/SaveIssue', issue, 'Creating issue ... ');\n    }\n\n    getIssue(issueKey: number, cancelToken: CancelToken): Promise<DexihIssue> {\n        return this.post<DexihIssue>('/api/Account/GetIssue', {issueKey: issueKey}, 'Getting issues ... ', cancelToken);\n    }\n\n    getIssues(cancelToken: CancelToken): Promise<DexihIssue[]> {\n        return this.getFromApi<DexihIssue[]>('/api/Account/GetIssues', 'Getting issues ... ', cancelToken);\n    }\n\n    addIssueComment(issueKey: number, comment: string) {\n        return this.post<DexihIssue>('/api/Account/AddIssueComment', {issueKey: issueKey, comment: comment}, 'Getting issues ... ');\n    }\n\n    hubNameExists(hubKey: number, hubName: string): boolean {\n        if (this._hubs.value) {\n            return this._hubs.value.findIndex(c => c.name === hubName && c.hubKey !== hubKey && c.isValid) >= 0 ? true : false;\n        } else {\n            return false;\n        }\n    }\n\n    deleteHubs(hubs: Array<DexihHubAuth>): Promise<boolean> {\n        let hubNames = hubs.map(c => c.name).join(', ');\n        return this.postConfirm<boolean>('/api/Account/DeleteHubs', {\n            hubKeys: hubs.map(c => c.hubKey)\n        }, 'Deleting hubs...',\n        'This action will delete the following hubs, and any related metadata.<p></p>' + hubNames + '<p></p>Are you sure?');\n    }\n\n    removeUserTokens(remoteAgentKeys: Array<number>): Promise<boolean> {\n        let connectionId = this.getWebSocketConnectionId();\n\n        return this.postConfirm<boolean>('/api/Account/RemoveRemoteAgents', { connectionId, remoteAgentKeys }, 'Removing remote agents...',\n        'This action will revoke the selected tokens.  Remote Agents using these tokens will be immediately logged off.<p></p>' +\n                '<p></p>Are you sure?');\n    }\n\n    refreshRemoteAgentToken(remoteAgentKey: number): Promise<RemoteToken> {\n        let connectionId = this.getWebSocketConnectionId();\n\n        return this.postConfirm<RemoteToken>('/api/Account/RefreshRemoteAgentToken', { connectionId, remoteAgentKey },\n        'Refreshing remote agent token...',\n         // tslint:disable-next-line:max-line-length\n         'This action will revoke the selected token, and create a new one.  Remote agents using these tokens will be immediately logged off.<p></p>' +\n         '<p></p>Are you sure?');\n    }\n\n    createRemoteAgent(): Promise<RemoteToken> {\n        return this.post<RemoteToken>('/api/Account/CreateRemoteAgent', {\n        }, 'Creating remote agent...');\n    }\n\n\n    getRandomEncryptionKey(): Promise<string> {\n        return this.postGetRaw('/api/Account/GetRandomEncryptionKey', null, 'Getting random key...', null)\n    }\n\n\n    getUserToken(): Promise<{ remoteAgentId: string, userToken: string }> {\n        return this.post<{ remoteAgentId: string, userToken: string }>('/api/Account/CreateRemoteAgent', {}, 'Creating remote agent...')\n    }\n\n    parentRoute(route: ActivatedRoute): ActivatedRoute {\n        let currentRoute = route.parent;\n\n        while (currentRoute) {\n            if (currentRoute.outlet === 'primary') {\n                let routeSnapshot = currentRoute.snapshot;\n                let pageTitle = routeSnapshot.data['pageTitle'];\n                let navigateSkip = routeSnapshot.data['navigateSkip'];\n\n                if (pageTitle && !(navigateSkip === true)) {\n                    return currentRoute;\n                }\n            }\n            currentRoute = currentRoute.parent;\n        }\n\n        return route.root;\n    }\n\n    // navigates up one page, ignoring any empty routes\n    navigateUp() {\n        let breadcrumbs: Array<any> = [];\n        let currentRoute = this.route.root;\n        let url = '';\n        do {\n            let childrenRoutes = currentRoute.children;\n            currentRoute = null;\n            childrenRoutes.forEach(route => {\n                if (route.outlet === 'primary') {\n                    let routeSnapshot = route.snapshot;\n                    url += '/' + routeSnapshot.url.map(segment => segment.path).join('/');\n                    let pageTitle = routeSnapshot.data['pageTitle'];\n                    let navigateSkip = routeSnapshot.data['navigateSkip'];\n                    if (pageTitle && !(navigateSkip === true) &&\n                        breadcrumbs.findIndex((value) => value.pageTitle === pageTitle) === -1) {\n                        breadcrumbs.push({\n                            pageTitle: pageTitle,\n                            url: url,\n                        });\n                    }\n                    currentRoute = route;\n                }\n            });\n        } while (currentRoute);\n\n        if (breadcrumbs.length < 2) {\n            this.router.navigate(['/'], { queryParamsHandling: 'merge' });\n        } else {\n            parent = breadcrumbs[breadcrumbs.length - 2].url;\n            this.logger.LogC(() => `navigateUp :${parent}`, eLogLevel.Debug);\n            this.router.navigate([parent], { queryParamsHandling: 'merge' });\n        }\n    }\n\n    getWaitMessagesObservable(): Observable<Map<string, string>> {\n        return this._waitMessagesObserve.asObservable();\n    }\n\n    addWaitMessage(message: string, maxTime = 10000, cancelToken: CancelToken = null): string {\n        let key = this.newGuid();\n        this._waitMessages.set(key, {message: message, cancelToken: cancelToken});\n        this._waitMessagesObserve.next(this._waitMessages);\n\n        if (maxTime > 0) {\n            setTimeout(() => {\n                if (this._waitMessages.has(key)) {\n                    this.removeWaitMessage(key);\n                    let errorMessage = new Message(false, `The '${message}' will continue to run in the background.`, null, null);\n                    this.addUpdateNotification(errorMessage, false);\n                }\n            }, maxTime);\n        }\n        return key;\n    }\n\n\n    removeWaitMessage(key: string) {\n        if (this._waitMessages.has(key)) {\n            this._waitMessages.delete(key);\n            this._waitMessagesObserve.next(this._waitMessages);\n        }\n    }\n\n    getTasksObservable(): Observable<Array<ManagedTask>> {\n        return this._tasks.asObservable();\n    }\n\n    addUpdateTask(task: ManagedTask) {\n        if (task.status === eManagedTaskStatus.Error) {\n            const message = new Message(false, `The task ${task.name} failed.  Message: ${task.message}`,\n                task.exceptionDetails, null);\n            this.addUpdateNotification(message, false);\n        }\n\n        const tasks = this._tasks.value;\n        const originalTask = tasks.find(c => c.taskId === task.taskId);\n        if (originalTask) {\n            Object.assign(originalTask, task);\n        } else {\n            tasks.push(task);\n        }\n        this._tasks.next(tasks);\n    }\n\n    getTask(reference: string): ManagedTask {\n        const tasks = this._tasks.value;\n        const task = tasks.find(c => c.taskId === reference);\n        return task;\n    }\n\n    getNotificationObservable(): Observable<Message> {\n        return this._notification.asObservable();\n    }\n\n    addUpdateNotification(message: Message, log: boolean): string {\n        if (!message.reference) {\n            message.reference = this.newGuid();\n        }\n        this._notifications.push(message);\n\n        this._notification.next(message);\n\n        if (log) {\n            this._logErrors.next(message);\n        }\n\n        return message.reference;\n    }\n\n    getNotifications(): Message[] {\n        return this._notifications;\n    }\n\n    getNotification(reference: string): Message {\n        const message = this._notifications.find(c => c.reference === reference);\n        return message;\n    }\n\n    // public isHubCacheLoaded(): boolean {\n    //     if (!this._globalCache.value) {\n    //         return false;\n    //     } else {\n    //         return true;\n    //     }\n    // }\n\n    /**\n     * Generates a new GUID.\n     */\n    public newGuid(): string {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            // tslint:disable-next-line:no-bitwise\n            let r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n\n    public refreshGlobalCache() {\n        let promise = this.getFromApi<CacheManager>('/api/Account/GetGlobalCache', null, null);\n        promise.then(cache => {\n            this._globalCache.next(cache);\n        }).catch(reason => {\n            let message = new Message(false, 'Update global cache failed: ' + reason, reason, null);\n            this.addUpdateNotification(message, false);\n\n            // If cache load error, try again to refresh.\n            setTimeout(() => {\n                this.refreshGlobalCache();\n            }, 5000);\n        });\n    }\n\n    public getGlobalCacheObservable(): Observable<CacheManager> {\n        return this._globalCache.asObservable();\n    }\n\n    public getGlobalCachePromise(): Promise<CacheManager> {\n        return this.getGlobalCacheObservable().pipe(first()).toPromise();\n    }\n\n    // gets all shared data items\n    getSharedDataIndex(searchString: string, hubKeys: number[], maxResults: number, reload: boolean): Promise<SharedData[]> {\n        if (reload || !this.sharedItemsIndex) {\n            return this.post<SharedData[]>('/api/SharedData/SharedDataIndex', {\n                searchString, hubKeys, maxResults\n            }, 'Getting shared data index...');\n        } else {\n            Promise.resolve(this.sharedItemsIndex);\n        }\n    }\n\n    getSharedDataObject(hubKey: number, objectType: eDataObjectType, objectKey: number): Promise<SharedData> {\n        return this.post<SharedData>('/api/SharedData/SharedDataObject', {\n            hubKey, objectType, objectKey\n        }, 'Getting shared item...');\n    }\n\n    getActiveAgent(hubKey: number): Promise<DexihActiveAgent> {\n        // the activeAgent is cached in a localstorage to save an extra roundtrip.\n        let agent = localStorage.getItem(`hub-remote-agent-${hubKey}`);\n\n        if (agent) {\n            let remoteAgent = <DexihActiveAgent>JSON.parse(agent);\n            return Promise.resolve(remoteAgent);\n        }\n\n        return new Promise<DexihActiveAgent>((resolve, reject) => {\n\n            this.post<DexihActiveAgent>('/api/SharedData/GetActiveAgent', { hubKey: hubKey }, 'Getting active remote agent...')\n                .then(activeAgent => {\n                    this.getBestDownloadUrl(activeAgent, 0).then(() => {\n                        localStorage.setItem(`hub-remote-agent-${hubKey}`, JSON.stringify(activeAgent));\n                        resolve(activeAgent);\n                    });\n                }).catch(reason => reject(reason));\n        });\n    }\n\n    downloadData(sharedItems: Array<SharedData>, zipFiles: boolean, downloadFormat: eDownloadFormat, cancelToken: CancelToken):\n        Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n\n            // get distinct list of hubKeys\n            let flags = [], hubKeys = []\n            for (let i = 0; i < sharedItems.length; i++) {\n                if (flags[sharedItems[i].hubKey]) { continue };\n                flags[sharedItems[i].hubKey] = true;\n                hubKeys.push(sharedItems[i].hubKey);\n            }\n\n            let clientId = this.getWebSocketConnectionId();\n            if (!clientId) {\n                let message = new Message(false, 'Data downloads are only available for registered users.', null, null);\n                reject(message);\n                return;\n            }\n\n            hubKeys.forEach(hubKey => {\n                this.getActiveAgent(hubKey).then(activeAgent => {\n                    this.postRemote<ManagedTask>('/api/SharedData/DownloadData', {\n                        hubKey: hubKey,\n                        clientId: this.getWebSocketConnectionId(),\n                        downloadFormat: downloadFormat,\n                        zipFiles: zipFiles,\n                        sharedItems: sharedItems.filter(c => c.hubKey === hubKey),\n                        remoteAgentId: activeAgent.instanceId,\n                    }, activeAgent, 'Downloading data...', cancelToken)\n                        .then(task => {\n                        this.addUpdateTask(task);\n                        resolve(true);\n                    }).catch(reason => {\n                        this.logger.LogC(() => `downloadData, error: ${reason.message}.`, eLogLevel.Error);\n                        reject(reason);\n                    });\n                });\n            });\n        });\n    }\n\n    // starts a preview, and returns the url to get the download stream.\n    previewData(hubKey: number, objectKey: number, objectType: eDataObjectType,\n        inputColumns: InputColumn[], selectQuery: SelectQuery, parameters: InputParameterBase[],\n        parentParameters: InputParameterBase[], cancelToken: CancelToken):\n        Promise<PreviewResults> {\n\n        return new Promise<PreviewResults>((resolve, reject) => {\n            this.getActiveAgent(hubKey).then(activeAgent => {\n                this.postRemote<PreviewResults>('/api/SharedData/PreviewData', {\n                    hubKey: hubKey,\n                    objectType: objectType,\n                    objectKey: objectKey,\n                    selectQuery: selectQuery,\n                    remoteAgentId: activeAgent.instanceId,\n                    inputColumns: inputColumns,\n                    parameters: parameters,\n                    parentParameters: parentParameters\n                }, activeAgent, 'Previewing data...', cancelToken).then(result => {\n                    result.columns = this.constructDataTableColumns(result.columns);\n                    resolve(result);\n                }).catch(reason => {\n                    reject(reason);\n                });\n            }).catch(reason => {\n                reject(reason);\n            });\n        });\n    }\n\n      // starts a preview, and returns the url to get the download stream.\n      previewListOfValues(hubKey: number, objectKey: number, objectType: eDataObjectType, parameterName,\n        resetCache: boolean, cancelToken: CancelToken):\n        Promise<ListOfValuesItem[]> {\n\n        return new Promise<ListOfValuesItem[]>((resolve, reject) => {\n            this.getActiveAgent(hubKey).then(activeAgent => {\n                this.postRemote<ListOfValuesItem[]>('/api/SharedData/PreviewListOfValues', {\n                    hubKey: hubKey,\n                    objectType: objectType,\n                    objectKey: objectKey,\n                    parameterName: parameterName,\n                    resetCache: resetCache,\n                    remoteAgentId: activeAgent.instanceId,\n                }, activeAgent, 'Previewing list of values...', cancelToken).then(result => {\n                    resolve(result);\n                }).catch(reason => {\n                    reject(reason);\n                });\n            }).catch(reason => {\n                reject(reason);\n            });\n        });\n    }\n\n    getDashboard(hubKey: number, dashboardKey: number): Promise<DexihDashboard> {\n\n        return new Promise<DexihDashboard>((resolve, reject) => {\n            this.post<DexihDashboard>('/api/SharedData/PreviewDashboard', {\n                hubKey: hubKey,\n                dashboardKey: dashboardKey,\n            }, 'Getting dashboard download locations...').then(dashboard => {\n                resolve(dashboard);\n            }).catch(reason => reject(reason));\n        });\n    }\n\n}\n\n\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Functions } from '../shared/utils/functions';\nimport { tap } from 'rxjs/operators';\n\n\n// intercept is used to map the XSRF-TOKEN to the X-XSRF-TOKEN which is used\n// to present x-scripting attacks.\n// can't use the build in interceptor as it does not support x-domain.\n@Injectable()\nexport class AddCsrfHeaderInterceptorService implements HttpInterceptor {\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        const token = Functions.getCookie('XSRF-TOKEN');\n        if (token) {\n            req = req.clone({\n                headers: req.headers.set('X-XSRF-TOKEN', token)\n            });\n        }\n\n        return next.handle(req).pipe(tap((event: HttpEvent<any>) => {\n            // if the token is in the header (cross domain request, then set it to the local cookie)\n            if (event instanceof HttpResponse) {\n                const xsrfToken = event.headers.get('XSRF-TOKEN');\n                if (xsrfToken) {\n                    Functions.setCookie('XSRF-TOKEN', xsrfToken);\n                }\n                return event;\n            }\n        }));\n\n    }\n\n}\n","import {  OnDestroy, Injectable } from '@angular/core';\nimport { Observable, Subscription, BehaviorSubject} from 'rxjs';\nimport { LogFactory, eLogLevel } from '../../logging';\nimport { HubConnection, HubConnectionBuilder, LogLevel, HubConnectionState } from '@microsoft/signalr';\nimport { Location } from '@angular/common';\nimport { ClientMessage, eClientCommand } from '../shared/shared.models';\nimport { environment } from '../../environments/environment';\n\n@Injectable()\nexport class WebSocketService implements OnDestroy {\n    private _webSocketStatus = new BehaviorSubject<string>('Disconnected');\n    private _connectHubSubscription: Subscription;\n\n    public _webSocketMessages = new BehaviorSubject<ClientMessage>(null);\n    private _connectionId: string;\n\n    private startingWebSocket = false;\n\n    private logger = new LogFactory('WebsocketService');\n\n    private hubConnection: HubConnection;\n    private hubConnected = new BehaviorSubject<boolean>(false);\n\n    constructor(private location: Location\n    ) {\n        this._webSocketStatus.next('Disconnected');\n    }\n\n    ngOnDestroy() {\n        if (this._webSocketStatus) { this._webSocketStatus.unsubscribe(); }\n        if (this._connectHubSubscription) { this._connectHubSubscription.unsubscribe(); }\n    }\n\n    public async initializeWebSocket() {\n        this.logger.LogC(() => `InitializeWebSocket`, eLogLevel.Debug);\n\n        this._webSocketStatus.next('Connecting');\n\n        if (this.hubConnection) {\n            await this.hubConnection.stop();\n        }\n\n        this.hubConnection = new HubConnectionBuilder()\n            .configureLogging(LogLevel.Trace)\n            .withUrl(environment.apiUrl ? environment.apiUrl + '/browser' : this.location.prepareExternalUrl('/browser'))\n            .build();\n\n        this.hubConnection.on('Command', (remoteMessage: ClientMessage) => {\n            this.logger.LogC(() => `startWebSocket: receive new message: ${remoteMessage.command}.`, eLogLevel.Debug);\n            this._webSocketMessages.next(remoteMessage);\n        });\n\n        this.hubConnection.onclose((err: any) => {\n            this.logger.LogC(() => `startWebSocket disconnected. ${err}.`, eLogLevel.Error);\n            this._webSocketStatus.next(`${err}.  Check your network connection.`);\n            this.hubConnected.next(false);\n            this.sendDisconnect();\n            this._connectionId = null;\n\n            // wait 5 seconds, then attempt to reconnect.\n            setTimeout(() => this.startWebSocket(), 5000);\n        });\n\n        await this.startWebSocket();\n    }\n\n    public getWebSocketObservable(): Observable<ClientMessage> {\n        return this._webSocketMessages.asObservable();\n    }\n\n    public getWebSocketStatusObservable(): Observable<string> {\n        return this._webSocketStatus.asObservable();\n    }\n\n    public getWebSocketConnectionId() {\n        return this._connectionId;\n    }\n\n    private startWebSocket(): Promise<void> {\n        if (!this.startingWebSocket) {\n            this.startingWebSocket = true;\n\n            return new Promise<void>((resolve, reject) => {\n                if (this.hubConnection.state === HubConnectionState.Connected) {\n                    resolve();\n                    this.startingWebSocket = false;\n                    return;\n                }\n\n                this.hubConnection.start().then(() => {\n                    this._webSocketStatus.next('Connected');\n                    this.hubConnected.next(true);\n                    this.sendConnect().then(() => {\n                        resolve();\n                        this.logger.LogC(() => `startWebSocket: Hub started.`, eLogLevel.Debug);\n                        this.startingWebSocket = false;\n                    }).catch(reason => {\n                        reject(reason);\n                        this.startingWebSocket = false;\n                    });\n                })\n                    .catch(err => {\n                        this._webSocketStatus.next(`${err}.  Check your network connection.`);\n                        this.sendDisconnect();\n                        this.hubConnected.next(false);\n                        this.logger.LogC(() => `startWebSocket: Hub start failed ${err}.`, eLogLevel.Debug);\n                        setTimeout(() => {\n                            this.startingWebSocket = false;\n                            this.startWebSocket();\n                        }, 5000);\n                        resolve();\n                    });\n            });\n        }\n    }\n\n    private sendDisconnect() {\n        const disconnectMessage = new ClientMessage();\n        disconnectMessage.command = eClientCommand.Disconnect;\n        this._webSocketMessages.next(disconnectMessage);\n    }\n\n    private sendConnect(): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            const message = new ClientMessage();\n            return this.hubConnection.invoke('Connect').then(value => {\n                this._connectionId = value;\n                message.command = eClientCommand.Connect;\n                this._webSocketMessages.next(message);\n                resolve();\n            }).catch(reason => {\n                this._webSocketMessages.next(reason);\n                reject(reason);\n            });\n        });\n    }\n\n\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription} from 'rxjs';\n\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubCache } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { DexihApi, DexihHub, eDataObjectType } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n    selector: 'actions-api-button',\n    templateUrl: './actions-api-button.component.html'\n})\n\nexport class ActionsApiButtonComponent implements OnInit, OnDestroy {\n    @Input() public apis: DexihApi[];\n    @Input() public pullRight = false;\n\n    public hubCache: HubCache;\n\n    private _hubCacheSubscription: Subscription;\n\n    private cancelToken: CancelToken = new CancelToken();\n\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n                private router: Router,\n                private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n            this.hubCache = cache;\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    delete() {\n        this.hubService.deleteApis(this.apis);\n    }\n\n    editApi(api: DexihApi) {\n        this.router.navigate(['api-edit', api.key], { relativeTo: this.route });\n    }\n\n    export() {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        this.apis.forEach(item => { this.hubCache.cacheAddApi(item.key, hub); });\n\n        let filename = this.apis.length === 1 ? 'Api - ' + this.apis[0].name + '.json' : 'apis.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    shareItems(isShared: boolean) {\n        this.hubService.shareItems(this.apis.map(c => c.key), eDataObjectType.Api, isShared);\n    }\n\n    activateApis() {\n        this.hubService.activateApis(this.apis, this.cancelToken);\n    }\n\n    cancelApis() {\n        this.hubService.deactivateApis(this.apis.map(c => c.key), this.cancelToken);\n    }\n}\n","<ng-template [ngIf]=\"apis\">\n    <dexih-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-table\" [text]=\"apis.length > 1 ? 'apis' : 'Api'\" [pullRight]=\"pullRight\">\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Metadata</li>\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" [routerLink]=\"['api-new']\" title=\"Create a new api.\"><i class=\"fa fa-file-o\"></i> New</a></li>\n        <ng-template [ngIf]=\"apis.length > 0\">\n            <li *ngIf=\"apis.length == 1\">\n                <a class=\"dropdown-item\" [routerLink]=\"['api-edit', apis[0].key]\" queryParamsHandling=\"merge\"><i class=\"fa fa-edit\"></i> Edit</a>\n            </li>\n\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"shareItems(true)\" title=\"Select the selected items as shared.\"><i class=\"fa fa-group\"></i> Share</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"shareItems(false)\" title=\"Select the selected items as private.\"><i class=\"fa fa-user-secret\"></i> Private</a></li>\n\n            <li><a class=\"dropdown-item\" (click)=\"export()\" title=\"Export the metadata for the selected apis to a local file.\"><i class=\"fa fa-save\"></i> Save Locally</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"delete()\" title=\"Delete the metadata for the selected apis.\"><span class=\"text-danger\"><i class=\"fa fa-trash-o text-danger\"></i> Delete</span></a></li>\n    \n            <li class=\"list-group-item list-group-item-heading list-group-item-info\">Operations</li>\n            <li><a class=\"dropdown-item\" *ngIf=\"apis.length == 1\" [routerLink]=\"['results']\" [queryParams]=\"{apiKeys: [apis[0].key]}\" title=\"Show the Api Logs\"><i class=\"fa fa-history\"></i> Logs</a></li>\n\n            <ng-template [ngIf]=\"hubCache.canWrite\">\n                <li><a class=\"dropdown-item\" (click)=\"activateApis()\" title=\"Activates the api.\"><span class=\"text-success\"><i class=\"fa fa-save\"></i> Activate Api's</span> </a></li>\n                <li><a class=\"dropdown-item\" (click)=\"cancelApis()\" title=\"Cancel & deactivate the api's\"><span class=\"text-danger\"><i class=\"fa fa-ban\"></i> Cancel/Deactivate Api's</span> </a></li>\n            </ng-template>\n\n        </ng-template>\n    </dexih-button-dropdown>\n</ng-template>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription, combineLatest} from 'rxjs';\n\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubService } from '../../hub.service';\nimport { DexihColumnValidation } from '../../../shared/shared.models';\n\n\n@Component({\n    selector: 'actions-columnValidation-button',\n    templateUrl: './actions-columnValidation-button.component.html'\n})\n\nexport class ActionsColumnValidationButtonComponent implements OnInit, OnDestroy {\n    @Input() public columnValidation: DexihColumnValidation;\n    @Input() public pullRight = false;\n\n    private _hubCacheSubscription: Subscription;\n\n    columns = [];\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n                private router: Router,\n                private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n\n            if (cache.isLoaded()) {\n                // search any columns for an occurrence of the columnValidation.\n                cache.hub.dexihTables.forEach(tab => {\n                    let con = cache.hub.dexihConnections.find(c => c.key === tab.connectionKey);\n                    tab.dexihTableColumns.forEach(col => {\n                        if (col.columnValidationKey === this.columnValidation.key) {\n                            this.columns.push({\n                                name : `${col.name} (${con.name}.${tab.name})`,\n                                tableKey: tab.key,\n                                columnKey: col.key\n                            });\n                        }\n                    });\n                });\n            }\n        });\n\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n     }\n\n    navigateToColumn(col: any) {\n        this.router.navigate(['table-edit', col.tableKey, 'column', col.key], { relativeTo: this.route.parent.parent });\n    }\n\n}\n","<dexih-button-edit class=\"mr-1\" [routerLink]=\"['columnValidation-edit', columnValidation.key]\" queryParamsHandling=\"merge\"></dexih-button-edit>\n<dexih-button-dropdown *ngIf=\"columns.length > 0 || columns.length > 0\" buttonClass=\"btn-primary\" iconClass=\"fa fa-info-circle\" text=\"Used In\" [pullRight]=\"pullRight\">\n    <li *ngFor=\"let col of columns\">\n        <a class=\"dropdown-item\" (click)=\"navigateToColumn(col)\">{{col.name}}</a>\n    </li>\n</dexih-button-dropdown>","<ng-template [ngIf]=\"connections\">\n    <dexih-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-database\" [text]=\"connections.length > 1 ? 'Connections' : 'Connection'\" [pullRight]=\"pullRight\">\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Metadata</li>\n        <li *ngIf=\"hubCache.canWrite\">\n            <a class=\"dropdown-item\" [routerLink]=\"['connection-new', eConnectionPurpose.Source]\" title=\"Create a new datalink.\">\n                <i class=\"fa fa-file-o\"></i> New (Source)</a>\n        </li>\n        <li *ngIf=\"hubCache.canWrite\">\n            <a class=\"dropdown-item\" [routerLink]=\"['connection-new', eConnectionPurpose.Managed]\" title=\"Create a new datalink.\">\n                <i class=\"fa fa-file-o\"></i> New (Managed)</a>\n        </li>\n        <li *ngIf=\"hubCache.canWrite\">\n            <a class=\"dropdown-item\" [routerLink]=\"['connection-new', eConnectionPurpose.Target]\" title=\"Create a new datalink.\">\n                <i class=\"fa fa-file-o\"></i> New (Target)</a>\n        </li>\n        <ng-template [ngIf]=\"connections.length > 0\">\n            <li *ngIf=\"!hideEdit && connections.length == 1\">\n                <a class=\"dropdown-item\" [routerLink]=\"['connection-edit', connections[0].key]\" queryParamsHandling=\"merge\">\n                    <i class=\"fa fa-edit\"></i> Edit</a>\n            </li>\n            <li *ngIf=\"hubCache.canWrite\">\n                    <a class=\"dropdown-item\" [routerLink]=\"['connection-copy', connections[0].key]\" queryParamsHandling=\"merge\" title=\"Copy the connection.\">\n                            <i class=\"fa fa-copy\"></i> Copy\n                    </a>\n                </li>\n            <li *ngIf=\"hubCache.canWrite && showEdit\">\n                <a class=\"dropdown-item\" (click)=\"shareSelectedConnections(true)\" title=\"Select the selected connections as shared.\">\n                    <i class=\"fa fa-group\"></i> Share</a>\n            </li>\n            <li *ngIf=\"hubCache.canWrite && showEdit\">\n                <a class=\"dropdown-item\" (click)=\"shareSelectedConnections(false)\" title=\"Select the selected connections as private.\">\n                    <i class=\"fa fa-user-secret\"></i> Private</a>\n            </li>\n            <li>\n                <a class=\"dropdown-item\" (click)=\"export()\" title=\"Export the metadata for the selected connections to a local file.\">\n                    <i class=\"fa fa-save\"></i> Save Locally</a>\n            </li>\n            <li *ngIf=\"hubCache.canWrite\">\n                <a class=\"dropdown-item\" (click)=\"delete()\" title=\"Delete the metadata for the selected connections.\">\n                    <span class=\"text-danger\">\n                        <i class=\"fa fa-trash-o text-danger\"></i> Delete</span>\n                </a>\n            </li>\n\n            <ng-template [ngIf]=\"hubCache.canWrite && connections.length == 1 && connectionReference\">\n                <li class=\"list-group-item list-group-item-heading list-group-item-info\">Operations</li>\n                <ng-template [ngIf]=\"connectionReference.connectionCategory == eConnectionCategory.SqlDatabase || connectionReference.connectionCategory == eConnectionCategory.DatabaseFile || connectionReference.connectionCategory == eConnectionCategory.NoSqlDatabase || connectionReference.connectionCategory == eConnectionCategory.Hub\">\n                    <li>\n                        <a class=\"dropdown-item\"  routerLink=\"tables\" [queryParams]=\"{'connectionKey': connections[0].key}\" title=\"View imported table for this connection.\">\n                            <i class=\"fa fa-folder\"></i> View Imported Tables</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" *ngIf=\"hubCache.canWrite\" [routerLink]=\"['connection-import', connections[0].key]\" title=\"Import tables for this connection.\">\n                            <i class=\"fa fa-plus-square\"></i> Import Tables</a>\n                    </li>\n                </ng-template>\n\n                <ng-template [ngIf]=\"hubCache.canWrite && connections.length == 1\">\n                    <ng-template [ngIf]=\"connectionReference.connectionCategory == eConnectionCategory.File\">\n                        <li>\n                            <a class=\"dropdown-item\" routerLink=\"tables\" [queryParams]=\"{'connectionKey': connections[0].key}\" title=\"View imported files for this connection.\">\n                                <i class=\"fa fa-folder\"></i> View Imported Files</a>\n                        </li>\n                        <li>\n                            <a class=\"dropdown-item\" *ngIf=\"hubCache.canWrite\" [routerLink]=\"[hubPath, 'files', 'bulk-load', connections[0].key]\" title=\"Import a new file for this connection.\">\n                                <i class=\"fa fa-plus-square\"></i> Bulk Create new Files</a>\n                        </li>\n                        <li>\n                            <a class=\"dropdown-item\" *ngIf=\"hubCache.canWrite\" [routerLink]=\"['tables', 'table-new', connections[0].key]\" title=\"Import a new file for this connection.\">\n                                <i class=\"fa fa-plus-square\"></i> Add File(s)</a>\n                        </li>\n                    </ng-template>\n\n                    <ng-template [ngIf]=\"hubCache.canWrite && connections.length == 1\">\n                        <ng-template [ngIf]=\"connectionReference.connectionCategory == eConnectionCategory.WebService\">\n                            <li>\n                                <a class=\"dropdown-item\" routerLink=\"tables\" [queryParams]=\"{'connectionKey': connections[0].key}\" title=\"View imported web services for this connection.\">\n                                    <i class=\"fa fa-folder\"></i> View Imported Web Services</a>\n                            </li>\n                            <li>\n                                <a class=\"dropdown-item\" *ngIf=\"hubCache.canWrite\" [routerLink]=\"['tables', 'table-new', connections[0].key]\" title=\"Import a new web service for this connection.\">\n                                    <i class=\"fa fa-plus-square\"></i> New Web Service</a>\n                            </li>\n                        </ng-template>\n                    </ng-template>\n\n\n                    <ng-template [ngIf]=\"datalinks.length > 0 || datalinks.length > 0 || datajobs.length > 0 || datajobs.length > 0\">\n                        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Related</li>\n                        <li *ngFor=\"let datalink of datalinks\">\n                            <a class=\"dropdown-item\" (click)=\"navigateToDatalink(datalink)\">{{datalink.name}}</a>\n                        </li>\n                        <li *ngFor=\"let datajob of datajobs\">\n                            <a class=\"dropdown-item\" (click)=\"navigateToDatajob(datajob)\">{{datajob.name}}</a>\n                        </li>\n                    </ng-template>\n                </ng-template>\n            </ng-template>\n        </ng-template>\n    </dexih-button-dropdown>\n    </ng-template>","import { Component, Input, OnDestroy, OnInit, OnChanges } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription ,  Observable, combineLatest} from 'rxjs';\n\nimport { AuthService } from '../../../+auth/auth.service';\nimport {HubCache } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { DexihConnection, ConnectionReference, eConnectionCategory, DexihDatalink, DexihDatajob, eConnectionPurpose } from '../../../shared/shared.models';\nimport { async } from 'q';\n\n@Component({\n    selector: 'actions-connection-button',\n    templateUrl: './actions-connection-button.component.html'\n})\n\nexport class ActionsConnectionButtonComponent implements OnInit, OnDestroy, OnChanges {\n    @Input() public connections: DexihConnection[];\n    @Input() public hideEdit = false;\n    @Input() public pullRight = false;\n\n    public connectionReference: ConnectionReference;\n    eConnectionCategory = eConnectionCategory;\n\n    private _subscription: Subscription;\n\n    public hubCache: HubCache;\n    public eConnectionPurpose = eConnectionPurpose;\n\n    public hubPath: string;\n\n    datalinks = [];\n    datajobs = [];\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n                private router: Router,\n                private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        this._subscription = combineLatest(\n            this.hubService.getHubCacheObservable(),\n        ).subscribe(async result => {\n            this.hubCache = result[0];\n\n            if (!this.hubCache.isLoaded()) {\n                return;\n            }\n\n            this.hubPath = this.hubCache.getHubUrl();\n\n            this.datalinks = [];\n            this.datajobs = [];\n\n            let cache = this.hubCache;\n\n            if (this.connections && this.connections.length === 1) {\n                this.connectionReference = await this.hubService.GetConnectionReference(this.connections[0]);\n\n                // search any columns for an occurrence of the columnValidation.\n                cache.hub.dexihDatajobs.forEach(datajob => {\n                    if ( datajob.auditConnectionKey === this.connections[0].key) {\n                        this.datajobs.push({\n                            key: datajob.key,\n                            name: `${datajob.name} (datajob audit connection)`\n                        });\n                    }\n                });\n\n                cache.hub.dexihDatalinks.forEach(datalink => {\n                    if ( datalink.auditConnectionKey === this.connections[0].key) {\n                        this.datalinks.push({\n                            key: datalink.key,\n                            name: `${datalink.name} (datalink audit connection)`\n                        });\n                    }\n\n                    if (datalink.sourceDatalinkTable && datalink.sourceDatalinkTable.sourceTableKey) {\n                        let table = cache.getTable(datalink.sourceDatalinkTable.sourceTableKey);\n                        if (table && table.connectionKey === this.connections[0].key) {\n                            this.datalinks.push({\n                                key: datalink.key,\n                                name: `${datalink.name} (datalink source)`\n                            });\n                        }\n                    }\n\n                    datalink.dexihDatalinkTransforms.forEach(transform => {\n                        if (transform.joinDatalinkTable && transform.joinDatalinkTable.sourceDatalinkKey) {\n                            let table = cache.getTable(transform.joinDatalinkTable.sourceTableKey);\n                            if (table && table.connectionKey === this.connections[0].key) {\n                                this.datalinks.push({\n                                    key: datalink.key,\n                                    name: `${datalink.name} (datalink join)`\n                                });\n                            }\n                        }\n                    });\n\n                    datalink.dexihDatalinkTargets.forEach(target => {\n                        let table = cache.getTable(target.tableKey);\n                        if (table && table.connectionKey === this.connections[0].key) {\n                            this.datalinks.push({\n                                key: datalink.key,\n                                name: `${datalink.name} (datalink target)`\n                            });\n                        }\n                    });\n                });\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    async ngOnChanges() {\n        if (this.connections && this.connections.length === 1 ) {\n            this.connectionReference = await this.hubService.GetConnectionReference(this.connections[0]);\n        }\n    }\n\n    export() {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        this.connections.forEach(connection => { this.hubCache.cacheAddConnection(connection.key, hub); });\n\n        let filename = this.datalinks.length === 1 ? 'Connection - ' + this.connections[0].name + '.json' : 'connections.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    delete() {\n        this.hubService.deleteConnections(this.connections);\n    }\n\n    navigateToDatalink(datalink: DexihDatalink) {\n        this.router.navigate(['datalinks', 'datalink-edit', 'edit', datalink.key], { relativeTo: this.route.parent.parent });\n    }\n\n    navigateToDatajob(datajob: DexihDatajob) {\n        this.router.navigate(['datajobs', 'datajob-edit', datajob.key], { relativeTo: this.route.parent.parent });\n    }\n\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription, combineLatest} from 'rxjs';\n\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubCache } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { DexihView, eDataObjectType, DexihDashboard } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'actions-dashboard-button',\n    templateUrl: './actions-dashboard-button.component.html'\n})\n\nexport class ActionsDashboardButtonComponent implements OnInit, OnDestroy {\n    @Input() public dashboards: DexihDashboard[];\n    @Input() public pullRight = false;\n\n    private _hubCacheSubscription: Subscription;\n    public hubCache: HubCache;\n\n        tables = [];\n\n        constructor(\n            private authService: AuthService,\n            private hubService: HubService,\n                    private router: Router,\n                    private route: ActivatedRoute) { }\n\n        ngOnInit() {\n            this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n                this.hubCache = cache;\n            });\n\n        }\n\n        ngOnDestroy() {\n            if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n         }\n\n         delete() {\n            this.hubService.deleteDashboards(this.dashboards);\n        }\n\n        shareItems(isShared: boolean) {\n            this.hubService.shareItems(this.dashboards.map(c => c.key), eDataObjectType.Dashboard, isShared);\n        }\n\n        export() {\n            const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n            this.dashboards.forEach(dashboard => { this.hubCache.cacheAddDashboard(dashboard.key, hub); });\n\n            let filename = this.dashboards.length === 1 ? 'Dashboard - ' + this.dashboards[0].name + '.json' : 'dashboards.json';\n\n            this.hubService.exportHub(hub, filename);\n        }\n\n\n}\n","<ng-template [ngIf]=\"dashboards\">\n    <dexih-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-pie-chart\" [text]=\"dashboards.length > 1 ? 'Dashboards' : 'Dashboard'\" [pullRight]=\"pullRight\">\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Metadata</li>\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" [routerLink]=\"['dashboard-new']\" title=\"Create a new dashboard.\"><i class=\"fa fa-file-o\"></i> New</a></li>\n        <ng-template [ngIf]=\"dashboards.length > 0\">\n            <li *ngIf=\"dashboards.length == 1\">\n                <a class=\"dropdown-item\" [routerLink]=\"['dashboard-edit', dashboards[0].key]\" queryParamsHandling=\"merge\"><i class=\"fa fa-edit\"></i> Edit</a>\n            </li>\n\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"shareItems(true)\" title=\"Select the selected items as shared.\"><i class=\"fa fa-group\"></i> Share</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"shareItems(false)\" title=\"Select the selected items as private.\"><i class=\"fa fa-user-secret\"></i> Private</a></li>\n\n            <li><a class=\"dropdown-item\" (click)=\"export()\" title=\"Export the metadata for the selected apis to a local file.\"><i class=\"fa fa-save\"></i> Save Locally</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"delete()\" title=\"Delete the metadata for the selected apis.\"><span class=\"text-danger\"><i class=\"fa fa-trash-o text-danger\"></i> Delete</span></a></li>\n\n        </ng-template>\n    </dexih-button-dropdown>\n</ng-template>","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { HubCache } from '../../hub.models';\nimport { Subscription } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DexihDatajob, DexihHub } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n    selector: 'actions-datajob-button',\n    templateUrl: './actions-datajob-button.component.html'\n})\n\nexport class ActionsDatajobButtonComponent implements OnInit, OnDestroy {\n    @Input() public datajobs: DexihDatajob[];\n    @Input() public showEdit = true;\n    @Input() public pullRight = false;\n\n    public hubCache: HubCache;\n\n    private _hubCacheSubscription: Subscription;\n    private cancelToken: CancelToken = new CancelToken();\n\n\n    constructor(private hubService: HubService,\n        private router: Router,\n        private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n            this.hubCache = cache;\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    delete() {\n        this.hubService.deleteDatajobs(this.datajobs);\n    }\n\n    runDatajobs(truncate: boolean, resetIncremental: boolean) {\n        this.hubService.runDatajobs(this.datajobs, truncate, resetIncremental, null, null, this.cancelToken);\n    }\n\n    runDatajobsOptions() {\n        let datajobs = this.datajobs.map(c => c.key);\n        let datajobsString = datajobs.join('|');\n        this.router.navigate(['datajobs', 'datajob-run', datajobsString], { relativeTo: this.route.parent.parent });\n    }\n\n    export() {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        this.datajobs.forEach(datajob => { this.hubCache.cacheAddDatajob(datajob.key, hub); });\n\n        let filename = this.datajobs.length === 1 ? 'Datajob - ' + this.datajobs[0].name + '.json' : 'datajobs.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    activateDatajobs() {\n        this.hubService.activateDatajobs(this.datajobs, null, this.cancelToken);\n    }\n\n    cancelDatajobs() {\n        this.hubService.deactivateDatajobs(this.datajobs.map(c => c.key), this.cancelToken);\n    }\n\n    editDatajob(datajob: DexihDatajob) {\n        this.router.navigate(['datajob-edit', datajob.key], { relativeTo: this.route });\n    }\n}\n","<ng-template [ngIf]=\"datajobs\">\n    <dexih-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-table\" [text]=\"datajobs.length > 1 ? 'Datajobs' : 'Datajob'\" [pullRight]=\"pullRight\">\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Metadata</li>\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" [routerLink]=\"['datajob-new']\" title=\"Create a new datajob.\"><i class=\"fa fa-file-o\"></i> New</a></li>\n        <ng-template [ngIf]=\"datajobs.length > 0\">\n            <li *ngIf=\"showEdit && datajobs.length == 1\">\n                <a class=\"dropdown-item\" [routerLink]=\"['datajob-edit', datajobs[0].key]\" queryParamsHandling=\"merge\"><i class=\"fa fa-edit\"></i> Edit</a>\n            </li>\n\n            <li><a class=\"dropdown-item\" (click)=\"export()\" title=\"Export the metadata for the selected datajobs to a local file.\"><i class=\"fa fa-save\"></i> Save Locally</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"delete()\" title=\"Delete the metadata for the selected datajobs.\"><span class=\"text-danger\"><i class=\"fa fa-trash-o text-danger\"></i> Delete</span></a></li>\n    \n            <li class=\"list-group-item list-group-item-heading list-group-item-info\">Operations</li>\n            <li><a class=\"dropdown-item\" *ngIf=\"datajobs.length == 1\" [routerLink]=\"['results']\" [queryParams]=\"{datajobKeys: [datajobs[0].key]}\" title=\"Show the execution history \"><i class=\"fa fa-history\"></i> Execution History</a></li>\n\n            <ng-template [ngIf]=\"hubCache.canWrite\">\n                <li><a class=\"dropdown-item\" (click)=\"activateDatajobs()\" title=\"Activates the datajob schedules/triggers\"><span class=\"text-success\"><i class=\"fa fa-save\"></i> Activate Triggers</span> </a></li>\n                <li><a class=\"dropdown-item\" (click)=\"cancelDatajobs()\" title=\"Cancel & deactivate the datajob schedules/triggers\"><span class=\"text-danger\"><i class=\"fa fa-ban\"></i> Cancel/Deactivate Triggers</span> </a></li>\n                <li><a class=\"dropdown-item\"  (click)=\"runDatajobs(false, false)\" title=\"Run selected datajobs now.\"><i class=\"fa fa-bolt\"></i> Run</a></li>\n                <li><a class=\"dropdown-item\" (click)=\"runDatajobs(true, false)\" title=\"Run selected datajobs now (truncate target tables).\"><i class=\"fa fa-bolt\"></i> Run (truncate)</a></li>\n                <li><a class=\"dropdown-item\" (click)=\"runDatajobs(false, true)\" title=\"Run selected datajobs now (reset delta counter).\"><i class=\"fa fa-bolt\"></i> Run (reset delta)</a></li>\n                <li><a class=\"dropdown-item\" (click)=\"runDatajobsOptions()\" title=\"Run selected datajobs with options.\"><i class=\"fa fa-bolt\"></i> Run (options)</a></li>\n            </ng-template>\n\n        </ng-template>\n    </dexih-button-dropdown>\n</ng-template>","<ng-template [ngIf]=\"datalinks\">\n    <dexih-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-table\" [text]=\"datalinks.length > 1 ? 'Datalinks' : 'Datalink'\" [pullRight]=\"pullRight\">\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Metadata</li>\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" [routerLink]=\"['datalink-edit', 'new']\" title=\"Create a new datalink.\"><i class=\"fa fa-file-o\"></i> New</a></li>\n        <ng-template [ngIf]=\"datalinks.length > 0\">\n            <li *ngIf=\"showEdit && datalinks.length == 1\">\n                <a class=\"dropdown-item\" [routerLink]=\"['datalink-edit', 'edit', datalinks[0].key]\" queryParamsHandling=\"merge\"><i class=\"fa fa-edit\"></i> Edit</a>\n            </li>\n            <li *ngIf=\"hubCache.canWrite\">\n                <a class=\"dropdown-item\" [routerLink]=\"['datalink-edit', 'copy', datalinks[0].key]\" queryParamsHandling=\"merge\" title=\"Copy the datalink.\">\n                        <i class=\"fa fa-copy\"></i> Copy\n                </a>\n            </li>\n            <li *ngIf=\"hubCache.canWrite && showEdit\"><a class=\"dropdown-item\" (click)=\"shareItems(true)\" title=\"Select the selected datalinks as shared.\"><i class=\"fa fa-group\"></i> Share</a></li>\n            <li *ngIf=\"hubCache.canWrite && showEdit\"><a class=\"dropdown-item\" (click)=\"shareItems(false)\" title=\"Select the selected datalinks as private.\"><i class=\"fa fa-user-secret\"></i> Private</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"createDatajob()\" title=\"Create data job from selected datalinks\"><i class=\"fa fa-calendar\"></i> New Datajob</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"createDatalinkTests()\" title=\"Create test from the selected datalinks\"><i class=\"fa fa-calendar\"></i> New Datalink Tests</a></li>\n\n            <li><a class=\"dropdown-item\" (click)=\"export()\" title=\"Export the metadata for the selected datalinks to a local file.\"><i class=\"fa fa-save\"></i> Save Locally</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"delete()\" title=\"Delete the metadata for the selected datalinks.\"><span class=\"text-danger\"><i class=\"fa fa-trash-o text-danger\"></i> Delete</span></a></li>\n    \n            <li class=\"list-group-item list-group-item-heading list-group-item-info\">Operations</li>\n            <li *ngIf=\"datalink\">\n                <a class=\"dropdown-item\" [routerLink]=\"['datalink-preview', datalinks[0].key, false]\" queryParamsHandling=\"merge\"  title=\"Preview the data output from the datalink.\"><i class=\"fa fa-table\"></i> Preview Datalink</a>\n                <a class=\"dropdown-item\" [routerLink]=\"['datalink-preview', datalinks[0].key, true]\" queryParamsHandling=\"merge\"  title=\"Preview the data changes when the datalink is run.\"><i class=\"fa fa-table\"></i> Preview Datalink (changes)</a>\n                <a class=\"dropdown-item\" *ngFor=\"let table of targetTables\" [routerLink]=\"['table-preview', table.key]\" queryParamsHandling=\"merge\" [title]=\"'Preview the target table ' + table.name\"><i class=\"fa fa-table\"></i> Preview {{table.name}}</a>\n            </li>\n            <li><a class=\"dropdown-item\" *ngIf=\"datalinks.length == 1\" [routerLink]=\"['results']\" [queryParams]=\"{datalinkKeys: [datalinks[0].key]}\" title=\"Show the execution history \"><i class=\"fa fa-history\"></i> Execution History</a></li>\n\n            <li><a class=\"dropdown-item\" (click)=\"download()\" title=\"Download data from selected datalinks data to csv files.\"><i class=\"fa fa-cloud-download\"></i> Download Data</a></li>\n\n            <ng-template [ngIf]=\"hubCache.canWrite\">\n                <li><a class=\"dropdown-item\" (click)=\"cancelDatalinks()\" title=\"Cancel selected running datalinks.\"><span class=\"text-danger\"><i class=\"fa fa-ban\"></i> Cancel Datalinks</span> </a></li>\n                <li><a class=\"dropdown-item\"  (click)=\"runDatalinks(false, false)\" title=\"Run selected datalinks now.\"><i class=\"fa fa-bolt\"></i> Run</a></li>\n                <li><a class=\"dropdown-item\" (click)=\"runDatalinksOptions()\" title=\"Run selected datalinks with options.\"><i class=\"fa fa-bolt\"></i> Run (options)</a></li>\n            </ng-template>\n\n            <ng-template [ngIf]=\"datalinks.length == 1\">\n                <li class=\"list-group-item list-group-item-heading list-group-item-info\">Related</li>\n                <li *ngFor=\"let datalink of relatedDatalinks\">\n                    <a class=\"dropdown-item\" (click)=\"navigateToDatalink(datalink)\">(Datalink) {{datalink.name}}</a>\n                </li>\n                <li *ngFor=\"let datajob of relatedDatajobs\">\n                    <a class=\"dropdown-item\" (click)=\"navigateToDatajob(datajob)\">(DataJob) {{datajob.name}}</a>\n                </li>\n            </ng-template>\n        </ng-template>\n    </dexih-button-dropdown>\n</ng-template>","import { Component, Input, OnDestroy, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription} from 'rxjs';\nimport { HubCache } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { DexihDatalink, DexihTable, DexihDatajob, DexihHub, DownloadObject, eSourceType, eDownloadFormat, eDataObjectType } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n    selector: 'actions-datalink-button',\n    templateUrl: './actions-datalink-button.component.html'\n})\n\nexport class ActionsDatalinkButtonComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() public datalinks: Array<DexihDatalink>;\n    @Input() public showEdit = true;\n    @Input() public pullRight = false;\n\n    public hubCache: HubCache;\n\n    relatedDatalinks = [];\n    relatedDatajobs = [];\n\n    datalink: DexihDatalink;\n    targetTables: DexihTable[] = [];\n    private cancelToken: CancelToken = new CancelToken();\n\n    private _hubCacheSubscription: Subscription;\n\n    constructor(\n        private hubService: HubService,\n        private router: Router,\n        private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n            this.hubCache = cache;\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (!this.hubCache || !this.hubCache.isLoaded()) { return; }\n\n        if (this.datalinks && this.datalinks.length > 0) {\n            // search any columns for an occurrence of the datajob.\n            this.hubCache.hub.dexihDatajobs.forEach(datajob => {\n                datajob.dexihDatalinkSteps.forEach(step => {\n                    if ( step.datalinkKey === this.datalinks[0].key) {\n                        this.relatedDatajobs.push({\n                            key: datajob.key,\n                            name: `${datajob.name} (datajob step)`\n                        });\n                    }\n                });\n            });\n\n            this.hubCache.hub.dexihDatalinks.forEach(datalink => {\n                if (datalink.sourceDatalinkTable && datalink.sourceDatalinkTable.sourceDatalinkKey === this.datalinks[0].key) {\n                    this.relatedDatalinks.push({\n                        key: datalink.key,\n                        name: `${datalink.name} (datalink source)`\n                    });\n                }\n            });\n\n            this.datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === this.datalinks[0].key);\n            if (this.datalink) {\n                this.targetTables = [];\n                this.datalink.dexihDatalinkTargets.forEach(target => {\n                    if (target.tableKey) {\n                        let table = this.hubCache.getTable(target.tableKey);\n                        if (table) {\n                            this.targetTables.push(table);\n                        }\n                    }\n                });\n            } else {\n                this.targetTables = [];\n            }\n        } else {\n            this.relatedDatajobs = [];\n            this.relatedDatalinks = [];\n        }\n    }\n\n    navigateToDatalink(datalink: DexihDatalink) {\n        this.router.navigate(['datalinks', 'datalink-edit', 'edit', datalink.key], { relativeTo: this.route.parent.parent });\n    }\n\n    navigateToDatajob(datajob: DexihDatajob) {\n        this.router.navigate(['datajobs', 'datajob-edit', datajob.key], { relativeTo: this.route.parent.parent });\n    }\n\n    delete() {\n        this.hubService.deleteDatalinks(this.datalinks);\n    }\n\n    shareItems(isShared: boolean) {\n        this.hubService.shareItems(this.datalinks.map(c => c.key), eDataObjectType.Datalink, isShared);\n    }\n\n    async runDatalinks(truncateTarget: boolean, resetIncremental: boolean) {\n        await this.hubService.runDatalinks(this.datalinks.map(c => c.key), truncateTarget, resetIncremental, null, null, null,\n            this.cancelToken);\n    }\n\n    runDatalinksOptions() {\n        let datalinks = this.datalinks.map(c => c.key);\n        let datalinkString = datalinks.join('|');\n        this.router.navigate(['datalinks', 'datalink-run', datalinkString], { relativeTo: this.route.parent.parent });\n    }\n\n    cancelDatalinks() {\n        this.hubService.cancelDatalinks(this.datalinks.map(c => c.key), this.cancelToken).catch();\n    }\n\n    createDatajob() {\n        this.hubService.setNewDatajob(this.datalinks);\n        this.router.navigateByUrl(this.hubCache.getHubUrl() + '/datajobs/datajob-new');\n    }\n\n    createDatalinkTests() {\n        let datalinkKeys = this.datalinks.map(c => c.key).join('|');\n        this.router.navigateByUrl(this.hubCache.getHubUrl() + '/datalinkTests/datalinkTest-new/' + datalinkKeys);\n    }\n\n    export() {\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        this.datalinks.forEach(datalink => { this.hubCache.cacheAddDatalink(datalink.key, hub); });\n\n        let filename = this.datalinks.length === 1 ? 'Datalink - ' + this.datalinks[0].name + '.json' : 'datalinks.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    download() {\n        let downloadItems = new Array<DownloadObject>();\n\n        this.datalinks.forEach(c => {\n            let downloadObject = new DownloadObject();\n            downloadObject.objectKey = c.key;\n            downloadObject.objectType = eDataObjectType.Datalink;\n            downloadItems.push(downloadObject);\n        });\n        this.hubService.downloadData(downloadItems, true, eDownloadFormat.Csv, this.cancelToken)\n    }\n\n}\n","import { Component, Input, OnDestroy, OnInit, OnChanges } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { HubCache } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { DexihDatalinkTest, DexihDatalink } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n    selector: 'actions-datalinkTest-button',\n    templateUrl: './actions-datalinkTest-button.component.html'\n})\n\nexport class ActionsDatalinkTestButtonComponent implements OnInit, OnDestroy, OnChanges {\n    @Input() public datalinkTests: Array<DexihDatalinkTest>;\n    @Input() public showEdit = true;\n    @Input() public pullRight = false;\n\n    public hubCache: HubCache;\n\n    private cancelToken: CancelToken = new CancelToken();\n\n    relatedDatalinks = [];\n\n    private _hubCacheSubscription: Subscription;\n\n    constructor(\n        private hubService: HubService,\n        private router: Router,\n        private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n            this.hubCache = cache;\n        });\n    }\n\n    ngOnChanges() {\n        if (this.datalinkTests && this.datalinkTests.length === 1 && this.datalinkTests[0].dexihDatalinkTestSteps) {\n            let datalinkKeys = this.datalinkTests[0].dexihDatalinkTestSteps.map(c => c.datalinkKey);\n            this.hubCache.hub.dexihDatalinks.forEach(datalink => {\n                if (datalinkKeys.findIndex(c => c === datalink.key) >= 0) {\n                    this.relatedDatalinks.push({\n                        datalinkKey: datalink.key,\n                        name: `${datalink.name} (datalink source)`\n                    });\n                }\n            });\n        } else {\n            this.relatedDatalinks = [];\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    navigateToDatalink(datalink: DexihDatalink) {\n        this.router.navigate(['datalinks', 'datalink-edit', 'edit', datalink.key], { relativeTo: this.route.parent.parent });\n    }\n\n    delete() {\n        this.hubService.deleteDatalinkTests(this.datalinkTests);\n    }\n\n    run() {\n        this.hubService.runDatalinkTests(this.datalinkTests.map(c => c.key), this.cancelToken).catch();\n    }\n\n    snapshot() {\n        this.hubService.runDatalinkTestSnapshot(this.datalinkTests, this.cancelToken).catch();\n    }\n\n    cancel() {\n        this.hubService.cancelDatalinks(this.datalinkTests.map(c => c.key), this.cancelToken).catch();\n    }\n\n    export() {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        this.datalinkTests.forEach(datalinkTest => { this.hubCache.cacheAddDatalink(datalinkTest.key, hub); });\n\n        let filename = this.datalinkTests.length === 1 ? 'DatalinkTest - ' + this.datalinkTests[0].name + '.json' : 'datalinkTests.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n}\n","<ng-template [ngIf]=\"datalinkTests\">\n    <dexih-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-table\" [text]=\"datalinkTests.length > 1 ? 'Datalink Test' : 'Datalink Test'\" [pullRight]=\"pullRight\">\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Metadata</li>\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" [routerLink]=\"['datalinkTest-new']\" title=\"Create a new datalink test.\"><i class=\"fa fa-file-o\"></i> New</a></li>\n        <ng-template [ngIf]=\"datalinkTests.length > 0\">\n            <li *ngIf=\"showEdit && datalinkTests.length == 1\">\n                <a class=\"dropdown-item\" [routerLink]=\"['datalinkTest-edit', datalinkTests[0].key]\" queryParamsHandling=\"merge\"><i class=\"fa fa-edit\"></i> Edit</a>\n            </li>\n            <li *ngIf=\"hubCache.canWrite\">\n                <a class=\"dropdown-item\" [routerLink]=\"['datalinkTest-edit', 'copy', datalinkTests[0].key]\" queryParamsHandling=\"merge\" title=\"Copy the datalink test.\">\n                        <i class=\"fa fa-copy\"></i> Copy\n                </a>\n            </li>\n\n            <li><a class=\"dropdown-item\" (click)=\"export()\" title=\"Export the metadata for the selected datalink tests to a local file.\"><i class=\"fa fa-save\"></i> Save Locally</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"delete()\" title=\"Delete the metadata for the selected datalink tests.\"><span class=\"text-danger\"><i class=\"fa fa-trash-o text-danger\"></i> Delete</span></a></li>\n    \n            <li class=\"list-group-item list-group-item-heading list-group-item-info\">Operations</li>\n            <li><a class=\"dropdown-item\" *ngIf=\"datalinkTests.length == 1\" [routerLink]=\"['results']\" [queryParams]=\"{datalinkTestKeys: [datalinkTests[0].key]}\" title=\"Show the execution history \"><i class=\"fa fa-history\"></i> Test History</a></li>\n\n            <ng-template [ngIf]=\"hubCache.canWrite\">\n                <li><a class=\"dropdown-item\" (click)=\"cancel()\" title=\"Cancel selected running datalinks.\"><span class=\"text-danger\"><i class=\"fa fa-ban\"></i> Cancel Tests</span> </a></li>\n                <li><a class=\"dropdown-item\"  (click)=\"snapshot()\" title=\"Snapshot the selected datalinks now.\"><i class=\"fa fa-bolt\"></i> Run Snapshot</a></li>\n                <li><a class=\"dropdown-item\"  (click)=\"run()\" title=\"Run selected datalinks now.\"><i class=\"fa fa-bolt\"></i> Run Test</a></li>\n            </ng-template>\n\n            <ng-template [ngIf]=\"datalinkTests.length == 1\">\n                <li class=\"list-group-item list-group-item-heading list-group-item-info\">Related</li>\n                <li *ngFor=\"let datalink of relatedDatalinks\">\n                    <a class=\"dropdown-item\" (click)=\"navigateToDatalink(datalink)\">(Datalink) {{datalink.name}}</a>\n                </li>\n            </ng-template>\n        </ng-template>\n    </dexih-button-dropdown>\n</ng-template>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription, combineLatest} from 'rxjs';\n\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubService } from '../../hub.service';\nimport { DexihFileFormat } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'actions-fileFormat-button',\n    templateUrl: './actions-fileFormat-button.component.html'\n})\n\nexport class ActionsFileFormatButtonComponent implements OnInit, OnDestroy {\n    @Input() public fileFormat: DexihFileFormat;\n    @Input() public pullRight = false;\n\n    private _hubCacheSubscription: Subscription;\n\n        tables = [];\n\n        constructor(\n            private authService: AuthService,\n            private hubService: HubService,\n                    private router: Router,\n                    private route: ActivatedRoute) { }\n\n        ngOnInit() {\n            this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n                if (!cache.isLoaded()) { return; }\n\n                // search any columns for an occurrence of the columnValidation.\n                    cache.hub.dexihTables.forEach(tab => {\n                        let con = cache.hub.dexihConnections.find(c => c.key === tab.connectionKey);\n                        if (tab.fileFormatKey === this.fileFormat.key) {\n                            this.tables.push({\n                                name : `${tab.name} (${con ? con.name : 'undefined'})`,\n                                tableKey: tab.key,\n                            });\n                        }\n                });\n            });\n\n        }\n\n        ngOnDestroy() {\n            if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n         }\n\n        navigateToTable(col: any) {\n            this.router.navigate(['table-edit', col.tableKey], { relativeTo: this.route.parent.parent });\n        }\n\n}\n","<dexih-button-edit class=\"mr-1\" [routerLink]=\"['fileFormat-edit', fileFormat.key]\" queryParamsHandling=\"merge\"></dexih-button-edit>\n<dexih-button-dropdown *ngIf=\"tables.length > 0 || tables.length > 0\" buttonClass=\"btn-primary\" iconClass=\"fa fa-info-circle\" text=\"Used In\" [pullRight]=\"pullRight\">\n    <li *ngFor=\"let tab of tables\">\n        <a class=\"dropdown-item\" (click)=\"navigateToTable(tab)\">{{tab.name}}</a>\n    </li>\n</dexih-button-dropdown>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription} from 'rxjs';\n\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubService } from '../../hub.service';\nimport { DexihListOfValues } from '../../../shared/shared.models';\n\n\n@Component({\n    selector: 'actions-listOfValues-button',\n    templateUrl: './actions-listOfValues-button.component.html'\n})\n\nexport class ActionsListOfValuesButtonComponent implements OnInit, OnDestroy {\n    @Input() public listOfValues: DexihListOfValues;\n    @Input() public pullRight = false;\n\n    private _hubCacheSubscription: Subscription;\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n                private router: Router,\n                private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n\n            if (cache.isLoaded()) {\n                // search any columns for an occurrence of the columnValidation.\n            }\n        });\n\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n     }\n\n\n}\n","<dexih-button-edit class=\"mr-1\" [routerLink]=\"['listOfValues-edit', listOfValues.key]\" queryParamsHandling=\"merge\"></dexih-button-edit>\n","<ng-template [ngIf]=\"tables\">\n<dexih-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-table\" [text]=\"tables.length > 1 ? 'Tables' : 'Table'\" [pullRight]=\"pullRight\">\n    <li class=\"list-group-item list-group-item-heading list-group-item-info\">Metadata</li>\n    <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\"  [routerLink]=\"['table-new']\" title=\"Create a new table.\"><i class=\"fa fa-file-o\"></i> New</a></li>\n    <ng-template [ngIf]=\"tables.length > 0\">\n        <li *ngIf=\"showEdit && tables.length == 1\">\n            <a class=\"dropdown-item\" [routerLink]=\"['table-edit', tables[0].key]\" queryParamsHandling=\"merge\"><i class=\"fa fa-edit\"></i> Edit</a>\n        </li>\n        <li *ngIf=\"hubCache.canWrite && showEdit\"><a class=\"dropdown-item\" (click)=\"shareItems(true)\" title=\"Select the selected tables as shared.\"><i class=\"fa fa-group\"></i> Share</a></li>\n        <li *ngIf=\"hubCache.canWrite && showEdit\"><a class=\"dropdown-item\" (click)=\"shareItems(false)\" title=\"Select the selected tables as private.\"><i class=\"fa fa-user-secret\"></i> Private</a></li>\n\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"reImport()\" title=\"Re-Import the select tables from the source database\"><i class=\"fa fa-share-square-o\"></i> Re-Import Metadata</a></li>\n        <li><a class=\"dropdown-item\" (click)=\"export()\" title=\"Export the metadata for the selected tables to a local file.\"><i class=\"fa fa-save\"></i> Save Locally</a></li>\n        <li><a class=\"dropdown-item\" (click)=\"dbml()\" title=\"Create a dbml file from the selected tables.\"><i class=\"fa fa-comments\"></i> Export DBML</a></li>\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"delete()\" title=\"Delete the metadata for the selected tables.\"><span class=\"text-danger\"><i class=\"fa fa-trash-o text-danger\"></i> Delete</span></a></li>\n\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Operations</li>\n        <li *ngIf=\"tables.length == 1\">\n            <a class=\"dropdown-item\" [routerLink]=\"['table-preview', tables[0].key]\" queryParamsHandling=\"merge\"><i class=\"fa fa-table\"></i> Preview Data</a>\n        </li>\n        <li><a class=\"dropdown-item\" (click)=\"download()\" title=\"Download data from selected tables to csv files.\"><i class=\"fa fa-cloud-download\"></i> Download Data</a></li>\n\n        <li *ngIf=\"hubCache.canWrite && ( connectionReference?.connectionCategory == eConnectionCategory.File || connection?.purpose !== eConnectionPurpose.Source)\">\n            <a class=\"dropdown-item\" [routerLink]=\"[hubPath, 'files', 'manage']\" [queryParams]=\"{'tableKey': tables[0].key}\" queryParamsHandling=\"merge\"><i class=\"fa fa-upload\"></i> Upload/Download Files</a>\n        </li>\n\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"clear()\" title=\"Clear the data from the selected tables\"><i class=\"fa fa-trash\"></i><span class=\"text-danger\"> Truncate Table<span *ngIf=\"tables.length > 1\">s</span></span></a></li>\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"rebuild()\" title=\"Drop &amp; rebuild the tables\"><i class=\"fa fa-gears\"></i><span class=\"text-danger\"> Drop/Create Table<span *ngIf=\"tables.length > 1\">s</span></span></a></li>\n\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Datalinks</li>\n        <li *ngIf=\"hubCache.canWrite && tables.length == 1\"><a class=\"dropdown-item\" (click)=\"datalinkQuery()\" title=\"Create new datalinks using the selected tables as the source.\"><i class=\"fa fa-exchange\"></i> Datalink Query</a></li>\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"newDatalinks()\" title=\"Create new datalinks using the selected tables as the source.\"><i class=\"fa fa-exchange\"></i> New Datalinks (from selected tables)</a></li>\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Related</li>\n        <li *ngFor=\"let datalink of datalinksSource\">\n            <a class=\"dropdown-item\" [routerLink]=\"['datalink-edit', 'edit', datalink.key, 'source-table']\">(source) {{datalink.name}}</a>\n        </li>\n        <li *ngFor=\"let datalink of datalinksTarget\">\n            <a class=\"dropdown-item\"  [routerLink]=\"['datalink-edit', 'edit', datalink.key, 'target']\">(target) {{datalink.name}}</a>\n        </li>\n    </ng-template>\n</dexih-button-dropdown>\n</ng-template>","import { Component, OnInit, OnChanges, OnDestroy, Input, Output, EventEmitter } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HubService } from '../../hub.service';\nimport { HubCache } from '../../hub.models';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { DexihTable, eConnectionCategory, DexihConnection, ConnectionReference, DexihDatalink,\n    DownloadObject, eSourceType, eDownloadFormat, DexihHub, eDataObjectType, eConnectionPurpose } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n    selector: 'actions-table-button',\n    templateUrl: './actions-table-button.component.html'\n})\n\nexport class ActionsTableButtonComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() public tables: DexihTable[] = [];\n    @Input() public refreshTables = false;\n    @Input() public showEdit = true;\n    @Input() public pullRight = false;\n\n    @Output() public changedTables: EventEmitter<Array<DexihTable>> = new EventEmitter<Array<DexihTable>>();\n\n    private _subscription: Subscription;\n    private cancelToken: CancelToken = new CancelToken()\n    private hubCache: HubCache;\n    eConnectionCategory = eConnectionCategory;\n\n    public connection: DexihConnection;\n    public connectionReference: ConnectionReference;\n    public eConnectionPurpose = eConnectionPurpose;\n\n    datalinksSource: Array<DexihDatalink> = [];\n    datalinksTarget: Array<DexihDatalink> = [];\n\n    public hubPath: string;\n    public canWrite: boolean;\n\n    constructor(private hubService: HubService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this._subscription = combineLatest(\n            this.hubService.getHubCacheObservable(),\n        ).subscribe(async result => {\n            this.hubCache = result[0];\n\n            if (this.hubCache.isLoaded()) {\n                this.hubPath = this.hubCache.getHubUrl();\n\n                this.canWrite = this.hubCache.canWrite;\n                if (this.tables && this.tables.length === 1) {\n                    this.connection = this.hubCache.getConnection(this.tables[0].connectionKey);\n                    this.connectionReference = await this.hubService.GetConnectionReference(this.connection);\n                }\n            }\n        });\n     }\n\n     async ngOnChanges() {\n        if (this.tables && this.hubCache) {\n            this.datalinksSource = this.hubCache.hub.dexihDatalinks\n                .filter(c => this.tables.find(t => t.key === c.sourceDatalinkTable.sourceTableKey));\n\n            this.datalinksTarget = this.hubCache.hub.dexihDatalinks.filter(c => {\n                for (let target of c.dexihDatalinkTargets) {\n                    if (this.tables.find(t => t.key === target.tableKey)) { return true; }\n                }\n            });\n\n            if (this.tables.length === 1) {\n                this.connection = this.hubCache.getConnection(this.tables[0].connectionKey);\n                this.connectionReference = await this.hubService.GetConnectionReference(this.connection);\n            }\n        }\n     }\n\n     ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.cancelToken.cancel();\n     }\n\n     getTables(): DexihTable[] {\n\n        if (!this.refreshTables) {\n            return this.tables;\n        }\n\n        let tableKeys = this.tables.map(c => c.key);\n        let tables = tableKeys.map(c => this.hubCache.getTable(c));\n        return tables;\n     }\n\n     getTableKeys(): number[] {\n        if (!this.refreshTables) {\n            return this.tables.map(c => c.key);\n        }\n\n        return this.tables.map(c => c.key);\n    }\n\n    reImport() {\n        this.hubService.reImportTables(this.getTableKeys(), true, this.cancelToken).then(tables => {\n            if (tables) {\n                let tableNames = tables.map(c => c.name).join(', ');\n                this.hubService.addHubSuccessMessage(`Tables ${tableNames} imported successfully.`);\n                this.changedTables.emit(tables);\n            }\n        }).catch();\n    }\n\n    clear() {\n        if (this.canWrite) {\n            this.hubService.clearTables(this.getTableKeys(), this.cancelToken).then(tables => {\n                if (tables) {\n                    let tableNames = this.tables.map(c => c.name).join(', ');\n                    this.hubService.addHubSuccessMessage(`Tables ${tableNames} have been truncated.`);\n                }\n            }).catch();\n        }\n    }\n\n    rebuild() {\n        if (this.canWrite) {\n            this.hubService.createTables(this.getTables(), this.cancelToken).then(tables => {\n                if (tables) {\n                    let tableNames = this.tables.map(c => c.name).join(', ');\n                    this.hubService.addHubSuccessMessage(`Tables ${tableNames} have been dropped & recreated.`);\n                }\n            });\n        }\n    }\n\n    delete() {\n        this.hubService.deleteTables(this.getTables());\n    }\n\n    dbml() {\n        this.hubService.getDbml(this.getTables());\n    }\n\n    shareItems(isShared: boolean) {\n        this.hubService.shareItems(this.getTableKeys(), eDataObjectType.Table, isShared);\n    }\n\n    newDatalinks() {\n        let tableKeys = this.getTableKeys().join('|');\n        this.router.navigate(['/hub', this.hubCache.hub.hubKey, 'tables', 'datalink-new', tableKeys, 0],\n            { relativeTo: this.route.root });\n        // this.router.navigate(['datalink-new', tableKeys, 0], { relativeTo: this.route.parent });\n    }\n\n    datalinkQuery() {\n        this.router.navigate(['/hub', this.hubCache.hub.hubKey, 'datalinks', 'datalink-edit', 'sourceTable', this.tables[0].key],\n        { relativeTo: this.route.root });\n    }\n\n    download() {\n        let downloadItems = new Array<DownloadObject>();\n\n        this.getTables().forEach(c => {\n            let downloadObject = new DownloadObject();\n            downloadObject.objectKey = c.key;\n            downloadObject.objectType = eDataObjectType.Table;\n            downloadItems.push(downloadObject);\n        });\n        this.hubService.downloadData(downloadItems, true, eDownloadFormat.Csv, this.cancelToken)\n    }\n\n    export() {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        let tables = this.getTables();\n        tables.forEach(table => { this.hubCache.cacheAddTable(table.key, hub); });\n\n        let filename = tables.length === 1 ? 'Table - ' + tables[0].name + '.json' : 'tables.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription, combineLatest} from 'rxjs';\n\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubCache } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { DexihView, eDataObjectType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'actions-view-button',\n    templateUrl: './actions-view-button.component.html'\n})\n\nexport class ActionsViewButtonComponent implements OnInit, OnDestroy {\n    @Input() public views: DexihView[];\n    @Input() public pullRight = false;\n\n    private _hubCacheSubscription: Subscription;\n    public hubCache: HubCache;\n\n        tables = [];\n\n        constructor(\n            private authService: AuthService,\n            private hubService: HubService,\n                    private router: Router,\n                    private route: ActivatedRoute) { }\n\n        ngOnInit() {\n            this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n                this.hubCache = cache;\n            });\n\n        }\n\n        ngOnDestroy() {\n            if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n         }\n\n         delete() {\n            this.hubService.deleteViews(this.views);\n        }\n\n        shareItems(isShared: boolean) {\n            this.hubService.shareItems(this.views.map(c => c.key), eDataObjectType.View, isShared);\n        }\n\n        export() {\n            const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n            this.views.forEach(view => { this.hubCache.cacheAddView(view.key, hub); });\n\n            let filename = this.views.length === 1 ? 'View - ' + this.views[0].name + '.json' : 'views.json';\n\n            this.hubService.exportHub(hub, filename);\n        }\n\n}\n","<ng-template [ngIf]=\"views\">\n    <dexih-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-bar-chart\" [text]=\"views.length > 1 ? 'Views' : 'View'\" [pullRight]=\"pullRight\">\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Metadata</li>\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" [routerLink]=\"['view-new']\" title=\"Create a new view.\"><i class=\"fa fa-file-o\"></i> New</a></li>\n        <ng-template [ngIf]=\"views.length > 0\">\n            <li *ngIf=\"views.length == 1\">\n                <a class=\"dropdown-item\" [routerLink]=\"['view-edit', views[0].key]\" queryParamsHandling=\"merge\"><i class=\"fa fa-edit\"></i> Edit</a>\n            </li>\n\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"shareItems(true)\" title=\"Select the selected items as shared.\"><i class=\"fa fa-group\"></i> Share</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"shareItems(false)\" title=\"Select the selected items as private.\"><i class=\"fa fa-user-secret\"></i> Private</a></li>\n\n            <li><a class=\"dropdown-item\" (click)=\"export()\" title=\"Export the metadata for the selected apis to a local file.\"><i class=\"fa fa-save\"></i> Save Locally</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"delete()\" title=\"Delete the metadata for the selected apis.\"><span class=\"text-danger\"><i class=\"fa fa-trash-o text-danger\"></i> Delete</span></a></li>\n\n        </ng-template>\n    </dexih-button-dropdown>\n</ng-template>","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { SharedModule } from '../../shared/shared.module';\nimport { CancelButtonComponent, SaveButtonComponent } from './';\nimport { NewDatalinkButtonComponent } from './new-datalink-button/new-datalink-button.component';\nimport { NewConnectionButtonComponent } from './new-connection-button/new-connection-button.component';\nimport { NewTableButtonComponent} from './new-table-button/new-table-button.component';\nimport { ActionsDatajobButtonComponent } from './actions-datajob-button/actions-datajob-button.component'\nimport { ActionsDatalinkButtonComponent } from './actions-datalink-button/actions-datalink-button.component'\nimport { ActionsConnectionButtonComponent } from './actions-connection-button/actions-connection-button.component';\nimport { ActionsTableButtonComponent } from './actions-table-button/actions-table-button.component';\nimport { ActionsFileFormatButtonComponent } from './actions-fileFormat-button/actions-fileFormat-button.component';\nimport { ActionsColumnValidationButtonComponent } from './actions-columnValidation-button/actions-columnValidation-button.component';\nimport { ActionsDatalinkTestButtonComponent } from './actions-datalinkTest-button/actions-datalinkTest-button.component';\nimport { ActionsViewButtonComponent } from './actions-view-button/actions-view-button.component';\nimport { ActionsApiButtonComponent } from './actions-api-button/actions-api-button.component';\nimport { ActionsDashboardButtonComponent } from './actions-dashboard-button/actions-dashboard-button.component';\nimport { ActionsListOfValuesButtonComponent } from './actions-listOfValues-button/actions-listOfValues-button.component';\nimport { TagsUpdateButtonComponent } from './tags-update-button/tags-update-button.component';\nimport { TagsFilterButtonComponent } from './tags-filter-button/tags-filter-button.component';\nimport { DependentItemsButtonComponent } from './dependent-items/dependent-items-button.component';\nimport { ConnectionEditButtonComponent } from './connection-edit-button/connection-edit-button.component';\nimport { DatalinkEditButtonComponent } from './datalink-edit-button/datalink-edit-button.component';\nimport { TableEditButtonComponent } from './table-edit-button/table-edit-button.component';\nimport { ViewEditButtonComponent } from './view-edit-button/view-edit-button.component';\nimport { CustomFunctionEditButtonComponent } from './customFunction-edit-button/customFunction-edit-button.component';\nimport { ColumnValidationEditButtonComponent } from './columnValidation-edit-button/columnValidation-edit-button.component';\n\n@NgModule({\n    imports: [\n        SharedModule\n    ],\n    exports: [\n        CancelButtonComponent,\n        SaveButtonComponent,\n        NewDatalinkButtonComponent,\n        NewConnectionButtonComponent,\n        NewTableButtonComponent,\n        ActionsDatajobButtonComponent,\n        ActionsDatalinkButtonComponent,\n        ActionsConnectionButtonComponent,\n        ActionsTableButtonComponent,\n        ActionsFileFormatButtonComponent,\n        ActionsColumnValidationButtonComponent,\n        ActionsDatalinkTestButtonComponent,\n        ActionsViewButtonComponent,\n        ActionsApiButtonComponent,\n        ActionsDashboardButtonComponent,\n        ActionsListOfValuesButtonComponent,\n        TagsUpdateButtonComponent,\n        TagsFilterButtonComponent,\n        DependentItemsButtonComponent,\n        ConnectionEditButtonComponent,\n        TableEditButtonComponent,\n        DatalinkEditButtonComponent,\n        ViewEditButtonComponent,\n        CustomFunctionEditButtonComponent,\n        ColumnValidationEditButtonComponent\n    ],\n    declarations: [\n        CancelButtonComponent,\n        SaveButtonComponent,\n        NewDatalinkButtonComponent,\n        NewConnectionButtonComponent,\n        NewTableButtonComponent,\n        ActionsDatajobButtonComponent,\n        ActionsDatalinkButtonComponent,\n        ActionsConnectionButtonComponent,\n        ActionsTableButtonComponent,\n        ActionsFileFormatButtonComponent,\n        ActionsColumnValidationButtonComponent,\n        ActionsDatalinkTestButtonComponent,\n        ActionsViewButtonComponent,\n        ActionsApiButtonComponent,\n        ActionsDashboardButtonComponent,\n        ActionsListOfValuesButtonComponent,\n        TagsUpdateButtonComponent,\n        TagsFilterButtonComponent,\n        DependentItemsButtonComponent,\n        ConnectionEditButtonComponent,\n        TableEditButtonComponent,\n        DatalinkEditButtonComponent,\n        ViewEditButtonComponent,\n        CustomFunctionEditButtonComponent,\n        ColumnValidationEditButtonComponent\n    ],\n    providers: [],\n})\nexport class ButtonsModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { HubFormsService } from '../../hub.forms.service';\n\n@Component({\n    selector: 'cancel-button',\n    templateUrl: './cancel-button.component.html'\n})\n\nexport class CancelButtonComponent implements OnInit {\n    @Input() formsService: HubFormsService;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<dexih-button-cancel (click)=\"formsService.cancel()\"></dexih-button-cancel>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\n\n@Component({\n    selector: 'columnValidation-edit-button',\n    templateUrl: './columnValidation-edit-button.component.html'\n})\nexport class ColumnValidationEditButtonComponent implements OnInit {\n    @Input() key = null;\n\n    public hubPath: string;\n\n    constructor(private hubService: HubService) { }\n\n    ngOnInit() {\n        this.hubPath = this.hubService.getHubUrl();\n    }\n}\n","<a [routerLink]=\"[hubPath, 'columnValidation-edit', key]\" *ngIf=\"key\" > \n    <i class=\"fa fa-edit\"></i> \n    Edit \n</a>","import { Component, OnInit, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\n\n@Component({\n    selector: 'connection-edit-button',\n    templateUrl: './connection-edit-button.component.html'\n})\nexport class ConnectionEditButtonComponent implements OnInit {\n    @Input() key = null;\n\n    public hubPath: string;\n\n    constructor(private hubService: HubService) { }\n\n    ngOnInit() {\n        this.hubPath = this.hubService.getHubUrl();\n    }\n}\n","<a [routerLink]=\"[hubPath, 'connection-edit', key]\" *ngIf=\"key\" > \n    <i class=\"fa fa-edit\"></i> \n    Edit \n</a>","import { Component, OnInit, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\n\n@Component({\n    selector: 'customFunction-edit-button',\n    templateUrl: './customFunction-edit-button.component.html'\n})\nexport class CustomFunctionEditButtonComponent implements OnInit {\n    @Input() key = null;\n\n    public hubPath: string;\n\n    constructor(private hubService: HubService) { }\n\n    ngOnInit() {\n        this.hubPath = this.hubService.getHubUrl();\n    }\n}\n","<a [routerLink]=\"[hubPath, 'customFunction-edit', key]\" *ngIf=\"key\" > \n    <i class=\"fa fa-edit\"></i> \n    Edit \n</a>","import { Component, OnInit, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\n\n@Component({\n    selector: 'datalink-edit-button',\n    templateUrl: './datalink-edit-button.component.html'\n})\nexport class DatalinkEditButtonComponent implements OnInit {\n    @Input() key = null;\n\n    public hubPath: string;\n\n    constructor(private hubService: HubService) { }\n\n    ngOnInit() {\n        this.hubPath = this.hubService.getHubUrl();\n    }\n}\n","<a [routerLink]=\"[hubPath, 'datalink-edit', 'edit', key]\" *ngIf=\"key\" > \n    <i class=\"fa fa-edit\"></i> \n    Edit \n</a>","<dexih-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-sitemap\" text=\"Dependencies\" [pullRight]=\"pullRight\">\n    <li *ngIf=\"dependent.dexihDatalinks.length === 0 && dependent.dexihTables.length === 0 && dependent.dexihConnections.length === 0 &&\n        dependent.dexihViews.length === 0 && dependent.dexihListOfValues.length === 0 && dependent.dexihCustomFunctions.length === 0 && \n        dependent.dexihHubVariables.length === 0 && dependent.dexihFileFormats.length === 0\"\n        class=\"dropdown-item\">\n        There are no dependencies\n    </li>\n\n    <li *ngIf=\"dependent.dexihDatalinks.length > 0\" class=\"list-group-item list-group-item-heading list-group-item-info\">Datalinks</li>\n    <li *ngFor=\"let item of dependent.dexihDatalinks\">\n        <a class=\"dropdown-item\" [routerLink]=\"[hubPath, 'datalinks', 'datalink-edit', 'edit', item.key]\">\n            {{item.name}}\n        </a>\n    </li>\n    \n    <li *ngIf=\"dependent.dexihTables.length > 0\" class=\"list-group-item list-group-item-heading list-group-item-info\">Tables</li>\n    <li *ngFor=\"let item of dependent.dexihTables\">\n        <a class=\"dropdown-item\" [routerLink]=\"[hubPath, 'tables', 'table-edit', item.key]\">\n            {{item.logicalName}}\n        </a>\n    </li>\n\n    <li *ngIf=\"dependent.dexihConnections.length > 0\" class=\"list-group-item list-group-item-heading list-group-item-info\">Connections</li>\n    <li *ngFor=\"let item of dependent.dexihConnections\">\n        <a class=\"dropdown-item\" [routerLink]=\"[hubPath, 'connections', 'connection-edit', item.key]\">\n            {{item.name}}\n        </a>\n    </li>\n\n    <li *ngIf=\"dependent.dexihViews.length > 0\" class=\"list-group-item list-group-item-heading list-group-item-info\">Views</li>\n    <li *ngFor=\"let item of dependent.dexihViews\">\n        <a class=\"dropdown-item\" [routerLink]=\"[hubPath, 'views', 'view-edit', item.key]\">\n            {{item.name}}\n        </a>\n    </li>\n\n    <li *ngIf=\"dependent.dexihListOfValues.length > 0\" class=\"list-group-item list-group-item-heading list-group-item-info\">List of Values</li>\n    <li *ngFor=\"let item of dependent.dexihListOfValues\">\n        <a class=\"dropdown-item\" [routerLink]=\"[hubPath, 'listOfValues', 'listOfValue-edit', item.key]\">\n            {{item.name}}\n        </a>\n    </li>\n\n    <li *ngIf=\"dependent.dexihCustomFunctions.length > 0\" class=\"list-group-item list-group-item-heading list-group-item-info\">Custom Functions</li>\n    <li *ngFor=\"let item of dependent.dexihCustomFunctions\">\n        <a class=\"dropdown-item\" [routerLink]=\"[hubPath, 'customFunctions', 'customFunction-edit', item.key]\">\n            {{item.name}}\n        </a>\n    </li>\n\n    <li *ngIf=\"dependent.dexihHubVariables.length > 0\" class=\"list-group-item list-group-item-heading list-group-item-info\">Variables</li>\n    <li *ngFor=\"let item of dependent.dexihHubVariables\">\n        <a class=\"dropdown-item\" [routerLink]=\"[hubPath, 'hubVariables', 'hubVariable-edit', item.key]\">\n            {{item.name}}\n        </a>\n    </li>\n\n    <li *ngIf=\"dependent.dexihFileFormats.length > 0\" class=\"list-group-item list-group-item-heading list-group-item-info\">File Formats</li>\n    <li *ngFor=\"let item of dependent.dexihFileFormats\">\n        <a class=\"dropdown-item\" [routerLink]=\"[hubPath, 'fileFormats', 'fileFormat-edit', item.key]\">\n            {{item.name}}\n        </a>\n    </li>\n</dexih-button-dropdown>\n","import { Component, Input, OnDestroy, OnInit, OnChanges } from '@angular/core';\nimport { Subscription ,  combineLatest} from 'rxjs';\n\nimport {HubCache, sharedObjectProperties } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { ConnectionReference, eConnectionCategory, eSharedObjectType, DexihHub } from '../../../shared/shared.models';\n\n\n@Component({\n    selector: 'dependent-items-button',\n    templateUrl: './dependent-items-button.component.html'\n})\n\nexport class DependentItemsButtonComponent implements OnInit, OnDestroy, OnChanges {\n    @Input() public objectType: eSharedObjectType\n    @Input() public key: number;\n    @Input() public pullRight = false;\n\n    private _subscription: Subscription;\n\n    public hubCache: HubCache;\n    public hubPath: string;\n\n    public dependent: DexihHub;\n    public sharedObjectProperties = sharedObjectProperties;\n\n    constructor(\n        private hubService: HubService) { }\n\n    ngOnInit() {\n        this._subscription = combineLatest(\n            this.hubService.getHubCacheObservable(),\n        ).subscribe(async result => {\n            this.hubCache = result[0];\n\n            if (!this.hubCache.isLoaded()) {\n                return;\n            }\n\n            this.hubPath = this.hubCache.getHubUrl();\n\n            this.dependent = new DexihHub();\n            this.hubCache.cacheAddObjectFromKey(this.objectType, this.key, this.dependent)\n\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    ngOnChanges() {\n\n    }\n\n}\n","export {CancelButtonComponent} from './cancel-button/cancel-button.component';\nexport {SaveButtonComponent} from './save-button/save-button.component';\n","import { Component, OnInit, Input } from '@angular/core';\nimport { eConnectionPurpose } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'new-connection-button',\n    templateUrl: './new-connection-button.component.html'\n})\n\nexport class NewConnectionButtonComponent implements OnInit {\n    @Input() pullRight = true;\n\n    eConnectionPurpose = eConnectionPurpose;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<dexih-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-file-o\" text=\"New\" [pullRight]=\"pullRight\">\n        <li>\n            <a class=\"dropdown-item\" [routerLink]=\"['connection-new', eConnectionPurpose.Source]\">Source Database/Service</a>\n        </li>\n        <li>\n            <a class=\"dropdown-item\"  [routerLink]=\"['connection-new', eConnectionPurpose.Managed]\">Managed Database</a>\n        </li>\n        <li>\n            <a class=\"dropdown-item\" [routerLink]=\"['connection-new', eConnectionPurpose.Target]\">Target Connection</a>\n        </li>\n</dexih-button-dropdown>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n    selector: 'new-datalink-button',\n    templateUrl: './new-datalink-button.component.html'\n})\n\nexport class NewDatalinkButtonComponent implements OnInit {\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<dexih-button-new [routerLink]=\"['datalink-edit', 'new']\"></dexih-button-new>\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { Subscription } from 'rxjs';\nimport { DexihConnection } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'new-table-button',\n    templateUrl: './new-table-button.component.html'\n})\n\nexport class NewTableButtonComponent implements OnInit, OnDestroy {\n    @Input() pullRight = true;\n\n    private _hubCacheSubscription: Subscription;\n\n    connections: Array<DexihConnection>;\n\n    constructor(private hubService: HubService) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n            if (cache.isLoaded()) {\n                this.connections = cache.hub.dexihConnections;\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n      }\n}\n","<dexih-button-dropdown *ngIf=\"connections\" buttonClass=\"btn-primary\" iconClass=\"fa fa-file-o\" text=\"New\" [pullRight]=\"pullRight\"> \n    <li *ngFor=\"let connection of connections\">\n        <a class=\"dropdown-item\" [routerLink]=\"['table-new', connection.key]\">Add to {{connection.name}}</a>\n    </li>\n</dexih-button-dropdown>","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { HubService } from '../../hub.service';\nimport { Subscription } from 'rxjs';\nimport { HubCache } from '../../hub.models';\n\n@Component({\n    selector: 'save-button',\n    templateUrl: './save-button.component.html'\n})\n\nexport class SaveButtonComponent implements OnInit, OnDestroy {\n    @Input() formsService: HubFormsService;\n\n    private _hubCacheSubscription: Subscription;\n    public hubCache: HubCache;\n\n    constructor(public hubService: HubService) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n            this.hubCache = cache;\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n    }\n}\n","<dexih-button-splitdropdown *ngIf=\"hubCache.canWrite\" [disabled]=\"!formsService.hasChanged\" buttonClass=\"btn-primary\" iconClass=\"fa fa-cloud\" text=\"Save\" (buttonClick)=\"formsService.save()\" [pullRight]=\"true\" title=\"Save to the Hub\">\n        <li><a class=\"dropdown-item\" (click)=\"formsService.save(false, false)\" title=\"Save in the hub\"><i class=\"fa fa-cloud\"></i> Save</a></li>\n        <li><a class=\"dropdown-item\" (click)=\"formsService.saveLocal()\" title=\"Export as a local file\"><i class=\"fa fa-floppy-o\"></i> Save as file</a></li>\n        <li><a class=\"dropdown-item\" (click)=\"formsService.save(false, true)\" title=\"Save another version\"><i class=\"fa fa-plus-circle\"></i> Save As...</a></li>\n</dexih-button-splitdropdown>\n<dexih-button *ngIf=\"!hubCache.canWrite\" (click)=\"formsService.saveLocal()\" iconClass=\"fa fa-floppy-o\"></dexih-button>","import { Component, OnInit, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\n\n@Component({\n    selector: 'table-edit-button',\n    templateUrl: './table-edit-button.component.html'\n})\nexport class TableEditButtonComponent implements OnInit {\n    @Input() key = null;\n\n    public hubPath: string;\n\n    constructor(private hubService: HubService) { }\n\n    ngOnInit() {\n        this.hubPath = this.hubService.getHubUrl();\n    }\n}\n","<a [routerLink]=\"[hubPath, 'table-edit', key]\" *ngIf=\"key\" > \n    <i class=\"fa fa-edit\"></i> \n    Edit \n</a>","import { Component, OnDestroy, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Subscription} from 'rxjs';\nimport { HubCache } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { DexihTag } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\nclass TagState {\n    public tag: DexihTag\n    public isChecked = false;\n}\n\n@Component({\n    selector: 'tags-filter-button',\n    templateUrl: './tags-filter-button.component.html'\n})\nexport class TagsFilterButtonComponent implements OnInit, OnDestroy {\n    @Output() public tags = new EventEmitter<DexihTag[]>();\n\n    public hubCache: HubCache;\n    public tagStates: TagState[];\n\n    private _hubCacheSubscription: Subscription;\n\n    private cancelToken: CancelToken = new CancelToken();\n\n    constructor(\n        private hubService: HubService) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n            if (cache.isLoaded) {\n                this.hubCache = cache;\n\n                let dexihTags = this.hubCache.hub.dexihTags;\n\n                this.tagStates = new Array(dexihTags.length);\n                for (let i = 0; i < this.tagStates.length; i++) {\n                    let tag = dexihTags[i];\n                    this.tagStates[i] = new TagState();\n                    this.tagStates[i].tag = tag;\n                    this.tagStates[i].isChecked = false;\n                }\n            }\n        });\n    }\n\n\n    clear() {\n        this.tagStates.forEach(c => c.isChecked = false);\n        this.tagChange();\n    }\n\n    tagChange() {\n        let selectedTags = this.tagStates.filter(c => c.isChecked).map(c => c.tag);\n        this.tags.emit(selectedTags);\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n}\n","<ng-template [ngIf]=\"tagStates\">\n    <dexih-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-tags\" text=\"Tag Filters\" [pullRight]=\"pullRight\">\n      <a class=\"dropdown-item\" (click)=\"clear()\" title=\"Clear tag filters\"><span class=\"text-danger\"><i class=\"fa fa-trash-o text-danger\"></i> Clear Filter</span></a>\n        <a *ngFor=\"let tagState of tagStates\" class=\"dropdown-item\" >\n            <div class=\"input-group\">\n              <input type=\"checkbox\" class=\"form-check-input\" [(ngModel)]=\"tagState.isChecked\" (change)=\"tagChange(tagState)\" >\n              <h5><span class=\"badge\" [ngStyle]=\"{'background-color': tagState.tag.color}\" ><span class=\"blend-text\">{{tagState.tag.name}}</span></span></h5>\n            </div>\n          </a>\n    </dexih-button-dropdown>\n</ng-template>","import { Component, Input, OnDestroy, OnInit, OnChanges } from '@angular/core';\nimport { Subscription} from 'rxjs';\nimport { HubCache } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { eSharedObjectType, DexihTag, eSharedObjectTypeItems, DexihHubNamedEntity } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\nclass TagState {\n    public tag: DexihTag\n    public isChecked = false;\n    public isIndeterminate = false;\n}\n\n@Component({\n    selector: 'tags-update-button',\n    templateUrl: './tags-update-button.component.html'\n})\nexport class TagsUpdateButtonComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() public objectType: eSharedObjectType;\n    @Input() public objects: DexihHubNamedEntity[];\n\n    public hubCache: HubCache;\n    public tags: TagState[];\n    public objectTypeName: string;\n\n    private _hubCacheSubscription: Subscription;\n\n    private cancelToken: CancelToken = new CancelToken();\n\n    constructor(\n        private hubService: HubService) { }\n\n    ngOnInit() {\n        this.objectTypeName = eSharedObjectTypeItems.find(c => c.key === this.objectType)?.name;\n\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n            if (cache.isLoaded) {\n                this.hubCache = cache;\n                this.updateTags();\n            }\n        });\n    }\n\n    ngOnChanges(): void {\n        if (this.hubCache?.isLoaded) {\n            this.updateTags();\n        }\n    }\n\n    updateTags() {\n        let objectTags = this.hubCache.hub.dexihTagObjects.filter(c =>\n            c.objectType === this.objectType &&\n            this.objects.findIndex(d => d.key === c.objectKey) >= 0);\n\n        let dexihTags = this.hubCache.hub.dexihTags;\n\n        this.tags = new Array(dexihTags.length);\n        for (let i = 0; i < this.tags.length; i++) {\n            let tag = dexihTags[i];\n            this.tags[i] = new TagState();\n            this.tags[i].tag = tag;\n            let matchingTags = objectTags.filter(c => c.tagKey === tag.key);\n            if (matchingTags.length > 0 && matchingTags.length === this.objects.length) {\n                this.tags[i].isChecked = true;\n                this.tags[i].isIndeterminate = false;\n            } else if (matchingTags.length > 0) {\n                this.tags[i].isChecked = false;\n                this.tags[i].isIndeterminate = true;\n            } else {\n                this.tags[i].isChecked = false;\n                this.tags[i].isIndeterminate = false;\n            }\n        }\n    }\n\n    delete() {\n        this.hubService.deleteTagObjects(this.objects.map(c => {\n            return {objectType: this.objectType, objectKey: c.key};\n        }));\n    }\n\n    tagChange(tag: TagState) {\n        this.hubService.saveTagObjects(tag.tag.key, tag.isChecked,\n            this.objects.map(c => {\n                return {objectType: this.objectType, objectKey: c.key};\n            }));\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n}\n","<ng-template [ngIf]=\"tags\">\n    <dexih-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-tags\" [text]=\"'Tag ' + objectTypeName + 's'\" [pullRight]=\"pullRight\">\n        <a class=\"dropdown-item\" (click)=\"delete()\" title=\"Clear tags from selected {{objectTypeName}}s\"><span class=\"text-danger\"><i class=\"fa fa-trash-o text-danger\"></i> Clear</span></a>\n        <a *ngFor=\"let tag of tags\" class=\"dropdown-item\" >\n            <div class=\"input-group\">\n              <input type=\"checkbox\" class=\"form-check-input\" [indeterminate]=\"tag.isIndeterminate\" [(ngModel)]=\"tag.isChecked\" (change)=\"tagChange(tag)\" >\n              <h5><span class=\"badge\" [ngStyle]=\"{'background-color': tag.tag.color}\" ><span class=\"blend-text\">{{tag.tag.name}}</span></span></h5>\n            </div>\n          </a>\n    </dexih-button-dropdown>\n</ng-template>","import { Component, OnInit, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\n\n@Component({\n    selector: 'view-edit-button',\n    templateUrl: './view-edit-button.component.html'\n})\nexport class ViewEditButtonComponent implements OnInit {\n    @Input() key = null;\n\n    public hubPath: string;\n\n    constructor(private hubService: HubService) { }\n\n    ngOnInit() {\n        this.hubPath = this.hubService.getHubUrl();\n    }\n}\n","<a [routerLink]=\"[hubPath, 'view-edit', key]\" *ngIf=\"key\" > \n    <i class=\"fa fa-edit\"></i> \n    Edit \n</a>","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\nimport { HubService } from '../../hub.service';\nimport { Observable, Subscription, combineLatest} from 'rxjs';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubCache, eCacheStatus } from '../../hub.models';\nimport { DexihFileFormat } from '../../../shared/shared.models';\n\n@Component({\n  selector: 'dexih-fileFormat-edit-form',\n  templateUrl: './fileFormat-edit.component.html',\n  providers: [HubFormsService]\n})\nexport class FileFormatEditComponent implements OnInit, OnDestroy {\n  public fileFormatKey: number;\n\n  private hubCache: HubCache;\n  public action: string; // new or edit\n  public pageTitle: string;\n  public params: Params;\n\n  // public parseErrorActions = ParseErrorActions;\n  // public missingFieldActions = MissingFieldActions;\n  // public valueTrimmingOptions = ValueTrimmingOptions;\n\n  private _subscription: Subscription;\n  private _formChangeSubscription: Subscription;\n  private _hubCacheChangeSubscription: Subscription;\n  private isLoaded = false;\n\n  constructor(\n    private hubService: HubService,\n    private authService: AuthService,\n    public formsService: HubFormsService,\n    private route: ActivatedRoute,\n    private router: Router,\n  ) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n      ).subscribe(result => {\n        let data = result[0];\n        this.params = result[1];\n        this.hubCache = result[2];\n\n        this.action = data['action'];\n        this.pageTitle = data['pageTitle'];\n\n        if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded ) { return; }\n\n        if (this.isLoaded && this.action === 'new') { return; }\n\n        if (this.isLoaded && this.formsService.hasChanged) {\n            this.authService.confirmDialog('Synchronization warning',\n            'The hub was disconnected, meaning this edit could have been changed by another session.  Would you like to discard the current changes, and reload the latest version?')\n            .then(confirm => {\n                if (confirm) {\n                    this.load();\n                }\n            }).catch(reason => {\n                return;\n            });\n        } else {\n            this.load();\n        }\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'File Format Edit');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._formChangeSubscription) { this._formChangeSubscription.unsubscribe(); }\n  }\n\n  load() {\n\n    if (this.hubCache.isLoaded()) {\n      if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded || this.isLoaded) { return; }\n      this.isLoaded = true;\n\n      if (this.action === 'edit') {\n        // get the hub key from the route data, and update the service.\n        this.fileFormatKey = + this.params['fileFormatKey'];\n\n        if (!this.fileFormatKey) {\n          this.hubService.addHubErrorMessage('There was no file format specified to edit.');\n        } else {\n          if (!this.hubCache.hub || !this.hubCache.hub.dexihColumnValidations) {\n            this.hubService.addHubErrorMessage('The hub cache is not loaded.');\n          } else {\n\n            let fileFormat = this.hubCache.hub.dexihFileFormats.find(c => c.key === this.fileFormatKey);\n            this.formsService.fileFormat(fileFormat);\n          }\n        }\n      }\n\n      if (this.action === 'new') {\n        let fileFormat = new DexihFileFormat();\n        this.formsService.fileFormat(fileFormat);\n\n        // update the url with the saved key\n        this._formChangeSubscription = this.formsService.getCurrentFormObservable().subscribe(form => {\n          let key = form.controls.key.value;\n          if (key) {\n            if (history.pushState) {\n              let newUrl = window.location.pathname.replace('/fileFormat-new', `/fileFormat-edit/${key}`)\n              this.router.navigateByUrl(newUrl);\n              this._formChangeSubscription.unsubscribe();\n            }\n          }\n        });\n      }\n    }\n  }\n\n  close() {\n    this.authService.navigateUp();\n  }\n}\n","<div class=\"container\">\n\t<dexih-widget \n\t\ttitle=\"Edit Format\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-file-text-o\" \n\t\t[showCloseButton]=\"true\"\n\t\t[padding]=\"true\"\n\t\t(close)=\"close()\"\n\t\t>\n        <ng-template #header>\n\t\t\t<dexih-invalid-form-details [control]=\"formsService.currentForm\" (click)=\"formsService.showErrors()\" class=\"mr-1\"></dexih-invalid-form-details>\n            <save-button *ngIf=\"hubCache.canWrite\" [formsService]=\"formsService\"  class=\"mr-1\"></save-button>\n            <cancel-button [formsService]=\"formsService\"></cancel-button>\n        </ng-template>\n\n\t\t<form *ngIf=\"formsService.currentForm\"  [formGroup]=\"formsService.currentForm\">\n\t\t\t<fieldset>\n\t\t\t\t<section>\n\t\t\t\t\t<form-input label=\"File Format Name\" formControlName=\"name\" placeholder=\"Enter the file format name.\" iconClass=\"fa fa-list\" [errors]=\"formsService.formErrors['name']\" [autocapitalize]=\"true\">\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<form-textarea label=\"Description\" [showMarkdown]=\"true\" formControlName=\"description\" placeholder=\"Enter the description.\" >\n\t\t\t\t\t</form-textarea>\n\t\t\t\t</section>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Delimiter\" formControlName=\"delimiter\" placeholder=\"Enter the delimiter\" iconClass=\"fa fa-list\"\n\t\t\t\t\t\t [errors]=\"formsService.formErrors['delimiter']\" note=\"The field delimiter (use \\t=tab, \\n=new line, \\r=carriage return).\">\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input type=\"number\" label=\"Buffer Size\" formControlName=\"bufferSize\" placeholder=\"Enter buffer size\" iconClass=\"fa fa-list\" [errors]=\"formsService.formErrors['bufferSize']\" note=\"The size of the internal buffer that is used when reader or writing data.\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input type=\"number\" label=\"Skip Header Rows Count\" formControlName=\"skipHeaderRows\" placeholder=\"Enter row count\" iconClass=\"fa fa-list\" [errors]=\"formsService.formErrors['skipHeaderRows']\" note=\"The number of rows at the start of the file that will be ignored.\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Has Header Record\" formControlName=\"hasHeaderRecord\" note=\"Tells the reader/writer if there is a header row in the CSV file.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Ignore Header White Space\" formControlName=\"ignoreHeaderWhiteSpace\" note=\"Tells the reader to ignore white space in the headers when matching the columns to the properties by name.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Match to Column to Header\" formControlName=\"matchHeaderRecord\" note=\"Tells the reader to use the column heading name to load the data.  If unchecked, columns will be read into fields in the order specified in the table columns.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Set White Space Cells to Null \" formControlName=\"setWhiteSpaceCellsToNull\" note=\"Set empty cells or cells containing only white spaces to null.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Allow Comments\" formControlName=\"allowComments\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t\t<div *ngIf=\"formsService.currentForm.controls.allowComments.value\">\n\t\t\t\t\t\t\t<form-input label=\"Comment\" formControlName=\"comment\" placeholder=\"Enter comment character\" iconClass=\"fa fa-list\"\n\t\t\t\t\t\t\t note=\"The value used to denote a line that is commented out.\" [errors]=\"formsService.formErrors['comment']\">\n\t\t\t\t\t\t\t</form-input>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Ignore Quotes\" formControlName=\"ignoreQuotes\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t\t<div *ngIf=\"!formsService.currentForm.controls.ignoreQuotes.value\">\n\t\t\t\t\t\t\t<form-input label=\"Quote\" formControlName=\"quote\" placeholder=\"Enter the quote\" [maxlength]=\"1\" iconClass=\"fa fa-list\"\n\t\t\t\t\t\t\t [errors]=\"formsService.formErrors['quote']\" note=\"The value used to escape fields that contain a delimiter, quote, or line ending.\">\n\t\t\t\t\t\t\t</form-input>\n\t\t\t\t\t\t</div>\t\t\t\t\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Quote All Fields\" formControlName=\"quoteAllFields\" note=\"Tells the writer whether all fields written should have quotes around them; regardless if the field contains anything that should be escaped.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Quote No Fields\" formControlName=\"quoteNoFields\" note=\"Tells the writer whether all fields written should not have quotes around them; regardless if the field contains anything that should be escaped.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Trim Fields\" formControlName=\"trimFields\" note=\"Tells the reader to trim whitespace from the beginning and ending of the field value when reading.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Trim Headers\" formControlName=\"trimHeaders\" note=\"Tells the reader to ignore white space from the beginning and ending of the headers when matching the columns to the properties by name.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Detect Column Count Changes\" formControlName=\"detectColumnCountChanges\" note=\"Check for changes in the number of column from row to row.  If true, the job will abend.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Ignore Reading Exceptions\" formControlName=\"ignoreReadingExceptions\" note=\"Tells the reader to ignore any issues when parsing the file.  Issues mean the file is bad in some way, and the parser isn't able to recover.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Will Abend On Missing Field\" formControlName=\"willThrowOnMissingField\" note=\"Indicates if the job should be abended if reading and an expected field is missing.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Skip Empty Records\" formControlName=\"skipEmptyRecords\" note=\"Tells the reader a record should be skipped when reading if it's empty. A record is considered empty if all fields are empty.\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t</fieldset>\n\t\t</form>\n \n\t</dexih-widget>\n\t\n\t<dexih-help class=\"m-3\" title=\"File Formats\" path=\"/assets/help/reference/fileFormat.md\"></dexih-help>\n</div>\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { HubCache } from '../../hub.models';\nimport { DexihFileFormat, DexihHub, eSharedObjectType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'fileFormats',\n    templateUrl: './fileFormat-index.component.html',\n    styles: []\n})\nexport class FileFormatIndexComponent implements OnInit, OnDestroy {\n    @Input() public hubKey: number;\n\n    private _subscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n\n    hubCache: HubCache;\n\n    fileFormats: Array<DexihFileFormat>;\n    public eSharedObjectType = eSharedObjectType;\n\n    columns = [\n        { name: 'name', title: 'Name', footer: 'description', format: 'Md', tags: 'tags' },\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        // watch for any changes in the validations.\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n\n                this.updateFileFormats();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'File Format Index');\n        }\n\n\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    deleteFileFormats(fileFormats: Array<DexihFileFormat>) {\n        this.hubService.deleteFileFormats(fileFormats);\n    }\n\n    updateFileFormats() {\n        if (this.hubCache && this.hubCache.isLoaded()) {\n            let fileFormats = this.hubCache.hub.dexihFileFormats.filter(c => c.isValid).map(c => {\n                return {\n                    key: c.key,\n                    name: c.name,\n                    description: c.description,\n                    updateDate: c.updateDate,\n                    tags: this.hubCache.getObjectTags(eSharedObjectType.FileFormat, c.key)\n                }\n            });\n            this._tableData.next(fileFormats);\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    editFileFormat(fileFormat: DexihFileFormat) {\n        this.router.navigate(['fileFormat-edit', fileFormat.key], { relativeTo: this.route });\n    }\n\n    export(items: Array<DexihFileFormat>) {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        items.forEach(item => { this.hubCache.cacheAddFileFormat(item.key, hub); });\n\n        let filename = items.length === 1 ? 'FileFormat - ' + items[0].name + '.json' : 'fileFormats.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    watchChanges() {\n        // watch the current validation in case it is changed in another session.\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n            if (hubCacheChange.changeClass === eSharedObjectType.FileFormat ||\n                hubCacheChange.changeClass === eSharedObjectType.TagObjects) {\n                this.updateFileFormats();\n            }\n        });\n    }\n}\n","<div class=\"container-fluid\">\n\t<dexih-widget title=\"File Formats\" iconClass=\"fa fa-lg fa-fw fa-file-text-o\" [showCloseButton]=\"true\"\n\t\t(close)=\"close()\">\n\n\t\t<dexih-table \n\t\t[enableMultiSelect]=\"true\" \n\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t[columns]=\"columns\" \n\t\t[dataObservable]=\"tableData\"\n\t\t(rowClick)=\"editFileFormat($event)\" \n\t\t[tags]=\"this.hubCache.hub.dexihTags\">\n\t\t\t\n\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t<dexih-button-new *ngIf=\"hubCache.canWrite\" class=\"mr-1\" [routerLink]=\"['fileFormat-new']\"\n\t\t\t\t\ttitle=\"Create a new file format\"></dexih-button-new>\n\t\t\t</ng-template>\n\n\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-fileFormat=\"item\">\n\t\t\t\t<actions-fileFormat-button [fileFormat]=\"fileFormat\" class=\"mr-1\"></actions-fileFormat-button>\n\t\t\t</ng-template>\n\n\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t<dexih-button-save-local class=\"mr-1\" (click)=\"export(items)\"></dexih-button-save-local>\n\t\t\t\t<dexih-button-delete *ngIf=\"hubCache.canWrite\" (click)=\"deleteFileFormats(items)\"\n\t\t\t\t\ttitle=\"Delete selected file formats\"></dexih-button-delete>\n\t\t\t\t<tags-update-button class=\"ml-1\" [objectType]=\"eSharedObjectType.FileFormat\" [objects]=\"items\">\n\t\t\t\t</tags-update-button>\n\t\t\t</ng-template>\n\n\n\t\t</dexih-table>\n\n\t</dexih-widget>\n\n\t<dexih-help class=\"m-3\" title=\"File Formats\" path=\"/assets/help/reference/fileFormat.md\"></dexih-help>\n\n</div>","export * from './fileFormat-index/fileFormat-index.component';\nexport * from './fileFormat-edit/fileFormat-edit.component';\n","<div id=\"content\">\n    <section *ngIf=\"!hubCache || (hubCache.status != eCacheStatus.Loaded && hubCache.status != eCacheStatus.Error)\">\n        <div *ngIf=\"!showIf\" class=\"dexih-loader-container\">\n            <div class=\"dexih-loader\"></div>\n            <div class=\"dexih-loader-text\">Loading the hub ...</div>\n        </div>\n    </section>\n\n    <div *ngIf=\"hubCache && hubCache.status == eCacheStatus.Loaded\">\n        <section *ngIf=\"hubCache.hubPermission === ePermission.FullReader\">\n            <div class=\"alert alert-info m-3\">\n                The current user has readonly access to this hub.\n            </div>\n        </section>\n\n        <section *ngIf=\"hubCache.hubPermission === ePermission.PublishReader\">\n            <div class=\"alert alert-info m-3\">\n                The current user only has access to shared items in this hub.\n            </div>\n        </section>\n    \n        <section *ngIf=\"openDelay && webSocketStatus != 'Connected'\">\n            <div class=\"alert alert-danger m-3\">\n                {{webSocketStatus}}.\n            </div>\n        </section>\n        \n        <section *ngIf=\"hubCache && hubCache.status == eCacheStatus.Error\">\n            <div class=\"alert alert-danger m-3\">\n                There was an error encountered when loading the hub.\n            </div>\n        </section>\n\n        <div *ngIf=\"hubCache && hubCache.status == eCacheStatus.Loaded\">\n            <section *ngIf=\"(openDelay && webSocketStatus != 'Connected') && !remoteAgent\">\n                <div class=\"alert alert-danger m-3\">\n                    Warning: There is no remote agent connected.  A remote agent is required for any data access and processing.\n                    <hr>\n                    <dexih-button buttonClass=\"btn btn-sm btn-primary text-white\" iconClass=\"fa fa-wrench\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary/agents\" text=\"Configure Agent\"></dexih-button>\n                    <dexih-button-refresh class=\"ml-1\" buttonClass=\"btn btn-sm btn-primary text-white\" (click)=\"refresh()\"></dexih-button-refresh>\n                </div>\n            </section>\n        </div>\n\n    </div>\n    <router-outlet></router-outlet>\n</div>\n\n","import { Component, OnDestroy, OnInit, HostListener } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription, combineLatest} from 'rxjs';\n\nimport { AuthService } from '../+auth/auth.service';\nimport { HubCache, eCacheStatus } from './hub.models';\nimport { HubService } from './hub.service';\nimport { DexihHub, DexihActiveAgent, ePermission } from '../shared/shared.models';\nimport { first, filter, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'dexih-hub',\n    templateUrl: './hub.component.html'\n})\nexport class HubComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n    private _hubCacheSubscription: Subscription;\n    private _remoteAgentSubscription: Subscription;\n    private _webSocketSubscription: Subscription;\n\n    public hubCache: HubCache;\n\n    hubKey: number;\n    hub: DexihHub;\n    remoteAgent: DexihActiveAgent;\n\n    eCacheStatus = eCacheStatus;\n    ePermission = ePermission;\n\n    webSocketStatus: string;\n    openDelay = false; // used to pause the websocket error message displaying whilst a connect attempt occurs.\n\n    constructor(private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(hubCache => {\n            this.hubCache = hubCache;\n        });\n\n        this._webSocketSubscription = this.authService.getWebSocketStatusObservable().subscribe(webSocketStatus => {\n            this.webSocketStatus = webSocketStatus;\n        });\n\n        this._remoteAgentSubscription = this.hubService.getRemoteAgentObservable().subscribe(remoteAgent => {\n            this.remoteAgent = remoteAgent;\n        })\n\n        try {\n            this._subscription = combineLatest(\n                this.route.params,\n                this.authService.getUserObservable()\n            ).subscribe(async result => {\n                let params = result[0];\n                let user = result[1];\n\n                if (!user) {\n                    return;\n                }\n\n                this.hubKey = + params['hubKey'];\n\n                if (this.hubKey > 0) {\n                    await this.hubService.updateHub(this.hubKey, 'Loading...');\n                } else {\n                    this.router.navigate(['/hubs']);\n                }\n\n                if (this.hubCache.hub != null) {\n                    this.hubKey = this.hubCache.hub.hubKey;\n                    this.hub = this.hubCache.hub;\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Hub Component');\n        }\n\n        setTimeout(() => {\n            this.openDelay = true;\n        }, 5000);\n\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n        if (this._remoteAgentSubscription) { this._remoteAgentSubscription.unsubscribe(); }\n        if (this._webSocketSubscription) { this._webSocketSubscription.unsubscribe(); }\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    refresh() {\n        this.authService.pingRemoteAgents();\n    }\n\n    @HostListener('window:focus', ['$event'])\n    onFocus(): void {\n        this.openDelay = false;\n        setTimeout(() => {\n            this.openDelay = true;\n        }, 5000);\n    }\n}\n","import { Injectable, OnDestroy, OnInit, EventEmitter } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators, AsyncValidatorFn, ValidationErrors } from '@angular/forms';\nimport { BehaviorSubject, Observable, Subscription, combineLatest} from 'rxjs';\n\nimport { AuthService } from '../+auth/auth.service';\nimport { eLogLevel, LogFactory } from '../../logging';\nimport { InputOutputColumns } from './hub.lineage.models';\nimport {\n  HubCache,\n  eMappingStatus,\n  sharedObjectProperties,\n  SharedObjectProperty,\n  DexihInputParameter,\n  DataCache,\n} from './hub.models';\nimport { HubService } from './hub.service';\nimport { eImportAction, Import, DexihConnection, DexihTable, DexihTableColumn, eTypeCode,\n   DexihFileFormat, DexihView, DexihDashboard, DexihDashboardItem, DexihApi, DexihColumnValidation,\n   DexihCustomFunction, DexihCustomFunctionParameter, DexihHubVariable, DexihDatalinkTest,\n   DexihDatalinkTestStep, DexihDatalinkTestTable, DexihTrigger, DexihDatalinkStep, DexihDatalinkDependency,\n   DexihDatalinkStepColumn, DexihDatajob, DexihRemoteAgentHub, DexihDatalink, DexihDatalinkColumn,\n   DexihDatalinkTransform, DexihDatalinkTransformItem, DexihFunctionParameter, DexihFunctionArrayParameter,\n   DexihDatalinkProfile, DexihDatalinkTarget, DexihDatalinkTable,\n   eSourceType, eSharedObjectType, DexihListOfValues, InputParameterBase,\n   eDataObjectType, ListOfValuesItem, eTransformItemType, DexihTag, DexihViewParameter } from '../shared/shared.models';\nimport { filter } from 'rxjs/operators';\n\n@Injectable()\nexport class HubFormsService implements OnDestroy {\n  private hubCache: HubCache;\n\n  private _hubCacheSubscription: Subscription;\n  private _hubCacheChangeSubscription: Subscription;\n  private _valueChangesSubscription: Subscription;\n\n  private _connectionChangesSubscription1: Subscription;\n  private _connectionChangesSubscription2: Subscription;\n  private _connectionChangesSubscription3: Subscription;\n  private _tableChangesSubscription1: Subscription;\n  private _tableChangesSubscription2: Subscription;\n  private _tableColumnChangesSubscription1: Subscription;\n  private _tableColumnChangesSubscription2: Subscription;\n  private _tableColumnChangesSubscription3: Subscription;\n  private _datalinkChangesSubscription1: Subscription;\n  private _datalinkChangesSubscription2: Subscription;\n  private _datalinkChangesSubscription3: Subscription;\n  private _datalinkTestChangesSubscription: Subscription;\n  private _genericParameterSubscription: Subscription;\n  private _datalinkTargetChanges: Subscription[] = [];\n  private _parameterChanges: Subscription[] = [];\n\n  public currentForm: FormGroup;\n  private _currentFormObservable = new BehaviorSubject<FormGroup>(null);\n  public formErrors = {};\n  public hasChanged = false;\n  public formSaving = false;\n  public showAllErrors = false;\n  public IgnoreFormChange = false;\n  private ignoreHubCacheChange = false; // used to avoid recursive loop in the hubCacheChange subscription.\n  private formChangeCount = 0;\n\n  private updateDate: Date;\n\n  private saveMethod: string;\n  private property: SharedObjectProperty;\n  private formGroupFunc: (item) => void\n  private valueMethod: string;\n\n  private logger = new LogFactory('hub.forms.service');\n\n  validationMessages = {\n    'required': 'A value is required.',\n    'duplicateName': 'The value is already being used.',\n    'dataType': 'The data types are inconsistent.',\n    'invalidClass': 'The function method could not be found'\n  };\n\n  validationFieldMessages = {\n\n  };\n\n  constructor(\n    private fb: FormBuilder,\n    private hubService: HubService,\n    private authService: AuthService,\n\n  ) {\n    this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(hubCache => {\n      this.hubCache = hubCache\n    });\n  }\n\n  ngOnDestroy() {\n    this.clearFormSubscriptions();\n\n    this.currentForm = null;\n    this.updateDate = null;\n    this.formErrors = {};\n    this.hasChanged = false;\n    this.formSaving = false;\n    this.showAllErrors = false;\n    this.IgnoreFormChange = false;\n    // this.ignoreHubCacheChange = false; // used to avoid recursive loop in the hubCacheChange subscription.\n    this.formChangeCount = 0;\n  }\n\n  clearFormSubscriptions() {\n    this.logger.LogC(() => `clearFormSubscriptions started`, eLogLevel.Trace);\n    if (this._valueChangesSubscription) { this._valueChangesSubscription.unsubscribe(); }\n    // if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n    if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n    if (this._connectionChangesSubscription1) { this._connectionChangesSubscription1.unsubscribe(); }\n    if (this._connectionChangesSubscription2) { this._connectionChangesSubscription2.unsubscribe(); }\n    if (this._connectionChangesSubscription3) { this._connectionChangesSubscription3.unsubscribe(); }\n    if (this._tableChangesSubscription1) { this._tableChangesSubscription1.unsubscribe(); }\n    if (this._tableChangesSubscription2) { this._tableChangesSubscription2.unsubscribe(); }\n    if (this._tableColumnChangesSubscription1) { this._tableColumnChangesSubscription1.unsubscribe(); }\n    if (this._tableColumnChangesSubscription2) { this._tableColumnChangesSubscription2.unsubscribe(); }\n    if (this._tableColumnChangesSubscription3) { this._tableColumnChangesSubscription3.unsubscribe(); }\n    if (this._datalinkChangesSubscription1) { this._datalinkChangesSubscription1.unsubscribe(); }\n    if (this._datalinkChangesSubscription2) { this._datalinkChangesSubscription2.unsubscribe(); }\n    if (this._datalinkChangesSubscription3) { this._datalinkChangesSubscription3.unsubscribe(); }\n    if (this._datalinkTestChangesSubscription) { this._datalinkTestChangesSubscription.unsubscribe(); }\n    if (this._genericParameterSubscription) { this._genericParameterSubscription.unsubscribe(); }\n    this._datalinkTargetChanges.forEach(c => c.unsubscribe());\n    this._parameterChanges.forEach(c => c.unsubscribe());\n  }\n\n  private addMissing(item: any, form: FormGroup, itemTemplate: any, excludeKeys: string[] = []) {\n    if (!item) { return; }\n\n    let keys = Object.keys(itemTemplate);\n    let existingKeys = Object.keys(form.controls);\n    keys.forEach(key => {\n      if ((excludeKeys.findIndex(c => c === key) === -1)\n        && existingKeys.findIndex(c => c === key) === -1) {\n        let control = new FormControl(key);\n        let value = item[key];\n        if (typeof value === 'undefined') {\n          value = null;\n        }\n        control.setValue(value);\n        form.addControl(key, control);\n      }\n    });\n\n    this.updateDate = item['updateDate'];\n  }\n\n  public startForm(form: FormGroup) {\n    this.logger.LogC(() => `startForm started`, eLogLevel.Trace);\n\n    if (form) {\n      if (this._valueChangesSubscription) { this._valueChangesSubscription.unsubscribe(); }\n      this._valueChangesSubscription = form.valueChanges.subscribe(data => {\n        this.onValueChanged(data)\n      });\n\n      this.onValueChanged(); // (re)set validation messages now\n    }\n\n    this.currentForm = form;\n    this._currentFormObservable.next(form);\n\n    this.hasChanged = false;\n\n    this.logger.LogC(() => `startForm finished`, eLogLevel.Trace);\n  }\n\n  public getCurrentFormObservable(): Observable<FormGroup> {\n    return this._currentFormObservable.asObservable();\n  }\n\n  // re-create any error messages whenever the form changes.\n  private onValueChanged(data?: any) {\n    if (this.IgnoreFormChange === false) {\n\n      this.logger.LogC(() => `onValueChanged started.  Counter = ${this.formChangeCount++}`, eLogLevel.Trace);\n\n      if (!this.currentForm || !this.currentForm.value) { return; }\n      const form = this.currentForm;\n\n      this.hasChanged = true;\n      this.formErrors = this.getFormErrorMessages(form, this.showAllErrors);\n\n      this.logger.LogC(() => `onValueChanged completed`, eLogLevel.Trace);\n    }\n  }\n\n  public markAsChanged() {\n    if (!this.currentForm || !this.currentForm.value) { return; }\n\n    this.hasChanged = true;\n    this.currentForm.markAsDirty();\n  }\n\n  public showErrors() {\n    this.showAllErrors = true;\n    this.onValueChanged();\n  }\n\n  // returns an object containing any error message for controls contained within the specified form.\n  public getFormErrorMessages(form: FormGroup, showAllErrors: boolean): {} {\n    let formErrors = {};\n\n    if (!form.controls) { return ''; }\n\n    for (const field of Object.keys(form.controls)) {\n      // clear previous error message (if any)\n      formErrors[field] = '';\n      const control = form.get(field);\n\n      // if the control is dirty or flag is set to show all errors.\n      if (control && (control.dirty || showAllErrors)) {\n        if (!control.valid) {\n          if (control instanceof FormArray) {\n\n          } else {\n            const messages = this.validationFieldMessages[field];\n            if (control && control.errors) {\n              for (const key of Object.keys(control.errors)) {\n                if (messages && messages[key]) {\n                  formErrors[field] += messages[key] + ' ';\n                } else if (this.validationMessages[key]) {\n                  formErrors[field] += this.validationMessages[key] + ' ';\n                } else {\n                  let message = this.createErrorMessage(key, control);\n                  formErrors[field] += message + ' ';\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return formErrors;\n  }\n\n  public getErrorMessage(control: AbstractControl): string {\n    if (control && control.errors) {\n      let errorMessage = '';\n\n      for (const key of Object.keys(control.errors)) {\n        if (this.validationMessages[key]) {\n          errorMessage += this.validationMessages[key] + ' ';\n        } else {\n          errorMessage = this.createErrorMessage(key, control);\n        }\n      }\n      return errorMessage;\n    } else {\n      return '';\n    }\n  }\n\n  private createErrorMessage(key: string, control: AbstractControl): string {\n    let message = '';\n    switch (key) {\n      case 'minlength':\n        message = 'Value is ' +\n          control.errors.minlength.actualLength +\n          ' characters long, required minimum length is '\n          + control.errors.minlength.requiredLength + ' characters.';\n        break;\n      case 'maxlength':\n        message = 'Value is ' +\n          control.errors.maxlength.actualLength +\n          ' characters long, required maximum length is '\n          + control.errors.maxlength.requiredLength + ' characters.';\n        break;\n      case 'maxvalue':\n        message = 'Value is ' +\n          control.value +\n          ' required maximum is '\n          + control.errors.maxvalue.required + '.';\n        break;\n      case 'minvalue':\n        message = 'Value is ' +\n          control.value +\n          ' required minimum is '\n          + control.errors.minvalue.required + '.';\n        break;\n      default:\n        message = 'Field error: ' + key;\n    }\n    return message;\n\n  }\n\n  watchChanges(changeClass: eSharedObjectType, keyField: string, description: string, formGroupFunc: (item) => void) {\n    if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n    // if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n\n    if (this.formSaving) {\n      return;\n    }\n\n    // watch the current form in case it is changed in another session.\n    this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n      if (!this.ignoreHubCacheChange) {\n        this.ignoreHubCacheChange = true;\n        if (hubCacheChange.changeClass === changeClass &&\n          hubCacheChange.data && hubCacheChange.data[keyField] === this.currentForm.value[keyField]) {\n          switch (hubCacheChange.changeType) {\n            case eImportAction.Replace:\n              if (this.currentForm.pristine) {\n                let item = Object.assign({}, hubCacheChange.data);\n                formGroupFunc.call(this, item);\n              } else {\n                this.authService.confirmDialog('The ' + description + ' has changed',\n                  'Another session has updated this ' +\n                  description + ', would you like to discard any changes in this session and update with the new version?')\n                  .then(confirm => {\n                    if (confirm) {\n                      let item = Object.assign({}, hubCacheChange.data);\n                      this.ngOnDestroy() // clear old subscriptions\n                      formGroupFunc.call(this, item);\n                    }\n                  }).catch(reason => {\n\n                  });\n              }\n              break;\n            case eImportAction.Delete:\n              this.authService.confirmDialog('The ' + description + ' has been deleted',\n                'Another session has deleted this ' + description + ', would you like to discard current changes?')\n                .then(confirm => {\n                  if (confirm) {\n                    this.authService.navigateUp();\n                  }\n                }).catch(reason => {\n\n              });\n          }\n        }\n        this.ignoreHubCacheChange = false;\n      }\n    });\n\n    // this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(hubCache => {\n    //   if (!this.currentForm) { return; }\n\n    //   this.hubCache = hubCache;\n\n    //   let item = hubCache.getCacheItem(changeClass, this.currentForm.value[keyField]);\n\n    //   if (item) {\n    //     // if the version from the cache was updated more recently than current version, prompt user.\n    //     if (this.updateDate && this.updateDate < item.updateDate) {\n    //       this.authService.confirmDialog('The ' + description + ' has changed',\n    //         'This is likely due to a another session changing the ' +\n    //         description + ' whilst this session was disconnected.  ' +\n//         'Would you like to discard the changes and reload the newer version from the server (otherwise this will be created a a copy)?')\n    //         .then(confirm => {\n    //           if (confirm) {\n    //             let newItem = Object.assign({}, item);\n    //             this.ngOnDestroy() // clear old subscriptions\n    //             formGroupFunc.call(this, newItem);\n    //           }\n    //         }).catch(reason => {\n    //           this.currentForm.controls[keyField].setValue(0);\n    //         });\n    //     }\n    //   }\n    // });\n  }\n\n  public async save(navigateUp = false, saveAs = false) {\n    try {\n      if (!saveAs && (this.formSaving || !this.hasChanged)) {\n        return;\n      }\n\n      // if (!this.currentForm.valid) {\n      //   this.showAllErrors = true;\n      //   this.onValueChanged();\n\n      //   let confirm = await this.authService.confirmDialog('There are errors!',\n      //     'There are errors in the current form.  Confirm that would like to save the changes anyhow?');\n      //   if (!confirm) {\n      //     return;\n      //   }\n      // }\n\n      this.formSaving = true;\n\n      let value;\n      if (this.valueMethod) {\n        value = this[this.valueMethod]()\n      } else {\n        value = this.currentForm.getRawValue();\n      }\n\n      if (saveAs) {\n        let name = value.name;\n        while (this.hubCache.hub[this.property.cacheProperty].find(c => c.name === name)) {\n          name = await this.authService.promptDialog('Specify a new name',\n            // tslint:disable-next-line:max-line-length\n            `The name ${name} already exists.  Specify a new name for the ${this.property.displayName} and then select ok to save this as a copy.`,\n            '', name + ' 2');\n\n          if (!name) {\n            return;\n          }\n        }\n\n        value.name = name;\n        value.key = 0;\n      }\n\n      this.ignoreHubCacheChange = true;\n\n      const currentStatus =  value.currentStatus;\n      const entityStatus = value.entityStatus;\n      const previousStatus = value.previousStatus;\n      const runTime = value.runTime;\n\n      // remove status as they will not parse into json.\n      value.currentStatus = null;\n      value.entityStatus = null;\n      value.previousStatus = null;\n      value.runTime = null;\n\n      let result = await this.authService.post('/api/Hub/' + this.saveMethod, {\n        hubKey: this.hubCache.hub.hubKey,\n        value: value\n      }, 'Saving...');\n\n      let import1 = new Import();\n      import1[this.property.property] = [{ importAction: eImportAction.New, item: result }];\n      this.hubService.updateHubChange(import1);\n\n      if (this.formGroupFunc) {\n        // this.ignoreHubCacheChange = true;\n        this.formGroupFunc(result);\n\n        if (this.currentForm.controls.currentStatus) { this.currentForm.controls.currentStatus.setValue(currentStatus); }\n        if (this.currentForm.controls.entityStatus) { this.currentForm.controls.entityStatus.setValue(entityStatus); }\n        if (this.currentForm.controls.previousStatus) { this.currentForm.controls.previousStatus.setValue(previousStatus); }\n        if (this.currentForm.controls.runTime) { this.currentForm.controls.runTime.setValue(runTime); }\n        this.ignoreHubCacheChange = false;\n      }\n\n      this.formSaving = false;\n      this.hasChanged = false;\n\n      if (navigateUp) {\n        this.authService.navigateUp();\n      } else {\n        this.hubService.addHubSuccessMessage('The save operation completed.');\n      }\n    } catch (error) {\n      if (error) {\n        this.hubService.addHubMessage(error);\n        this.currentForm.markAsDirty();\n      }\n    } finally {\n      this.formSaving = false;\n    }\n  }\n\n  public saveLocal() {\n    let value;\n    if (this.valueMethod) {\n      value = this[this.valueMethod]()\n    } else {\n      value = this.currentForm.getRawValue();\n    }\n\n    const cache = this.hubCache;\n    const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n\n    if (this.property.cacheGetMethod) {\n      cache[this.property.cacheGetMethod](value, hub);\n    }\n\n    hub[this.property.cacheProperty].push(value);\n    let filename = this.property.displayName + '-' + value.name + '.json';\n    this.hubService.exportHub(hub, filename);\n  }\n\n  cancel() {\n    if (!this.formSaving) {\n      this.authService.navigateUp();\n    }\n  }\n\n  public getFormErrors(): string {\n    const form = this.currentForm;\n    return this.getFormErrorsRecursive(this.currentForm, 0, 0);\n  }\n\n  private getFormErrorsRecursive(form: FormGroup, depth: number, index: number): string {\n    let message = '';\n\n    for (const field of Object.keys(form.controls)) {\n      const control = form.get(field);\n\n      // if the control is dirty or flag is set to show all errors.\n      if (control && !control.valid) {\n        message += ' '.repeat(depth * 3) + `The control ${field} at position ${index} has the following error(s):<p></p>`;\n        if (control instanceof FormArray) {\n          const formArray = <FormArray>control;\n          formArray.controls.forEach((cont, formIndex) => {\n            message += this.getFormErrorsRecursive(<FormGroup>cont, depth + 1, formIndex);\n          });\n        } else if (control instanceof FormGroup) {\n          message += this.getFormErrorsRecursive(<FormGroup>control, depth + 1, 0);\n        } else {\n          for (const key of Object.keys(control.errors)) {\n            message += ' '.repeat(depth * 3 + 1) + key + ':' + this.createErrorMessage(key, control) + '<p></p>';\n          }\n        }\n      }\n    }\n\n    return message;\n  }\n\n  private stringCompare(value1: string, value2: string): boolean {\n    if (!value1 && !value2) {\n      return true;\n    }\n    if (!value1 || !value2) {\n      return false;\n    }\n\n    return value1.trim().toLowerCase() === value2.trim().toLowerCase();\n  }\n\n  public parameter(parameter: InputParameterBase): FormGroup {\n    let runTime = {showRefresh: parameter.listOfValuesKey > 0, isRefreshing: false, items: []};\n    if (parameter.value) {\n      if (parameter.rank === 0) {\n        runTime.items = [{key: parameter.value, name: parameter.valueDesc}];\n      }\n    }\n\n    const form = this.fb.group({\n      'name': [{value: parameter.name, disabled: parameter['datalinkParameterKey'] > 0 }, [\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(50),\n      ]],\n      'runTime': [runTime],\n      'datalinkParameterKey': parameter['datalinkParameterKey'] // used specifically for view\n    }\n    );\n\n    this.addMissing(parameter, form, new InputParameterBase());\n\n    let subscription = form.controls.listOfValuesKey.valueChanges.subscribe(value => {\n        form.controls.runTime.setValue({showRefresh: form.controls.listOfValuesKey.value > 0, isRefreshing: false, items: []});\n    });\n    this._parameterChanges.push(subscription);\n\n    let subscription2 = form.controls.rank.valueChanges.subscribe(rank => {\n      let value = form.controls.value.value;\n        if (rank === 0) {\n          if (value && Array.isArray(value)) {\n            if (value.length === 0) {\n              form.controls.value.setValue(null);\n              form.controls.valueDesc.setValue(value[0]);\n            } else {\n              form.controls.value.setValue(value[0]);\n              form.controls.valueDesc.setValue(value[0]);\n            }\n          }\n        }\n\n        if (rank === 1) {\n          if (value && !Array.isArray(value)) {\n            form.controls.value.setValue(null);\n          }\n        }\n      });\n    this._parameterChanges.push(subscription2);\n\n    return form;\n  }\n\n  public connection(connection: DexihConnection) {\n    this.logger.LogC(() => `connection`, eLogLevel.Trace);\n\n    const connectionForm = this.fb.group({\n      'name': [connection.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateConnectionNameValidator()\n      ]],\n      'connectionStringDisplay': [connection.connectionString ? '(Connection string hidden)' : '', [\n      ]],\n      'passwordDisplay': [connection.password ? '**************************' : '', [\n      ]],\n      'connectionStringRaw': ['', [\n      ]],\n      'passwordRaw': ['', [\n      ]],\n    }, { validators: [this.requiredConnectionFields()] }\n    );\n\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.Connection);\n    this.saveMethod = 'SaveConnection';\n    this.formGroupFunc = this.connection;\n    this.addMissing(connection, connectionForm, new DexihConnection());\n\n    this.clearFormSubscriptions();\n\n    // whenever the passwordDisplay or connectionStringDisplay changes, write the value to the raw\n    // this allows encrypted values to be loaded, then overwritten when use changes.\n    if (this._connectionChangesSubscription1) { this._connectionChangesSubscription1.unsubscribe(); }\n    this._connectionChangesSubscription1 = connectionForm.controls.passwordDisplay.valueChanges.subscribe(value => {\n      connectionForm.controls.passwordRaw.setValue(value);\n    });\n\n    if (this._connectionChangesSubscription2) { this._connectionChangesSubscription2.unsubscribe(); }\n    this._connectionChangesSubscription2 = connectionForm.controls.connectionStringDisplay.valueChanges.subscribe(value => {\n      connectionForm.controls.connectionStringRaw.setValue(value);\n    });\n\n    this.startForm(connectionForm);\n    this.watchChanges(eSharedObjectType.Connection, 'key', 'Connection', this.connection);\n\n    this.logger.LogC(() => `connection finished`, eLogLevel.Trace);\n  }\n\n  private duplicateConnectionNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihConnections.findIndex(c =>\n          c.key !== this.currentForm.value.key && c.isValid && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  requiredConnectionFields(): ValidatorFn {\n    return (group: FormGroup): { [key: string]: any } => {\n      if (this.currentForm) {\n        const useConnectionString = group.controls['useConnectionString'];\n        const connectionStringDisplay = group.controls['connectionStringDisplay'];\n        const server = group.controls['server'];\n\n        if (!useConnectionString || !connectionStringDisplay || !server) {\n          return;\n        }\n\n        connectionStringDisplay.setErrors(null);\n        server.setErrors(null);\n\n        // if use connection string is selected, connectionString is required.\n        if (useConnectionString.value && !connectionStringDisplay.value) {\n          connectionStringDisplay.setErrors({ 'required': true });\n        }\n\n        // use not connection string, server is required.\n        if (!useConnectionString.value) {\n          if (!server.value) {\n            server.setErrors({ 'required': true });\n          }\n        }\n        return;\n      }\n    };\n  }\n\n  public table(table: DexihTable) {\n    this.clearFormSubscriptions();\n    const tableForm = this.tableForm(table);\n\n    this.formGroupFunc = this.table;\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.Table);\n    this.saveMethod = 'SaveTable';\n    this.watchChanges(eSharedObjectType.Table, 'tableKey', 'table', this.table);\n    this.startForm(tableForm);\n  }\n\n  public tableForm(table: DexihTable): FormGroup {\n    const tableForm = this.fb.group({\n      'name': [table.name, [\n        Validators.required,\n        Validators.maxLength(250),\n        this.duplicateTableNameValidator()\n      ]],\n      'connectionKey': [table.connectionKey, [\n        Validators.required\n      ]],\n      'logicalName': [table.logicalName, [\n        Validators.required,\n        Validators.maxLength(250)\n      ]],\n      'useLogical': [this.hubCache.defaultTableLogicalName(table.schema, table.name) !== table.logicalName, [\n      ]],\n      'dexihTableColumns': this.fb.array([]),\n    }, { validator: this.requiredTableFields() }\n    );\n\n    let tableColumnsForm = <FormArray>tableForm.controls.dexihTableColumns;\n    table.dexihTableColumns.filter(c => c.isValid).forEach(column => {\n      tableColumnsForm.push(this.tableColumn(tableColumnsForm.value, column));\n    });\n\n    if (this._tableChangesSubscription1) { this._tableChangesSubscription1.unsubscribe(); }\n    this._tableChangesSubscription1 = tableForm.controls.useLogical.valueChanges.subscribe(value => {\n      if (!tableForm.controls.useLogical.value) {\n        tableForm.controls.logicalName.setValue(\n          this.hubCache.defaultTableLogicalName(tableForm.controls.schema.value, tableForm.controls.name.value));\n      }\n    });\n\n    if (this._tableChangesSubscription2) { this._tableChangesSubscription2.unsubscribe(); }\n    this._tableChangesSubscription2 = tableForm.controls.name.valueChanges.subscribe(value => {\n      if (!tableForm.controls.useLogical.value) {\n        tableForm.controls.logicalName.setValue(\n          this.hubCache.defaultTableLogicalName(tableForm.controls.schema.value, tableForm.controls.name.value));\n      }\n    });\n\n    this.addMissing(table, tableForm, new DexihTable());\n\n    return tableForm;\n  }\n\n  private duplicateTableNameValidator(): ValidatorFn {\n    // validate no matching tables names in the same connection.\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n\n        const no = this.hubCache.hub.dexihTables\n        .find(c => c.key !== this.currentForm.controls.key.value &&\n            c.isValid && this.stringCompare(c.name, name) && c.connectionKey === this.currentForm.value.connectionKey);\n          return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  requiredTableFields(): ValidatorFn {\n    return (group: FormGroup): { [key: string]: any } => {\n      if (this.currentForm) {\n        const useConnectionString = group.controls['useConnectionString'];\n        const connectionStringDisplay = group.controls['connectionStringDisplay'];\n        const server = group.controls['server'];\n\n        if (!useConnectionString || !connectionStringDisplay || !server) {\n          return;\n        }\n\n        connectionStringDisplay.setErrors(null);\n        server.setErrors(null);\n\n        // if use connection string is selected, connectionString is required.\n        if (useConnectionString.value && !connectionStringDisplay.value) {\n          connectionStringDisplay.setErrors({ 'required': true });\n        }\n\n        // use not connection string, server is required.\n        if (!useConnectionString.value) {\n          if (!server.value) {\n            server.setErrors({ 'required': true });\n          }\n        }\n        return;\n      }\n    };\n  }\n\n\n  tableColumn(siblingColumns: DexihTableColumn[], column: DexihTableColumn): FormGroup {\n    let childColumns = column.childColumns ? column.childColumns : [];\n    let columnForm = this.fb.group({\n      'name': [column.name, [\n        Validators.required,\n        Validators.maxLength(250),\n        this.duplicateTableColumnNameValidator(siblingColumns)\n      ]],\n      'logicalName': [column.logicalName, [\n        Validators.required,\n        Validators.maxLength(250)\n      ]],\n      'precision': [column.precision, [\n        this.columnMinRangeValidator(0),\n        this.columnMaxRangeValidator(30),\n      ]],\n      'scale': [column.scale, [\n        this.columnMinRangeValidator(0),\n        this.columnMaxRangeValidator(30),\n      ]],\n      'useLogical': [column.name !== column.logicalName, [\n      ]],\n      'isString': [column.dataType === eTypeCode.String || column.dataType === eTypeCode.CharArray ? true : false, [\n      ]],\n      'isNumber': [column.dataType === eTypeCode.Double || column.dataType === eTypeCode.Decimal ||\n        column.dataType === eTypeCode.Single ? true : false, [\n      ]],\n      'childColumns': this.fb.array(childColumns.filter(c => c.isValid).map(col => {\n        return this.tableColumn(childColumns, col);\n      })),\n      'runTime': {impact: eMappingStatus, lineage: eMappingStatus}\n    }\n    );\n\n    this.addMissing(column, columnForm, new DexihTableColumn());\n\n    // update isString and isNumber properties automatically when dataType changes.\n    if (this._tableColumnChangesSubscription1) { this._tableColumnChangesSubscription1.unsubscribe(); }\n    this._tableColumnChangesSubscription1 = columnForm.controls.dataType.valueChanges.subscribe(dataType => {\n      if (dataType === eTypeCode.String || dataType === eTypeCode.CharArray) {\n        columnForm.controls.isString.setValue(true);\n      } else {\n        columnForm.controls.isString.setValue(false);\n      }\n\n      if (dataType === eTypeCode.Double || dataType === eTypeCode.Decimal || dataType === eTypeCode.Single) {\n        columnForm.controls.isNumber.setValue(true);\n      } else {\n        columnForm.controls.isNumber.setValue(false);\n      }\n    });\n\n    // match logical name, unless the logical name is changed.\n    if (this._tableColumnChangesSubscription2) { this._tableColumnChangesSubscription2.unsubscribe(); }\n    this._tableColumnChangesSubscription2 = columnForm.controls.useLogical.valueChanges.subscribe(value => {\n      if (!columnForm.controls.useLogical.value) {\n        columnForm.controls.logicalName.setValue(columnForm.controls.name.value);\n      }\n    });\n\n    if (this._tableColumnChangesSubscription3) { this._tableColumnChangesSubscription3.unsubscribe(); }\n    this._tableColumnChangesSubscription3 = columnForm.controls.name.valueChanges.subscribe(value => {\n      if (!columnForm.controls.useLogical.value) {\n        columnForm.controls.logicalName.setValue(columnForm.controls.name.value);\n      }\n    });\n\n    for (const field of Object.keys(columnForm.controls)) {\n      let control = columnForm.controls[field];\n      if (control.validator) {\n        columnForm.controls[field].updateValueAndValidity();\n      }\n    }\n    return columnForm;\n  }\n\n  private duplicateTableColumnNameValidator(columnsArray: DexihTableColumn[]): ValidatorFn {\n    if (!columnsArray) { return null; }\n\n    // validate no matching tables names in the same connection.\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        if (control.parent) {\n          const key = control.parent.value.key;\n          const columnGroup = control.parent.value.columnGroup;\n          if (columnsArray) {\n            const no = columnsArray.findIndex(c =>\n              c.key !== key &&\n              c.columnGroup === columnGroup &&\n              c.isValid &&\n              this.stringCompare(c.name, name)) >= 0;\n            return no ? { 'duplicateName': { name } } : null;\n          }\n        }\n      }\n    };\n  }\n\n  private requiredNotZero(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      const name = control.value;\n      const value = control.value;\n      const no = !value || value === 0;\n      return no ? { 'required': { name } } : null;\n    }\n  }\n\n  private columnMinRangeValidator(min: number): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      const name = control.value;\n      const column = <FormGroup>control.parent;\n      if (column) {\n        if (column.controls.isNumber.value) {\n          const value = control.value;\n          const no = Number(value) >= min;\n          return no ? null : { 'minvalue': { name, required: min }};\n        } else {\n          return;\n        }\n      }\n    };\n  }\n\n  private columnMaxRangeValidator(max: number): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      const name = control.value;\n      const column = <FormGroup>control.parent;\n      if (column) {\n        if (column.controls.isNumber.value) {\n          const value = control.value;\n          const no = Number(value) <= max;\n          return no ? null : { 'maxvalue': { name , required: max } };\n        } else {\n          return;\n        }\n      }\n    };\n  }\n\n  public fileFormat(fileFormat: DexihFileFormat) {\n    const fileFormatForm = this.fb.group({\n      'name': [fileFormat.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateFileFormatNameValidator()\n      ]],\n      'quote': [fileFormat.quote, [\n        Validators.maxLength(1)\n      ]],\n    }\n    );\n\n    this.formGroupFunc = this.fileFormat;\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.FileFormat);\n    this.saveMethod = 'SaveFileFormat';\n    this.addMissing(fileFormat, fileFormatForm, new DexihFileFormat());\n    this.clearFormSubscriptions();\n    this.watchChanges(eSharedObjectType.FileFormat, 'fileFormatKey', 'file format', this.fileFormat);\n    this.startForm(fileFormatForm);\n  }\n\n  duplicateFileFormatNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihFileFormats.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  public view(view: DexihView) {\n\n    this.clearFormSubscriptions();\n\n    let parameters = view.parameters.filter(c => c.isValid).map(parameter => {\n      return this.parameter(parameter);\n    });\n\n    const viewForm = this.fb.group({\n      'name': [view.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateViewNameValidator()\n      ]],\n      'sourceType': [view.sourceType, [\n        Validators.required,\n      ]],\n      'sourceDatalinkKey': [view.sourceDatalinkKey],\n      'sourceTableKey': [view.sourceTableKey],\n      'parameters': this.fb.array(parameters),\n    }, { validator: this.validateViewSource() }\n    );\n\n    this.formGroupFunc = this.view;\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.View);\n    this.saveMethod = 'SaveView';\n    this.addMissing(view, viewForm, new DexihView());\n    this.watchChanges(eSharedObjectType.View, 'viewKey', 'view', this.view);\n    this.startForm(viewForm);\n  }\n\n  duplicateViewNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihViews.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  private validateViewSource() {\n    return (group: FormGroup) => {\n      let sourceType = group.get('sourceType').value;\n      let sourceTableKey = group.get('sourceTableKey');\n      let sourceDatalinkKey = group.get('sourceDatalinkKey');\n\n      sourceTableKey.setErrors(null);\n      sourceDatalinkKey.setErrors(null);\n\n      if (sourceType === eDataObjectType.Table) {\n        if (!sourceTableKey.value) {\n          return sourceTableKey.setErrors({ required: true });\n        }\n      } else if (sourceType === eDataObjectType.Datalink) {\n        if (!sourceDatalinkKey.value) {\n          return sourceDatalinkKey.setErrors({ required: true });\n        }\n      }\n    };\n  }\n\n  public dashboard(dashboard: DexihDashboard) {\n    this.clearFormSubscriptions();\n\n    let parameters = dashboard.parameters.filter(c => c.isValid).map(parameter => {\n      return this.parameter(parameter);\n    });\n\n\n    const form = this.fb.group({\n      'name': [dashboard.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateDashboardNameValidator()\n      ]],\n      'dexihDashboardItems': this.fb.array([]),\n      'parameters': this.fb.array(parameters),\n      'runTime': {showEdit: false, lock: true},\n    }, { }\n    );\n\n    let dashboardItemsForm = <FormArray>form.controls.dexihDashboardItems;\n    dashboard.dexihDashboardItems.filter(c => c.isValid).forEach(item => {\n      dashboardItemsForm.push(this.dashboardItem(item));\n    });\n\n    this.formGroupFunc = this.dashboard;\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.Dashboard);\n    this.saveMethod = 'SaveDashboard';\n    this.addMissing(dashboard, form, new DexihDashboard());\n    this.watchChanges(eSharedObjectType.Dashboard, 'dashboardKey', 'dashboard', this.dashboard);\n    this.startForm(form);\n  }\n\n  duplicateDashboardNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihDashboards.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  public dashboardItem(dashboardItem: DexihDashboardItem): FormGroup {\n    let parameters = dashboardItem.parameters.filter(c => c.isValid).map(parameter => {\n      return this.parameter(parameter);\n    });\n\n    const form = this.fb.group({\n      'name': [dashboardItem.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n      ]],\n      'parameters': this.fb.array(parameters),\n      'runTime': {resizeEvent: new EventEmitter<any[]>(), data: new DataCache()},\n    }\n    );\n\n    this.addMissing(dashboardItem, form, new DexihDashboardItem());\n\n    return form;\n  }\n\n  // updates the parameters when a new dashboard item is created.\n  public updateDashboardItemView(item: FormGroup) {\n    let views = this.hubCache.hub.dexihViews;\n    if (views && item.controls.viewKey.value) {\n        let view = this.hubCache.hub.dexihViews.find(c => c.key === item.controls.viewKey.value);\n        if (this.view) {\n            item.controls.name.setValue(this.view.name);\n            item.controls.runTime.value.data = new DataCache();\n\n            // reset parameters.\n            let formParameters = <FormArray> item.controls.parameters;\n            let currentParameters = <DexihInputParameter[]> formParameters.value;\n\n            formParameters.clear();\n\n            let parameters = <InputParameterBase[]> view.parameters;\n            if (view.sourceType === eDataObjectType.Datalink) {\n                let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === view.sourceDatalinkKey);\n                if (datalink && datalink.parameters) {\n                    parameters = parameters.concat(datalink.parameters);\n                }\n            }\n\n            parameters.forEach(parameter => {\n                let currentParameter = currentParameters.find( c => c.name === parameter.name);\n                let newParameter = new InputParameterBase();\n                if (currentParameter) {\n                    newParameter.name = currentParameter.name;\n                    newParameter.value = currentParameter.value;\n                } else {\n                    newParameter.name = parameter.name;\n                    newParameter.value = parameter.value;\n                    newParameter.listOfValuesKey = parameter.listOfValuesKey;\n                }\n                let newFormParameter = this.parameter(newParameter);\n                formParameters.push(newFormParameter);\n            });\n        }\n    }\n}\n\n  public listOfValuesItem(item: ListOfValuesItem) {\n    const form = this.fb.group({\n      'key': [item.key, [\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(50),\n      ]],\n    }\n    );\n\n    this.addMissing(item, form, new ListOfValuesItem());\n\n    return form;\n  }\n\n  public listOfValues(listOfValues: DexihListOfValues) {\n\n    let staticData: FormGroup[]\n    if (listOfValues.staticData) {\n      staticData = listOfValues.staticData.map(item => {\n        return this.listOfValuesItem(item);\n      });\n    } else {\n      staticData = [];\n    }\n\n    const lovForm = this.fb.group({\n      'name': [listOfValues.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateLovNameValidator()\n      ]],\n      'sourceType': [listOfValues.sourceType, [\n        Validators.required,\n      ]],\n      'sourceDatalinkKey': [listOfValues.sourceDatalinkKey],\n      'sourceTableKey': [listOfValues.sourceTableKey],\n      'staticData': this.fb.array(staticData),\n    }, { validator: this.validateViewSource() }\n    );\n\n    this.formGroupFunc = this.listOfValues;\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.ListOfValues);\n    this.saveMethod = 'SaveListOfValues';\n    this.addMissing(listOfValues, lovForm, new DexihListOfValues());\n    this.clearFormSubscriptions();\n    this.watchChanges(eSharedObjectType.ListOfValues, 'listOfValuesKey', 'listOfValues', this.listOfValues);\n    this.startForm(lovForm);\n  }\n\n  duplicateLovNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihListOfValues.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  public api(api: DexihApi) {\n    this.clearFormSubscriptions();\n\n    let parameters = api.parameters.filter(c => c.isValid).map(parameter => {\n      return this.parameter(parameter);\n    });\n\n    const apiForm = this.fb.group({\n      'name': [api.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n      ]],\n      'sourceType': [api.sourceType, [\n        Validators.required,\n      ]],\n      'sourceDatalinkKey': [api.sourceDatalinkKey],\n      'sourceTableKey': [api.sourceTableKey],\n      'parameters': this.fb.array(parameters),\n    }, { validator: this.validateDatalinkTable() }\n    );\n\n    this.formGroupFunc = this.api;\n    this.saveMethod = 'SaveApi';\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.Api);\n    this.addMissing(api, apiForm, new DexihApi());\n    this.watchChanges(eSharedObjectType.Api, 'apiKey', 'api', this.api);\n    this.startForm(apiForm);\n  }\n\n  public validation(validation: DexihColumnValidation) {\n    const validationForm = this.fb.group({\n      'name': [validation.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateValidationNameValidator()\n      ]],\n    }\n    );\n\n    this.formGroupFunc = this.validation;\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.ColumnValidation);\n    this.saveMethod = 'SaveColumnValidation';\n    this.addMissing(validation, validationForm, new DexihColumnValidation());\n    this.watchChanges(eSharedObjectType.ColumnValidation, 'key', 'column validation', this.validation);\n    this.startForm(validationForm);\n  }\n\n  duplicateValidationNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihColumnValidations.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid\n          && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  public customFunction(customFunction: DexihCustomFunction) {\n    const customFunctionForm = this.fb.group({\n      'name': [customFunction.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateCustomFunctionNameValidator()\n      ]],\n      'dexihCustomFunctionParameters': this.fb.array(customFunction.dexihCustomFunctionParameters.filter(c => c.isValid).map(parameter => {\n        return this.customFunctionParametersFormGroup(parameter);\n      })),\n\n    }\n    );\n\n    this.formGroupFunc = this.customFunction;\n    this.saveMethod = 'SaveCustomFunction';\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.CustomFunction);\n    this.addMissing(customFunction, customFunctionForm, new DexihCustomFunction());\n    this.watchChanges(eSharedObjectType.CustomFunction, 'customFunctionKey', 'custom function', this.customFunction);\n    this.startForm(customFunctionForm);\n  }\n\n  duplicateCustomFunctionNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihCustomFunctions.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid\n          && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  public customFunctionParametersFormGroup(parameter: DexihCustomFunctionParameter): FormGroup {\n    const parameterForm = this.fb.group({\n      'name': [parameter.name, [\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(50),\n      ]],\n    });\n\n    this.addMissing(parameter, parameterForm, new DexihCustomFunctionParameter());\n    return parameterForm;\n  }\n\n  public hubVariable(hubVariable: DexihHubVariable) {\n    const hubVariableForm = this.fb.group({\n      'name': [hubVariable.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateHubVariableNameValidator()\n      ]],\n      'valueRaw': [hubVariable.isEncrypted ? null : hubVariable.value]\n    }\n    );\n\n    this.formGroupFunc = this.hubVariable;\n    this.saveMethod = 'SaveHubVariable';\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.HubVariable);\n    this.addMissing(hubVariable, hubVariableForm, new DexihHubVariable());\n    this.watchChanges(eSharedObjectType.HubVariable, 'hubVariable', 'hub variable', this.hubVariable);\n    this.startForm(hubVariableForm);\n  }\n\n  duplicateHubVariableNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihHubVariables.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid\n          && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  public tag(tag: DexihTag) {\n    const form = this.fb.group({\n      'name': [tag.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateTagNameValidator()\n      ]],\n    }\n    );\n\n    this.formGroupFunc = this.tag;\n    this.saveMethod = 'SaveTag';\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.Tags);\n    this.addMissing(tag, form, new DexihTag());\n    this.watchChanges(eSharedObjectType.Tags, 'tag', 'hub variable', this.tag);\n    this.startForm(form);\n  }\n\n  duplicateTagNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihTags.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid\n          && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  public datalinkTest(datalinkTest: DexihDatalinkTest) {\n    const form = this.fb.group({\n      'name': [datalinkTest.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateDatalinkTestNameValidator()\n      ]],\n      'dexihDatalinkTestSteps': this.fb.array([]),\n    });\n\n    let testStepsForm = <FormArray>form.controls.dexihDatalinkTestSteps;\n    datalinkTest.dexihDatalinkTestSteps.filter(c => c.isValid).forEach(step => {\n      testStepsForm.push(this.datalinkTestStep(step));\n    });\n\n    this.formGroupFunc = this.datalinkTest;\n    this.saveMethod = 'SaveDatalinkTest';\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.DatalinkTest);\n    this.addMissing(datalinkTest, form, new DexihDatalinkTest());\n    this.watchChanges(eSharedObjectType.DatalinkTest, 'datalinkTest', 'datalink test', this.datalinkTest);\n    this.startForm(form);\n  }\n\n  duplicateDatalinkTestNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihDatalinkTests.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid\n          && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  public datalinkTestStep(step: DexihDatalinkTestStep): FormGroup {\n    const form = this.fb.group({\n      'dexihDatalinkTestTables': this.fb.array([]),\n    });\n\n    let testTablesForm = <FormArray>form.controls.dexihDatalinkTestTables;\n    step.dexihDatalinkTestTables.filter(c => c.isValid).forEach(table => {\n      testTablesForm.push(this.datalinkTestTable(table));\n    });\n\n    this.addMissing(step, form, new DexihDatalinkTestStep());\n\n    if (this._datalinkTestChangesSubscription) {this._datalinkTestChangesSubscription.unsubscribe(); }\n    this._datalinkTestChangesSubscription = form.controls.datalinkKey.valueChanges.subscribe(datalinkKey => {\n      let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === datalinkKey);\n\n      while (testTablesForm.length > 0) {testTablesForm.removeAt(0); }\n\n      if (datalink.sourceDatalinkTable.sourceTableKey) {\n          let testTable = new DexihDatalinkTestTable();\n          testTable.tableKey = datalink.sourceDatalinkTable.sourceTableKey;\n          testTable.isValid = true;\n          testTablesForm.push(this.datalinkTestTable(testTable));\n      }\n\n      datalink.dexihDatalinkTransforms.filter(c => c.joinDatalinkTable && c.joinDatalinkTable.sourceTableKey).forEach(transform => {\n          let testTable = new DexihDatalinkTestTable();\n          testTable.tableKey = transform.joinDatalinkTable.sourceTableKey;\n          testTable.isValid = true;\n          testTablesForm.push(this.datalinkTestTable(testTable));\n      });\n    });\n    return form;\n  }\n\n  public datalinkTestTable(table: DexihDatalinkTestTable): FormGroup {\n    const form = this.fb.group({});\n    this.addMissing(table, form, new DexihDatalinkTestTable());\n    return form;\n  }\n\n\n\n  /// ***********\n  /// Datajob forms\n  /// ***********\n\n  public triggerFormGroup(trigger: DexihTrigger): FormGroup {\n    let triggerForm = this.fb.group({\n    });\n\n    this.addMissing(trigger, triggerForm, new DexihTrigger());\n    return triggerForm;\n  }\n\n  public datalinkStepFormGroup(datajobForm: FormGroup, step: DexihDatalinkStep): FormGroup {\n\n    let parameters = step.parameters.filter(c => c.isValid).map(parameter => {\n      return this.parameter(parameter);\n    });\n\n    let stepForm = this.fb.group({\n      'key': [step.key, [\n      ]],\n      'name': [step.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateStepNameValidator(datajobForm)\n      ]],\n      'datalinkKey': [step.datalinkKey, [\n        Validators.required\n      ]],\n      'dexihDatalinkDependencies': this.fb.array(step.dexihDatalinkDependencies.filter(c => c.isValid).map(dep => {\n        return this.datalinkDependencyFormGroup(dep);\n      })),\n      'dexihDatalinkStepColumns': this.fb.array(step.dexihDatalinkStepColumns.filter(c => c.isValid).map(col => {\n        return this.datalinkStepColumnFormGroup(col);\n      })),\n      'parameters': this.fb.array(parameters)\n    });\n\n    this.addMissing(step, stepForm, new DexihDatalinkStep());\n    return stepForm;\n  }\n\n  public datalinkDependencyFormGroup(dep: DexihDatalinkDependency): FormGroup {\n    let depForm = this.fb.group({\n    });\n\n    this.addMissing(dep, depForm, new DexihDatalinkDependency());\n    return depForm;\n  }\n\n  public datalinkStepColumnFormGroup(col: DexihDatalinkStepColumn): FormGroup {\n    let colForm = this.fb.group({\n    });\n\n    this.addMissing(col, colForm, new DexihDatalinkStepColumn());\n    return colForm;\n  }\n\n  public datajob(datajob: DexihDatajob): void {\n    this.clearFormSubscriptions();\n\n    const triggers = datajob.dexihTriggers.filter(c => c.isValid).map(trigger => {\n      return this.triggerFormGroup(trigger);\n    });\n\n    let parameters = datajob.parameters.filter(c => c.isValid).map(parameter => {\n      return this.parameter(parameter);\n    });\n\n    const stepsArray = this.fb.array([]);\n\n    const datajobForm = this.fb.group({\n      'key': [datajob.key, [\n      ]],\n      'name': [datajob.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateDatajobNameValidator()\n      ]],\n      'auditConnectionKey': [datajob.auditConnectionKey, [\n        this.requiredNotZero()\n      ]],\n      'failAction': [datajob.failAction, [\n        Validators.required\n      ]],\n      'dexihDatalinkSteps': stepsArray,\n      'dexihTriggers': this.fb.array(triggers),\n      'parameters': this.fb.array(parameters)\n    });\n\n    datajob.dexihDatalinkSteps.filter(c => c.isValid).forEach(step => {\n      stepsArray.push(this.datalinkStepFormGroup(datajobForm, step));\n    });\n\n    this.formGroupFunc = this.datajob;\n    this.saveMethod = 'SaveDatajob';\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.Datajob);\n    this.addMissing(datajob, datajobForm, new DexihDatajob());\n    this.watchChanges(eSharedObjectType.Datajob, 'key', 'data job', this.datajob);\n    this.startForm(datajobForm);\n  }\n\n  duplicateDatajobNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihDatajobs.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n\n  duplicateStepNameValidator(datajobForm: FormGroup): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        if (control && control.parent) {\n          let key = control.parent.controls['key'].value;\n          const no = datajobForm.value.dexihDatalinkSteps.findIndex(c =>\n            c.key !== key && c.isValid && c.name === name) >= 0;\n          return no ? { 'duplicateName': { name } } : null;\n        }\n      }\n    };\n  }\n\n  public remoteAgent(remoteAgent: DexihRemoteAgentHub) {\n    const remoteAgentForm = this.fb.group({\n    }\n    );\n\n    // this.formGroupFunc = this.remoteAgentSettings;\n    // this.saveMethod = 'SaveRemoteAgent';\n    // this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.RemoteAgent);\n    this.clearFormSubscriptions();\n    this.addMissing(remoteAgent, remoteAgentForm, new DexihRemoteAgentHub());\n    this.startForm(remoteAgentForm);\n  }\n\n  //\n  //\n  // Datalink Edit Forms\n  //\n  //\n\n  // gets the datalink object with embedded data stripped off.\n  public getDatalinkValue(): DexihDatalink {\n    const datalink = this.currentForm.value;\n\n    // causes problems with target table as output columns seems to get set null in the form.\n    // datalink.dexihDatalinkTransforms.forEach(t => {\n    //   t.inputColumns = null;\n    //   t.outputColumns = null;\n    // });\n\n    // datalink.targetTable = null;\n\n    return datalink;\n  }\n\n  datalinkTableColumn(siblingColumns: DexihDatalinkColumn[], column: DexihDatalinkColumn): FormGroup {\n    let childColumns = column.childColumns ? column.childColumns : [];\n\n    let columnForm = this.fb.group({\n      'name': [column.name, [\n        Validators.required,\n        Validators.maxLength(250),\n        this.duplicateDatalinkColumnNameValidator(siblingColumns)\n      ]],\n      'logicalName': [column.logicalName, [\n        Validators.required,\n        Validators.maxLength(250)\n      ]],\n      'precision': [column.precision, [\n        this.columnMinRangeValidator(0),\n        this.columnMaxRangeValidator(30),\n      ]],\n      'scale': [column.scale, [\n        this.columnMinRangeValidator(0),\n        this.columnMaxRangeValidator(30),\n      ]],\n      'useLogical': [column.name !== column.logicalName, [\n      ]],\n      'isString': [column.dataType === eTypeCode.String  || column.dataType === eTypeCode.CharArray ? true : false, [\n      ]],\n      'isNumber': [column.dataType === eTypeCode.Double || column.dataType === eTypeCode.Decimal ||\n        column.dataType === eTypeCode.Single ? true : false, [\n      ]],\n      'childColumns': this.fb.array(childColumns.filter(c => c.isValid).map(col => {\n        return this.datalinkTableColumn(childColumns, col);\n      })),\n      'runTime': {impact: eMappingStatus, lineage: eMappingStatus}\n    });\n\n    this.addMissing(column, columnForm, new DexihDatalinkColumn());\n\n    // update isString and isNumber properties automatically when dataType changes.\n    if (this._tableColumnChangesSubscription1) { this._tableColumnChangesSubscription1.unsubscribe(); }\n    this._tableColumnChangesSubscription1 = columnForm.controls.dataType.valueChanges.subscribe(dataType => {\n      if (dataType === eTypeCode.String  || dataType === eTypeCode.CharArray) {\n        columnForm.controls.isString.setValue(true);\n      } else {\n        columnForm.controls.isString.setValue(false);\n      }\n\n      if (dataType === eTypeCode.Double || dataType === eTypeCode.Decimal || dataType === eTypeCode.Single) {\n        columnForm.controls.isNumber.setValue(true);\n      } else {\n        columnForm.controls.isNumber.setValue(false);\n      }\n    });\n\n    // match logical name, unless the logical name is changed.\n    if (this._tableColumnChangesSubscription2) { this._tableColumnChangesSubscription2.unsubscribe(); }\n    this._tableColumnChangesSubscription2 = columnForm.controls.useLogical.valueChanges.subscribe(value => {\n      if (!columnForm.controls.useLogical.value) {\n        columnForm.controls.logicalName.setValue(columnForm.controls.name.value);\n      }\n    });\n\n    if (this._tableColumnChangesSubscription3) { this._tableColumnChangesSubscription3.unsubscribe(); }\n    this._tableColumnChangesSubscription3 = columnForm.controls.name.valueChanges.subscribe(value => {\n      if (!columnForm.controls.useLogical.value) {\n        columnForm.controls.logicalName.setValue(columnForm.controls.name.value);\n      }\n    });\n\n    for (const field of Object.keys(columnForm.controls)) {\n      let control = columnForm.controls[field];\n      if (control.validator) {\n        columnForm.controls[field].updateValueAndValidity();\n      }\n    }\n    return columnForm;\n  }\n\n  private duplicateDatalinkColumnNameValidator(columnsArray: DexihDatalinkColumn[]): ValidatorFn {\n    // validate no matching tables names in the same connection.\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (!columnsArray) { return null; }\n      if (this.currentForm) {\n        const name = control.value;\n        if (control.parent) {\n          const key = control.parent.value.key;\n          if (columnsArray) {\n            const no = columnsArray.findIndex(c =>\n              c.key !== key && c.isValid && this.stringCompare(c.name, name)) >= 0;\n            return no ? { 'duplicateName': { name } } : null;\n          }\n        }\n      }\n    };\n  }\n\n  public datalinkTransformFormGroup(transform: DexihDatalinkTransform): FormGroup {\n    const transformForm = this.fb.group({\n      'datalinkTransformKey': [transform.key, [\n      ]],\n      'name': [transform.name, [\n        // Validators.required,\n        // Validators.minLength(3),\n        // Validators.maxLength(50),\n      ]],\n      'datalinkKey': [transform.datalinkKey, [\n        Validators.required\n      ]],\n      'joinDatalinkTable': transform.joinDatalinkTable ? this.sourceDatalinkTableFormGroup(transform.joinDatalinkTable) : null,\n      'nodeDatalinkColumn': transform.nodeDatalinkColumn ? transform.nodeDatalinkColumn : null,\n      'isValid': true,\n\n      'runTime': {inputColumns: null, outputColumns: null, transformColumns: null},\n    });\n\n    transformForm.addControl('dexihDatalinkTransformItems', this.fb.array(transform.dexihDatalinkTransformItems\n      .filter(c => c.isValid).map(item => {\n        return this.datalinkDatalinkTransformItemFormGroup(transformForm, item);\n      })));\n\n    this.addMissing(transform, transformForm, new DexihDatalinkTransform());\n    return transformForm;\n  }\n\n  // public datalinkTransformTableFormGroup(table: DexihTable): FormGroup {\n  //   if (table) {\n  //     const tableForm = this.fb.group({\n  //       'isInternal': true,\n  //       'dexihTableColumns': this.fb.array([]),\n  //     });\n\n  //     let tableColumnsForm = <FormArray>tableForm.controls.dexihTableColumns;\n  //     table.dexihTableColumns.filter(c => c.isValid).forEach(column => {\n  //       tableColumnsForm.push(this.tableColumn(tableForm, column));\n  //     });\n\n  //     this.addMissing(table, tableForm);\n  //     return tableForm;\n  //   } else {\n  //     return null;\n  //   }\n  // }\n\n  public  datalinkDatalinkTransformItemFormGroup(datalinkTransformForm: FormGroup, item: DexihDatalinkTransformItem): FormGroup {\n    const itemForm = this.fb.group({\n      'dexihFunctionParameters': this.fb.array(item.dexihFunctionParameters.filter(c => c.isValid).map(parameter => {\n        return this.datalinkFunctionParametersFormGroup(parameter);\n      })),\n      // 'standardFunction': item.standardFunction,\n      'targetDatalinkColumn': [item.targetDatalinkColumn, [\n        this.duplicateOutputColumn(datalinkTransformForm)\n      ]],\n      'functionClassName': [item.functionClassName],\n      'functionMethodName': [item.functionMethodName],\n      'isValid': true\n    }, {asyncValidators: [this.invalidClassName()]});\n\n    this.addMissing(item, itemForm, new DexihDatalinkTransformItem());\n\n    // itemForm.controls.functionMethodName.setAsyncValidators(this.invalidClassName(itemForm));\n\n    // when ever generic parameter changes, change all underlying types.\n    if (this._genericParameterSubscription) { this._genericParameterSubscription.unsubscribe(); }\n    this._genericParameterSubscription = itemForm.controls.genericTypeCode.valueChanges.subscribe(() => {\n      let typeCode = itemForm.controls.genericTypeCode.value;\n      let parameters = <FormArray> itemForm.controls.dexihFunctionParameters;\n      parameters.controls.filter(c => c.value.isGeneric).forEach(p => {\n        let param = <FormGroup>p;\n        param.controls.dataType.setValue(typeCode);\n        let arrayParams = <FormArray> param.controls.arrayParameters;\n        arrayParams.controls.forEach(ap => {\n          let aParam = <FormGroup>ap;\n          aParam.controls.dataType.setValue(typeCode);\n        });\n      });\n    });\n\n\n    return itemForm;\n  }\n\n  duplicateOutputColumn(datalinkTransformForm: FormGroup): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const column = <DexihDatalinkColumn>control.value;\n        const transformColumns = <DexihDatalinkColumn[]>datalinkTransformForm.controls.runTime.value.transformColumns;\n        if (transformColumns && column) {\n          const no = transformColumns.filter(c => c.name === column.name).length > 1;\n          return no ? { 'duplicateName': { name } } : null;\n        } else {\n          return null;\n        }\n      }\n    };\n  }\n\n  invalidClassName(): AsyncValidatorFn {\n    return (control: AbstractControl): Promise<ValidationErrors | null> => {\n      const datalinkTransformItemForm = <FormGroup>control;\n      datalinkTransformItemForm.controls.functionMethodName.setErrors(null);\n      if (this.currentForm && datalinkTransformItemForm.controls.transformItemType\n        && datalinkTransformItemForm.controls.transformItemType.value === eTransformItemType.BuiltInFunction ) {\n        return new Promise((resolve, reject) => {\n          this.hubService.GetFunctionReference(datalinkTransformItemForm.value).then(func => {\n          if (func) {\n            resolve(null);\n          } else {\n            const value = datalinkTransformItemForm.controls.functionClassName.value + '.' +\n              datalinkTransformItemForm.controls.functionMethodName.value;\n              datalinkTransformItemForm.controls.functionMethodName.setErrors({ 'invalidClass': { value } });\n            resolve({ 'invalidClass': { value } });\n          }\n        }).catch(reason => {\n          reject(reason);\n        });\n      });\n      } else {\n        return Promise.resolve(null);\n      }\n    };\n  }\n\n  public datalinkFunctionParametersFormGroup(parameter: DexihFunctionParameter): FormGroup {\n    const parameterForm = this.fb.group({\n      // 'name': [, [ // used for adding new columns\n      // ]],\n      'datalinkColumn': parameter.datalinkColumn,\n      'runTime': parameter['runTime'],\n      'arrayParameters': this.fb.array(parameter.arrayParameters.filter(c => c.isValid).map(p => {\n        return this.datalinkFunctionArrayParametersFormGroup(p);\n      })),\n    }, { validator: this.inconsistentDataType()});\n\n    this.addMissing(parameter, parameterForm, new DexihFunctionParameter());\n\n    return parameterForm;\n  }\n\n  public datalinkFunctionArrayParametersFormGroup(parameter: DexihFunctionArrayParameter): FormGroup {\n    const parameterForm = this.fb.group({\n      // 'name': [, [ // used for adding new columns\n      // ]],\n      'datalinkColumn': parameter.datalinkColumn,\n      'runTime': parameter['runTime'],\n    }, { validator: this.inconsistentDataType()});\n\n    this.addMissing(parameter, parameterForm, new DexihFunctionArrayParameter());\n\n    return parameterForm;\n  }\n\n  inconsistentDataType(): ValidatorFn {\n    return (group: FormGroup): { [key: string]: any } => {\n      if (this.currentForm) {\n        const datalinkColumn = group.controls.datalinkColumn;\n        if (datalinkColumn && datalinkColumn.value) {\n          const dataType = datalinkColumn.value.dataType;\n          const parameterDataType = group.controls.dataType?.value;\n          if (dataType !== parameterDataType) {\n            datalinkColumn.setErrors({'dataType': { dataType }});\n            return { 'dataType': { dataType }};\n          } else {\n            datalinkColumn.setErrors(null);\n          }\n        }\n      }\n      return null;\n    };\n  }\n\n  public datalinkProfileFormGroup(profile: DexihDatalinkProfile): FormGroup {\n    const profileForm = this.fb.group({\n      'isValid': true\n    });\n\n    this.addMissing(profile, profileForm, new DexihDatalinkProfile());\n    return profileForm;\n  }\n\n  public datalinkTargetFormGroup(target: DexihDatalinkTarget, table: DexihTable = null): FormGroup {\n\n    if (!table && target.tableKey) {\n      table = this.hubCache.getTable(target.tableKey);\n    }\n    // if (!table) {\n    //   table = new DexihTable();\n    // }\n\n    const targetForm = this.fb.group({\n      'table': table ? this.tableForm(table) : null,\n      'runTime': {inputColumns: null},\n      'nodeDatalinkColumn': target.nodeDatalinkColumn ? target.nodeDatalinkColumn : null,\n      'isValid': true\n    });\n\n    this.addMissing(target, targetForm, new DexihDatalinkTarget());\n\n    let subscription = targetForm.controls.tableKey.valueChanges.subscribe(tableKey => {\n      if (tableKey > 0) {\n        table = this.hubCache.getTable(tableKey);\n        const tableForm = table ? this.tableForm(table) : null;\n        targetForm.setControl('table', tableForm);\n      }\n    });\n\n    this._datalinkTargetChanges.push(subscription);\n\n    return targetForm;\n  }\n\n\n  public sourceDatalinkTableFormGroup(datalinkTable: DexihDatalinkTable): FormGroup {\n    const form = this.fb.group({\n      'sourceType': [datalinkTable.sourceType, [\n        Validators.required,\n      ]],\n      'sourceTableKey': [datalinkTable.sourceTableKey, [\n      ]],\n      'sourceDatalinkKey': [datalinkTable.sourceDatalinkKey, [\n      ]],\n      'isValid': true,\n      'dexihDatalinkColumns': this.fb.array([]),\n    }, { validator: this.validateDatalinkTable() });\n\n    let tableColumnsForm = <FormArray>form.controls.dexihDatalinkColumns;\n    datalinkTable.dexihDatalinkColumns.filter(c => c.isValid).forEach(column => {\n      tableColumnsForm.push(this.datalinkTableColumn(tableColumnsForm.value, column));\n    });\n\n    this.addMissing(datalinkTable, form, new DexihDatalinkTable());\n    return form;\n  }\n\n  private validateDatalinkTable() {\n    return (group: FormGroup) => {\n      let sourceType = group.get('sourceType').value;\n      let sourceTableKey = group.get('sourceTableKey');\n      let sourceDatalinkKey = group.get('sourceDatalinkKey');\n\n      sourceTableKey.setErrors(null);\n      sourceDatalinkKey.setErrors(null);\n\n      if (sourceType === eSourceType.Table) {\n        if (!sourceTableKey.value) {\n          return sourceTableKey.setErrors({ required: true });\n        }\n      } else if (sourceType === eSourceType.Datalink) {\n        if (!sourceDatalinkKey.value) {\n          return sourceDatalinkKey.setErrors({ required: true });\n        }\n      }\n    };\n  }\n\n  private missingSourceDatalinkKey(sourceType: eSourceType): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      return sourceType === eSourceType.Datalink && !control.value ? { 'required': 'required' } : null;\n    };\n  }\n\n  datalink(datalink: DexihDatalink): void {\n    this.logger.LogC(() => `datalink key:${datalink.key} datalink:${datalink.name}`, eLogLevel.Debug);\n\n    this.clearFormSubscriptions();\n\n    let profiles = datalink.dexihDatalinkProfiles.filter(c => c.isValid).map(profile => {\n      return this.datalinkProfileFormGroup(profile);\n    });\n\n    let targets = datalink.dexihDatalinkTargets.filter(c => c.isValid).map(target => {\n      return this.datalinkTargetFormGroup(target);\n    });\n\n    let transforms = datalink.dexihDatalinkTransforms.filter(c => c.isValid).map(transform => {\n      return this.datalinkTransformFormGroup(transform);\n    });\n\n    let parameters = datalink.parameters.filter(c => c.isValid).map(parameter => {\n      return this.parameter(parameter);\n    });\n\n\n    const datalinkForm = this.fb.group({\n      'name': [datalink.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateDatalinkNameValidator(datalink.key)\n      ]],\n      'sourceDatalinkTable': this.sourceDatalinkTableFormGroup(datalink.sourceDatalinkTable),\n      'auditConnectionKey': [datalink.auditConnectionKey, [\n        // Validators.required,\n      ]],\n      'updateStrategy': [datalink.updateStrategy, [\n        // Validators.required,\n      ]],\n      'dexihDatalinkTransforms': this.fb.array(transforms),\n      'dexihDatalinkProfiles': this.fb.array(profiles),\n      'dexihDatalinkTargets': this.fb.array(targets),\n      'parameters': this.fb.array(parameters),\n      'isValid': true\n    });\n\n    let templateDatalink = new DexihDatalink();\n    templateDatalink.sourceDatalinkTable = new DexihDatalinkTable();\n    this.addMissing(datalink, datalinkForm, templateDatalink);\n\n    this.formGroupFunc = this.datalink;\n    this.saveMethod = 'SaveDatalink';\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.Datalink);\n    this.valueMethod = 'getDatalinkValue';\n\n    // whenever the datalink changes, update any transforms input/output columns.\n    if (this._datalinkChangesSubscription1) { this._datalinkChangesSubscription1.unsubscribe(); }\n    this._datalinkChangesSubscription1 = datalinkForm.valueChanges.subscribe(() => {\n      this.updateTransformFormColumns(datalinkForm);\n    });\n    this.updateTransformFormColumns(datalinkForm);\n\n    this.watchChanges(eSharedObjectType.Datalink, 'key', 'datalink', this.datalink);\n    this.startForm(datalinkForm);\n  }\n\n  private duplicateDatalinkNameValidator(datalinkKey: number): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihDatalinks.findIndex(c =>\n          c.key !== datalinkKey && c.isValid && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  private updateTransformFormColumns(datalinkForm: FormGroup) {\n    if (this.IgnoreFormChange === false) {\n      this.IgnoreFormChange = true;\n      const transformsArray = <FormArray>datalinkForm.controls.dexihDatalinkTransforms;\n      const datalink = <DexihDatalink> datalinkForm.value;\n      const ioColumns = new InputOutputColumns();\n\n      ioColumns.buildInputOutput(this.hubCache, datalink);\n\n      transformsArray.controls.forEach(transformFormControl => {\n        const datalinkTransformForm = <FormGroup>transformFormControl;\n        const datalinkTransform = datalinkTransformForm.value;\n\n        // const inputColumns = ioColumns.getInputColumns(this.hubCache, datalink, datalinkTransform, []);\n        // const outputColumns = ioColumns.getOutputColumns(this.hubCache, datalink, datalinkTransform);\n\n        const transform = datalink.dexihDatalinkTransforms.find(c => c.key === datalinkTransform.datalinkTransformKey);\n\n        datalinkTransformForm.controls.runTime.setValue(transform['runTime']);\n\n        const items = <FormArray>datalinkTransformForm.controls.dexihDatalinkTransformItems;\n        items.controls.forEach(item => {\n          const transformItemForm = <FormGroup>item;\n          if (transformItemForm.controls.targetDatalinkColumn) {\n            transformItemForm.controls.targetDatalinkColumn.updateValueAndValidity();\n          }\n          if (transformItemForm.controls.sourceDatalinkColumn) {\n            transformItemForm.controls.sourceDatalinkColumn.updateValueAndValidity();\n          }\n\n          const params = <FormArray>transformItemForm.controls.dexihFunctionParameters;\n          params.controls.forEach(param => {\n            const paramForm = <FormGroup>param;\n            if (paramForm.controls.datalinkColumn) {\n              paramForm.controls.datalinkColumn.updateValueAndValidity();\n            }\n          });\n        });\n      });\n\n      const targetsArray = <FormArray>datalinkForm.controls.dexihDatalinkTargets;\n      targetsArray.controls.forEach((targetForm: FormGroup) => {\n        let target = datalink.dexihDatalinkTargets.find(c => c.key === targetForm.controls.key.value);\n        if (target) {\n          targetForm.controls.runTime.setValue(target['runTime']);\n        }\n      });\n\n      this.IgnoreFormChange = false;\n    }\n  }\n}\n","import {HubCache, eMappingStatus } from './hub.models'\nimport { DexihDatalinkColumn, eTypeCode, DexihDatalink, DexihDatalinkTable, eTransformItemType,\n    eTransformType, DexihTableColumn, DexihDatalinkTransform, DexihDatalinkTransformItem, DexihFunctionParameter, eDeltaType, eDuplicateStrategy } from '../shared/shared.models';\n\nexport enum eDatalinkObjectType {\n    SourceTable,\n    TargetTable,\n    Transform\n}\n\nexport enum eObjectUse {\n    Sort,\n    Mapping,\n    Function,\n    Join,\n    PassThrough,\n    Source,\n    Target\n}\n\nexport class ImpactLineage {\n    public objectType: eDatalinkObjectType;\n    public objectUse: eObjectUse;\n\n    public column: DexihDatalinkColumn;\n    public link: string;\n\n    public ImpactItems: ImpactLineage[];\n    public LineageItems: ImpactLineage[];\n\n    private currentMappingStatus(): eMappingStatus {\n        switch (this.objectUse) {\n            case eObjectUse.Sort:\n                return eMappingStatus.Sorted;\n            case eObjectUse.Mapping:\n                return eMappingStatus.Mapped;\n            case eObjectUse.Function:\n                return eMappingStatus.Mapped;\n            case eObjectUse.Join:\n                return eMappingStatus.Joined;\n            case eObjectUse.PassThrough:\n                return eMappingStatus.PassThroughMap;\n            case eObjectUse.Source:\n                return eMappingStatus.Mapped;\n            case eObjectUse.Target:\n                return eMappingStatus.Mapped;\n        }\n    }\n\n    // look at forward mappings to get current impact mapping status for column\n    public GetImpact(): eMappingStatus {\n        let mappingStatus = eMappingStatus.NotMapped;\n\n        this.ImpactItems.forEach(impact => {\n            let newStatus = impact.GetImpact();\n            if (newStatus < mappingStatus) {\n                mappingStatus = newStatus;\n            }\n        });\n\n        return mappingStatus;\n    }\n\n    public GetLineage(): eMappingStatus {\n        let mappingStatus = eMappingStatus.NotMapped;\n        return mappingStatus;\n    }\n}\n\n\nexport class InputOutputColumns {\n\n    // used to find a column within a node structure.\n    findColumn(column: DexihDatalinkColumn, nodeDatalinkColumnKey: number): boolean {\n        if (!nodeDatalinkColumnKey) {\n            return false;\n        }\n        if (column.key === nodeDatalinkColumnKey) {\n            return true;\n        }\n        if (column.childColumns) {\n            for (let childColumn of column.childColumns) {\n                if (this.findColumn(childColumn, nodeDatalinkColumnKey)) {\n                    return true;\n                }\n            };\n        }\n        return false;\n    }\n\n    // used to find a node column within a node structure.\n    findNodeColumn(column: DexihDatalinkColumn, columns: DexihDatalinkColumn[]): DexihDatalinkColumn {\n        if (!column || !columns || columns.length === 0) {\n            return null;\n        }\n\n        for (let col of columns) {\n            if (col.key === column.key) {\n                return col;\n            }\n            if (col.childColumns) {\n                let returnCol = this.findNodeColumn(column, col.childColumns);\n                if (returnCol) {\n                    return returnCol;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    // used to find a node column within a node structure.\n    findParentColumns(column: DexihDatalinkColumn, columns: DexihDatalinkColumn[]): DexihDatalinkColumn[] {\n        if (!column || !columns || columns.length === 0) {\n            return null;\n        }\n\n        for (let col of columns) {\n            if (col.key === column.key) {\n                return columns;\n            }\n            if (col.childColumns) {\n                let returnCol = this.findParentColumns(column, col.childColumns);\n                if (returnCol) {\n                    return returnCol;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    // gets all allowable columns given the specified nodeLevel\n    validColumns(nodeDatalinkColumnKey: number, columns: DexihDatalinkColumn[]): DexihDatalinkColumn[] {\n        if (!nodeDatalinkColumnKey) {\n            return columns;\n        }\n\n        let validColumns: DexihDatalinkColumn[] = [];\n\n        columns.forEach(col => {\n            validColumns.push(col);\n            if (col.key === nodeDatalinkColumnKey) {\n                if (col.childColumns) {\n                    validColumns = validColumns.concat(col.childColumns);\n                }\n            } else if (this.findColumn(col, nodeDatalinkColumnKey)) {\n                let cols = this.validColumns(nodeDatalinkColumnKey, col.childColumns);\n                validColumns = validColumns.concat(cols);\n            }\n        });\n\n        return validColumns;\n    }\n\n    findValidColumn(column: DexihDatalinkColumn, nodeDatalinkColumnKey: number, columns: DexihDatalinkColumn[])\n        : DexihDatalinkColumn {\n\n        for (let col of columns) {\n            if (col.key === column.key) {\n                return col;\n            }\n\n            if (this.findColumn(col, nodeDatalinkColumnKey)) {\n                let newCol = this.findValidColumn(column, nodeDatalinkColumnKey, col.childColumns);\n                if (newCol) { return newCol };\n            }\n        };\n\n        return null;\n    }\n\n\n    // gets a flattened list of the available source columns, which can be used to populate drop-downs\n    getAvailableColumns(columns: DexihDatalinkColumn[], nodeDatalinkColumnKey: number, levelCount: number): DexihDatalinkColumn[] {\n        let returnColumns = [];\n\n        columns.forEach(column => {\n          let newColumn = Object.assign({}, column);\n          newColumn.logicalName = '-'.repeat(levelCount) + column.logicalName;\n          returnColumns.push(newColumn);\n          if (column.dataType === eTypeCode.Node && column.childColumns) {\n            let io = new InputOutputColumns();\n            if (io.findColumn(column, nodeDatalinkColumnKey)) {\n              let childColumns = this.getAvailableColumns(column.childColumns, nodeDatalinkColumnKey, levelCount + 1);\n              returnColumns.push.apply(returnColumns, childColumns);\n            }\n          }\n        });\n\n        return returnColumns;\n      }\n\n      public getDatalinkOutputColumns(datalink: DexihDatalink): DexihDatalinkColumn[] {\n        if (datalink.dexihDatalinkTransforms.length > 0) {\n            let transforms = datalink.dexihDatalinkTransforms.sort((a, b) => b.position - a.position);\n            return transforms[0]['runTime'].outputColumns;\n        } else {\n            return datalink.sourceDatalinkTable.dexihDatalinkColumns;\n        }\n      }\n\n    /// used to copy a datalink column from source to target, modifying properties which shouldn't be passed across.\n    public copyDatalinkColumn(column: DexihDatalinkColumn, newPosition: number, newGroup: string): DexihDatalinkColumn {\n        if (!column) { return null; }\n\n        let newColumn = new DexihDatalinkColumn();\n        Object.assign(newColumn, column);\n        if (column.childColumns) {\n            newColumn.childColumns = column.childColumns\n            .sort((a, b) => a.position - b.position)\n            .map((c, index) => this.copyDatalinkColumn(c, index, newGroup + '.' + column.logicalName));\n        }\n        newColumn.isIncrementalUpdate = false;\n        newColumn.isInput = false;\n        newColumn.position = newPosition;\n\n        if (newGroup) {\n            newColumn.columnGroup = newGroup;\n        } else {\n            newColumn.columnGroup = column.columnGroup;\n        }\n        return newColumn;\n    }\n\n    public copyDatalinkColumns(columns: DexihDatalinkColumn[]): DexihDatalinkColumn[] {\n        let newColumns: DexihDatalinkColumn[] = [];\n        columns.forEach(column => {\n            newColumns.push(this.copyDatalinkColumn(column, column.position, column.columnGroup));\n        });\n        return newColumns;\n    }\n\n    public copyDatalinkTable(table: DexihDatalinkTable): DexihDatalinkTable {\n        let newTable = Object.assign({}, table);\n        let newColumns: DexihDatalinkColumn[] = [];\n\n        table.dexihDatalinkColumns.forEach(column => {\n            newColumns.push(this.copyDatalinkColumn(column, column.position, column.columnGroup));\n        });\n        newTable.dexihDatalinkColumns = newColumns;\n\n        return newTable;\n    }\n\n    public buildInputOutput(hubCache: HubCache, datalink: DexihDatalink) {\n\n        // get a reverse sorted list of transforms prior to the current one.\n        let transforms = datalink.dexihDatalinkTransforms\n            .filter(a => a.isValid)\n            .sort((a, b) => a.position - b.position);\n\n        transforms.forEach((transform, index) => {\n            let inputColumns: DexihDatalinkColumn[] = [];\n\n            // if this is the first transform, then the inputs columns will come from the source.\n            if (index === 0) {\n                inputColumns = datalink.sourceDatalinkTable.dexihDatalinkColumns\n                    .filter(c => c.deltaType !== eDeltaType.IgnoreField)\n                    .sort((a, b) => a.position - b.position)\n                    .map((c, i) => this.copyDatalinkColumn(c, i, c.columnGroup));\n\n                // initialize all input columns to not mapped.\n                inputColumns.forEach(c => {\n                    c['runTime'] = {impact: eMappingStatus.NotMapped, lineage: eMappingStatus.NotMapped}\n                });\n            } else {\n                // get outputs from the previous transform\n                inputColumns = transforms[index - 1]['runTime'].outputColumns\n                    .filter(c => c.deltaType !== eDeltaType.IgnoreField)\n                    .sort((a, b) => a.position - b.position)\n                    .map((c, i) => this.copyDatalinkColumn(c, i, c.columnGroup));\n            }\n\n            // get a sorted list of the transform items.\n            let transformItems = transform.dexihDatalinkTransformItems\n                .sort((a, b) => a.position - b.position);\n\n            // outputColumns contains columns at the top level.\n            let outputColumns: DexihDatalinkColumn[] = [];\n\n            // transformColumns the current node which is being transformed (i.e. which mappings and other operations should be applied to)\n            let transformColumns = outputColumns;\n\n            let pos = 0;\n\n            let nodeColumn = transform.nodeDatalinkColumn ?\n                this.findNodeColumn(transform.nodeDatalinkColumn, inputColumns) : null;\n\n            // if the mapping uses a node level, copy parent columns, and set new node level.\n            if (nodeColumn) {\n                outputColumns = this.copyDatalinkColumns(inputColumns);\n\n                nodeColumn = transform.nodeDatalinkColumn ?\n                this.findNodeColumn(transform.nodeDatalinkColumn, outputColumns) : null;\n\n                // create a copy of the inputs columns\n                inputColumns.forEach((column) => {\n                    transformColumns.push(this.copyDatalinkColumn(column, pos++, column.columnGroup));\n                });\n\n                nodeColumn.childColumns = [];\n                transformColumns = nodeColumn.childColumns;\n            }\n\n            // add group columns\n            transformItems\n                .filter(c => (c.transformItemType === eTransformItemType.Series\n                    || c.transformItemType === eTransformItemType.Column) &&\n                    c.sourceDatalinkColumn )\n                .forEach(item => {\n                transformColumns.push(this.copyDatalinkColumn(item.sourceDatalinkColumn, pos++, 'Group'));\n            });\n\n            // if there is group node, all non-group columns should be child columns.\n            let groupNode = transformItems.find(c => c.transformItemType === eTransformItemType.GroupNode)\n            if (groupNode) {\n                let groupColumn = this.copyDatalinkColumn(groupNode.targetDatalinkColumn, pos++, 'Group Node');\n                transformColumns.push(groupColumn);\n\n                // set the current node level to the group column, so transforms are mapped as it's child columns.\n                transformColumns = groupColumn.childColumns;\n            }\n\n            // if the transform is a join, then pull in the join table columns\n            if ((transform.transformType === eTransformType.Join || transform.transformType === eTransformType.Lookup)\n                && transform.joinDatalinkTable) {\n                let joinColumns: DexihDatalinkColumn[];\n                let joinNode = transform.dexihDatalinkTransformItems.find(c => c.transformItemType === eTransformItemType.JoinNode)\n\n                if (joinNode) {\n                    let joinColumn = joinNode.targetDatalinkColumn;\n                    if (joinColumn) {\n                        joinColumn = this.copyDatalinkColumn(joinColumn, pos++, 'Join Node');\n                        joinColumn.childColumns = [];\n                        transformColumns.push(joinColumn);\n                        joinColumns = joinColumn.childColumns;\n                    } else {\n                        joinColumns = [];\n                    }\n                } else {\n                    joinColumns = transformColumns;\n                }\n\n\n                // set join position to high number so join columns are positioned after other columns.\n                let joinPos = 10000;\n                transform.joinDatalinkTable.dexihDatalinkColumns.sort((a, b) => a.position - b.position).forEach(c => {\n                    if(transform.joinDuplicateStrategy !== eDuplicateStrategy.MergeValidDates || (c.deltaType !== eDeltaType.ValidFromDate && c.deltaType !== eDeltaType.ValidToDate)) {\n                        \n                        let jc = this.copyDatalinkColumn(c, joinPos++, transform.joinDatalinkTable.name);\n                        joinColumns.push(jc);\n                    }\n                });\n            }\n\n            // if the transform is a Concatenate, then merge common column names together.\n            if (transform.transformType === eTransformType.Concatenate && transform.joinDatalinkTable) {\n                // get the join tables.\n                let joinTable = transform.joinDatalinkTable;\n\n                // add any missing columns in the join table to the main table.\n                joinTable.dexihDatalinkColumns.sort((a, b) => a.position - b.position).forEach(concat => {\n                    if (!transformColumns.find(c => c.name === concat.name)) {\n                        transformColumns.push(this.copyDatalinkColumn(concat, pos++, 'Concatenate'));\n                    }\n                });\n            }\n\n            // add other mapped columns to the current node level.\n            transformItems.forEach(item => {\n                // if the item type of a column (used for group transform), then the source column is pushed to the output.\n                switch (item.transformItemType) {\n                    case eTransformItemType.AggregatePair:\n                    case eTransformItemType.BuiltInFunction:\n                    case eTransformItemType.ColumnPair:\n                    case eTransformItemType.CustomFunction:\n                    case eTransformItemType.UnGroup:\n                        if (item.targetDatalinkColumn) {\n                            transformColumns.push(item.targetDatalinkColumn);\n                        }\n                        item.dexihFunctionParameters.filter(c => HubCache.parameterIsOutput(c)).forEach(param => {\n                            if (param.datalinkColumn) {\n                                transformColumns.push(param.datalinkColumn);\n                            }\n\n                            param.arrayParameters.forEach(arrayParam => {\n                                if (arrayParam.datalinkColumn) {\n                                    transformColumns.push(arrayParam.datalinkColumn);\n                                }\n                            });\n                        });\n                        break;\n                }\n            });\n\n            // add the passThrough columns\n            if (transform.passThroughColumns) {\n                let columns = inputColumns;\n                // get the matching node from the inputs\n                if (nodeColumn) {\n                    let node = this.findNodeColumn(nodeColumn, columns);\n                    if (node) {\n                        columns = node.childColumns;\n                    }\n                }\n                columns.forEach(column => {\n                    if (transformColumns.findIndex(c => c.name === column.name && c.columnGroup === column.columnGroup  ) < 0) {\n                        let newColumn = this.copyDatalinkColumn(column, pos++, column.columnGroup)\n\n                        if(transform.joinDuplicateStrategy === eDuplicateStrategy.MergeValidDates && (newColumn.deltaType === eDeltaType.ValidFromDate || newColumn.deltaType === eDeltaType.ValidToDate)) {\n                            newColumn.columnGroup = 'merged';\n                            newColumn.position = 20000 + pos;\n                        }\n\n                        transformColumns.push(newColumn);\n                    }\n                });\n            }\n\n            transform['runTime'] = {inputColumns: inputColumns, outputColumns: outputColumns, transformColumns: transformColumns }\n        });\n\n        // set the columns for the targets\n        let targetColumns: DexihDatalinkColumn[];\n        if (transforms.length > 0) {\n            targetColumns = transforms[0]['runTime'].outputColumns;\n        } else {\n            targetColumns = datalink.sourceDatalinkTable.dexihDatalinkColumns;\n        }\n\n        datalink.dexihDatalinkTargets.forEach(target => {\n            if (target.nodeDatalinkColumn) {\n                let validColumns =  this.validColumns(target.nodeDatalinkColumn.key, targetColumns);\n                target['runTime'] = {inputColumns: validColumns }\n            } else {\n                target['runTime'] = {inputColumns: targetColumns};\n            }\n\n        });\n\n    }\n}\n\nexport class ColumnUsageNode {\n    public impactTree: Array<ColumnUsageNode>;\n    public lineageTree: Array<ColumnUsageNode>;\n\n    public constructor(\n        public objectType: eDatalinkObjectType,\n        public objectUse: eObjectUse,\n        public datalink: DexihDatalink,\n        // public table: DexihTable,\n        public datalinkColumn: DexihDatalinkColumn,\n        public tableColumn: DexihTableColumn,\n        public datalinkTransform: DexihDatalinkTransform,\n        public datalinkTransformItem: DexihDatalinkTransformItem,\n        public mappingStatus: eMappingStatus,\n        public hubCache: HubCache\n    ) {}\n\n    // get the parameters and array parameter in a single list to save recursive calls.\n    private flattenParameters(params: DexihFunctionParameter[]): any[] {\n        let flat = <any[]> params;\n\n        params.forEach(p => {\n            flat = flat.concat(p.arrayParameters);\n        })\n\n        return flat;\n    }\n\n    // builds the impactTree and returns a status to indicate how the column is mapped.\n    public createDatalinkImpact(useNextTransform: boolean): eMappingStatus  {\n       this.impactTree = [];\n       let newMappingStatus: eMappingStatus = eMappingStatus.NotMapped;\n\n        let nextTransform: DexihDatalinkTransform = null;\n       if (useNextTransform) {\n            switch (this.objectType) {\n                case  eDatalinkObjectType.SourceTable:\n                    if (this.datalink.dexihDatalinkTransforms.length > 0 ) {\n                        nextTransform = this.datalink.dexihDatalinkTransforms.sort((a, b) => a.position - b.position)[0];\n                    }\n                    break;\n                case eDatalinkObjectType.Transform:\n                    let transforms = this.datalink.dexihDatalinkTransforms\n                        .filter(c => c.position > this.datalinkTransform.position).sort((a, b) => a.position - b.position);\n                    if (transforms.length > 0 ) {\n                        nextTransform = transforms[0];\n                    } else {\n                        this.mappingStatus = eMappingStatus.Mapped;\n                    }\n                    break;\n                case eDatalinkObjectType.TargetTable:\n                    return;\n            }\n       } else {\n           if (this.datalinkTransform) {\n                nextTransform = this.datalinkTransform;\n           } else {\n               if (this.datalink.dexihDatalinkTransforms.length > 0) {\n                    let transforms = this.datalink.dexihDatalinkTransforms.sort((a, b) => b.position - a.position); // sort asc\n                    nextTransform = transforms[0];\n               }\n           }\n       }\n\n        // find all occurrences of the current column in the next transform.\n        if (nextTransform) {\n            let columnIsMapped = false;\n            nextTransform.dexihDatalinkTransformItems.forEach(item => {\n                switch (item.transformItemType) {\n                    case eTransformItemType.Column:\n                        // if this column is mapped, then add it to the impact tree.\n                        if (item.sourceDatalinkColumn &&\n                                item.sourceDatalinkColumn.key === this.datalinkColumn.key ) {\n                            let column = item.sourceDatalinkColumn;\n                            if (column) {\n                                let newImpactTree =\n                                    new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Mapping, this.datalink,\n                                        column, null, nextTransform, null, eMappingStatus.Mapped, this.hubCache);\n                                let newStatus = newImpactTree.createDatalinkImpact(true);\n                                if (newStatus < newMappingStatus) {\n                                    newMappingStatus = newStatus;\n                                }\n                                this.impactTree.push(newImpactTree);\n                                if (column.name === this.datalinkColumn.name) {\n                                    columnIsMapped = true;\n                                }\n                            } else {\n                                this.mappingStatus = eMappingStatus.Error;\n                                return eMappingStatus.Error;\n                            }\n                        }\n                        break;\n                    case eTransformItemType.ColumnPair:\n                        // if this column is mapped, then add it to the impact tree.\n                        if (item.sourceDatalinkColumn &&\n                                item.sourceDatalinkColumn.key === this.datalinkColumn.key &&\n                                item.targetDatalinkColumn ) {\n                            let column = item.targetDatalinkColumn;\n                            if (column) {\n                                let newImpactTree =\n                                    new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Mapping, this.datalink,\n                                        column, null, nextTransform, null, eMappingStatus.Mapped, this.hubCache);\n                                let newStatus = newImpactTree.createDatalinkImpact(true);\n                                if (newStatus < newMappingStatus) {\n                                    newMappingStatus = newStatus;\n                                }\n                                this.impactTree.push(newImpactTree);\n                                if (item.targetDatalinkColumn.name === this.datalinkColumn.name) {\n                                    columnIsMapped = true;\n                                }\n                            } else {\n                                this.mappingStatus = eMappingStatus.Error;\n                                return eMappingStatus.Error;\n                            }\n                        }\n                        break;\n                    case eTransformItemType.BuiltInFunction:\n                    case eTransformItemType.CustomFunction:\n                        // if the column is part of a function parameter, then add it to the tree.\n\n                        let inputParams = this.flattenParameters(item.dexihFunctionParameters\n                            .filter(p => HubCache.parameterIsInput(p)));\n\n                            inputParams.forEach(inputParam => {\n\n                                if (inputParam.datalinkColumn &&\n                                    inputParam.datalinkColumn.key === this.datalinkColumn.key) {\n                                    // add the target column (if mapped)\n                                    if (item.targetDatalinkColumn) {\n                                        let column = item.targetDatalinkColumn;\n                                        if (column) {\n                                            let newImpactTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Function,\n                                                this.datalink, column, null, nextTransform, item, eMappingStatus.Mapped, this.hubCache);\n                                            let newStatus = newImpactTree.createDatalinkImpact(true);\n                                            if (newStatus < newMappingStatus) {\n                                                newMappingStatus = newStatus;\n                                            }\n                                            this.impactTree.push(newImpactTree);\n                                            if (column.name === this.datalinkColumn.name) {\n                                                columnIsMapped = true;\n                                            }\n                                        } else {\n                                            this.mappingStatus = eMappingStatus.Error;\n                                            return eMappingStatus.Error;\n                                        }\n                                    }\n\n                                    let outParams = this.flattenParameters(item.dexihFunctionParameters\n                                        .filter(p => HubCache.parameterIsOutput(p)));\n\n                                    // add any output parameters\n                                    outParams.forEach(outParam => {\n                                        if (outParam.datalinkColumn) {\n                                            let column = outParam.datalinkColumn;\n                                            if (column) {\n                                                let newImpactTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Function,\n                                                    this.datalink, column, null, nextTransform,\n                                                    item, eMappingStatus.Mapped, this.hubCache);\n                                                let newStatus = newImpactTree.createDatalinkImpact(true);\n                                                if (newStatus < newMappingStatus) {\n                                                    newMappingStatus = newStatus;\n                                                }\n                                                this.impactTree.push(newImpactTree);\n                                                if (column.name === this.datalinkColumn.name) {\n                                                    columnIsMapped = true;\n                                                }\n                                            } else {\n                                                this.mappingStatus = eMappingStatus.Error;\n                                                return eMappingStatus.Error;\n                                            }\n                                        }\n                                    });\n                                }\n                            });\n                        break;\n                    case eTransformItemType.JoinPair:\n                        // if this column part of a join add it.\n                        if (item.sourceDatalinkColumn && item.sourceDatalinkColumn.key\n                                === this.datalinkColumn.key) {\n                            let joinTable = nextTransform.joinDatalinkTable;\n                            if (joinTable) {\n                                let column = item.joinDatalinkColumn;\n\n                                if (column) {\n                                    let newImpactTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Join,\n                                        this.datalink, column, null, nextTransform, item, eMappingStatus.Joined, this.hubCache);\n                                    this.impactTree.push(newImpactTree);\n                                } else {\n                                    this.mappingStatus = eMappingStatus.Error;\n                                    return eMappingStatus.Error;\n                                }\n                            } else {\n                                return eMappingStatus.Error;\n                            }\n                        }\n                        break;\n                    case eTransformItemType.Sort:\n                        // if this column part of a sort, add it.\n                        if (item.sourceDatalinkColumn &&\n                                item.sourceDatalinkColumn.key === this.datalinkColumn.key) {\n                            let newImpactTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Sort,\n                                    this.datalink, this.datalinkColumn, null, nextTransform, item, eMappingStatus.Sorted, this.hubCache);\n                            this.impactTree.push(newImpactTree);\n                        }\n                        break;\n                }\n\n            });\n\n            // if the column was not mapped, and the transform passes through columns without mapping, then add it.\n            if (!columnIsMapped && nextTransform.passThroughColumns) {\n                if (this.mappingStatus === eMappingStatus.Mapped) {\n                    newMappingStatus = eMappingStatus.Mapped;\n                } else {\n                    newMappingStatus = eMappingStatus.NotMapped;\n                }\n                let newImpactTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.PassThrough,\n                        this.datalink, this.datalinkColumn, null, nextTransform, null, this.mappingStatus, this.hubCache);\n                let newStatus = newImpactTree.createDatalinkImpact(true);\n                if (newStatus < newMappingStatus) {\n                    newMappingStatus = newStatus;\n                }\n                this.impactTree.push(newImpactTree);\n            }\n\n        } else {\n            // if there is no next transform, then check against the target tables.\n            for (let target of this.datalink.dexihDatalinkTargets) {\n\n                let table = this.hubCache.getTable(target.tableKey);\n\n                if (table) {\n                    let column = table.dexihTableColumns.find(c => c.isValid && c.name === this.datalinkColumn.name);\n                    if (column) {\n                        if (this.mappingStatus === eMappingStatus.Mapped) {\n                            newMappingStatus = eMappingStatus.Mapped;\n                        } else {\n                            if (this.isAutoGenerateColumn(column.deltaType)) {\n                                newMappingStatus = eMappingStatus.AutoGenerate;\n                            } else {\n                                if (!this.datalinkTransform || this.datalinkTransform.passThroughColumns) {\n                                    newMappingStatus = eMappingStatus.PassThroughMap;\n                                } else {\n                                    newMappingStatus = eMappingStatus.NotMapped;\n                                }\n\n                            }\n                        }\n                    } else {\n                        if (this.mappingStatus === eMappingStatus.Mapped) {\n                            newMappingStatus = eMappingStatus.MappedToNothing;\n                        } else {\n                            if (!this.datalinkTransform || this.datalinkTransform.passThroughColumns) {\n                                newMappingStatus = eMappingStatus.PassThroughToNothing;\n                            } else {\n                                newMappingStatus = eMappingStatus.NotMapped;\n                            }\n                    }\n                    }\n                    let newImpactTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Target,\n                            this.datalink, null, column, null, null, newMappingStatus, this.hubCache);\n                    this.impactTree.push(newImpactTree);\n                } else {\n                    if (!this.datalink.isQuery) {\n                        if (this.mappingStatus === eMappingStatus.Mapped) {\n                            newMappingStatus = eMappingStatus.MappedToVirtual;\n                        } else {\n                            newMappingStatus = eMappingStatus.PassThroughToVirtual;\n                        }\n\n                    } else {\n                        newMappingStatus = eMappingStatus.Error;\n                    }\n                }\n\n                if (this.mappingStatus === eMappingStatus.NotMapped) { break; }\n            }\n\n        }\n\n        return newMappingStatus;\n\n\n    }\n\n    public createDatalinkLineage(usePreviousTransform: boolean): eMappingStatus  {\n       this.lineageTree = [];\n       let newMappingStatus: eMappingStatus = eMappingStatus.NotMapped;\n       let currentColumn = this.datalinkColumn;\n\n       if (!currentColumn || this.tableColumn ) {\n            currentColumn = new DexihDatalinkColumn();\n            Object.assign(currentColumn, this.tableColumn);\n       }\n\n        let previousTransform: DexihDatalinkTransform = null;\n        if (usePreviousTransform) {\n            switch (this.objectType) {\n                case  eDatalinkObjectType.SourceTable:\n                    return;\n                case eDatalinkObjectType.Transform:\n                    let transforms = this.datalink.dexihDatalinkTransforms\n                        .filter(c => c.position < this.datalinkTransform.position).sort((a, b) => a.position - b.position); // sort asc\n                    if (transforms.length > 0 ) {\n                        previousTransform = transforms[transforms.length - 1];\n                    }\n                    break;\n                case eDatalinkObjectType.TargetTable:\n                    // check for column types which will populate without mappings (i.e. auto-generate)\n                    if (this.tableColumn && this.isAutoGenerateColumn(this.tableColumn.deltaType)) {\n                        newMappingStatus = eMappingStatus.AutoGenerate;\n                    } else {\n                        newMappingStatus = eMappingStatus.NotMapped;\n                    }\n\n                    if (this.datalink.dexihDatalinkTransforms.length > 0 ) {\n                        // get the last transform.\n                        let transforms2 = this.datalink.dexihDatalinkTransforms.sort((a, b ) => b.position - a.position);\n                        previousTransform = transforms2[0];\n\n                        // map the column name to the transform.\n                        if (this.tableColumn) {\n                            let column = previousTransform['runTime'].outputColumns.find(c => c.name === this.tableColumn.name);\n                            if (column) {\n                                currentColumn = column;\n                            }\n                        } else {\n                            currentColumn = this.datalinkColumn;\n                        }\n\n                    } else {\n                        if (this.tableColumn) {\n                            let outputs = this.datalink.sourceDatalinkTable.dexihDatalinkColumns;\n                            let column = outputs.find(c => c.name === this.tableColumn.name);\n                            if (column) {\n                                currentColumn = column;\n                            }\n                        } else {\n                            currentColumn = this.datalinkColumn;\n                        }\n\n                    }\n                    break;\n            }\n        } else {\n            previousTransform = this.datalinkTransform;\n\n            if (this.datalinkTransform) {\n                previousTransform = this.datalinkTransform;\n           } else {\n               if (this.datalink.dexihDatalinkTransforms.length > 0) {\n                    let transforms = this.datalink.dexihDatalinkTransforms.sort((a, b) => a.position - b.position); // sort desc\n                    previousTransform = transforms[0]; // get last transform\n               }\n           }\n\n        }\n\n        // find all occurrences of the current column in the next transform.\n        if (previousTransform) {\n            let columnIsMapped = false;\n            previousTransform.dexihDatalinkTransformItems.forEach(item => {\n                switch (item.transformItemType) {\n                    case eTransformItemType.Column:\n                    // if this column is mapped, then add it to the impact tree.\n                    if (item.sourceDatalinkColumn &&\n                        item.sourceDatalinkColumn.key) {\n                        let newLineageTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Mapping,\n                            this.datalink, item.sourceDatalinkColumn, null, previousTransform, null,\n                            eMappingStatus.Mapped, this.hubCache);\n                        let newStatus = newLineageTree.createDatalinkLineage(true);\n                        if (newStatus < newMappingStatus) {\n                            newMappingStatus = newStatus;\n                        }\n                        this.lineageTree.push(newLineageTree);\n                        // if (item.sourceDatalinkColumn.name === this.datalinkColumn.name) {\n                            columnIsMapped = true;\n                        // }\n                    }\n                    break;\n                    case eTransformItemType.ColumnPair:\n                        // if this column is mapped, then add it to the impact tree.\n                        if (item.targetDatalinkColumn &&\n                            item.targetDatalinkColumn.key === currentColumn.key\n                            && item.sourceDatalinkColumn) {\n                            let newLineageTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Mapping,\n                                this.datalink, item.sourceDatalinkColumn, null, previousTransform, null,\n                                eMappingStatus.Mapped, this.hubCache);\n                            let newStatus = newLineageTree.createDatalinkLineage(true);\n                            if (newStatus < newMappingStatus) {\n                                newMappingStatus = newStatus;\n                            }\n                            this.lineageTree.push(newLineageTree);\n                            // if (item.sourceDatalinkColumn.name === this.datalinkColumn.name) {\n                                columnIsMapped = true;\n                            // }\n                        }\n                        break;\n                    case eTransformItemType.BuiltInFunction:\n                    case eTransformItemType.CustomFunction:\n\n                        // if this column is mapped, then add it to the impact tree.\n                        if (item.targetDatalinkColumn &&\n                            item.targetDatalinkColumn.key === currentColumn.key) {\n                            newMappingStatus = eMappingStatus.Mapped;\n\n                            let inputParams = this.flattenParameters(item.dexihFunctionParameters\n                                .filter(p => HubCache.parameterIsOutput(p)));\n                            inputParams.filter(c => c.datalinkColumn).forEach(inParam => {\n                                if (inParam.datalinkColumn) {\n                                    let newLineageTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Function,\n                                            this.datalink, inParam.datalinkColumn, null, previousTransform, item,\n                                            eMappingStatus.Mapped, this.hubCache);\n                                    let newStatus = newLineageTree.createDatalinkLineage(true);\n                                    if (newStatus < newMappingStatus) {\n                                        newMappingStatus = newStatus;\n                                    }\n                                    this.lineageTree.push(newLineageTree);\n                                    // if (inParam.datalinkColumn.name === this.datalinkColumn.name) {\n                                        columnIsMapped = true;\n                                    // }\n                                }\n                            });\n                        }\n\n                        // add any output parameters\n                        let outParams = this.flattenParameters(item.dexihFunctionParameters\n                            .filter(p => HubCache.parameterIsOutput(p)));\n                        outParams.filter(c => c.datalinkColumn).forEach(outParam => {\n                                if (outParam.datalinkColumn.key === currentColumn.key) {\n                                    newMappingStatus = eMappingStatus.Mapped;\n                                    item.dexihFunctionParameters\n                                        .filter(p => HubCache.parameterIsOutput(p) && p.datalinkColumn).forEach(inParam => {\n                                    if (inParam.datalinkColumn) {\n                                        let newLineageTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Function,\n                                            this.datalink, inParam.datalinkColumn, null, previousTransform, item,\n                                            eMappingStatus.Mapped, this.hubCache);\n                                        let newStatus = newLineageTree.createDatalinkLineage(true);\n                                        if (newStatus < newMappingStatus) {\n                                            newMappingStatus = newStatus;\n                                        }\n                                        this.lineageTree.push(newLineageTree);\n                                        // if (inParam.datalinkColumn.name === this.datalinkColumn.name) {\n                                            columnIsMapped = true;\n                                        // }\n                                    }\n                                });\n                            }\n\n                        });\n\n\n                        break;\n                    case eTransformItemType.JoinPair:\n                        // if this column part of a join add it.\n                        if (item.sourceDatalinkColumn && item.sourceDatalinkColumn.key === currentColumn.key) {\n                            let table = previousTransform.joinDatalinkTable;\n                            let column = item.joinDatalinkColumn;\n                            if (table && column) {\n                                let newLineageTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Join,\n                                        this.datalink, column, null, previousTransform, item, eMappingStatus.Joined, this.hubCache);\n                                this.lineageTree.push(newLineageTree);\n                            } else {\n                                return eMappingStatus.Error;\n                            }\n                        }\n\n                        break;\n                    case eTransformItemType.Sort:\n                        // if this column part of a sort, add it.\n                        if (item.sourceDatalinkColumn && item.sourceDatalinkColumn.key === currentColumn.key) {\n                            let newLineageTree = new ColumnUsageNode( eDatalinkObjectType.Transform, eObjectUse.Sort,\n                                this.datalink, currentColumn, null, previousTransform, item, eMappingStatus.Sorted, this.hubCache);\n                            this.lineageTree.push(newLineageTree);\n                        }\n\n                        break;\n                }\n\n            });\n\n            // if the column was not mapped, and the transform passes through columns without mapping, then add it.\n            if (!columnIsMapped && previousTransform.passThroughColumns) {\n                if (this.mappingStatus === eMappingStatus.Mapped) {\n                    newMappingStatus = eMappingStatus.Mapped;\n                } else if (this.objectType === eDatalinkObjectType.TargetTable && this.tableColumn &&\n                    this.isAutoGenerateColumn(this.tableColumn.deltaType)) {\n                    newMappingStatus = eMappingStatus.AutoGenerate;\n                }\n                let newLineageTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.PassThrough,\n                        this.datalink, currentColumn, null, previousTransform, null, this.mappingStatus, this.hubCache);\n                let newStatus = newLineageTree.createDatalinkLineage(true);\n                if (newStatus < newMappingStatus) {\n                    newMappingStatus = newStatus;\n                }\n                this.lineageTree.push(newLineageTree);\n            } else if (!columnIsMapped && previousTransform.joinDatalinkTable) {\n                // if there is a join table, then check against that.\n                let table = previousTransform.joinDatalinkTable;\n                let column = table.dexihDatalinkColumns.find(c => c.isValid && c.name === currentColumn.name);\n                if (column) {\n                    if (this.mappingStatus === eMappingStatus.Mapped) {\n                        newMappingStatus = eMappingStatus.Mapped;\n                    } else if (newMappingStatus === eMappingStatus.NotMapped) {\n                        newMappingStatus = eMappingStatus.PassThroughMap;\n                    }\n                    let newLineageTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Join, this.datalink,\n                        column, null, null, null, newMappingStatus, this.hubCache);\n                    this.lineageTree.push(newLineageTree);\n                }\n            } else if (!columnIsMapped) {\n                if (newMappingStatus !== eMappingStatus.AutoGenerate) {\n                    newMappingStatus = eMappingStatus.NotMapped;\n                }\n            } else {\n                newMappingStatus = eMappingStatus.Mapped;\n            }\n        } else {\n            // if there is no previous transform, then check against the source table.\n            let table = this.datalink.sourceDatalinkTable;\n            let column = table.dexihDatalinkColumns.find(c => c.isValid && c.name === currentColumn.name);\n            if (column) {\n                if (this.mappingStatus === eMappingStatus.Mapped) {\n                    newMappingStatus = eMappingStatus.Mapped;\n                } else if (newMappingStatus === eMappingStatus.NotMapped) {\n                    newMappingStatus = eMappingStatus.PassThroughMap;\n                }\n            } else {\n                if (this.mappingStatus === eMappingStatus.Mapped) {\n                    newMappingStatus = eMappingStatus.MappedToNothing;\n                } else if (!newMappingStatus) {\n                    newMappingStatus = eMappingStatus.PassThroughToNothing;\n                }\n            }\n            let newLineageTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Source, this.datalink,\n                    column, null, null, null, newMappingStatus, this.hubCache);\n            this.lineageTree.push(newLineageTree);\n\n        }\n\n        return newMappingStatus;\n    }\n\n\n    public isAutoGenerateColumn(deltaType: eDeltaType): boolean {\n        let returnValue: boolean;\n        switch (deltaType) {\n            case eDeltaType.AutoIncrement:\n            case eDeltaType.DbAutoIncrement:\n            case eDeltaType.Version:\n            case eDeltaType.ValidFromDate:\n            case eDeltaType.ValidToDate:\n            case eDeltaType.PartitionKey:\n            case eDeltaType.RowKey:\n            case eDeltaType.CreateAuditKey:\n            case eDeltaType.CreateDate:\n            case eDeltaType.FileName:\n            case eDeltaType.IsCurrentField:\n            case eDeltaType.RejectedReason:\n            case eDeltaType.SourceSurrogateKey:\n            case eDeltaType.TimeStamp:\n            case eDeltaType.UpdateAuditKey:\n            case eDeltaType.UpdateDate:\n            case eDeltaType.ValidationStatus: {\n                returnValue = true;\n            }\n            break;\n            default:\n                returnValue = false;\n        }\n        return returnValue;\n    }\n\n}\n\n\n\n","import { BehaviorSubject} from 'rxjs';\nimport { Message } from '../+auth/auth.models';\nimport { DexihHubVariable, DexihHub, DexihFunctionParameter, DexihConnection, DexihTable,\n    DexihTableColumn, DexihDatalinkTransform, DexihColumnValidation, DexihFileFormat, DexihDatalink,\n    DexihDatalinkTest, DexihDatajob, DexihView, DexihDashboard, DexihApi, DexihCustomFunction,\n    DexihTrigger, TransformProperties, eStatus, eParameterDirection, eConnectionPurpose, eDeltaType,\n    eSourceType, eImportAction, eSecurityFlag, eUpdateStrategy, eFailAction, eInvalidAction,\n    eFunctionCaching, eCleanAction, eRunStatus, ePermission, eTypeCode,\n    eTransformWriterMethod, eTransformItemType, eFunctionType, eDataObjectType, eSharedObjectType,\n    eSortDirection, eSeriesGrain, eDayOfWeek, ChartConfig, eLOVObjectType, DexihListOfValues, InputParameterBase,\n    DexihDatalinkTestStep, eTransformTypeItems, eTransformType, DexihTag, ViewConfig } from '../shared/shared.models';\n\n// export class RemoteMessage {\n//     public messageId: string;\n//     public securityToken: string;\n//     public remoteAgentId: string;\n//     public method: string;\n//     public hubKey: number;\n//     public success: boolean;\n//     public message: string;\n//     public exceptionDetails: string;\n//     public cache: HubCache;\n//     public parameters: Array<Parameter>;\n//     public hubVariables: Array<DexihHubVariable>;\n//     public value;\n\n//     constructor () {\n//     }\n// }\n\nexport enum eCacheStatus {\n    NoHub,\n    NotLoaded,\n    Loading,\n    Loaded,\n    Error\n};\n\nexport class EntityStatus {\n    public lastStatus: eStatus;\n    public message: string;\n    public isBusy: boolean;\n\n    public constructor() {\n        this.isBusy = false;\n        this.lastStatus = eStatus.None;\n    }\n}\n\nexport class Parameter {\n    public key: string;\n    public value;\n}\n\nexport enum eSearchObjectType {\n    All,\n    Connection,\n    Table,\n    TableColumn,\n    FileFormat,\n    Datalink,\n    Datajob,\n    ColumnValidation,\n    View,\n    Api,\n    Dashboard,\n    ListOfValues,\n    DatalinkTest\n}\n\nexport const SearchObjectTypes = [\n    {key: eSearchObjectType.All, name: 'All'},\n    {key: eSearchObjectType.Connection, name: 'Connection'},\n    {key: eSearchObjectType.Table, name: 'Table'},\n    {key: eSearchObjectType.TableColumn, name: 'Table Column'},\n    {key: eSearchObjectType.FileFormat, name: 'File Format'},\n    {key: eSearchObjectType.Datalink, name: 'Datalink'},\n    {key: eSearchObjectType.Datajob, name: 'Datajob'},\n    {key: eSearchObjectType.ColumnValidation, name: 'Column Validation'},\n    {key: eSearchObjectType.View, name: 'View'},\n    {key: eSearchObjectType.Api, name: 'Api'},\n    {key: eSearchObjectType.Dashboard, name: 'Dashboard'},\n    {key: eSearchObjectType.ListOfValues, name: 'List of Values'},\n    {key: eSearchObjectType.DatalinkTest, name: 'Datalink Test'},\n];\n\nexport class SearchResult {\n    public object: any;\n    public objectParent: any;\n    public objectType: eSearchObjectType;\n\n    constructor(object: any, objectParent, objectType: eSearchObjectType) {\n        this.object = object;\n        this.objectType = objectType;\n        this.objectParent = objectParent;\n    }\n}\n\n\nexport class SharedObjectProperty {\n    public type: eSharedObjectType;\n    public parentType: eSharedObjectType;\n    public name: string;\n    public parentKey: string;\n    public property: string;\n    public cacheProperty: string;\n    public cacheAddMethod: string;\n    public cacheGetMethod: string;\n    public icon: string;\n    public routerLink: string;\n    public displayName: string;\n    public description: string;\n}\n\nexport const sharedObjectProperties: SharedObjectProperty[] = [\n    {\n        type: eSharedObjectType.Connection, name: 'Connection', cacheProperty: 'dexihConnections', property: 'connections',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddConnection', cacheGetMethod: '',\n        icon: 'fa-database', routerLink: 'connections',\n        displayName: 'Connections', description: 'Connections to data sources such as databases, flat files and web services.'\n    },\n    {\n        type: eSharedObjectType.Table, name: 'Table', cacheProperty: 'dexihTables', property: 'tables',\n        parentKey: 'connectionKey', parentType: eSharedObjectType.Connection, cacheAddMethod: 'cacheAddTable',\n        cacheGetMethod: 'getTableCache', icon: 'fa-table', routerLink: 'tables',\n        displayName: 'Tables', description: 'References to structured and unstructured datasets.'\n    },\n    {\n        type: eSharedObjectType.Datalink, name: 'Datalink', cacheProperty: 'dexihDatalinks', property: 'datalinks',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddDatalink', cacheGetMethod: 'getDatalinkCache',\n        icon: 'fa-exchange', routerLink: 'datalinks',\n        displayName: 'Datalinks', description: 'Runnable or queryable data sets of data transformations.'\n    },\n    {\n        type: eSharedObjectType.Datajob, name: 'Datajob', cacheProperty: 'dexihDatajobs', property: 'datajobs',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddDatajob',\n        cacheGetMethod: 'getDatajobCache', icon: 'fa-calendar', routerLink: 'datajobs',\n        displayName: 'Jobs and Schedules',\n        description: 'Job which can be scheduled or run on demand, which contains a sequence of datalinks'\n    },\n    {\n        type: eSharedObjectType.View, name: 'View', cacheProperty: 'dexihViews', property: 'views',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddView',\n        cacheGetMethod: 'getViewCache', icon: 'fa-bar-chart', routerLink: 'views',\n        displayName: 'Views', description: 'Charts and tabular views of table or datalinks outputs.'\n    },\n    {\n        type: eSharedObjectType.Dashboard, name: 'Dashboard', cacheProperty: 'dexihDashboards', property: 'dashboards',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddDashboard',\n        cacheGetMethod: 'getDashboardCache', icon: 'fa-pie-chart', routerLink: 'dashboards',\n        displayName: 'Dashboards', description: 'A collection of views gathered into a single dashboard.'\n    },\n    {\n        type: eSharedObjectType.Api, name: 'Api', cacheProperty: 'dexihApis', property: 'apis',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddApi',\n        cacheGetMethod: 'getApiCache', icon: 'fa-feed', routerLink: 'apis',\n        displayName: 'Api\\'s', description: 'Published Rest based Api\\'s which can be used to access data using third party tools'\n    },\n    {\n        type: eSharedObjectType.FileFormat, name: 'FileFormat', cacheProperty: 'dexihFileFormats', property: 'fileFormats',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddFileFormat',\n        cacheGetMethod: '', icon: 'fa-file-text-o', routerLink: 'fileFormats',\n        displayName: 'File Formats', description: 'Definitions for delimited flat files'\n    },\n    {\n        type: eSharedObjectType.ColumnValidation, name: 'ColumnValidation', cacheProperty: 'dexihColumnValidations',\n        property: 'columnValidations',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddColumnValidation',\n        cacheGetMethod: 'getColumnValidationCache', icon: 'fa-check-square-o',\n        routerLink: 'columnValidations',\n        displayName: 'Column Validations', description: 'Validation rule that can be applied to columns within a table.'\n    },\n    {\n        type: eSharedObjectType.HubVariable, name: 'HubVariable', cacheProperty: 'dexihHubVariables', property: 'hubVariables',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddHubVariable',\n        cacheGetMethod: '', icon: 'fa-fw fa-at', routerLink: 'hubVariables',\n        displayName: 'Variables', description: 'Variables which can be used as global configuration throughout the hub.'\n    },\n    {\n        type: eSharedObjectType.ListOfValues, name: 'List Of Values', cacheProperty: 'dexihListOfValues', property: 'listOfValues',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddListOfValues',\n        cacheGetMethod: 'getListOfValuesCache', icon: 'fa-list-alt', routerLink: 'listOfValues',\n        displayName: 'List Of Values',\n        description: 'List of values which can be used for parameter drop downs and validations.'\n    },\n    {\n        type: eSharedObjectType.CustomFunction, name: 'CustomFunction', cacheProperty: 'dexihCustomFunctions', property: 'customFunctions',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddCustomFunction',\n        cacheGetMethod: '', icon: 'fa-code', routerLink: 'customFunctions',\n        displayName: 'Functions', description: 'Custom c# functions which can be used in datalinks.'\n    },\n    {\n        type: eSharedObjectType.DatalinkTest, name: 'DatalinkTest', cacheProperty: 'dexihDatalinkTests', property: 'datalinkTests',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddDatalinkTest',\n        cacheGetMethod: 'getDatalinkTestCache', icon: 'fa-flag-checkered', routerLink: 'datalinkTests',\n        displayName: 'Datalink Tests',\n        description: 'Regression tests which can be used to ensure datalinks function after upgrades or modification.'\n    },\n    {\n        type: eSharedObjectType.Tags, name: 'Tag', cacheProperty: 'dexihTags', property: 'tags',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddTag',\n        cacheGetMethod: 'getTagCache', icon: 'fa-tags', routerLink: 'tags',\n        displayName: 'Tags',\n        description: 'Tags can be used to group and categorize objects as needed.'\n    },\n];\n\nexport class SharedObject {\n    public type: eSharedObjectType;\n    public item: any;\n    public parentItem: any;\n    public key: number;\n    public name: string;\n    public label: string;\n    public updateDate: Date;\n    public description: string;\n    public tags: DexihTag[];\n}\n\nexport class HubCacheChange {\n    constructor(\n        public changeClass: eSharedObjectType,\n        public changeType: eImportAction,\n        public data: any\n    ) {}\n}\n\n\nexport class HubCache {\n\n    public hub: DexihHub;\n\n    public hubPermission: ePermission;\n\n    public readonly status: eCacheStatus;\n\n    private _sequenceGenerator = 0;\n\n    public static parameterIsOutput(p: DexihFunctionParameter): boolean {\n        return p.direction === eParameterDirection.Output\n        || p.direction === eParameterDirection.ResultOutput\n        || p.direction === eParameterDirection.ResultReturnValue\n        || p.direction === eParameterDirection.ReturnValue\n    }\n\n    public static parameterIsInput(p: DexihFunctionParameter): boolean {\n        return p.direction === eParameterDirection.Input\n        || p.direction === eParameterDirection.ResultInput\n    }\n\n    constructor(status: eCacheStatus, hub: DexihHub)  {\n        this.status = status;\n        if (hub) {\n            this.hub = hub;\n        }\n    }\n\n    get canAdministrate(): boolean {\n        if (this.hub) {\n            return this.hubPermission === ePermission.Owner;\n        }\n\n        return false;\n    }\n\n    get canRead(): boolean {\n        if (this.hub) {\n            return this.hubPermission === ePermission.Owner ||\n                this.hubPermission === ePermission.FullReader ||\n                this.hubPermission === ePermission.User;\n        }\n\n        return false;\n    }\n\n    get canWrite(): boolean {\n        if (this.hub) {\n            return this.hubPermission === ePermission.Owner ||\n                this.hubPermission === ePermission.User;\n        }\n\n        return false;\n    }\n\n    // create a simple unique, sequence, starting from -1, which is used to generate temporary keys.\n    public getNextSequence(): number {\n        this._sequenceGenerator--;\n        return this._sequenceGenerator;\n    }\n\n    public getManagedConnections(): Array<DexihConnection> {\n        let connections = this.hub.dexihConnections.filter(c => c.purpose === eConnectionPurpose.Managed && c.isValid);\n        return connections;\n    }\n\n    public getCacheItem(itemType: eSharedObjectType, key: number) {\n        if (!this.hub) { return; }\n\n        switch (itemType) {\n            case eSharedObjectType.Api:\n                return this.hub.dexihApis.find(c => c.key === key && c.isValid);\n            case eSharedObjectType.ColumnValidation:\n                return this.hub.dexihColumnValidations.find(c => c.key === key && c.isValid);\n            case eSharedObjectType.Connection:\n                return this.hub.dexihConnections.find(c => c.key === key && c.isValid);\n            case eSharedObjectType.CustomFunction:\n                return this.hub.dexihCustomFunctions.find(c => c.key === key && c.isValid);\n            case eSharedObjectType.Datajob:\n                return this.hub.dexihDatajobs.find(c => c.key === key && c.isValid);\n            case eSharedObjectType.Datalink:\n                return this.hub.dexihDatalinks.find(c => c.key === key && c.isValid);\n            case eSharedObjectType.DatalinkTest:\n                return this.hub.dexihDatalinkTests.find(c => c.key === key && c.isValid);\n            case eSharedObjectType.FileFormat:\n                return this.hub.dexihFileFormats.find(c => c.key === key && c.isValid);\n            case eSharedObjectType.HubVariable:\n                return this.hub.dexihHubVariables.find(c => c.key === key && c.isValid);\n            case eSharedObjectType.Table:\n                return this.getTable(key);\n            case eSharedObjectType.View:\n                return this.hub.dexihViews.find(c => c.key === key && c.isValid);\n        }\n\n        return null;\n    }\n\n    isLoaded(): boolean {\n        return this.status === eCacheStatus.Loaded;\n    }\n\n    getHubUrl(): string {\n        return '/hub/' + this.hub.hubKey;\n    }\n\n    public getObjectTags(objectType: eSharedObjectType, key: number): DexihTag[] {\n        let tags = this.hub.dexihTagObjects\n                        .filter(to => to.objectType === objectType && to.objectKey === key)\n                        .map(to => this.hub.dexihTags.find(e => e.key === to.tagKey));\n        return tags;\n    }\n\n    public getConnection(connectionKey): DexihConnection {\n        let connection = this.hub.dexihConnections.find(c => c.key === connectionKey);\n        return connection;\n    }\n\n    public getConnectionCopy(connectionKey): DexihConnection {\n        let connection = this.hub.dexihConnections.find(c => c.key === connectionKey);\n        let connectionCopy = Object.assign({}, connection);\n        return connectionCopy;\n    }\n\n    public getTable(tableKey: number): DexihTable {\n        let hub = this.hub;\n        let table = hub.dexihTables.find(c => c.key === tableKey);\n        return table;\n    }\n\n    public getTransformName(transform: DexihDatalinkTransform): string {\n        if (transform.name) {\n            return transform.name;\n        }\n\n        let name = eTransformTypeItems[transform.transformType].name;\n\n        switch(transform.transformType) {\n            case eTransformType.Join:\n            case eTransformType.Lookup:\n                name = name + ' ' + transform.joinDatalinkTable.name;\n        }\n\n        if(transform.nodeDatalinkColumn) {\n            name = name + ' at ' + transform.nodeDatalinkColumn.name\n        }\n\n        return name;\n    }\n\n    public getColumn(columnKey: number) {\n        let hub = this.hub;\n        for (let i = 0; i < hub.dexihTables.length; i++) {\n            let table = hub.dexihTables[i];\n            let column = table.dexihTableColumns.find(c => c.key === columnKey);\n            if (column) { return column; }\n        }\n        return null;\n    }\n\n    public getDatalinkTestStep(datalinkTestStepKey: number): DexihDatalinkTestStep {\n        let hub = this.hub;\n        for (let test of hub.dexihDatalinkTests) {\n            let testStep = test.dexihDatalinkTestSteps.find(c => c.key === datalinkTestStepKey);\n            if (testStep) {\n                return testStep;\n            }\n        }\n        return null;\n    }\n\n\n    public newColumn(table: DexihTable, deltaType: eDeltaType): DexihTableColumn {\n        let column = new DexihTableColumn();\n        // if new column, then set a temporary key of -1 or lower.\n        let minKey = -1;\n        let maxPos = 0;\n        table.dexihTableColumns.forEach(t => {\n            if (t.key <= minKey ) {\n                minKey = t.key - 1;\n            }\n            if (t.position >= maxPos) {\n                maxPos = t.position + 1;\n            }\n        });\n        column.key = minKey;\n        column.position = maxPos;\n\n        if (deltaType != null) {\n            column.deltaType = deltaType;\n\n            let deltaTypeDetail = deltaTypes.find(c => c.key === deltaType);\n\n            if (deltaTypeDetail.unique) {\n                let index = table.dexihTableColumns.findIndex(c => c.deltaType === deltaType);\n                if (index >= 0) {\n                    return null;\n                }\n            }\n\n            if (deltaTypeDetail.defaultName) {\n                column.name = deltaTypeDetail.defaultName;\n                column.logicalName = deltaTypeDetail.defaultName;\n                column.dataType = deltaTypeDetail.dataType;\n\n                if (deltaType === eDeltaType.AutoIncrement || deltaType === eDeltaType.DbAutoIncrement) {\n                    column.name =  table.name + 'Key';\n                    column.logicalName = column.name;\n                }\n            }\n       }\n\n       return column;\n    }\n\n    private addColumn(table: DexihTable, deltaType: eDeltaType, name: string, dataType: eTypeCode, allowDbNull: boolean) {\n        let column = this.newColumn(table, deltaType);\n        column.name = name;\n        column.logicalName = name;\n        column.allowDbNull = allowDbNull;\n        column.dataType = dataType;\n        table.dexihTableColumns.push(column);\n    }\n\n    public getProfileTable(name: string, connectionKey: number): DexihTable {\n        let table = new DexihTable();\n        table.connectionKey = connectionKey;\n        table.name = name;\n        table.logicalName = name;\n        table.key = this.getNextSequence();\n\n        this.addColumn(table, eDeltaType.TrackingField, 'AuditKey', eTypeCode.Int64, false);\n        this.addColumn(table, eDeltaType.TrackingField, 'Profile', eTypeCode.String, false);\n        this.addColumn(table, eDeltaType.TrackingField, 'ColumnName', eTypeCode.String, false);\n        this.addColumn(table, eDeltaType.TrackingField, 'IsSummary', eTypeCode.Boolean, false);\n        this.addColumn(table, eDeltaType.TrackingField, 'Value', eTypeCode.String, true);\n        this.addColumn(table, eDeltaType.TrackingField, 'Count', eTypeCode.Int32, true);\n\n        return table;\n    }\n\n\n\n    public getConnectionTables(): ConnectionTables[] {\n        let connections: ConnectionTables[] = [];\n        this.hub.dexihConnections.forEach(c => {\n            let newConnection = <ConnectionTables> Object.assign({}, c);\n            let tables = this.hub.dexihTables.filter(t => c.key === t.connectionKey && t.isValid);\n            newConnection.dexihTables = tables;\n            connections.push(newConnection);\n        });\n\n        return connections;\n    }\n\n    public getTables(): DexihTable[] {\n        return this.hub.dexihTables;\n    }\n\n    public getDatalinkTransform(datalinkTransformKey: number): DexihDatalinkTransform {\n        for (let i = 0; i < this.hub.dexihDatalinks.length; i++) {\n            let datalink = this.hub.dexihDatalinks[i];\n            for (let j = 0; j < datalink.dexihDatalinkTransforms.length; j++) {\n                if (datalink.dexihDatalinkTransforms[j].key === datalinkTransformKey) {\n                    return datalink.dexihDatalinkTransforms[j];\n                }\n            }\n        }\n\n        return null;\n    }\n\n    public getColumnValidation(columnValidationKey: number): DexihColumnValidation {\n        let columnValidation: DexihColumnValidation = null;\n        if (this.hub.dexihColumnValidations) {\n            columnValidation = this.hub.dexihColumnValidations.find(c => c.key === columnValidationKey);\n        }\n        if (!columnValidation) {\n            columnValidation = new DexihColumnValidation();\n            columnValidation.name = 'No validation';\n        }\n\n        return columnValidation;\n    }\n\n    public getFileFormat(fileFormatKey: number): DexihFileFormat {\n        let fileFormat: DexihFileFormat = null;\n        if (this.hub.dexihFileFormats) {\n            fileFormat = this.hub.dexihFileFormats.find(c => c.key === fileFormatKey);\n        }\n        return fileFormat;\n    }\n\n    public search(search: string, searchObject: eSearchObjectType): Array<SearchResult> {\n        const results = Array<SearchResult>();\n\n        if (!search) {\n            return results;\n        }\n\n        search = search.toLowerCase();\n\n        let searchAll = searchObject === eSearchObjectType.All;\n\n        this.hub.dexihConnections.forEach(connection => {\n            if (searchAll || searchObject === eSearchObjectType.Connection) {\n                this.searchItem(search, connection, null, eSearchObjectType.Connection, results);\n            }\n        });\n\n\n        this.hub.dexihTables.forEach(table => {\n            if (searchAll || searchObject === eSearchObjectType.Table) {\n                let connection = this.hub.dexihConnections.find(c => c.key === table.connectionKey);\n                this.searchItem(search, table, connection, eSearchObjectType.Table, results);\n            }\n\n            if (searchAll || searchObject === eSearchObjectType.TableColumn) {\n                table.dexihTableColumns.forEach(column => {\n                    this.searchItem(search, column, table, eSearchObjectType.TableColumn, results);\n                })\n            }\n        });\n\n        if (searchAll || searchObject === eSearchObjectType.Datalink) {\n            this.hub.dexihDatalinks.forEach(datalink => {\n                this.searchItem(search, datalink, null, eSearchObjectType.Datalink, results);\n            });\n        }\n        if (searchAll || searchObject === eSearchObjectType.Datajob) {\n            this.hub.dexihDatajobs.forEach(datajob => {\n                this.searchItem(search, datajob, null, eSearchObjectType.Datajob, results);\n            });\n        }\n        if (searchAll || searchObject === eSearchObjectType.ColumnValidation) {\n            this.hub.dexihColumnValidations.forEach(columnValidation => {\n                this.searchItem(search, columnValidation, null, eSearchObjectType.ColumnValidation, results);\n            });\n        }\n        if (searchAll || searchObject === eSearchObjectType.FileFormat) {\n            this.hub.dexihFileFormats.forEach(fileFormat => {\n                this.searchItem(search, fileFormat, null, eSearchObjectType.FileFormat, results);\n            });\n        }\n        if (searchAll || searchObject === eSearchObjectType.View) {\n            this.hub.dexihViews.forEach(view => {\n                this.searchItem(search, view, null, eSearchObjectType.View, results);\n            });\n        }\n        if (searchAll || searchObject === eSearchObjectType.Api) {\n            this.hub.dexihApis.forEach(api => {\n                this.searchItem(search, api, null, eSearchObjectType.Api, results);\n            });\n        }\n        if (searchAll || searchObject === eSearchObjectType.Dashboard) {\n            this.hub.dexihDashboards.forEach(d => {\n                this.searchItem(search, d, null, eSearchObjectType.Dashboard, results);\n            });\n        }\n        if (searchAll || searchObject === eSearchObjectType.ListOfValues) {\n            this.hub.dexihListOfValues.forEach(d => {\n                this.searchItem(search, d, null, eSearchObjectType.ListOfValues, results);\n            });\n        }\n        if (searchAll || searchObject === eSearchObjectType.DatalinkTest) {\n            this.hub.dexihDatalinkTests.forEach(d => {\n                this.searchItem(search, d, null, eSearchObjectType.DatalinkTest, results);\n            });\n        }\n        return results;\n    }\n\n    public searchItem(search: string, item: any, itemParent: any, objectType: eSearchObjectType, results: Array<SearchResult>) {\n        const keys = Object.keys(item);\n        let found = false;\n        keys.forEach(key => {\n            if (!found) {\n                if ((typeof item[key] === 'string' || item[key] instanceof String)) {\n                    if (item[key].toLowerCase().indexOf(search) > -1) {\n                        results.push(new SearchResult(item, itemParent, objectType));\n                        found = true;\n                    }\n                }\n            }\n        });\n    }\n\n\n    public dataTypeToString(column: any): string {\n        let value = eTypeCode[column.dataType];\n\n        if (this.dataTypeIsString(column.dataType) && column.maxLength) {\n            value = value + '(' + column.maxLength + ')';\n        }\n        if (this.dataTypeIsDecimal(column.dataType) && (column.precision || column.scale)) {\n            value = value + '(' + column.precision + ',' + column.scale + ')';\n        }\n        if (column.dataType === eTypeCode.Node && column.childColumns) {\n            value = value + '(' + column.childColumns.length + ')';\n        }\n\n        for (let i = 0; i < column.rank; i++) {\n            value = value + '[]';\n        }\n\n\n        return value;\n    }\n\n    public dataTypeIsString(dataType: eTypeCode): boolean {\n        return dataType === eTypeCode.String || dataType === eTypeCode.CharArray;\n    }\n\n    public dataTypeIsDecimal(dataType: eTypeCode): boolean {\n        return dataType === eTypeCode.Double || dataType === eTypeCode.Decimal || dataType === eTypeCode.Single;\n    }\n\n    public defaultTableLogicalName(schema: string, name: string): string {\n        if (schema) {\n            return schema + '.' + name;\n        } else {\n            return name;\n        }\n    }\n\n    /**\n     * Adds the datalink dependencies to the cache\n     * @constructor\n     * @param {DexihDatalink} datalink - The datalink to search dependencies\n     * @param {DexihHub} hub - The hub to add the dependencies to.\n     */\n    public getDatalinkCache(datalink: DexihDatalink, hub: DexihHub): DexihHub {\n        if (datalink.sourceDatalinkTable.sourceType === eSourceType.Datalink) {\n            this.cacheAddDatalink(datalink.sourceDatalinkTable.sourceDatalinkKey, hub);\n        } else if (datalink.sourceDatalinkTable.sourceType === eSourceType.Table) {\n            this.cacheAddTable(datalink.sourceDatalinkTable.sourceTableKey, hub);\n        }\n        this.cacheAddConnection(datalink.auditConnectionKey, hub);\n        this.getParametersCache(datalink.parameters, hub);\n\n        datalink.dexihDatalinkTargets.forEach(target => {\n            this.cacheAddTable(target.tableKey, hub);\n        });\n\n        datalink.dexihDatalinkTransforms.forEach(t => {\n            if (t.joinDatalinkTable) {\n                if (t.joinDatalinkTable.sourceType === eSourceType.Datalink) {\n                    this.cacheAddDatalink(t.joinDatalinkTable.sourceDatalinkKey, hub);\n                } else if (t.joinDatalinkTable.sourceType === eSourceType.Table) {\n                    this.cacheAddTable(t.joinDatalinkTable.sourceTableKey, hub);\n                }\n            }\n\n            t.dexihDatalinkTransformItems.forEach(ti => {\n                if (ti.customFunctionKey) {\n                    this.cacheAddCustomFunction(ti.customFunctionKey, hub);\n                }\n            })\n        });\n        return hub;\n    }\n\n\n    /**\n     * Adds the datalinkTest dependencies to the cache\n     * @constructor\n     * @param {DexihDatalinkTest} datalinkTest - The datalinkTest to search dependencies\n     * @param {DexihHub} hub - The hub to add the dependencies to.\n     */\n    public getDatalinkTestCache(datalinkTest: DexihDatalinkTest, hub: DexihHub): DexihHub {\n        datalinkTest.dexihDatalinkTestSteps.forEach(step => {\n            const datalinkDup = hub.dexihDatalinks.find(c => c.key === step.datalinkKey);\n            if (!datalinkDup) {\n                const datalink = this.hub.dexihDatalinks.find(c => c.key === step.datalinkKey);\n                if (datalink) {\n                    this.getDatalinkCache(datalink, hub);\n                    hub.dexihDatalinks.push(datalink);\n                }\n            }\n            this.cacheAddConnection(step.expectedConnectionKey, hub);\n            this.cacheAddConnection(step.targetConnectionKey, hub);\n\n            step.dexihDatalinkTestTables.forEach(c => {\n                this.cacheAddConnection(c.sourceConnectionKey, hub);\n                this.cacheAddConnection(c.testConnectionKey, hub);\n            });\n        });\n\n        return hub;\n    }\n\n    public getTableCache(table: DexihTable, hub: DexihHub): DexihHub {\n        this.cacheAddConnection(table.connectionKey, hub);\n        return hub;\n    }\n\n    public getDatajobCache(datajob: DexihDatajob, hub: DexihHub): DexihHub {\n        this.cacheAddConnection(datajob.auditConnectionKey, hub);\n        this.getParametersCache(datajob.parameters, hub);\n\n        datajob.dexihDatalinkSteps.forEach(step => {\n            this.getParametersCache(step.parameters, hub);\n\n            const datalinkDup = hub.dexihDatalinks.find(c => c.key === step.datalinkKey);\n            if (!datalinkDup) {\n                const datalink = this.hub.dexihDatalinks.find(c => c.key === step.datalinkKey);\n                if (datalink) {\n                    this.getDatalinkCache(datalink, hub);\n                    hub.dexihDatalinks.push(datalink);\n                }\n            }\n        });\n\n        return hub;\n    }\n\n    public getColumnValidationCache(columnValidation: DexihColumnValidation, hub: DexihHub): DexihHub {\n        if (columnValidation.lookupColumnKey > 0) {\n            let lookupColumn = this.getColumn(columnValidation.lookupColumnKey);\n            this.cacheAddTable(lookupColumn.tableKey, hub);\n        }\n\n        return hub;\n    }\n\n    public getViewCache(view: DexihView, hub: DexihHub): DexihHub {\n        this.cacheAddDatalink(view.sourceDatalinkKey, hub);\n        this.cacheAddTable(view.sourceTableKey, hub);\n        this.getParametersCache(view.parameters, hub);\n\n        return hub;\n    }\n\n    public getDashboardCache(dashboard: DexihDashboard, hub: DexihHub): DexihHub {\n        dashboard.dexihDashboardItems.forEach(item => {\n            this.cacheAddView(item.viewKey, hub);\n        });\n        this.getParametersCache(dashboard.parameters, hub);\n\n        return hub;\n    }\n\n    public getParametersCache(parameters: InputParameterBase[], hub: DexihHub): DexihHub {\n        parameters.forEach(parameter => {\n            this.cacheAddListOfValues(parameter.listOfValuesKey, hub);\n        });\n\n        return hub;\n    }\n\n    public getListOfValuesCache(lov: DexihListOfValues, hub: DexihHub): DexihHub {\n        this.cacheAddDatalink(lov.sourceDatalinkKey, hub);\n        this.cacheAddTable(lov.sourceTableKey, hub);\n\n        return hub;\n    }\n\n    public getApiCache(api: DexihApi, hub: DexihHub): DexihHub {\n        this.cacheAddDatalink(api.sourceDatalinkKey, hub);\n        this.cacheAddTable(api.sourceTableKey, hub);\n        this.getParametersCache(api.parameters, hub);\n\n        return hub;\n    }\n\n    public getSharedObjects(): SharedObject[] {\n        let data: SharedObject[] = [];\n\n        sharedObjectProperties.forEach(o => {\n            let parentObject;\n            if (o.parentType) {\n                parentObject = sharedObjectProperties.find(c => c.type === o.parentType);\n            }\n\n            data = data.concat(this.hub[o.cacheProperty].map(item => {\n                let parentItem: any;\n\n                if (parentObject) {\n                    parentItem = this.hub[parentObject.cacheProperty].find(c => c.key === item[o.parentKey]);\n                }\n\n                let obj: SharedObject = {\n                    item: item,\n                    label: o.name,\n                    type: o.type,\n                    parentItem: parentItem,\n                    key: item.key,\n                    name: (parentItem ? `(${parentItem.name}) ` : '' ) + item.name,\n                    description: item.description,\n                    updateDate: item.updateDate,\n                    tags: this.getObjectTags(o.type, item.key)\n                };\n\n                return obj;\n            }));\n        });\n\n        return data;\n    }\n\n    public cacheAddObject(sharedType: eSharedObjectType, item: any, hub: DexihHub) {\n        let sharedObject = sharedObjectProperties.find(c => c.type === sharedType);\n        let key = item.key;\n\n        this[sharedObject.cacheAddMethod](key, hub);\n\n    }\n\n    public cacheAddObjectFromKey(sharedType: eSharedObjectType, key: number, hub: DexihHub) {\n        let sharedObject = sharedObjectProperties.find(c => c.type === sharedType);\n        this[sharedObject.cacheAddMethod](key, hub);\n    }\n\n    public cacheAddDatajob(datajobKey: number, hub: DexihHub): DexihDatajob {\n        // check if datajob is already added.\n        const dup = hub.dexihDatajobs.find(c => c.key === datajobKey);\n        if (!dup) {\n            let datajob = this.hub.dexihDatajobs.find(c => c.key === datajobKey);\n            if (datajob) {\n                this.getDatajobCache(datajob, hub);\n\n                let datajobCopy = Object.assign({}, datajob);\n                datajobCopy['currentStatus'] = null;\n                datajobCopy['previousStatus'] = null;\n\n                hub.dexihDatajobs.push(datajobCopy);\n            }\n            return datajob;\n        }\n\n        return null;\n    }\n\n    public cacheAddDatalink(datalinkKey: number, hub: DexihHub): DexihDatalink {\n        // check if datalink is already added.\n        const dupDatalink = hub.dexihDatalinks.find(c => c.key === datalinkKey);\n        if (!dupDatalink) {\n            let datalink = this.hub.dexihDatalinks.find(c => c.key === datalinkKey);\n            if (datalink) {\n                this.getDatalinkCache(datalink, hub);\n\n                let datalinkCopy = Object.assign({}, datalink);\n                datalinkCopy['currentStatus'] = null;\n                datalinkCopy['entityStatus'] = null;\n                datalinkCopy['previousStatus'] = null;\n\n                hub.dexihDatalinks.push(datalinkCopy);\n            }\n            return datalink;\n        }\n\n        return null;\n    }\n\n    public cacheAddDatalinkTest(datalinkTestKey: number, hub: DexihHub): DexihDatalinkTest {\n        // check if datalink is already added.\n        const dupDatalinkTest = hub.dexihDatalinkTests.find(c => c.key === datalinkTestKey);\n        if (!dupDatalinkTest) {\n            let datalinkTest = this.hub.dexihDatalinkTests.find(c => c.key === datalinkTestKey);\n            if (datalinkTest) {\n                this.getDatalinkTestCache(datalinkTest, hub);\n\n                let datalinkTestCopy = Object.assign({}, datalinkTest);\n                datalinkTestCopy['currentStatus'] = null;\n                datalinkTestCopy['entityStatus'] = null;\n                datalinkTestCopy['previousStatus'] = null;\n\n                hub.dexihDatalinkTests.push(datalinkTestCopy);\n            }\n            return datalinkTest;\n        }\n\n        return null;\n    }\n\n    public cacheAddConnection(connectionKey: number, hub: DexihHub): DexihConnection {\n        if (connectionKey > 0) {\n            let connection = hub.dexihConnections.find(c => c.key === connectionKey);\n            if (!connection) {\n                connection = this.getConnectionCopy(connectionKey);\n                hub.dexihConnections.push(connection);\n            }\n\n            return connection;\n        }\n    }\n\n    public cacheAddTable(tableKey: number, hub: DexihHub): DexihTable {\n        if (tableKey > 0) {\n            let table = hub.dexihTables.find(t => t.key === tableKey);\n\n            if (!table) {\n                table = this.getTable(tableKey);\n\n                if (table) {\n                    hub.dexihTables.push(table);\n\n                    this.cacheAddConnection(table.connectionKey, hub);\n\n                    if (table.fileFormatKey) {\n                        this.cacheAddFileFormat(table.fileFormatKey, hub);\n                    }\n\n                    table.dexihTableColumns.forEach(c => {\n                        if (c.columnValidationKey) {\n                            this.cacheAddColumnValidation(c.columnValidationKey, hub);\n                        }\n                    });\n                }\n            }\n\n            return table;\n        }\n    }\n\n    public cacheAddColumnValidation(columnValidationKey: number, hub: DexihHub): DexihColumnValidation {\n        if (columnValidationKey > 0) {\n            const dupValidation = hub.dexihColumnValidations.find(c => c.key === columnValidationKey);\n            if (!dupValidation) {\n                let columnValidation = this.hub.dexihColumnValidations\n                    .find(c => c.key === columnValidationKey && c.isValid);\n                if (columnValidation) {\n\n                    this.getColumnValidationCache(columnValidation, hub);\n                    hub.dexihColumnValidations.push(columnValidation);\n                    return columnValidation;\n                }\n            }\n        }\n    }\n\n    public cacheAddCustomFunction(customFunctionKey: number, hub: DexihHub): DexihCustomFunction {\n        if (customFunctionKey > 0) {\n            const dupFunction = hub.dexihCustomFunctions.find(c => c.key === customFunctionKey);\n            if (!dupFunction) {\n                let customFunction = this.hub.dexihCustomFunctions\n                    .find(c => c.key === customFunctionKey && c.isValid);\n                if (customFunction) {\n                    hub.dexihCustomFunctions.push(customFunction);\n                    return customFunction;\n                }\n            }\n        }\n    }\n\n    public cacheAddFileFormat(fileFormatKey: number, hub: DexihHub): DexihFileFormat {\n        if (fileFormatKey > 0) {\n            const dup = hub.dexihFileFormats.find(c => c.key === fileFormatKey);\n            if (!dup) {\n                let fileFormat = this.hub.dexihFileFormats\n                    .find(c => c.key === fileFormatKey && c.isValid);\n                if (fileFormat) {\n                    hub.dexihFileFormats.push(fileFormat);\n                    return fileFormat;\n                }\n            }\n        }\n    }\n\n    public cacheAddView(viewKey: number, hub: DexihHub): DexihView {\n        if (viewKey > 0) {\n            const dup = hub.dexihViews.find(c => c.key === viewKey);\n            if (!dup) {\n                let view = this.hub.dexihViews\n                    .find(c => c.key === viewKey && c.isValid);\n                if (view) {\n                    hub.dexihViews.push(view);\n                    if (view.sourceType === eDataObjectType.Table) {\n                        this.cacheAddTable(view.sourceTableKey, hub);\n                    }\n                    if (view.sourceType === eDataObjectType.Datalink) {\n                        this.cacheAddDatalink(view.sourceDatalinkKey, hub);\n                    }\n                    return view;\n                }\n            }\n        }\n    }\n\n    public cacheAddDashboard(dashboardKey: number, hub: DexihHub): DexihDashboard {\n        if (dashboardKey > 0) {\n            const dup = hub.dexihDashboards.find(c => c.key === dashboardKey);\n            if (!dup) {\n                let dashboard = this.hub.dexihDashboards\n                    .find(c => c.key === dashboardKey && c.isValid);\n                if (dashboard) {\n                    dashboard.dexihDashboardItems.filter(c => c.viewKey > 0).forEach(item => {\n                        this.cacheAddView(item.viewKey, hub);\n                    });\n                    return dashboard;\n                }\n            }\n        }\n    }\n\n    public cacheAddListOfValues(listOfValuesKey: number, hub: DexihHub): DexihListOfValues {\n        if (listOfValuesKey > 0) {\n            const dup = hub.dexihListOfValues.find(c => c.key === listOfValuesKey);\n            if (!dup) {\n                let lov = this.hub.dexihListOfValues\n                    .find(c => c.key === listOfValuesKey && c.isValid);\n                if (lov) {\n                    hub.dexihListOfValues.push(lov);\n                    if (lov.sourceType === eLOVObjectType.Table) {\n                        this.cacheAddTable(lov.sourceTableKey, hub);\n                    }\n                    if (lov.sourceType === eLOVObjectType.Datalink) {\n                        this.cacheAddDatalink(lov.sourceDatalinkKey, hub);\n                    }\n                    return lov;\n                }\n            }\n        }\n    }\n\n    public cacheAddApi(apiKey: number, hub: DexihHub): DexihApi {\n        if (apiKey > 0) {\n            const dup = hub.dexihApis.find(c => c.key === apiKey);\n            if (!dup) {\n                let api = this.hub.dexihApis\n                    .find(c => c.key === apiKey && c.isValid);\n                if (api) {\n                    hub.dexihApis.push(api);\n                    if (api.sourceType === eSourceType.Table) {\n                        this.cacheAddTable(api.sourceTableKey, hub);\n                    }\n                    if (api.sourceType === eSourceType.Datalink) {\n                        this.cacheAddDatalink(api.sourceDatalinkKey, hub);\n                    }\n                    return api;\n                }\n            }\n        }\n    }\n\n    public cacheAddHubVariable(hubVariableKey: number, hub: DexihHub): DexihHubVariable {\n        if (hubVariableKey > 0) {\n            const dup = hub.dexihHubVariables.find(c => c.key === hubVariableKey);\n            if (!dup) {\n                let variable = this.hub.dexihHubVariables\n                    .find(c => c.key === hubVariableKey && c.isValid);\n                if (variable) {\n                    hub.dexihHubVariables.push(variable);\n                    return variable;\n                }\n            }\n        }\n    }\n\n    public cacheAddTag(key: number, hub: DexihHub): DexihTag {\n        if (key > 0) {\n            const dup = hub.dexihTags.find(c => c.key === key);\n            if (!dup) {\n                let tag = this.hub.dexihTags.find(c => c.key === key && c.isValid);\n                if (tag) {\n                    hub.dexihTags.push(tag);\n                    return tag;\n                }\n            }\n        }\n    }\n\n    public getTriggerDetails(trigger: DexihTrigger): string {\n        let details = '';\n\n        if (trigger.startDate) {\n            details += 'Starts on/after: ' + (new Date(trigger.startDate)).toLocaleDateString() + '<br/>';\n        }\n        if (trigger.startTime) {\n            details += 'Runs after: ' + trigger.startTime + '<br/>';\n        }\n        if (trigger.endTime) {\n            details += 'Ends after: ' + trigger.endTime + '<br/>';\n        }\n        if (trigger.daysOfWeek && trigger.daysOfWeek.length > 0 && trigger.daysOfWeek.length < 7 ) {\n            details += 'Only on: ' + trigger.daysOfWeek.map(c => eDayOfWeek[c]).join() + '<br/>';\n        }\n        if (trigger.intervalTime) {\n            details += 'Run at interval: ' +  trigger.intervalTime + '<br/>';\n        }\n        if (trigger.maxRecurs) {\n            details += 'Recurs for: ' +  trigger.maxRecurs + '<br/>';\n        }\n\n        return details;\n    }\n\n    public CopyDatalink(originalDatalink: DexihDatalink): DexihDatalink {\n        let copyDatalink = Object.assign({}, originalDatalink);\n        copyDatalink.name = copyDatalink.name + ' (copy)'\n        copyDatalink.key = null;\n\n        let datalinkColumnKeys = {};\n\n        if (copyDatalink.sourceDatalinkTable) {\n            copyDatalink.sourceDatalinkTable.key = null;\n            copyDatalink.sourceDatalinkTable.dexihDatalinkColumns.forEach(c => {\n                c.datalinkTableKey = null;\n                let key = this.getNextSequence();\n                datalinkColumnKeys[c.key] = key;\n                c.key = key;\n            });\n        }\n\n        copyDatalink.dexihDatalinkTransforms.sort((a, b) => a.position - b.position).forEach(t => {\n            t.key = this.getNextSequence();\n\n            if (t.joinDatalinkTable) {\n                t.joinDatalinkTable.key = null;\n                t.joinDatalinkTable.dexihDatalinkColumns.forEach(c => {\n                    c.datalinkTableKey = null;\n                    let key = this.getNextSequence();\n                    datalinkColumnKeys[c.key] = key;\n                    c.key = key;\n                });\n            }\n\n            t.dexihDatalinkTransformItems.forEach(i => {\n                i.datalinkTransformKey = t.key;\n                i.key = this.getNextSequence();\n\n                if (i.filterDatalinkColumn) {\n                    i.filterDatalinkColumn.key = datalinkColumnKeys[i.filterDatalinkColumn.key];\n                }\n                if (i.joinDatalinkColumn) {\n                    i.joinDatalinkColumn.key = datalinkColumnKeys[i.joinDatalinkColumn.key];\n                }\n                if (i.sourceDatalinkColumn) {\n                    i.sourceDatalinkColumn.key = datalinkColumnKeys[i.sourceDatalinkColumn.key];\n                }\n\n                if (i.targetDatalinkColumn) {\n                    let key = this.getNextSequence();\n                    datalinkColumnKeys[i.targetDatalinkColumn.key] = key;\n                    i.targetDatalinkColumn.key = key;\n                }\n\n                i.dexihFunctionParameters.forEach(p => {\n                    p.datalinkTransformItemKey = i.key;\n                    p.key = this.getNextSequence();\n\n                    if (p.datalinkColumn) {\n                        if (p.direction === eParameterDirection.Input) {\n                            p.datalinkColumn.key = datalinkColumnKeys[p.datalinkColumn.key];\n                        } else {\n                            let key = this.getNextSequence();\n                            datalinkColumnKeys[p.datalinkColumn.key] = key;\n                            p.datalinkColumn.key = key;\n                        }\n                    }\n                });\n            });\n        });\n\n        return copyDatalink;\n    }\n}\n\nexport class DataCache {\n    public data = new BehaviorSubject<PreviewResults>(null);\n    public isRefreshing = false;\n\n    public refresh(previewQuery: Promise<PreviewResults>) {\n        this.isRefreshing = true;\n        previewQuery.then((result) => {\n            this.data.next(result);\n            this.isRefreshing = false;\n        }).catch(() => {\n            this.data.next(null);\n            this.isRefreshing = false;\n        });\n    }\n}\n\n// export enum eSharedObjectType {\n//     None = <any>'None',\n//     Connection = <any>'Connection',\n//     Table = <any>'Table',\n//     FileFormat = <any>'FileFormat',\n//     Datalink = <any>'Datalink',\n//     Datajob = <any>'Datajob',\n//     DatalinkTransform = <any>'DatalinkTransform',\n//     DatalinkTransformItem = <any>'DatalinkTransformItem',\n//     RemoteAgent = <any>'RemoteAgent',\n//     ColumnValidation = <any>'ColumnValidation',\n//     TransformWriterResult = <any>'TransformWriterResult',\n//     HubVariable = <any>'HubVariable',\n//     CustomFunction = <any>'CustomFunction',\n//     DatalinkTest = <any>'DatalinkTest',\n//     View = <any>'View',\n//     Api = <any>'Api',\n//     Dashboard = <any>'Dashboard',\n//     ApiStatus = <any>'ApiStatus',\n// }\n\n\n\n// export enum eSharedDataObjectType {\n//     Table = <any>'Table',\n//     Datalink = <any>'Datalink',\n//     View = <any>'View',\n//     Dashboard = <any>'Dashboard',\n//     Api = <any>'Api'\n// }\n\n// export class SharedData {\n//     public hubKey: number;\n//     public hubName: string;\n\n//     public objectType: eSharedDataObjectType;\n//     public objectKey: number;\n//     public name: string;\n//     public logicalName: string;\n//     public description: string;\n//     public updateDate: Date;\n\n//     public parameters: any[];\n//     public inputColumns: InputColumn[];\n//     public query: SelectQuery;\n//     public outputColumns: DexihColumnBase[];\n\n// }\n\n// export enum eApiStatus {\n//     Activated = <any>'Activated',\n//     Deactivated = <any>'Deactivated',\n// }\n// export class ApiData {\n//     public apiStatus: eApiStatus;\n//     public hubKey: number;\n//     public apiKey: number;\n//     public securityKey = '';\n//     public successCount = 0;\n//     public errorCount = 0;\n// }\n\n// export class DexihApi extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public description: string = null;\n//     public sourceType: eSourceType = eSourceType.Table;\n//     public sourceTableKey = 0;\n//     public sourceDatalinkKey = 0;\n//     public selectQuery = new SelectQuery();\n//     public cacheQueries = true;\n//     public cacheResetInterval: string = null;\n//     public logDirectory = '';\n//     public autoStart = false;\n//     public isShared = false;\n\n//     public parameters: DexihInputParameter[] = [];\n\n//     public currentStatus: BehaviorSubject<ApiData>;\n// }\n\n// export class DexihColumnBase extends EntityBase {\n//     public position = 0;\n//     public name: string = null;\n//     public logicalName: string = null;\n//     public columnGroup: string = null;\n//     public description: string = null;\n//     public dataType: eTypeCode;\n//     public maxLength: number = null;\n//     public precision: number = null;\n//     public scale: number = null;\n//     public allowDbNull = true;\n//     public isUnicode = true;\n//     public deltaType: eDeltaType = eDeltaType.TrackingField;\n//     public defaultValue: string = null;\n//     public isUnique = false;\n//     public isMandatory = false;\n//     public isIncrementalUpdate = false;\n//     public isInput = false;\n//     public rank = 0;\n//     public securityFlag: eSecurityFlag = eSecurityFlag.None;\n\n//     public isSourceColumn = false;\n//     public isGeneratedColumn = false;\n\n//     public mappingStatus: eMappingStatus;\n\n//     public entityStatus: EntityStatus;\n\n//     public runTime: {lineage: eMappingStatus, impact: eMappingStatus}\n\n//     constructor() {\n//         super();\n//         this.securityFlag = eSecurityFlag.None;\n//         this.isUnique = false;\n//         this.isMandatory = false;\n//         this.isIncrementalUpdate = false;\n//         this.allowDbNull = false;\n//         this.isUnicode = false;\n//         this.dataType = eTypeCode.String;\n//         this.deltaType = eDeltaType.NaturalKey;\n//     }\n// }\n\nexport class DexihInputParameter {\n    public key = 0;\n    public name: string = null;\n    public description: string = null;\n    public value = null;\n}\n\n// export class DexihConnection extends EntityBase {\n//     public key = 0;\n//     public purpose: eConnectionPurpose = eConnectionPurpose.Source;\n//     public name: string = null;\n//     public description: string = null;\n//     public server: string = null;\n//     public useWindowsAuth = false;\n//     public username = '';\n//     public password = '';\n//     public usePasswordVariable = false;\n//     public defaultDatabase: string = null;\n//     public filename: string = null;\n//     public useConnectionString = false;\n//     public useConnectionStringVariable = false;\n//     public connectionString: string = null;\n//     public embedTableKey = false;\n//     public passwordRaw: string = null;\n//     public connectionStringRaw: string = null;\n\n//     // public dexihTables: Array<DexihTable> = null;\n\n//     public databases: Array<string> = null;\n\n//     public connectionAssemblyName = '';\n//     public connectionClassName = '';\n\n//     constructor( name: string) {\n//         super();\n//         this.name = name;\n//         // this.dexihTables = new Array<DexihTable>();\n//     }\n// }\n\n// export class DexihCustomFunction extends EntityBase {\n//     public key = 0;\n//     public functionType: eFunctionType = eFunctionType.Map;\n//     public methodCode = '';\n//     public resultCode = '';\n//     public name = '';\n//     public description = '';\n//     public returnType: eTypeCode = eTypeCode.String;\n//     public isGeneric = false;\n//     public genericTypeDefault: eTypeCode = eTypeCode.String;\n\n//     public dexihCustomFunctionParameters: DexihCustomFunctionParameter[] = [];\n// }\n\n// export class DexihCustomFunctionParameter extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public position = 0;\n//     public direction: eParameterDirection = null;\n//     public isGeneric = false;\n//     public dataType: eTypeCode = eTypeCode.String\n//     public rank = 0;\n// }\n\n// export class DexihColumnValidation extends EntityBase {\n//     public key = 0;\n//     public name = '';\n//     public description: string = null;\n//     public dataType: eTypeCode = eTypeCode.String;\n//     public minLength: number = null;\n//     public maxLength: number = null;\n//     public allowDbNull = false;\n//     public minValue: number = null;\n//     public maxValue: number = null;\n//     public patternMatch: string = null;\n//     public regexMatch: string = null;\n//     public listOfValues: string[] = [];\n//     public listOfNotValues: string[] = [];\n//     public lookupColumnKey: number = null;\n//     public lookupIsValid = true;\n//     public lookupMultipleRecords = false;\n//     public invalidAction: eInvalidAction = eInvalidAction.Abend;\n//     public cleanAction: eCleanAction = eCleanAction.Null;\n//     public cleanValue: string = null;\n// }\n\n// export class DexihDashboard extends EntityBase {\n//     public key = 0;\n//     public name = '';\n//     public description: string = null;\n//     public isShared = false;\n//     public minCols = 4;\n//     public maxCols = 100;\n//     public minRows = 4;\n//     public maxRows = 100;\n//     public autoRefresh = true;\n\n//     public dexihDashboardItems: Array<DexihDashboardItem> = [];\n//     public parameters: Array<DexihInputParameter> = [];\n// }\n\n// export class DexihDashboardItem extends EntityBase {\n//     public key = 0;\n//     public name = '';\n//     public description: string = null;\n//     public cols = 1;\n//     public rows = 1;\n//     public x = 0;\n//     public y = 0;\n//     public header = true;\n//     public scrollable = false;\n\n//     public parameters: Array<DexihInputParameter> = [];\n//     public viewKey = 0;\n// }\n\n// export class DexihDatajob extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public description: string = null;\n//     public failAction = eFailAction.Abend;\n//     public auditConnectionKey = 0;\n//     public fileWatch = false;\n//     public autoStart = false;\n// //    public externalTrigger = false;\n\n//     public dexihDatalinkSteps: Array<DexihDatalinkStep> = null;\n//     public dexihTriggers: Array<DexihTrigger> = null;\n\n//     public parameters: Array<DexihInputParameter> = [];\n\n//     public previousStatus: BehaviorSubject<TransformWriterResult>;\n//     public currentStatus: BehaviorSubject<TransformWriterResult>;\n\n//     constructor() {\n//         super();\n//         this.dexihDatalinkSteps = [];\n//         this.dexihTriggers = [];\n//     }\n// }\n// export class DexihDatalinkDependency extends EntityBase {\n//     public key = 0;\n//     public datalinkStepKey = 0;\n//     public dependentDatalinkStepKey = 0;\n// }\n// export class DexihDatalinkProfile extends EntityBase {\n//     public key = 0;\n//     public datalinkKey = 0;\n\n//     public functionClassName: string = null;\n//     public functionAssemblyName: string = null;\n//     public functionMethodName: string = null;\n//     public detailedResults = false;\n\n// // properties used by components\n//     public name: string;\n//     public description: string;\n// }\n// export class DexihDatalink extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public description: string = null;\n//     // public targetTableKey = null;\n//     public auditConnectionKey = null;\n//     public updateStrategy: eUpdateStrategy = eUpdateStrategy.Reload;\n//     public datalinkType: eDatalinkType = eDatalinkType.General;\n//     public loadStrategy: eTransformWriterMethod = eTransformWriterMethod.Bulk;\n//     public rowsPerCommit = 1000;\n//     public rowsPerProgress = 1000;\n//     public rollbackOnFail = false;\n//     public isQuery = false;\n//     public maxRows = 0;\n//     public addDefaultRow = false;\n//     public isShared = false;\n//     public profileTableName: string = null;\n\n//     public sourceDatalinkTable = new DexihDatalinkTable();\n//     public dexihDatalinkTransforms: Array<DexihDatalinkTransform> = [];\n//     public dexihDatalinkProfiles: Array<DexihDatalinkProfile> = [];\n//     public dexihDatalinkTargets: Array<DexihDatalinkTarget> = [];\n//     public parameters: Array<DexihInputParameter> = [];\n\n//     public targetTable: DexihTable;\n\n// // properties used by components.\n//     public sourceTableName: string;\n//     public targetTableName: string;\n\n//     public entityStatus: EntityStatus;\n//     public previousStatus: BehaviorSubject<TransformWriterResult>;\n//     public currentStatus: BehaviorSubject<TransformWriterResult>;\n// }\n\n// export class DexihDatalinkTable extends EntityBase {\n//     public key = 0;\n//     public sourceTableKey = null;\n//     public sourceDatalinkKey = null;\n//     public name: string = null;\n//     public sourceType = eSourceType.Table;\n\n//     public rowsStartAt = null;\n//     public rowsEndAt = null;\n//     public rowsIncrement = null;\n\n//     public dexihDatalinkColumns: Array<DexihDatalinkColumn> = [];\n// }\n\n// export class DexihDatalinkColumn extends DexihColumnBase {\n//     public key = 0;\n//     public datalinkTableKey = null;\n\n//     public childColumns: Array<DexihDatalinkColumn> = [];\n// }\n\n// export class DexihDatalinkStep extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public datajobKey = 0;\n//     public datalinkKey = 0;\n\n//     public dexihDatalinkDependencies: Array<DexihDatalinkDependency> = [];\n//     public dexihDatalinkStepColumns: Array<DexihDatalinkStepColumn> = [];\n//     public parameters: Array<DexihInputParameter> = [];\n// }\n\n// export class DexihDatalinkStepColumn extends DexihColumnBase {\n//     public key = 0;\n//     public datalinkStepKey = null;\n// }\n\n// export class DexihDatalinkTarget extends EntityBase {\n//     public key = 0;\n//     public datalinkKey: number = null;\n//     public nodeDatalinkColumn: DexihDatalinkColumn = null;\n//     public tableKey: number = null;\n//     public position: number = null;\n\n//     public runTime: {\n//         inputColumns: DexihDatalinkColumn[];\n//     }\n// }\n\n// export class DexihDatalinkTest extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public auditConnectionKey = 0;\n//     public description: string = null;\n\n//     public dexihDatalinkTestSteps: Array<DexihDatalinkTestStep> = [];\n\n//     public entityStatus: EntityStatus;\n//     public previousStatus: BehaviorSubject<TransformWriterResult>;\n//     public currentStatus: BehaviorSubject<TransformWriterResult>;\n// }\n\n// export class DexihDatalinkTestStep extends EntityBase {\n//     public key = 0;\n//     public datalinkTestKey = 0;\n//     public position = 0;\n//     public targetConnectionKey = 0;\n//     public targetTableName: string = null;\n//     public targetSchema: string = null;\n//     public expectedConnectionKey = 0;\n//     public expectedTableName: string = null;\n//     public expectedSchema: string = null;\n\n//     public datalinkKey = 0;\n\n//     public name: string = null;\n//     public description: string = null;\n\n//     public dexihDatalinkTestTables: Array<DexihDatalinkTestTable> = [];\n\n// }\n\n// export class DexihDatalinkTestTable extends EntityBase {\n//     public key = 0;\n//     public datalinkTestStepKey = 0;\n//     public tableKey = 0;\n//     public sourceConnectionKey = 0;\n//     public sourceTableName: string = null;\n//     public sourceSchema: string = null;\n//     public testConnectionKey = 0;\n//     public testTableName: string = null;\n//     public testSchema: string = null;\n// }\n\n// export class DexihDatalinkTransformItem extends EntityBase {\n//     public key = 0;\n//     public datalinkTransformKey = 0;\n//     public position = 0;\n//     public transformItemType: eTransformItemType = null;\n//     public sourceValue: string = null;\n//     public joinValue: string = null;\n//     public sortDirection: eSortDirection = null;\n//     public seriesGrain: eSeriesGrain = null;\n//     public seriesFill = false;\n//     public seriesStart: string = null;\n//     public seriesFinish: string = null;\n//     public filterCompare: eCompare = null;\n//     public filterValue: string = null;\n//     public aggregate: eAggregate = null;\n//     public returnType: eTypeCode = eTypeCode.String;\n//     public functionCode: string = null;\n//     public functionResultCode: string = null;\n//     public onError: eOnError = null;\n//     public onNull: eOnNull = null;\n//     public notCondition = false;\n//     public invalidAction: eInvalidAction = null;\n//     public customFunctionKey: number = null;\n\n//     public entityStatus: EntityStatus;\n\n//     public dexihFunctionParameters: Array<DexihFunctionParameter>;\n\n//     public functionClassName: string = null;\n//     public functionAssemblyName: string = null;\n//     public functionMethodName: string = null;\n\n//     public genericTypeCode: eTypeCode = null;\n//     public functionCaching = eFunctionCaching.NoCache;\n\n//     public targetDatalinkColumn: DexihDatalinkColumn = null;\n//     public sourceDatalinkColumn: DexihDatalinkColumn = null;\n//     public joinDatalinkColumn: DexihDatalinkColumn = null;\n//     public filterDatalinkColumn: DexihDatalinkColumn = null;\n\n//     constructor() {\n//         super();\n//         this.onError = eOnError.Abend;\n//         this.onNull = eOnNull.Execute;\n//         this.invalidAction = eInvalidAction.Abend;\n\n//         this.dexihFunctionParameters = [];\n//     }\n\n// }\n// export class DexihDatalinkTransform extends EntityBase {\n//     public key = 0;\n//     public datalinkKey = 0;\n//     public position = 0;\n//     public name: string = null;\n//     public description: string = null;\n//     public passThroughColumns: boolean = null;\n//     public joinTableAlias: string = null;\n//     public joinDuplicateStrategy = eDuplicateStrategy.All;\n\n//     public entityStatus: EntityStatus;\n\n//     public dexihDatalinkTransformItems: Array<DexihDatalinkTransformItem>;\n\n//     public transformType: eTransformType = null;\n//     public transformClassName: string = null;\n//     public transformAssemblyName: string = null ;\n\n//     public maxInputRows = 0;\n//     public maxOutputRows = 0;\n\n//     public joinDatalinkTable: DexihDatalinkTable = null;\n\n//     // TODO Implement joinSortDatalinkColumn\n//     public joinSortDatalinkColumn: DexihDatalinkColumn = null;\n\n//     public nodeDatalinkColumn: DexihDatalinkColumn = null;\n\n//     public runTime: {\n//         inputColumns: DexihDatalinkColumn[];\n//         outputColumns: DexihDatalinkColumn[];\n//         transformColumns: DexihDatalinkColumn[];\n//     }\n\n//     constructor() {\n//         super();\n//         this.dexihDatalinkTransformItems = new Array<DexihDatalinkTransformItem>();\n//     }\n// }\n\n// export class DexihFileFormat extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public description: string = null;\n//     public isDefault = false;\n//     public allowComments = false;\n//     public bufferSize: number;\n//     public comment: string;\n//     public delimiter: string;\n//     public detectColumnCountChanges = false;\n//     public hasHeaderRecord = true;\n//     public ignoreHeaderWhiteSpace = false;\n//     public ignoreReadingExceptions = false;\n//     public ignoreQuotes = false;\n//     public quote: string;\n//     public quoteAllFields = false;\n//     public quoteNoFields = false;\n//     public skipEmptyRecords = false;\n//     public skipHeaderRows = 0;\n//     public trimFields = false;\n//     public trimHeaders = false;\n//     public willThrowOnMissingField = false;\n//     public setWhiteSpaceCellsToNull = false;\n\n//     public matchHeaderRecord = true;\n\n//     public isModified: boolean;\n\n//     constructor() {\n//         super();\n//         this.bufferSize = 2048;\n//         this.delimiter = ',';\n//         this.quote = '\"';\n//         this.comment = '#';\n//     }\n// }\n// export class DexihFunctionParameter extends EntityBase {\n//     public key = 0;\n//     public datalinkTransformItemKey = 0;\n//     public name: string = null;\n//     public position = 0;\n//     public direction: eParameterDirection = null;\n//     public isGeneric = false;\n//     public dataType: eTypeCode = eTypeCode.String\n//     public rank = 0;\n//     public arrayParameters: DexihFunctionArrayParameter[] = [];\n//     public value: string = null;\n\n//     public datalinkColumn: DexihDatalinkColumn;\n//     public entityStatus: EntityStatus;\n\n//     // runtime structures are not exported when saving.\n//     public runTime: {functionParameter: FunctionParameter} = {functionParameter: null};\n// }\n\n// export class DexihFunctionArrayParameter extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public position = 0;\n//     public direction: eParameterDirection = null;\n//     public isGeneric = false;\n//     public dataType: eTypeCode = eTypeCode.String;\n//     public rank = 0;\n//     public value: string = null;\n//     public datalinkColumn: DexihDatalinkColumn = null;\n\n//     // runtime structures are not exported when saving.\n//     public runTime: {functionParameter: FunctionParameter} = {functionParameter: null};\n// }\n\n// export class DexihHub extends EntityBase {\n//     public hubKey = 0;\n//     public name: string;\n//     public description: string;\n//     public encryptionKey: string;\n//     public maxOwners: number;\n//     public maxUsers: number;\n//     public maxReaders: number;\n//     public maxDatalinks: number;\n//     public maxDatajobs: number;\n//     public dailyTransactionQuota: number;\n//     public expiryDate: Date;\n\n//     public hubPermission: ePermission;\n\n//     public dexihHubVariables: Array<DexihHubVariable>;\n//     public dexihConnections: Array<DexihConnection>;\n//     public dexihTables: Array<DexihTable>;\n//     public dexihDatajobs: Array<DexihDatajob>;\n//     public dexihDatalinks: Array<DexihDatalink>;\n//     public dexihColumnValidations: Array<DexihColumnValidation>;\n//     public dexihFileFormats: Array<DexihFileFormat>;\n//     public dexihCustomFunctions: Array<DexihCustomFunction>;\n//     public dexihRemoteAgentHubs: Array<DexihRemoteAgentHub>;\n//     public dexihDatalinkTests: Array<DexihDatalinkTest>;\n//     public dexihViews: Array<DexihView>;\n//     public dexihApis: Array<DexihApi>;\n//     public dexihDashboards: Array<DexihDashboard>;\n\n//     constructor(hubKey: number, name: string) {\n//         super();\n//         this.hubKey = hubKey;\n//         this.name = name;\n//         this.isValid = true;\n\n//         this.dexihHubVariables = new Array<DexihHubVariable>();\n//         this.dexihConnections = new Array<DexihConnection>();\n//         this.dexihTables = new Array<DexihTable>();\n//         this.dexihDatajobs = new Array<DexihDatajob>();\n//         this.dexihDatalinks = new Array<DexihDatalink>();\n//         this.dexihColumnValidations = new Array<DexihColumnValidation>();\n//         this.dexihFileFormats = new Array<DexihFileFormat>();\n//         this.dexihCustomFunctions = new Array<DexihCustomFunction>();\n//         this.dexihDatalinkTests = new Array<DexihDatalinkTest>();\n//         this.dexihViews = new Array<DexihView>();\n//         this.dexihApis = new Array<DexihApi>();\n//         this.dexihDashboards = new Array<DexihDashboard>();\n//     }\n// }\n\n// export class DexihHubVariable extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public value: string = null;\n//     public valueRaw: string = null;\n//     public isEncrypted = false;\n//     public isEnvironmentVariable = false;\n// }\n\n// export class DexihRemoteAgentHub extends EntityBase {\n//     public remoteAgentHubKey = 0;\n//     public remoteAgentKey = 0;\n//     public hubKey = 0;\n//     public isAuthorized = false;\n//     public isDefault = false;\n//     public allowExternalConnect = false;\n\n//     public isSelected = false;\n// }\n\n// export class DexihTableColumn extends DexihColumnBase {\n//     public key = 0;\n//     public tableKey = 0;\n//     public columnValidationKey: number = null;\n\n//     public parentColumnKey: number = null;\n//     public childColumns: DexihTableColumn[] = null;\n\n\n//     public mappingStatus: eMappingStatus;\n//     public entityStatus: EntityStatus;\n\n//     super() {\n//         this.securityFlag = eSecurityFlag.None;\n//         this.isUnique = false;\n//         this.isMandatory = false;\n//         this.isIncrementalUpdate = false;\n//         this.allowDbNull = false;\n//         this.dataType = eTypeCode.String;\n//         this.deltaType = eDeltaType.NaturalKey;\n//     }\n// }\n\n// export class DexihTable extends EntityBase {\n//     public key = 0;\n//     public connectionKey = 0;\n//     public name = '';\n//     public schema: string = null;\n//     public sourceConnectionName: string = null;\n//     public baseTableName: string = null;\n//     public logicalName = '';\n//     public tableType: eTableType = eTableType.Table;\n//     public description: string = null;\n//     public useQuery = false;\n//     public queryString = null;\n//     public fileFormatKey: number = null;\n//     public rejectedTableName: string = null;\n//     public sortColumnKeys: Array<number> = [];\n//     public autoManageFiles = true;\n//     public useCustomFilePaths = false;\n//     public fileRootPath: string = null;\n//     public fileIncomingPath: string = null;\n//     public fileOutgoingPath: string = null;\n//     public fileProcessedPath: string = null;\n//     public fileRejectedPath: string = null;\n//     public fileMatchPattern: string = null;\n//     public restfulUri: string = null;\n//     public formatType: eFormatType = eFormatType.Text;\n//     public maxImportLevels = 1;\n//     public rowPath: string = null;\n//     public isVersioned = false;\n//     public isShared = false;\n//     public fileSample: string = null;\n\n//     public fileFormat: DexihFileFormat = null;\n\n//     public entityStatus: EntityStatus; \n\n//     public dexihTableColumns: Array<DexihTableColumn>;\n\n//     public previousStatus: BehaviorSubject<TransformWriterResult>;\n//     public currentStatus: BehaviorSubject<TransformWriterResult>;\n\n//     constructor() {\n//         super();\n//         this['entityStatus'] = new EntityStatus();\n//         this['entityStatus'].isBusy = false;\n//         this['entityStatus'].lastStatus = eStatus.None;\n\n//         this.key = 0;\n//         this.dexihTableColumns = new Array<DexihTableColumn>();\n//     }\n// }\n\n// export class DexihTrigger extends EntityBase {\n//     public key = 0;\n//     public datajobKey = 0;\n//     public startDate: string = null;\n//     public intervalTime: string = null;\n//     public daysOfWeek: Array<eDayOfWeek> = [\n//         eDayOfWeek.Sunday,\n//         eDayOfWeek.Monday,\n//         eDayOfWeek.Tuesday,\n//         eDayOfWeek.Wednesday,\n//         eDayOfWeek.Thursday,\n//         eDayOfWeek.Friday,\n//         eDayOfWeek.Saturday,\n//     ];\n//     public startTime: string = null;\n//     public endTime: string = null;\n//     public cronExpression: string = null;\n//     public maxRecurs: number = null;\n// }\n\n// export class DexihView extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public description: string = null;\n//     public viewType: eViewType = eViewType.Table;\n//     public sourceType: eSourceType = eSourceType.Table;\n//     public sourceTableKey = 0;\n//     public sourceDatalinkKey = 0;\n//     public inputValues: InputColumn[] = null;\n//     public selectQuery = new SelectQuery();\n//     public chartConfig = new ChartConfig();\n//     public autoRefresh = true;\n//     public isShared = false;\n\n//     public parameters: Array<DexihInputParameter> = [];\n// }\n\n// export class ChartConfig {\n//     public labelColumn: string = null;\n//     public seriesColumn: string = null;\n//     public seriesColumns = [];\n//     public xColumn: string = null;\n//     public yColumn: string = null;\n//     public minColumn: string = null;\n//     public maxColumn: string = null;\n//     public radiusColumn: string = null;\n//     public longitudeColumn: string = null;\n//     public latitudeColumn: string = null;\n\n//     public chartType = eChartType.BarVertical;\n//     public colorScheme = 'natural';\n//     public showGradient = false;\n//     public showXAxis = true;\n//     public showYAxis = true;\n//     public showLegend = false;\n//     public legendPosition: 'right' | 'below'  = 'below';\n//     public showXAxisLabel = true;\n//     public showYAxisLabel = true;\n//     public showGridLines = false;\n//     public xAxisLabel: string = null;\n//     public yAxisLabel: string = null;\n//     public xScaleMax = null;\n//     public xScaleMin = null;\n//     public yScaleMax = null;\n//     public yScaleMin = null;\n//     public autoScale = true;\n\n//     // pie charts only\n//     public explodeSlices = false;\n//     public doughnut = false;\n// }\n\n// export enum eSourceType {\n//     Table = <any>'Table',\n//     Datalink = <any>'Datalink'\n// }\n\n// export enum eViewType {\n//     Table = <any>'Table',\n//     Chart = <any>'Chart'\n// }\n\n// export enum eTableType {\n//     Table = <any>'Table',\n//     View = <any>'View',\n//     Query = <any>'Query',\n// }\n\n// export enum eTestTableAction {\n//     None = <any>'None',\n//     Truncate = <any>'Truncate',\n//     DropCreate = <any>'DropCreate',\n//     TruncateCopy = <any>'TruncateCopy',\n//     DropCreateCopy = <any>'DropCreateCop',\n// }\n\n// export enum eStatus {\n//     None = <any>'None',\n//     Pending = <any>'Pending',\n//     Error = <any>'Error',\n//     Imported = <any>'Imported',\n//     Added = <any>'Added',\n//     Updated = <any>'Updated',\n//     Deleted = <any>'Deleted',\n// }\n\n// export enum eSortDirection {\n//     Ascending = <any>'Ascending',\n//     Descending = <any>'Descending',\n// }\n\nexport const sortDirections = [\n    {key: eSortDirection.Ascending, name: 'Ascending'},\n    {key: eSortDirection.Descending, name: 'Descending'},\n];\n\n// export enum eSeriesGrain {\n//     Second = <any>'Second',\n//     Minute = <any>'Minute',\n//     Hour = <any>'Hour',\n//     Day = <any>'Day',\n//     Week = <any>'Week',\n//     Month = <any>'Month',\n//     Year = <any>'Year',\n//     Number = <any>'Number',\n// }\nexport const seriesGrains = [\n    {key: eSeriesGrain.Second, name: 'Second'},\n    {key: eSeriesGrain.Minute, name: 'Minute'},\n    {key: eSeriesGrain.Hour, name: 'Hour'},\n    {key: eSeriesGrain.Day, name: 'Day'},\n    {key: eSeriesGrain.Week, name: 'Week'},\n    {key: eSeriesGrain.Month, name: 'Month'},\n    {key: eSeriesGrain.Year, name: 'Year'},\n    {key: eSeriesGrain.Number, name: 'Number'},\n];\n\n// export enum eDeltaType {\n//     SourceSurrogateKey = <any>'SourceSurrogateKey',\n//     ValidFromDate = <any>'ValidFromDate',\n//     ValidToDate = <any>'ValidToDate',\n//     CreateDate = <any>'CreateDate',\n//     UpdateDate = <any>'UpdateDate',\n//     CreateAuditKey = <any>'CreateAuditKey',\n//     UpdateAuditKey = <any>'UpdateAuditKey',\n//     IsCurrentField = <any>'IsCurrentField',\n//     Version = <any>'Version',\n//     NaturalKey = <any>'NaturalKey',\n//     TrackingField = <any>'TrackingField',\n//     NonTrackingField = <any>'NonTrackingField',\n//     IgnoreField = <any>'IgnoreField',\n//     ValidationStatus = <any>'ValidationStatus',\n//     RejectedReason = <any>'RejectedReason',\n//     FileName = <any>'FileName',\n//     FileRowNumber = <any>'FileRowNumber',\n//     AzureRowKey = <any>'AzureRowKey', // special column type for Azure Storage Tables.\n//     AzurePartitionKey = <any>'AzurePartitionKey', // special column type for Azure Storage Tables.\n//     TimeStamp = <any>'TimeStamp', // column that is generated by the database.\n//     DbAutoIncrement = <any>'DbAutoIncement',\n//     AutoIncrement = <any>'AutoIncrement', // column is auto incremented by the integration hub function.\n//     ResponseSuccess = <any>'ResponseSuccess', // webservice/function response aws successful\n//     ResponseData = <any>'ResponseData',  // raw data from a webservice/function response\n//     ResponseStatus = <any>'ResponseStatus',  // status code from a webservice/function call\n//     ResponseSegment = <any>'ResponseSegment',  // status code from a webservice/function call\n//     Error = <any>'Error',  // status code from a webservice/function call\n//     Url = <any>'Url',  // status code from a webservice/function call\n// }\n\n// export enum eChartType {\n//     BarVertical = <any>'BarVertical',\n//     BarHorizontal = <any>'BarHorizontal',\n//     BarVertical2D = <any>'BarVertical2D',\n//     BarHorizontal2D = <any>'BarHorizontal2D',\n//     BarVerticalStacked = <any>'BarVerticalStacked',\n//     BarHorizontalStacked = <any>'BarHorizontalStacked',\n//     BarVerticalNormalized = <any>'BarVerticalNormalized',\n//     BarHorizontalNormalized = <any>'BarHorizontalNormalized',\n//     Pie = <any>'Pie',\n//     PieAdvanced = <any>'PieAdvanced',\n//     PieGrid = <any>'PieGrid',\n//     Line = <any>'Line',\n//     Area = <any>'Area',\n//     Polar = <any>'Polar',\n//     AreaStacked = <any>'AreaStacked',\n//     AreaNormalized = <any>'AreaNormalized',\n//     Scatter = <any>'Scatter',\n//     Error = <any>'Error',\n//     Bubble = <any>'Bubble',\n//     ForceDirected = <any>'ForceDirected',\n//     HeatMap = <any>'HeatMap',\n//     TreeMap = <any>'TreeMap',\n//     Cards = <any>'Cards',\n//     Gauge = <any>'Gauge',\n//     LinearGauge = <any>'LinearGauge',\n//     Map = <any>'Map'\n// }\n\nexport const deltaTypes = [\n    {key: eDeltaType.SourceSurrogateKey, name: 'Source Surrogate Key', dataType: eTypeCode.Int64, defaultName: 'SourceSk', unique: true},\n    {key: eDeltaType.ValidFromDate, name: 'Valid From Date', dataType: eTypeCode.DateTime, defaultName: 'ValidFromDate', unique: true},\n    {key: eDeltaType.ValidToDate, name: 'Valid To Date', dataType: eTypeCode.DateTime, defaultName: 'ValidToDate', unique: true},\n    {key: eDeltaType.CreateDate, name: 'Create Date', dataType: eTypeCode.DateTime, defaultName: 'CreateDate', unique: true},\n    {key: eDeltaType.UpdateDate, name: 'Update Date', dataType: eTypeCode.DateTime, defaultName: 'UpdateDate', unique: true},\n    {key: eDeltaType.CreateAuditKey, name: 'Create Audit Key', dataType: eTypeCode.Int64, defaultName: 'CreateAuditKey', unique: true},\n    {key: eDeltaType.UpdateAuditKey, name: 'Update Audit Key', dataType: eTypeCode.Int64, defaultName: 'UpdateAuditKey', unique: true},\n    {key: eDeltaType.IsCurrentField, name: 'Is Current Field', dataType: eTypeCode.Boolean, defaultName: 'IsCurrent', unique: true},\n    {key: eDeltaType.Version, name: 'Record Version', dataType: eTypeCode.Boolean, defaultName: 'Version', unique: true},\n    {key: eDeltaType.NaturalKey, name: 'Natural Key', dataType: null, defaultName: null, unique: false},\n    {key: eDeltaType.TrackingField, name: 'Tracking Field', dataType: null, defaultName: null, unique: false},\n    {key: eDeltaType.NonTrackingField, name: 'Non-Tracking Field', dataType: null, defaultName: null, unique: false},\n    {key: eDeltaType.IgnoreField, name: 'Ignored Field', dataType: null, defaultName: null, unique: false},\n    {key: eDeltaType.RejectedReason, name: 'Reject Reason', dataType: eTypeCode.String, defaultName: 'RejectReason', unique: true},\n    {key: eDeltaType.FileName, name: 'File Name', dataType: eTypeCode.String, defaultName: 'FileName', unique: true},\n    {key: eDeltaType.FileRowNumber, name: 'File Row Number', dataType: eTypeCode.Int64, defaultName: 'FileRowNumber', unique: true},\n    {key: eDeltaType.FileDate, name: 'File Modified Date', dataType: eTypeCode.Int64, defaultName: 'FileDate', unique: true},\n    {key: eDeltaType.RowKey, name: 'RowKey (Azure/Mongo)', dataType: null, defaultName: null, unique: true},\n    {key: eDeltaType.PartitionKey, name: 'PartitionKey (Azure only)', dataType: null, defaultName: null, unique: true},\n    {key: eDeltaType.TimeStamp, name: 'Auto TimeStamp', dataType: null, defaultName: null, unique: true},\n    {key: eDeltaType.AutoIncrement, name: 'Auto Increment', dataType: eTypeCode.Int64, defaultName: 'Sk', unique: true},\n    {key: eDeltaType.DbAutoIncrement, name: 'Database Auto Increment', dataType: eTypeCode.Int64, defaultName: 'Sk', unique: true},\n    {key: eDeltaType.ResponseSuccess, name: 'Response Success', dataType: eTypeCode.String, defaultName: 'ResponseSuccess', unique: false},\n    {key: eDeltaType.ResponseData, name: 'Response Data', dataType: eTypeCode.String, defaultName: 'ResponseData', unique: false},\n    {key: eDeltaType.ResponseStatus, name: 'Response Status', dataType: eTypeCode.String, defaultName: 'ResponseStatus', unique: true},\n    {key: eDeltaType.ResponseSegment, name: 'Response Segment', dataType: eTypeCode.String, defaultName: null, unique: false},\n    {key: eDeltaType.DatabaseOperation, name: 'Database Operation', dataType: eTypeCode.String, defaultName: null, unique: false},\n    {key: eDeltaType.Error, name: 'Error', dataType: eTypeCode.String, defaultName: null, unique: false},\n    {key: eDeltaType.Url, name: 'Url', dataType: eTypeCode.String, defaultName: null, unique: false},\n    {key: eDeltaType.ValidationStatus, name: 'Validation Status',\n        dataType: eTypeCode.String, defaultName: 'ValidationStatus', unique: true},\n]\n\n// export enum eSecurityFlag {\n//     None = <any>'None',\n//     FastEncrypt = <any>'FastEncrypt',\n//     FastDecrypt = <any>'FastDecrypt',\n//     FastEncrypted = <any>'FastEncrypted',\n//     StrongEncrypt = <any>'StrongEncrypt',\n//     StrongDecrypt = <any>'StrongDecrypt',\n//     StrongEncrypted = <any>'StrongEncrypted',\n//     OneWayHash = <any>'OneWayHash',\n//     OneWayHashed = <any>'OneWayHashed',\n//     Hide = <any>'Hide'\n// }\n\nexport const securityFlags = [\n    {key: eSecurityFlag.None, name: 'Not Secured'},\n    {key: eSecurityFlag.FastEncrypt, name: 'Fast Encrypt (encrypted when read)'},\n    {key: eSecurityFlag.FastDecrypt, name: 'Fast Decrypt (decrypted when written)'},\n    {key: eSecurityFlag.FastEncrypted, name: 'Fast Encrypted Field'},\n    {key: eSecurityFlag.StrongEncrypt, name: 'Strong Encrypt (encrypted when read)'},\n    {key: eSecurityFlag.StrongDecrypt, name: 'Strong Decrypt (decrypted when written)'},\n    {key: eSecurityFlag.StrongEncrypted, name: 'Strong Encrypted Field'},\n    {key: eSecurityFlag.OneWayHash, name: 'Hash (when read)'},\n    {key: eSecurityFlag.OneWayHashed, name: 'Hashed field'},\n    {key: eSecurityFlag.Hide, name: 'Hide the field'},\n]\n\n// export enum eDatalinkType {\n//     General = <any>'General',\n//     Stage = <any>'Stage',\n//     Validate = <any>'Validate',\n//     Transform = <any>'Transform',\n//     Deliver = <any>'Deliver',\n//     Publish = <any>'Publish',\n//     Share = <any>'Share',\n//     Query = <any>'Query'\n// }\n\n// export const datalinkTypes = [\n//     {key: eDatalinkType.General, name: 'General', description: 'Non-categorized general purpose datalink'},\n//     {key: eDatalinkType.Stage, name: 'Staging', description: 'Staging - loads data into a central/interim database'},\n//     {key: eDatalinkType.Validate, name: 'Validate', description: 'Validate - performs data validation and cleaning'},\n//     {key: eDatalinkType.Transform, name: 'Transform', description: 'Transform - reshapes, aggregates data'},\n//     {key: eDatalinkType.Deliver, name: 'Deliver', description: 'Deliver - prepares data for delivering to a system/database'},\n//     {key: eDatalinkType.Publish, name: 'Publish', description: 'Publish - sends data to a target system/database'},\n//     {key: eDatalinkType.Share, name: 'Share', description: 'Share - datalink designed to be shared with other users'},\n//     {key: eDatalinkType.Query, name: 'Query',\n//              description: 'Query - datalink query used for data extracts or as a source for other datalinks'},\n// ]\n\n// export enum eTransformWriterMethod {\n//     Bulk = <any>'Bulk',\n//     Transaction = <any>'Transaction',\n// }\n\nexport const loadStrategies = [\n    {key: eTransformWriterMethod.Bulk, description: 'Bulk load - target tables loaded in parallel as fast as possible'},\n    {key: eTransformWriterMethod.Transaction, description: 'Transaction - Target tables loaded in transactions to ensure data integrity'},\n]\n\n// export enum eUpdateStrategy {\n//     Reload = <any>'Reload',\n//     Append = <any>'Append',\n//     AppendUpdate = <any>'AppendUpdate',\n//     AppendUpdateDelete = <any>'AppendUpdateDelete',\n//     AppendUpdatePreserve = <any>'AppendUpdatePreserve',\n//     AppendUpdateDeletePreserve = <any>'AppendUpdateDeletePreserve',\n// }\n\nexport const updateStrategies = [\n    {key: eUpdateStrategy.Reload, description: 'Truncate target table and reload'},\n    {key: eUpdateStrategy.Append, description: 'Append all rows to target table'},\n    {key: eUpdateStrategy.AppendUpdate, description: 'Append new rows and update existing rows'},\n    {key: eUpdateStrategy.AppendUpdateDelete, description: 'Append new rows, update existing rows, and delete \"deleted\" rows'},\n    {key: eUpdateStrategy.AppendUpdatePreserve, description: 'Append new rows and update existing rows, and preserve changes'},\n    {key: eUpdateStrategy.AppendUpdateDeletePreserve, description: 'Append new rows, check for updates and deletes, and preserve changes'},\n]\n\n// export enum eConnectionPurpose {\n//     Source = <any>'Source',\n//     Managed = <any>'Managed',\n//     Target = <any>'Target',\n//     Internal = <any>'Internal'\n// }\n\n// export const connectionPurposes = [\n//     {key: eConnectionPurpose.Source, name: 'Source Database/Service'},\n//     {key: eConnectionPurpose.Managed, name: 'Managed (by Integration Hub) Database'},\n//     {key: eConnectionPurpose.Target, name: 'Target Database'},\n// ]\n\n// export enum eParameterDirection {\n//     Input = <any>'Input',\n//     Output = <any>'Output',\n//     Join = <any>'Join',\n//     ResultInput = <any>'ResultInput',\n//     ResultOutput = <any>'ResultOutput',\n//     ReturnValue = <any>'ReturnValue',\n//     ResultReturnValue = <any>'ResultReturnValue',\n// };\n\n// export enum eTransformItemType {\n//     BuiltInFunction = <any>'BuiltInFunction',\n//     CustomFunction = <any>'CustomFunction',\n//     ColumnPair = <any>'ColumnPair',\n//     JoinPair = <any>'JoinPair',\n//     FilterPair = <any>'FilterPair',\n//     AggregatePair = <any>'AggregatePair',\n//     Series = <any>'Series',\n//     Sort = <any>'Sort',\n//     Column = <any>'Column',\n//     JoinNode = <any>'JoinNode',\n//     GroupNode = <any>'GroupNode',\n//     Node = <any>'Node',\n//     UnGroup = <any>'UnGroup'\n// }\n\nexport const transformItemTypes = [\n    // tslint:disable-next-line:max-line-length\n    {key: eTransformItemType.BuiltInFunction, name: 'Built in Function', useSource: false, useTarget: false, useJoin: false, useFilter: false},\n    // tslint:disable-next-line:max-line-length\n    {key: eTransformItemType.CustomFunction, name: 'Custom Function', useSource: false, useTarget: false, useJoin: false, useFilter: false},\n    {key: eTransformItemType.ColumnPair, name: 'Mapping', useSource: true, useTarget: true, useJoin: false, useFilter: false},\n    {key: eTransformItemType.JoinPair, name: 'Join', useSource: true, useTarget: false, useJoin: true, useFilter: false},\n    {key: eTransformItemType.FilterPair, name: 'Filter', useSource: true, useTarget: true, useJoin: false, useFilter: true},\n    {key: eTransformItemType.AggregatePair, name: 'Aggregate', useSource: true, useTarget: true, useJoin: false, useFilter: false},\n    {key: eTransformItemType.Series, name: 'Series', useSource: true, useTarget: false, useJoin: false, useFilter: false},\n    {key: eTransformItemType.Sort, name: 'Sort By', useSource: true, useTarget: false, useJoin: false, useFilter: false},\n    {key: eTransformItemType.Column, name: 'Group By', useSource: true, useTarget: false, useJoin: false, useFilter: false},\n    {key: eTransformItemType.JoinNode, name: 'Join Node', useSource: true, useTarget: false, useJoin: true, useFilter: false},\n    {key: eTransformItemType.GroupNode, name: 'Group Node', useSource: true, useTarget: false, useJoin: false, useFilter: false},\n    {key: eTransformItemType.Node, name: 'Node', useSource: true, useTarget: false, useJoin: false, useFilter: false},\n    {key: eTransformItemType.UnGroup, name: 'Un-Group', useSource: true, useTarget: false, useJoin: false, useFilter: false},\n]\n\n// export enum eTransformFunctionType {\n//     Condition = <any>'Condition',\n//     Mapping = <any>'Mapping',\n//     Aggregate = <any>'Aggregate',\n//     Series = <any>'Series',\n//     Rows = <any>'Rows',\n//     Profile = <any>'Profile',\n//     Validation = <any>'Validation',\n//     JoinCondition = <any>'JoinCondition',\n//     Sort = <any>'Sort'\n// }\n\nexport const transformFunctionTypes = [\n    {key: eFunctionType.Condition, name: 'Condition Function'},\n    {key: eFunctionType.Map, name: 'Mapping Function'},\n    {key: eFunctionType.Aggregate, name: 'Aggregate Function'},\n    {key: eFunctionType.Rows, name: 'Row Generating Function'},\n    {key: eFunctionType.Profile, name: 'Profile Function'},\n    {key: eFunctionType.Validate, name: 'Validation Function'},\n    {key: eFunctionType.JoinCondition, name: 'Join Condition'},\n    {key: eFunctionType.Sort, name: 'Sort Function'},\n]\n\n// export enum eOnError {\n//     Abend = <any>'Abend',\n//     Null = <any>'Null',\n//     Ignore = <any>'Ignore'\n// }\n// export const onErrorActions = [\n//     {key: eOnError.Abend, name: 'Abend Datalink'},\n//     {key: eOnError.Null, name: 'Return Null'},\n//     {key: eOnError.Ignore, name: 'Discard the row'},\n// ];\n\n// export enum eOnNull {\n//     Execute = <any>'Execute',\n//     Abend = <any>'Abend',\n//     Null = <any>'Null',\n//     Ignore = <any>'Ignore'\n// }\n\n// export const onNullActions = [\n//     {key: eOnNull.Execute, name: 'Execute Function'},\n//     {key: eOnNull.Abend, name: 'Abend Datalink'},\n//     {key: eOnNull.Null, name: 'Return Null'},\n//     {key: eOnNull.Ignore, name: 'Discard the row'},\n// ];\n\n// export enum eParseErrorAction {\n//     RaiseEvent = <any>'RaiseEvent',\n//     AdvanceToNextLine = <any>'AdvanceToNextLine',\n//     ThrowException = <any>'ThrowException',\n// }\n\n// export const ParseErrorActions = [\n//     {key: eParseErrorAction.ThrowException, name: 'Abend Datalink'},\n//     {key: eParseErrorAction.RaiseEvent, name: 'Reject Record'},\n//     {key: eParseErrorAction.AdvanceToNextLine, name: 'Continue next line'},\n// ];\n\n// export enum eMissingFieldAction {\n//     ParseError = <any>'ParseError',\n//     ReplaceByEmpty = <any>'ReplaceByEmpty',\n//     ReplaceByNull = <any>'ReplaceByNull',\n// };\n\n// export const  MissingFieldActions = [\n//     {key: eMissingFieldAction.ParseError, name: 'Raise parse error'},\n//     {key: eParseErrorAction.RaiseEvent, name: 'Reject Record'},\n//     {key: eParseErrorAction.AdvanceToNextLine, name: 'Continue next line'},\n// ];\n\n// export enum eValueTrimmingOptions {\n//     None = <any>'None',\n//     UnquotedOnly = <any>'UnquotedOnly',\n//     QuotedOnly = <any>'QuotedOnly',\n//     All = <any>'All',\n// };\n\n// export const  ValueTrimmingOptions = [\n//     {key: eValueTrimmingOptions.All, name: 'All'},\n//     {key: eValueTrimmingOptions.None, name: 'None'},\n//     {key: eValueTrimmingOptions.QuotedOnly, name: 'Quoted Fields Only'},\n//     {key: eValueTrimmingOptions.UnquotedOnly, name: 'Unquoted Fields Only'},\n// ];\n\n// export enum eFailAction {\n//     Continue = <any>'Continue',\n//     ContinueNonDependent = <any>'ContinueNonDependent',\n//     Abend = <any>'Abend',\n// }\n\nexport const FailActions = [\n    {key: eFailAction.Abend, name: 'Abend the job'},\n    {key: eFailAction.Continue, name: 'Continue to next datalink'},\n    {key: eFailAction.ContinueNonDependent, name: 'Continue with non-dependent datalinks'},\n];\n\n// export enum eInvalidAction {\n//     Pass= <any>'Pass',\n//     Clean = <any>'Clean',\n//     RejectClean= <any>'RejectClean',\n//     Reject = <any>'Reject',\n//     Discard= <any>'Discard',\n//     Abend= <any>'Abend',\n// }\n\nexport const InvalidActions = [\n    {key: eInvalidAction.Pass, name: 'Pass Record'},\n    {key: eInvalidAction.Clean, name: 'Clean Record'},\n    {key: eInvalidAction.RejectClean, name: 'Reject/Clean Record'},\n    {key: eInvalidAction.Reject, name: 'Reject Record'},\n    {key: eInvalidAction.Discard, name: 'Discard Record'},\n    {key: eInvalidAction.Abend, name: 'Abend Datalink'},\n];\n\n// export enum eFunctionCaching {\n//     NoCache= <any>'NoCache',\n//     EnableCache= <any>'EnableCache',\n//     CallOnce= <any>'CallOnce',\n// }\n\nexport const FunctionCache = [\n    {key: eFunctionCaching.NoCache, name: 'No cache (function called for each row)'},\n    {key: eFunctionCaching.EnableCache, name: 'Enable cache (function called when values change)'},\n    {key: eFunctionCaching.CallOnce, name: 'Call Once (function called for first row only)'},\n]\n\n// export enum eCleanAction {\n//     DefaultValue = <any>'DefaultValue',\n//     Truncate = <any>'Truncate',\n//     Blank = <any>'Blank',\n//     Null = <any>'Null',\n//     OriginalValue = <any>'OriginalValue',\n//     CleanValue = <any>'CleanValue',\n// }\n\nexport const CleanActions = [\n    {key: eCleanAction.DefaultValue, name: 'Use columns default value'},\n    {key: eCleanAction.Truncate, name: 'Truncate (if string) to the maximum allowed length'},\n    {key: eCleanAction.Blank, name: 'Set to blank'},\n    {key: eCleanAction.Null, name: 'Set to null'},\n    {key: eCleanAction.OriginalValue, name: 'Use the original value'},\n    {key: eCleanAction.CleanValue, name: 'Use the specified clean value'},\n];\n\n// export enum eDuplicateStrategy {\n//     Abend = <any>'Abend',\n//     First = <any>'First',\n//     Last = <any>'Last',\n//     All = <any>'All',\n// }\n\n// export const duplicateStrategies = [\n//     {key: eDuplicateStrategy.Abend, name: 'Abend Datalink'},\n//     {key: eDuplicateStrategy.First, name: 'First Match'},\n//     {key: eDuplicateStrategy.Last, name: 'Last Match'},\n//     {key: eDuplicateStrategy.All, name: 'All matches (duplicate rows)'},\n// ];\n\n// export enum eSourceType {\n//     Datalink = <any>'Datalink',\n//     Table = <any>'Table',\n//     Rows = <any>'Rows',\n// }\n\nexport const sourceTypes = [\n    {key: eSourceType.Datalink, name: 'Datalink'},\n    {key: eSourceType.Table, name: 'Table'},\n    {key: eSourceType.Rows, name: 'Static Row Set'},\n];\n\n// export class Table {\n//     public name: string;\n//     public baseTableName: string;\n//     public logicalName: string;\n//     public description: string;\n//     public sourceConnectionName: string;\n\n//     public columns: Array<TableColumn>;\n\n//     public data: Array<Array<any>>;\n// }\n\n// export class TableColumn {\n//     public name: string;\n//     public logicalName: string;\n//     public columnGroup: string;\n//     public description: string;\n//     public dataType: eTypeCode;\n//     public maxLength: number;\n//     public isUnicode: boolean;\n//     public precision: number;\n//     public scale: number;\n//     public allowDbNull: boolean;\n//     public deltaType: eDeltaType;\n//     public defaultValue: string;\n//     public isUnique: boolean;\n//     public isMandatory: boolean;\n//     public isIncrementalUpdate: boolean;\n//     public securityFlag: eSecurityFlag;\n// }\n\n// export class TransformPerformance {\n//     public transformName: string;\n//     public action: string;\n//     public rows: number;\n//     public seconds: number;\n//     public children: TransformPerformance[];\n// }\n\n// export class TransformWriterResult {\n//         public auditKey: number;\n//         public auditType: string;\n//         public referenceKey: number;\n//         public parentAuditKey: number;\n//         public referenceName: string;\n//         public sourceTableKey: number;\n//         public sourceTableName: string;\n//         public targetTableKey: number;\n//         public targetTableName: string;\n\n//         public hubKey: string;\n//         public auditConnectionKey: number;\n\n//         public lastRowTotal: number;\n//         public lastMaxIncrementalValue: any;\n\n//         public rowsTotal: number;\n//         public rowsCreated: number;\n//         public rowsUpdated: number;\n//         public rowsDeleted: number;\n//         public rowsPreserved: number;\n//         public rowsIgnored: number;\n//         public rowsRejected: number;\n//         public rowsFiltered: number;\n//         public rowsSorted: number;\n//         public rowsReadPrimary: number;\n//         public rowsReadReference: number;\n\n//         public readTicks: number;\n//         public writeTicks: number;\n//         public processingTicks: number;\n\n//         public maxIncrementalValue: any;\n//         public maxSurrogateKey: number;\n\n//         public message: string;\n//         public exceptionDetails: string;\n//         public initializeTime: string;\n//         public scheduledTime: string;\n//         public startTime: string;\n//         public endTime: string;\n//         public lastUpdateTime: string;\n//         public triggerMethod: eTriggerMethod;\n//         public triggerInfo: string;\n//         public performanceSummary: TransformPerformance[];\n\n//         public runStatus: eRunStatus;\n\n//         public profileTableName: string;\n//         public rejectTableName: string;\n\n//         public childResults: TransformWriterResult[];\n// }\n\n\nexport class FileProperties {\n    public fileName: string;\n    public lastModified: Date;\n    public length: number;\n    public contentType: string;\n}\n\n// export class ImportOptions {\n//     public connections = eImportAction.Replace;\n//     public tables = eImportAction.Replace;\n//     public fileFormats = eImportAction.Replace;\n//     public datalinks = eImportAction.Replace;\n//     public datajobs = eImportAction.Replace;\n//     public columnValidations = eImportAction.Replace;\n//     public hubVariables = eImportAction.Replace;\n//     public customFunctions = eImportAction.Replace;\n//     public datalinkTests = eImportAction.Replace;\n//     public views = eImportAction.Replace;\n//     public apis = eImportAction.Replace;\n// }\n\n// export class ImportAction {\n//     public objectType: eSharedObjectType;\n//     public action: eImportAction;\n// }\n\n// export class Import {\n//     public hubKey: number;\n//     public hubVariables: ImportObject<DexihHubVariable>[];\n//     public datajobs: ImportObject<DexihDatajob>[];\n//     public datalinks: ImportObject<DexihDatalink>[];\n//     public connections: ImportObject<DexihConnection>[];\n//     public tables: ImportObject<DexihTable>[];\n//     public fileFormats: ImportObject<DexihFileFormat>[];\n//     public columnValidations: ImportObject<DexihColumnValidation>[];\n//     public customFunctions: ImportObject<DexihCustomFunction>[];\n//     public remoteAgentHubs: ImportObject<DexihRemoteAgentHub>[];\n//     public datalinkTests: ImportObject<DexihDatalinkTest>[];\n//     public views: ImportObject<DexihView>[];\n//     public apis: ImportObject<DexihApi>[];\n//     public warnings: string[] = [];\n//     public dashboards: ImportObject<DexihDashboard>[];\n// }\n\n// export class ImportObject<T> {\n//     public item: T;\n//     public importAction: eImportAction;\n// }\n\n// export enum eRunStatus {\n//     Initialised = <any>'Initialised',\n//     Scheduled = <any>'Scheduled',\n//     Started = <any>'Started',\n//     Running = <any>'Running',\n//     RunningErrors = <any>'RunningErrors',\n//     Finished = <any>'Finished',\n//     FinishedErrors = <any>'FinishedErrors',\n//     Abended = <any>'Abended',\n//     Cancelled = <any>'Cancelled',\n//     NotRunning = <any>'NotRunning',\n//     Passed = <any>'Passed',\n//     Failed= <any>'Failed'\n// }\n\nexport const runStatus = [\n    {key: eRunStatus.Initialised, name: 'Initialized'},\n    {key: eRunStatus.Scheduled, name: 'Scheduled'},\n    {key: eRunStatus.Started, name: 'Started'},\n    {key: eRunStatus.Running, name: 'Running'},\n    {key: eRunStatus.RunningErrors, name: 'Running(errors)'},\n    {key: eRunStatus.Finished, name: 'Finished'},\n    {key: eRunStatus.FinishedErrors, name: 'Finished(errors)'},\n    {key: eRunStatus.Abended, name: 'Abended'},\n    {key: eRunStatus.Cancelled, name: 'Cancelled'},\n    {key: eRunStatus.NotRunning, name: 'Not Running'},\n    {key: eRunStatus.Passed, name: 'Test Passed'},\n    {key: eRunStatus.Failed, name: 'Test Failed'},\n];\n\n\n// export enum eTriggerMethod {\n//     NotTriggered = <any>'NotTriggered',\n//     Manual = <any>'Manual',\n//     Schedule = <any>'Schedule',\n//     FileWatcher = <any>'FileWatcher',\n//     External = <any>'External',\n//     Datajob = <any>'Datajob',\n// }\n\n// // Summary:\n// //     Specifies the day of the week.\n// export enum eDayOfWeek {\n//     Sunday = <any>'Sunday',\n//     Monday = <any>'Monday',\n//     Tuesday  = <any>'Tuesday',\n//     Wednesday = <any>'Wednesday',\n//     Thursday  = <any>'Thursday',\n//     Friday = <any>'Friday',\n//     Saturday  = <any>'Saturday'\n// }\n\n// export enum eFlatFilePath {\n//     Incoming = <any>'incoming',\n//     Processed = <any>'processed',\n//     Rejected = <any>'rejected',\n//     Outgoing = <any>'outgoing',\n//     None = <any>'none',\n// }\n\n// export enum eFormatType {\n//     Xml = <any>'Xml',\n//     Json = <any>'Json',\n//     Text = <any>'Text',\n// }\n\nexport const formatTypes  = [\n    {key: eTypeCode.Xml, name: 'Xml'},\n    {key: eTypeCode.Json, name: 'Json'},\n    {key: eTypeCode.Text, name: 'Text'},\n];\n\n// export enum eImportAction {\n//     Replace = <any>'Replace',\n//     New = <any>'New',\n//     Leave = <any>'Leave',\n//     Skip = <any>'Skip',\n//     Delete =  <any>'Delete'\n// }\n\nexport const importActions  = [\n    {key: eImportAction.Replace, name: 'Replace existing'},\n    {key: eImportAction.New, name: 'Create a new version'},\n    {key: eImportAction.Leave, name: 'Leave existing version'},\n    {key: eImportAction.Skip, name: 'Skip item(s)'},\n];\n\n// export class InputColumn {\n//     public datalinkKey = 0;\n//     public datalinkName: string = null;\n//     public name: string = null;\n//     public logicalName: string = null;\n//     public dataType: eTypeCode;\n//     public value: string = null;\n//     public rank = 0;\n\n//     constructor() {\n//         this.dataType = eTypeCode.String;\n//     }\n// }\n\n// // mapping status enum.  Note, order is important.\nexport enum eMappingStatus {\n    MappedToNothing, // indicates a column has been mapped but is not in the target.\n    Mapped, // indicates a column has been mapped from source-target\n    PassThroughToNothing, // indicates a column has been passedThrough but not in the target.\n    PassThroughMap, // indicates a column has been default mapped as part of a passThrough setting.\n    MappedToVirtual, // indicates virtual table target.\n    PassThroughToVirtual,\n    AutoGenerate, // indicates a target column is autoGenerating and does not require a map.\n    Joined, // used in a join\n    Sorted,\n    NotMapped, // indicates a column in the target has not been mapped, and will be defaulted.\n    Error,\n}\n\nexport interface MappingStatusInfo {\n    key: eMappingStatus;\n    name: string;\n    statusClass: string;\n}\n\nexport const lineageMappingStatuses: MappingStatusInfo[] = [\n    // tslint:disable-next-line:max-line-length\n    {key: eMappingStatus.Mapped, name: 'From Mapped', statusClass: 'fa fa-arrow-circle-left text-success'},\n    {key: eMappingStatus.PassThroughToNothing, name: 'From Pass-through to Nothing', statusClass: 'fa fa-arrow-circle-left text-warning'},\n    {key: eMappingStatus.PassThroughMap, name: 'From Pass-through', statusClass: 'fa fa-arrow-circle-o-left text-success'},\n    {key: eMappingStatus.MappedToVirtual, name: 'From Virtual', statusClass: 'fa fa-square text-success'},\n    {key: eMappingStatus.PassThroughToVirtual, name: 'Passed-through to Virtual', statusClass: 'fa fa-square-o text-success'},\n    {key: eMappingStatus.AutoGenerate, name: 'Auto Generated', statusClass: 'fa fa-circle text-success'},\n    {key: eMappingStatus.Joined, name: 'Joined', statusClass: 'fa fa-code-fork text-success'},\n    {key: eMappingStatus.Sorted, name: 'Sorted', statusClass: 'fa fa-sort-alpha-asc text-success'},\n    {key: eMappingStatus.MappedToNothing, name: 'Mapped to Nothing', statusClass: 'fa fa-check-square text-warning'},\n    {key: eMappingStatus.NotMapped, name: 'Not mapped', statusClass: 'fa fa-times-circle text-warning'},\n    {key: eMappingStatus.Error, name: 'Error', statusClass: 'fa fa-exclamation-triangle text-danger'},\n];\n\nexport const impactMappingStatuses: MappingStatusInfo[] = [\n    // tslint:disable-next-line:max-line-length\n    {key: eMappingStatus.Mapped, name: 'Mapped to Target', statusClass: 'fa fa-arrow-circle-right text-success'},\n    {key: eMappingStatus.PassThroughToNothing, name: 'Passed-through to Nothing', statusClass: 'fa fa-arrow-circle-right text-warning'},\n    {key: eMappingStatus.PassThroughMap, name: 'Passed-through to Target', statusClass: 'fa fa-arrow-circle-o-right text-success'},\n    {key: eMappingStatus.MappedToVirtual, name: 'Mapped to Virtual', statusClass: 'fa fa-square text-success'},\n    {key: eMappingStatus.PassThroughToVirtual, name: 'Passed-through to Virtual', statusClass: 'fa fa-square-o text-success'},\n    {key: eMappingStatus.AutoGenerate, name: 'Auto Generated', statusClass: 'fa fa-circle text-success'},\n    {key: eMappingStatus.Joined, name: 'Joined', statusClass: 'fa fa-code-fork text-success'},\n    {key: eMappingStatus.Sorted, name: 'Sorted', statusClass: 'fa fa-sort-alpha-asc text-success'},\n    {key: eMappingStatus.MappedToNothing, name: 'Mapped to Nothing', statusClass: 'fa fa-arrow-circle-o-right text-warning'},\n    {key: eMappingStatus.NotMapped, name: 'Not mapped', statusClass: 'fa fa-times-circle text-warning'},\n    {key: eMappingStatus.Error, name: 'Error', statusClass: 'fa fa-exclamation-triangle text-danger'},\n];\n\nexport class ConnectionTables extends DexihConnection {\n    public dexihTables: DexihTable[];\n}\n\n// export class TransformProperties {\n//     public name: string;\n//     public transformName: string;\n//     public transformType: eTransformType;\n//     public selectQuery: SelectQuery;\n//     public properties: {[key: string]: number};\n//     public primaryProperties: TransformProperties;\n//     public referenceProperties: TransformProperties;\n//     public rows: number;\n//     public seconds: number;\n// }\n\nexport class PreviewResults {\n    public name: string;\n    public columns: Array<any>;\n    public viewConfig: ViewConfig;\n    public data: Array<any>;\n    public transformProperties: TransformProperties;\n    public status: Message;\n}\n\nexport class FlatFilesReady {\n    public hubKey: number;\n    public reference: string;\n    public tables: DexihTable[];\n}\n\nexport class DashboardUrl {\n    public dashboardItemKey: number;\n    public downloadUrl: string;\n}\n\n// export class InputParameter {\n//     public name: string = null;\n//     public value = null;\n// }\n\n// export class LOVItem {\n//     public key;\n//     public name: string;\n//     public description: string;\n// }\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HubService } from './hub.service';\nimport { Routing } from './hub.routing';\nimport { SharedModule } from '../shared/shared.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HubSharedModule} from './hub.shared.module';\n\nimport { HubComponent } from './hub.component';\nimport { SummaryComponent } from './summary';\nimport { ItemEditGuard } from './item-edit.guard';\n\n@NgModule({\n    imports: [\n        SharedModule,\n        Routing,\n        ReactiveFormsModule,\n        HubSharedModule,\n    ],\n    declarations: [\n        HubComponent,\n        SummaryComponent,\n    ],\n    providers: [ ItemEditGuard ],\n    exports: [ ]\n})\nexport class HubModule {\n\n    static forRoot(): ModuleWithProviders<HubModule> {\n        return {\n            ngModule: HubModule,\n            providers: [HubService, ItemEditGuard]\n        };\n    }\n}\n","import { UpdateQuery, eAggregate, eCompare, eDownloadFormat } from '../shared/shared.models';\n\nexport class UpdateQueries {\n    public baseUpdateQuery: UpdateQuery;\n    public data: Array<any>;\n}\n\n// export class SelectQuery {\n//     public columns: Array<SelectColumn>;\n//     public table: string;\n//     public filters: Array<Filter>;\n//     public sorts: Array<Sort>;\n//     public groups: Array<TableColumn>;\n//     public rows: number;\n\n//     public fileName: string;\n//     public path: eFlatFilePath;\n\n//     constructor() {\n//         this.columns = new Array<SelectColumn>();\n//         this.filters = new Array<Filter>();\n//         this.sorts = new Array<Sort>();\n//         this.groups = new Array<TableColumn>();\n//         this.rows = 100; // -1 means show all rows.\n//     }\n// }\n\n// export class SelectColumn {\n//     public column: TableColumn;\n//     public aggregate: eAggregate;\n// }\n\n// export class UpdateQuery {\n//     public updateColumns: Array<QueryColumn>;\n//     public table: string;\n//     public filters: Array<Filter>;\n// }\n\n// export class DeleteQuery {\n//     public table: string;\n//     public filters: Array<Filter>;\n// }\n\n// export class InsertQuery {\n//     public table: string;\n//     public insertColumns: Array<QueryColumn>;\n// }\n\n// export class QueryColumn {\n//     public column: TableColumn;\n//     public Value: any;\n// }\n\n// export class Filter {\n//     public column1: TableColumn;\n//     public value1: any;\n//     public compareDataType: eTypeCode;\n\n//     public column2: TableColumn;\n//     public value2: any;\n\n//     public operator: eCompare;\n//     public andOr: eAndOr;\n// }\n\n// export class Sort {\n//     public column: TableColumn;\n//     public direction: eSortDirection;\n\n//     get details(): string {\n//         return this.column + ' ' + this.direction;\n//     };\n// }\n\n// export class DownloadObject {\n//     public objectType: eSourceType;\n//     public objectKey: number;\n//     public query: SelectQuery;\n//     public inputColumns: InputColumn[];\n//     public parameters: DexihInputParameter[];\n// }\n\n// export enum eDownloadFormat {\n//     Csv = <any>'Csv',\n//     Json = <any>'Json',\n//     JsonCompact = <any>'JsonCompact'\n// }\n\nexport const downloadFormats = [\n    {key: eDownloadFormat.Csv, name: 'Comma Separated File'},\n    {key: eDownloadFormat.Json, name: 'Json File'},\n    {key: eDownloadFormat.JsonCompact, name: 'Json File (separate headers section)'},\n];\n\n// export enum eAggregate {\n//     Sum = <any>'Sum',\n//     Average = <any>'Average',\n//     Min = <any>'Min',\n//     Max = <any>'Max',\n//     Count = <any>'Count',\n//     First = <any>'First',\n//     Last = <any>'Last'\n// }\n\n// export const aggregates = [\n//     {key: eAggregate.Sum, name: 'Sum'},\n//     {key: eAggregate.Average, name: 'Average'},\n//     {key: eAggregate.Min, name: 'Minimum'},\n//     {key: eAggregate.Max, name: 'Maximum'},\n//     {key: eAggregate.Count, name: 'Count'},\n//     {key: eAggregate.First, name: 'Last'},\n//     {key: eAggregate.Last, name: 'First'},\n// ];\n\n// export enum eCompare {\n//     IsEqual = <any>'IsEqual',\n//     GreaterThan = <any>'GreaterThan',\n//     GreaterThanEqual = <any>'GreaterThanEqual',\n//     LessThan = <any>'LessThan',\n//     LessThanEqual = <any>'LessThanEqual',\n//     NotEqual = <any>'NotEqual',\n//     IsIn = <any>'IsIn',\n//     IsNull = <any>'IsNull',\n//     IsNotNull = <any>'IsNotNull',\n//     Like = <any>'Like'\n// }\n\nexport const compare = [\n    {key: eCompare.IsEqual, name: '=', showFilter: false},\n    {key: eCompare.GreaterThan, name: '>', showFilter: false},\n    {key: eCompare.GreaterThanEqual, name: '>=', showFilter: false},\n    {key: eCompare.LessThan, name: '<', showFilter: false},\n    {key: eCompare.LessThanEqual, name: '<=', showFilter: false},\n    {key: eCompare.NotEqual, name: '!=', showFilter: false},\n    {key: eCompare.IsIn, name: 'IN', showFilter: false},\n    {key: eCompare.IsNotIn, name: 'NOT IN', showFilter: false},\n    {key: eCompare.IsNull, name: 'Is Null', showFilter: true},\n    {key: eCompare.IsNotNull, name: 'Is Not Null', showFilter: true},\n    {key: eCompare.Like, name: 'like', showFilter: false},\n];\n\n// export enum eAndOr {\n//     And = <any>'And',\n//     Or = <any>'Or'\n// }\n\n\n// export enum eSortDirection {\n//     Ascending = <any>'Ascending',\n//     Descending = <any>'Descending',\n// }\n\n\n","import { eTypeCode, eFunctionType, eTransformType, ApiData, RemoteLibraries, ManagedTask } from '../shared/shared.models';\n\n\nexport class RemoteAgentStatus {\n    public previousDatajobs: Array<ManagedTask>;\n    public previousDatalinks: Array<ManagedTask>;\n    public previousDatalinkTests: Array<ManagedTask>;\n    public activeDatajobs: Array<ManagedTask>;\n    public activeDatalinks: Array<ManagedTask>;\n    public activeDatalinkTests: Array<ManagedTask>;\n    public remoteLibraries: RemoteLibraries;\n    public activeApis: Array<ApiData>;\n\n    constructor() {\n        this.activeDatajobs = [];\n        this.activeDatalinks = [];\n        this.activeApis = [];\n    }\n}\n\n// export class RemoteLibraries {\n//     public functions: FunctionReference[];\n//     public connections: ConnectionReference[];\n//     public transforms: TransformReference[];\n\n//     public GetConnectionReference(connection: DexihConnection): ConnectionReference {\n//         if (connection && this.connections) {\n//             let ref = this.connections.find(c =>\n//                 c.connectionAssemblyName === connection.connectionAssemblyName\n//                 && c.connectionClassName === connection.connectionClassName);\n\n//             return ref;\n//         } else {\n//             return null;\n//         }\n//     }\n\n//     public GetTransformReference(transform: DexihDatalinkTransform): TransformReference {\n//         if (transform && this.transforms) {\n//             let ref = this.transforms.find(c =>\n//                 c.transformAssemblyName === transform.transformAssemblyName\n//                 && c.transformClassName === transform.transformClassName);\n\n//             return ref;\n//         } else {\n//             return null;\n//         }\n//     }\n\n//     // transforms that can be added/removed within a datalink\n//     public GetUserConfigTransformReference(): TransformReference[] {\n//         if (!this.transforms) {\n//             return [];\n//         }\n//         let userConfig = transformTypes.filter(c => c.allowUserConfig);\n//         return this.transforms.filter(c => userConfig.findIndex(u => u.key === c.transformType ) >= 0 );\n//     }\n\n//     public GetFunctionReference(item: DexihDatalinkTransformItem): FunctionReference {\n//         if (this.functions && item && item.functionClassName) {\n//             let ref = this.functions.find(c =>\n//                 c.functionAssemblyName === item.functionAssemblyName\n//                 && c.functionClassName === item.functionClassName);\n\n//             return ref;\n//         } else {\n//             return null;\n//         }\n//     }\n// }\n\n// export enum eFunctionType {\n//     Map = <any>'Map',\n//     Condition = <any>'Condition',\n//     Aggregate = <any>'Aggregate',\n//     Series = <any>'Series',\n//     Rows = <any>'Rows',\n//     Validate = <any>'Validate',\n//     Profile = <any>'Profile',\n// }\n\nexport const functionTypes = [\n    {key: eFunctionType.Condition, name: 'Condition Function'},\n    {key: eFunctionType.Map, name: 'Mapping Function'},\n    {key: eFunctionType.Aggregate, name: 'Aggregate Function'},\n    {key: eFunctionType.Rows, name: 'Row Generating Function'},\n    {key: eFunctionType.Profile, name: 'Profile Function'},\n    {key: eFunctionType.Validate, name: 'Validation Function'},\n]\n\n// export enum eGenericType {\n//     None = <any>'None',\n//     Numeric = <any>'Numeric',\n//     All = <any>'All',\n//     String = <any>'String',\n// }\n\n\n// export class FunctionReference {\n//     public functionType: eFunctionType;\n//     public category: string;\n//     public name: string;\n//     public description: string;\n\n\n//     public functionClassName: string;\n//     public functionMethodName: string;\n//     public functionAssemblyName: string;\n//     public resultMethodName: string;\n//     public resetMethodName: string;\n//     public importMethodName: string;\n\n//     public isGeneric: boolean;\n//     public genericTypeDefault: eTypeCode;\n//     public genericType: eGenericType;\n\n//     /// <summary>\n//     /// Used for profiling functions, indicates the property use to switch detailed results on/off.\n//     /// </summary>\n//     public detailedFlagName: string;\n\n//     /// <summary>\n//     /// Used to map a filter equivalent operator\n//     /// </summary>\n//     public compare: eCompare;\n\n//     public IsStandardFunction: boolean;\n\n//     public returnParameters: FunctionParameter[];\n//     public returnRank: number;\n//     public inputParameters: FunctionParameter[];\n//     public outputParameters: FunctionParameter[];\n\n//     public resultReturnParameters: FunctionParameter[];\n//     public resultInputParameters: FunctionParameter[];\n//     public resultOutputParameters: FunctionParameter[];\n// }\n\n\n// export class FunctionParameter {\n//     public name: string;\n//     public parameterName: string;\n//     public description: string;\n//     public isGeneric: boolean;\n//     public dataType: eTypeCode;\n//     public rank = 0;\n//     public isIndex: boolean;\n//     public linkedName: string;\n//     public linkedDescription: string;\n//     public isLabel: boolean;\n//     public listOfValues: string[];\n//     public defaultValue: any;\n// }\n\n// export enum eConnectionCategory {\n//     SqlDatabase = <any>'SqlDatabase',\n//     NoSqlDatabase = <any>'NoSqlDatabase',\n//     DatabaseFile = <any>'DatabaseFile',\n//     File = <any>'File',\n//     WebService = <any>'WebService',\n//     Hub = <any>'Hub',\n// }\n\n\n// export class ConnectionReference {\n//     public connectionCategory: eConnectionCategory;\n//     public name: string;\n//     public description: string;\n//     public databaseDescription: string;\n//     public serverDescription: string;\n//     public allowsConnectionString: boolean;\n//     public allowsSql: boolean;\n//     public allowsFlatFiles: boolean;\n//     public allowsManagedConnection: boolean;\n//     public allowsSourceConnection: boolean;\n//     public allowsTargetConnection: boolean;\n//     public allowsUserPassword: boolean;\n//     public allowsWindowsAuth: boolean;\n//     public requiresDatabase: boolean;\n//     public connectionClassName: string;\n//     public connectionAssemblyName: string;\n// }\n\n// export enum eTransformType {\n//     Mapping = <any>'Mapping',\n//     Filter = <any>'Filter',\n//     Sort = <any>'Sort',\n//     Group = <any>'Group',\n//     Aggregate = <any>'Aggregate',\n//     Series = <any>'Series',\n//     Join = <any>'Join',\n//     Rows = <any>'Rows',\n//     Lookup = <any>'Lookup',\n//     Validation = <any>'Validation',\n//     Delta = <any>'Delta',\n//     Concatenate = <any>'Concatenate',\n//     Profile = <any>'Profile'\n// }\n\nexport const transformTypes  = [\n    {key: eTransformType.Mapping, icon: 'fa fa-random', allowUserConfig: true},\n    {key: eTransformType.Filter, icon: 'fa fa-filter', allowUserConfig: true},\n    {key: eTransformType.Sort, icon: 'fa fa-sort-alpha-asc', allowUserConfig: true},\n    {key: eTransformType.Group, icon: 'fa fa-cubes', allowUserConfig: true},\n    {key: eTransformType.Aggregate, icon: 'fa fa-calculator', allowUserConfig: true},\n    {key: eTransformType.Series, icon: 'fa fa-line-chart', allowUserConfig: true},\n    {key: eTransformType.Join, icon: 'fa fa-link', allowUserConfig: true},\n    {key: eTransformType.Rows, icon: 'fa fa-bars', allowUserConfig: true},\n    {key: eTransformType.Lookup, icon: 'fa fa-binoculars', allowUserConfig: true},\n    {key: eTransformType.Validation, icon: 'fa fa-check-square-o', allowUserConfig: false},\n    {key: eTransformType.Delta, icon: 'fa fa-exchange', allowUserConfig: false},\n    {key: eTransformType.Concatenate, icon: 'fa fa-angle-double-down', allowUserConfig: true},\n    {key: eTransformType.Profile, icon: 'fa fa-angle-double-down', allowUserConfig: false},\n];\n\n\nexport class TransformReference {\n    public transformType: eTransformType;\n    public transformClassName: string;\n    public transformAssemblyName: string;\n\n    public name: string;\n    public description: string;\n}\n\n// export enum eTypeCode {\n//     Binary = <any>'Binary',\n//     Byte = <any>'Byte',\n//     CharArray = <any>'CharArray',\n//     SByte = <any>'SByte',\n//     UInt16 = <any>'UInt16',\n//     UInt32 = <any>'UInt32',\n//     UInt64 = <any>'UInt64',\n//     Int16 = <any>'Int16',\n//     Int32 = <any>'Int32',\n//     Int64 = <any>'Int64',\n//     Decimal = <any>'Decimal',\n//     Double = <any>'Double',\n//     Single = <any>'Single',\n//     String = <any>'String',\n//     Text = <any>'Text',\n//     Boolean = <any>'Boolean',\n//     DateTime = <any>'DateTime',\n//     Time = <any>'Time',\n//     Guid = <any>'Guid',\n//     Json = <any>'Json',\n//     Xml = <any>'Xml',\n//     Node = <any>'Node',\n//     Geometry = <any>'Geometry'\n// }\n\nexport const TypeCodes = [\n    {key: eTypeCode.String, name: 'String', isNumeric: false, isString: true},\n    {key: eTypeCode.CharArray, name: 'Char[fixed length string]', isNumeric: false, isString: true},\n    {key: eTypeCode.Text, name: 'Text', isNumeric: false, isString: true},\n    {key: eTypeCode.Binary, name: 'Binary', isNumeric: false, isString: false},\n    {key: eTypeCode.Boolean, name: 'Boolean', isNumeric: false, isString: false},\n    {key: eTypeCode.DateTime, name: 'Date & Time', isNumeric: false, isString: false},\n    {key: eTypeCode.Date, name: 'Date', isNumeric: false, isString: false},\n    {key: eTypeCode.Decimal, name: 'Decimal', isNumeric: true, isString: false},\n    {key: eTypeCode.Double, name: 'Double', isNumeric: true, isString: false},\n    {key: eTypeCode.Int16, name: 'Short Integer', isNumeric: true, isString: false},\n    {key: eTypeCode.Int32, name: 'Integer', isNumeric: true, isString: false},\n    {key: eTypeCode.Int64, name: 'Long Integer', isNumeric: true, isString: false},\n    {key: eTypeCode.UInt16, name: 'Unsigned Short Integer', isNumeric: true, isString: false},\n    {key: eTypeCode.UInt32, name: 'Unsigned Integer', isNumeric: true, isString: false},\n    {key: eTypeCode.UInt64, name: 'Unsigned Long Integer', isNumeric: true, isString: false},\n    {key: eTypeCode.Byte, name: 'Byte', isNumeric: false, isString: false},\n    {key: eTypeCode.SByte, name: 'Signed Byte', isNumeric: false, isString: false},\n    {key: eTypeCode.Time, name: 'Time', isNumeric: false, isString: false},\n    {key: eTypeCode.Guid, name: 'Guid', isNumeric: false, isString: false},\n    {key: eTypeCode.Xml, name: 'Xml', isNumeric: false, isString: false},\n    {key: eTypeCode.Json, name: 'Json', isNumeric: false, isString: false},\n    {key: eTypeCode.Geometry, name: 'Geometry (spacial data)', isNumeric: false, isString: false},\n    {key: eTypeCode.Node, name: 'Node (contains child nodes)', isNumeric: false, isString: false},\n\n];\n\nexport enum eBasicType {\n    Any,\n    String,\n    Numeric,\n    Date,\n    Time,\n    Boolean,\n    Binary\n}\n\n// Functions to simplify display of typeCodes.\nexport class TypeFunctions {\n    constructor(\n        public dataType: eTypeCode,\n        public maxLength: number,\n        public precision: number,\n        public scale: number ) {\n\n    }\n\n    // converts a typeCode to basicType.\n    public getBasicTypeCode(): eBasicType {\n        switch (this.dataType) {\n            case eTypeCode.Byte:\n            case eTypeCode.SByte:\n            case eTypeCode.UInt16:\n            case eTypeCode.UInt32:\n            case eTypeCode.UInt64:\n            case eTypeCode.Int16:\n            case eTypeCode.Int32:\n            case eTypeCode.Int64:\n            case eTypeCode.Decimal:\n            case eTypeCode.Double:\n            case eTypeCode.Single: return eBasicType.Numeric;\n            case eTypeCode.Guid:\n            case eTypeCode.Text:\n            case eTypeCode.CharArray:\n            case eTypeCode.String: return eBasicType.String;\n            case eTypeCode.Boolean: return eBasicType.Boolean;\n            case eTypeCode.DateTime: return eBasicType.Date;\n            case eTypeCode.Date: return eBasicType.Date;\n            case eTypeCode.Time: return eBasicType.Time;\n            case eTypeCode.Binary: return eBasicType.Binary;\n            default: return eBasicType.Any;\n        }\n    }\n\n    // tests if column is string type.\n    public columnIsString(): boolean {\n        return this.dataType === eTypeCode.String || this.dataType === eTypeCode.CharArray;\n    }\n\n    // tests if column is a decimal type.\n    public columnIsDecimal(): boolean {\n        return this.dataType === eTypeCode.Double || this.dataType === eTypeCode.Decimal || this.dataType === eTypeCode.Single;\n    }\n\n    // formats the type with bracket indicating precision (e.g. string(10) or decimal(5,2) )\n    public columnType(): string {\n        let type: string = eTypeCode[this.dataType];\n        if (this.columnIsString() && this.maxLength > 0) {\n            type = type + '(' + this.maxLength + ')';\n        }\n        if (this.columnIsDecimal()) {\n            type = type + '(' + this.precision + ', ' + this.scale + ')';\n        }\n\n        return type;\n    }\n}\n","import { Routes, Route, RouterModule } from '@angular/router';\nimport { HubComponent } from './hub.component';\nimport { SummaryComponent } from './summary';\nimport { SearchComponent} from './search';\nimport { ItemEditGuard} from './item-edit.guard';\n\n\nexport const routes = [\n{\n    path: '',\n    component: HubComponent,\n    children: [\n        { path: '', redirectTo: 'summary'},\n        { path: 'summary', data: { pageTitle: 'Summary' }, children: (<Routes>[\n            { path: '', pathMatch: 'full', component: SummaryComponent, data: { pageTitle: 'Summary' } },\n            { path: '', loadChildren: () => import('./hub.base.module').then(m => m.HubBaseModule) }\n         ])\n        }\n    ]}\n];\n\nexport const Routing = RouterModule.forChild(routes);\n","import { Injectable, OnDestroy, OnInit } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription, combineLatest, Subject} from 'rxjs';\nimport { Message, PromiseWithCancel, CancelToken } from '../+auth/auth.models';\nimport { AuthService } from '../+auth/auth.service';\nimport { eLogLevel, LogFactory } from '../../logging';\nimport {\n    FileProperties,\n    HubCache,\n    HubCacheChange,\n    eCacheStatus,\n    PreviewResults,\n    FlatFilesReady,\n    DexihInputParameter\n} from './hub.models';\nimport { RemoteAgentStatus, transformTypes } from './hub.remote.models';\nimport { DexihDatajob, DexihTable, DexihHub, DexihRemoteAgentHub, DexihConnection, DexihDatalink, InputColumn,\n    InputParameter, DexihView, DexihDashboard, DexihApi, SelectQuery, DexihColumnValidation, DexihCustomFunction,\n    DexihDatalinkTransformItem, DexihFileFormat, DexihHubVariable, DexihDatalinkTest, DexihDatalinkStep, TransformWriterResult,\n    TransformProperties, Import, eImportAction, eRunStatus, eDatalinkType, eDeltaType, eConnectionPurpose, eFlatFilePath,\n    ApiData, DownloadObject, eDownloadFormat, DexihActiveAgent, ImportObject, ePermission, eTypeCode, eDataObjectType,\n    eSharedObjectType, RemoteLibraries, ConnectionReference, TransformReference,\n    FunctionReference, eFunctionType, ClientMessage, eClientCommand, HubUser, DexihListOfValues, ManagedTask,\n    eLOVObjectType, ListOfValuesItem, DexihTag, DexihTagObject, eUpdateStrategy } from '../shared/shared.models';\nimport { filter, take, first } from 'rxjs/operators';\n\n@Injectable()\nexport class HubService implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n    private _webSocketSubscription: Subscription;\n\n    private _hubKey = 0;\n    private _hubCache = new BehaviorSubject<HubCache>(new HubCache(eCacheStatus.NoHub, null));\n    private _hubMessages = new BehaviorSubject<Array<Message>>([]);\n\n    // updates whenever the local hub cache changes\n    private _hubCacheChange = new Subject<HubCacheChange>();\n\n    // updates whenever a new transformWriter result is updated\n    private _transformWriterResultChange = new Subject<TransformWriterResult>();\n\n    // updates whenever an api is started/stopped\n    private _apiStatusChange = new Subject<DexihApi>();\n\n    private _remoteLibraries = new BehaviorSubject<RemoteLibraries>(null);\n\n    // updates whenever a bulk file upload is completed.\n    private _flatFiles = new Subject<FlatFilesReady>();\n\n    // private _activeAgents: DexihActiveAgent[];\n    private _remoteAgent = new BehaviorSubject<DexihActiveAgent>(null);\n    private isResettingRemoteAgent = false;\n\n    public newDatajob: DexihDatajob;\n    public newTable: DexihTable;\n\n    // used to track if the hub is currently refreshing to avoid multiple calls.\n    private _refreshHubRunning = false;\n\n    private logger = new LogFactory('hub.service');\n\n    constructor(\n        private authService: AuthService\n    ) {\n        this.logger.LogC(() => ` Initialized.`, eLogLevel.Information);\n\n        // listen to any message coming from the server.\n        this._webSocketSubscription = this.authService.getWebSocketObservable().subscribe(message => {\n            if (message) {\n                this.processWebSocketMessage(message);\n            }\n        });\n\n\n        this._subscription = combineLatest(\n            authService.getGlobalCacheObservable(),\n            this.authService.getHubsObservable(),\n            this.getHubCacheObservable(),\n            this.authService.getRemoteAgentsObservable()\n        ).subscribe(result => {\n            let globalCache = result[0];\n            let hubs = result[1];\n            let hubCache = result[2];\n\n            if (hubCache && hubCache.hub && globalCache) {\n\n                // if remote libraries are not loaded (from remoteAgent) then use the default.\n                if (!this._remoteLibraries.value) {\n                    let remoteLibraries = new RemoteLibraries();\n                    if (globalCache && globalCache.defaultRemoteLibraries) {\n                        remoteLibraries.connections = globalCache.defaultRemoteLibraries.connections;\n                        remoteLibraries.transforms = globalCache.defaultRemoteLibraries.transforms;\n                        remoteLibraries.functions = globalCache.defaultRemoteLibraries.functions;\n                        this._remoteLibraries.next(remoteLibraries);\n                    }\n                }\n\n                // // if the hub is not available, reset.\n                // if (hubs) {\n                //     if (hubCache && hubCache.hub) {\n                //         let hubFound = hubs.find(h => h.hubKey === hubCache.hub.hubKey);\n                //         if (!hubFound) {\n                //             this.resetHubCache();\n                //         }\n                //     }\n                // } else {\n                //     this.resetHubCache();\n                // }\n\n                this.resetRemoteAgent(hubCache);\n            }\n        });\n    }\n\n    ngOnInit() {\n\n    }\n\n    ngOnDestroy() {\n        this.logger.LogC(() => `OnDestroy.`, eLogLevel.Debug);\n\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._webSocketSubscription) { this._webSocketSubscription.unsubscribe(); }\n        if (this._remoteAgent) { this._remoteAgent.unsubscribe(); }\n        if (this._hubCache) { this._hubCache.unsubscribe(); }\n    }\n\n    public createHub(key: number, name: string): DexihHub {\n        let hub = new DexihHub();\n        hub.hubKey = key;\n        hub.name = name;\n\n        return hub;\n    }\n\n    public isHubCacheLoaded(): boolean {\n        return this.getHubCache().status === eCacheStatus.Loaded;\n    }\n\n    getHubUrl(): string {\n        return '/hub/' + this._hubKey;\n    }\n\n    // gets the hub cache\n    getHubCacheObservable(filterLoaded = false): Observable<HubCache> {\n        let observable = this._hubCache.asObservable();\n\n        if (filterLoaded) {\n            observable = observable.pipe(filter(c => c !== null && c.isLoaded() === true) );\n        }\n\n        return observable;\n    }\n\n    getHubCachePromise(): Promise<HubCache> {\n        return this._hubCache.asObservable().pipe(first()).toPromise();\n    }\n\n    // gets the hub cache\n    getHubCache(): HubCache {\n        return this._hubCache.value;\n    }\n\n    // hubCacheChange detects specific changes to objects and is used to monitor object changes from other sessions when editing forms.\n    getHubCacheChangeObservable(): Observable<HubCacheChange> {\n        return this._hubCacheChange.asObservable();\n    }\n\n    getTransformWriterResultChangeObservable(): Observable<TransformWriterResult> {\n        return this._transformWriterResultChange.asObservable();\n    }\n\n    geApiStatusChangeObservable(): Observable<DexihApi> {\n        return this._apiStatusChange.asObservable();\n    }\n\n    getFlatFilesObservable(): Observable<FlatFilesReady> {\n        return this._flatFiles.asObservable();\n    }\n\n    getHubMessagesObservable(): Observable<Array<Message>> {\n        return this._hubMessages.asObservable();\n    }\n\n    getHubMessages(): Array<Message> {\n        return this._hubMessages.value;\n    }\n\n    addHubMessage(message: any, log = false, context = '') {\n        let converted = message;\n        if (message.stack) {\n            converted = new Message(false, 'Client Error: ' + message.message, message.stack, '');\n        } else {\n            converted = new Message(message.success, context + ': ' + message.message, message.exceptionDetails, message.value);\n        }\n        this.authService.addUpdateNotification(converted, log);\n        let messages = this.getHubMessages();\n        messages.push(converted);\n        this._hubMessages.next(messages);\n    }\n\n    addHubErrorMessage(message: string) {\n        let newMessage = new Message(false, message, null, null);\n        this.addHubMessage(newMessage);\n    }\n\n    addHubClientErrorMessage(error: Error, context: string) {\n        let message = context + '.  The following error occurred on the client: ' + error.message;\n        let newMessage = new Message(false, message, error.stack, null);\n        this.addHubMessage(newMessage, true);\n\n    }\n\n    addHubSuccessMessage(message: string) {\n        let newMessage = new Message(true, message, null, null);\n        this.addHubMessage(newMessage);\n    }\n\n\n    // update the hubKey and refresh the cache.\n    async updateHub(hubKey: number, name: string ): Promise<void> {\n        this.logger.LogC(() => `updateHub, hubKey: ${hubKey}, name: ${name}.`, eLogLevel.Debug);\n\n        this._hubMessages.next([]);\n\n        if (hubKey === null || hubKey === 0) {\n            let hubCache = new HubCache(eCacheStatus.NoHub, this.createHub(0, name));\n            this._hubKey = 0;\n            this._hubCache.next(hubCache);\n        } else if (!this._hubCache.getValue().hub || this._hubCache.getValue().hub.hubKey !== hubKey) {\n            await this.refreshHubCache(hubKey, name);\n        }\n    }\n\n    // refresh the hubCache.\n    async refreshHubCache(hubKey: number, name: string): Promise<void> {\n        if (!this._refreshHubRunning) {\n            this._refreshHubRunning = true;\n\n            this.logger.LogC(() => `refreshHubCache, hubKey: ${hubKey}, name: ${name}.`, eLogLevel.Debug);\n\n            this._hubKey = hubKey;\n            this._hubCache.next(new HubCache(eCacheStatus.Loading, this.createHub(hubKey, name)));\n\n            try {\n                let result = await this.hubPost<{permission: ePermission, hub: DexihHub}>\n                ('/api/Hub/GetHubCache', {}, 'Loading the hub cache...')\n                let hub: DexihHub = result.hub;\n                let permission = result.permission;\n\n                this.logger.LogC(() => `refreshHubCache, hub loaded ${hub.name}.`, eLogLevel.Debug);\n\n                // update the status for datalink and datajobs.  These are use to monitor execution status.\n                hub.dexihDatalinks.forEach(datalink => {\n                    datalink['currentStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                    datalink['previousStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                });\n\n                hub.dexihDatajobs.forEach(datajob => {\n                    datajob['currentStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                    datajob['previousStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                });\n\n                hub.dexihDatalinkTests.forEach(datalinkTest => {\n                    datalinkTest['currentStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                    datalinkTest['previousStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                });\n\n                hub.dexihTables.forEach(table => {\n                    table['currentStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                    table['previousStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                });\n\n                hub.dexihApis.forEach(api => {\n                    api['currentStatus'] = new BehaviorSubject<ApiData>(null);\n                });\n\n                let hubCache: HubCache = new HubCache(eCacheStatus.Loaded, hub);\n                hubCache.hubPermission = permission;\n                this.resetRemoteAgent(hubCache);\n                this._hubCache.next(hubCache);\n\n                this._refreshHubRunning = false;\n            } catch(reason) {\n                this.logger.LogC(() => `refreshHubCache, hub load error: ${reason.message}.`, eLogLevel.Error);\n                this._hubCache.next(new HubCache(eCacheStatus.Error, null));\n                this.addHubMessage(reason);\n\n                this._refreshHubRunning = false;\n            }\n        }\n    }\n\n    resetHubCache(): void {\n        this._hubKey = 0;\n        this._hubCache.next(new HubCache(eCacheStatus.NoHub, null));\n    }\n\n    // set current remoteAgent\n    getRemoteAgentObservable(filterActive = false): Observable<DexihActiveAgent> {\n        let observable = this._remoteAgent.asObservable();\n        if (filterActive) {\n            observable = observable.pipe(filter(c => c !== null && c.isRunning) );\n        }\n\n        return observable;\n    }\n\n    getRemoteAgentCurrent(): DexihActiveAgent {\n        return this._remoteAgent.value;\n    }\n\n    getRemoteLibrariesObservable(): Observable<RemoteLibraries> {\n        return this._remoteLibraries.asObservable();\n    }\n\n    getRemoteLibrariesPromise(): Promise<RemoteLibraries> {\n        return this._remoteLibraries.asObservable().pipe(filter(c => c !== null), take(1)).toPromise();\n    }\n\n    // sets the remote agent to the appropriate default agent when a status changes.\n    async resetRemoteAgent(hubCache: HubCache) {\n        if (this.isResettingRemoteAgent) { return; }\n\n        try {\n            if (!hubCache || !hubCache.hub || !hubCache.hub.dexihRemoteAgentHubs) {\n                this.setNoRemoteAgent(hubCache);\n                return;\n            }\n\n            this.isResettingRemoteAgent = true;\n\n            let activeAgent = this._remoteAgent.value;\n\n            let remoteAgents = await this.authService.getRemoteAgentsPromise();\n\n            if (!remoteAgents) {\n                this.setNoRemoteAgent(hubCache);\n                return;\n            }\n\n            // check if currently selected agent is still valid for this hub.\n            if (activeAgent) {\n                if (hubCache.hub.dexihRemoteAgentHubs\n                    .find(c => c.isAuthorized && c.isValid && c.remoteAgentKey === activeAgent.remoteAgentKey)) {\n                    let remoteAgent = remoteAgents.find(c => c.remoteAgentKey === activeAgent.remoteAgentKey);\n                    if (remoteAgent && remoteAgent['activeAgents'] &&\n                        remoteAgent['activeAgents'].find(c => c.instanceId === activeAgent.instanceId)) {\n                        return;\n                    }\n                }\n            }\n\n            let defaultAgents = hubCache.hub.dexihRemoteAgentHubs.filter(c => c.isDefault && c.isAuthorized && c.isValid);\n            for (let i = 0; i < defaultAgents.length; i++) {\n                let remoteAgent = remoteAgents.find(c => c.remoteAgentKey === defaultAgents[i].remoteAgentKey);\n                if (remoteAgent && remoteAgent['activeAgents'] && remoteAgent['activeAgents'].length > 0) {\n                    this._remoteAgent.next(remoteAgent['activeAgents'][0]);\n                    await this.getRemoteAgentStatus(hubCache);\n                    return;\n                }\n            }\n            let otherAgents = hubCache.hub.dexihRemoteAgentHubs.filter(c => !c.isDefault && c.isAuthorized && c.isValid);\n            for (let i = 0; i < otherAgents.length; i++) {\n                let remoteAgent = remoteAgents.find(c => c.remoteAgentKey === otherAgents[i].remoteAgentKey);\n                if (remoteAgent && remoteAgent['activeAgents'] && remoteAgent['activeAgents'].length > 0) {\n                    this._remoteAgent.next(remoteAgent['activeAgents'][0]);\n                    await this.getRemoteAgentStatus(hubCache);\n                    return;\n                }\n            }\n\n            this.setNoRemoteAgent(hubCache);\n        } catch (reason) {\n            this.addHubMessage(reason, true, 'Resetting remote agent' );\n        } finally {\n            this.isResettingRemoteAgent = false;\n        }\n    }\n\n    setCurrentRemoteAgent(activeAgent: DexihActiveAgent) {\n        if (activeAgent) {\n            let remoteAgentHubs = this._hubCache.value.hub.dexihRemoteAgentHubs;\n            let authorized = remoteAgentHubs.findIndex(c => c.remoteAgentKey === activeAgent.remoteAgentKey && c.isAuthorized);\n            if (authorized < 0) {\n                this.addHubErrorMessage('Can not select the remote agent as it is not authorized.')\n            } else {\n                this._remoteAgent.next(activeAgent);\n            }\n        }\n    }\n\n    setNoRemoteAgent(hubCache: HubCache) {\n        this._remoteAgent.next(null);\n        let hub = hubCache.hub;\n\n        if (!hub) { return; }\n\n        hub.dexihApis.forEach(api => {\n            api['currentStatus'].next(null);\n        });\n\n        // merge the datalink/datajob status into the cached objects.\n        hub.dexihDatalinks.forEach(datalink => {\n            datalink['currentStatus'].next(null);\n            datalink['previousStatus'].next(null);\n        });\n\n        hub.dexihTables.forEach(table => {\n            table['currentStatus'].next(null);\n            table['previousStatus'].next(null);\n        });\n\n        hub.dexihDatajobs.forEach(datajob => {\n            datajob['currentStatus'].next(null);\n            datajob['previousStatus'].next(null);\n        });\n\n        hub.dexihDatalinkTests.forEach(test => {\n            test['currentStatus'].next(null);\n            test['previousStatus'].next(null);\n        });\n    }\n\n    // gets the current remote agent\n    getCurrentRemoteAgentId(required = true): string {\n        let agent = this._remoteAgent.getValue();\n        if (!agent) {\n            if (required) {\n                let message = 'The operation can not be completed, as there is no remote agent selected.';\n                this.addHubErrorMessage(message)\n                throw(message);\n            } else {\n                return '';\n            }\n        } else {\n            return agent.instanceId;\n        }\n    }\n\n    public GetConnectionReference(connection: DexihConnection): Promise<ConnectionReference> {\n        return new Promise<ConnectionReference>((resolve, reject) => {\n            this.getRemoteLibrariesPromise().then(remoteLibraries => {\n                if (connection) {\n                    let ref = remoteLibraries.connections.find(c =>\n                        c.connectionAssemblyName === connection.connectionAssemblyName\n                        && c.connectionClassName === connection.connectionClassName);\n\n                    resolve(ref);\n\n                } else {\n                    resolve(null);\n                }\n            }).catch(reason => reject(reason));\n        });\n    }\n\n    // transforms that can be added/removed within a datalink\n    public GetUserConfigTransformReference(): Promise<TransformReference[]> {\n        return new Promise<TransformReference[]>((resolve, reject) => {\n            this.getRemoteLibrariesPromise().then(remoteLibraries => {\n                let userConfig = transformTypes.filter(c => c.allowUserConfig);\n                resolve(remoteLibraries.transforms.filter(c => userConfig.findIndex(u => u.key === c.transformType ) >= 0 ));\n            }).catch(reason => reject(reason));\n        });\n    }\n\n    public GetFunctionReference(item: DexihDatalinkTransformItem): Promise<FunctionReference> {\n        return new Promise<FunctionReference>((resolve, reject) => {\n            this.getRemoteLibrariesPromise().then(remoteLibraries => {\n                if (item) {\n                    let ref = remoteLibraries.functions.find(c =>\n                        c.functionAssemblyName === item.functionAssemblyName\n                        && c.functionClassName === item.functionClassName\n                        && c.functionMethodName === item.functionMethodName);\n\n                    resolve(ref);\n\n                } else {\n                    resolve(null);\n                }\n            }).catch(reason => reject(reason));\n        });\n    }\n\n    public GetFunctionsByType(functionType: eFunctionType): Promise<FunctionReference[]> {\n        return new Promise<FunctionReference[]>((resolve, reject) => {\n            this.getRemoteLibrariesPromise().then(remoteLibraries => {\n                resolve(remoteLibraries.functions.filter(c => c.functionType === functionType));\n            }).catch(reason => reject(reason));\n        });\n    }\n\n    private processWebSocketMessage(data: ClientMessage) {\n            this.logger.LogC(() => `processWebSocketMessage, method: ${data.command}, value: ${data.value}.`, eLogLevel.Debug);\n\n            switch (data.command) {\n                case eClientCommand.Connect:\n                    let cache = this.getHubCache();\n\n                    // if there is an existing cache, and there is a reconnect, then reload it.\n                    // otherwise, it will be loaded by the hubComponent.\n                    if (cache && cache.status === eCacheStatus.Loaded) {\n                        this.refreshHubCache(cache.hub.hubKey, cache.hub.name);\n                        // this.resetRemoteAgent(this._hubCache.value);\n                    }\n                    break;\n                // case 'remoteAgent-update':\n                // case 'remoteAgent-delete':\n                // case 'remoteAgent-deleteKey':\n                // case 'disconnect': {\n                //     this.resetRemoteAgent(this._hubCache.value);\n                //     break;\n                // }\n                case eClientCommand.HubChange: {\n                    let hubChange: Import = data.value;\n                    this.updateHubChange(hubChange);\n                    break;\n                }\n                case eClientCommand.HubError: {\n                    let message: Message = data.value;\n                    this.addHubMessage(message);\n                    break;\n                }\n                case eClientCommand.DatalinkProgress : {\n                    let task: ManagedTask = data.value;\n                    this.addDatalinkProgress(task);\n                }\n                break;\n                case eClientCommand.DatalinkStatus : {\n                    let task: ManagedTask = data.value;\n                    this.addDatalinkProgress(task);\n                }\n                break;\n                case eClientCommand.DatajobProgress : {\n                    let task: ManagedTask = data.value;\n                    this.addDatajobProgress(task);\n                }\n                break;\n                case eClientCommand.DatajobProgress : {\n                    let task: ManagedTask = data.value;\n                    this.addDatajobProgress(task);\n                }\n                break;\n                case eClientCommand.DatalinkTestProgress : {\n                    let task: ManagedTask = data.value;\n                    this.addDatalinkTestProgress(task);\n                }\n                break;\n                case eClientCommand.ApiStatus: {\n                    let apiData: ApiData = data.value;\n                    this.addApiStatus(apiData);\n                }\n                break;\n                case eClientCommand.FlatFilesReady:\n                    let flatFiles: FlatFilesReady = data.value;\n                    this._flatFiles.next(flatFiles);\n\n            }\n            this.logger.LogC(() => `processWebSocketMessage completed, method: ${data.command}.`, eLogLevel.Debug);\n    }\n\n    public updateHubChange(hubChange: Import) {\n        if (!hubChange) { return; }\n\n        let hubCache = this.getHubCache();\n\n        this.mergeChange(hubChange.hubVariables, hubCache.hub.dexihHubVariables, 'key', eSharedObjectType.HubVariable);\n        this.mergeChange(hubChange.columnValidations, hubCache.hub.dexihColumnValidations, 'key',\n            eSharedObjectType.ColumnValidation);\n        this.mergeChange(hubChange.connections, hubCache.hub.dexihConnections, 'key', eSharedObjectType.Connection);\n        this.mergeChange(hubChange.datajobs, hubCache.hub.dexihDatajobs, 'key', eSharedObjectType.Datajob);\n        this.mergeChange(hubChange.datalinks, hubCache.hub.dexihDatalinks, 'key', eSharedObjectType.Datalink);\n        this.mergeChange(hubChange.fileFormats, hubCache.hub.dexihFileFormats, 'key', eSharedObjectType.FileFormat);\n        this.mergeChange(hubChange.customFunctions, hubCache.hub.dexihCustomFunctions, 'key',\n            eSharedObjectType.CustomFunction);\n        this.mergeChange(hubChange.remoteAgentHubs, hubCache.hub.dexihRemoteAgentHubs, 'key', eSharedObjectType.RemoteAgent);\n        this.mergeChange(hubChange.datalinkTests, hubCache.hub.dexihDatalinkTests, 'key', eSharedObjectType.DatalinkTest);\n        this.mergeChange(hubChange.views, hubCache.hub.dexihViews, 'key', eSharedObjectType.View);\n        this.mergeChange(hubChange.apis, hubCache.hub.dexihApis, 'key', eSharedObjectType.Api);\n        this.mergeChange(hubChange.tables, hubCache.hub.dexihTables, 'key', eSharedObjectType.Table);\n        this.mergeChange(hubChange.dashboards, hubCache.hub.dexihDashboards, 'key', eSharedObjectType.Dashboard);\n        this.mergeChange(hubChange.listOfValues, hubCache.hub.dexihListOfValues, 'key', eSharedObjectType.ListOfValues);\n        this.mergeChange(hubChange.tags, hubCache.hub.dexihTags, 'key', eSharedObjectType.Tags);\n\n        if (hubChange.tagObjects && hubChange.tagObjects.length > 0) {\n            this.mergeChangeTagObjects(hubChange.tagObjects, hubCache.hub.dexihTagObjects);\n        }\n\n        if (hubChange.remoteAgentHubs && hubChange.remoteAgentHubs.length > 0) {\n            this.resetRemoteAgent(hubCache);\n        }\n    }\n\n    private mergeChange(source: ImportObject<any>[], target: any[], keyField: string, changeClass: eSharedObjectType) {\n        if (source && source.length > 0) {\n            source.forEach(item => {\n                let current = target.find(c => c[keyField] === item.item[keyField]);\n\n                if (current && current.updateDate === item.item.updateDate) {\n                    return;\n                }\n\n                // if the change is a datalink or datajob, preserve the current/previous status.\n                if (changeClass === eSharedObjectType.Datalink || changeClass === eSharedObjectType.Datajob ||\n                    changeClass === eSharedObjectType.Table || changeClass === eSharedObjectType.DatalinkTest) {\n                    if (current) {\n                        item.item['currentStatus'] = current['currentStatus'];\n                        item.item['previousStatus'] = current['previousStatus'];\n                    } else {\n                        item.item['currentStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                        item.item['previousStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                    }\n                }\n\n                if ( changeClass === eSharedObjectType.Api) {\n                    if (current) {\n                        item.item['currentStatus'] = current['currentStatus'];\n                        item.item['previousStatus'] = current['previousStatus'];\n                    } else {\n                        item.item['currentStatus'] = new BehaviorSubject<ApiData>(null);\n                        item.item['previousStatus'] = new BehaviorSubject<ApiData>(null);\n                    }\n                }\n\n                // if the change is a connection, preserve the existing tables.\n                if (changeClass === eSharedObjectType.Connection && current) {\n                    item.item.dexihTables = current.dexihTables;\n                }\n\n                switch (item.importAction) {\n                    case eImportAction.New:\n                    case eImportAction.Replace:\n                        if (current) {\n                            Object.assign(current, item.item);\n                        } else {\n                            current = item.item;\n                            target.push(item.item);\n                        }\n                        break;\n                    case eImportAction.Delete:\n                        if (current) {\n                            let index = target.findIndex(c => c[keyField] === item.item[keyField]);\n                            target.splice(index, 1);\n                        }\n                }\n\n                this._hubCacheChange.next(new HubCacheChange(changeClass, item.importAction, current));\n            });\n        }\n    }\n\n    private mergeChangeTagObjects(source: ImportObject<DexihTagObject>[], target: DexihTagObject[]) {\n        if (source && source.length > 0) {\n            source.forEach(item => {\n                let current = target\n                    .find(c => c.tagKey === item.item.tagKey\n                        && c.objectKey === item.item.objectKey && c.objectType === item.item.objectType);\n\n                if (current && current.updateDate === item.item.updateDate) {\n                    return;\n                }\n\n                switch (item.importAction) {\n                    case eImportAction.New:\n                    case eImportAction.Replace:\n                        if (current) {\n                            Object.assign(current, item.item);\n                        } else {\n                            current = item.item;\n                            target.push(item.item);\n                        }\n                        break;\n                    case eImportAction.Delete:\n                        if (current) {\n                            let index = target\n                            .findIndex(c => c.tagKey === item.item.tagKey\n                                && c.objectKey === item.item.objectKey && c.objectType === item.item.objectType);\n                            target.splice(index, 1);\n                        }\n                }\n\n                this._hubCacheChange.next(new HubCacheChange(eSharedObjectType.TagObjects, item.importAction, current));\n            });\n        }\n    }\n\n    private addApiStatus(apiData: ApiData) {\n        const api = this._hubCache.value.hub.dexihApis.find(c => c.key === apiData.apiKey);\n        if (api) {\n            api['currentStatus'].next(apiData);\n            this._apiStatusChange.next(api);\n        }\n    }\n\n        // updates the datalink progress observables.\n    private addDatalinkProgress(task: ManagedTask) {\n        if (!this.isHubCacheLoaded()) { return; }\n        let writerResult: TransformWriterResult = task.data;\n        if (!writerResult) {return; }\n        const datalink = this._hubCache.value.hub.dexihDatalinks.find(c => c.key === writerResult.referenceKey);\n        if (datalink) {\n            if (writerResult.runStatus === eRunStatus.Abended ||\n                writerResult.runStatus === eRunStatus.Finished ||\n                writerResult.runStatus === eRunStatus.FinishedErrors ) {\n                    datalink['previousStatus'].next(writerResult);\n                    datalink['currentStatus'].next(null);\n            } else {\n                datalink['currentStatus'].next(writerResult);\n            }\n\n            if (writerResult.targetTableKey > 0) {\n                this.addTableProgress(writerResult);\n            }\n\n            if (writerResult.childResults) {\n                writerResult.childResults.forEach(c => {\n                    this.addTableProgress(c);\n                });\n            }\n\n            this._transformWriterResultChange.next(writerResult);\n        }\n    }\n\n    private addDatalinkTestProgress(task: ManagedTask) {\n        let writerResult: TransformWriterResult = task.data;\n        if (!writerResult) {return; }\n        const datalinkTest = this._hubCache.value.hub.dexihDatalinkTests.find(c => c.key === writerResult.referenceKey);\n        if (datalinkTest) {\n            if (writerResult.runStatus === eRunStatus.Abended ||\n                writerResult.runStatus === eRunStatus.Finished ||\n                writerResult.runStatus === eRunStatus.FinishedErrors ) {\n                    datalinkTest['previousStatus'].next(writerResult);\n                    datalinkTest['currentStatus'].next(null);\n            } else {\n                datalinkTest['currentStatus'].next(writerResult);\n            }\n            this._transformWriterResultChange.next(writerResult);\n        }\n    }\n\n    private addTableProgress(writerResult: TransformWriterResult) {\n        if (!writerResult) {return; }\n        const table = this._hubCache.value.getTable(writerResult.targetTableKey);\n        if (table) {\n            if (writerResult.runStatus === eRunStatus.Abended ||\n                writerResult.runStatus === eRunStatus.Finished ||\n                writerResult.runStatus === eRunStatus.FinishedErrors ) {\n                    table['previousStatus'].next(writerResult);\n                    table['currentStatus'].next(null);\n            } else {\n                table['currentStatus'].next(writerResult);\n            }\n            this._transformWriterResultChange.next(writerResult);\n\n            if (writerResult.childResults) {\n                writerResult.childResults.forEach(c => {\n                    this.addTableProgress(c);\n                });\n            }\n        }\n    }\n\n      // updates the datalink progress observables.\n    private addDatajobProgress(task: ManagedTask) {\n        if (!this.isHubCacheLoaded()) { return; }\n        let writerResult: TransformWriterResult = task.data;\n        if (!writerResult) {return; }\n        const datajob = this._hubCache.value.hub.dexihDatajobs.find(c => c.key === writerResult.referenceKey);\n        if (datajob) {\n            if (writerResult.runStatus === eRunStatus.Abended ||\n                writerResult.runStatus === eRunStatus.Cancelled ||\n                writerResult.runStatus === eRunStatus.Finished ||\n                writerResult.runStatus === eRunStatus.FinishedErrors ) {\n                    let currentStatus: TransformWriterResult = datajob['currentStatus'].value;\n                    if (currentStatus !== null) {\n                        if (currentStatus.auditKey === writerResult.auditKey) {\n                            datajob['currentStatus'].next(null);\n                        }\n                    }\n                    datajob['previousStatus'].next(writerResult);\n                } else {\n                datajob['currentStatus'].next(writerResult);\n            }\n            this._transformWriterResultChange.next(writerResult);\n        }\n    }\n\n    public hubPostConfirm<T>(url: string, data: any, waitMessage: string, confirmMessage: string) {\n        data.hubKey = this._hubKey;\n        return new Promise<T>((resolve, reject) => {\n            this.authService.postConfirm<T>(url, data, waitMessage, confirmMessage).then(result => {\n                resolve(result);\n            }).catch(reason => {\n                // reason = null is for cancel.\n                if (reason == null || typeof reason === undefined) {\n                    resolve(null);\n                    return;\n                }\n\n                this.logger.LogMessage(reason);\n                // this.addHubMessage(reason);\n                reject(reason);\n            });\n        });\n    }\n\n    public hubPost<T>(url: string, data: any, waitMessage: string): Promise<T> {\n        data.hubKey = this._hubKey;\n        return new Promise<T>((resolve, reject) => {\n            this.authService.post<T>(url, data, waitMessage).then(result => {\n                resolve(result);\n            }).catch(reason => {\n                if (reason) { this.logger.LogMessage(reason); }\n               // this.addHubMessage(reason);\n                reject(reason);\n            });\n        });\n    }\n\n    public hubPostRemote<T>(url: string, data: any, waitMessage: string, cancelToken: CancelToken): PromiseWithCancel<T> {\n        data.hubKey = this._hubKey;\n        return new PromiseWithCancel<T>((resolve, reject) => {\n            this.authService.postRemote<T>(url, data, this.getRemoteAgentCurrent(), waitMessage, cancelToken).then(result => {\n                resolve(result);\n            }).catch(reason => {\n                if (reason) { this.logger.LogMessage(reason); }\n                // this.addHubMessage(reason);\n                reject(reason);\n            });\n        });\n    }\n\n    public hubPostRemoteConfirm<T>(url: string, data: any, waitMessage: string,\n        confirmMessage: string, cancelToken: CancelToken): PromiseWithCancel<T> {\n        data.hubKey = this._hubKey;\n        return new PromiseWithCancel<T>((resolve, reject) => {\n            this.authService.confirmDialog('Please confirm...', confirmMessage).then(confirm => {\n                if (confirm) {\n                    resolve(this.hubPostRemote<T>(url, data, waitMessage, cancelToken));\n                } else {\n                    reject();\n                }\n            }).catch(() => reject() );\n        });\n    }\n\n    public getRemoteResponse<T>(key: string, cancelToken: CancelToken, command: 'upload' | 'download' | 'setRaw' = 'download',\n        extra = ''): Promise<T> {\n        let remoteAgent = this.getRemoteAgentCurrent();\n        return this.authService.getRemoteData<T>(remoteAgent, key, cancelToken, command, extra);\n    }\n\n     deleteRemoteAgent(remoteAgent: DexihRemoteAgentHub): Promise<boolean> {\n         return this.hubPostConfirm<boolean>('/api/Hub/DeleteRemoteAgent', {\n            remoteAgentHubKey:  remoteAgent.remoteAgentHubKey,\n        }, 'Deleting the hub remote agent...',\n        'This action will delete the selected ' +\n        ' remote agent from this hub.  <p></p>Are you sure?'\n        );\n    }\n\n    saveRemoteAgent(remoteAgentHub: DexihRemoteAgentHub): Promise<boolean> {\n        return this.hubPost('/api/Hub/SaveRemoteAgent', {\n            hubKey: this._hubKey,\n            value: remoteAgentHub\n        }, 'Saving the hub remote agent...')\n    }\n\n    // updates all the information on the remoteAgent.\n    private getRemoteAgentStatus(hubCache: HubCache): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            let remoteAgent = this.getRemoteAgentCurrent();\n            if (remoteAgent) {\n                let remoteAgentPromise = this.hubPostRemote<RemoteAgentStatus>('/api/Hub/GetRemoteAgentStatus', {\n                    hubKey: hubCache.hub.hubKey }, 'Getting the remote agent status...', null);\n                let globalCachePromise = this.authService.getGlobalCachePromise();\n                let hubPromise = this.getHubCachePromise();\n\n                Promise.all([remoteAgentPromise, globalCachePromise, hubPromise]).then(values => {\n                    let agentStatus = values[0];\n                    let globalCache = values[1];\n                    let hub = values[2].hub;\n\n                    // combine any functions in the libraries on the remote agent with the standard global remote libraries.\n                    let remoteLibraries = new RemoteLibraries();\n                    remoteLibraries.connections =\n                        globalCache.defaultRemoteLibraries.connections.concat(agentStatus.remoteLibraries.connections);\n                    remoteLibraries.transforms =\n                        globalCache.defaultRemoteLibraries.transforms.concat(agentStatus.remoteLibraries.transforms);\n                    remoteLibraries.functions =\n                        globalCache.defaultRemoteLibraries.functions.concat(agentStatus.remoteLibraries.functions);\n\n                    this._remoteLibraries.next(remoteLibraries);\n\n                    hub.dexihApis.forEach(api => {\n                        api['currentStatus'].next(agentStatus.activeApis.find(c => c.apiKey === api.key));\n                    });\n\n                    // merge the datalink/datajob status into the cached objects.\n                    hub.dexihDatalinks.forEach(datalink => {\n                        datalink['currentStatus'].next(this.getTransformWriterResult(datalink.key,  agentStatus.activeDatalinks));\n                        datalink['previousStatus'].next(\n                            this.getTransformWriterResult(datalink.key,  agentStatus.previousDatalinks));\n                    });\n\n                    hub.dexihTables.forEach(table => {\n                        table['currentStatus'].next(this.getTransformWriterTable(table.key, agentStatus.activeDatalinks));\n                        table['previousStatus'].next(this.getTransformWriterTable(table.key, agentStatus.previousDatalinks));\n                    });\n\n                    hub.dexihDatajobs.forEach(datajob => {\n                        datajob['currentStatus'].next(this.getTransformWriterResult(datajob.key,  agentStatus.activeDatajobs));\n                        datajob['previousStatus'].next(this.getTransformWriterResult(datajob.key,  agentStatus.previousDatajobs));\n                    });\n\n                    hub.dexihDatalinkTests.forEach(test => {\n                        test['currentStatus'].next(this.getTransformWriterResult(test.key,  agentStatus.activeDatalinkTests));\n                        test['previousStatus'].next(\n                            this.getTransformWriterResult(test.key,  agentStatus.previousDatalinkTests));\n                    });\n\n                    resolve(true);\n\n                }).catch(reason => {\n                    // this.addHubMessage(reason, true, 'Refreshing Remote Agent');\n                    reject(reason);\n                });\n            }\n        });\n    }\n\n    private getTransformWriterResult(referentKey: number, tasks: ManagedTask[]): TransformWriterResult {\n        let task = tasks.find(c => c.data && c.data.referenceKey === referentKey);\n        if (!task) { return null; }\n        return task.data;\n    }\n\n    private getTransformWriterTable(tableKey, tasks: ManagedTask[]): TransformWriterResult {\n        for (let task of tasks) {\n            let datalinkResult = <TransformWriterResult> task.data;\n            if (datalinkResult == null) { return null; }\n            let writerResult = this.SearchForTable(tableKey, datalinkResult);\n            if (writerResult) { return writerResult; }\n        }\n\n        return null;\n    }\n\n    private SearchForTable(tableKey: number, writerResult: TransformWriterResult) {\n        if (writerResult.targetTableKey === tableKey) { return writerResult; }\n\n        if (writerResult && writerResult.childResults) {\n            for (let child of writerResult.childResults) {\n                return this.SearchForTable(tableKey, child);\n            }\n        }\n\n        return null;\n    }\n\n        // updates all the information on the remoteAgent.\n    getHubUsers(): Promise<HubUser[]> {\n        return this.hubPost<HubUser[]>('/api/Hub/HubUsers', {}, 'Getting hub users...');\n    }\n\n    setUserPermissions(emails: string[], permission: ePermission, sendInvites: boolean): Promise<any> {\n        return this.hubPost('/api/Hub/SetUsersPermission', {\n            emails: emails, permission: permission, sendInvites: sendInvites\n        }, 'Setting user permissions...');\n    }\n\n    setUserAlerts(userIds: string[], alertEmails, sendInvites: boolean): Promise<any> {\n        return this.hubPost('/api/Hub/SetUsersAlerts', {\n            userIds: userIds, alertEmails: alertEmails, sendInvites: sendInvites\n        }, 'Setting user permissions...');\n    }\n\n    removeUsers(emails: string[]): Promise<any> {\n        return this.hubPost('/api/Hub/RemoveUsers', {emails: emails }, 'Removing hub users...');\n    }\n\n    exportHub(hub: DexihHub, filename: string) {\n        const content = JSON.stringify(hub, (key, value) => {\n            // don't bother saving the null values.\n            if (value === null ) { return undefined; }\n\n            switch (key) {\n                case 'currentStatus':\n                case 'entityStatus':\n                case 'previousStatus':\n                case 'runTime':\n                    return undefined;\n            }\n            return value;\n        } );\n\n        let blob = new Blob([content], { type: 'application/json;charset=utf-8;' });\n        if (navigator.msSaveBlob) { // IE 10+\n            navigator.msSaveBlob(blob, filename);\n        } else {\n            let link = document.createElement('a');\n            if (typeof link.download !== undefined) { // feature detection\n                // Browsers that support HTML5 download attribute\n                let url = URL.createObjectURL(blob);\n                link.setAttribute('href', url);\n                link.setAttribute('download', filename);\n                link.style.visibility = 'hidden';\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n            }\n        }\n    }\n\n    importPackage(importPackage: Import): Promise<any> {\n        return this.hubPost<any>('/api/Hub/ImportPackage', importPackage, 'Importing package...' );\n    }\n\n    deleteConnections(connections: Array<DexihConnection>): Promise<boolean> {\n        let connectionNames = connections.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteConnections', {\n            itemKeys: connections.map(c => c.key)}, 'Deleting connections...',\n            'This action will delete the following connections:<p></p>' + connectionNames + '<p></p> Are you sure?');\n    }\n\n    // tests the connection and refreshes the databases.\n    refreshConnection(connection: DexihConnection, cancelToken: CancelToken): PromiseWithCancel<Array<string>> {\n        return this.hubPostRemote<Array<string>>('/api/Hub/RefreshConnection',\n            {value: connection}, 'Refreshing connection...', cancelToken);\n    }\n\n    // tests the connection and refreshes the databases.\n    createDatabase(connection: DexihConnection, cancelToken: CancelToken): PromiseWithCancel<any> {\n        return this.hubPostRemote<Array<string>>('/api/Hub/CreateDatabase', {value: connection}, 'Creating new database...', cancelToken);\n    }\n\n    // decrypted a value in the hub.\n    async encrypt(value: string, cancelToken: CancelToken): Promise<string> {\n        let key = await this.authService.postRemoteGetKey('/api/Hub/Encrypt', {hubKey: this._hubKey},\n            this.getRemoteAgentCurrent(), cancelToken);\n        await this.getRemoteResponse<string>(key, cancelToken, 'setRaw', value);\n        let result = await this.getRemoteResponse<string>(key, cancelToken, 'download');\n        return result;\n    }\n\n    // decrypted a value in the hub.\n    decrypt(value: string, cancelToken: CancelToken): PromiseWithCancel<string> {\n        return this.hubPostRemote<string>('/api/Hub/Decrypt', {value: value}, 'Decrypting...', cancelToken);\n    }\n\n    // gets a list of table names in a remote database\n    getDatabaseTableNames(connection: DexihConnection, cancelToken: CancelToken): PromiseWithCancel<Array<DexihTable>> {\n        return this.hubPostRemote<Array<DexihTable>>('/api/Hub/DatabaseTableNames',\n            {value: connection}, 'Getting database table names...', cancelToken);\n    }\n\n    // import a list of specified tables in a remote database\n    importTables(tables: Array<DexihTable>, save: boolean, cancelToken: CancelToken): Promise<Array<DexihTable>> {\n        // if there are any table that are already imported, then warn the over of an overwrite.\n        let importedTables = tables.filter(c => c.key > 0);\n\n        if (importedTables.length > 0) {\n            return new Promise<Array<DexihTable>>((resolve, reject) => {\n            this.authService.confirmDialog('Re-Import Tables',\n            'This action will re-import the following tables, which will reset column customizations ' +\n            ' (such as descriptions, column validations, delta types etc.) and may invalidate some datalink mappings. <p></p>' +\n                    importedTables.map(c => c.name).join(',') +\n                    '  <p></p><p></p>Are you sure you want to continue?').then(confirm => {\n                        if (confirm) {\n                            this.doImport(tables, save, cancelToken).then(result => {\n                                resolve(result);\n                            }).catch(reason => reject(reason));\n                        } else {\n                            resolve(null);\n                        }\n                    }).catch(reason => {\n                        reject(reason);\n                    });\n                });\n        } else {\n            return this.doImport(tables, save, cancelToken);\n        }\n    }\n\n    public doImport(tables: Array<DexihTable>, save: boolean, cancelToken: CancelToken): Promise<Array<DexihTable>> {\n        return new Promise<Array<DexihTable>>((resolve, reject) => {\n            this.hubPostRemote<DexihTable[]>('/api/Hub/ImportTables', {\n            tables: tables,\n        }, 'Importing tables...', cancelToken).then(importedTables => {\n            if (save) {\n                resolve(this.saveTables(importedTables));\n            } else {\n                let hub = this.getHubCache();\n                importedTables.forEach(t => {\n                    t.dexihTableColumns.forEach(c => {\n                        if (c.key === 0) {\n                            c.key = hub.getNextSequence();\n                        }\n                    });\n                });\n                resolve(importedTables);\n            }\n        }).catch(reason => reject(reason));\n    });\n    }\n\n        // import a list of specified tables in a remote database\n    reImportTables(tableKeys: Array<number>, save: boolean, cancelToken: CancelToken): Promise<Array<DexihTable>> {\n        return new Promise<Array<DexihTable>>((resolve, reject) => {\n            const cache = this._hubCache.value;\n\n            let tables: Array<DexihTable> = [];\n            tableKeys.forEach(tableKey => {\n                const table = cache.getTable(tableKey);\n                if (!table) {\n                    const message = `Error: The re-import failed, as the table with the key ${tableKey} could not be found.`;\n                    this.addHubErrorMessage(message);\n                    this.logger.LogC(() => message, eLogLevel.Error);\n                    reject(message);\n                }\n                tables.push(table);\n            });\n\n            this.authService.confirmDialog('Re-Import Tables',\n            'This action will re-import the following tables, which will reset column customizations ' +\n            ' (such as descriptions, column validations, delta types etc.) and may invalidate some datalink mappings. <p></p>' +\n                    tables.map(c => c.name).join(',') +\n                    '  <p></p><p></p>Are you sure you want to continue?').then(confirm => {\n\n                        if (confirm) {\n                        this.doImport(tables, save, cancelToken)\n                            .then(result => {\n                                resolve(result);\n                            }).catch(reason => {\n                                reject(reason);\n                            });\n                        } else {\n                            resolve(null);\n                        }\n                    }).catch(() => {\n                        resolve(null);\n                    });\n        });\n    }\n\n    clearTables(tableKeys: Array<number>, cancelToken: CancelToken): Promise<boolean> {\n        const cache = this._hubCache.value;\n\n        let tables: Array<DexihTable> = [];\n        tableKeys.forEach(tableKey => {\n            const table = cache.getTable(tableKey);\n            if (!table) {\n                const message = `Error: The clear tables failed, as the table with the key ${tableKey} could not be found.`;\n                this.addHubErrorMessage(message);\n                this.logger.LogC(() => message, eLogLevel.Error);\n                return Promise.reject(message);\n            }\n            tables.push(table);\n        });\n\n        return this.hubPostRemoteConfirm<boolean>('/api/Hub/ClearTables', {\n            tables: tables,\n        }, 'Clearing tables...',\n        'This action will remove <b>ALL DATA</b> from the following tables.  This action cannot be reversed.' +\n        tables.map(c => c.name).join(',') +\n        '  <p></p><p></p>Are you sure you want to continue?', cancelToken);\n    }\n\n    createTables(tables: Array<DexihTable>, cancelToken: CancelToken): Promise<boolean> {\n        return this.hubPostRemoteConfirm<boolean>('/api/Hub/CreateTables', {\n            tables: tables,\n            dropTables: true\n        }, 'Clearing tables...',\n        // tslint:disable-next-line:max-line-length\n        'This action will drop and re-create the following tables, removing <b>ALL DATA</b>.  This action cannot be reversed.<p></p><p></p>' +\n        tables.map(c => c.name).join(',') +\n        '  <p></p><p></p>Are you sure you want to continue?', cancelToken);\n    }\n\n    // remove imported tables\n    deleteTables(tables: Array<DexihTable>): Promise<boolean> {\n        const names = tables.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm('/api/Hub/DeleteTables', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(false),\n            itemKeys: tables.map(t => t.key)\n        }, 'Deleting tables...',\n        'This action will delete the selected tables from the repository metadata ' +\n        '(note, this action \\\"does not\\\" delete tables from the underlying database).<p></p>' +\n        names +\n        ' <p></p><p></p>Are you sure you want to continue?'\n        );\n    }\n\n    // save an updated table\n    saveTables(tables: DexihTable[]): Promise<DexihTable[]> {\n        return this.hubPost('/api/Hub/SaveTables', {value: tables}, 'Saving tables..');\n    }\n\n    // get dbml string\n    getDbml(tables: Array<DexihTable>) {\n        this.authService.downloadFile('/api/Hub/DBML', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(false),\n            itemKeys: tables.map(t => t.key)\n        }, 'Getting DBML...', 'text/plain');\n    }\n\n    // create datalinks\n    createDatalinks(sourceTableKeys: Array<number>, name: string, datalinkType: eDatalinkType,\n        targetConnectionKey: number, targetTableKey: number,\n        targetTableName: string, auditConnectionKey: number,\n        addSourceColumns: boolean, auditColumns: Array<eDeltaType>): Promise<Array<DexihDatalink>> {\n            return this.hubPost<Array<DexihDatalink>>('/api/Hub/CreateDatalinks', {\n                hubKey: this._hubKey,\n                remoteAgentId: this.getCurrentRemoteAgentId(),\n                sourceTableKeys: sourceTableKeys,\n                datalinkName: name,\n                datalinkType: datalinkType,\n                targetConnectionKey: targetConnectionKey,\n                targetTableKey: targetTableKey,\n                targetTableName: targetTableName,\n                auditConnectionKey: auditConnectionKey,\n                addSourceColumns,\n                auditColumns\n            }, 'Creating datalinks...')\n    }\n\n        // remove datalinks\n    deleteDatalinks(datalinks: Array<DexihDatalink>): Promise<boolean> {\n        const datalinkNames = datalinks.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteDatalinks', {\n            itemKeys: datalinks.map(d => d.key)\n        }, 'Deleting datalinks...',\n        'This action will delete the following datalinks and underlying transforms from the repository metadata.<p></p>' +\n        datalinkNames +\n        '<p></p><p></p>Are you sure you want to continue?');\n    }\n\n    shareItems(keys: Array<number>, objectType: eDataObjectType, isShared: boolean): Promise<boolean> {\n        return this.hubPost<boolean>('/api/Hub/ShareItems', {\n            keys: keys,\n            objectType: objectType,\n            isShared: isShared\n        }, 'Sharing items...')\n    }\n\n    runDatalinks(datalinkKeys: Array<number>, truncateTarget: boolean,\n        resetIncremental: boolean, resetIncrementalValue: string, inputColumns: InputColumn[],\n        inputParameters: InputParameter[], cancelToken: CancelToken): Promise<boolean> {\n\n        let data = {\n            connectionId: this.authService.getWebSocketConnectionId(),\n            datalinkKeys: datalinkKeys,\n            truncateTarget: truncateTarget,\n            resetIncremental: resetIncremental,\n            resetIncrementalValue: resetIncrementalValue,\n            inputColumns: inputColumns,\n            inputParameters: inputParameters\n        };\n\n        if (truncateTarget) {\n            return this.hubPostRemoteConfirm('/api/Hub/RunDatalinks', data, 'Running datalinks...',\n            'This action will truncate all data in the target tables in the selected datalinks and reload from source.  ' +\n            '<p></p><p></p>Are you sure you want to continue?', cancelToken);\n        } else {\n            return this.hubPostRemote('/api/Hub/RunDatalinks', data, 'Running datalinks...', cancelToken);\n        }\n    }\n\n\n    public runDatalinkTests(datalinkTestKeys: Array<number>, cancelToken: CancelToken): Promise<boolean> {\n        return this.hubPostRemote<boolean>('/api/Hub/RunDatalinkTests', {\n            connectionId: this.authService.getWebSocketConnectionId(),\n            datalinkTestKeys: datalinkTestKeys\n        }, 'Running datalink tests...', cancelToken);\n    }\n\n    cancelDatalinkTests(datalinkTestKeys: Array<number>, cancelToken: CancelToken): Promise<boolean> {\n        return this.hubPostRemote<boolean>('/api/Hub/CancelDatalinkTests', {\n            itemKeys: datalinkTestKeys\n        }, 'Cancelling datalink tests...', cancelToken)\n    }\n\n    cancelDatalinks(datalinkKeys: Array<number>, cancelToken: CancelToken): Promise<boolean> {\n        return this.hubPostRemote<boolean>('/api/Hub/CancelDatalinks', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(),\n            itemKeys: datalinkKeys\n        }, 'Cancelling datalinks...', cancelToken)\n    }\n\n    getAuditResults(auditType: string, connectionKeys: Array<number>, referenceKeys: Array<number>,\n        childItems: boolean, rows: number, cancelToken: CancelToken): Promise<Array<TransformWriterResult>> {\n             return this.hubPostRemote<Array<TransformWriterResult>>('/api/Hub/PreviewAuditResults', {\n                connectionKeys,\n                referenceKeys: referenceKeys,\n                auditType: auditType,\n                childItems: childItems,\n                rows: rows,\n                }, 'Previewing audit results...', cancelToken);\n    }\n\n    getResultDetail(auditConnectionKey: number, auditKey: number, cancelToken: CancelToken): Promise<TransformWriterResult[]> {\n        return this.hubPostRemote<TransformWriterResult[]>('/api/Hub/PreviewAuditResults', {\n            connectionKeys: [auditConnectionKey],\n            referenceKeys: [],\n            auditKey: auditKey,\n            childItems: true,\n            rows: 1\n            }, 'Previewing audit results...', cancelToken);\n    }\n\n    deleteDatajobs(datajobs: Array<DexihDatajob>): Promise<boolean> {\n        let names = datajobs.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>(\n            '/api/Hub/DeleteDatajobs', {\n                hubKey: this._hubKey,\n                itemKeys: datajobs.map(t => t.key)\n            }, 'Deleting datajob(s)...',\n            'This action will delete the following data jobs, and any schedules and dependencies ' +\n            '(Note, this will NOT delete the datalinks): <p></p> ' + names  + '<p></p>  Are you sure?'\n        );\n    }\n\n    runDatajobs(datajobs: Array<DexihDatajob>, truncateTarget: boolean,\n        resetIncremental: boolean, resetIncrementalValue: string, inputParameters: InputParameter[],\n        cancelToken: CancelToken): Promise<boolean> {\n\n            var data = {\n                connectionId: this.authService.getWebSocketConnectionId(),\n                datajobKeys: datajobs.map(d => d.key),\n                truncateTarget: truncateTarget,\n                resetIncremental: resetIncremental,\n                resetIncrementalValue: resetIncrementalValue,\n                inputParameters: inputParameters\n            };\n\n            if (truncateTarget) {\n                return this.hubPostRemoteConfirm('/api/Hub/RunDatajobs', data, 'Running datajobs...',\n                'This action will truncate all data in the target tables for datalinks in this job.  ' +\n                '<p></p><p></p>Are you sure you want to continue?', cancelToken);\n            } else {\n                return this.hubPostRemote('/api/Hub/RunDatajobs', data, 'Running datajobs...', cancelToken);\n            }\n    }\n\n    deactivateDatajobs(datajobKeys: Array<number>, cancelToken: CancelToken): Promise<boolean> {\n        return this.hubPostRemote<boolean>('/api/Hub/DeactivateDatajobs', {\n                connectionId: this.authService.getWebSocketConnectionId(),\n                datajobKeys: datajobKeys\n            }, 'Deactivating datajob(s)...', cancelToken\n        );\n    }\n\n    activateDatajobs(datajobs: Array<DexihDatajob>, inputParameters: InputParameter[], cancelToken: CancelToken): Promise<boolean> {\n        return this.hubPostRemote<boolean>('/api/Hub/ActivateDatajobs', {\n            connectionId: this.authService.getWebSocketConnectionId(),\n            datajobKeys: datajobs.map(d => d.key),\n            inputParameters: inputParameters\n        }, 'Activating datajob(s)...', cancelToken);\n    }\n\n    saveView(view: DexihView): Promise<DexihView> {\n        return this.hubPost<DexihView>('/api/Hub/SaveView', {\n            value: view\n        }, 'Saving view...');\n    }\n\n    deleteViews(views: Array<DexihView>): Promise<boolean> {\n        let viewNames = views.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteViews', {\n            itemKeys: views.map(c => c.key)\n        }, 'Deleting views(s)...',\n        'This action will delete the following views, from the hub and cannot be reversed.<p></p>' +\n        viewNames + '<p></p>Are you sure?');\n    }\n\n    saveDashboard(dashboard: DexihDashboard): Promise<DexihDashboard> {\n        return this.hubPost<DexihDashboard>('/api/Hub/SaveDashboard', {\n            value: dashboard\n        }, 'Saving Dashboard...');\n    }\n\n    deleteDashboards(dashboards: Array<DexihDashboard>): Promise<boolean> {\n        let names = dashboards.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteDashboards', {\n            itemKeys: dashboards.map(c => c.key)\n        }, 'Deleting Dashboard(s)...',\n        'This action will delete the following dashboards, from the hub and cannot be reversed.<p></p>' +\n                names + '<p></p>Are you sure?');\n    }\n\n    saveListOfValues(lov: DexihListOfValues): Promise<DexihListOfValues> {\n        return this.hubPost<DexihListOfValues>('/api/Hub/SaveListOfValues', {\n            value: lov\n        }, 'Saving list of values...');\n    }\n\n    deleteListOfValues(lov: Array<DexihListOfValues>): Promise<boolean> {\n        let names = lov.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteListOfValues', {\n            itemKeys: lov.map(c => c.key)\n        }, 'Deleting list of value(s)...',\n        'This action will delete the following list of values, from the hub and cannot be reversed.<p></p>' +\n        names + '<p></p>Are you sure?');\n    }\n\n    saveTag(tag: DexihTag): Promise<DexihTag> {\n        return this.hubPost<DexihTag>('/api/Hub/SaveTags', {\n            value: tag\n        }, 'Saving tag...');\n    }\n\n    deleteTags(tags: Array<DexihTag>): Promise<boolean> {\n        let names = tags.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteTags', {\n            itemKeys: tags.map(c => c.key)\n        }, 'Deleting tags(s)...',\n        'This action will delete the following tags, from the hub and cannot be reversed.<p></p>' +\n        names + '<p></p>Are you sure?');\n    }\n\n    saveTagObjects(tagKey: number, isChecked: boolean, objectKeys: Array<{objectType: eSharedObjectType, objectKey: number}>) {\n        return this.hubPost('/api/Hub/SaveTagObjects', {\n            tagKey,\n            isChecked,\n            objectKeys\n        }, 'Saving tags...');\n    }\n\n    deleteTagObjects(objectKeys: Array<{objectType: eSharedObjectType, objectKey: number}>) {\n        return this.hubPost('/api/Hub/DeleteTagObjects', {\n            objectKeys\n        }, 'Deleting tags...');\n    }\n\n\n    saveApi(api: DexihApi): Promise<DexihApi> {\n        return this.hubPost<DexihApi>('/api/Hub/SaveApi', {\n            value: api\n        }, 'Saving api...');\n    }\n\n    deleteApis(apis: Array<DexihApi>): Promise<boolean> {\n        let apiNames = apis.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm('/api/Hub/DeleteApis', {\n            itemKeys: apis.map(c => c.key)\n        }, 'Deleting api(s)...',\n            // tslint:disable-next-line:max-line-length\n            'This action will delete the following apis, from the hub and cannot be reversed.  Note, this action will NOT deactivate currently active Api\\'s.<p></p>.' +\n            apiNames + '<p></p>Are you sure?'\n        );\n\n    }\n\n    activateApis(apis: Array<DexihApi>, cancelToken: CancelToken): Promise<boolean> {\n        return this.hubPostRemote<boolean>('/api/Hub/ActivateApis', {\n            connectionId: this.authService.getWebSocketConnectionId(),\n            apiKeys: apis.map(d => d.key),\n        }, 'Activating Api(s)...', cancelToken);\n\n    }\n\n    deactivateApis(apiKeys: Array<number>, cancelToken: CancelToken): Promise<boolean> {\n        return this.hubPostRemote<boolean>('/api/Hub/DeactivateApis', {\n            connectionId: this.authService.getWebSocketConnectionId(),\n            apiKeys: apiKeys\n        }, 'Deactivating Api(s)...', cancelToken);\n    }\n\n    previewTableData(table: DexihTable, showRejectedData, selectQuery: SelectQuery, inputColumns: InputColumn[],\n        parameters: DexihInputParameter[], cancelToken: CancelToken): PromiseWithCancel<PreviewResults> {\n        let hub = this.createHub(this._hubKey, 'cache');\n        this._hubCache.value.cacheAddConnection(table.connectionKey, hub);\n\n        return this.previewTableDataQuery(table, showRejectedData, selectQuery, inputColumns, parameters, cancelToken);\n    }\n\n\n\n    getData(url: string, data: any, waitMessage: string, cancelToken): PromiseWithCancel<PreviewResults> {\n        return new PromiseWithCancel<PreviewResults>((resolve, reject) => {\n            this.hubPostRemote<PreviewResults>(url, data, waitMessage, cancelToken).then(previewData => {\n                let columns = this.authService.constructDataTableColumns(previewData.columns);\n                resolve({\n                    name: previewData.name,\n                    columns: columns,\n                    data: previewData.data,\n                    transformProperties: previewData.transformProperties,\n                    status: previewData.status,\n                    viewConfig: previewData.viewConfig\n                });\n            }).catch(reason => {\n                this.addHubMessage(reason, true, 'Preview Data');\n                reject(reason);\n            });\n        });\n    }\n\n    previewTableDataQuery(table: DexihTable, showRejectedData, selectQuery: SelectQuery, inputColumns: InputColumn[],\n        inputParameters: DexihInputParameter[], cancelToken: CancelToken):\n        PromiseWithCancel<PreviewResults> {\n            return this.getData('/api/Hub/PreviewTableQuery', {\n                hubKey: this._hubKey,\n                remoteAgentId: this.getCurrentRemoteAgentId(),\n                table: table,\n                showRejectedData: showRejectedData,\n                selectQuery: selectQuery,\n                inputColumns: inputColumns,\n                inputParameters: inputParameters,\n            }, 'Retrieving table data...', cancelToken);\n    }\n\n    previewTableKeyData(tableKey: number, showRejectedData, selectQuery: SelectQuery, inputColumns: InputColumn[],\n        inputParameters: DexihInputParameter[], cancelToken: CancelToken):\n        PromiseWithCancel<PreviewResults> {\n            return this.getData('/api/Hub/PreviewTable', {\n                tableKey: tableKey,\n                showRejectedData: showRejectedData,\n                selectQuery: selectQuery,\n                inputColumns: inputColumns,\n                inputParameters: inputParameters,\n            }, 'Retrieving table data...', cancelToken);\n    }\n\n    previewDatalinkKeyData(datalinkKey: number, previewUpdates: boolean, selectQuery: SelectQuery, inputColumns: InputColumn[],\n        inputParameters: DexihInputParameter[], cancelToken: CancelToken):\n    PromiseWithCancel<PreviewResults> {\n\n        return this.getData('/api/Hub/PreviewDatalink', {\n            datalinkKey: datalinkKey,\n            previewUpdates: previewUpdates,\n            selectQuery: selectQuery,\n            inputColumns: inputColumns,\n            inputParameters: inputParameters,\n        }, 'Retrieving datalink data..', cancelToken);\n    }\n\n    previewTransformData(datalink: DexihDatalink, datalinkTransformKey: number, selectQuery: SelectQuery, inputColumns: InputColumn[],\n        inputParameters: DexihInputParameter[], cancelToken: CancelToken):\n        PromiseWithCancel<PreviewResults> {\n            // remove status as they will not parse into json.\n            datalink['currentStatus'] = null;\n            datalink.entityStatus = null;\n            datalink['previousStatus'] = null;\n\n            return this.getData('/api/Hub/PreviewTransform', {\n                datalink: datalink,\n                selectQuery,\n                inputColumns,\n                inputParameters: inputParameters,\n                datalinkTransformKey: datalinkTransformKey,\n            }, 'Retrieving transform data...', cancelToken)\n    }\n\n    previewView(view: DexihView, inputColumns: InputColumn[],\n        inputParameters: DexihInputParameter[], cancelToken: CancelToken): PromiseWithCancel<PreviewResults> {\n\n        return this.getData('/api/Hub/PreviewView', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(),\n            view: view,\n            inputColumns: inputColumns,\n            inputParameters: inputParameters,\n        }, 'Retrieving view data...', cancelToken);\n    }\n\n    previewViewKey(viewKey: number, inputColumns: InputColumn[], parentParameters: InputParameter[],\n        inputParameters: DexihInputParameter[], cancelToken: CancelToken): PromiseWithCancel<PreviewResults> {\n\n        return this.getData('/api/Hub/PreviewViewKey', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(),\n            viewKey: viewKey,\n            inputColumns: inputColumns,\n            inputParameters: inputParameters,\n            parentParameters: parentParameters\n        }, 'Retrieving view data...', cancelToken);\n    }\n\n    previewDashboard(dashboard: DexihDashboard, inputParameters: DexihInputParameter[], cancelToken: CancelToken):\n    Promise<{dashboardItemKey: string, dataKey: string}[]> {\n\n        let remoteAgent = this.getRemoteAgentCurrent();\n\n        if (!remoteAgent) {\n            let message = new Message(false, 'No active remote agent.', null, null);\n            this.addHubMessage(message);\n            return Promise.reject(message);\n        }\n\n        return new PromiseWithCancel<{dashboardItemKey: string, dataKey: string}[]>((resolve, reject) => {\n            this.authService.getBestDownloadUrl(remoteAgent, 0).then(url => {\n                this.hubPost<{dashboardItemKey: string, dataKey: string}[]>('/api/Hub/PreviewDashboard', {\n                    hubKey: this._hubKey,\n                    remoteAgentId: this.getCurrentRemoteAgentId(),\n                    downloadUrl: url,\n                    dashboard: dashboard,\n                    inputParameters: inputParameters,\n                }, 'Retrieving dashboard data...').then(urls => {\n                    resolve(urls);\n                }).catch(reason => reject(reason));\n            }).catch(reason => reject(reason));\n        });\n    }\n\n    previewListOfValues(listOfValues: DexihListOfValues, resetCache: boolean, cancelToken: CancelToken):\n        PromiseWithCancel<ListOfValuesItem[]> {\n        if (listOfValues.sourceType === eLOVObjectType.Static) {\n            return new PromiseWithCancel<ListOfValuesItem[]>((resolve) => {\n                resolve(listOfValues.staticData);\n            });\n        }\n\n        return this.hubPostRemote<ListOfValuesItem[]>('/api/Hub/PreviewListOfValues', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(),\n            listOfValues: listOfValues,\n            resetCache: resetCache\n        }, 'Getting list of values...', cancelToken);\n    }\n\n    previewListOfValuesKey(listOfValuesKey: number, resetCache: boolean, cancelToken: CancelToken): PromiseWithCancel<ListOfValuesItem[]> {\n        let hub: DexihHub = this._hubCache.value.hub;\n        let listOfValues = hub.dexihListOfValues.find(c => c.key === listOfValuesKey);\n\n        if (listOfValues.sourceType === eLOVObjectType.Static) {\n            return new PromiseWithCancel<ListOfValuesItem[]>((resolve) => {\n                resolve(listOfValues.staticData);\n            });\n        }\n\n        return this.hubPostRemote<ListOfValuesItem[]>('/api/Hub/PreviewListOfValuesKey', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(),\n            listOfValuesKey: listOfValuesKey,\n            resetCache: resetCache\n        }, 'Getting list of values...', cancelToken);\n    }\n\n    // downloads a dataset from the provided url\n    downloadUrlData(url: string, cancelToken: CancelToken): PromiseWithCancel<PreviewResults> {\n        let promise = new PromiseWithCancel<PreviewResults>((resolve, reject) => {\n                let httpPromise = this.authService.getFromExternal<PreviewResults>(url, null, cancelToken);\n                httpPromise.then(data => {\n                    if (data['success'] === false) {\n                        this.addHubMessage(data);\n                        reject(data['message']);\n                    } else {\n                        let columns = this.authService.constructDataTableColumns(data.columns);\n                        resolve({\n                            name: data.name,\n                            columns: columns,\n                            data: data.data,\n                            transformProperties: data.transformProperties,\n                            status: data.status,\n                            viewConfig: data.viewConfig\n                        });\n                        return;\n                    }\n                }).catch(reason => {\n                    this.addHubMessage(reason.error);\n                    reject(reason.error);\n                });\n            }, cancelToken);\n\n        return promise;\n    }\n\n    datalinkProperties(datalinkKey: number, selectQuery: SelectQuery, inputColumns: InputColumn[], cancelToken: CancelToken):\n    Promise<TransformProperties> {\n        return this.hubPostRemote<TransformProperties>('/api/Hub/DatalinkProperties', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(),\n            datalinkKey: datalinkKey,\n            selectQuery: selectQuery,\n            inputColumns: inputColumns,\n        }, 'Getting datalinks properties...', cancelToken);\n\n    }\n\n    previewProfileData(writerResult: TransformWriterResult, summaryOnly: boolean, cancelToken: CancelToken):\n        PromiseWithCancel<{ columns: Array<any>, data: Array<any> }> {\n\n        if (!writerResult.profileTableName) {\n            let message = new Message(false, 'This result does not contain profile data.', null, null);\n            this.addHubMessage(message);\n            Promise.reject(message);\n        }\n\n        const hub = this._hubCache.value.hub;\n        let connection = hub.dexihConnections.find(c => c.key === writerResult.auditConnectionKey);\n\n        return this.getData('/api/Hub/PreviewProfile', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(),\n            auditKey: writerResult.auditKey,\n            profileTableName: writerResult.profileTableName,\n            connection: connection,\n            summaryOnly: summaryOnly,\n        }, 'Retrieving profile data...', cancelToken);\n    }\n\n    downloadData(downloadObjects: Array<DownloadObject>, zipFiles: boolean, downloadFormat: eDownloadFormat, cancelToken: CancelToken):\n        Promise<boolean> {\n\n        return new Promise<boolean>((resolve, reject) => {\n            this.hubPostRemote<ManagedTask>('/api/Hub/DownloadSharedData', {\n                connectionId: this.authService.getWebSocketConnectionId(),\n                downloadFormat: downloadFormat,\n                zipFiles: zipFiles,\n                downloadObjects: downloadObjects,\n            }, 'Downloading shared data...', cancelToken).then(task => {\n                this.authService.addUpdateTask(task);\n                this.addHubSuccessMessage('The download task has started.');\n                resolve(true);\n            });\n        });\n    }\n\n    downloadTableData(table: DexihTable, showRejectedData, selectQuery: SelectQuery, inputColumns: InputColumn[],\n        zipFiles: boolean, downloadFormat: eDownloadFormat, cancelToken: CancelToken):\n        Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            this.hubPostRemote<ManagedTask>('/api/Hub/DownloadTableData', {\n                hubKey: this._hubKey,\n                remoteAgentId: this.getCurrentRemoteAgentId(),\n                connectionId: this.authService.getWebSocketConnectionId(),\n                table: table,\n                showRejectedData: showRejectedData,\n                selectQuery: selectQuery,\n                inputColumns: inputColumns,\n                downloadFormat: downloadFormat,\n                zipFiles: zipFiles,\n                }, 'Downloading table data...', cancelToken).then(task => {\n                    this.authService.addUpdateTask(task);\n                    this.addHubSuccessMessage('The download task has started.');\n                    resolve(true);\n                });\n            });\n    }\n\n    downloadDatalinkData(datalink: DexihDatalink, datalinkTransformKey: number, selectQuery: SelectQuery, inputColumns: InputColumn[],\n        zipFiles: boolean, downloadFormat: eDownloadFormat, cancelToken: CancelToken):\n    Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            this.hubPostRemote<ManagedTask>('/api/Hub/DownloadDatalinkData', {\n                hubKey: this._hubKey,\n                remoteAgentId: this.getCurrentRemoteAgentId(),\n                connectionId: this.authService.getWebSocketConnectionId(),\n                datalink: datalink,\n                datalinkTransformKey: datalinkTransformKey,\n                selectQuery: selectQuery,\n                inputColumns: inputColumns,\n                downloadFormat: downloadFormat,\n                zipFiles: zipFiles,\n                }, 'Downloading table data...', cancelToken).then(task => {\n                    this.authService.addUpdateTask(task);\n                    this.addHubSuccessMessage('The download task has started.');\n                    resolve(true);\n                });\n            });\n    }\n\n    downloadProfileData(writerResult: TransformWriterResult, cancelToken: CancelToken): Promise<boolean> {\n        let table = this._hubCache.value.getProfileTable(writerResult.profileTableName, writerResult.auditConnectionKey);\n        return this.downloadTableData(table, false, null, null, false, eDownloadFormat.Csv, cancelToken);\n    }\n\n    deleteColumnValidations(validations: Array<DexihColumnValidation>): Promise<boolean> {\n        let validationNames = validations.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteColumnValidations', {\n            hubKey: this._hubKey,\n            itemKeys: validations.map(c => c.key)\n        }, 'Deleting column validation...', 'This action will delete the following validations, from the hub and cannot be reversed.<p></p>'\n        + validationNames + '<p></p> Are you sure?');\n    }\n\n    // saves the current validation.\n    saveColumnValidation(validation: DexihColumnValidation): Promise<DexihColumnValidation> {\n        return this.hubPost<DexihColumnValidation>('/api/Hub/SaveColumnValidation', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(),\n            validation: validation\n        }, 'Saving column validation...');\n    }\n\n    deleteCustomFunctions(customFunctions: Array<DexihCustomFunction>): Promise<boolean> {\n        let functionNames = customFunctions.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteCustomFunctions', {\n            hubKey: this._hubKey,\n            itemKeys: customFunctions.map(c => c.key)\n        }, 'Deleting custom function(s)...',\n        'This action will delete the following custom functions, from the hub and cannot be reversed.<p></p>'\n                + functionNames + '<p></p> Are you sure?');\n    }\n\n            // tests the connection and refreshes the databases.\n    testCustomFunction(datalinkTransformItem: DexihDatalinkTransformItem,\n        testValues: Array<any>, cancelToken: CancelToken): PromiseWithCancel<Array<any>> {\n        return this.hubPostRemote<Array<any>>('/api/Hub/TestCustomFunction',\n                {value: datalinkTransformItem, testValues: testValues}, 'Testing custom function...', cancelToken);\n    }\n\n        // tests the connection and refreshes the databases.\n    downloadCustomFunction(datalinkTransformItem: DexihDatalinkTransformItem, testValues: Array<any>): Promise<Array<any>> {\n        return new Promise<Array<any>>((resolve, reject) => {\n            const cache = this._hubCache.value;\n\n            this.authService.downloadFile('/api/Hub/DownloadFunctionCode',\n                { hubKey: cache.hub.hubKey, datalinkTransformItem, testValues}, 'CustomFunction.zip', 'application/zip').then(() => {\n                    this.addHubSuccessMessage('The custom function code has been downloaded.');\n                }).catch(reason => {\n                    this.addHubMessage(reason);\n                    reject(reason);\n                });\n\n        });\n    }\n\n    deleteFileFormats(validations: Array<DexihFileFormat>): Promise<boolean> {\n        let fileFormatNames = validations.map(c => c.name).join('<br>>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteFileFormats', {\n            hubKey: this._hubKey,\n            itemKeys: validations.map(c => c.key)\n        }, 'Deleting file format(s)...',\n        'This action will delete the following file formats, from the hub and cannot be reversed.<p></p>' +\n                fileFormatNames + '<p></p>Are you sure?');\n    }\n\n\n            // tests the connection and refreshes the databases.\n    testColumnValidation(columnValidation: DexihColumnValidation, testValue: string, cancelToken: CancelToken):\n        PromiseWithCancel<{success: boolean, cleanedValue: string, rejectReason: string}> {\n            return this.hubPostRemote<{success: boolean, cleanedValue: string, rejectReason: string}>('/api/Hub/TestColumnValidation',\n                {value: columnValidation, testValue: testValue}, 'Testing column validation...', cancelToken);\n    }\n\n\n    deleteHubVariables(variables: Array<DexihHubVariable>): Promise<boolean> {\n        let variableNames = variables.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteHubVariables', {\n            hubKey: this._hubKey,\n            itemKeys: variables.map(c => c.key)\n        }, 'Deleting hub variable(s)...',\n        'This action will delete the following variables, from the hub and cannot be reversed.<p></p>' +\n            variableNames + '<p></p>Are you sure?');\n    }\n\n    deleteDatalinkTests(items: Array<DexihDatalinkTest>): Promise<boolean> {\n        let itemNames = items.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteDatalinkTests', {\n            hubKey: this._hubKey,\n            itemKeys: items.map(c => c.key)\n        }, 'Deleting datalink test(s)...',\n        'This action will delete the following datalink tests, from the hub and cannot be reversed.<p></p>' +\n        itemNames + '<p></p>Are you sure?');\n    }\n\n    newDatalinkTest(name: string, datalinkKeys: Array<number>, auditConnectionKey: number, targetConnectionKey: number,\n        sourceConnectionKey: number): Promise<DexihDatalinkTest> {\n\n            return this.hubPost<DexihDatalinkTest>('/api/Hub/NewDatalinkTest', {\n                hubKey: this._hubKey,\n                remoteAgentId: this.getCurrentRemoteAgentId(),\n                connectionId: this.authService.getWebSocketConnectionId(),\n                name,\n                datalinkKeys,\n                auditConnectionKey,\n                targetConnectionKey,\n                sourceConnectionKey,\n            }, 'New Datalink test...');\n    }\n\n    runDatalinkTestSnapshot(items: Array<DexihDatalinkTest>, cancelToken: CancelToken): Promise<boolean> {\n        let itemNames = items.map(c => c.name).join('<br>');\n\n        return this.hubPostRemoteConfirm('/api/Hub/RunDatalinkTestSnapshot', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(),\n            connectionId: this.authService.getWebSocketConnectionId(),\n            datalinkTestKeys: items.map(c => c.key)\n        }, 'Running datalink test snapshot...',\n        // tslint:disable-next-line:max-line-length\n        'This action will delete all data in the test tables, and refresh them with the actual data in the datalink source/target tables.  This cannot be reversed.<p></p>' +\n        itemNames + '<p></p>Are you sure?', cancelToken);\n    }\n\n    setNewDatajob(datalinks: Array<DexihDatalink>) {\n        const datajob = this.createDefaultDatajob();\n        datajob.key = 0;\n\n        let stepKey = -1;\n        datalinks.forEach(datalink => {\n            const step = new DexihDatalinkStep();\n            step.name = datalink.name;\n            step.key = stepKey--;\n            step.datalinkKey = datalink.key;\n            step.isValid = true;\n\n            datajob.dexihDatalinkSteps.push(step);\n        });\n\n        this.newDatajob = datajob;\n    }\n\n    createDefaultDatajob(): DexihDatajob {\n        const datajob = new DexihDatajob();\n        let hub: DexihHub = this._hubCache.value.hub;\n\n        let managedConnections = hub.dexihConnections.filter(c => c.purpose === eConnectionPurpose.Managed)\n\n        if (managedConnections.length > 0) {\n            datajob.auditConnectionKey = managedConnections[0].key;\n        }\n\n        return datajob;\n    }\n\n    getLocalPath(table: DexihTable, flatFilePath: eFlatFilePath): string {\n        let connection = this._hubCache.value.getConnection(table.connectionKey)\n\n        let subdirectory: string;\n\n        if (table.useCustomFilePaths) {\n            switch (flatFilePath) {\n                case eFlatFilePath.Incoming:\n                    subdirectory = table.fileIncomingPath;\n                    break;\n                case eFlatFilePath.Processed:\n                    subdirectory = table.fileProcessedPath;\n                    break;\n                case eFlatFilePath.Rejected:\n                    subdirectory = table.fileRejectedPath;\n                    break;\n                case eFlatFilePath.Outgoing:\n                    subdirectory = table.fileOutgoingPath;\n                break;\n            }\n        } else {\n            subdirectory = flatFilePath.toString();\n        }\n\n        return this.fixTrailingSlash(connection.server) +\n            this.fixTrailingSlash(connection.defaultDatabase) +\n            this.fixTrailingSlash(table.fileRootPath) +\n            this.fixTrailingSlash(subdirectory);\n    }\n\n    private fixTrailingSlash(value: string) {\n        if (!value) {\n            return '';\n        } else if (value.endsWith('/')) {\n            return value;\n        } else {\n            return value + '/';\n        }\n    }\n\n    createPaths(table: DexihTable, cancelToken: CancelToken): PromiseWithCancel<boolean> {\n        return this.hubPostRemote<boolean>('/api/Hub/CreateFilePaths', {value: table}, 'Creating files paths..', cancelToken);\n    }\n\n    getFileList(table: DexihTable, flatFilePath: eFlatFilePath, cancelToken: CancelToken): PromiseWithCancel<Array<FileProperties>> {\n        return this.hubPostRemote<Array<FileProperties>>('/api/Hub/GetFileList', {value: table, path: flatFilePath}, 'Getting files list...'\n        , cancelToken);\n    }\n\n    deleteFiles(table: DexihTable, flatFilePath: eFlatFilePath, files: Array<string>, cancelToken: CancelToken):\n    PromiseWithCancel<boolean> {\n        let fileNames = '<p>' + files.map(c => c).join('</p><p>') + '</p>';\n\n        return this.hubPostRemoteConfirm<boolean>('/api/Hub/DeleteFiles',\n        {value: table, path: flatFilePath, files: files}, 'Deleting files...',\n        'This action will delete the following files, from the connection and cannot be reversed.<p></p>' +\n            fileNames + '<p></p>Are you sure?',\n                    cancelToken);\n    }\n\n    moveFiles(table: DexihTable, fromFilePath: eFlatFilePath, toFilePath: eFlatFilePath, files: Array<string>, cancelToken: CancelToken):\n        PromiseWithCancel<boolean> {\n        return this.hubPostRemote<boolean>('/api/Hub/MoveFiles', {\n            value: table, fromPath: fromFilePath,\n            toPath: toFilePath,\n            files: files}, 'Moving files...', cancelToken);\n    }\n\n    downloadFiles(table: DexihTable, flatFilePath: eFlatFilePath, files: Array<string>, cancelToken: CancelToken):\n    Promise<boolean> {\n\n        return new Promise<boolean>((resolve, reject) => {\n            this.hubPostRemote<ManagedTask>('/api/Hub/DownloadFiles', {\n                hubKey: this._hubKey,\n                connectionId: this.authService.getWebSocketConnectionId(),\n                remoteAgentId: this.getCurrentRemoteAgentId(),\n                tableKey: table.key,\n                path: flatFilePath,\n                files: files,\n            }, 'Downloading files...', cancelToken).then(task => {\n                this.authService.addUpdateTask(task);\n                resolve(true);\n            }).catch(reason => reject(reason));\n        });\n    }\n\n    uploadFile(table: DexihTable, filePath: eFlatFilePath, updateStrategy: eUpdateStrategy, fileName: string, cancelToken: CancelToken):\n    Promise<string> {\n        return new Promise<string>((resolve, reject) => {\n            let remoteAgent = this.getRemoteAgentCurrent();\n            this.authService.postRemoteUpload('/api/Hub/UploadFile', {\n                hubKey: this._hubKey,\n                remoteAgentId: remoteAgent.instanceId,\n                connectionId: this.authService.getWebSocketConnectionId(),\n                tableKey: table.key,\n                path: filePath,\n                updateStrategy: updateStrategy,\n                fileName: fileName,\n            }, remoteAgent, 'Uploading file...', cancelToken).then(url => {\n                resolve(url.url + '/file/' + fileName);\n            });\n        });\n    }\n\n    bulkUploadFiles(connectionKey: number, fileFormatKey: number, formatType: eTypeCode,\n        includeFileName: boolean, includeFileDate: boolean, includeFileRowNumber: boolean,\n        fileName: string, cancelToken: CancelToken):\n    Promise<{url: string, reference: string}> {\n        return new Promise<{url: string, reference: string}>((resolve, reject) => {\n            let remoteAgent = this.getRemoteAgentCurrent();\n            this.authService.postRemoteUpload('/api/Hub/BulkUploadFile', {\n                hubKey: this._hubKey,\n                remoteAgentId: remoteAgent.instanceId,\n                connectionId: this.authService.getWebSocketConnectionId(),\n                connectionKey: connectionKey,\n                fileFormatKey: fileFormatKey,\n                formatType: formatType,\n                includeFileName,\n                includeFileDate,\n                includeFileRowNumber,\n                fileName: fileName,\n            }, remoteAgent, 'Uploading file...', cancelToken).then(url => {\n                resolve({reference: url.key, url: url.url + '/file/' + fileName});\n            }).catch(reason => reject(reason));\n        });\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ButtonsModule} from './buttons/buttons.module';\nimport { WidgetsModule} from './widgets/widgets.module';\nimport { TablePreviewDataComponent } from './table/table-preview-data/table-preview-data.component';\nimport { FileFormatEditComponent } from './fileFormat';\nimport { ViewEditComponent } from './view';\n\n@NgModule({\n    imports: [\n        SharedModule,\n        ReactiveFormsModule,\n        ButtonsModule,\n        WidgetsModule\n    ],\n    declarations: [\n        TablePreviewDataComponent,\n        FileFormatEditComponent,\n        ViewEditComponent\n    ],\n    exports: [\n        ButtonsModule,\n        WidgetsModule\n    ]\n})\nexport class HubSharedModule {\n\n}\n","export { HubService } from './hub.service';\nexport { HubModule } from './hub.module';\nexport { HubComponent } from './hub.component';\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable, combineLatest} from 'rxjs';\n\nexport interface CanComponentDeactivate {\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\n}\n\n@Injectable()\nexport class ItemEditGuard implements CanDeactivate<CanComponentDeactivate> {\n\n  canDeactivate(component: CanComponentDeactivate) {\n    return component && component.canDeactivate ? component.canDeactivate() : true;\n  }\n\n}\n","export * from './summary.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubCache, sharedObjectProperties } from '../hub.models';\nimport { HubService } from '../hub.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { logoSmallUrl } from '../../+auth/auth.models';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { DexihActiveAgent, eConnectionPurpose } from '../../shared/shared.models';\nimport { AuthService } from '../../+auth/auth.service';\n\n@Component({\n  selector: 'dexih-summary',\n  templateUrl: './summary.component.html',\n})\nexport class SummaryComponent implements OnInit, OnDestroy {\n  private _subscription: Subscription;\n  public hubCache: HubCache;\n\n  public datalinkFilterString;\n  public connectionFilterString;\n  public columnValidationFilterString;\n  public fileFormatFilterString;\n  public datajobFilterString;\n  public tableFilterString;\n\n  public remoteAgent: DexihActiveAgent;\n\n  logoSmallUrl = logoSmallUrl;\n  sharedObjectProperties = sharedObjectProperties;\n\n  public noManagedConnection = false;\n  constructor(public hubService: HubService, public authService: AuthService) { }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.hubService.getHubCacheObservable(),\n        this.hubService.getRemoteAgentObservable(),\n      ).subscribe(result => {\n        this.hubCache = result[0];\n        this.remoteAgent = result[1];\n\n        if (this.hubCache.isLoaded()) {\n          if (this.hubCache.hub.dexihConnections.findIndex(c => c.purpose === eConnectionPurpose.Managed) >= 0) {\n            this.noManagedConnection = false;\n          } else {\n            this.noManagedConnection = true;\n          }\n        }\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Summary');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n  }\n\n  onDatalinkFilterString(filterString: string) {\n    this.datalinkFilterString = filterString;\n  }\n  onConnectionFilterString(filterString: string) {\n    this.connectionFilterString = filterString;\n  }\n  onColumnValidationFilterString(filterString: string) {\n    this.columnValidationFilterString = filterString;\n  }\n  onFileFormatFilterString(filterString: string) {\n    this.fileFormatFilterString = filterString;\n  }\n  onDatajobFilterString(filterString: string) {\n    this.datajobFilterString = filterString;\n  }\n  onTableFilterString(filterString: string) {\n    this.tableFilterString = filterString;\n  }\n}\n","<div class=\"container-fluid\" *ngIf=\"hubCache?.hub\">\n    <div class=\"d-flex align-items-center p-3 my-3 text-white-50 bg-secondary rounded\">\n        <img class=\"mr-3\" [src]=\"logoSmallUrl\" alt=\"\" width=\"48\" height=\"48\">\n        <div class=\"lh-100\">\n            <h3 class=\"mb-0 text-white lh-100\">{{hubCache.hub.name}}</h3>\n            <h5 *ngIf=\"hubCache.hub.description\" class=\"mb-0 text-white lh-100\">\n                <markdown [data]=\"hubCache.hub.description\" (click)=\"authService.getRoute(event)\"></markdown>\n            </h5>\n        </div>\n    </div>\n\n    <div class=\"alert alert-warning\" *ngIf=\"noManagedConnection && hubCache.canWrite\">\n        Warning: <b>No Managed connection!</b> A managed connection for auditing data and\n        staging tables. To run any datalink you must\n        have a least one managed connection. Note, if you do not have access to a database use the Sqlite connection to\n        create\n        a local database file.\n        <hr>\n        <dexih-button-new buttonClass=\"btn btn-primary text-white\" [routerLink]=\"['connection-new', '2']\"\n            text=\"New Managed Connection\"></dexih-button-new>\n    </div>\n\n    <div class=\"card-deck\">\n        <div class=\"card mb-3\" style=\"min-width: 18rem;\">\n            <div class=\"card-header text-white bg-success\"><i class=\"fa fa-lg fa-fw fa-life-saver\"></i>Common Actions\n            </div>\n            <div class=\"card-body p-0\">\n                <ul class=\"list-group\">\n                        <li routerLink=\"search\" class=\"list-group-item rounded-0\">\n                            <div class=\"d-flex justify-content-between align-items-center\">\n                                <div>\n                                    <i class=\"fa fa-lg fa-fw fa-search\"></i>\n                                    Search\n                                </div>\n                            </div>\n                            <div class=\"small\">Search for objects within the hub.</div>\n                        </li>\n                        <li routerLink=\"sharedData\" class=\"list-group-item  rounded-0\">\n                            <div class=\"d-flex justify-content-between align-items-center\">\n                                <div>\n                                    <i class=\"fa fa-lg fa-fw fa-newspaper-o\"></i>\n                                    Shared Data\n                                </div>\n                            </div>\n                            <div class=\"small\">Tables and datalinks in the hub which have been shared.</div>\n                        </li>\n                        <li routerLink=\"datalinks/results\" class=\"list-group-item  rounded-0\">\n                            <div class=\"d-flex justify-content-between align-items-center\">\n                                <div>\n                                    <i class=\"fa fa-lg fa-fw fa-tasks\"></i>\n                                    Datalink/Datajob results\n                                </div>\n                            </div>\n                            <div class=\"small\">Recent execution summaries from datalink and datajobs.</div>\n                        </li>\n                        <li *ngIf=\"hubCache.canAdministrate\" routerLink=\"manage/manage-users\" class=\"list-group-item  rounded-0\">\n                            <div class=\"d-flex justify-content-between align-items-center\">\n                                <div>\n                                    <i class=\"fa fa-lg fa-fw fa-birthday-cake\"></i>\n                                    Manage Hub Users\n                                </div>\n                            </div>\n                            <div class=\"small\">Invite users and manage user permissions for this hub.</div>\n                        </li>\n                        <li *ngIf=\"hubCache.canAdministrate\" routerLink=\"agents\" class=\"list-group-item  rounded-0\">\n                            <div class=\"d-flex justify-content-between align-items-center\">\n                                <div>\n                                    <i class=\"fa fa-lg fa-fw fa-wifi\"></i>\n                                    Manage Remote Agents\n                                </div>\n                            </div>\n                            <div class=\"small\">Add and remove remote agents access to this hub.</div>\n                        </li>\n                    <li routerLink=\"files/manage\" class=\"list-group-item  rounded-0\">\n                        <div class=\"d-flex justify-content-between align-items-center\">\n                            <div>\n                                <i class=\"fa fa-lg fa-fw fa-upload\"></i>\n                                Manage Files\n                            </div>\n                        </div>\n                        <div class=\"small\">Upload and download files in an existing table definition</div>\n                    </li>\n                    <li routerLink=\"files/bulk-load\" class=\"list-group-item  rounded-0\">\n                        <div class=\"d-flex justify-content-between align-items-center\">\n                            <div>\n                                <i class=\"fa fa-lg fa-fw fa-files-o\"></i>\n                                Bulk Load Files\n                            </div>\n                        </div>\n                        <div class=\"small\">Upload multiple file to create automatic table definitions.</div>\n                    </li>\n                    <li routerLink=\"import\" class=\"list-group-item  rounded-0\">\n                        <div class=\"d-flex justify-content-between align-items-center\">\n                            <div>\n                                <i class=\"fa fa-lg fa-fw fa-level-down\"></i>\n                                Import\n                            </div>\n                        </div>\n                        <div class=\"small\">Import items into the current hub from an export file.</div>\n                    </li>\n                    <li routerLink=\"export\" class=\"list-group-item  rounded-0\">\n                        <div class=\"d-flex justify-content-between align-items-center\">\n                            <div>\n                                <i class=\"fa fa-lg fa-fw fa-level-up\"></i>\n                                Export\n                            </div>\n                        </div>\n                        <div class=\"small\">Export items from the current hub to an external file.</div>\n                    </li>\n                    <li routerLink=\"agents\" class=\"list-group-item  rounded-0\">\n                        <div class=\"d-flex justify-content-between align-items-center\">\n                            <div>\n                                <i class=\"fa fa-lg fa-fw fa-wrench\"></i>\n                                Remote Agents\n                            </div>\n                        </div>\n                        <div class=\"small\">Manage which remote agents are authorized to access the hub.</div>\n                    </li>\n                </ul>\n            </div>\n        </div>\n        <div class=\"card mb-3\" style=\"min-width: 18rem;\">\n            <div class=\"card-header text-white bg-danger\"><i class=\"fa fa-lg fa-fw fa-user\"></i>Hub Objects</div>\n            <div class=\"card-body p-0\">\n                <ul class=\"list-group\">\n                    <li *ngFor=\"let sharedObject of sharedObjectProperties\" [routerLink]=\"sharedObject.routerLink\" class=\"list-group-item  rounded-0\">\n                        <div class=\"d-flex justify-content-between align-items-center\">\n                            <div>\n                                <i class=\"fa fa-lg fa-fw {{sharedObject.icon}}\"></i>\n                                {{sharedObject.displayName}}\n                            </div>\n                            <span\n                                class=\"badge badge-primary badge-pill\">{{(hubCache.hub[sharedObject.cacheProperty] | equalFilter :'isValid':true ).length}}\n                            </span>\n                        </div>\n                        <div class=\"small\">{{sharedObject.description}}</div>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n \n\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { eDataObjectType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'table-preview-data',\n    templateUrl: './table-preview-data.component.html'\n})\nexport class TablePreviewDataComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n\n    public key: number;\n\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    public eDataObjectType = eDataObjectType;\n\n    public title = 'Preview Table';\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.params,\n                this.hubService.getHubCacheObservable(true),\n            ).subscribe(result => {\n                let params = result[0];\n                let hubCache = result[1];\n                this.key = +params['tableKey'];\n\n                let table = hubCache.getTable(this.key);\n                if (table) {\n                    this.title = 'Preview Table - ' + table.logicalName;\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Table Preview Data');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n}\n","<div class=\"container-fluid\">\n    <dexih-widget [title]=\"title\" iconClass=\"fa fa-lg fa-fw fa-exchange\" [showCloseButton]=\"true\"\n        (close)=\"close()\">\n        <preview-data [key]='key' [viewSource]='eDataObjectType.Table'></preview-data>\n    </dexih-widget>\n</div>","export * from './view-index/view-index.component';\nexport * from './view-edit/view-edit.component';\n","import { Component, OnInit, OnDestroy, HostListener } from '@angular/core';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\nimport { HubService } from '../../hub.service';\nimport { Subscription, combineLatest, merge, Subject } from 'rxjs';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { InputOutputColumns } from '../../hub.lineage.models';\nimport { CancelToken } from '../../../+auth/auth.models';\nimport { HubCache, ConnectionTables, eCacheStatus } from '../../hub.models';\nimport { eViewType, DexihDatalink, InputColumn, DexihColumnBase, SelectQuery,\n  DexihView, DownloadObject, eDataObjectType, ChartConfig, InputParameterBase, DexihActiveAgent, AnimateConfig } from '../../../shared/shared.models';\nimport { Functions } from '../../../shared/utils/functions';\nimport { FormArray, FormGroup, FormControl } from '@angular/forms';\nimport { parseStackingContexts } from 'html2canvas/dist/types/render/stacking-context';\n\n@Component({\n  selector: 'dexih-view-edit-form',\n  templateUrl: './view-edit.component.html',\n  providers: [HubFormsService]\n})\nexport class ViewEditComponent implements OnInit, OnDestroy {\n  public viewKey: number;\n\n  private hubCache: HubCache;\n  public action: string; // new or edit\n  public pageTitle: string;\n  public params: Params;\n  public remoteAgent: DexihActiveAgent;\n\n  public showEdit = false;\n  public hasEdited = false;\n\n  private _subscription: Subscription;\n  private _formChangeSubscription: Subscription;\n  private _changesSubscription: Subscription;\n\n  private refreshDataSubject: Subject<void> = new Subject<void>();\n\n  sourceTypes = [\n    { key: eDataObjectType.Datalink, name: 'Datalink' },\n    { key: eDataObjectType.Table, name: 'Table' }\n  ];\n\n  eViewType = eViewType;\n  eDataObjectType = eDataObjectType;\n\n  public connectionTables: ConnectionTables[] = [];\n  public datalinks: DexihDatalink[] = [];\n\n  public showChart = false;\n  public inputColumns: InputColumn[];\n  public tableColumns: DexihColumnBase[];\n\n  private isLoaded = false;\n\n  private firstLoad = true;\n  private dialogOpen = false;\n\n  columns: Array<any>;\n  public baseData: Array<any>;\n  public data: Array<any>;\n\n  public animationValues = [];\n  public animationValue;\n  public animationTimer;\n  public animationColumnIndex: number;\n  public animationRowIndex: number;\n  public animationPaused = false;\n\n  private cancelToken = new CancelToken();\n\n  get animateConfig(): AnimateConfig {\n    return this.formsService?.currentForm?.controls.animateConfig.value;\n  }\n  set animateConfig(value: AnimateConfig) {\n    this.formsService?.currentForm?.controls.animateConfig.setValue(value);\n  }\n\n  get selectQuery(): SelectQuery {\n    return this.formsService?.currentForm?.controls.selectQuery.value;\n  }\n  set selectQuery(value: SelectQuery) {\n    this.formsService?.currentForm?.controls.selectQuery.setValue(value);\n  }\n\n  constructor(\n    private hubService: HubService,\n    private authService: AuthService,\n    public formsService: HubFormsService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n        this.hubService.getRemoteAgentObservable()\n      ).subscribe(result => {\n        let data = result[0];\n        this.params = result[1];\n        this.hubCache = result[2];\n        this.remoteAgent = result[3];\n\n        this.action = data['action'];\n        this.pageTitle = data['pageTitle'];\n\n        if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded ) { return; }\n\n        if (this.isLoaded && this.action === 'new') { return; }\n\n        if (this.isLoaded && this.formsService.hasChanged) {\n            this.authService.confirmDialog('Synchronization warning',\n            'The hub was disconnected, meaning this edit could have been changed by another session.  Would you like to discard the current changes, and reload the latest version?')\n            .then(confirm => {\n                if (confirm) {\n                    this.load();\n                }\n            }).catch(() => {\n                return;\n            });\n        } else {\n            this.load();\n        }\n\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'View Edit');\n    }\n  }\n\n  load() {\n    this.isLoaded = true;\n\n    if (this.hubCache && this.hubCache.isLoaded()) {\n      this.connectionTables = this.hubCache.getConnectionTables();\n      this.datalinks = this.hubCache.hub.dexihDatalinks;\n    }\n\n    if (this.action === 'edit') {\n      // get the hub key from the route data, and update the service.\n      this.viewKey = + this.params['viewKey'];\n\n      if (!this.viewKey) {\n        this.hubService.addHubErrorMessage('There was no view specified to edit.');\n      } else {\n        if (!this.hubCache.hub || !this.hubCache.hub.dexihColumnValidations) {\n          this.hubService.addHubErrorMessage('The hub cache is not loaded.');\n        } else {\n\n          let view = this.hubCache.hub.dexihViews.find(c => c.key === this.viewKey);\n\n          // create a copy of the view to avoid changes to the hub cache.\n          view = JSON.parse(JSON.stringify(view));\n          if (view.selectQuery == null) {\n            view.selectQuery = new SelectQuery();\n          }\n\n          if (view.animateConfig == null) {\n            view.animateConfig = new AnimateConfig()\n          }\n          this.inputColumns = view.inputValues;\n          this.showChart = view.viewType === eViewType.Chart;\n\n          this.formsService.view(view);\n\n          this.watchChanges();\n\n          this.getColumns();\n        }\n      }\n    }\n\n    if (this.action === 'new') {\n      let view = new DexihView();\n      view.selectQuery = new SelectQuery();\n      view.animateConfig = new AnimateConfig();\n      this.formsService.view(view);\n      this.watchChanges();\n      this.showEdit = true;\n\n      // update the url with the saved key\n      this._formChangeSubscription = this.formsService.getCurrentFormObservable().subscribe(form => {\n        let key = form.controls.key.value;\n        if (key) {\n          if (history.pushState) {\n            let newUrl = window.location.pathname.replace('/view-new', `/view-edit/${key}`)\n            this.router.navigateByUrl(newUrl);\n            this._formChangeSubscription.unsubscribe();\n          }\n        }\n      });\n    }\n\n  if (this.remoteAgent) {\n    if (!this.firstLoad) {\n      if (!this.dialogOpen) {\n        this.dialogOpen = true;\n        this.authService.confirmDialog('Remote Agent Available',\n          'A remote agent is available, would you like to refresh the data?').then(confirm => {\n            if (confirm) {\n              this.refresh();\n            }\n            this.dialogOpen = false;\n          });\n      }\n    } else {\n      if (this.formsService.currentForm.controls.autoRefresh.value) {\n        this.refresh();\n      }\n    }\n  }\n  }\n\n  watchChanges() {\n    if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n    this._changesSubscription = merge(\n      this.formsService.currentForm.controls.sourceDatalinkKey.valueChanges,\n      this.formsService.currentForm.controls.sourceTableKey.valueChanges\n    ).subscribe(() => {\n      this.reset();\n      this.selectQuery = new SelectQuery();\n      this.animateConfig = new AnimateConfig();\n      this.getColumns();\n      this.refreshDatalink();\n      this.refresh();\n    });\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._formChangeSubscription) { this._formChangeSubscription.unsubscribe(); }\n    if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n    this.cancelToken.cancel();\n  }\n\n  close() {\n    this.authService.navigateUp();\n  }\n\n  toggleChart() {\n    if (this.showChart) {\n      this.showChart = false;\n      this.formsService.currentForm.controls.viewType.setValue(eViewType.Table);\n    } else {\n      this.showChart = true;\n      if (this.formsService.currentForm.controls.chartConfig.value == null) {\n        this.formsService.currentForm.controls.chartConfig.setValue(new ChartConfig());\n      }\n      this.formsService.currentForm.controls.viewType.setValue(eViewType.Chart);\n    }\n  }\n\n  getColumns() {\n\n    let viewForm = this.formsService.currentForm;\n    let viewInputs = <InputColumn[]>viewForm.controls.inputValues.value;\n\n    if (viewForm.controls.sourceType.value === eDataObjectType.Table && viewForm.controls.sourceTableKey.value > 0) {\n      let table = this.hubCache.getTable(viewForm.controls.sourceTableKey.value);\n      if (table) {\n        this.inputColumns = table.dexihTableColumns.filter(c => c.isInput).map(c => {\n          let input = viewInputs.find(i => i.name === c.name);\n          if (input) {\n          } else {\n          }\n          return {\n            datalinkKey: 0, datalinkName: '',\n            name: c.name, logicalName: c.logicalName, dataType: c.dataType, rank: c.rank,\n            value: c.defaultValue, defaultValue: c.defaultValue\n          };\n        }\n        );\n        this.tableColumns = table.dexihTableColumns;\n        return;\n      } else {\n        this.reset();\n      }\n    } else {\n      this.reset();\n    }\n\n    if (viewForm.controls.sourceType.value === eDataObjectType.Datalink && viewForm.controls.sourceDatalinkKey.value > 0) {\n      let datalink = this.datalinks.find(c => c.key === viewForm.controls.sourceDatalinkKey.value);\n      if (datalink) {\n        const ioColumns = new InputOutputColumns();\n        ioColumns.buildInputOutput(this.hubCache, datalink);\n        this.tableColumns = ioColumns.getDatalinkOutputColumns(datalink);\n\n        this.inputColumns = datalink.sourceDatalinkTable.dexihDatalinkColumns.filter(c => c.isInput).map(c => {\n          let input = viewInputs.find(i => i.name === c.name);\n          let value = null;\n          if (input) {\n            value = input.value;\n          } else {\n            value = c.defaultValue;\n          }\n          return {\n            datalinkKey: datalink.key, datalinkName: datalink.name,\n            name: c.name, logicalName: c.logicalName, dataType: c.dataType, rank: c.rank, value: value, defaultValue: c.defaultValue\n          };\n        });\n\n      } else {\n        this.reset();\n      }\n    } else {\n      this.reset();\n    }\n  }\n\n  reset() {\n    this.tableColumns = [];\n    this.inputColumns = [];\n    this.columns = null;\n    this.data = null;\n    this.baseData = null;\n  }\n\n  refreshDatalink() {\n    let viewForm = this.formsService.currentForm;\n\n    // clear current datalink parameters.\n    let viewParameters =  <FormArray> this.formsService.currentForm.controls.parameters;\n    for (let i = viewParameters.controls.length - 1; i >= 0; i--) {\n      if (viewParameters.controls[i].value.datalinkParameterKey) {\n        viewParameters.removeAt(i);\n      }\n    }\n\n    if (viewForm.controls.sourceType.value === eDataObjectType.Datalink && viewForm.controls.sourceDatalinkKey.value > 0) {\n      let datalink = this.datalinks.find(c => c.key === viewForm.controls.sourceDatalinkKey.value);\n      if (datalink) {\n        let datalinkParameters = datalink.parameters;\n\n        // add the datalink parameter back again.\n        for (let datalinkParameter of datalinkParameters) {\n          let parameter = Object.assign({}, datalinkParameter);\n          parameter['datalinkParameterKey'] = datalinkParameter.key;\n          parameter.key = this.hubCache.getNextSequence();\n          let parameterForm = this.formsService.parameter(parameter);\n          viewParameters.push(parameterForm);\n        }\n      }\n    }\n  }\n\n  refresh() {\n    let viewForm = this.formsService.currentForm;\n    let parameters: InputParameterBase[] = [];\n\n    let viewParameters =  (<FormGroup> this.formsService.currentForm.controls.parameters).getRawValue();\n\n    if (viewParameters) {\n      parameters = parameters.concat(viewParameters);\n    }\n\n    let view = <DexihView>viewForm.value;\n    view.selectQuery = viewForm.controls.selectQuery.value;\n    view.animateConfig = viewForm.controls.animateConfig.value;\n\n    if ((view.sourceType === eDataObjectType.Table && view.sourceTableKey > 0) ||\n      (view.sourceType === eDataObjectType.Datalink && view.sourceDatalinkKey > 0)) {\n\n      this.hubService.previewView(view, this.inputColumns, parameters, this.cancelToken).then((result) => {\n        this.refreshDataSubject.next();\n        this.columns = result.columns;\n        this.baseData = result.data;\n\n        if (!this.animateConfig.seriesColumn) {\n        //   this.initializeAnimation();\n        // } else {\n          this.data = this.baseData;\n        }\n      }).catch(() => {\n      });\n    }\n  }\n\n  download(format) {\n    let view = <DexihView>this.formsService.currentForm.value;\n    let downloadObject = new DownloadObject();\n    if (view.sourceType === eDataObjectType.Datalink) {\n      downloadObject.objectKey = view.sourceDatalinkKey;\n      downloadObject.objectType = eDataObjectType.Datalink;\n    }\n    if (view.sourceType === eDataObjectType.Table) {\n      downloadObject.objectKey = view.sourceTableKey;\n      downloadObject.objectType = eDataObjectType.Table;\n    }\n\n    downloadObject.query = this.selectQuery;\n    this.hubService.downloadData([downloadObject], false, format, this.cancelToken)\n  }\n\n  hasChanged() {\n    this.formsService.markAsChanged();\n  }\n\n  parameterChange() {\n    if (this.formsService.currentForm.controls.autoRefresh.value) {\n      this.refresh();\n    }\n  }\n\n  toggleEdit() {\n    this.showEdit = !this.showEdit;\n    this.hasEdited = true;\n  }\n\n  public canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>((resolve) => {\n      if (this.hasEdited && this.formsService.hasChanged) {\n        this.authService.confirmDialog('The view has not been saved',\n          'The view changes have not been saved.  Do you want to discard the changes and exit?')\n          .then((confirm) => {\n            resolve(confirm);\n          }).catch(() => {\n            resolve(false);\n          });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  // @HostListener allows is to guard against browser refresh, close, etc.\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.hasEdited && this.formsService.hasChanged) {\n      $event.returnValue = 'The view changes have not been saved.  Do you want to discard the changes and exit?';\n    }\n  }\n}\n","<div class=\"container\" *ngIf=\"formsService\">\n\t<dexih-widget title=\"Edit View\" iconClass=\"fa fa-lg fa-fw fa-bar-chart\" [showCloseButton]=\"true\" [padding]=\"false\"\n\t (close)=\"close()\">\n\t\t<ng-template #header>\n\t\t\t<dexih-invalid-form-details [control]=\"formsService.currentForm\" (click)=\"formsService.showErrors()\" class=\"mr-1\"></dexih-invalid-form-details>\n\t\t\t<dexih-button-refresh class=\"mr-1\" (click)=\"refresh()\" text=\"Reload\"></dexih-button-refresh>\n\t\t\t<download-button class=\"mr-1\" (download)=\"download($event)\"></download-button>\n\t\t\t\n\t\t\t<div class=\"btn-group btn-group-toggle mr-1\" data-toggle=\"buttons\" title=\"Table\">\n\t\t\t\t<label class=\"btn btn-primary\" [ngClass]=\"{active: showChart===false}\">\n\t\t\t\t\t<input type=\"radio\" name=\"options\" value=\"table\" autocomplete=\"off\" (click)=\"toggleChart()\">\n\t\t\t\t\t<i class=\"fa fa-table\"></i>\n\t\t\t\t</label>\n\t\t\t\t<label class=\"btn btn-primary\" [ngClass]=\"{active: showChart===true}\" title=\"Chart\">\n\t\t\t\t\t<input type=\"radio\" name=\"options\" value=\"chart\" autocomplete=\"off\" (click)=\"toggleChart()\">\n\t\t\t\t\t<i class=\"fa fa-bar-chart\"></i>\n\t\t\t\t</label>\n\t\t\t</div>\n\n\t\t\t<save-button *ngIf=\"hubCache.canWrite\" [formsService]=\"formsService\" class=\"mr-1\"></save-button>\n\t\t\t<dexih-button-edit class=\"mr-1\" (click)=\"toggleEdit()\" [text]=\"showEdit ? 'Hide Edit' : 'Edit'\"></dexih-button-edit>\n\t\t\t<cancel-button [formsService]=\"formsService\"></cancel-button>\n\t\t</ng-template>\n\n\t\t<dexih-widget-section *ngIf=\"formsService.currentForm && (showEdit || formsService.currentForm?.controls.parameters.length > 0 || datalinkParameters?.length > 0)\" title=\"Properties\" [showExpandButton]=\"true\">\n\t\t<form *ngIf=\"showEdit\" [formGroup]=\"formsService.currentForm\">\n\t\t\t<fieldset>\n\t\t\t\t<section>\n\t\t\t\t\t<form-input label=\"View Name\" formControlName=\"name\" placeholder=\"Enter the view name.\" [autocapitalize]=\"on\" iconClass=\"fa fa-list\"\n\t\t\t\t\t [errors]=\"formsService.formErrors['name']\">\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<form-textarea label=\"Description\" [showMarkdown]=\"true\" formControlName=\"description\" placeholder=\"Enter the description.\">\n\t\t\t\t\t</form-textarea>\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t<form-select label=\"Data Source Type\" formControlName=\"sourceType\" [items]=\"sourceTypes\" itemKey=\"key\" itemName=\"name\"\n\t\t\t\t\t\t\t iconClass=\"fa fa-database\" note='Specify the source type for this view' [enableFilter]=\"false\">\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<section class=\"form-group col-md-6\" *ngIf=\"formsService.currentForm.value.sourceType == eDataObjectType.Table\">\n\t\t\t\t\t\t\t<form-select label=\"Source Table\" formControlName=\"sourceTableKey\" [errors]=\"errors?.sourceTableKey\" [items]=\"connectionTables\"\n\t\t\t\t\t\t\t parentName=\"name\" childItems=\"dexihTables\" itemKey=\"key\" itemName=\"logicalName\" note=\"Select the source table\">\n\t\t\t\t\t\t\t <table-edit-button [key]=\"formsService.currentForm.controls.sourceTableKey.value\"></table-edit-button>\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<section class=\"form-group col-md-6\" *ngIf=\"formsService.currentForm.value.sourceType == eDataObjectType.Datalink\">\n\t\t\t\t\t\t\t<form-select label=\"Source Datalink\" formControlName=\"sourceDatalinkKey\" [errors]=\"errors?.sourceDatalinkKey\"\n\t\t\t\t\t\t\t [items]=\"datalinks\" itemKey=\"key\" itemName=\"name\" note='Select the source datalink'>\n\t\t\t\t\t\t\t <datalink-edit-button [key]=\"formsService.currentForm.controls.sourceDatalinkKey.value\"></datalink-edit-button>\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t\t<dexih-button-refresh (click)=\"refreshDatalink()\" text=\"Refresh Parameters\"></dexih-button-refresh>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<form-checkbox formControlName=\"autoRefresh\" label=\"Automatically refresh data when view is opened\"></form-checkbox>\n\t\t\t\t\t<form-checkbox label=\"View is shared in the catalog to users with read access.\" formControlName=\"isShared\">\n\t\t\t\t\t</form-checkbox>\n\t\n\t\t\t\t</section>\n\n\t\t\t</fieldset>\n\t\t</form>\n\n\t\t<input-parameters [showEdit]=\"showEdit\" [parameters]=\"formsService.currentForm?.controls.parameters\" [formsService]=\"formsService\" [refreshEvent]=\"refreshDataSubject.asObservable()\" (onRefreshData)=\"refresh()\" (onChange)=\"parameterChange()\"></input-parameters>\n\n\t\t<div class=\"mt-3\"  *ngIf=\"!data || data.length === 0\">\n\t\t\t<dexih-button-refresh  class=\"mr-1\" (click)=\"refresh()\" text=\"Reload\" [autoCompact]=\"false\"></dexih-button-refresh>\n\t\t</div>\n\n\t\t</dexih-widget-section>\n\n\t\t<dexih-widget-section  *ngIf=\"inputColumns && inputColumns.length > 0\" title=\"InputColumns\" [showExpandButton]=\"true\">\n\t\t\t<span *ngFor=\"let column of inputColumns; let i = index\" class=\"input-group\">\n\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t<div class=\"input-group-text\">\n\t\t\t\t\t\t{{column.logicalName}}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<form-input name=\"column{{i}}\" class=\"form-control p-0\" [placeholder]=\"'Enter ' + column.logicalName\" [(ngModel)]=\"column.value\"></form-input>\n\t\t\t</span>\n\t\t</dexih-widget-section>\n\n\t\t<series-animate [showEdit]=\"showEdit\" [animateConfig]=\"animateConfig\" [columns]=\"columns\" (hasChanged)=\"hasChanged()\" [baseData]=\"baseData\" [(data)]=\"data\"></series-animate>\n\n\t\t<dexih-widget-section  *ngIf=\"showEdit\" title=\"Query Configuration\" [showExpandButton]=\"true\">\n\t\t\t<query-builder  [selectQuery]=\"formsService.currentForm.controls.selectQuery.value\" [columns]=\"tableColumns\" [inputColumns]=\"inputColumns\" [parameters]=\"formsService.currentForm.controls.parameters.value\" (hasChanged)=\"hasChanged()\" [refreshEvent]=\"refreshDataSubject.asObservable()\" (onRefreshData)=\"refresh()\"></query-builder>\n\t\t</dexih-widget-section>\n\n\t\t<ng-template [ngIf]=\"columns?.length > 0 && data?.length > 0\">\n\t\t\t<dexih-table *ngIf=\"!showChart\" [enableMultiSelect]=\"false\" [enableSaveCsv]=\"true\" [columns]=\"columns\" [data]=\"data\" [hideTable]=\"showChart\">\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<dexih-button-refresh class=\"mr-1\" (click)=\"refresh()\" text=\"Reload\"></dexih-button-refresh>\n\t\t\t\t</ng-template>\n\t\t\t</dexih-table>\n\n\t\t\t<div *ngIf=\"showChart\">\n\t\t\t<chart-builder \n\t\t\t\t[title]=\"formsService.currentForm.controls.name.value\" \n\t\t\t\t[columns]=\"columns\" \n\t\t\t\t[data]=\"data\" \n\t\t\t\t[config]=\"formsService.currentForm.controls.chartConfig.value\"\n\t\t\t\t[showEdit]=\"showEdit\"\n\t\t\t\t(hasChanged)=\"hasChanged()\">\n\t\t\t</chart-builder>\n\t\t</div>\n\t\t</ng-template>\n\n\n\t</dexih-widget>\n\n\t<dexih-help class=\"m-3\" title=\"Views\" path=\"/assets/help/reference/view.md\"></dexih-help>\n\n</div>","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { HubCache } from '../../hub.models';\nimport { DexihView, DexihHub, eSharedObjectType, eViewTypeItems, eDataObjectType, eViewType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'views',\n    templateUrl: './view-index.component.html',\n    styles: []\n})\nexport class ViewIndexComponent implements OnInit, OnDestroy {\n    @Input() public hubKey: number;\n\n    private _subscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n\n    hubCache: HubCache;\n\n    views: Array<DexihView>;\n    public eSharedObjectType = eSharedObjectType;\n\n    columns = [\n        { name: 'name', title: 'Name', footer: 'description', format: 'Md', tags: 'tags' },\n        { iconClass: 'sharedIcon', tooltip: 'sharedToolTip', width: '1%', align: 'center' },\n        { name: 'viewType', title: 'Chart/Table' },\n        { name: 'sourceName', title: 'Source'},\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        // watch for any changes in the validations.\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n\n                this.updateViews();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'View Index');\n        }\n\n\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    deleteViews(views: Array<DexihView>) {\n        this.hubService.deleteViews(views);\n    }\n\n    updateViews() {\n        if (this.hubCache && this.hubCache.isLoaded()) {\n            let views: Array<DexihView>;\n            views = this.hubCache.hub.dexihViews.filter(c => c.isValid);\n            let tableData = views.map(view => {\n                let sourceName = '';\n\n                switch (view.sourceType) {\n                    case eDataObjectType.Table:\n                        let sourceTable = this.hubCache.getTable(view.sourceTableKey);\n                        sourceName = sourceTable ? sourceTable.logicalName : 'Error, not found';\n                        break;\n                    case eDataObjectType.Datalink:\n                        let sourceDatalink = this.hubCache.hub.dexihDatalinks\n                            .find(c => c.key === view.sourceDatalinkKey);\n                        sourceName = sourceDatalink ? 'Datalink: ' + sourceDatalink.name : 'Error, not found';\n                        break;\n                }\n\n                return {\n                    key: view.key,\n                    name: view.name,\n                    tags: this.hubCache.getObjectTags(eSharedObjectType.View, view.key),\n                    viewType: eViewType[view.viewType],\n                    sourceName: sourceName,\n                    updateDate: view.updateDate,\n                    sharedIcon: view.isShared ? 'fa fa-group' : 'fa fa-user-secret',\n                    sharedToolTip: view.isShared ? 'Table is shared' : 'Table is private'\n                };\n            });\n            this._tableData.next(tableData);\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    editView(view: DexihView) {\n        this.router.navigate(['view-edit', view.key], { relativeTo: this.route });\n    }\n\n    export(items: Array<DexihView>) {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(cache.hub.hubKey, '');\n        items.forEach(item => { cache.cacheAddView(item.key, hub); });\n\n        let filename = items.length === 1 ? 'View - ' + items[0].name + '.json' : 'views.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    watchChanges() {\n        // watch the current validation in case it is changed in another session.\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n            if (hubCacheChange.changeClass === eSharedObjectType.View || hubCacheChange.changeClass === eSharedObjectType.TagObjects) {\n                this.updateViews();\n            }\n        });\n    }\n}\n","<div class=\"container-fluid\">\n    <dexih-widget title=\"Views\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-bar-chart\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\t>\n\t\t\t<dexih-table \n\t\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t\t[columns]=\"columns\"\n\t\t\t\t[dataObservable]=\"tableData\"\n\t\t\t\t(rowClick)=\"editView($event)\"\n\t\t\t\t[tags]=\"this.hubCache.hub.dexihTags\"\n\t\t\t\t>\n\t\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t\t<tags-update-button class=\"ml-1\" [objectType]=\"eSharedObjectType.View\" [objects]=\"items\" ></tags-update-button>\n\t\t\t\t\t</ng-template>\n\n\t\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n\t\t\t\t\t\t<dependent-items-button class=\"ml-1\" [key]=\"item.key\" [objectType]='eSharedObjectType.View'></dependent-items-button>\n\t\t\t\t\t</ng-template>\n\t\n\t\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t\t<actions-view-button [views]=\"items\"></actions-view-button>\n\t\t\t\t\t</ng-template>\n\n\t\t\t</dexih-table>\n\n\t</dexih-widget>\n\t\n\t<dexih-help class=\"m-3\" title=\"Views\" path=\"/assets/help/reference/view.md\"></dexih-help>\n\n</div>\n\n\n","import { Component, Input, OnInit, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { DexihApi, ApiData, eApiStatus, eDownloadUrlType } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n    selector: 'api-status',\n    templateUrl: './api-status.component.html'\n})\nexport class ApiStatusComponent implements OnInit, OnDestroy {\n    @Input() public apiKey: number;\n    @Output() public progressClick = new EventEmitter();\n\n    private _subscription: Subscription;\n    private _currentStatusSubscription: Subscription;\n    public cancelToken: CancelToken = new CancelToken();\n\n    private api: DexihApi;\n    public apiData: ApiData;\n\n    eApiStatus = eApiStatus;\n\n    public showCancel = false;\n\n    public statusClass: string;\n    public statusIcon: string;\n    public urls: any[];\n\n    public proxyUrl;\n\n    constructor(private hubService: HubService) {\n    }\n\n    ngOnInit() {\n        this._subscription = combineLatest(\n            this.hubService.getHubCacheObservable(),\n            this.hubService.getRemoteAgentObservable()\n        ).subscribe(result => {\n            let cache = result[0];\n            let remoteAgent = result[1];\n\n            if (this.apiKey) {\n                this.api = cache.hub.dexihApis.find(c => c.key === this.apiKey);\n                if (this.api) {\n                    this._currentStatusSubscription = this.api['currentStatus'].subscribe(apiData => {\n\n                        this.apiData = apiData;\n\n                        if (apiData) {\n\n                            if (apiData.apiStatus === eApiStatus.Activated && remoteAgent) {\n                                this.urls = remoteAgent.downloadUrls.filter(c => c.downloadUrlType !== eDownloadUrlType.Proxy).map(url => {\n                                    return {\n                                        downloadType: url.downloadUrlType,\n                                        downloadUrl: url.url + '/api/' + apiData.securityKey,\n                                        testUrl: url.url + '/api/' + apiData.securityKey + '/ping'\n                                    };\n                                });\n\n                                let proxy = remoteAgent.downloadUrls.find(c => c.downloadUrlType === eDownloadUrlType.Proxy);\n                                if (proxy) {\n                                    this.urls.push({\n                                        downloadType: 'Proxy',\n                                        downloadUrl: window.location.origin + '/api/remote/api/'\n                                            + remoteAgent.instanceId + '/' + apiData.securityKey,\n                                        testUrl: proxy.url + '/ping'\n                                    });\n                                }\n\n                                if (apiData.errorCount === 0 ) {\n                                    this.statusClass = 'success';\n                                    this.statusIcon = 'bolt';\n                                } else {\n                                    this.statusClass = 'warning';\n                                    this.statusIcon = 'exclamation-circle';\n                                }\n                            } else {\n                                this.statusClass = 'danger';\n                                this.statusIcon = 'chain-broken';\n                                this.urls = [];\n                            }\n                        } else {\n                            this.statusClass = 'danger';\n                            this.statusIcon = 'chain-broken';\n                            this.urls = [];                        }\n                    });\n                }\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._currentStatusSubscription) { this._currentStatusSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    deactivate() {\n        if (this.apiKey) {\n            this.hubService.deactivateApis([this.apiKey], this.cancelToken);\n        }\n    }\n\n    activate() {\n        if (this.apiKey) {\n            this.hubService.activateApis([this.api], this.cancelToken);\n        }\n    }\n\n    onProgressClick($event: any) {\n        this.progressClick.emit($event);\n    }\n\n    copyToClipboard(val: string) {\n        let selBox = document.createElement('textarea');\n        selBox.style.position = 'fixed';\n        selBox.style.left = '0';\n        selBox.style.top = '0';\n        selBox.style.opacity = '0';\n        selBox.value = val;\n        document.body.appendChild(selBox);\n        selBox.focus();\n        selBox.select();\n        document.execCommand('copy');\n        document.body.removeChild(selBox);\n      }\n\n}\n\n","<div class=\"list-group\">\n        <div class=\"list-group-item list-group-item-{{statusClass}}\" *ngIf=\"apiData\" >\n                <i class=\"fa fa-{{statusIcon}}\"></i>\n            <div class=\"d-inline\">{{apiData.apiStatus}} endpoint:</div>\n            <div class=\"d-inline\">{{apiData.successCount}} success, {{apiData.errorCount}} errors.</div>\n            <a *ngIf=\"apiData.apiStatus === eApiStatus.Activated\" class=\"btn btn-sm btn-warning float-right\" title=\"Deactivate the Api\" (click)=\"deactivate()\">\n                <i class=\"fa fa-ban\"></i>\n            </a>\n            <a  *ngIf=\"apiData.apiStatus !== eApiStatus.Activated\" class=\"btn btn-sm btn-success float-right\" title=\"Activate the Api\" (click)=\"activate()\">\n                <i class=\"fa fa-check\"></i>\n            </a>\n        </div>\n        <div class=\"list-group-item list-group-item-danger\" *ngIf=\"!apiData\" >\n            <i class=\"fa fa-chain-broken\"></i>\n            <div class=\"d-inline\">Deactivated </div>\n            <a class=\"btn btn-sm btn-success float-right\" title=\"Activate the Api\" (click)=\"activate()\">\n                <i class=\"fa fa-check\"></i>\n            </a>\n        </div>\n            \n    <div class=\"list-group-item\" *ngFor=\"let url of urls\">\n        <form-textarea [label]=\"url.downloadType + ' endpoint'\" [showCopy]=\"true\" [isHidden]=\"true\" [showPreview]=\"false\" [disabled]=\"true\" [rows]=\"3\" [value]=\"url.downloadUrl\" >\n            <a class=\"btn btn-sm btn-outline-primary float-right ml-1\" [href]=\"url.testUrl\" target=\"_blank\">test</a>\n        </form-textarea>\n        \n    </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihApi, eSourceType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'api-view',\n    templateUrl: './api-view.component.html'\n})\n\nexport class ApiViewComponent implements OnInit {\n    @Input() api: DexihApi;\n\n    eSourceType = eSourceType;\n    \n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div [routerLink]=\"['api-edit', api.key]\" queryParamsHandling=\"merge\">\n    <h5>{{api.name}}</h5>\n    <div *ngIf=\"api.description\">\n        <markdown [data]=\"api.description\"></markdown>\n    </div>\n    <div class=\"note\">{{eSourceType[api.sourceType]}} / Updated: {{api.updateDate | calendar }} </div>\n</div>\n\n<api-status [apiKey]='api?.key'></api-status>","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihColumnValidation } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'columnValidation-view',\n    templateUrl: './columnValidation-view.component.html'\n})\n\nexport class ColumnValidationViewComponent implements OnInit {\n    @Input() columnValidation: DexihColumnValidation;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div class=\"float-right\">\n    <actions-columnValidation-button [columnValidation]=\"columnValidation\" [pullRight]=\"true\"></actions-columnValidation-button>\n</div>\n<h5>{{columnValidation.name}}</h5>\n<div *ngIf=\"columnValidation.description\">\n    <markdown [data]=\"columnValidation.description\"></markdown>\n</div>\n<div class=\"note\">Updated: {{columnValidation.updateDate | calendar }} </div>","<div [routerLink]=\"['connection-edit', connection.key]\" queryParamsHandling=\"merge\">\n    <h5>{{connection.name}}</h5>\n    <div *ngIf=\"connection.description\">\n        <markdown [data]=\"connection.description\"></markdown>\n    </div>\n    <div class=\"note\">{{connectionReference?.name}} / {{eConnectionPurpose[connection.purpose]}} / Updated: {{connection.updateDate | calendar }} </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { DexihConnection, ConnectionReference, eConnectionPurpose } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'connection-view',\n    templateUrl: './connection-view.component.html'\n})\n\nexport class ConnectionViewComponent implements OnInit {\n    @Input() connection: DexihConnection;\n\n    connectionReference: ConnectionReference;\n    eConnectionPurpose = eConnectionPurpose;\n\n    constructor(private hubService: HubService) {\n\n    }\n\n    ngOnInit() {\n        this.hubService.getRemoteLibrariesObservable().subscribe(async remoteLibraries => {\n            if ( remoteLibraries ) {\n                this.connectionReference = await this.hubService.GetConnectionReference(this.connection);\n            }\n        })\n    }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihDashboard } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'dashboard-view',\n    templateUrl: './dashboard-view.component.html'\n})\n\nexport class DashboardViewComponent implements OnInit {\n    @Input() dashboard: DexihDashboard;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div [routerLink]=\"['dashboard-edit', dashboard.key]\" queryParamsHandling=\"merge\">\n    <h5>{{dashboard.name}}</h5>\n    <div *ngIf=\"dashboard.description\">\n        <markdown [data]=\"dashboard.description\"></markdown>\n    </div>\n    <div class=\"note\">Updated: {{dashboard.updateDate | calendar }} </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihDatajob } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'datajob-view',\n    templateUrl: './datajob-view.component.html'\n})\n\nexport class DatajobViewComponent implements OnInit {\n    @Input() datajob: DexihDatajob;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div [routerLink]=\"['datajob-edit', datajob.key]\" queryParamsHandling=\"merge\">\n    <h5>{{datajob.name}}</h5>\n    <div *ngIf=\"datajob.description\">\n        <markdown [data]=\"datajob.description\"></markdown>\n    </div>\n    <datalink-status [datajobKey]=\"datajob.key\"></datalink-status>\n    <div class=\"note\">Updated: {{datajob.updateDate | calendar }} </div>\n</div>\n","import { Component, Input, OnInit, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { Subscription} from 'rxjs';\nimport { CancelToken } from '../../../+auth/auth.models';\nimport { Functions } from '../../../shared/utils/functions';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { TransformWriterResult, eRunStatus } from '../../../shared/shared.models';\nimport { runStatus } from '../../hub.models';\n\nclass StatusInfo {\n    public writerResult: TransformWriterResult;\n    public percentage;\n    public message;\n    public statusType;\n    public error;\n    public iconClass;\n}\n\n@Component({\n    selector: 'datalink-status',\n    templateUrl: './datalink-status.component.html'\n})\nexport class DatalinkStatusComponent implements OnInit, OnDestroy {\n    @Input() public datalinkKey: number;\n    @Input() public datalinkTestKey: number;\n    @Input() public datajobKey: number;\n    @Input() public tableKey: number;\n    @Input() public writerResult: TransformWriterResult;\n\n    @Output() public progressClick = new EventEmitter();\n\n    private _hubCacheSubscription: Subscription;\n    private _currentStatusSubscription: Subscription;\n    private _previousStatusSubscription: Subscription;\n    private cancelToken: CancelToken = new CancelToken();\n\n    private dataObject: any;\n\n    eRunStatus = eRunStatus;\n    runStatus = runStatus;\n\n    public currentWriterResult: TransformWriterResult;\n    public currentStatus: StatusInfo;\n    public previousStatus: StatusInfo;\n\n    public showCancel = false;\n\n    constructor(private hubService: HubService, private authService: AuthService) {\n    }\n\n    ngOnInit() {\n        if (this.writerResult) {\n            this.previousStatus = this.getStatus(this.writerResult);\n        } else {\n            this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n                if (!cache.isLoaded()) { return; }\n\n                if (this.datalinkKey) {\n                    this.dataObject = cache.hub.dexihDatalinks.find(c => c.key === this.datalinkKey);\n                } else if (this.datajobKey) {\n                    this.dataObject = cache.hub.dexihDatajobs.find(c => c.key === this.datajobKey);\n                } else if (this.datalinkTestKey) {\n                    this.dataObject = cache.hub.dexihDatalinkTests.find(c => c.key === this.datalinkTestKey);\n                } else if (this.tableKey) {\n                    this.dataObject = cache.getTable(this.tableKey);\n                }\n\n                if (this.dataObject) {\n                    if (this._currentStatusSubscription) { this._currentStatusSubscription.unsubscribe(); }\n                    this._currentStatusSubscription = this.dataObject.currentStatus.subscribe(writerResult => {\n                        this.currentWriterResult = writerResult;\n                        if (writerResult) {\n                            this.currentStatus = this.getStatus(writerResult);\n                        } else {\n                            this.currentStatus = null;\n                        }\n\n                    });\n                    if (this._previousStatusSubscription) { this._previousStatusSubscription.unsubscribe(); }\n                    this._previousStatusSubscription = this.dataObject.previousStatus.subscribe(previousStatus => {\n                        if (previousStatus) {\n                            this.previousStatus = this.getStatus(previousStatus);\n                        } else {\n                            this.previousStatus = null;\n                        }\n                    });\n                }\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n        if (this._currentStatusSubscription) { this._currentStatusSubscription.unsubscribe(); }\n        if (this._previousStatusSubscription) { this._previousStatusSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    getStatus(writerResult: TransformWriterResult): StatusInfo {\n        const statusInfo = new StatusInfo();\n\n        if (! writerResult) {\n            statusInfo.message = 'not running';\n            statusInfo.percentage = 0;\n            statusInfo.statusType = 'info';\n            statusInfo.error = '';\n        } else {\n            statusInfo.writerResult = writerResult;\n\n            // calculate the percentage complete.\n            let value: number;\n            switch (writerResult.runStatus) {\n                case eRunStatus.Running:\n                case eRunStatus.RunningErrors:\n                    // use last row count to calculate percentage\n                    if (writerResult.lastRowTotal > 0) {\n                        value = 100 * (writerResult.rowsTotal / writerResult.lastRowTotal);\n                        if (value >= 100) {\n                            value = 99; // if it exceeds 100 leave it on 99%\n                        }\n                    } else {\n                        value = 50; // no last rows count, then use 50%.\n                    }\n                    this.showCancel = true;\n                    break;\n                case eRunStatus.Abended:\n                case eRunStatus.Cancelled:\n                case eRunStatus.Finished:\n                case eRunStatus.FinishedErrors:\n                case eRunStatus.Passed:\n                case eRunStatus.Failed:\n                    value = 100;\n                    this.showCancel = false;\n                    break;\n                case eRunStatus.NotRunning:\n                    value = 0;\n                    this.showCancel = false;\n                    break;\n                case eRunStatus.Initialised:\n                case eRunStatus.Scheduled:\n                case eRunStatus.Started:\n                    value = 0;\n                    this.showCancel = true;\n                    break;\n            }\n\n            statusInfo.percentage = value;\n\n            // update the type, which is used for the colour of the progress\n            switch (writerResult.runStatus) {\n                case eRunStatus.Abended:\n                case eRunStatus.Cancelled:\n                case eRunStatus.FinishedErrors:\n                case eRunStatus.RunningErrors:\n                case eRunStatus.Failed:\n                    statusInfo.statusType = 'danger';\n                    break;\n                case eRunStatus.Initialised:\n                case eRunStatus.NotRunning:\n                case eRunStatus.Running:\n                case eRunStatus.Scheduled:\n                case eRunStatus.Started:\n                    statusInfo.statusType = 'primary';\n                    break;\n                case eRunStatus.Finished:\n                case eRunStatus.Passed:\n                    statusInfo.statusType = 'success';\n                    break;\n            }\n\n            // update the type, which is used for the colour of the progress\n            switch (writerResult.runStatus) {\n                case eRunStatus.Abended:\n                case eRunStatus.Failed:\n                case eRunStatus.FinishedErrors:\n                    statusInfo.iconClass = 'fa fa-ban text-danger'\n                    break;\n                case eRunStatus.Cancelled:\n                    statusInfo.iconClass = 'fa fa-ban text-warning'\n                    break;\n                case eRunStatus.RunningErrors:\n                    statusInfo.iconClass = 'fa fa-cogs text-danger'\n                    break;\n                case eRunStatus.Initialised:\n                    statusInfo.iconClass = 'fa fa-circle text-success'\n                    break;\n                case eRunStatus.NotRunning:\n                    statusInfo.iconClass = 'fa fa-square'\n                    break;\n                case eRunStatus.Running:\n                    statusInfo.iconClass = 'fa fa-cogs text-success'\n                    break;\n                case eRunStatus.Scheduled:\n                    statusInfo.iconClass = 'fa fa-calendar text-success'\n                    break;\n                case eRunStatus.Started:\n                    statusInfo.iconClass = 'fa fa-cog text-success'\n                    break;\n                case eRunStatus.Finished:\n                case eRunStatus.Passed:\n                    statusInfo.iconClass = 'fa fa-square text-success'\n                    break;\n            }\n\n            // update the message and error\n            const status = this.runStatus.find(c => c.key === writerResult.runStatus).name;\n            // tslint:disable-next-line:max-line-length\n            statusInfo.message = `(read: ${Functions.numberWithCommas(writerResult.rowsReadPrimary)}, written: ${Functions.numberWithCommas(writerResult.rowsTotal)}) ${status}`;\n\n            statusInfo.error = writerResult.message;\n        }\n        return statusInfo;\n    }\n\n    cancelled() {\n        if (this.datalinkKey) {\n            this.hubService.cancelDatalinks([this.datalinkKey], this.cancelToken);\n        } else if (this.datajobKey) {\n            this.hubService.deactivateDatajobs([this.datajobKey], this.cancelToken);\n        } else if (this.datalinkTestKey) {\n            this.hubService.cancelDatalinkTests([this.datalinkTestKey], this.cancelToken);\n        }\n}\n\n    onProgressClick($event: any) {\n        if (this.writerResult && !this.writerResult.auditConnectionKey) {\n            this.authService.informationDialog('No audit connection',\n            'The selected audit item is attached to a datalink/datajob that does not have an Audit Connection specified. ' +\n            'To view detailed results, specify a audit connection.')\n        }\n        this.progressClick.emit($event);\n    }\n\n}\n\n\n","<div *ngIf=\"previousStatus?.writerResult\" class=\"w-100 mb-1\" style=\"min-width:300px\" >\n    <dexih-progressbar  \n    [showCancel]=\"false\" \n    [value]=\"previousStatus.percentage\" \n    [type]=\"previousStatus.statusType\" \n    [routerLink]=\"['result-view', previousStatus.writerResult?.auditConnectionKey, previousStatus.writerResult?.auditKey]\" queryParamsHandling=\"merge\" >\n        (Previous) {{previousStatus.message}}\n    </dexih-progressbar>\n</div>\n\n<div *ngIf=\"currentStatus?.writerResult\" class=\"w-100 mb-1\" style=\"min-width:300px\" >\n    <dexih-progressbar *ngIf=\"currentStatus.writerResult.runStatus == eRunStatus.Scheduled\"  \n        [showCancel]=\"true\" \n        (cancelled)=\"cancelled()\" \n        [value]=\"100\" \n        [type]=\"currentStatus.statusType\">\n        <i class=\"fa fa-clock-o\"></i>Next - {{currentStatus.writerResult.scheduledTime | calendar}} (in <countdown [end]=\"currentStatus.writerResult.scheduledTime\" ></countdown>)     \n    </dexih-progressbar>    \n</div>\n\n<div *ngIf=\"currentStatus?.writerResult && currentStatus.writerResult.runStatus != eRunStatus.Scheduled\"   class=\"w-100\" style=\"min-width:300px\" >\n    <dexih-progressbar \n        [showCancel]=\"showCancel\" \n        (cancelled)=\"cancelled()\" \n        (progressClick)=\"onProgressClick()\"\n        [routerLink]=\"['result-view', currentStatus.writerResult?.auditConnectionKey, currentStatus.writerResult?.auditKey]\" queryParamsHandling=\"merge\" \n        [value]=\"currentStatus.percentage\" \n        [type]=\"currentStatus.statusType\">\n        {{currentStatus.message}}\n    </dexih-progressbar>    \n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihDatalink, eDatalinkType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'datalink-view',\n    templateUrl: './datalink-view.component.html'\n})\n\nexport class DatalinkViewComponent implements OnInit {\n    @Input() datalink: DexihDatalink;\n\n    eDatalinkType = eDatalinkType;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div [routerLink]=\"['datalink-edit', 'edit', datalink.key]\" queryParamsHandling=\"merge\">\n    <h5>{{datalink.name}}</h5>\n    <div *ngIf=\"datalink.description\">\n        <markdown [data]=\"datalink.description\"></markdown>\n    </div>\n    <div class=\"note\">{{eDatalinkType[datalink.datalinkType]}} / Updated: {{datalink.updateDate | calendar }} </div>\n    <datalink-status [datalinkKey]=\"datalink.key\"></datalink-status>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihDatalink, DexihDatalinkTest } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'datalinkTest-view',\n    templateUrl: './datalinkTest-view.component.html'\n})\n\nexport class DatalinkTestViewComponent implements OnInit {\n    @Input() datalinkTest: DexihDatalinkTest;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div [routerLink]=\"['datalinkTest-edit', datalinkTest.key]\" queryParamsHandling=\"merge\">\n    <h5>{{datalinkTest.name}}</h5>\n    <div *ngIf=\"datalinkTest.description\">\n        <markdown [data]=\"datalinkTest.description\"></markdown>\n    </div>\n    <div class=\"note\">Updated: {{datalinkTest.updateDate | calendar }} </div>\n    <datalink-status [datalinkTestKey]=\"datalinkTest.key\"></datalink-status>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihFileFormat } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'fileFormat-view',\n    templateUrl: './fileFormat-view.component.html'\n})\n\nexport class FileFormatViewComponent implements OnInit {\n    @Input() fileFormat: DexihFileFormat;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div class=\"float-right\">\n    <actions-fileFormat-button [fileFormat]=\"fileFormat\" [pullRight]=\"true\"></actions-fileFormat-button>\n</div>\n<div>\n    <h5>{{fileFormat.name}}</h5>\n    <div *ngIf=\"fileFormat.description\">\n        <markdown [data]=\"fileFormat.description\"></markdown>\n    </div>\n    <div class=\"note\">Updated: {{fileFormat.updateDate | calendar }} </div>\n</div>\n","import { Component, OnInit, Input, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { DexihListOfValues, InputParameterBase, ListOfValuesItem } from '../../../shared/shared.models';\nimport { HubService } from '../../hub.service';\nimport { Subscription, Observable } from 'rxjs';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n    selector: 'input-parameters-view',\n    templateUrl: 'input-parameters-view.component.html'\n})\n\nexport class InputParametersViewComponent implements OnInit, OnDestroy {\n    @Input() parameters: InputParameterBase[];\n    @Input() refreshEvent: Observable<void>;\n\n    @Output() onChange = new EventEmitter();\n    @Output() onRefreshData = new EventEmitter();\n\n    private _hubSubscription: Subscription;\n    private _refreshSubscription: Subscription;\n\n    public parentParams: string[] = [];\n    public values: ListOfValuesItem[] = [];\n    public listOfValues: Array<DexihListOfValues>;\n\n    public userParameters: InputParameterBase[];\n\n    public requiresRefresh = false;\n\n    public cancelToken: CancelToken = new CancelToken();\n\n    constructor(private hubService: HubService) { }\n\n    ngOnInit() {\n        this._hubSubscription = this.hubService.getHubCacheObservable(true).subscribe(cache => {\n            this.listOfValues = cache.hub.dexihListOfValues;\n\n            this.userParameters = [];\n\n            this.parameters.filter(c => c.isValid && c.allowUserSelect).forEach((parameter: InputParameterBase) => {\n                parameter['runTime'] = {showRefresh: parameter.listOfValuesKey > 0, isRefreshing: false, items: []};\n                if (parameter.value) {\n                    parameter['runTime'].items = [{key: parameter.value, name: parameter.valueDesc}];\n                }\n                this.userParameters.push(parameter);\n            });\n\n        });\n\n        this._refreshSubscription = this.refreshEvent.subscribe(() => {\n            this.requiresRefresh = false;\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._hubSubscription) { this._hubSubscription.unsubscribe(); }\n        if (this._refreshSubscription) { this._refreshSubscription.unsubscribe(); }\n    }\n\n    refreshLOV(parameter: InputParameterBase) {\n        if (!parameter.listOfValuesKey) { return; }\n        parameter['runTime'].isRefreshing = true;\n        this.hubService.previewListOfValuesKey(parameter.listOfValuesKey, false, this.cancelToken).then(result => {\n            parameter['runTime'].items = result;\n            parameter['runTime'].showRefresh = false;\n        }).finally(() => {\n            parameter['runTime'].isRefreshing = false;\n        });\n    }\n\n    refreshData() {\n        this.onRefreshData.emit();\n    }\n\n    change(parameter: InputParameterBase, $event) {\n        if (parameter.listOfValuesKey > 0) {\n            this.onChange.emit();\n        } else {\n            this.requiresRefresh = true;\n        }\n    }\n}\n","<div *ngIf=\"parameters\">\n    <span *ngFor=\"let parameter of parameters\" class=\"input-group\">\n        <form-input [disabled]=\"true\" [labelLeft]=\"parameter.name\" [(ngModel)]=\"parameter.name\">\n        </form-input>\n        <form-select [labelLeft]=\"parameter.name\" [(ngModel)]=\"parameter.value\" itemKey=\"key\" itemName=\"name\"\n            [items]=\"parameter.runTime.items\" [enableTextEntry]=\"! (parameter.listOfValuesKey > 0)\"\n            [textEntryItems]=\"parentParams\" textEntryItemsTitle=\"Linked Parameters\"\n            (ngModelChange)=\"change(parameter, $event)\" [showRefresh]=\"parameter.runTime.showRefresh\"\n            [isRefreshing]=\"parameter.runTime.isRefreshing\" (onRefresh)=\"refreshLOV(parameter)\"\n            [multiSelect]=\"parameter.rank === 1\">\n\n        </form-select>\n    </span>\n    <div *ngIf=\"requiresRefresh\" class=\"alert alert-warning mt-2\">\n        <a href=\"javascript:void(0)\" class=\"alert-link\" (click)=\"refreshData()\">The parameters have changed. Click to\n            refresh.</a>\n    </div>\n</div>","import { Component, OnInit, Input, OnChanges, SimpleChanges, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { FormArray, FormGroup } from '@angular/forms';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { DexihConnection, DexihListOfValues, InputParameterBase, ListOfValuesItem, eLOVObjectType } from '../../../shared/shared.models';\nimport { HubService } from '../../hub.service';\nimport { Subscription, merge, Subject, Observable } from 'rxjs';\nimport { CancelToken } from '../../../+auth/auth.models';\nimport { ILogger } from '@microsoft/signalr';\nimport { eLogLevel, LogFactory } from '../../../../logging';\n\n@Component({\n    selector: 'input-parameters',\n    templateUrl: 'input-parameters.component.html'\n})\n\nexport class InputParametersComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() formsService: HubFormsService\n    @Input() parameters: FormArray\n    @Input() showEdit = false;\n    @Input() parentParameters: InputParameterBase[];\n    @Input() refreshEvent: Observable<void>;\n    @Input() allowAddRemove = true;\n\n    @Output() onChange = new EventEmitter();\n    @Output() onRefreshData = new EventEmitter();\n\n    private _hubSubscription: Subscription;\n    private _refreshSubscription: Subscription;\n\n    public parentParams: string[] = [];\n    public listOfValues: Array<DexihListOfValues>;\n\n    public cancelToken: CancelToken = new CancelToken();\n\n    public showRefresh = false;\n    public isRefreshing = false;\n\n    public requiresRefresh = false;\n\n    constructor(private hubService: HubService) { }\n\n    ngOnInit() {\n        this._hubSubscription = this.hubService.getHubCacheObservable(true).subscribe(cache => {\n            this.listOfValues = cache.hub.dexihListOfValues;\n\n            this.parameters.controls.forEach((parameterForm: FormGroup) => {\n                let parameter = <InputParameterBase>parameterForm.value;\n                if (parameter.listOfValuesKey > 0) {\n                    let lov = this.listOfValues.find(c => c.key === parameter.listOfValuesKey && c.isValid);\n                    if (lov && lov.sourceType === eLOVObjectType.Static) {\n                        this.refreshLOV(parameterForm);\n                    }\n                }\n            });\n        });\n\n        if (this.refreshEvent) {\n            this._refreshSubscription = this.refreshEvent.subscribe(() => {\n                this.requiresRefresh = false;\n            });\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (this.parentParameters) {\n            this.parentParams = this.parentParameters.map(c => '{' + c.name + '}');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._hubSubscription) { this._hubSubscription.unsubscribe(); }\n        if (this._refreshSubscription) { this._refreshSubscription.unsubscribe(); }\n    }\n\n    add(index) {\n        let parameter = new InputParameterBase();\n        let parameterForm = this.formsService.parameter(parameter);\n        this.parameters.insert(index + 1, parameterForm);\n    }\n\n    delete(index) {\n        this.parameters.removeAt(index);\n    }\n\n    refreshLOV(parameterForm: FormGroup) {\n        let parameter = <InputParameterBase>parameterForm.value;\n        if (!parameter.listOfValuesKey) { return; }\n\n        let runTime = parameterForm.controls.runTime.value;\n        runTime.isRefreshing = true;\n        this.hubService.previewListOfValuesKey(parameter.listOfValuesKey, false, this.cancelToken).then(result => {\n            // runTime.items = result;\n            // runTime.showRefresh = false;\n\n            // update any other parameters with same list of values.\n            for (let p of this.parameters.controls\n                .filter( (c: FormGroup) => c.controls.listOfValuesKey.value === parameter.listOfValuesKey)) {\n                runTime = (<FormGroup>p).controls.runTime.value;\n                runTime.items = result;\n                runTime.showRefresh = false;\n            }\n        }).finally(() => {\n            runTime.isRefreshing = false;\n        });\n    }\n\n    refreshData() {\n        this.onRefreshData.emit();\n    }\n\n    textValueChange(parameterForm: FormGroup, $event) {\n        // parameterForm.controls.value.setValue($event);\n        if (parameterForm.controls.rank.value === 0) {\n            parameterForm.controls.valueDesc.setValue($event);\n        } else {\n            parameterForm.controls.valueDesc.setValue(null);\n        }\n    }\n\n    change(parameterForm: FormGroup, $event) {\n        this.requiresRefresh = true;\n        if (parameterForm.controls.listOfValuesKey.value > 0) {\n            if (parameterForm.controls.rank.value === 0) {\n                parameterForm.controls.valueDesc.setValue($event);\n            } else {\n                parameterForm.controls.valueDesc.setValue(null);\n            }\n            this.onChange.emit();\n        }\n    }\n}\n","<div *ngIf=\"parameters\" [ngClass]=\"{'d-flex': !showEdit}\">\n    <dexih-button-new *ngIf=\"showEdit && allowAddRemove && parameters.controls.length === 0\" (click)=\"add()\"\n        text=\"Add Parameter\"></dexih-button-new>\n    <div *ngFor=\"let parameter of parameters.controls; let i = index\" class=\"pb-1 pr-1\">\n        <form [formGroup]=\"parameter\"\n            *ngIf=\"parameter.controls.isValid.value && (showEdit || parameter.controls.allowUserSelect.value)\">\n\n            <div class=\"d-flex align-items-stretch flex-wrap\" *ngIf=\"showEdit\">\n                <form-input labelLeft=\"Name\"  class=\" p-0\" formControlName=\"name\">\n                </form-input>\n                <form-select labelLeft=\"LOV\" class=\"p-0 flex-grow-1\"  formControlName=\"listOfValuesKey\"\n                    [items]=\"listOfValues\" itemKey=\"key\" itemName=\"name\" [allowNullSelect]=\"true\">\n                </form-select>\n\n                <form-checkbox [border]=\"true\" formControlName=\"allowUserSelect\">Selectable</form-checkbox>\n                <form-checkbox [border]=\"true\" formControlName=\"rank\" [checkedValue]=\"1\" [unCheckedValue]=\"0\">Array\n                </form-checkbox>\n\n                <div *ngIf=\"allowAddRemove\" class=\"input-group-append\">\n\n                    <div class=\"input-group-text p-0\">\n                        <button type=\"button\" (click)=\"add(i)\" class=\"btn btn-sm border-0 rounded-0 bg-transparent\"\n                            value=\"Add\">\n                            <i class=\"fa fa-plus-square-o\"></i>\n                        </button>\n                    </div>\n                    <div class=\"input-group-text p-0\">\n                        <button type=\"button\" (click)=\"delete(i)\" class=\"btn btn-sm border-0 rounded-0 bg-transparent\"\n                            value=\"Remove\">\n                            <i class=\"fa fa-minus-square-o\"></i>\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n            <form-select class=\"p-0\" formControlName=\"value\" \n                [labelLeft]=\"showEdit ? null : parameter.controls.name.value\" itemKey=\"key\" itemName=\"name\"\n                [items]=\"parameter.controls.runTime?.value?.items\"\n                [enableTextEntry]=\"! (parameter.controls.listOfValuesKey.value > 0)\"\n                [textEntryItems]=\"(parameter.controls.listOfValuesKey.value > 0) ? null : parentParams\"\n                textEntryItemsTitle=\"Linked Parameters\" (ngModelChange)=\"change(parameter, $event)\"\n                (textValueChange)=\"textValueChange(parameter, $event)\"\n                [showRefresh]=\"parameter.controls.runTime?.value?.showRefresh\"\n                [isRefreshing]=\"parameter.controls.runTime?.value?.isRefreshing\" (onRefresh)=\"refreshLOV(parameter)\"\n                [multiSelect]=\"parameter.controls.rank.value === 1\">\n            </form-select>\n        </form>\n    </div>\n\n    <div *ngIf=\"requiresRefresh\" class=\"alert alert-warning mt-2\">\n        <a href=\"javascript:void(0)\" class=\"alert-link\" (click)=\"refreshData()\">The parameters have changed. Click to\n            refresh.</a>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihListOfValues } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'listOfValues-view',\n    templateUrl: './listOfValues-view.component.html'\n})\n\nexport class ListOfValuesViewComponent implements OnInit {\n    @Input() listOfValues: DexihListOfValues;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div class=\"float-right\">\n    <actions-listOfValues-button [listOfValues]=\"listOfValues\" [pullRight]=\"true\"></actions-listOfValues-button>\n</div>\n<h5>{{listOfValues.name}}</h5>\n<div *ngIf=\"listOfValues.description\">\n    <markdown [data]=\"listOfValues.description\"></markdown>\n</div>\n<div class=\"note\">Updated: {{listOfValues.updateDate | calendar }} </div>","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { HubCache, PreviewResults, DexihInputParameter } from '../../hub.models';\nimport { combineLatest, Subscription, Subject } from 'rxjs';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubService } from '../../hub.service';\nimport { InputOutputColumns } from '../../hub.lineage.models';\nimport { PromiseWithCancel, CancelToken } from '../../../+auth/auth.models';\nimport { eSourceType, DexihTable, DexihDatalink, ChartConfig, InputColumn, DexihColumnBase, SelectQuery,\n    eDownloadFormat, DownloadObject, DexihView, eViewType, eDataObjectType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'preview-data',\n    templateUrl: 'preview-data.component.html'\n})\n\nexport class PreviewDataComponent implements OnInit, OnDestroy {\n    @Input() viewSource: eDataObjectType;\n    @Input() key: number;\n    @Input() table: DexihTable;\n    @Input() datalink: DexihDatalink;\n    @Input() datalinkTransformKey: number;\n    @Input() previewUpdates = false;\n\n    private _subscription: Subscription;\n\n    private hubCache: HubCache;\n\n    private refreshDataSubject: Subject<void> = new Subject<void>();\n    \n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    public chartConfig = new ChartConfig();\n    public view = 'table';\n    public transformProperties = null;\n\n    public inputColumns: InputColumn[];\n    public parameters: DexihInputParameter[];\n    public tableColumns: DexihColumnBase[];\n    selectQuery: SelectQuery = new SelectQuery();\n\n    public title: string;\n\n    public csvFileName: string;\n\n    columns: Array<any>;\n    public data: Array<any>;\n\n    public isRefreshing = false;\n    private firstLoad = true;\n    private dialogOpen = false;\n\n    public allowViewSave = false;\n\n    public previewQuery: PromiseWithCancel<PreviewResults>;\n    public cancelToken: CancelToken = new CancelToken();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        ) {\n            this.selectQuery.rows = 100;\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.hubService.getRemoteAgentObservable()\n            ).subscribe(result => {\n                this.hubCache = result[0];\n                let remoteAgent = result[1];\n\n                if (this.hubCache.isLoaded()) {\n                    // get the hub key from the route data, and update the service.\n\n                    switch (this.viewSource) {\n                        case eDataObjectType.Datalink:\n                            let datalink: DexihDatalink;\n                            if ( this.key ) {\n                                datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === this.key);\n                            } else {\n                                datalink = this.datalink;\n                            }\n\n                            if (!datalink) { return; }\n                            // this.key = datalink.key;\n\n                            // only allows view creation on saved datalink\n                            this.allowViewSave = datalink.key && !this.datalinkTransformKey ? true : false;\n\n                            this.title = 'Datalink - ' + datalink.name;\n\n                            // get the outputs from the last transform in the datalink\n                            const ioColumns = new InputOutputColumns();\n                            ioColumns.buildInputOutput(this.hubCache, datalink);\n                            if (this.datalinkTransformKey) {\n                                let transform = datalink.dexihDatalinkTransforms.find(c => c.key === this.datalinkTransformKey);\n                                this.tableColumns = transform['runTime']['outputColumns'];\n                            } else {\n                                this.tableColumns = ioColumns.getDatalinkOutputColumns(datalink);\n                            }\n\n                            this.inputColumns = datalink.sourceDatalinkTable.dexihDatalinkColumns.filter(c => c.isInput).map(c => {\n                                return  {datalinkKey: this.key, datalinkName: datalink.name,\n                                    name: c.name, logicalName: c.logicalName, dataType: c.dataType,\n                                    rank: c.rank, value: c.defaultValue, defaultValue: c.defaultValue};\n                            });\n\n                            this.parameters = datalink.parameters;\n                            break;\n\n                        case eDataObjectType.Table:\n                            let table: DexihTable;\n                            if ( this.key ) {\n                                table = this.hubCache.getTable(this.key);\n                            } else {\n                                table = this.table;\n                            }\n\n                            if (!table) { return; }\n                            // this.key = table.key;\n\n                            // only allows view creation on saved table\n                            this.allowViewSave = table.key ? true : false;\n\n                            this.title = 'Table - ' + table.name;\n\n                            this.tableColumns = table.dexihTableColumns;\n                            this.inputColumns = table.dexihTableColumns.filter(c => c.isInput).map(c => {\n                                return  {datalinkKey: 0, datalinkName: null,\n                                    name: c.name, logicalName: c.logicalName, dataType: c.dataType,\n                                    rank: c.rank, value: c.defaultValue, defaultValue: c.defaultValue};\n                                }\n                            );\n                    }\n                }\n\n                if (remoteAgent) {\n                    if (!this.firstLoad) {\n                        if (!this.dialogOpen) {\n                            this.dialogOpen = true;\n                            this.authService.confirmDialog('Remote Agent Available',\n                                'A remote agent is available, would you like to refresh the data?').then(confirm => {\n                                    if (confirm) {\n                                        this.refresh();\n                                    }\n                                    this.dialogOpen = false;\n                                });\n                        }\n                    } else {\n                        this.refresh();\n                    }\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Preview');\n        }\n\n    }\n\n    ngOnDestroy(): void {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    parameterChange() {\n        \n    }\n\n    refresh() {\n        if (!this.isRefreshing) {\n            this.isRefreshing = true;\n\n            // cancel any existing query.\n            if (this.previewQuery) { this.previewQuery.cancel(); }\n\n            let previewQuery: PromiseWithCancel<PreviewResults>;\n\n            switch (this.viewSource) {\n                case eDataObjectType.Datalink:\n                    if (this.key) {\n                        previewQuery = this.hubService.previewDatalinkKeyData(this.key, this.previewUpdates, this.selectQuery,\n                            this.inputColumns, this.parameters, this.cancelToken);\n                    } else {\n                        if (this.datalink) {\n                            previewQuery = this.hubService.previewTransformData(this.datalink, this.datalinkTransformKey,\n                                this.selectQuery, this.inputColumns, this.parameters, this.cancelToken);\n                        }\n                    }\n                    break;\n                case eDataObjectType.Table:\n                    if (this.key) {\n                        previewQuery = this.hubService.previewTableKeyData(this.key, false, this.selectQuery,\n                            this.inputColumns, this.parameters, this.cancelToken);\n                    } else {\n                        if (this.table) {\n                            previewQuery = this.hubService.previewTableData(this.table, false, this.selectQuery,\n                                this.inputColumns, this.parameters, this.cancelToken);\n                        }\n                    }\n                    break;\n            }\n\n            if (previewQuery) {\n                previewQuery.then((result) => {\n                    this.refreshDataSubject.next();\n                    this.columns = result.columns;\n                    this.data = result.data;\n                    this.transformProperties = result.transformProperties;\n                    this.isRefreshing = false;\n\n                    if (result.status) {\n                        this.hubService.addHubMessage(result.status, false, 'Preview Data');\n                    }\n                }).catch(() => {\n                    this.data = [];\n                    this.isRefreshing = false;\n                });\n            }\n\n        }\n    }\n\n    download(format: eDownloadFormat = eDownloadFormat.Csv) {\n        if (this.key) {\n            let downloadObject = new DownloadObject();\n            downloadObject.objectKey = this.key;\n            downloadObject.objectType = this.viewSource;\n            let query = Object.assign({}, this.selectQuery);\n            query.rows = null;\n            downloadObject.query = query;\n            this.hubService.downloadData([downloadObject], false, format, this.cancelToken)\n        } else {\n            switch (this.viewSource) {\n                case eDataObjectType.Datalink:\n                    this.hubService.downloadDatalinkData(this.datalink, this.datalinkTransformKey,\n                        this.selectQuery, this.inputColumns, false, format, this.cancelToken);\n                    break;\n                case eDataObjectType.Table:\n                    this.hubService.downloadTableData(this.table, false, this.selectQuery, this.inputColumns,\n                        false, format, this.cancelToken);\n                    break;\n            }\n        }\n    }\n\n    save() {\n        if (this.view === 'properties') {\n            this.authService.informationDialog('Cannot save', 'Select a chart or table view to save.');\n            return;\n        }\n\n        this.authService.promptDialog('View Name', 'Enter a name for the view.').then(name => {\n            let view = new DexihView();\n            view.name = name;\n            view.sourceType = this.viewSource;\n            switch (this.viewSource) {\n                case eDataObjectType.Datalink:\n                    view.sourceDatalinkKey = this.key;\n                    break;\n                case eDataObjectType.Table:\n                    view.sourceTableKey = this.key;\n                    break;\n            }\n            view.viewType = this.view === 'chart' ? eViewType.Chart : eViewType.Table;\n            view.selectQuery = this.selectQuery;\n            view.chartConfig = this.chartConfig;\n            view.inputValues = this.inputColumns;\n\n            this.hubService.saveView(view).then(() => {\n            }).catch(() => {\n                this.data = null;\n            });\n        });\n    }\n}\n","\n<dexih-table [enableMultiSelect]=\"false\" [enableSaveCsv]=\"true\" [csvFileName]=\"csvFileName\" [columns]=\"columns\"\n    [data]=\"data\" [hideTable]=\"view !== 'table'\">\n\n    <ng-template #actions let-items=\"items\">\n        <dexih-button-refresh class=\"mr-1\" (click)=\"refresh()\" text=\"Reload\"></dexih-button-refresh>\n        <download-button class=\"ml-1\" (download)=\"download($event)\"></download-button>\n\n        <div class=\"btn-group btn-group-toggle ml-1\" data-toggle=\"buttons\" title=\"Table\">\n            <label class=\"btn btn-primary\" [ngClass]=\"{active: view==='table'}\">\n                <input type=\"radio\" name=\"options\" value=\"table\" autocomplete=\"off\" [(ngModel)]=\"view\">\n                <i class=\"fa fa-table\"></i>\n            </label>\n            <label class=\"btn btn-primary\" [ngClass]=\"{active: view==='chart'}\" title=\"Chart\">\n                <input type=\"radio\" name=\"options\" value=\"chart\" autocomplete=\"off\" [(ngModel)]=\"view\">\n                <i class=\"fa fa-bar-chart\"></i>\n            </label>\n            <label class=\"btn btn-primary\" [ngClass]=\"{active: view==='properties'}\" title=\"Query plan details\">\n                <input type=\"radio\" name=\"options\" value=\"properties\" autocomplete=\"off\" [(ngModel)]=\"view\">\n                <i class=\"fa fa-info\"></i>\n            </label>\n        </div>\n\n        <dexih-button-save *ngIf=\"allowViewSave\" class=\"ml-1\" (click)=\"save()\"></dexih-button-save>\n    </ng-template>\n\n    <ng-template #tableHeader>\n        <div class=\"mt-1\">\n        <div *ngIf=\"parameters?.length > 0\" class=\"mb-3\">\n            Parameters\n            <input-parameters-view [parameters]=\"parameters\" [refreshEvent]=\"refreshDataSubject.asObservable()\" (onRefreshData)=\"refresh()\" (onChange)=\"parameterChange()\"></input-parameters-view>\n        </div>\n                \n        <query-builder [selectQuery]=\"selectQuery\" [columns]=\"tableColumns\" [inputColumns]=\"inputColumns\" [parameters]=\"parameters\" [refreshEvent]=\"refreshDataSubject.asObservable()\" (onRefreshData)=\"refresh()\">\n        </query-builder>\n    </div>\n    </ng-template>\n\n</dexih-table>\n\n<div [ngStyle]=\"{'display': view === 'chart' ? 'block' : 'none' }\" class=\"mt-1\">\n    <chart-builder [columns]=\"columns\" [data]=\"data\" [config]=\"chartConfig\"></chart-builder>\n</div>\n<div [ngStyle]=\"{'display': view === 'properties' ? 'block' : 'none' }\" class=\"mt-1\">\n    <transform-properties [transformProperties]='transformProperties'></transform-properties>\n</div>\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { HubService } from '../../hub.service';\nimport { DexihRemoteAgentHub } from '../../../shared/shared.models';\n\n\n@Component({\n    selector: 'remoteAgent-view',\n    templateUrl: './remoteAgent-view.component.html'\n})\n\nexport class RemoteAgentViewComponent implements OnInit, OnDestroy {\n    @Input() remoteAgent: DexihRemoteAgentHub;\n\n    _subscription: Subscription;\n\n    public name: string;\n    public isAuthorized: boolean;\n    public isEncrypted: boolean;\n    public lastLoginDateTime: Date;\n    public isConnected: boolean;\n    public isSelected: boolean;\n\n    constructor(private hubService: HubService, private authService: AuthService) { }\n\n    ngOnInit() {\n        this._subscription = combineLatest(\n            this.authService.getRemoteAgentsObservable(),\n            this.hubService.getRemoteAgentObservable(),\n        ).subscribe(result => {\n            let remoteAgents = result[0];\n            let selectedAgent = result[1];\n\n            if (!remoteAgents) { return; }\n\n            let remoteAgent = remoteAgents.find(c => c.remoteAgentKey === this.remoteAgent.remoteAgentKey);\n            let activeAgent = remoteAgent && remoteAgent['activeAgents'] && remoteAgent['activeAgents'].length > 0\n                ? remoteAgent['activeAgents'][0] : null;\n\n            this.isAuthorized = this.remoteAgent.isAuthorized;\n            this.isConnected = activeAgent ? true : false;\n\n            if (remoteAgent) {\n                if (selectedAgent && remoteAgent.remoteAgentKey === selectedAgent.remoteAgentKey) {\n                    this.isSelected = true;\n                } else {\n                    this.isSelected = false;\n                }\n                this.name = activeAgent ? activeAgent.name : ( remoteAgent ? remoteAgent.name : 'Unknown');\n                this.isEncrypted = activeAgent ? activeAgent.isEncrypted : false;\n                this.lastLoginDateTime = remoteAgent ? remoteAgent.lastLoginDateTime : null;\n            } else {\n                this.name = 'Unknown';\n                this.isEncrypted = false;\n                this.lastLoginDateTime = null;\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n}\n","<div [routerLink]=\"['agent-edit', remoteAgent.remoteAgentKey, remoteAgent.remoteAgentHubKey]\" queryParamsHandling=\"merge\">\n    <h5>\n        <i class=\"fa fa-circle mr-1\" [ngClass]=\"{'text-success': isConnected, 'text-danger': !isConnected}\"></i>\n        <encryption-status-icon class=\"mr-1\" [isEncrypted]=\"isEncrypted\"></encryption-status-icon>\n        {{name}} {{isSelected ? '(selected)' : ''}}\n    </h5>\n    <div class=\"note\">{{isAuthorized ? 'Authorized' : 'Not Authorized'}} / Last Login: {{isConnected ? 'Current' : ( lastLoginDateTime | calendar ) }} </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihTable, DexihTableColumn } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'table-column-view',\n    templateUrl: './table-column-view.component.html'\n})\n\nexport class TableColumnViewComponent implements OnInit {\n    @Input() table: DexihTable;\n    @Input() column: DexihTableColumn;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div class=\"float-right\">\n    <dexih-button iconClass=\"fa fa-list\" class=\"mr-1\" [routerLink]=\"['table-edit', table.key]\" queryParamsHandling=\"merge\" text=\"Edit Table\" title=\"Edit table\" ></dexih-button>\n    <dexih-button-edit [routerLink]=\"['table-edit', table.key, 'column', column.key]\" queryParamsHandling=\"merge\" text=\"Edit Column\" title=\"Edit column\" ></dexih-button-edit>\n</div>\n<div>\n    <h5>{{column.name}}</h5>\n    <div *ngIf=\"column.description\">\n        <markdown [data]=\"column.description\"></markdown>\n    </div>\n    <div class=\"note\">Table: {{table.name}}, Updated: {{column.updateDate | calendar }} </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihConnection, DexihTable } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'table-view',\n    templateUrl: './table-view.component.html'\n})\n\nexport class TableViewComponent implements OnInit {\n    @Input() connection: DexihConnection;\n    @Input() table: DexihTable;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div class=\"float-right\">\n    <actions-table-button [tables]=\"[table]\" [pullRight]=\"true\"></actions-table-button>\n</div>\n<div>\n    <h5>{{table.name}}</h5>\n    <div *ngIf=\"table.description\">\n        <markdown [data]=\"table.description\"></markdown>\n    </div>\n    <div class=\"note\">Connection: {{connection.name}} / Updated: {{connection.updateDate | calendar }} </div>\n</div>","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { transformTypes } from '../../hub.remote.models';\nimport { TransformProperties } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'transform-properties-item',\n    templateUrl: 'transform-properties-item.component.html'\n})\n\nexport class TransformPropertiesItemComponent implements OnInit, OnChanges {\n    @Input() transformProperties: TransformProperties;\n\n    transformTypes = transformTypes;\n\n    public icon: string;\n    public propertyKeys: string[];\n\n\n\n    constructor() { }\n\n    ngOnInit(): void {\n        this.refresh();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this.refresh();\n    }\n\n    refresh() {\n        this.icon = null;\n        this.propertyKeys = null;\n\n        if (!this.transformProperties) { return; }\n        let transform = this.transformTypes.find(c => c.key === this.transformProperties.transformType);\n        if (transform) {\n            this.icon = transform.icon;\n        }\n\n        if (this.transformProperties.properties) {\n            this.propertyKeys = Object.keys(this.transformProperties.properties);\n        }\n    }\n\n}\n","<li class=\"list-group-item p-1\">\n    <div class=\"d-flex justify-content-between align-items-center\">\n        <div>\n            <i [class]=\"icon\"></i>\n            {{transformProperties.transformName}}\n            <span *ngIf=\"transformProperties.name && transformProperties.name !== transformProperties.transformName\">\n                ( {{transformProperties.name}} )\n            </span>\n        </div>\n    </div>\n\n    <ul class=\"list-group mt-3\">\n        <li class=\"list-group-item list-group-item-primary\">\n            Rows: {{transformProperties.rows}}, \n            Seconds: {{transformProperties.seconds | number: '1.2-2'}}, \n            Rows/Second: {{transformProperties.seconds ? (( transformProperties.rows/transformProperties.seconds) | number: '1.2-2') : 'N/A'}}</li>\n    </ul>\n\n    <ul *ngIf=\"propertyKeys?.length > 0\" class=\"list-group mt-3\">\n        <li class=\"list-group-item list-group-item-primary\">Properties</li>\n        <li *ngFor=\"let key of propertyKeys\" class=\"list-group-item\"><b>{{key}}:</b> {{transformProperties.properties[key]}}</li>\n    </ul>\n    \n\n    <ul *ngIf=\"transformProperties.referenceProperties\" class=\"list-group mt-3\">\n        <li class=\"list-group-item list-group-item-primary\">Linked Transform</li>\n        <transform-properties [transformProperties]=\"transformProperties.referenceProperties\"></transform-properties>\n    </ul>\n</li>\n\n<transform-properties-item *ngIf=\"transformProperties.primaryProperties\" [transformProperties]=\"transformProperties.primaryProperties\">\n</transform-properties-item>\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { TransformProperties } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'transform-properties',\n    templateUrl: 'transform-properties.component.html'\n})\n\nexport class TransformPropertiesComponent implements OnInit {\n    @Input() transformProperties: TransformProperties;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<dexih-widget-section *ngIf=\"transformProperties\" title=\"Query Details\" [showExpandButton]=\"true\">\n<ul  class=\"list-group\">\n    <transform-properties-item [transformProperties]=\"transformProperties\" ></transform-properties-item>\n</ul>\n</dexih-widget-section>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihView } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'view-view',\n    templateUrl: './view-view.component.html'\n})\n\nexport class ViewViewComponent implements OnInit {\n    @Input() view: DexihView;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div [routerLink]=\"['view-edit', view.key]\" queryParamsHandling=\"merge\">\n    <h5>{{view.name}}</h5>\n    <div *ngIf=\"view.description\">\n        <markdown [data]=\"view.description\"></markdown>\n    </div>\n    <div class=\"note\">{{view.viewType}} / Updated: {{view.updateDate | calendar }} </div>\n</div>","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../shared/shared.module';\nimport { ButtonsModule} from '../buttons/buttons.module';\nimport { DatalinkStatusComponent } from './datalink-status/datalink-status.component';\nimport { ColumnValidationViewComponent } from './columnValidation-view/columnValidation-view.component';\nimport { ConnectionViewComponent } from './connection-view/connection-view.component';\nimport { DatajobViewComponent } from './datajob-view/datajob-view.component';\nimport { DatalinkViewComponent } from './datalink-view/datalink-view.component';\nimport { FileFormatViewComponent } from './fileFormat-view/fileFormat-view.component';\nimport { TableViewComponent } from './table-view/table-view.component';\nimport { TableColumnViewComponent } from './table-column-view/table-column-view.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ViewViewComponent } from './view-view/view-view.component';\nimport { ApiViewComponent } from './api-view/api-view.component';\nimport { ApiStatusComponent } from './api-status/api-status.component'\nimport { RemoteAgentViewComponent } from './remoteAgent-view/remoteAgent-view.component';\nimport { TransformPropertiesComponent } from './transform-properties/transform-properties.component';\nimport { TransformPropertiesItemComponent } from './transform-properties/transform-properties-item.component';\nimport { PreviewDataComponent } from './preview-data/preview-data.component';\nimport { InputParametersComponent } from './input-parameters/input-parameters.component'\nimport { InputParametersViewComponent } from './input-parameters-view/input-parameters-view.component'\nimport { DashboardViewComponent } from './dashboard-view/dashboard-view.component';\nimport { ListOfValuesViewComponent } from './listOfValues-view/listOfValues-view.component';\nimport { DatalinkTestViewComponent } from './datalinkTest-view/datalinkTest-view.component';\n\n@NgModule({\n    imports: [\n        SharedModule,\n        ButtonsModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    exports: [\n        DatalinkStatusComponent,\n        ColumnValidationViewComponent,\n        ConnectionViewComponent,\n        ColumnValidationViewComponent,\n        DatalinkViewComponent,\n        DatajobViewComponent,\n        FileFormatViewComponent,\n        TableViewComponent,\n        TableColumnViewComponent,\n        ViewViewComponent,\n        ApiViewComponent,\n        ApiStatusComponent,\n        DashboardViewComponent,\n        RemoteAgentViewComponent,\n        TransformPropertiesComponent, TransformPropertiesItemComponent,\n        PreviewDataComponent,\n        InputParametersComponent,\n        InputParametersViewComponent,\n        ListOfValuesViewComponent,\n        DatalinkTestViewComponent,\n    ],\n    declarations: [\n        DatalinkStatusComponent,\n        ColumnValidationViewComponent,\n        ConnectionViewComponent,\n        DatalinkViewComponent,\n        DatajobViewComponent,\n        FileFormatViewComponent,\n        TableViewComponent,\n        TableColumnViewComponent,\n        ViewViewComponent,\n        ApiViewComponent,\n        ApiStatusComponent,\n        DashboardViewComponent,\n        RemoteAgentViewComponent,\n        TransformPropertiesComponent, TransformPropertiesItemComponent,\n        PreviewDataComponent,\n        InputParametersComponent,\n        InputParametersViewComponent,\n        ListOfValuesViewComponent,\n        DatalinkTestViewComponent,\n    ],\n    providers: [],\n})\nexport class WidgetsModule { }\n","import { Message, CancelToken } from '../+auth/auth.models';\nimport { eLogLevel, LogFactory } from '../../logging';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { AuthService } from '../+auth/auth.service';\nimport { BehaviorSubject, Observable} from 'rxjs';\nimport { DexihActiveAgent, DexihRemoteAgent, logLevel, eEnvironment, RemoteAgentSettings,\n    RemoteAgentSettingsSubset, ManagedTask } from '../shared/shared.models';\n\n@Injectable()\nexport class HubsService implements OnDestroy {\n\n    private logger = new LogFactory('hubs.service');\n    private _hubMessages = new BehaviorSubject<Array<Message>>([]);\n\n    constructor(\n        private authService: AuthService\n        ) {\n    }\n\n    ngOnDestroy() {\n    }\n\n    getHubMessagesObservable(): Observable<Array<Message>> {\n        return this._hubMessages.asObservable();\n    }\n\n    getHubMessages(): Array<Message> {\n        return this._hubMessages.value;\n    }\n\n    addHubMessage(message: Message) {\n        this.authService.addUpdateNotification(message, false);\n        let messages = this.getHubMessages();\n        messages.push(message);\n        this._hubMessages.next(messages);\n    }\n\n    addHubErrorMessage(message: string) {\n        let newMessage = new Message(false, message, null, null);\n        this.addHubMessage(newMessage);\n    }\n\n    addHubClientErrorMessage(error: Error, context: string) {\n        let message = context + '.  The following error occurred on the client: ' + error.message;\n        let newMessage = new Message(false, message, error.stack, null);\n        this.addHubMessage(newMessage);\n    }\n\n    addHubSuccessMessage(message: string) {\n        let newMessage = new Message(true, message, null, null);\n        this.addHubMessage(newMessage);\n    }\n\n    remoteAgents(): Promise<Array<DexihRemoteAgent>> {\n        return this.authService.post<Array<DexihRemoteAgent>>('/api/Account/GetUserRemoteAgents', { }, 'Getting user remote agents...');\n    }\n\n    cancelTasks(tasks: Array<ManagedTask>): Promise<boolean> {\n        return this.authService.post<boolean>('/api/Account/CancelTasks', tasks, 'Cancelling task(s)...');\n    }\n\n    restartAgent(activeAgent: DexihActiveAgent, force: boolean, cancelToken: CancelToken): Promise<boolean> {\n        return this.authService.postRemote<boolean>('/api/Account/RestartAgent',\n        { instanceId: activeAgent.instanceId, force}, activeAgent, 'Restarting agent...', cancelToken);\n    }\n\n    public downloadRemoteAgent(embedUserName: boolean, environment: eEnvironment, ll: logLevel, settings: RemoteAgentSettingsSubset):\n    Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            let remoteAgentSettings = new RemoteAgentSettings();\n            remoteAgentSettings.embedUserName = embedUserName;\n            remoteAgentSettings.environment = environment;\n            remoteAgentSettings.logLevel = ll;\n            remoteAgentSettings.remoteApplicationSettings = settings;\n\n            this.authService.downloadFile('/api/Remote/DownloadZip', {\n                embedUserName,\n                environment,\n                ll,\n                RemoteApplicationSettings: settings\n            }, 'dexih.remote.zip', 'application/zip').then(() => {\n                resolve(true);\n            }).catch(reason => {\n                this.logger.LogC(() => `downloadRemoteAgent, error: ${reason.message}.`, eLogLevel.Error);\n                this.addHubMessage(reason);\n                reject(reason);\n            });\n        });\n    }\n\n    public downloadRemoteSettings(embedUserName: boolean, environment: eEnvironment, ll: logLevel,\n        settings: RemoteAgentSettingsSubset): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            let remoteAgentSettings = new RemoteAgentSettings();\n            remoteAgentSettings.embedUserName = embedUserName;\n            remoteAgentSettings.environment = environment;\n            remoteAgentSettings.logLevel = ll;\n            remoteAgentSettings.remoteApplicationSettings = settings;\n\n            this.authService.downloadFile('/api/Remote/DownloadAppSettings', {\n                embedUserName,\n                environment,\n                ll,\n                RemoteApplicationSettings: settings\n            }, 'appsettings.json', 'application/json').then(() => {\n                    resolve(true);\n            }).catch(reason => {\n                this.logger.LogC(() => `downloadRemoteSettings, error: ${reason.message}.`, eLogLevel.Error);\n                this.addHubMessage(reason);\n                reject(reason);\n            });\n        });\n    }\n\n}\n\n\n\n\n","import { Component, ViewContainerRef, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { AuthService } from './+auth/auth.service';\nimport { Observable, Subscription } from 'rxjs';\nimport { Router, RouteConfigLoadStart, RouteConfigLoadEnd } from '@angular/router';\nimport { DexihModalComponent } from 'dexih-ngx-components';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  @ViewChild('modal', { static: true }) modal: DexihModalComponent;\n\n  private viewContainerRef: ViewContainerRef;\n\n  private _waitMessagesSubscription: Subscription;\n  private _routeEventsSubscription: Subscription;\n  public waitMessages: string[];\n\n  private loadingRouteKey: string;\n\n  public constructor(\n    viewContainerRef: ViewContainerRef,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    // Small hack in order to catch application root view container ref\n    this.viewContainerRef = viewContainerRef;\n\n  }\n\n  ngOnInit() {\n    this.authService.setDialogDefaultContainer(this.modal);\n    let waitMessagesObservable = this.authService.getWaitMessagesObservable();\n\n    this._waitMessagesSubscription = waitMessagesObservable.subscribe(waitMessages => {\n      // setTimeout forces microtask to stop ExpressionChangedAfterItHasBeenCheckedError\n      setTimeout(() => {\n        this.waitMessages = Array.from(waitMessages.values());\n      });\n    });\n\n    this._routeEventsSubscription = this.router.events.subscribe(event => {\n      if (event instanceof RouteConfigLoadStart) {\n        if (this.loadingRouteKey) {\n          this.authService.removeWaitMessage(this.loadingRouteKey);\n        }\n        this.loadingRouteKey = this.authService.addWaitMessage('Loading scripts...')\n      } else if (event instanceof RouteConfigLoadEnd) {\n        this.authService.removeWaitMessage(this.loadingRouteKey);\n        this.loadingRouteKey = null;\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this._waitMessagesSubscription) { this._waitMessagesSubscription.unsubscribe(); }\n    if (this._routeEventsSubscription) { this._routeEventsSubscription.unsubscribe(); }\n  }\n}\n","<div *ngIf=\"waitMessages?.length > 0\" class=\"loading\">\n    <div class=\"list-group\">\n        <li class=\"list-group-item\">\n            <div class=\"dexih-loader\"></div> &nbsp; &nbsp; Please wait ...\n        </li>\n        <li class=\"list-group-item\" *ngFor=\"let waitMessage of waitMessages\">\n            {{waitMessage.message}}\n            <dexih-button-cancel [autoCompact]=\"false\" *ngIf=\"waitMessage.cancelToken\" (click)=\"waitMessage.cancelToken.cancel()\" class=\"float-right\" text=\"\"></dexih-button-cancel>\n        </li>\n    </div>\n</div>\n<dexih-modal #modal></dexih-modal>\n<router-outlet></router-outlet>","import {NgModule, ErrorHandler} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {FormsModule}   from '@angular/forms';\n\nimport {SharedModule} from './shared/shared.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport {routing} from './app.routing';\n// import {HubService} from './+hub/hub.service';\nimport {AuthService} from './+auth/auth.service';\nimport {LayoutGuard} from './shared/layout/layout.guard';\nimport {HubsService } from './+hubs/hubs.service';\nimport { GlobalErrorHandler } from './global.error.handler';\nimport { LayoutModule } from './shared/layout/layout.module';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AddCsrfHeaderInterceptorService } from './+auth/token.interceptor.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    routing,\n    LayoutModule,\n    SharedModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [\n    {provide: ErrorHandler, useClass: GlobalErrorHandler},\n    // HubService,\n      HubsService,\n      AuthService,\n      LayoutGuard,\n        { provide: HTTP_INTERCEPTORS,\n          useClass: AddCsrfHeaderInterceptorService,\n          multi: true\n        }\n  ],\n  // entryComponents: [AppComponent],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {\n\n}\n","import {Routes, RouterModule} from '@angular/router';\nimport {MainLayoutComponent} from './shared/layout/app-layouts/main-layout.component';\nimport {AuthLayoutComponent} from './shared/layout/app-layouts/auth-layout.component';\nimport { LayoutGuard } from './shared/layout/layout.guard';\n\nexport const routes: Routes = [\n    { path: '', redirectTo: 'hubs', pathMatch: 'full' },\n    { path: 'admin',  canActivate: [LayoutGuard],\n        component: MainLayoutComponent, loadChildren:  () => import('./+admin/admin.module').then(m => m.AdminModule), data: { pageTitle: '' } },\n    { path: 'hubs',  canActivate: [LayoutGuard],\n        component: MainLayoutComponent, loadChildren:  () => import('./+hubs/hubs.module').then(m => m.HubsModule), data: { pageTitle: '' } },\n    { path: 'hub/:hubKey', canActivate: [LayoutGuard],\n        component: MainLayoutComponent, loadChildren: () => import('./+hub/hub.module').then(m => m.HubModule), data: { pageTitle: 'Hub' } },\n    { path: 'auth', component: AuthLayoutComponent, loadChildren: () => import('./+auth/auth.module').then(m => m.AuthModule) },\n    { path: 'public', loadChildren:  () => import('./+public/public.module').then(m => m.PublicModule), data: { pageTitle: '' } },\n    { path: 'terms', redirectTo: '/auth/terms', pathMatch: 'full'},\n    { path: 'privacy', redirectTo: '/help?path=policies%2Fprivacy.md', pathMatch: 'full'},\n    { path: 'unsubscribe', redirectTo: '/hubs/index/manage', pathMatch: 'full' },\n\n    { path: '**', redirectTo: 'hubs' }\n];\n\nexport const routing = RouterModule.forRoot(routes);\n","import { ErrorHandler, Injectable, Injector } from '@angular/core';\nimport { AuthService } from './+auth/auth.service';\nimport { Message } from './+auth/auth.models';\nimport { LogFactory, eLogLevel } from '../logging';\n\n@Injectable()\nexport class GlobalErrorHandler implements ErrorHandler {\n\n    private logger: LogFactory;\n\n    constructor(public injector: Injector) {\n        this.logger = new LogFactory('Global');\n    }\n\n    handleError(error: any) {\n        const authService = this.injector.get(AuthService);\n        let message: Message;\n        if (error.rejection ) {\n            message = error.rejection;\n        } else {\n            let details = ''\n            if (error.stack) {\n                details = 'Client debug information: ' + error.stack\n            }\n\n            if (error.exceptionDetails) {\n                details = 'Server debug information: ' + error.exceptionDetails;\n            }\n\n            message = new Message(false, `Error: ${error.message}`,\n            details, null);\n        }\n        authService.addUpdateNotification(message, true);\n    }\n}\n","import { Component, OnInit, Input, OnDestroy, ElementRef, ViewChild, EventEmitter, Output, OnChanges } from '@angular/core';\nimport { AuthService } from '../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { Router, Route } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport {Location} from '@angular/common';\n\n@Component({\n    selector: 'dexih-help',\n    templateUrl: './dexih-help.component.html',\n    styleUrls: ['./dexih-help.component.scss']\n})\n\nexport class DexihHelpComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() title: string;\n    @Input() path: string;\n    @Input() display = false;\n    @Input() hubKey: string;\n\n    @Output() linkClick: EventEmitter<string> = new EventEmitter();\n\n    @ViewChild('scrollTo') scrollTo: ElementRef;\n\n    public data: string;\n\n    private _displayHelpSubscription: Subscription;\n\n    displayHelp: boolean;\n    constructor(\n        private authService: AuthService,\n        private router: Router,\n        private http: HttpClient,\n        private location: Location\n    ) { }\n\n    ngOnInit() {\n        this._displayHelpSubscription = this.authService.getDisplayHelp().subscribe(displayHelp => {\n            this.displayHelp = displayHelp;\n        });\n    }\n\n    ngOnChanges() {\n        if (this.path) {\n            const url = this.location.prepareExternalUrl(this.path);\n\n            this.http.get(url, { responseType: 'text' }).subscribe(result => {\n\n                let matches = new RegExp('{{SERVER}}|{{HUBKEY}}', 'gi');\n                this.data = result.replace(matches, match => {\n                    switch (match) {\n                        case '{{SERVER}}':\n                            // return this.location.prepareExternalUrl('./');\n                            return window.location.origin;\n                        case '{{HUBKEY}}':\n                            return this.hubKey;\n                    }\n                });\n\n                // data = this.replaceAll(data, '{{HUBKEY}}', this.hubKey)\n                // this.data = data;\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._displayHelpSubscription) { this._displayHelpSubscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.setDisplayHelp(false);\n    }\n\n    getRoute(event) {\n        let element = event.target;\n        while (element) {\n            let link: string = element.getAttribute('href');\n\n            if (link) {\n                if (link.endsWith('.md') && !link.startsWith('http')) {\n                    this.linkClick.emit(link);\n                } else if (link.startsWith('route:')) {\n                    let route = link.substr(6);\n                    this.router.navigate([route]);\n                } else if (link.startsWith('unsafe:route:')) {\n                    let route = link.substr(13);\n                    this.router.navigate([route]);\n                } else if (link.startsWith('#')) {\n                    this.router.navigate(['.', link]);\n                } else {\n                    window.open(link);\n                }\n                event.preventDefault();\n            }\n\n            element = element.parentElement;\n        }\n    }\n\n    replaceAll(str: string, find: string, replace: string): string {\n        return str.replace(new RegExp(find, 'g'), replace);\n    }\n}\n","\n    <dexih-widget *ngIf=\"displayHelp || display\" [title]=\"title\" iconClass=\"fa fa-lg fa-fw fa-question\" [showCloseButton]=\"true\" [padding]=\"true\" (close)=\"close()\">\n        <ng-template #header>\n            <dexih-button class=\"mr-1\" [routerLink]=\"['/hubs/index/help']\" [queryParams]=\"{path: '/intro/getting_started.md'}\">Getting Started</dexih-button>\n            <dexih-button [routerLink]=\"['/hubs/index/help']\" [queryParams]=\"{path: '/reference/references.md'}\">Reference</dexih-button>\n        </ng-template>\n        \n        <markdown [data]=\"data\" (click)=\"getRoute($event)\"></markdown>\n    </dexih-widget>\n","import {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DexihHelpComponent } from './dexih-help.component';\nimport { DexihComponentsModule} from 'dexih-ngx-components';\n// import { DexihWidgetModule, DexihWidgetComponent } from '../ui/dexihWidget';\nimport { NgxMdModule } from 'ngx-md';\nimport { RouterModule } from '@angular/router';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    // DexihWidgetModule,\n    DexihComponentsModule,\n    NgxMdModule\n  ],\n  declarations: [DexihHelpComponent],\n  exports: [DexihHelpComponent],\n})\nexport class DexihHelpModule {\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.scss']\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div id=\"auth-page\">\n    <router-outlet></router-outlet>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-empty-layout',\n  templateUrl: './empty-layout.component.html',\n  styles: []\n})\nexport class EmptyLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { LayoutService } from '../layout.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main-layout.component.html',\n  styleUrls: ['./main-layout.component.scss'],\n  // animation moves sidebar -250 left, and main -250 left, whilst increasing the main margin by 250\n  // to keep everything aligned.\n  animations: [\n    trigger('sidebar', [\n      state('in', style({\n        transform: 'translate(-250px, 0)'\n      })),\n      state('out', style({\n        transform: 'translate(0, 0)'\n      })),\n      transition('in => out', animate('200ms ease-in-out')),\n      transition('out => in', animate('200ms ease-in-out'))\n    ]),\n    trigger('main', [\n      state('in', style({\n        transform: 'translate(0px, 0)'\n      })),\n      state('out', style({\n        transform: 'translate(250px, 0)', 'margin-right': '250px'\n      })),\n      transition('in => out', animate('200ms ease-in-out')),\n      transition('out => in', animate('200ms ease-in-out'))\n    ]),\n  ]\n})\nexport class MainLayoutComponent implements OnInit, OnDestroy {\n  _layoutSubscription: Subscription;\n\n  collapsed = false;\n  mobileViewActivated = false;\n  sidebarState = 'out';\n  mainState = 'out';\n\n  constructor(private layoutService: LayoutService) {\n  }\n\n  ngOnInit() {\n    this._layoutSubscription = this.layoutService.subscribe(store => {\n      this.collapsed = store.menuCollapsed;\n      this.mobileViewActivated = store.mobileViewActivated;\n\n      if (this.collapsed) {\n        this.sidebarState = 'in';\n        this.mainState = 'in';\n      } else {\n        this.sidebarState = 'out';\n        this.mainState = this.mobileViewActivated ? 'in' : 'out';\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this._layoutSubscription) { this._layoutSubscription.unsubscribe(); }\n  }\n\n}\n","<dexih-header class=\"header\"></dexih-header>\n\n<div class=\"mobile content\">\n    <dexih-navigation class=\"sidebar\"  [@sidebar]='sidebarState' ></dexih-navigation>\n    <div class=\"main\" [@main]='mainState'>\n      <dexih-ribbon></dexih-ribbon>\n      <router-outlet></router-outlet>\n    </div>\n</div>\n\n<div class=\"footer\">\n  <dexih-footer></dexih-footer>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'dexih-footer',\n  templateUrl: './footer.component.html'\n})\nexport class FooterComponent implements OnInit, OnDestroy {\n  buildDate: string;\n  buildVersion: string;\n  year: number;\n\n  _globalCacheSubscription: Subscription;\n\n  constructor(private authService: AuthService) {\n     this._globalCacheSubscription = authService.getGlobalCacheObservable().subscribe(cache => {\n       if (cache) {\n        let date = new Date(cache.buildDate);\n        this.buildDate = date.toLocaleDateString(); // cache.buildDate;\n        this.buildVersion = cache.buildVersion;\n       }\n     });\n  }\n\n  ngOnInit() {}\n\n  ngOnDestroy() {\n    if (this._globalCacheSubscription) { this._globalCacheSubscription.unsubscribe(); }\n  }\n\n}\n","<div class=\"text-white bg-primary d-flex flex-row align-middle\" style=\"height: 30px;\">\n        <div class=\"pl-2\">Data Experts Group © {{year}}</div>\n        <div class=\"d-none d-sm-inline ml-auto pr-2\">Version: {{buildVersion}}, Date: {{buildDate}}</div>\n</div>\n","import {Component, OnInit, OnDestroy, ViewChild} from '@angular/core';\nimport {Router} from '@angular/router';\nimport { HubService } from '../../../+hub/hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubCache, eCacheStatus } from '../../../+hub/hub.models';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { LayoutService } from '../layout.service';\nimport { DexihToastComponent, ToastMessage } from 'dexih-ngx-components';\nimport { Message } from '../../../+auth/auth.models';\n\n@Component({\n  selector: 'dexih-header',\n  templateUrl: './header.component.html',\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n      @ViewChild('toasts', { static: true }) public toasts: DexihToastComponent;\n\n\n  _hubCacheSubscription: Subscription;\n  _displayHelpSubscription: Subscription;\n  _layoutSubscription: Subscription;\n  _notificationSubscription: Subscription;\n\n  searchString;\n\n  displayHelp: boolean;\n\n  collapsed = false;\n  mobileViewActivated = false;\n\n\n  hubCache: HubCache;\n  public waitMessage: string;\n\n  constructor(private router: Router,\n    private hubService: HubService,\n    private authService: AuthService,\n    private layoutService: LayoutService) {\n  }\n\n\n  ngOnInit() {\n    this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n      if (cache.status === eCacheStatus.Loaded) {\n        this.hubCache = cache;\n      }\n    });\n\n    this._layoutSubscription = this.layoutService.subscribe(store => {\n      this.collapsed = store.menuCollapsed;\n      this.mobileViewActivated = store.mobileViewActivated;\n    });\n\n    this._displayHelpSubscription = this.authService.getDisplayHelp().subscribe(displayHelp => this.displayHelp = displayHelp);\n\n    this._notificationSubscription = this.authService.getNotificationObservable().subscribe(message => {\n      if (message) {\n        let toastMessage: ToastMessage = {\n          content: message.message,\n          type: message.success ? 'success' : 'error',\n          buttonName: 'details',\n          reference: message.reference,\n          delay: 6000,\n          title: 'Message',\n          onButtonClick: (m) => this.toastClick(message)\n        }\n        this.toasts.add(toastMessage);\n      }\n\n    });\n  }\n\n  ngOnDestroy() {\n    if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n    if (this._displayHelpSubscription) { this._displayHelpSubscription.unsubscribe(); }\n    if (this._layoutSubscription) { this._layoutSubscription.unsubscribe(); }\n    if (this._notificationSubscription) { this._notificationSubscription.unsubscribe(); }\n  }\n\n  onSubmit() {\n    if (this.hubCache) {\n      this.router.navigate(['/hub', this.hubCache.hub.hubKey, 'search', 'All', this.searchString ], { });\n    }\n  }\n\n  onHelpToggle() {\n    this.authService.setDisplayHelp(!this.displayHelp);\n  }\n\n  toastClick(message: Message) {\n    this.authService.informationDialog('Error Notification',\n      message.message, '<pre>' + message.exceptionDetails + '</pre>');\n  }\n\n  onFullScreenToggle() {\n    const documentMethods = {\n      enter: ['requestFullscreen', 'mozRequestFullScreen', 'webkitRequestFullscreen', 'msRequestFullscreen'],\n      exit: ['cancelFullScreen', 'mozCancelFullScreen', 'webkitCancelFullScreen', 'msCancelFullScreen']\n    };\n\n    if (!document.body.classList.contains('full-screen')) {\n      document.body.classList.add('full-screen');\n      document.documentElement[documentMethods.enter.filter((method) => {\n        return document.documentElement[method]\n      })[0]]()\n    } else {\n      document.body.classList.remove('full-screen');\n      document[documentMethods.exit.filter((method) => {\n        return document[method]\n      })[0]]()\n    }\n  }\n\n  onMenuToggle() {\n    this.layoutService.onCollapseMenu();\n  }\n\n  logOut() {\n    this.authService.logout().then(result => {\n    });\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\n    <a class=\"btn btn-outline-secondary text-white ml-1\" (click)=\"onMenuToggle()\" title=\"Collapse Menu\">\n        <i class=\"fa fa-reorder\"></i>\n    </a>\n\n    <img src=\"assets/img/dexih/dex_logo_wide_raw.png\" height=\"30\" class=\"d-none d-lg-inline-block align-top pl-1\" alt=\"Data Experts Group\">\n\n    <!-- <messages></messages> -->\n\n    <div class=\"ml-auto\"></div>\n\n    <!-- input: search field -->\n    <form *ngIf=\"this.hubCache\" #searchForm=\"ngForm\" (ngSubmit)=\"onSubmit()\" class=\"d-none d-md-inline form-inline\">\n        <div class=\"input-group\">\n            <input [(ngModel)]=\"searchString\" class=\"form-control\" type=\"text\" name=\"param\" required placeholder=\"Search metadata...\">\n            <div class=\"input-group-append\">\n                <button class=\"btn btn-outline-secondary text-white\" type=\"submit\">\n                    <i class=\"fa fa-search\"></i>\n                </button>\n            </div>\n        </div>\n    </form>\n    <!-- end input: search field -->\n\n    <a *ngIf=\"displayHelp\" class=\"btn btn-outline-danger text-white ml-1\" (click)=\"onHelpToggle()\" title=\"Toggle help off\" data-toggle=\"button\">\n        <i class=\"fa fa-question\"></i>\n    </a>\n\n    <a *ngIf=\"!displayHelp\" class=\"btn btn-outline-success text-white ml-1\" (click)=\"onHelpToggle()\" title=\"Toggle help on\" data-toggle=\"button\">\n        <i class=\"fa fa-question\"></i>\n    </a>\n\n    <a class=\"btn btn-outline-secondary text-white ml-1\" (click)=\"onFullScreenToggle()\" title=\"Full Screen\">\n        <i class=\"fa fa-arrows-alt\"></i>\n    </a>\n\n    <a class=\"btn btn-outline-secondary text-white ml-1\" (click)=\"logOut()\" title=\"Sign Out\" data-action=\"userLogout\" data-logout-msg=\"You can improve your security further after logging out by closing this opened browser\">\n        <i class=\"fa fa-sign-out\"></i>\n    </a>\n\n    <dexih-tasks class=\"pl-1\"></dexih-tasks>\n\n    <dexih-toast #toasts></dexih-toast>\n</nav>\n","\n\nimport {NgModule} from '@angular/core';\n\nimport {CommonModule} from '@angular/common';\nimport {RouterModule } from '@angular/router';\nimport {FormsModule} from '@angular/forms';\nimport { SharedModule } from '../../shared.module';\n\nimport {HeaderComponent} from './header.component';\nimport {MessagesComponent} from './messages/messages.component';\nimport {TasksComponent} from './tasks/tasks.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    SharedModule\n  ],\n  declarations: [\n    TasksComponent,\n    HeaderComponent,\n    MessagesComponent\n  ],\n  exports: [\n    HeaderComponent,\n  ]\n})\nexport class HeaderModule {}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { Subscription, Observable, combineLatest} from 'rxjs';\nimport { LayoutService } from '../../layout.service';\n\n@Component({\n    selector: 'messages',\n    templateUrl: './messages.component.html'\n})\n\nexport class MessagesComponent implements OnInit, OnDestroy {\n    private _waitMessagesSubscription: Subscription;\n    private _layoutSubscription: Subscription;\n\n    public waitMessage: string;\n    waitMessages: Observable<Map<string, string>>;\n\n    mobileViewActivated;\n\n    constructor(private authService: AuthService, private layoutService: LayoutService) { }\n\n    ngOnInit() {\n        this.waitMessages = this.authService.getWaitMessagesObservable();\n\n        this._waitMessagesSubscription = this.waitMessages.subscribe(waitMessages => {\n            if (waitMessages.size === 0) {\n              this.waitMessage = '';\n            } else if (waitMessages.size === 1) {\n              this.waitMessage = waitMessages.values().next().value;\n            } else {\n              this.waitMessage = `Waiting for ${waitMessages.size} operations...`;\n            }\n        });\n\n        this._layoutSubscription = this.layoutService.subscribe(store => {\n            this.mobileViewActivated = store.mobileViewActivated;\n          });\n\n    }\n\n    ngOnDestroy() {\n        if (this._waitMessagesSubscription) { this._waitMessagesSubscription.unsubscribe(); }\n    }\n}\n","<div *ngIf=\"waitMessage\" class=\"pl-2 text-white\" [title]=\"waitMessage\">\n    <i class=\"fa fa-spin fa-cog\"></i>\n    <span *ngIf=\"!mobileViewActivated\">{{waitMessage}}</span>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { Observable, Subscription} from 'rxjs';\nimport { Router } from '@angular/router';\nimport { ManagedTask, eManagedTaskStatus, eManagedTaskStatusItems } from '../../../shared.models';\n\n@Component({\n    selector: 'dexih-tasks',\n    templateUrl: './tasks.component.html',\n    styleUrls: ['./tasks.component.scss']\n})\nexport class TasksComponent implements OnInit, OnDestroy {\n    private _tasksSubscription: Subscription;\n\n    count: number;\n    lastUpdate: any;\n    active: boolean;\n    activities: any;\n    loading: boolean;\n    tasksRunning = false;\n\n    eManagedTaskStatus = eManagedTaskStatus;\n    eManagedTaskStatusItems = eManagedTaskStatusItems\n\n    tasks: Observable<Array<ManagedTask>>;\n\n    constructor(\n        private authService: AuthService,\n        private router: Router\n    ) {\n        this.active = false;\n        this.loading = false;\n        this.activities = [];\n        this.count = 0;\n        this.lastUpdate = new Date();\n    }\n\n    ngOnInit() {\n        this.tasks = this.authService.getTasksObservable();\n\n        this._tasksSubscription = this.tasks.subscribe(tasks => {\n            this.count = tasks.length;\n            this.tasksRunning = tasks.findIndex(c => c.status === eManagedTaskStatus.Created\n                || c.status === eManagedTaskStatus.Queued\n                || c.status === eManagedTaskStatus.Running) >= 0;\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._tasksSubscription) { this._tasksSubscription.unsubscribe(); }\n        if (this._tasksSubscription) { this._tasksSubscription.unsubscribe(); }\n    }\n\n    update() {\n        this.loading = true;\n        setTimeout(() => {\n            this.lastUpdate = new Date()\n            this.loading = false\n        }, 1000)\n    }\n\n    showTask(item: ManagedTask) {\n        this.router.navigate(['/hubs/tasks/view', item.taskId])\n      }\n\n    cancelTask() {\n        // TBC\n        alert('cancel task not completed.');\n    }\n\n}\n","<dexih-button-dropdown buttonClass=\"btn btn-outline-secondary text-white\" iconClass=\"fa fa-tasks\" [pullRight]=\"true\" [badge]=\"count\" badgeClass=\"badge-light\" [hideCarrot]=\"true\" title=\"Tasks\">\n    <div *ngIf=\"count==0\">\n        <h5 class=\"p-3\">No tasks</h5>\n    </div>\n    <div class=\"m-0 list-group\" class=\"tasks\">\n        <ng-template ngFor let-item [ngForOf]=\"tasks | async | fieldSortDesc : 'lastUpdate'\">\n            <a (click)=\"showTask(item)\" class=\"list-group-item list-group-item-action flex-column align-items-start\">\n                <div class=\"d-flex w-100 justify-content-between\">\n                    <h5 class=\"mb-1\">{{item.name}}</h5>\n                    <small>{{eManagedTaskStatus[item.status]}} {{item.percentage}}%</small>\n                </div>\n                <small *ngIf=\"item.stepName && !item.isCompleted\">Step: {{item.stepName}}</small>\n                <div class=\"mb-1\">\n                    <div class=\"progress\" style=\"width: 100%\">\n                        <div class=\"progress-bar \" [ngClass]=\"{'bg-success': item.status == eManagedTaskStatus.Completed, 'bg-info': item.status == eManagedTaskStatus.Created || item.status == eManagedTaskStatus.Running || item.status == eManagedTaskStatus.Scheduled, 'bg-danger':  item.status == eManagedTaskStatus.Error || item.status == eManagedTaskStatus.Cancelled }\"\n                            role=\"progressbar\" [style.width]=\"item.percentage + '%'\" [attr.aria-valuenow]=\"item.percentage\" aria-valuemin=\"0\"\n                            aria-valuemax=\"100\">\n                            &nbsp;\n                        </div>\n                    </div>\n                </div>\n                <dexih-button-cancel *ngIf=\"!item.isCompleted\" [compact]=\"true\" (click)=\"cancel(item)\"></dexih-button-cancel>\n                <small>Updated: {{item.lastUpdate | calendar }}</small>\n            </a>\n\n        </ng-template>\n    </div>\n\n</dexih-button-dropdown>","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\nimport { User } from '../../+auth/auth.models';\nimport { AuthService } from '../../+auth/auth.service';\nimport { HubService } from '../../+hub/hub.service';\n\n@Injectable()\nexport class LayoutGuard implements CanActivate {\n    constructor(private authService: AuthService, private router: Router, private route: ActivatedRoute) { \n        this.authService.initialize();\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            this.authService.isLoggedIn().then(result => {\n                if (!result) {\n                    this.authService.redirectUrl = state.url;\n                    this.router.navigate(['/auth/login']);\n                    resolve(false);\n                } else {\n                    let user: User = result;\n                    resolve(true);\n                }\n            }).catch(reason => {\n                this.authService.redirectUrl = state.url;\n                this.router.navigate(['/auth/login']);\n            });\n        });\n    }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport { RouterModule} from '@angular/router';\nimport { RibbonModule } from './ribbon';\nimport { SharedModule} from '../shared.module';\n\nimport {HeaderModule} from './header/header.module';\n\nimport {FooterComponent} from './footer/footer.component';\nimport {NavigationModule} from './navigation/navigation.module';\nimport { MainLayoutComponent } from './app-layouts/main-layout.component';\nimport { EmptyLayoutComponent } from './app-layouts/empty-layout.component';\nimport { AuthLayoutComponent } from './app-layouts/auth-layout.component';\nimport { HubService } from '../../+hub';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n\n    SharedModule,\n    HeaderModule,\n    NavigationModule,\n    RibbonModule,\n  ],\n  declarations: [\n    FooterComponent,\n    MainLayoutComponent,\n    EmptyLayoutComponent,\n    AuthLayoutComponent,\n  ],\n  exports: [\n    // HeaderModule,\n    // NavigationModule,\n    // FooterComponent,\n    // RibbonComponent,\n  ],\n  providers: [\n    HubService\n  ]\n})\nexport class LayoutModule {\n  static forRoot(): ModuleWithProviders<LayoutModule> {\n    return {\n        ngModule: LayoutModule,\n        providers: [HubService]\n    };\n}\n}\n","import {Component, OnInit, Injectable, HostListener} from '@angular/core';\nimport {AuthService} from '../../+auth/auth.service';\nimport {Observable, Subscription, BehaviorSubject, combineLatest, fromEvent} from 'rxjs';\nimport {map, debounceTime} from 'rxjs/operators';\n\n\nconst store = {\n  shortcutOpen: false,\n  isMobile: \t(/iphone|ipad|ipod|android|blackberry|mini|windows\\sce|palm/i.test(navigator.userAgent.toLowerCase())),\n  device: '',\n  mobileViewActivated: false,\n  menuCollapsed: false,\n  menuIsOpen: false\n};\n\n@Injectable()\nexport class LayoutService {\n\n  isActivated: boolean;\n  store: any;\n  private subject: BehaviorSubject<any>;\n\n  trigger() {\n    this.subject.next(this.store)\n  }\n\n  subscribe(next, err?, complete?): Subscription {\n    return this.subject.subscribe(next, err, complete)\n  }\n\n  constructor(\n    private authService: AuthService\n  ) {\n    this.subject = new BehaviorSubject<any>(store);\n    this.store = store;\n    this.resizeUpdate();\n\n    fromEvent(window, 'resize').pipe(debounceTime(100), map(() => {\n      this.resizeUpdate();\n      this.trigger();\n    })).subscribe();\n  }\n\n  resizeUpdate() {\n    this.store.mobileViewActivated = window.innerWidth < 992;\n    this.store.menuCollapsed = window.innerWidth < 1200;\n  }\n\n  hideMenu() {\n    this.store.menuIsOpen = false;\n    if (this.store.mobileViewActivated) {\n      this.store.menuCollapsed = true;\n    }\n    this.trigger();\n  }\n\n  onShowMenu() {\n    this.store.menuIsOpen = true;\n    this.trigger();\n  }\n\n  onCollapseMenu() {\n    this.store.menuCollapsed = !this.store.menuCollapsed;\n    this.trigger();\n  }\n\n  menuCollapsed(): boolean {\n    return this.store.menuCollapsed;\n  }\n\n  onShortcutToggle(condition?: any) {\n    if (!condition) {\n      this.store.shortcutOpen = !this.store.shortcutOpen;\n    } else {\n      this.store.shortcutOpen = !!condition;\n    }\n\n    this.trigger();\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubService } from '../../../../+hub/hub.service';\nimport { DexihHubAuth, User, eHubAccess } from '../../../../+auth/auth.models';\nimport { Observable, Subscription, combineLatest} from 'rxjs';\nimport { eCacheStatus } from '../../../../+hub/hub.models';\nimport { HubsService } from '../../../../+hubs/hubs.service';\n\n@Component({\n    selector: 'dexih-hubs',\n    templateUrl: './hubs.component.html'\n})\nexport class HubsComponent implements OnInit, OnDestroy {\n\n    hubs: Observable<Array<DexihHubAuth>>;\n    hubCacheStatusSubscription: Subscription;\n    hubStatusMessage: string;\n    user: User;\n\n    eHubAccess = eHubAccess;\n\n    textClass = '';\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private router: Router) {\n    }\n\n    ngOnInit() {\n        this.hubs = this.authService.getHubsObservable();\n        this.authService.getUserObservable().subscribe(u => { this.user = u; });\n\n        this.hubStatusMessage = 'No Hub Selected';\n\n        this.hubCacheStatusSubscription = this.hubService.getHubCacheObservable().subscribe(hubCache => {\n            switch (hubCache.status) {\n                case eCacheStatus.Loading:\n                    this.textClass = 'text-info';\n                    this.hubStatusMessage = hubCache.hub.name + '(Loading...)';\n                    break;\n                case eCacheStatus.Loaded:\n                    this.textClass = 'text-success';\n                    this.hubStatusMessage = hubCache.hub.name;\n                    break;\n                case eCacheStatus.NotLoaded:\n                    this.textClass = 'text-danger';\n                    this.hubStatusMessage = 'Cache Not loaded';\n                    break;\n                case eCacheStatus.NoHub:\n                    this.textClass = 'text-danger';\n                    this.hubStatusMessage = 'No Hub Selected';\n                    break;\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.hubCacheStatusSubscription.unsubscribe();\n    }\n\n\n    openHub(hub: DexihHubAuth) {\n        this.router.navigate(['/hub/' + hub.hubKey + '/summary']);\n    }\n\n\n    manageHubs() {\n        this.router.navigate(['/hubs/hubs-view']);\n    }\n}\n","<menu-parent [name]=\"hubStatusMessage\" title=\"Available Hubs\" iconClass=\"fa fa-lg fa-fw fa-life-saver\" [textClass]=\"textClass\">\n    <li *ngFor=\"let hub of hubs | async\" class=\"nav-item\" [title]=\"hub.name\" >\n        <a class=\"nav-link\" (click)=\"openHub(hub)\">\n            <i *ngIf=\"hub.hubAccess == eHubAccess.User\" class=\"fa fa-fw fa-user-secret\" title=\"Full Access\"></i>\n            <i *ngIf=\"hub.hubAccess == eHubAccess.ReadOnly\" class=\"fa fa-fw fa-book\"  title=\"Read only Access\"></i>\n            <i *ngIf=\"hub.hubAccess == eHubAccess.Public\" class=\"fa fa-fw fa-users\"  title=\"Public Hub\"></i>\n            {{hub.name}}</a>\n    </li>\n    <div class=\"dropdown-divider\"></div>\n    <li class=\"nav-item\" >\n        <a class=\"nav-link\" (click)=\"manageHubs()\"><i class=\"fa fa-fw fa-power-off\"></i> Manage Hubs</a>\n    </li>\n</menu-parent>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { Router } from '@angular/router';\nimport { User } from '../../../../+auth/auth.models';\nimport { Subscription, combineLatest} from 'rxjs';\n\n@Component({\n\n    selector: 'dexih-login-info',\n    templateUrl: './login-info.component.html'\n})\nexport class LoginInfoComponent implements OnInit, OnDestroy {\n    user: User;\n    userSubcription: Subscription;\n\n    constructor(\n        private authService: AuthService,\n        private router: Router\n        ) {\n        this.userSubcription = this.authService.getUserObservable().subscribe(user => this.user = user);\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnDestroy() {\n        if (this.userSubcription) { this.userSubcription.unsubscribe(); }\n    }\n\n    manageUser() {\n        this.router.navigate(['/hubs/manage']);\n    }\n\n    logout() {\n        this.authService.logout().then(result => {\n            if (result === true) {\n                this.login();\n            }\n        });\n    }\n\n    login() {\n        this.authService.redirectUrl = this.router.url;\n        this.router.navigate(['/auth/login']);\n    }\n}\n","<!-- <dexih-button-dropdown *ngIf=\"user\" \n    iconClass=\"fa fa-lg fa-fw fa-user\" \n    buttonClass=\"nav-button text-success\" \n    [text]=\"user.userName\"\n    [autoCompact]=\"false\"\n    >\n    <a class=\"dropdown-item\" (click)=\"manageUser()\"><i class=\"fa fa-user\"></i> Update Details</a>\n    <a class=\"dropdown-item\" (click)=\"logout()\"><i class=\"fa fa-sign-out\"></i> Logout</a>\n</dexih-button-dropdown>\n<dexih-button *ngIf=\"!user\"\n    (click)=\"login()\"\n    iconClass=\"fa fa-lg fa-fw fa-user\" \n    buttonClass=\"nav-button text-danger\" \n>\nLogin\n</dexih-button> -->\n\n<menu-parent *ngIf=\"user\"  [name]=\"user.userName\" title=\"User Options\" iconClass=\"fa fa-lg fa-fw fa-user\" textClass=\"text-success\">\n    <li class=\"nav-item\">\n        <a class=\"nav-link\" (click)=\"manageUser(hub)\"><i class=\"fa fa-user\"></i> Update Details</a>\n    </li>\n    <li class=\"nav-item\">\n        <a class=\"nav-link\" (click)=\"logout(hub)\"><i class=\"fa fa-sign-out\"></i> Logout</a>\n    </li>\n</menu-parent>\n<dexih-button *ngIf=\"!user\"\n    (click)=\"login()\"\n    iconClass=\"fa fa-lg fa-fw fa-user\" \n    buttonClass=\"nav-button text-danger\" \n>\nLogin\n</dexih-button>\n","export {MenuItemComponent} from './menu-item.component';\nexport {MenuParentComponent} from './menu-parent.component';\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n    selector: 'menu-item',\n    templateUrl: './menu-item.component.html'\n})\n\nexport class MenuItemComponent implements OnInit {\n    @Input() name: string;\n    @Input() title: string;\n    @Input() routerLink: string;\n    @Input() iconClass: string;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<li class=\"nav-item feather\" routerLinkActive=\"active\">\n    <a class=\"nav-link feather\" [routerLink]=\"routerLink\" [title]=\"title\">\n        <i [ngClass]=\"iconClass\"></i> <span class=\"menu-item-parent\">{{name}}</span>\n    </a>\n</li>","import { Component, OnInit, Input, ContentChild, TemplateRef } from '@angular/core';\nimport { LayoutService } from '../../layout.service';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\n\n@Component({\n    selector: 'menu-parent',\n    templateUrl: './menu-parent.component.html',\n    animations: [\n    // trigger name for attaching this animation to an element using the [@triggerName] syntax\n    trigger('slideDown', [\n        state('collapsed', style({ height: 0 })),\n        state('expanded', style({ height: '*' })),\n        transition('expanded <=> collapsed', animate('300ms ease-in')),\n    ])\n    ]\n})\n\nexport class MenuParentComponent implements OnInit {\n    @Input() name: string;\n    @Input() title: string;\n    @Input() iconClass: string;\n    @Input() textClass: string;\n\n    @ContentChild('item') itemTemplate: TemplateRef<any>;\n\n    public expanded = false;\n    public state = 'collapsed';\n\n    constructor(private layoutService: LayoutService) { }\n\n    ngOnInit() { }\n\n    public toggle() {\n        this.expanded = !this.expanded;\n        this.state = this.expanded ? 'expanded' : 'collapsed';\n  }\n}\n","<li class=\"nav-item\" [ngClass]=\"{'active open' : expanded}\">\n    <a class=\"nav-link d-flex\" [title]=\"title\" (click)=\"toggle()\" [title]=\"name\">\n        <span class=\"{{textClass}}\" >\n            <ng-template [ngTemplateOutlet]=\"itemTemplate\">\n            </ng-template>\n            <i [class]=\"iconClass\"></i>\n        </span>\n        <span class=\"menu-item-parent\">{{name}}</span>\n        <b class=\"ml-auto\">\n            <em *ngIf=\"expanded\" class='fa fa-minus-square-o'></em>\n            <em *ngIf=\"!expanded\" class='fa fa-plus-square-o'></em>\n        </b>\n    </a>\n    <ul class=\"nav-item\" [@slideDown]='state' style=\"overflow: hidden; display: block\">\n        <ng-content></ng-content>\n    </ul>\n</li>","import { Subscription, combineLatest} from 'rxjs';\nimport { Component, OnDestroy, OnInit, HostListener, ViewChild } from '@angular/core';\nimport { HubService } from '../../../+hub/hub.service';\nimport { AuthService, } from '../../../+auth/auth.service';\nimport { DexihHubAuth, User } from '../../../+auth/auth.models';\nimport { LayoutService } from '../layout.service';\nimport { HubCache, sharedObjectProperties } from '../../../+hub/hub.models';\nimport { DexihRemoteAgentHub, ePermission } from '../../shared.models';\n\n@Component({\n\n  selector: 'dexih-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n})\nexport class NavigationComponent implements OnInit, OnDestroy {\n  @ViewChild('sidebar', { static: true }) sidebarElement: any;\n\n  hubKey: number;\n\n  _layoutSubscription: Subscription;\n  _subscription: Subscription;\n  _hubCacheObserve: Subscription;\n\n  hubCache: HubCache;\n  message: string;\n\n  hubCacheLoaded = false;\n\n  public expanded = false;\n  public state = 'collapsed';\n\n  user: User;\n  hubs: Array<DexihHubAuth>;\n  remoteAgents: Array<DexihRemoteAgentHub>;\n  ePermission = ePermission;\n  sharedObjectProperties = sharedObjectProperties;\n  objectCounts = [];\n  ignoreClick = false;\n\n  mobileViewActivated = false;\n\n  activeAgentCount = 0;\n\n\n  constructor(\n    private hubService: HubService,\n    private authService: AuthService,\n    private layoutService: LayoutService) {\n  }\n\n  ngOnInit() {\n    this._subscription = combineLatest(\n      this.hubService.getHubCacheObservable(),\n      this.authService.getUserObservable(),\n      this.authService.getHubsObservable(),\n      this.authService.getRemoteAgentsObservable()\n    ).subscribe(result => {\n      this.hubCache = result[0];\n      this.user = result[1];\n      this.hubs = result[2];\n      let activeAgents = result[3];\n\n\n      if (activeAgents) {\n        this.activeAgentCount = activeAgents.length;\n      } else {\n        this.activeAgentCount = 0;\n      }\n\n      if (this.hubCache && this.hubCache.isLoaded()) {\n        this.remoteAgents = this.hubCache.hub.dexihRemoteAgentHubs;\n\n        this.sharedObjectProperties.forEach(c => {\n          if (!this.hubCache.hub[c.cacheProperty]) {\n            this.objectCounts[c.type] = 0;\n          } else {\n            this.objectCounts[c.type] = this.hubCache.hub[c.cacheProperty].filter(d => d.isValid).length;\n          }\n\n        });\n\n        this.hubCacheLoaded = true;\n        this.watchChanges();\n    } else {\n        this.hubCacheLoaded = false;\n    }\n    });\n\n    if (this._layoutSubscription) { this._layoutSubscription.unsubscribe(); }\n      this._layoutSubscription = this.layoutService.subscribe(store => {\n        this.mobileViewActivated = store.mobileViewActivated;\n        if (store.menuCollapsed) {\n          this.expanded = false;\n          this.state = 'collapsed';\n        } else {\n          this.ignoreClick = true;\n          this.expanded = true;\n          this.state = 'expanded';\n        }\n      });\n\n  }\n\n  hideMenu() {\n    this.layoutService.hideMenu();\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._layoutSubscription) { this._layoutSubscription.unsubscribe(); }\n    if (this._hubCacheObserve) { this._hubCacheObserve.unsubscribe(); }\n  }\n\n  watchChanges() {\n    // watch the current connection in case it is changed in another session.\n    if (this._hubCacheObserve) { this._hubCacheObserve.unsubscribe(); }\n    this._hubCacheObserve = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n      let hubCache = this.hubCache;\n      this.hubCache = hubCache;\n\n      let property = this.sharedObjectProperties.find(c => c.type === hubCacheChange.changeClass);\n      if (property) {\n        this.objectCounts[hubCacheChange.changeClass] = this.hubCache.hub[property.cacheProperty].filter(d => d.isValid).length;\n      }\n\n    });\n  }\n\n  // detect a click outside the control, and hide the sidebar\n  @HostListener('document:click', ['$event.target'])\n  public onClick(targetElement: any) {\n        const clickedInside = this.sidebarElement.nativeElement.contains(targetElement);\n        if (!clickedInside && !this.ignoreClick && this.mobileViewActivated && this.expanded) {\n            this.layoutService.hideMenu();\n        }\n    }\n\n}\n","\n<nav #sidebar id=\"dexih-sidebar\" >            \n        <ul class=\"flex-column\">\n            <dexih-login-info></dexih-login-info>\n\n            <menu-parent name=\"Configure\" title=\"Management functions\" iconClass=\"fa fa-lg fa-fw fa-wrench\">\n                    <li class=\"nav-item\" *ngIf=\"user?.isAdmin\">\n                        <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\"  routerLink=\"/admin/users\">\n                            <i class=\"fa fa-lg fa-fw fa-users\"></i>\n                            \n                            <span class=\"menu-item-parent\">{{'Users' }}</span>\n                        </a>\n                    </li>\n                    <li class=\"nav-item\" >\n                        <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hubs/index/hubs-view\">\n                            <i class=\"fa fa-lg fa-fw fa-life-saver\"></i>\n                            <span class=\"menu-item-parent\">{{'Hubs'}}</span>\n                        </a>\n                    </li>\n    \n                    <li class=\"nav-item\"  *ngIf=\"hubCacheLoaded && hubCache.canAdministrate\">\n                        <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary/manage/manage-users\" title=\"Manage Hub User Permissions\">\n                            <i class=\"fa fa-lg fa-fw fa-user-plus\"></i> <span class=\"menu-item-parent\">{{'Hub Users'}}</span>\n                        </a>\n                    </li>\n\n                    <li class=\"nav-item\"  *ngIf=\"hubCacheLoaded && hubCache.canAdministrate\">\n                        <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hubs/index/hubs-view/hub-edit/{{hubCache.hub.hubKey}}\" title=\"Edit Hub Details\">\n                            <i class=\"fa fa-lg fa-fw fa-edit\"></i> <span class=\"menu-item-parent\">{{'Hub Edit'}}</span>\n                        </a>\n                    </li>\n\n                    <li class=\"nav-item\">\n                        <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hubs/agents\" title=\"Manage Remote Agents\">\n                            <i class=\"fa fa-lg fa-fw fa-wifi\"></i> <span class=\"menu-item-parent\">{{'Remote Agents'}}</span>\n                        </a>\n                    </li>\n\n                    <li class=\"nav-item\"  *ngIf=\"hubCacheLoaded && hubCache.canAdministrate\">\n                        <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary/agents\" title=\"Manage Remote Agents\">\n                            <i class=\"fa fa-lg fa-fw fa-wrench\"></i> <span class=\"menu-item-parent\">{{'Hub Agents'}}</span>\n                        </a>\n                    </li>\n        \n            </menu-parent>\n            \n            <div class=\"dropdown-divider\"></div>\n\n            <li class=\"nav-item\">\n                <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\"  [routerLinkActiveOptions]=\"{exact: true}\" routerLink=\"/hubs/index\"  title=\"Home\">\n                    <span data-feather=\"Hubs\"><i class=\"fa fa-lg fa-fw fa-home\"></i></span>\n                     {{'Overview'}}\n                </a>\n            </li>\n\n            <li class=\"nav-item\" >\n                <a (click)=\"hideMenu()\" class=\"nav-link text-primary\"  routerLinkActive=\"active\" routerLink=\"/hubs/index/help\">\n                    <span data-feather=\"Getting Started\"><i class=\"fa fa-lg fa-fw fa-question-circle\"></i></span>\n                    {{'Getting Started' }}\n                </a>\n            </li>\n   \n            <li class=\"nav-item\" >\n                 <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hubs/index/sharedData\">\n                    <span data-feather=\"Shared Data\"><i class=\"fa fa-lg fa-fw fa-newspaper-o\"></i></span>\n                    {{'Shared Data' }}\n                </a>\n            </li>\n\n            <li class=\"nav-item\" >\n                <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hubs/index/notifications\">\n                    <span data-feather=\"Notifications\"><i class=\"fa fa-lg fa-fw fa-envelope-o\"></i></span>\n                    {{'Notifications'}}\n                </a>\n            </li>\n\n            <li class=\"nav-item\" >\n                <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hubs/index/tasks\">\n                    <span data-feather=\"Notifications\"><i class=\"fa fa-lg fa-fw fa-tasks\"></i></span>\n                    {{'Remote Tasks'}}\n                </a>\n            </li>\n\n            <li class=\"nav-item\" >\n                <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hubs/index/support\">\n                    <span data-feather=\"Support\"><i class=\"fa fa-lg fa-fw fa-comment-o\"></i></span>\n                    {{'Support'}}\n                </a>\n            </li>\n\n            <div class=\"dropdown-divider\"></div>\n            <dexih-hubs></dexih-hubs>\n\n            <ng-template [ngIf]=\"hubCacheLoaded\">\n                <dexih-remote-agent></dexih-remote-agent>\n                \n                <li class=\"nav-item\"  >\n                    <a (click)=\"hideMenu()\" class=\"nav-link\" (click)=\"hideMenu()\"  routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary\"  title=\"Hub Summary\">\n                        <i class=\"fa fa-lg fa-fw fa-dashboard\"></i> <span class=\"menu-item-parent\">{{'Summary'}}</span>\n                    </a>\n                </li>\n\n                <li class=\"nav-item\" >\n                    <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/search\" title=\"Search\">\n                        <i class=\"fa fa-lg fa-fw fa-search\"></i> <span class=\"menu-item-parent\">{{'Search'}}</span>\n                    </a>\n                </li>\n    \n                <li *ngFor=\"let sharedObject of sharedObjectProperties\" class=\"nav-item\">\n                    <a class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary/{{sharedObject.routerLink}}\" title=\"{{sharedObject.description}}\">\n                        <i class=\"fa fa-lg fa-fw {{sharedObject.icon}}\"></i> <span class=\"menu-item-parent\">{{sharedObject.displayName}}</span>\n                        <span class=\"badge badge-primary float-right\">{{objectCounts[sharedObject.type]}}</span>\n                    </a>\n                </li>\n\n                <li class=\"nav-item\" >\n                    <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"sharedData\">\n                       <span data-feather=\"Shared Data\"><i class=\"fa fa-lg fa-fw fa-newspaper-o\"></i></span>\n                       {{'Shared Data' }}\n                   </a>\n               </li>\n\n                <li class=\"nav-item\">\n                    <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary/files/manage\" title=\"Manage Flat Files within an existing table definition\">\n                        <i class=\"fa fa-lg fa-fw fa-upload\"></i> <span class=\"menu-item-parent\">{{'Manage Files'}}</span>\n                    </a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary/files/bulk-load\" title=\"Bulk upload files to create auto create table definitions.\">\n                        <i class=\"fa fa-lg fa-fw fa-files-o\"></i> <span class=\"menu-item-parent\">{{'Bulk Load Files'}}</span>\n                    </a>\n                </li>\n    \n                <li class=\"nav-item\">\n                    <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary/datalinks/results\" title=\"Recent execution summaries from datalink and datajobs.\">\n                        <i class=\"fa fa-lg fa-fw fa-tasks\"></i> <span class=\"menu-item-parent\">{{'Job Results'}}</span>\n                    </a>\n                </li>\n\n                <li class=\"nav-item\" *ngIf=\"hubCache.canWrite\">\n                    <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary/import\" title=\"Import Objects\">\n                        <i class=\"fa fa-lg fa-fw fa-level-down\"></i> <span class=\"menu-item-parent\">{{'Import'}}</span><span class=\"badge badge-primary float-right\"></span>\n                    </a>\n                </li>\n\n                <li class=\"nav-item\" *ngIf=\"hubCache.canWrite\">\n                    <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary/export\" title=\"Export Objects\">\n                        <i class=\"fa fa-lg fa-fw fa-level-up\"></i> <span class=\"menu-item-parent\">{{'Export'}}</span><span class=\"badge badge-primary float-right\"></span>\n                    </a>\n                </li>\n            </ng-template>\n\n        </ul>\n    </nav>\n\n\n\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NavigationComponent} from './navigation.component';\nimport {AuthModule} from '../../../+auth/auth.module';\nimport {RouterModule} from '@angular/router';\nimport {BsDropdownModule} from 'ngx-bootstrap/dropdown';\nimport {LoginInfoComponent} from './login-info/login-info.component';\nimport {MenuParentComponent, MenuItemComponent } from './menu';\nimport {RemoteAgentComponent} from './remote-agent/remote-agent.component';\nimport {HubsComponent} from './hubs/hubs.component';\nimport { DexihComponentsModule } from 'dexih-ngx-components';\nimport { DexihIconsModule} from '../../ui/icons/icons.module'\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n//     AuthModule,\n    BsDropdownModule,\n    DexihComponentsModule,\n    DexihIconsModule,\n  ],\n  declarations: [\n    NavigationComponent,\n    LoginInfoComponent,\n    MenuParentComponent, MenuItemComponent,\n    RemoteAgentComponent,\n    HubsComponent,\n  ],\n  exports: [\n    NavigationComponent\n  ]\n})\nexport class NavigationModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { HubService } from '../../../../+hub/hub.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubCache } from '../../../../+hub/hub.models';\nimport { DexihActiveAgent, eDataPrivacyStatus } from '../../../shared.models';\n\n@Component({\n\n    selector: 'dexih-remote-agent',\n    templateUrl: './remote-agent.component.html'\n})\nexport class RemoteAgentComponent implements OnInit, OnDestroy {\n    hubCache: HubCache;\n\n    activeHubAgents: Array<DexihActiveAgent>;\n\n    selectedRemoteAgent: DexihActiveAgent;\n\n    hubKey: number;\n\n    _subscription: Subscription;\n\n    eDataPrivacyStatus = eDataPrivacyStatus;\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private router: Router\n        ) {\n    }\n\n    ngOnInit() {\n        this._subscription = combineLatest(\n            this.hubService.getHubCacheObservable(),\n            this.hubService.getRemoteAgentObservable(),\n            this.authService.getRemoteAgentsObservable(),\n        ).subscribe(result => {\n            this.hubCache = result[0];\n            let remoteAgents = result[2];\n\n            if (!remoteAgents) {\n                this.selectedRemoteAgent = null;\n                this.activeHubAgents = null;\n                return;\n            }\n\n            if (this.hubCache.isLoaded()) {\n                 this.hubKey = this.hubCache.hub.hubKey;\n                 let remoteAgentHubs = this.hubCache.hub.dexihRemoteAgentHubs.filter(c => c.isAuthorized);\n                 this.activeHubAgents = [];\n                 remoteAgentHubs.forEach(r => {\n                    let remoteAgent = remoteAgents.find(c => c.remoteAgentKey === r.remoteAgentKey);\n                    if (remoteAgent) {\n                        this.activeHubAgents = this.activeHubAgents.concat(remoteAgent['activeAgents']);\n                    }\n                 });\n\n                 if (this.activeHubAgents.length > 0 ) {\n                     console.log('Remote Agents updated, count = ' + this.activeHubAgents.length);\n                    this.selectedRemoteAgent = result[1];\n                 } else {\n                     this.selectedRemoteAgent = null;\n                 }\n            } else {\n                this.hubKey = null;\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    editRemoteAgent(activeAgent: DexihActiveAgent) {\n        let remoteAgentHub = this.hubCache.hub.dexihRemoteAgentHubs\n            .find(c => c.isAuthorized && c.remoteAgentKey === activeAgent.remoteAgentKey);\n\n        this.router.navigate(['/hub', this.hubKey, 'agents', 'agent-edit', activeAgent.remoteAgentKey, remoteAgentHub.remoteAgentHubKey]);\n    }\n\n    setRemoteAgent(activeAgent: DexihActiveAgent) {\n        this.hubService.setCurrentRemoteAgent(activeAgent);\n    }\n\n    refresh() {\n        this.authService.pingRemoteAgents();\n    }\n}\n","<menu-parent [name]=\"selectedRemoteAgent ? selectedRemoteAgent.name : 'No Active Agent'\">\n    <ng-template #item>\n        <encryption-status-icon *ngIf=\"selectedRemoteAgent\" [isEncrypted]=\"selectedRemoteAgent?.isEncrypted\"></encryption-status-icon>\n        <span *ngIf='!selectedRemoteAgent' class=\"text-danger\">\n            <i class=\"fa fa-fw fa-lg fa-exclamation-circle\" title=\"No remote agent is available for this hub.\"></i>\n        </span>\n    </ng-template>\n    <ng-template [ngIf]=\"activeHubAgents\">\n        <li class=\"nav-item\" *ngFor=\"let activeAgent of activeHubAgents\">\n            <a class=\"nav-link\" (click)=\"setRemoteAgent(activeAgent)\">\n                <encryption-status-icon class=\"mr-1\" [isEncrypted]=\"activeAgent.isEncrypted\"></encryption-status-icon>\n                {{activeAgent.name}}\n                <a (click)=\"editRemoteAgent(activeAgent)\" class=\"btn btn-xs btn-primary float-right text-white\"><i class=\"fa fa-edit\"></i></a>\n            </a>\n        </li>\n        <div class=\"dropdown-divider\"></div>\n        <li *ngIf=\"hubCache.canWrite\" class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/hub/{{hubKey}}/agents\">\n                <i class=\"fa fa-wrench\"></i> Manage Agents</a>\n        </li>\n        <li *ngIf=\"hubCache.canWrite\" class=\"nav-item\">\n            <a class=\"nav-link\" (click)=\"refresh()\">\n                <i class=\"fa fa-refresh\"></i> Refresh Agents</a>\n        </li>\n    </ng-template>\n</menu-parent>","export { RibbonComponent } from './ribbon.component';\nexport { RibbonModule } from './ribbon.module';\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'dexih-ribbon',\n  templateUrl: './ribbon.component.html'\n})\nexport class RibbonComponent implements OnInit {\n\n  constructor() {}\n\n  ngOnInit() {\n  }\n\n}\n","<!-- RIBBON -->\n<div class=\"mt-0\">\n  <!-- breadcrumb -->\n  <dexih-route-breadcrumbs></dexih-route-breadcrumbs>\n</div>","import { NgModule } from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {RouteBreadcrumbsComponent} from './route-breadcrumbs/route-breadcrumbs.component'\nimport {BsDropdownModule} from 'ngx-bootstrap/dropdown';\nimport {RibbonComponent} from './ribbon.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        BsDropdownModule\n    ],\n    exports: [\n        RibbonComponent,\n        RouteBreadcrumbsComponent,\n    ],\n    declarations: [\n        RibbonComponent,\n        RouteBreadcrumbsComponent,\n        ],\n    providers: [],\n})\nexport class RibbonModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationEnd }    from '@angular/router';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { filter} from 'rxjs/operators';\n\n@Component({\n    selector: 'dexih-route-breadcrumbs',\n    templateUrl: './route-breadcrumbs.component.html',\n    styleUrls: ['./route-breadcrumbs.component.scss']\n})\nexport class RouteBreadcrumbsComponent implements OnInit, OnDestroy {\n    breadcrumbs: Array<Breadcrumb>;\n\n    private _eventSubscription: Subscription;\n\n    constructor(private router: Router, private route: ActivatedRoute) {}\n\n    ngOnInit(): void {\n\n        this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\n            let breadcrumbs = [];\n            let currentRoute = this.route.root,\n            url = '';\n            do {\n                let childrenRoutes = currentRoute.children;\n                currentRoute = null;\n                childrenRoutes.forEach(route => {\n                    if (route.outlet === 'primary') {\n                        let routeSnapshot = route.snapshot;\n                        url += '/' + routeSnapshot.url.map(segment => segment.path).join('/');\n                        let pageTitle = routeSnapshot.data['pageTitle'];\n                        if (pageTitle &&\n                            breadcrumbs.findIndex((value) => value.pageTitle === pageTitle) === -1 ) {\n                            breadcrumbs.push({\n                                pageTitle: pageTitle,\n                                url: url\n                            });\n                        }\n                        currentRoute = route;\n                    }\n                });\n            } while (currentRoute);\n            this.breadcrumbs = breadcrumbs;\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._eventSubscription) { this._eventSubscription.unsubscribe(); }\n    }\n}\n\nexport class Breadcrumb {\n  constructor(\n    public url: string,\n    public pageTitle: string) { }\n}\n","<nav class=\"py-0\" aria-label=\"breadcrumb\">\n    <ol class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\">\n                <a routerLink=\"/home\" >\n                <i class=\"fa-fw fa fa-home\"></i>Home</a>\n            </li>\n\n            <li *ngFor=\"let breadcrumb of breadcrumbs; let last = last\" class=\"breadcrumb-item\" [ngClass]=\"{active: last}\">\n                <a *ngIf=\"!last\"  [routerLink]=\"breadcrumb.url\" queryParamsHandling=\"merge\">{{breadcrumb.pageTitle}}</a>\n                <span *ngIf=\"last\">{{breadcrumb.pageTitle}} (current)</span>\n            </li>\n    </ol>\n</nav>","// Auto generated shared classes.\n// Regenerate at http://localhost:5000/api/Dev/JSModels.\n\n// tslint:disable: no-inferrable-types no-use-before-declare\n\n// auto generated classes\n\nexport class AnimateConfig {\n    public seriesColumn: string = null;\n    public automatic: boolean = true;\n    public delay: number = 500;\n   }\n   \n   export class ApiData {\n    public apiStatus: eApiStatus = null;\n    public hubKey: number = 0;\n    public apiKey: number = 0;\n    public selectQuery: SelectQuery = null;\n    public securityKey: string = null;\n    public successCount: number = 0;\n    public errorCount: number = 0;\n   }\n   \n   export class ApplicationUser {\n    public id: string = '61bc0e93-6cb6-4a3a-89d2-4ea6e82c052a';\n    public email: string = null;\n    public concurrencyStamp: string = null;\n    public emailConfirmed: boolean = false;\n    public lockoutEnabled: boolean = false;\n    public lockoutEnd: any = null;\n    public normalizedEmail: string = null;\n    public passwordHash: string = null;\n    public phoneNumber: string = null;\n    public securityStamp: string = '76a0ecb4-9dea-4c5d-8adb-0f3d3c6537bd';\n    public userName: string = null;\n    public accessFailedCount: number = 0;\n    public normalizedUserName: string = null;\n    public phoneNumberConfirmed: boolean = false;\n    public twoFactorEnabled: boolean = false;\n    public isInvited: boolean = false;\n    public isRegistered: boolean = false;\n    public isEnabled: boolean = false;\n    public firstName: string = null;\n    public lastName: string = null;\n    public terms: boolean = false;\n    public subscription: boolean = false;\n    public inviteQuota: number = 0;\n    public hubQuota: number = 0;\n    public privateKey: string = null;\n    public certificateChain: string = null;\n    public certificateExpiry: Date = null;\n    public notifyPrivateMessage: boolean = false;\n    public notifySupportMessage: boolean = false;\n   }\n   \n   export class AppSettingsSection {\n    public userPrompt: boolean = true;\n    public remoteAgentId: string = null;\n    public user: string = null;\n    public userToken: string = null;\n    public encryptionKey: string = null;\n    public webServer: string = 'https://dexih.com';\n    public name: string = null;\n    public autoUpgrade: boolean = false;\n    public allowPreReleases: boolean = false;\n    public autoStartPath: string = null;\n   }\n   \n   export class CacheManager {\n    public hub: DexihHub = null;\n    public buildVersion: string = null;\n    public buildDate: Date = null;\n    public googleClientId: string = null;\n    public microsoftClientId: string = null;\n    public googleMapsAPIKey: string = null;\n    public defaultRemoteLibraries: RemoteLibraries = null;\n    public hubKey: number = 0;\n    public cacheEncryptionKey: string = null;\n   }\n   \n   export class ChartConfig {\n    public labelColumn: string = null;\n    public seriesColumn: string = null;\n    public pivotColumn: string = null;\n    public seriesColumns: string[] = [];\n    public xColumn: string = null;\n    public yColumn: string = null;\n    public minColumn: string = null;\n    public maxColumn: string = null;\n    public radiusColumn: string = null;\n    public latitudeColumn: string = null;\n    public longitudeColumn: string = null;\n    public chartType: eChartType = eChartType.BarVertical;\n    public colorScheme: string = 'natural';\n    public showGradient: boolean = false;\n    public showXAxis: boolean = true;\n    public showYAxis: boolean = true;\n    public showLegend: boolean = false;\n    public legendPosition: string = 'below';\n    public showXAxisLabel: boolean = true;\n    public showYAxisLabel: boolean = true;\n    public showGridLines: boolean = false;\n    public xAxisLabel: string = null;\n    public yAxisLabel: string = null;\n    public xScaleMax: number = null;\n    public xScaleMin: number = null;\n    public yScaleMax: number = null;\n    public yScaleMin: number = null;\n    public autoScale: boolean = true;\n    public explodeSlices: boolean = false;\n    public doughnut: boolean = false;\n    public separateAxis: boolean = false;\n    public barPadding: number = 3;\n    public roundEdges: boolean = false;\n    public showDataLabel: boolean = false;\n    public singleBarColor: boolean = true;\n    public multiGridColumn: string = null;\n    public yAxisLabelRight: string = null;\n   }\n   \n   export class ClientMessage {\n    public command: eClientCommand = eClientCommand.Connect;\n    public value: any = null;\n    public success: boolean = false;\n    public message: string = null;\n    public exceptionDetails: string = null;\n   }\n   \n   export class ConnectionAttribute {\n    public connectionCategory: eConnectionCategory = null;\n    public name: string = null;\n    public description: string = null;\n    public databaseDescription: string = null;\n    public serverDescription: string = null;\n    public allowsConnectionString: boolean = false;\n    public allowsSql: boolean = false;\n    public allowsFlatFiles: boolean = false;\n    public allowsManagedConnection: boolean = false;\n    public allowsSourceConnection: boolean = false;\n    public allowsTargetConnection: boolean = false;\n    public allowsUserPassword: boolean = false;\n    public allowsWindowsAuth: boolean = false;\n    public requiresDatabase: boolean = false;\n    public requiresLocalStorage: boolean = false;\n    public serverHelp: string = null;\n    public allowsToken: boolean = false;\n    public defaultSchema: string = null;\n   }\n   \n   export class ConnectionReference {\n    public connectionAssemblyName: string = null;\n    public connectionClassName: string = null;\n    public connectionCategory: eConnectionCategory = null;\n    public name: string = null;\n    public description: string = null;\n    public databaseDescription: string = null;\n    public serverDescription: string = null;\n    public serverHelp: string = null;\n    public allowsConnectionString: boolean = false;\n    public allowsSql: boolean = false;\n    public allowsFlatFiles: boolean = false;\n    public allowsManagedConnection: boolean = false;\n    public allowsSourceConnection: boolean = false;\n    public allowsTargetConnection: boolean = false;\n    public allowsUserPassword: boolean = false;\n    public allowsToken: boolean = false;\n    public allowsWindowsAuth: boolean = false;\n    public requiresDatabase: boolean = false;\n    public requiresLocalStorage: boolean = false;\n    public defaultSchema: string = null;\n   }\n   \n   export class DatalinkProgress {\n    public instanceId: string = null;\n    public securityToken: string = null;\n    public command: eMessageCommand = eMessageCommand.Connect;\n    public results: ManagedTask[] = [];\n   }\n   \n   export class DataPack {\n    public name: string = null;\n    public columns: DataPackColumn[] = [];\n    public data: any[] = [];\n    public transformProperties: TransformProperties = null;\n   }\n   \n   export class DataPackColumn {\n    public name: string = null;\n    public logicalName: string = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n   }\n   \n   export class DeleteQuery {\n    public table: string = null;\n    public filters: Filter[] = [];\n   }\n   \n   export class DexihActiveAgent {\n    public remoteAgentKey: number = 0;\n    public instanceId: string = null;\n    public user: string = null;\n    public name: string = null;\n    public isRunning: boolean = false;\n    public ipAddress: string = null;\n    public isEncrypted: boolean = false;\n    public dataPrivacyStatus: eDataPrivacyStatus = null;\n    public downloadUrls: DownloadUrl[] = [];\n    public upgradeAvailable: boolean = false;\n    public version: string = null;\n    public latestVersion: string = null;\n    public latestDownloadUrl: string = null;\n    public namingStandards: string[] = [];\n   }\n   \n   export class DexihApi {\n    public sourceType: eSourceType = null;\n    public sourceTableKey: number = null;\n    public sourceDatalinkKey: number = null;\n    public autoStart: boolean = false;\n    public cacheQueries: boolean = false;\n    public cacheResetInterval: any = null;\n    public logDirectory: string = null;\n    public selectQuery: SelectQuery = null;\n    public parameters: DexihApiParameter[] = [];\n    public isShared: boolean = false;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihApiParameter {\n    public apiKey: number = 0;\n    public api: DexihApi = null;\n    public value: any = null;\n    public listOfValuesKey: number = null;\n    public allowUserSelect: boolean = true;\n    public valueDesc: any = null;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihBaseEntity {\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihColumnBase {\n    public position: number = 0;\n    public logicalName: string = null;\n    public columnGroup: string = null;\n    public dataType: eTypeCode = eTypeCode.String;\n    public maxLength: number = null;\n    public precision: number = null;\n    public isUnicode: boolean = null;\n    public scale: number = null;\n    public allowDbNull: boolean = false;\n    public deltaType: eDeltaType = eDeltaType.TrackingField;\n    public defaultValue: string = null;\n    public isUnique: boolean = false;\n    public isMandatory: boolean = false;\n    public isIncrementalUpdate: boolean = false;\n    public isInput: boolean = false;\n    public rank: number = 0;\n    public securityFlag: eSecurityFlag = eSecurityFlag.None;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihColumnValidation {\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public minLength: number = null;\n    public maxLength: number = null;\n    public allowDbNull: boolean = false;\n    public minValue: number = null;\n    public maxValue: number = null;\n    public patternMatch: string = null;\n    public regexMatch: string = null;\n    public listOfValues: string[] = [];\n    public listOfNotValues: string[] = [];\n    public lookupColumnKey: number = null;\n    public lookupIsValid: boolean = false;\n    public lookupMultipleRecords: boolean = false;\n    public invalidAction: eInvalidAction = null;\n    public cleanAction: eCleanAction = null;\n    public cleanValue: string = null;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihConnection {\n    public connectionAssemblyName: string = null;\n    public connectionClassName: string = null;\n    public purpose: eConnectionPurpose = null;\n    public server: string = null;\n    public useWindowsAuth: boolean = false;\n    public username: string = null;\n    public password: string = null;\n    public usePasswordVariable: boolean = false;\n    public defaultDatabase: string = null;\n    public filename: string = null;\n    public useConnectionString: boolean = false;\n    public connectionString: string = null;\n    public useConnectionStringVariable: boolean = false;\n    public embedTableKey: boolean = false;\n    public connectionTimeout: number = 30;\n    public commandTimeout: number = 60;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihCustomFunction {\n    public methodCode: string = null;\n    public resultCode: string = null;\n    public returnType: eTypeCode = null;\n    public functionType: eFunctionType = null;\n    public isGeneric: boolean = false;\n    public genericTypeDefault: eTypeCode = eTypeCode.Unknown;\n    public dexihCustomFunctionParameters: DexihCustomFunctionParameter[] = [];\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihCustomFunctionParameter {\n    public customFunctionKey: number = 0;\n    public position: number = 0;\n    public direction: eParameterDirection = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public allowNull: boolean = false;\n    public isGeneric: boolean = false;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDashboard {\n    public isShared: boolean = false;\n    public minRows: number = 0;\n    public minCols: number = 0;\n    public maxRows: number = 0;\n    public maxCols: number = 0;\n    public autoRefresh: boolean = false;\n    public dexihDashboardItems: DexihDashboardItem[] = [];\n    public parameters: DexihDashboardParameter[] = [];\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDashboardItem {\n    public cols: number = 0;\n    public rows: number = 0;\n    public x: number = 0;\n    public y: number = 0;\n    public header: boolean = false;\n    public scrollable: boolean = false;\n    public viewKey: number = 0;\n    public dashboardKey: number = 0;\n    public parameters: DexihDashboardItemParameter[] = [];\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDashboardItemParameter {\n    public dashboardItemKey: number = 0;\n    public value: any = null;\n    public listOfValuesKey: number = null;\n    public allowUserSelect: boolean = true;\n    public valueDesc: any = null;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDashboardParameter {\n    public dashboardKey: number = 0;\n    public value: any = null;\n    public listOfValuesKey: number = null;\n    public allowUserSelect: boolean = true;\n    public valueDesc: any = null;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatajob {\n    public failAction: eFailAction = eFailAction.Abend;\n    public auditConnectionKey: number = null;\n    public fileWatch: boolean = false;\n    public autoStart: boolean = false;\n    public dexihDatalinkSteps: DexihDatalinkStep[] = [];\n    public dexihTriggers: DexihTrigger[] = [];\n    public parameters: DexihDatajobParameter[] = [];\n    public alertLevel: eAlertLevel = eAlertLevel.None;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatajobParameter {\n    public datajobKey: number = 0;\n    public value: any = null;\n    public listOfValuesKey: number = null;\n    public allowUserSelect: boolean = true;\n    public valueDesc: any = null;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalink {\n    public sourceDatalinkTableKey: number = 0;\n    public auditConnectionKey: number = null;\n    public updateStrategy: eUpdateStrategy = eUpdateStrategy.Reload;\n    public loadStrategy: eTransformWriterMethod = eTransformWriterMethod.Bulk;\n    public datalinkType: eDatalinkType = null;\n    public rowsPerCommit: number = 1000;\n    public rowsPerProgress: number = 1000;\n    public rollbackOnFail: boolean = false;\n    public isQuery: boolean = false;\n    public maxRows: number = 0;\n    public addDefaultRow: boolean = false;\n    public profileTableName: string = null;\n    public isShared: boolean = false;\n    public entityStatus: EntityStatus = new EntityStatus();\n    public dexihDatalinkProfiles: DexihDatalinkProfile[] = [];\n    public dexihDatalinkTransforms: DexihDatalinkTransform[] = [];\n    public dexihDatalinkTargets: DexihDatalinkTarget[] = [];\n    public parameters: DexihDatalinkParameter[] = [];\n    public sourceDatalinkTable: DexihDatalinkTable = null;\n    public alertLevel: eAlertLevel = eAlertLevel.None;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkColumn {\n    public key: number = 0;\n    public datalinkTableKey: number = null;\n    public childColumns: DexihDatalinkColumn[] = [];\n    public position: number = 0;\n    public logicalName: string = null;\n    public columnGroup: string = null;\n    public dataType: eTypeCode = eTypeCode.String;\n    public maxLength: number = null;\n    public precision: number = null;\n    public isUnicode: boolean = null;\n    public scale: number = null;\n    public allowDbNull: boolean = false;\n    public deltaType: eDeltaType = eDeltaType.TrackingField;\n    public defaultValue: string = null;\n    public isUnique: boolean = false;\n    public isMandatory: boolean = false;\n    public isIncrementalUpdate: boolean = false;\n    public isInput: boolean = false;\n    public rank: number = 0;\n    public securityFlag: eSecurityFlag = eSecurityFlag.None;\n    public name: string = null;\n    public description: string = null;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkDependency {\n    public datalinkStepKey: number = 0;\n    public dependentDatalinkStepKey: number = 0;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkParameter {\n    public datalinkKey: number = 0;\n    public value: any = null;\n    public listOfValuesKey: number = null;\n    public allowUserSelect: boolean = true;\n    public valueDesc: any = null;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkProfile {\n    public datalinkKey: number = 0;\n    public functionClassName: string = null;\n    public functionAssemblyName: string = null;\n    public functionMethodName: string = null;\n    public detailedResults: boolean = false;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkStep {\n    public datajobKey: number = 0;\n    public datalinkKey: number = null;\n    public position: number = 0;\n    public dexihDatalinkStepColumns: DexihDatalinkStepColumn[] = [];\n    public dexihDatalinkDependencies: DexihDatalinkDependency[] = [];\n    public parameters: DexihDatalinkStepParameter[] = [];\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkStepColumn {\n    public datalinkStepKey: number = 0;\n    public position: number = 0;\n    public logicalName: string = null;\n    public columnGroup: string = null;\n    public dataType: eTypeCode = eTypeCode.String;\n    public maxLength: number = null;\n    public precision: number = null;\n    public isUnicode: boolean = null;\n    public scale: number = null;\n    public allowDbNull: boolean = false;\n    public deltaType: eDeltaType = eDeltaType.TrackingField;\n    public defaultValue: string = null;\n    public isUnique: boolean = false;\n    public isMandatory: boolean = false;\n    public isIncrementalUpdate: boolean = false;\n    public isInput: boolean = false;\n    public rank: number = 0;\n    public securityFlag: eSecurityFlag = eSecurityFlag.None;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkStepParameter {\n    public datalinkStepKey: number = 0;\n    public value: any = null;\n    public listOfValuesKey: number = null;\n    public allowUserSelect: boolean = true;\n    public valueDesc: any = null;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkTable {\n    public sourceTableKey: number = null;\n    public sourceDatalinkKey: number = null;\n    public rowsStartAt: number = 1;\n    public rowsEndAt: number = 1;\n    public rowsIncrement: number = 1;\n    public sourceType: eSourceType = eSourceType.Table;\n    public disableVersioning: boolean = true;\n    public disablePushDown: boolean = false;\n    public dexihDatalinkColumns: DexihDatalinkColumn[] = [];\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkTarget {\n    public datalinkKey: number = 0;\n    public nodeDatalinkColumnKey: number = null;\n    public nodeDatalinkColumn: DexihDatalinkColumn = null;\n    public position: number = 0;\n    public tableKey: number = 0;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkTest {\n    public auditConnectionKey: number = null;\n    public dexihDatalinkTestSteps: DexihDatalinkTestStep[] = [];\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkTestStep {\n    public position: number = 0;\n    public datalinkTestKey: number = 0;\n    public datalinkKey: number = 0;\n    public targetConnectionKey: number = 0;\n    public targetTableName: string = null;\n    public targetSchema: string = null;\n    public expectedConnectionKey: number = 0;\n    public expectedTableName: string = null;\n    public expectedSchema: string = null;\n    public errorConnectionKey: number = 0;\n    public errorTableName: string = null;\n    public errorSchema: string = null;\n    public dexihDatalinkTestTables: DexihDatalinkTestTable[] = [];\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkTestTable {\n    public datalinkTestStepKey: number = 0;\n    public action: eTestTableAction = null;\n    public tableKey: number = 0;\n    public sourceConnectionKey: number = 0;\n    public sourceSchema: string = null;\n    public sourceTableName: string = null;\n    public testConnectionKey: number = 0;\n    public testSchema: string = null;\n    public testTableName: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkTransform {\n    public datalinkKey: number = 0;\n    public position: number = 0;\n    public passThroughColumns: boolean = false;\n    public joinDatalinkTableKey: number = null;\n    public joinSortDatalinkColumnKey: number = null;\n    public nodeDatalinkColumnKey: number = null;\n    public transformType: eTransformType = null;\n    public transformClassName: string = null;\n    public transformAssemblyName: string = null;\n    public joinDuplicateStrategy: eDuplicateStrategy = eDuplicateStrategy.Abend;\n    public joinNotFoundStrategy: eJoinNotFoundStrategy = eJoinNotFoundStrategy.Abend;\n    public entityStatus: EntityStatus = null;\n    public dexihDatalinkTransformItems: DexihDatalinkTransformItem[] = [];\n    public joinDatalinkTable: DexihDatalinkTable = null;\n    public joinSortDatalinkColumn: DexihDatalinkColumn = null;\n    public nodeDatalinkColumn: DexihDatalinkColumn = null;\n    public maxInputRows: number = 0;\n    public maxOutputRows: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkTransformItem {\n    public datalinkTransformKey: number = 0;\n    public position: number = 0;\n    public transformItemType: eTransformItemType = null;\n    public targetDatalinkColumnKey: number = null;\n    public sourceDatalinkColumnKey: number = null;\n    public joinDatalinkColumnKey: number = null;\n    public filterDatalinkColumnKey: number = null;\n    public sourceValue: string = null;\n    public joinValue: string = null;\n    public filterValue: string = null;\n    public functionClassName: string = null;\n    public functionAssemblyName: string = null;\n    public functionMethodName: string = null;\n    public isGeneric: boolean = false;\n    public genericTypeCode: eTypeCode = null;\n    public functionCaching: eFunctionCaching = eFunctionCaching.NoCache;\n    public customFunctionKey: number = null;\n    public sortDirection: eSortDirection = null;\n    public filterCompare: eCompare = null;\n    public aggregate: eAggregate = null;\n    public seriesGrain: eSeriesGrain = null;\n    public seriesFill: boolean = false;\n    public seriesStart: string = null;\n    public seriesFinish: string = null;\n    public functionCode: string = null;\n    public functionResultCode: string = null;\n    public onError: eErrorAction = eErrorAction.Abend;\n    public onNull: eErrorAction = eErrorAction.Execute;\n    public notCondition: boolean = false;\n    public invalidAction: eInvalidAction = eInvalidAction.Abend;\n    public entityStatus: EntityStatus = null;\n    public dexihFunctionParameters: DexihFunctionParameter[] = [];\n    public sourceDatalinkColumn: DexihDatalinkColumn = null;\n    public targetDatalinkColumn: DexihDatalinkColumn = null;\n    public joinDatalinkColumn: DexihDatalinkColumn = null;\n    public filterDatalinkColumn: DexihDatalinkColumn = null;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihFileFormat {\n    public isDefault: boolean = false;\n    public matchHeaderRecord: boolean = true;\n    public skipHeaderRows: number = 0;\n    public allowComments: boolean = false;\n    public bufferSize: number = 2048;\n    public comment: string = '#';\n    public delimiter: string = ',';\n    public detectColumnCountChanges: boolean = false;\n    public hasHeaderRecord: boolean = true;\n    public ignoreHeaderWhiteSpace: boolean = false;\n    public ignoreReadingExceptions: boolean = false;\n    public ignoreQuotes: boolean = false;\n    public quote: string = '\"';\n    public quoteAllFields: boolean = false;\n    public quoteNoFields: boolean = false;\n    public skipEmptyRecords: boolean = false;\n    public trimFields: boolean = false;\n    public trimHeaders: boolean = false;\n    public willThrowOnMissingField: boolean = true;\n    public setWhiteSpaceCellsToNull: boolean = true;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihFunctionArrayParameter {\n    public functionParameterKey: number = 0;\n    public datalinkColumnKey: number = null;\n    public value: string = null;\n    public listOfValues: string[] = [];\n    public entityStatus: EntityStatus = null;\n    public datalinkColumn: DexihDatalinkColumn = null;\n    public position: number = 0;\n    public direction: eParameterDirection = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public allowNull: boolean = false;\n    public isGeneric: boolean = false;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihFunctionParameter {\n    public datalinkTransformItemKey: number = 0;\n    public arrayParameters: DexihFunctionArrayParameter[] = [];\n    public datalinkColumnKey: number = null;\n    public value: string = null;\n    public listOfValues: string[] = [];\n    public entityStatus: EntityStatus = null;\n    public datalinkColumn: DexihDatalinkColumn = null;\n    public position: number = 0;\n    public direction: eParameterDirection = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public allowNull: boolean = false;\n    public isGeneric: boolean = false;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihFunctionParameterBase {\n    public datalinkColumnKey: number = null;\n    public value: string = null;\n    public listOfValues: string[] = [];\n    public entityStatus: EntityStatus = null;\n    public datalinkColumn: DexihDatalinkColumn = null;\n    public position: number = 0;\n    public direction: eParameterDirection = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public allowNull: boolean = false;\n    public isGeneric: boolean = false;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihHub {\n    public hubKey: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public encryptionKey: string = null;\n    public sharedAccess: eSharedAccess = eSharedAccess.Public;\n    public dexihConnections: DexihConnection[] = [];\n    public dexihTables: DexihTable[] = [];\n    public dexihDatajobs: DexihDatajob[] = [];\n    public dexihDatalinks: DexihDatalink[] = [];\n    public dexihHubUsers: DexihHubUser[] = [];\n    public dexihFileFormats: DexihFileFormat[] = [];\n    public dexihHubVariables: DexihHubVariable[] = [];\n    public dexihDatalinkTests: DexihDatalinkTest[] = [];\n    public dexihViews: DexihView[] = [];\n    public dexihDashboards: DexihDashboard[] = [];\n    public dexihApis: DexihApi[] = [];\n    public dexihColumnValidations: DexihColumnValidation[] = [];\n    public dexihCustomFunctions: DexihCustomFunction[] = [];\n    public dexihRemoteAgentHubs: DexihRemoteAgentHub[] = [];\n    public dexihListOfValues: DexihListOfValues[] = [];\n    public dexihTags: DexihTag[] = [];\n    public dexihTagObjects: DexihTagObject[] = [];\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihHubEntity {\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihHubKeyEntity {\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihHubNamedEntity {\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihHubUser {\n    public hubKey: number = 0;\n    public userId: string = null;\n    public permission: ePermission = ePermission.None;\n    public receiveAlerts: boolean = false;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihHubVariable {\n    public valueRaw: string = null;\n    public value: string = null;\n    public isEncrypted: boolean = false;\n    public isEnvironmentVariable: boolean = false;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihIssue {\n    public type: eIssueType = eIssueType.Other;\n    public category: eIssueCategory = eIssueCategory.Other;\n    public severity: eIssueSeverity = eIssueSeverity.Critical;\n    public link: string = null;\n    public data: string = null;\n    public gitHubLink: string = null;\n    public isPrivate: boolean = true;\n    public userId: string = null;\n    public issueStatus: eIssueStatus = eIssueStatus.Open;\n    public dexihIssueComments: DexihIssueComment[] = [];\n    public userName: string = null;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihIssueComment {\n    public issueKey: number = 0;\n    public key: number = 0;\n    public comment: string = null;\n    public userId: string = null;\n    public userName: string = null;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihListOfValues {\n    public sourceType: eLOVObjectType = null;\n    public sourceTableKey: number = null;\n    public sourceDatalinkKey: number = null;\n    public selectQuery: SelectQuery = null;\n    public keyColumn: string = null;\n    public nameColumn: string = null;\n    public descriptionColumn: string = null;\n    public staticData: ListOfValuesItem[] = [];\n    public cache: boolean = false;\n    public cacheSeconds: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihParameterBase {\n    public position: number = 0;\n    public direction: eParameterDirection = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public allowNull: boolean = false;\n    public isGeneric: boolean = false;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihRemoteAgent {\n    public remoteAgentKey: number = 0;\n    public name: string = null;\n    public userId: string = null;\n    public restrictIp: boolean = false;\n    public allowExternalConnect: boolean = false;\n    public ipAddresses: string[] = [];\n    public remoteAgentId: string = null;\n    public hashedToken: string = null;\n    public lastLoginIpAddress: string = null;\n    public lastLoginDateTime: Date = null;\n    public dexihRemoteAgentHubs: DexihRemoteAgentHub[] = [];\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihRemoteAgentHub {\n    public remoteAgentHubKey: number = 0;\n    public remoteAgentKey: number = 0;\n    public isDefault: boolean = false;\n    public isAuthorized: boolean = false;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihTable {\n    public connectionKey: number = 0;\n    public schema: string = null;\n    public baseTableName: string = null;\n    public logicalName: string = null;\n    public tableType: eTableType = eTableType.Table;\n    public sourceConnectionName: string = null;\n    public fileFormatKey: number = null;\n    public rejectedTableName: string = null;\n    public queryString: string = null;\n    public rowPath: string = null;\n    public formatType: eTypeCode = eTypeCode.Json;\n    public sortColumnKeys: number[] = [];\n    public autoManageFiles: boolean = false;\n    public useCustomFilePaths: boolean = false;\n    public fileRootPath: string = null;\n    public fileIncomingPath: string = null;\n    public fileOutgoingPath: string = null;\n    public fileProcessedPath: string = null;\n    public fileRejectedPath: string = null;\n    public fileMatchPattern: string = null;\n    public restfulUri: string = null;\n    public maxImportLevels: number = 0;\n    public isVersioned: boolean = false;\n    public isShared: boolean = false;\n    public entityStatus: EntityStatus = new EntityStatus();\n    public fileSample: string = null;\n    public dexihTableColumns: DexihTableColumn[] = [];\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihTableColumn {\n    public tableKey: number = null;\n    public childColumns: DexihTableColumn[] = [];\n    public columnValidationKey: number = null;\n    public entityStatus: EntityStatus = null;\n    public position: number = 0;\n    public logicalName: string = null;\n    public columnGroup: string = null;\n    public dataType: eTypeCode = eTypeCode.String;\n    public maxLength: number = null;\n    public precision: number = null;\n    public isUnicode: boolean = null;\n    public scale: number = null;\n    public allowDbNull: boolean = false;\n    public deltaType: eDeltaType = eDeltaType.TrackingField;\n    public defaultValue: string = null;\n    public isUnique: boolean = false;\n    public isMandatory: boolean = false;\n    public isIncrementalUpdate: boolean = false;\n    public isInput: boolean = false;\n    public rank: number = 0;\n    public securityFlag: eSecurityFlag = eSecurityFlag.None;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihTag {\n    public color: string = null;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihTagObject {\n    public tagKey: number = 0;\n    public objectKey: number = 0;\n    public objectType: eSharedObjectType = null;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihTrigger {\n    public datajobKey: number = 0;\n    public startDate: Date = null;\n    public intervalTime: any = null;\n    public position: number = 0;\n    public daysOfWeek: eDayOfWeek[] = [];\n    public startTime: any = null;\n    public endTime: any = null;\n    public cronExpression: string = null;\n    public maxRecurs: number = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihView {\n    public viewType: eViewType = eViewType.Table;\n    public sourceTableKey: number = null;\n    public sourceDatalinkKey: number = null;\n    public sourceType: eDataObjectType = null;\n    public autoRefresh: boolean = true;\n    public inputValues: InputColumn[] = [];\n    public selectQuery: SelectQuery = null;\n    public chartConfig: ChartConfig = null;\n    public animateConfig: AnimateConfig = null;\n    public isShared: boolean = false;\n    public parameters: DexihViewParameter[] = [];\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihViewParameter {\n    public viewKey: number = 0;\n    public datalinkParameterKey: number = 0;\n    public value: any = null;\n    public listOfValuesKey: number = null;\n    public allowUserSelect: boolean = true;\n    public valueDesc: any = null;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DownloadData {\n    public transformSettings: TransformSettings = null;\n    public cache: CacheManager = null;\n    public downloadObjects: DownloadObject[] = [];\n    public downloadFormat: eDownloadFormat = null;\n    public zipFiles: boolean = false;\n   }\n   \n   export class DownloadObject {\n    public objectType: eDataObjectType = null;\n    public objectKey: number = 0;\n    public query: SelectQuery = null;\n    public inputParameters: InputParameter[] = [];\n    public inputColumns: InputColumn[] = [];\n    public datalinkTransformKey: number = null;\n   }\n   \n   export class DownloadReadyBase {\n    public instanceId: string = null;\n    public securityToken: string = null;\n    public connectionId: string = null;\n    public reference: string = null;\n    public hubKey: number = 0;\n   }\n   \n   export class DownloadReadyMessage {\n    public url: string = null;\n    public instanceId: string = null;\n    public securityToken: string = null;\n    public connectionId: string = null;\n    public reference: string = null;\n    public hubKey: number = 0;\n   }\n   \n   export class DownloadUrl {\n    public url: string = null;\n    public downloadUrlType: eDownloadUrlType = null;\n    public isEncrypted: boolean = false;\n   }\n   \n   export class EntityStatus {\n    public lastStatus: eStatus = eStatus.None;\n    public message: string = '';\n    public isBusy: boolean = false;\n   }\n   \n   export class FileConfiguration {\n    public matchHeaderRecord: boolean = true;\n    public skipHeaderRows: number = 0;\n    public setWhiteSpaceCellsToNull: boolean = true;\n   }\n   \n   export class Filter {\n    public column1: TableColumn = null;\n    public value1: any = null;\n    public compareDataType: eTypeCode = eTypeCode.Unknown;\n    public column2: TableColumn = null;\n    public value2: any = null;\n    public operator: eCompare = eCompare.IsEqual;\n    public andOr: eAndOr = eAndOr.And;\n   }\n   \n   export class FlatFile {\n    public autoManageFiles: boolean = false;\n    public useCustomFilePaths: boolean = false;\n    public fileRootPath: string = null;\n    public fileIncomingPath: string = '';\n    public fileOutgoingPath: string = '';\n    public fileProcessedPath: string = '';\n    public fileRejectedPath: string = '';\n    public fileMatchPattern: string = null;\n    public formatType: eTypeCode = eTypeCode.Unknown;\n    public fileConfiguration: FileConfiguration = new FileConfiguration();\n    public fileSample: string = null;\n    public rowPath: string = null;\n    public name: string = null;\n    public schema: string = null;\n    public sourceConnectionName: string = null;\n    public logicalName: string = null;\n    public description: string = null;\n    public baseTableName: string = null;\n    public tableType: eTableType = eTableType.Table;\n    public isVersioned: boolean = false;\n    public queryString: string = null;\n    public outputSortFields: Sort[] = [];\n    public columns: TableColumn[] = [];\n    public maxImportLevels: number = 10;\n   }\n   \n   export class FunctionParameter {\n    public parameterName: string = null;\n    public name: string = null;\n    public description: string = null;\n    public isGeneric: boolean = false;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public allowNull: boolean = false;\n    public rank: number = 0;\n    public isIndex: boolean = false;\n    public linkedName: string = null;\n    public linkedDescription: string = null;\n    public isLabel: boolean = false;\n    public listOfValues: string[] = [];\n    public defaultValue: string = null;\n    public isPassword: boolean = false;\n   }\n   \n   export class FunctionReference {\n    public functionType: eFunctionType = null;\n    public category: string = null;\n    public name: string = null;\n    public description: string = null;\n    public functionAssemblyName: string = null;\n    public functionClassName: string = null;\n    public functionMethodName: string = null;\n    public resultMethodName: string = null;\n    public resetMethodName: string = null;\n    public importMethodName: string = null;\n    public genericType: eGenericType = null;\n    public genericTypeDefault: eTypeCode = eTypeCode.Unknown;\n    public compare: eCompare = eCompare.IsEqual;\n    public isStandardFunction: boolean = false;\n    public returnParameters: FunctionParameter[] = [];\n    public inputParameters: FunctionParameter[] = [];\n    public outputParameters: FunctionParameter[] = [];\n    public resultReturnParameters: FunctionParameter[] = [];\n    public resultInputParameters: FunctionParameter[] = [];\n    public resultOutputParameters: FunctionParameter[] = [];\n   }\n   \n   export class HubUser {\n    public firstName: string = null;\n    public lastName: string = null;\n    public userName: string = null;\n    public id: string = null;\n    public permission: ePermission = ePermission.None;\n    public receiveAlerts: boolean = false;\n   }\n   \n   export class Import {\n    public hubKey: number = 0;\n    public hubVariables: ImportObject<DexihHubVariable>[] = [];\n    public datajobs: ImportObject<DexihDatajob>[] = [];\n    public datalinks: ImportObject<DexihDatalink>[] = [];\n    public connections: ImportObject<DexihConnection>[] = [];\n    public tables: ImportObject<DexihTable>[] = [];\n    public columnValidations: ImportObject<DexihColumnValidation>[] = [];\n    public fileFormats: ImportObject<DexihFileFormat>[] = [];\n    public customFunctions: ImportObject<DexihCustomFunction>[] = [];\n    public remoteAgentHubs: ImportObject<DexihRemoteAgentHub>[] = [];\n    public datalinkTests: ImportObject<DexihDatalinkTest>[] = [];\n    public views: ImportObject<DexihView>[] = [];\n    public apis: ImportObject<DexihApi>[] = [];\n    public dashboards: ImportObject<DexihDashboard>[] = [];\n    public listOfValues: ImportObject<DexihListOfValues>[] = [];\n    public tags: ImportObject<DexihTag>[] = [];\n    public tagObjects: ImportObject<DexihTagObject>[] = [];\n    public warnings: string[] = [];\n   }\n   \n   export class ImportAction {\n    public objectType: eSharedObjectType = null;\n    public action: eImportAction = null;\n   }\n   \n   export class ImportObject<T> {\n    public item: T = null;\n    public importAction: eImportAction = null;\n   }\n   \n   export class InputColumn {\n    public datalinkKey: number = 0;\n    public datalinkName: string = null;\n    public name: string = null;\n    public logicalName: string = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public rank: number = 0;\n    public value: any = null;\n    public defaultValue: any = null;\n   }\n   \n   export class InputParameter {\n    public name: string = null;\n    public value: any = null;\n    public rank: number = 0;\n   }\n   \n   export class InputParameterBase {\n    public value: any = null;\n    public listOfValuesKey: number = null;\n    public allowUserSelect: boolean = true;\n    public valueDesc: any = null;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class InputParameters {\n   }\n   \n   export class InsertQuery {\n    public insertColumns: QueryColumn[] = [];\n   }\n   \n   export class ListOfValuesItem {\n    public key: string = null;\n    public name: string = null;\n    public description: string = null;\n   }\n   \n   export class LoggingSection {\n    public includeScopes: boolean = false;\n    public logLevel: LogLevelSection = new LogLevelSection();\n    public logFilePath: string = null;\n   }\n   \n   export class LoginModel {\n   }\n   \n   export class LogLevelSection {\n    public default: logLevel = logLevel.Information;\n    public system: logLevel = logLevel.Information;\n    public microsoft: logLevel = logLevel.Information;\n   }\n   \n   export class ManagedTask {\n    public success: boolean = false;\n    public message: string = null;\n    public taskId: string = null;\n    public originatorId: string = null;\n    public name: string = null;\n    public description: string = null;\n    public lastUpdate: Date = null;\n    public status: eManagedTaskStatus = eManagedTaskStatus.Created;\n    public category: string = null;\n    public categoryKey: number = 0;\n    public referenceKey: number = 0;\n    public referenceId: string = null;\n    public percentage: number = 0;\n    public counter: number = 0;\n    public concurrentTaskAction: eConcurrentTaskAction = eConcurrentTaskAction.Abend;\n    public stepName: string = null;\n    public startTime: Date = null;\n    public endTime: Date = null;\n    public triggers: ManagedTaskTrigger[] = [];\n    public fileWatchers: ManagedTaskFileWatcher[] = [];\n    public nextTriggerTime: Date = null;\n    public runCount: number = 0;\n    public dependentTaskIds: string[] = [];\n    public dependenciesMet: boolean = true;\n    public data: any = null;\n    public exceptionDetails: string = '';\n   }\n   \n   export class ManagedTaskFileWatcher {\n    public path: string = null;\n    public filter: string = null;\n    public isStarted: boolean = false;\n   }\n   \n   export class ManagedTaskProgressItem {\n    public stepName: string = null;\n    public percentage: number = 0;\n    public counter: number = 0;\n   }\n   \n   export class ManagedTaskTrigger {\n    public startDate: Date = null;\n    public endDate: Date = null;\n    public intervalType: eIntervalType = eIntervalType.Interval;\n    public intervalTime: any = null;\n    public daysOfWeek: eDayOfWeek[] = [];\n    public daysOfMonth: number[] = [];\n    public weeksOfMonth: eWeekOfMonth[] = [];\n    public skipDates: Date[] = [];\n    public startTime: any = null;\n    public endTime: any = null;\n    public maxRecurs: number = 1;\n    public details: string = 'Error: Interval specified, however no interval time set.\\n';\n   }\n   \n   export class NamingStandards {\n   }\n   \n   export class NetworkSection {\n    public externalDownloadUrl: string = null;\n    public localIpAddress: string = null;\n    public localPort: number = null;\n    public proxyUrl: string = null;\n    public downloadPort: number = 33944;\n    public enforceHttps: boolean = true;\n    public autoGenerateCertificate: boolean = true;\n    public dynamicDomain: string = 'dexih.com';\n    public certificateFilename: string = null;\n    public certificatePassword: string = null;\n    public enableUPnP: boolean = true;\n   }\n   \n   export class ParameterArray {\n    public name: string = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public rank: number = 0;\n   }\n   \n   export class ParameterColumn {\n    public name: string = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public rank: number = 0;\n    public value: any = null;\n   }\n   \n   export class ParameterJoinColumn {\n    public name: string = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public rank: number = 0;\n    public value: any = null;\n   }\n   \n   export class ParameterOutputColumn {\n    public name: string = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public rank: number = 0;\n    public value: any = null;\n   }\n   \n   export class Parameters {\n   }\n   \n   export class ParameterValue {\n    public name: string = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public rank: number = 0;\n    public value: any = null;\n   }\n   \n   export class PermissionsSection {\n    public allowLocalFiles: boolean = true;\n    public allowAllPaths: boolean = false;\n    public allowedPaths: string[] = [];\n    public allowAllHubs: boolean = true;\n    public allowedHubs: number[] = [];\n   }\n   \n   export class PluginsSection {\n    public mLNet: boolean = false;\n    public excel: boolean = false;\n    public oracle: boolean = false;\n    public dB2: boolean = false;\n    public mongo: boolean = false;\n   }\n   \n   export class PrivacySection {\n    public allowDataDownload: boolean = true;\n    public allowDataUpload: boolean = true;\n    public allowLanAccess: boolean = true;\n    public allowExternalAccess: boolean = true;\n    public allowProxy: boolean = true;\n   }\n   \n   export class QueryColumn {\n    public column: TableColumn = null;\n    public value: any = null;\n   }\n   \n   export class RegisterModel {\n    public provider: eLoginProvider = eLoginProvider.Dexih;\n    public userName: string = null;\n    public email: string = null;\n    public code: string = null;\n    public password: string = null;\n    public firstname: string = null;\n    public lastname: string = null;\n    public subscription: boolean = false;\n    public terms: boolean = false;\n    public authenticationToken: string = null;\n   }\n   \n   export class RemoteAgentProperties {\n    public name: string = null;\n    public ipAddress: string = null;\n    public securityToken: string = null;\n    public remoteAgentKey: number = 0;\n    public encryptionKey: string = null;\n    public userId: string = null;\n    public connectionId: string = null;\n    public namingStandards: string[] = [];\n    public downloadUrls: DownloadUrl[] = [];\n   }\n   \n   export class RemoteAgentSettings {\n    public embedUserName: boolean = false;\n    public environment: eEnvironment = null;\n    public logLevel: logLevel = logLevel.Trace;\n    public remoteApplicationSettings: RemoteAgentSettingsSubset = null;\n   }\n   \n   export class RemoteAgentSettingsSubset {\n    public allowedHubs: number[] = [];\n    public allowedPaths: string[] = [];\n    public allowAllHubs: boolean = true;\n    public allowAllPaths: boolean = true;\n    public allowDownload: boolean = true;\n    public allowExternalAccess: boolean = true;\n    public allowLanAccess: boolean = true;\n    public allowLocalFiles: boolean = true;\n    public allowProxy: boolean = true;\n    public allowUpload: boolean = true;\n    public autoGenerateCertificate: boolean = true;\n    public autoSchedule: boolean = true;\n    public autoUpgrade: boolean = true;\n    public downloadPort: number = 33944;\n    public enableUPnP: boolean = true;\n    public encryptionKey: string = null;\n    public enforceHttps: boolean = true;\n    public externalDownloadUrl: string = null;\n    public firstRun: boolean = false;\n    public name: string = null;\n    public preRelease: boolean = false;\n    public remoteAgentId: string = null;\n    public user: string = null;\n    public userToken: string = null;\n    public webServer: string = null;\n    public mLNet: boolean = false;\n    public excel: boolean = false;\n    public oracle: boolean = false;\n    public dB2: boolean = false;\n    public mongo: boolean = false;\n    public smtpServer: string = null;\n    public smtpUserName: string = null;\n    public smtpPassword: string = null;\n    public smtpPort: number = 25;\n    public enableSsl: boolean = true;\n    public fromEmail: string = null;\n    public adminEmails: string[] = [];\n    public alertOnShutdown: boolean = false;\n    public alertOnCritical: boolean = false;\n   }\n   \n   export class RemoteAgentStatus {\n    public activeApis: ApiData[] = [];\n    public activeDatajobs: ManagedTask[] = [];\n    public activeDatalinks: ManagedTask[] = [];\n    public activeDatalinkTests: ManagedTask[] = [];\n    public previousDatajobs: ManagedTask[] = [];\n    public previousDatalinks: ManagedTask[] = [];\n    public previousDatalinkTests: ManagedTask[] = [];\n    public remoteLibraries: RemoteLibraries = null;\n    public requiresUpgrade: boolean = false;\n   }\n   \n   export class RemoteLibraries {\n    public functions: FunctionReference[] = [];\n    public connections: ConnectionReference[] = [];\n    public transforms: TransformReference[] = [];\n   }\n   \n   export class RemoteMessage {\n    public messageId: string = null;\n    public securityToken: string = null;\n    public method: string = null;\n    public hubKey: number = 0;\n    public timeOut: number = null;\n    public hubVariables: DexihHubVariable[] = [];\n    public clientConnectionId: string = null;\n    public downloadUrl: DownloadUrl = null;\n    public value: any[] = [];\n    public success: boolean = true;\n    public message: string = null;\n    public exceptionDetails: string = null;\n   }\n   \n   export class RemoteSettings {\n    public appSettings: AppSettingsSection = new AppSettingsSection();\n    public systemSettings: SystemSettingsSection = new SystemSettingsSection();\n    public logging: LoggingSection = new LoggingSection();\n    public runtime: RuntimeSection = new RuntimeSection();\n    public network: NetworkSection = new NetworkSection();\n    public privacy: PrivacySection = new PrivacySection();\n    public permissions: PermissionsSection = new PermissionsSection();\n    public namingStandards: string[] = [];\n    public plugins: PluginsSection = new PluginsSection();\n    public alerts: any = null;\n   }\n   \n   export class RenewSslCertificateModel {\n    public domain: string = null;\n    public password: string = null;\n   }\n   \n   export class ResponseMessage {\n    public messageId: string = null;\n    public securityToken: string = null;\n    public success: boolean = false;\n    public message: string = null;\n    public exceptionDetails: string = null;\n   }\n   \n   export class RuntimeSection {\n    public configDirectory: string = null;\n    public appSettingsPath: string = null;\n    public password: string = null;\n    public localIpAddress: string = null;\n    public externalIpAddress: string = null;\n    public defaultProxyUrl: string = null;\n    public remoteAgentKey: number = 0;\n    public userHash: string = null;\n    public version: string = null;\n    public latestVersion: string = null;\n    public latestDownloadUrl: string = null;\n    public generateUserToken: boolean = false;\n    public saveSettings: boolean = false;\n    public doUpgrade: boolean = false;\n   }\n   \n   export class SelectColumn {\n    public column: TableColumn = null;\n    public aggregate: eAggregate = eAggregate.None;\n    public outputColumn: TableColumn = null;\n   }\n   \n   export class SelectQuery {\n    public columns: SelectColumn[] = [];\n    public tableName: string = null;\n    public filters: Filter[] = [];\n    public sorts: Sort[] = [];\n    public groups: TableColumn[] = [];\n    public groupFilters: Filter[] = [];\n    public rows: number = -1;\n    public inputColumns: TableColumn[] = [];\n    public fileName: string = null;\n    public path: eFlatFilePath = eFlatFilePath.None;\n   }\n   \n   export class SharedData {\n    public hubKey: number = 0;\n    public hubName: string = null;\n    public objectType: eDataObjectType = null;\n    public objectKey: number = 0;\n    public name: string = null;\n    public logicalName: string = null;\n    public description: string = null;\n    public updateDate: Date = null;\n    public inputColumns: InputColumn[] = [];\n    public parameters: InputParameterBase[] = [];\n    public parentParameters: InputParameter[] = [];\n    public query: SelectQuery = null;\n    public outputColumns: DexihColumnBase[] = [];\n    public tags: DexihTag[] = [];\n   }\n   \n   export class Sort {\n    public column: TableColumn = null;\n    public direction: eSortDirection = null;\n   }\n   \n   export class Sorts {\n   }\n   \n   export class SystemSettingsSection {\n    public maxAcknowledgeWait: number = 5000;\n    public responseTimeout: number = 1000000;\n    public cancelDelay: number = 1000;\n    public encryptionIterations: number = 1000;\n    public maxPreviewDuration: number = 10000;\n    public maxConcurrentTasks: number = 50;\n    public maxUploadSize: number = 1000000000;\n    public socketTransportType: string = 'WebSockets';\n    public defaultPreviewRows: number = 100;\n    public maxPreviewRows: number = 5000;\n   }\n   \n   export class Table {\n    public name: string = null;\n    public schema: string = null;\n    public sourceConnectionName: string = null;\n    public logicalName: string = null;\n    public description: string = null;\n    public baseTableName: string = null;\n    public tableType: eTableType = eTableType.Table;\n    public isVersioned: boolean = false;\n    public queryString: string = null;\n    public outputSortFields: Sort[] = [];\n    public columns: TableColumn[] = [];\n    public maxImportLevels: number = 10;\n   }\n   \n   export class TableColumn {\n    public referenceTable: string = null;\n    public name: string = null;\n    public logicalName: string = null;\n    public description: string = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public maxLength: number = null;\n    public columnGroup: string = null;\n    public rank: number = 0;\n    public precision: number = null;\n    public scale: number = null;\n    public allowDbNull: boolean = false;\n    public deltaType: eDeltaType = null;\n    public isUnicode: boolean = null;\n    public defaultValue: any = null;\n    public isUnique: boolean = false;\n    public isMandatory: boolean = false;\n    public securityFlag: eSecurityFlag = eSecurityFlag.None;\n    public isInput: boolean = false;\n    public isIncrementalUpdate: boolean = false;\n    public isParent: boolean = false;\n    public childColumns: TableColumn[] = [];\n   }\n   \n   export class TableColumns {\n   }\n   \n   export class TransformAttribute {\n    public name: string = null;\n    public description: string = null;\n    public transformType: eTransformType = null;\n   }\n   \n   export class TransformPerformance {\n    public transformName: string = null;\n    public action: string = null;\n    public rows: number = 0;\n    public seconds: number = 0;\n    public children: TransformPerformance[] = [];\n   }\n   \n   export class TransformProperties {\n    public name: string = null;\n    public transformType: eTransformType = null;\n    public transformName: string = null;\n    public selectQuery: SelectQuery = null;\n    public properties: any[] = [];\n    public rows: number = 0;\n    public seconds: number = 0;\n    public primaryProperties: TransformProperties = null;\n    public referenceProperties: TransformProperties = null;\n   }\n   \n   export class TransformReference {\n    public transformClassName: string = null;\n    public transformAssemblyName: string = null;\n    public transformType: eTransformType = null;\n    public name: string = null;\n    public description: string = null;\n   }\n   \n   export class TransformSettings {\n    public hubVariables: DexihHubVariable[] = [];\n    public inputParameters: InputParameterBase[] = [];\n    public remoteSettings: RemoteSettings = null;\n   }\n   \n   export class TransformWriterOptions {\n   }\n   \n   export class TransformWriterResult {\n    public auditKey: number = 0;\n    public auditType: string = null;\n    public referenceKey: number = 0;\n    public parentAuditKey: number = 0;\n    public referenceName: string = null;\n    public sourceTableKey: number = 0;\n    public sourceTableName: string = null;\n    public targetTableKey: number = 0;\n    public targetTableName: string = null;\n    public hubKey: number = 0;\n    public auditConnectionKey: number = 0;\n    public lastRowTotal: number = 0;\n    public lastMaxIncrementalValue: any = null;\n    public rowsPerProgressEvent: number = 1000;\n    public rowsTotal: number = 0;\n    public rowsCreated: number = 0;\n    public rowsUpdated: number = 0;\n    public rowsDeleted: number = 0;\n    public rowsPreserved: number = 0;\n    public rowsIgnored: number = 0;\n    public rowsRejected: number = 0;\n    public rowsFiltered: number = 0;\n    public rowsSorted: number = 0;\n    public rowsReadPrimary: number = 0;\n    public rowsReadReference: number = 0;\n    public passed: number = 0;\n    public failed: number = 0;\n    public readTicks: number = 0;\n    public writeTicks: number = 0;\n    public processingTicks: number = 0;\n    public maxIncrementalValue: any = null;\n    public maxSurrogateKey: number = 0;\n    public message: string = null;\n    public exceptionDetails: string = null;\n    public initializeTime: Date = null;\n    public scheduledTime: Date = null;\n    public startTime: Date = null;\n    public endTime: Date = null;\n    public lastUpdateTime: Date = null;\n    public triggerMethod: eTriggerMethod = eTriggerMethod.Manual;\n    public triggerInfo: string = null;\n    public performanceSummary: TransformPerformance[] = [];\n    public profileTableName: string = null;\n    public rejectTableName: string = null;\n    public isCurrent: boolean = true;\n    public isPrevious: boolean = false;\n    public isPreviousSuccess: boolean = false;\n    public childResults: TransformWriterResult[] = [];\n    public runStatus: eRunStatus = eRunStatus.Initialised;\n    public isRunning: boolean = true;\n    public isFinished: boolean = false;\n    public isScheduled: boolean = false;\n    public percentageComplete: number = 0;\n   }\n   \n   export class UpdateQuery {\n    public updateColumns: QueryColumn[] = [];\n    public filters: Filter[] = [];\n   }\n   \n   export class UserModel {\n    public email: string = null;\n    public userName: string = null;\n    public emailConfirmed: boolean = false;\n    public accessFailedCount: number = 0;\n    public id: string = null;\n    public lockoutEnabled: boolean = false;\n    public lockoutEnd: any = null;\n    public logins: any[] = [];\n    public roles: string[] = [];\n    public claims: any[] = [];\n    public twoFactorEnabled: boolean = false;\n    public phoneNumber: string = null;\n    public phoneNumberConfirmed: boolean = false;\n    public firstName: string = null;\n    public lastName: string = null;\n    public terms: boolean = false;\n    public subscription: boolean = false;\n    public inviteQuota: number = 0;\n    public hubQuota: number = 0;\n    public isRegistered: boolean = false;\n    public isInvited: boolean = false;\n    public isEnabled: boolean = false;\n   }\n   \n   export class ViewConfig {\n    public viewType: eViewType = null;\n    public chartConfig: ChartConfig = null;\n    public animateConfig: AnimateConfig = null;\n   }\n   \n   export class WebService {\n    public restfulUri: string = null;\n    public rowPath: string = null;\n    public formatType: eTypeCode = eTypeCode.Json;\n    public fileConfiguration: FileConfiguration = new FileConfiguration();\n    public name: string = null;\n    public schema: string = null;\n    public sourceConnectionName: string = null;\n    public logicalName: string = null;\n    public description: string = null;\n    public baseTableName: string = null;\n    public tableType: eTableType = eTableType.Table;\n    public isVersioned: boolean = false;\n    public queryString: string = null;\n    public outputSortFields: Sort[] = [];\n    public columns: TableColumn[] = [];\n    public maxImportLevels: number = 10;\n   }\n   \n   // auto generated enums\n   \n   export enum eAggregate {\n    None = 0,\n    Sum = 1,\n    Average = 2,\n    Min = 3,\n    Max = 4,\n    Count = 5,\n    First = 6,\n    Last = 7,\n   }\n   \n   export const eAggregateItems = [\n    {key: eAggregate.None, name: 'None'},\n    {key: eAggregate.Sum, name: 'Sum'},\n    {key: eAggregate.Average, name: 'Average'},\n    {key: eAggregate.Min, name: 'Min'},\n    {key: eAggregate.Max, name: 'Max'},\n    {key: eAggregate.Count, name: 'Count'},\n    {key: eAggregate.First, name: 'First'},\n    {key: eAggregate.Last, name: 'Last'},\n   ]\n   \n   export enum eAlertLevel {\n    None = 0,\n    Critical = 1,\n    Errors = 2,\n    All = 3,\n   }\n   \n   export const eAlertLevelItems = [\n    {key: eAlertLevel.None, name: 'None', description: 'No alerting.'},\n    {key: eAlertLevel.Critical, name: 'Critical', description: 'Alert on critical failures only.'},\n    {key: eAlertLevel.Errors, name: 'Errors', description: 'Alert on any errors.'},\n    {key: eAlertLevel.All, name: 'All', description: 'Alert on start/stop and errors'},\n   ]\n   \n   export enum eAndOr {\n    And = 1,\n    Or = 2,\n   }\n   \n   export const eAndOrItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eAndOr.And, name: 'And'},\n    {key: eAndOr.Or, name: 'Or'},\n   ]\n   \n   export enum eApiStatus {\n    Activated = 1,\n    Deactivated = 2,\n   }\n   \n   export const eApiStatusItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eApiStatus.Activated, name: 'Activated'},\n    {key: eApiStatus.Deactivated, name: 'Deactivated'},\n   ]\n   \n   export enum eChartType {\n    BarVertical = 1,\n    BarHorizontal = 2,\n    BarVertical2D = 3,\n    BarHorizontal2D = 4,\n    BarVerticalStacked = 5,\n    BarHorizontalStacked = 6,\n    BarVerticalNormalized = 7,\n    BarHorizontalNormalized = 8,\n    Pie = 9,\n    PieAdvanced = 10,\n    PieGrid = 11,\n    Line = 12,\n    Area = 13,\n    Polar = 14,\n    AreaStacked = 15,\n    AreaNormalized = 16,\n    Scatter = 17,\n    Error = 18,\n    Bubble = 19,\n    ForceDirected = 20,\n    HeatMap = 21,\n    TreeMap = 22,\n    Cards = 23,\n    Gauge = 24,\n    LinearGauge = 25,\n    Map = 26,\n    BarLineCombo = 27,\n   }\n   \n   export const eChartTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eChartType.BarVertical, name: 'BarVertical'},\n    {key: eChartType.BarHorizontal, name: 'BarHorizontal'},\n    {key: eChartType.BarVertical2D, name: 'BarVertical2D'},\n    {key: eChartType.BarHorizontal2D, name: 'BarHorizontal2D'},\n    {key: eChartType.BarVerticalStacked, name: 'BarVerticalStacked'},\n    {key: eChartType.BarHorizontalStacked, name: 'BarHorizontalStacked'},\n    {key: eChartType.BarVerticalNormalized, name: 'BarVerticalNormalized'},\n    {key: eChartType.BarHorizontalNormalized, name: 'BarHorizontalNormalized'},\n    {key: eChartType.Pie, name: 'Pie'},\n    {key: eChartType.PieAdvanced, name: 'PieAdvanced'},\n    {key: eChartType.PieGrid, name: 'PieGrid'},\n    {key: eChartType.Line, name: 'Line'},\n    {key: eChartType.Area, name: 'Area'},\n    {key: eChartType.Polar, name: 'Polar'},\n    {key: eChartType.AreaStacked, name: 'AreaStacked'},\n    {key: eChartType.AreaNormalized, name: 'AreaNormalized'},\n    {key: eChartType.Scatter, name: 'Scatter'},\n    {key: eChartType.Error, name: 'Error'},\n    {key: eChartType.Bubble, name: 'Bubble'},\n    {key: eChartType.ForceDirected, name: 'ForceDirected'},\n    {key: eChartType.HeatMap, name: 'HeatMap'},\n    {key: eChartType.TreeMap, name: 'TreeMap'},\n    {key: eChartType.Cards, name: 'Cards'},\n    {key: eChartType.Gauge, name: 'Gauge'},\n    {key: eChartType.LinearGauge, name: 'LinearGauge'},\n    {key: eChartType.Map, name: 'Map'},\n    {key: eChartType.BarLineCombo, name: 'BarLineCombo'},\n   ]\n   \n   export enum eCleanAction {\n    DefaultValue = 1,\n    Truncate = 2,\n    Blank = 3,\n    Null = 4,\n    OriginalValue = 5,\n    CleanValue = 6,\n   }\n   \n   export const eCleanActionItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eCleanAction.DefaultValue, name: 'DefaultValue'},\n    {key: eCleanAction.Truncate, name: 'Truncate'},\n    {key: eCleanAction.Blank, name: 'Blank'},\n    {key: eCleanAction.Null, name: 'Null'},\n    {key: eCleanAction.OriginalValue, name: 'OriginalValue'},\n    {key: eCleanAction.CleanValue, name: 'CleanValue'},\n   ]\n   \n   export enum eClientCommand {\n    Connect = 0,\n    Disconnect = 1,\n    Message = 2,\n    ActiveAgentUpdate = 3,\n    RemoteAgentUpdateKey = 4,\n    RemoteAgentDelete = 5,\n    RemoteAgentDeleteKey = 6,\n    HubUpdate = 7,\n    HubDelete = 8,\n    Task = 9,\n    FileDownload = 10,\n    DownloadReady = 11,\n    HubChange = 12,\n    HubError = 13,\n    DatalinkProgress = 14,\n    DatalinkStatus = 15,\n    DatajobProgress = 16,\n    DatajobStatus = 17,\n    DatalinkTestProgress = 18,\n    TableProgress = 19,\n    ApiStatus = 20,\n    ApiQuery = 21,\n    FlatFilesReady = 22,\n    Command = 23,\n   }\n   \n   export const eClientCommandItems = [\n    {key: eClientCommand.Connect, name: 'Connect'},\n    {key: eClientCommand.Disconnect, name: 'Disconnect'},\n    {key: eClientCommand.Message, name: 'Message'},\n    {key: eClientCommand.ActiveAgentUpdate, name: 'ActiveAgentUpdate'},\n    {key: eClientCommand.RemoteAgentUpdateKey, name: 'RemoteAgentUpdateKey'},\n    {key: eClientCommand.RemoteAgentDelete, name: 'RemoteAgentDelete'},\n    {key: eClientCommand.RemoteAgentDeleteKey, name: 'RemoteAgentDeleteKey'},\n    {key: eClientCommand.HubUpdate, name: 'HubUpdate'},\n    {key: eClientCommand.HubDelete, name: 'HubDelete'},\n    {key: eClientCommand.Task, name: 'Task'},\n    {key: eClientCommand.FileDownload, name: 'FileDownload'},\n    {key: eClientCommand.DownloadReady, name: 'DownloadReady'},\n    {key: eClientCommand.HubChange, name: 'HubChange'},\n    {key: eClientCommand.HubError, name: 'HubError'},\n    {key: eClientCommand.DatalinkProgress, name: 'DatalinkProgress'},\n    {key: eClientCommand.DatalinkStatus, name: 'DatalinkStatus'},\n    {key: eClientCommand.DatajobProgress, name: 'DatajobProgress'},\n    {key: eClientCommand.DatajobStatus, name: 'DatajobStatus'},\n    {key: eClientCommand.DatalinkTestProgress, name: 'DatalinkTestProgress'},\n    {key: eClientCommand.TableProgress, name: 'TableProgress'},\n    {key: eClientCommand.ApiStatus, name: 'ApiStatus'},\n    {key: eClientCommand.ApiQuery, name: 'ApiQuery'},\n    {key: eClientCommand.FlatFilesReady, name: 'FlatFilesReady'},\n    {key: eClientCommand.Command, name: 'Command'},\n   ]\n   \n   export enum eCompare {\n    IsEqual = 0,\n    GreaterThan = 1,\n    GreaterThanEqual = 2,\n    LessThan = 3,\n    LessThanEqual = 4,\n    NotEqual = 5,\n    IsIn = 6,\n    IsNull = 7,\n    IsNotNull = 8,\n    Like = 9,\n    IsNotIn = 10,\n   }\n   \n   export const eCompareItems = [\n    {key: eCompare.IsEqual, name: 'IsEqual'},\n    {key: eCompare.GreaterThan, name: 'GreaterThan'},\n    {key: eCompare.GreaterThanEqual, name: 'GreaterThanEqual'},\n    {key: eCompare.LessThan, name: 'LessThan'},\n    {key: eCompare.LessThanEqual, name: 'LessThanEqual'},\n    {key: eCompare.NotEqual, name: 'NotEqual'},\n    {key: eCompare.IsIn, name: 'IsIn'},\n    {key: eCompare.IsNull, name: 'IsNull'},\n    {key: eCompare.IsNotNull, name: 'IsNotNull'},\n    {key: eCompare.Like, name: 'Like'},\n    {key: eCompare.IsNotIn, name: 'IsNotIn'},\n   ]\n   \n   export enum eConcurrentTaskAction {\n    Parallel = 1,\n    Abend = 2,\n    Sequence = 3,\n   }\n   \n   export const eConcurrentTaskActionItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eConcurrentTaskAction.Parallel, name: 'Parallel'},\n    {key: eConcurrentTaskAction.Abend, name: 'Abend'},\n    {key: eConcurrentTaskAction.Sequence, name: 'Sequence'},\n   ]\n   \n   export enum eConnectionCategory {\n    SqlDatabase = 1,\n    NoSqlDatabase = 2,\n    DatabaseFile = 3,\n    File = 4,\n    WebService = 5,\n    Hub = 6,\n   }\n   \n   export const eConnectionCategoryItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eConnectionCategory.SqlDatabase, name: 'SqlDatabase'},\n    {key: eConnectionCategory.NoSqlDatabase, name: 'NoSqlDatabase'},\n    {key: eConnectionCategory.DatabaseFile, name: 'DatabaseFile'},\n    {key: eConnectionCategory.File, name: 'File'},\n    {key: eConnectionCategory.WebService, name: 'WebService'},\n    {key: eConnectionCategory.Hub, name: 'Hub'},\n   ]\n   \n   export enum eConnectionPurpose {\n    Source = 1,\n    Managed = 2,\n    Target = 3,\n   }\n   \n   export const eConnectionPurposeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eConnectionPurpose.Source, name: 'Source'},\n    {key: eConnectionPurpose.Managed, name: 'Managed'},\n    {key: eConnectionPurpose.Target, name: 'Target'},\n   ]\n   \n   export enum eDatalinkType {\n    General = 1,\n    Stage = 2,\n    Validate = 3,\n    Transform = 4,\n    Deliver = 5,\n    Publish = 6,\n    Share = 7,\n    Query = 8,\n   }\n   \n   export const eDatalinkTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eDatalinkType.General, name: 'General', description: 'Non-categorized general purpose datalink'},\n    {key: eDatalinkType.Stage, name: 'Stage', description: 'Staging - loads data into a central/interim database'},\n    {key: eDatalinkType.Validate, name: 'Validate', description: 'Validate - performs data validation and cleaning'},\n    {key: eDatalinkType.Transform, name: 'Transform', description: 'Transform - reshapes, aggregates data'},\n    {key: eDatalinkType.Deliver, name: 'Deliver', description: 'Deliver - prepares data for delivering to a system/database'},\n    {key: eDatalinkType.Publish, name: 'Publish', description: 'Publish - sends data to a target system/database'},\n    {key: eDatalinkType.Share, name: 'Share', description: 'Share - datalink designed to be shared with other users'},\n    {key: eDatalinkType.Query, name: 'Query', description: 'Query - datalink query used for data extracts or as a source for other datalinks'},\n   ]\n   \n   export enum eDataObjectType {\n    Table = 1,\n    Datalink = 2,\n    View = 3,\n    Dashboard = 4,\n    DashboardItem = 5,\n    Api = 6,\n   }\n   \n   export const eDataObjectTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eDataObjectType.Table, name: 'Table'},\n    {key: eDataObjectType.Datalink, name: 'Datalink'},\n    {key: eDataObjectType.View, name: 'View'},\n    {key: eDataObjectType.Dashboard, name: 'Dashboard'},\n    {key: eDataObjectType.DashboardItem, name: 'DashboardItem'},\n    {key: eDataObjectType.Api, name: 'Api'},\n   ]\n   \n   export enum eDataPrivacyStatus {\n    NotAllowed = 1,\n    Proxy = 2,\n    Lan = 3,\n    Internet = 4,\n   }\n   \n   export const eDataPrivacyStatusItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eDataPrivacyStatus.NotAllowed, name: 'NotAllowed'},\n    {key: eDataPrivacyStatus.Proxy, name: 'Proxy'},\n    {key: eDataPrivacyStatus.Lan, name: 'Lan'},\n    {key: eDataPrivacyStatus.Internet, name: 'Internet'},\n   ]\n   \n   export enum eDayOfWeek {\n    Sunday = 1,\n    Monday = 2,\n    Tuesday = 3,\n    Wednesday = 4,\n    Thursday = 5,\n    Friday = 6,\n    Saturday = 7,\n   }\n   \n   export const eDayOfWeekItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eDayOfWeek.Sunday, name: 'Sunday'},\n    {key: eDayOfWeek.Monday, name: 'Monday'},\n    {key: eDayOfWeek.Tuesday, name: 'Tuesday'},\n    {key: eDayOfWeek.Wednesday, name: 'Wednesday'},\n    {key: eDayOfWeek.Thursday, name: 'Thursday'},\n    {key: eDayOfWeek.Friday, name: 'Friday'},\n    {key: eDayOfWeek.Saturday, name: 'Saturday'},\n   ]\n   \n   export enum eDeltaType {\n    AutoIncrement = 1,\n    DbAutoIncrement = 2,\n    SourceSurrogateKey = 3,\n    ValidFromDate = 4,\n    ValidToDate = 5,\n    CreateDate = 6,\n    UpdateDate = 7,\n    CreateAuditKey = 8,\n    UpdateAuditKey = 9,\n    IsCurrentField = 10,\n    Version = 11,\n    NaturalKey = 12,\n    TrackingField = 13,\n    NonTrackingField = 14,\n    IgnoreField = 15,\n    ValidationStatus = 16,\n    RejectedReason = 17,\n    FileName = 18,\n    FileRowNumber = 19,\n    RowKey = 20,\n    PartitionKey = 21,\n    TimeStamp = 22,\n    DatabaseOperation = 23,\n    ResponseSuccess = 24,\n    ResponseData = 25,\n    ResponseStatus = 26,\n    ResponseSegment = 27,\n    Error = 28,\n    Url = 29,\n    UpdateReason = 30,\n    FileDate = 31,\n   }\n   \n   export const eDeltaTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eDeltaType.AutoIncrement, name: 'AutoIncrement'},\n    {key: eDeltaType.DbAutoIncrement, name: 'DbAutoIncrement'},\n    {key: eDeltaType.SourceSurrogateKey, name: 'SourceSurrogateKey'},\n    {key: eDeltaType.ValidFromDate, name: 'ValidFromDate'},\n    {key: eDeltaType.ValidToDate, name: 'ValidToDate'},\n    {key: eDeltaType.CreateDate, name: 'CreateDate'},\n    {key: eDeltaType.UpdateDate, name: 'UpdateDate'},\n    {key: eDeltaType.CreateAuditKey, name: 'CreateAuditKey'},\n    {key: eDeltaType.UpdateAuditKey, name: 'UpdateAuditKey'},\n    {key: eDeltaType.IsCurrentField, name: 'IsCurrentField'},\n    {key: eDeltaType.Version, name: 'Version'},\n    {key: eDeltaType.NaturalKey, name: 'NaturalKey'},\n    {key: eDeltaType.TrackingField, name: 'TrackingField'},\n    {key: eDeltaType.NonTrackingField, name: 'NonTrackingField'},\n    {key: eDeltaType.IgnoreField, name: 'IgnoreField'},\n    {key: eDeltaType.ValidationStatus, name: 'ValidationStatus'},\n    {key: eDeltaType.RejectedReason, name: 'RejectedReason'},\n    {key: eDeltaType.FileName, name: 'FileName'},\n    {key: eDeltaType.FileRowNumber, name: 'FileRowNumber'},\n    {key: eDeltaType.RowKey, name: 'RowKey'},\n    {key: eDeltaType.PartitionKey, name: 'PartitionKey'},\n    {key: eDeltaType.TimeStamp, name: 'TimeStamp'},\n    {key: eDeltaType.DatabaseOperation, name: 'DatabaseOperation'},\n    {key: eDeltaType.ResponseSuccess, name: 'ResponseSuccess'},\n    {key: eDeltaType.ResponseData, name: 'ResponseData'},\n    {key: eDeltaType.ResponseStatus, name: 'ResponseStatus'},\n    {key: eDeltaType.ResponseSegment, name: 'ResponseSegment'},\n    {key: eDeltaType.Error, name: 'Error'},\n    {key: eDeltaType.Url, name: 'Url'},\n    {key: eDeltaType.UpdateReason, name: 'UpdateReason'},\n    {key: eDeltaType.FileDate, name: 'FileDate'},\n   ]\n   \n   export enum eDownloadFormat {\n    Csv = 1,\n    Json = 2,\n    JsonCompact = 3,\n   }\n   \n   export const eDownloadFormatItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eDownloadFormat.Csv, name: 'Csv'},\n    {key: eDownloadFormat.Json, name: 'Json'},\n    {key: eDownloadFormat.JsonCompact, name: 'JsonCompact'},\n   ]\n   \n   export enum eDownloadUrlType {\n    Proxy = 1,\n    Direct = 2,\n   }\n   \n   export const eDownloadUrlTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eDownloadUrlType.Proxy, name: 'Proxy'},\n    {key: eDownloadUrlType.Direct, name: 'Direct'},\n   ]\n   \n   export enum eDuplicateStrategy {\n    Abend = 0,\n    First = 1,\n    Last = 2,\n    All = 3,\n    MergeValidDates = 4,\n   }\n   \n   export const eDuplicateStrategyItems = [\n    {key: eDuplicateStrategy.Abend, name: 'Abend', description: 'Abend Datalink'},\n    {key: eDuplicateStrategy.First, name: 'First', description: 'First Row'},\n    {key: eDuplicateStrategy.Last, name: 'Last', description: 'Last Row'},\n    {key: eDuplicateStrategy.All, name: 'All', description: 'All Rows'},\n    {key: eDuplicateStrategy.MergeValidDates, name: 'MergeValidDates', description: 'Merge Valid To/From'},\n   ]\n   \n   export enum eEnvironment {\n    Windows = 1,\n    Osx = 2,\n    Linux = 3,\n   }\n   \n   export const eEnvironmentItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eEnvironment.Windows, name: 'Windows', description: 'Windows 7/8/8.1/10'},\n    {key: eEnvironment.Osx, name: 'Osx', description: 'Mac OSX'},\n    {key: eEnvironment.Linux, name: 'Linux', description: 'Linux'},\n   ]\n   \n   export enum eErrorAction {\n    Abend = 1,\n    Null = 2,\n    Ignore = 3,\n    Execute = 4,\n   }\n   \n   export const eErrorActionItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eErrorAction.Abend, name: 'Abend'},\n    {key: eErrorAction.Null, name: 'Null'},\n    {key: eErrorAction.Ignore, name: 'Ignore'},\n    {key: eErrorAction.Execute, name: 'Execute'},\n   ]\n   \n   export enum eFailAction {\n    Continue = 1,\n    ContinueNonDependent = 2,\n    Abend = 3,\n   }\n   \n   export const eFailActionItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eFailAction.Continue, name: 'Continue'},\n    {key: eFailAction.ContinueNonDependent, name: 'ContinueNonDependent'},\n    {key: eFailAction.Abend, name: 'Abend'},\n   ]\n   \n   export enum eFlatFilePath {\n    None = 0,\n    Incoming = 1,\n    Outgoing = 2,\n    Processed = 3,\n    Rejected = 4,\n   }\n   \n   export const eFlatFilePathItems = [\n    {key: eFlatFilePath.None, name: 'None'},\n    {key: eFlatFilePath.Incoming, name: 'Incoming'},\n    {key: eFlatFilePath.Outgoing, name: 'Outgoing'},\n    {key: eFlatFilePath.Processed, name: 'Processed'},\n    {key: eFlatFilePath.Rejected, name: 'Rejected'},\n   ]\n   \n   export enum eFunctionCaching {\n    NoCache = 0,\n    EnableCache = 1,\n    CallOnce = 2,\n   }\n   \n   export const eFunctionCachingItems = [\n    {key: eFunctionCaching.NoCache, name: 'NoCache'},\n    {key: eFunctionCaching.EnableCache, name: 'EnableCache'},\n    {key: eFunctionCaching.CallOnce, name: 'CallOnce'},\n   ]\n   \n   export enum eFunctionType {\n    Map = 1,\n    Condition = 2,\n    Aggregate = 3,\n    Series = 4,\n    Rows = 5,\n    Validate = 6,\n    Profile = 7,\n    Sort = 8,\n    JoinCondition = 9,\n   }\n   \n   export const eFunctionTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eFunctionType.Map, name: 'Map'},\n    {key: eFunctionType.Condition, name: 'Condition'},\n    {key: eFunctionType.Aggregate, name: 'Aggregate'},\n    {key: eFunctionType.Series, name: 'Series'},\n    {key: eFunctionType.Rows, name: 'Rows'},\n    {key: eFunctionType.Validate, name: 'Validate'},\n    {key: eFunctionType.Profile, name: 'Profile'},\n    {key: eFunctionType.Sort, name: 'Sort'},\n    {key: eFunctionType.JoinCondition, name: 'JoinCondition'},\n   ]\n   \n   export enum eGenericType {\n    None = 1,\n    Numeric = 2,\n    All = 3,\n    String = 4,\n   }\n   \n   export const eGenericTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eGenericType.None, name: 'None'},\n    {key: eGenericType.Numeric, name: 'Numeric'},\n    {key: eGenericType.All, name: 'All'},\n    {key: eGenericType.String, name: 'String'},\n   ]\n   \n   export enum eImportAction {\n    Replace = 1,\n    New = 2,\n    Leave = 3,\n    Skip = 4,\n    Delete = 5,\n   }\n   \n   export const eImportActionItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eImportAction.Replace, name: 'Replace'},\n    {key: eImportAction.New, name: 'New'},\n    {key: eImportAction.Leave, name: 'Leave'},\n    {key: eImportAction.Skip, name: 'Skip'},\n    {key: eImportAction.Delete, name: 'Delete'},\n   ]\n   \n   export enum eIntervalType {\n    None = 0,\n    Once = 1,\n    Interval = 2,\n    Daily = 3,\n    Monthly = 4,\n   }\n   \n   export const eIntervalTypeItems = [\n    {key: eIntervalType.None, name: 'None'},\n    {key: eIntervalType.Once, name: 'Once'},\n    {key: eIntervalType.Interval, name: 'Interval'},\n    {key: eIntervalType.Daily, name: 'Daily'},\n    {key: eIntervalType.Monthly, name: 'Monthly'},\n   ]\n   \n   export enum eInvalidAction {\n    Pass = 1,\n    Clean = 2,\n    RejectClean = 3,\n    Reject = 4,\n    Discard = 5,\n    Abend = 6,\n   }\n   \n   export const eInvalidActionItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eInvalidAction.Pass, name: 'Pass'},\n    {key: eInvalidAction.Clean, name: 'Clean'},\n    {key: eInvalidAction.RejectClean, name: 'RejectClean'},\n    {key: eInvalidAction.Reject, name: 'Reject'},\n    {key: eInvalidAction.Discard, name: 'Discard'},\n    {key: eInvalidAction.Abend, name: 'Abend'},\n   ]\n   \n   export enum eIssueCategory {\n    Other = 0,\n    Web = 1,\n    Saving = 2,\n    RemoteAgent = 3,\n    Datalink = 4,\n    Datajob = 5,\n    Api = 6,\n    View = 7,\n    Dashboard = 8,\n    Security = 9,\n   }\n   \n   export const eIssueCategoryItems = [\n    {key: eIssueCategory.Other, name: 'Other', description: 'Other'},\n    {key: eIssueCategory.Web, name: 'Web', description: 'Web Interface'},\n    {key: eIssueCategory.Saving, name: 'Saving', description: 'Saving / loading / importing / exporting items'},\n    {key: eIssueCategory.RemoteAgent, name: 'RemoteAgent', description: 'Remote Agent Configuration / Connections'},\n    {key: eIssueCategory.Datalink, name: 'Datalink', description: 'Running / previewing datalink'},\n    {key: eIssueCategory.Datajob, name: 'Datajob', description: 'Scheduling / running datajob'},\n    {key: eIssueCategory.Api, name: 'Api', description: 'Using the API'},\n    {key: eIssueCategory.View, name: 'View', description: 'Using a View'},\n    {key: eIssueCategory.Dashboard, name: 'Dashboard', description: 'Using a Dashboard'},\n    {key: eIssueCategory.Security, name: 'Security', description: 'Login, permissions, and other security issues'},\n   ]\n   \n   export enum eIssueSeverity {\n    Critical = 0,\n    Major = 1,\n    Minor = 2,\n    Trivial = 3,\n   }\n   \n   export const eIssueSeverityItems = [\n    {key: eIssueSeverity.Critical, name: 'Critical', description: 'Critical (currently unusable)'},\n    {key: eIssueSeverity.Major, name: 'Major', description: 'Major (temporary workarounds exist)'},\n    {key: eIssueSeverity.Minor, name: 'Minor', description: 'Minor (productivity imporovments)'},\n    {key: eIssueSeverity.Trivial, name: 'Trivial', description: 'Trivial (Nice to Have)'},\n   ]\n   \n   export enum eIssueStatus {\n    Open = 0,\n    UnderReview = 1,\n    InProgress = 2,\n    Complete = 3,\n    Closed = 4,\n   }\n   \n   export const eIssueStatusItems = [\n    {key: eIssueStatus.Open, name: 'Open', description: 'Open - Issue has been opened.'},\n    {key: eIssueStatus.UnderReview, name: 'UnderReview', description: 'Under Review - Issue is under review by support team.'},\n    {key: eIssueStatus.InProgress, name: 'InProgress', description: 'In Progress - Issue is currently being worked on.'},\n    {key: eIssueStatus.Complete, name: 'Complete', description: 'Complete - Issue has been completed.'},\n    {key: eIssueStatus.Closed, name: 'Closed', description: 'Closed'},\n   ]\n   \n   export enum eIssueType {\n    Other = 0,\n    Bug = 1,\n    Request = 2,\n    Question = 3,\n    Feedback = 4,\n   }\n   \n   export const eIssueTypeItems = [\n    {key: eIssueType.Other, name: 'Other', description: 'Other'},\n    {key: eIssueType.Bug, name: 'Bug', description: 'Bug'},\n    {key: eIssueType.Request, name: 'Request', description: 'Feature Request'},\n    {key: eIssueType.Question, name: 'Question', description: 'Question'},\n    {key: eIssueType.Feedback, name: 'Feedback', description: 'General Feedback'},\n   ]\n   \n   export enum eJoinNotFoundStrategy {\n    Abend = 0,\n    NullJoin = 1,\n    Filter = 2,\n   }\n   \n   export const eJoinNotFoundStrategyItems = [\n    {key: eJoinNotFoundStrategy.Abend, name: 'Abend', description: 'Abend Datalink'},\n    {key: eJoinNotFoundStrategy.NullJoin, name: 'NullJoin', description: 'Add Null Join'},\n    {key: eJoinNotFoundStrategy.Filter, name: 'Filter', description: 'Filter Row'},\n   ]\n   \n   export enum eLoginProvider {\n    Dexih = 1,\n    Google = 2,\n    Microsoft = 3,\n   }\n   \n   export const eLoginProviderItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eLoginProvider.Dexih, name: 'Dexih'},\n    {key: eLoginProvider.Google, name: 'Google'},\n    {key: eLoginProvider.Microsoft, name: 'Microsoft'},\n   ]\n   \n   export enum eLOVObjectType {\n    Table = 1,\n    Datalink = 2,\n    Static = 3,\n   }\n   \n   export const eLOVObjectTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eLOVObjectType.Table, name: 'Table'},\n    {key: eLOVObjectType.Datalink, name: 'Datalink'},\n    {key: eLOVObjectType.Static, name: 'Static'},\n   ]\n   \n   export enum eManagedTaskStatus {\n    Created = 1,\n    FileWatching = 2,\n    Scheduled = 3,\n    Queued = 4,\n    Running = 5,\n    Cancelled = 6,\n    Error = 7,\n    Completed = 8,\n   }\n   \n   export const eManagedTaskStatusItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eManagedTaskStatus.Created, name: 'Created'},\n    {key: eManagedTaskStatus.FileWatching, name: 'FileWatching'},\n    {key: eManagedTaskStatus.Scheduled, name: 'Scheduled'},\n    {key: eManagedTaskStatus.Queued, name: 'Queued'},\n    {key: eManagedTaskStatus.Running, name: 'Running'},\n    {key: eManagedTaskStatus.Cancelled, name: 'Cancelled'},\n    {key: eManagedTaskStatus.Error, name: 'Error'},\n    {key: eManagedTaskStatus.Completed, name: 'Completed'},\n   ]\n   \n   export enum eMessageCommand {\n    Connect = 0,\n    Disconnect = 1,\n    MessageResponse = 2,\n    RemoteAgentUpdate = 3,\n    RemoteAgentDelete = 4,\n    RemoteAgentDeleteKey = 5,\n    HubUpdate = 6,\n    HubDelete = 7,\n    Task = 8,\n    FileDownload = 9,\n    DownloadReady = 10,\n    HubChange = 11,\n    HubError = 12,\n    DatalinkProgress = 13,\n    DatalinkStatus = 14,\n    DatajobProgress = 15,\n    DatajobStatus = 16,\n    DatalinkTestProgress = 17,\n    TableProgress = 18,\n    ApiStatus = 19,\n    ApiQuery = 20,\n    FlatFilesReady = 21,\n    RemoteMethod = 22,\n   }\n   \n   export const eMessageCommandItems = [\n    {key: eMessageCommand.Connect, name: 'Connect'},\n    {key: eMessageCommand.Disconnect, name: 'Disconnect'},\n    {key: eMessageCommand.MessageResponse, name: 'MessageResponse'},\n    {key: eMessageCommand.RemoteAgentUpdate, name: 'RemoteAgentUpdate'},\n    {key: eMessageCommand.RemoteAgentDelete, name: 'RemoteAgentDelete'},\n    {key: eMessageCommand.RemoteAgentDeleteKey, name: 'RemoteAgentDeleteKey'},\n    {key: eMessageCommand.HubUpdate, name: 'HubUpdate'},\n    {key: eMessageCommand.HubDelete, name: 'HubDelete'},\n    {key: eMessageCommand.Task, name: 'Task'},\n    {key: eMessageCommand.FileDownload, name: 'FileDownload'},\n    {key: eMessageCommand.DownloadReady, name: 'DownloadReady'},\n    {key: eMessageCommand.HubChange, name: 'HubChange'},\n    {key: eMessageCommand.HubError, name: 'HubError'},\n    {key: eMessageCommand.DatalinkProgress, name: 'DatalinkProgress'},\n    {key: eMessageCommand.DatalinkStatus, name: 'DatalinkStatus'},\n    {key: eMessageCommand.DatajobProgress, name: 'DatajobProgress'},\n    {key: eMessageCommand.DatajobStatus, name: 'DatajobStatus'},\n    {key: eMessageCommand.DatalinkTestProgress, name: 'DatalinkTestProgress'},\n    {key: eMessageCommand.TableProgress, name: 'TableProgress'},\n    {key: eMessageCommand.ApiStatus, name: 'ApiStatus'},\n    {key: eMessageCommand.ApiQuery, name: 'ApiQuery'},\n    {key: eMessageCommand.FlatFilesReady, name: 'FlatFilesReady'},\n    {key: eMessageCommand.RemoteMethod, name: 'RemoteMethod'},\n   ]\n   \n   export enum eParameterDirection {\n    Input = 1,\n    Output = 2,\n    ResultInput = 3,\n    ResultOutput = 4,\n    ReturnValue = 5,\n    ResultReturnValue = 6,\n    Join = 7,\n   }\n   \n   export const eParameterDirectionItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eParameterDirection.Input, name: 'Input'},\n    {key: eParameterDirection.Output, name: 'Output'},\n    {key: eParameterDirection.ResultInput, name: 'ResultInput'},\n    {key: eParameterDirection.ResultOutput, name: 'ResultOutput'},\n    {key: eParameterDirection.ReturnValue, name: 'ReturnValue'},\n    {key: eParameterDirection.ResultReturnValue, name: 'ResultReturnValue'},\n    {key: eParameterDirection.Join, name: 'Join'},\n   ]\n   \n   export enum ePermission {\n    None = 0,\n    Suspended = 1,\n    PublishReader = 2,\n    FullReader = 3,\n    User = 4,\n    Owner = 5,\n   }\n   \n   export const ePermissionItems = [\n    {key: ePermission.None, name: 'None', description: 'No access.'},\n    {key: ePermission.Suspended, name: 'Suspended', description: 'Suspended (banned from hub)'},\n    {key: ePermission.PublishReader, name: 'PublishReader', description: 'Publish Reader (only access shared)'},\n    {key: ePermission.FullReader, name: 'FullReader', description: 'Reader (read only access)'},\n    {key: ePermission.User, name: 'User', description: 'User (add/modify permission)'},\n    {key: ePermission.Owner, name: 'Owner', description: 'Owner (full permissions)'},\n   ]\n   \n   export enum eRunStatus {\n    Initialised = 1,\n    Scheduled = 2,\n    Started = 3,\n    Running = 4,\n    RunningErrors = 5,\n    Finished = 6,\n    FinishedErrors = 7,\n    Abended = 8,\n    Cancelled = 9,\n    NotRunning = 10,\n    Passed = 11,\n    Failed = 12,\n   }\n   \n   export const eRunStatusItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eRunStatus.Initialised, name: 'Initialised'},\n    {key: eRunStatus.Scheduled, name: 'Scheduled'},\n    {key: eRunStatus.Started, name: 'Started'},\n    {key: eRunStatus.Running, name: 'Running'},\n    {key: eRunStatus.RunningErrors, name: 'RunningErrors'},\n    {key: eRunStatus.Finished, name: 'Finished'},\n    {key: eRunStatus.FinishedErrors, name: 'FinishedErrors'},\n    {key: eRunStatus.Abended, name: 'Abended'},\n    {key: eRunStatus.Cancelled, name: 'Cancelled'},\n    {key: eRunStatus.NotRunning, name: 'NotRunning'},\n    {key: eRunStatus.Passed, name: 'Passed'},\n    {key: eRunStatus.Failed, name: 'Failed'},\n   ]\n   \n   export enum eSecurityFlag {\n    None = 0,\n    FastEncrypt = 1,\n    FastDecrypt = 2,\n    FastEncrypted = 3,\n    StrongEncrypt = 4,\n    StrongDecrypt = 5,\n    StrongEncrypted = 6,\n    OneWayHash = 7,\n    OneWayHashed = 8,\n    Hide = 9,\n   }\n   \n   export const eSecurityFlagItems = [\n    {key: eSecurityFlag.None, name: 'None'},\n    {key: eSecurityFlag.FastEncrypt, name: 'FastEncrypt'},\n    {key: eSecurityFlag.FastDecrypt, name: 'FastDecrypt'},\n    {key: eSecurityFlag.FastEncrypted, name: 'FastEncrypted'},\n    {key: eSecurityFlag.StrongEncrypt, name: 'StrongEncrypt'},\n    {key: eSecurityFlag.StrongDecrypt, name: 'StrongDecrypt'},\n    {key: eSecurityFlag.StrongEncrypted, name: 'StrongEncrypted'},\n    {key: eSecurityFlag.OneWayHash, name: 'OneWayHash'},\n    {key: eSecurityFlag.OneWayHashed, name: 'OneWayHashed'},\n    {key: eSecurityFlag.Hide, name: 'Hide'},\n   ]\n   \n   export enum eSeriesGrain {\n    Second = 1,\n    Minute = 2,\n    Hour = 3,\n    Day = 4,\n    Week = 5,\n    Month = 6,\n    Year = 7,\n    Number = 8,\n   }\n   \n   export const eSeriesGrainItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eSeriesGrain.Second, name: 'Second'},\n    {key: eSeriesGrain.Minute, name: 'Minute'},\n    {key: eSeriesGrain.Hour, name: 'Hour'},\n    {key: eSeriesGrain.Day, name: 'Day'},\n    {key: eSeriesGrain.Week, name: 'Week'},\n    {key: eSeriesGrain.Month, name: 'Month'},\n    {key: eSeriesGrain.Year, name: 'Year'},\n    {key: eSeriesGrain.Number, name: 'Number'},\n   ]\n   \n   export enum eSharedAccess {\n    Public = 1,\n    Registered = 2,\n    Reader = 3,\n   }\n   \n   export const eSharedAccessItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eSharedAccess.Public, name: 'Public', description: 'Shared data can be accessed by the public.'},\n    {key: eSharedAccess.Registered, name: 'Registered', description: 'Shared data can be accessed any registered user.'},\n    {key: eSharedAccess.Reader, name: 'Reader', description: 'Shared data can be accessed only by users with \"PublishReader\" permission.'},\n   ]\n   \n   export enum eSharedObjectType {\n    Connection = 1,\n    Table = 2,\n    FileFormat = 3,\n    Datalink = 4,\n    Datajob = 5,\n    RemoteAgent = 6,\n    ColumnValidation = 7,\n    HubVariable = 8,\n    CustomFunction = 9,\n    DatalinkTest = 10,\n    View = 11,\n    Api = 12,\n    Dashboard = 13,\n    ListOfValues = 14,\n    Tags = 15,\n    TagObjects = 16,\n   }\n   \n   export const eSharedObjectTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eSharedObjectType.Connection, name: 'Connection'},\n    {key: eSharedObjectType.Table, name: 'Table'},\n    {key: eSharedObjectType.FileFormat, name: 'FileFormat'},\n    {key: eSharedObjectType.Datalink, name: 'Datalink'},\n    {key: eSharedObjectType.Datajob, name: 'Datajob'},\n    {key: eSharedObjectType.RemoteAgent, name: 'RemoteAgent'},\n    {key: eSharedObjectType.ColumnValidation, name: 'ColumnValidation'},\n    {key: eSharedObjectType.HubVariable, name: 'HubVariable'},\n    {key: eSharedObjectType.CustomFunction, name: 'CustomFunction'},\n    {key: eSharedObjectType.DatalinkTest, name: 'DatalinkTest'},\n    {key: eSharedObjectType.View, name: 'View'},\n    {key: eSharedObjectType.Api, name: 'Api'},\n    {key: eSharedObjectType.Dashboard, name: 'Dashboard'},\n    {key: eSharedObjectType.ListOfValues, name: 'ListOfValues'},\n    {key: eSharedObjectType.Tags, name: 'Tags'},\n    {key: eSharedObjectType.TagObjects, name: 'TagObjects'},\n   ]\n   \n   export enum eSortDirection {\n    Ascending = 1,\n    Descending = 2,\n   }\n   \n   export const eSortDirectionItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eSortDirection.Ascending, name: 'Ascending'},\n    {key: eSortDirection.Descending, name: 'Descending'},\n   ]\n   \n   export enum eSourceType {\n    Datalink = 1,\n    Table = 2,\n    Rows = 3,\n    Function = 4,\n   }\n   \n   export const eSourceTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eSourceType.Datalink, name: 'Datalink'},\n    {key: eSourceType.Table, name: 'Table'},\n    {key: eSourceType.Rows, name: 'Rows'},\n    {key: eSourceType.Function, name: 'Function'},\n   ]\n   \n   export enum eStatus {\n    None = 1,\n    Ready = 2,\n    Imported = 3,\n    Updated = 4,\n    Added = 5,\n    Error = 6,\n   }\n   \n   export const eStatusItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eStatus.None, name: 'None'},\n    {key: eStatus.Ready, name: 'Ready'},\n    {key: eStatus.Imported, name: 'Imported'},\n    {key: eStatus.Updated, name: 'Updated'},\n    {key: eStatus.Added, name: 'Added'},\n    {key: eStatus.Error, name: 'Error'},\n   ]\n   \n   export enum eTableType {\n    Table = 1,\n    View = 2,\n    Query = 3,\n   }\n   \n   export const eTableTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eTableType.Table, name: 'Table'},\n    {key: eTableType.View, name: 'View'},\n    {key: eTableType.Query, name: 'Query'},\n   ]\n   \n   export enum eTestTableAction {\n    None = 1,\n    Truncate = 2,\n    DropCreate = 3,\n    TruncateCopy = 4,\n    DropCreateCopy = 5,\n   }\n   \n   export const eTestTableActionItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eTestTableAction.None, name: 'None'},\n    {key: eTestTableAction.Truncate, name: 'Truncate'},\n    {key: eTestTableAction.DropCreate, name: 'DropCreate'},\n    {key: eTestTableAction.TruncateCopy, name: 'TruncateCopy'},\n    {key: eTestTableAction.DropCreateCopy, name: 'DropCreateCopy'},\n   ]\n   \n   export enum eTransformItemType {\n    BuiltInFunction = 1,\n    CustomFunction = 2,\n    ColumnPair = 3,\n    JoinPair = 4,\n    Sort = 5,\n    Column = 6,\n    FilterPair = 7,\n    AggregatePair = 8,\n    Series = 9,\n    JoinNode = 10,\n    GroupNode = 11,\n    Node = 12,\n    UnGroup = 13,\n   }\n   \n   export const eTransformItemTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eTransformItemType.BuiltInFunction, name: 'BuiltInFunction'},\n    {key: eTransformItemType.CustomFunction, name: 'CustomFunction'},\n    {key: eTransformItemType.ColumnPair, name: 'ColumnPair'},\n    {key: eTransformItemType.JoinPair, name: 'JoinPair'},\n    {key: eTransformItemType.Sort, name: 'Sort'},\n    {key: eTransformItemType.Column, name: 'Column'},\n    {key: eTransformItemType.FilterPair, name: 'FilterPair'},\n    {key: eTransformItemType.AggregatePair, name: 'AggregatePair'},\n    {key: eTransformItemType.Series, name: 'Series'},\n    {key: eTransformItemType.JoinNode, name: 'JoinNode'},\n    {key: eTransformItemType.GroupNode, name: 'GroupNode'},\n    {key: eTransformItemType.Node, name: 'Node'},\n    {key: eTransformItemType.UnGroup, name: 'UnGroup'},\n   ]\n   \n   export enum eTransformType {\n    Mapping = 1,\n    Filter = 2,\n    Sort = 3,\n    Group = 4,\n    Aggregate = 5,\n    Series = 6,\n    Join = 7,\n    Rows = 8,\n    Lookup = 9,\n    Validation = 10,\n    Delta = 11,\n    Concatenate = 12,\n    Profile = 13,\n    Internal = 14,\n   }\n   \n   export const eTransformTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eTransformType.Mapping, name: 'Mapping'},\n    {key: eTransformType.Filter, name: 'Filter'},\n    {key: eTransformType.Sort, name: 'Sort'},\n    {key: eTransformType.Group, name: 'Group'},\n    {key: eTransformType.Aggregate, name: 'Aggregate'},\n    {key: eTransformType.Series, name: 'Series'},\n    {key: eTransformType.Join, name: 'Join'},\n    {key: eTransformType.Rows, name: 'Rows'},\n    {key: eTransformType.Lookup, name: 'Lookup'},\n    {key: eTransformType.Validation, name: 'Validation'},\n    {key: eTransformType.Delta, name: 'Delta'},\n    {key: eTransformType.Concatenate, name: 'Concatenate'},\n    {key: eTransformType.Profile, name: 'Profile'},\n    {key: eTransformType.Internal, name: 'Internal'},\n   ]\n   \n   export enum eTransformWriterMethod {\n    Bulk = 1,\n    Transaction = 2,\n   }\n   \n   export const eTransformWriterMethodItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eTransformWriterMethod.Bulk, name: 'Bulk'},\n    {key: eTransformWriterMethod.Transaction, name: 'Transaction'},\n   ]\n   \n   export enum eTriggerMethod {\n    NotTriggered = 1,\n    Manual = 2,\n    Schedule = 3,\n    FileWatcher = 4,\n    External = 5,\n    Datajob = 6,\n   }\n   \n   export const eTriggerMethodItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eTriggerMethod.NotTriggered, name: 'NotTriggered'},\n    {key: eTriggerMethod.Manual, name: 'Manual'},\n    {key: eTriggerMethod.Schedule, name: 'Schedule'},\n    {key: eTriggerMethod.FileWatcher, name: 'FileWatcher'},\n    {key: eTriggerMethod.External, name: 'External'},\n    {key: eTriggerMethod.Datajob, name: 'Datajob'},\n   ]\n   \n   export enum eTypeCode {\n    Unknown = 0,\n    Binary = 1,\n    Byte = 2,\n    Char = 3,\n    SByte = 4,\n    UInt16 = 5,\n    UInt32 = 6,\n    UInt64 = 7,\n    Int16 = 8,\n    Int32 = 9,\n    Int64 = 10,\n    Decimal = 11,\n    Double = 12,\n    Single = 13,\n    String = 14,\n    Text = 15,\n    Boolean = 16,\n    DateTime = 17,\n    Time = 18,\n    Guid = 19,\n    Json = 20,\n    Xml = 21,\n    Enum = 22,\n    CharArray = 23,\n    Object = 24,\n    Node = 25,\n    Geometry = 26,\n    Date = 27,\n   }\n   \n   export const eTypeCodeItems = [\n    {key: eTypeCode.Unknown, name: 'Unknown'},\n    {key: eTypeCode.Binary, name: 'Binary'},\n    {key: eTypeCode.Byte, name: 'Byte'},\n    {key: eTypeCode.Char, name: 'Char'},\n    {key: eTypeCode.SByte, name: 'SByte'},\n    {key: eTypeCode.UInt16, name: 'UInt16'},\n    {key: eTypeCode.UInt32, name: 'UInt32'},\n    {key: eTypeCode.UInt64, name: 'UInt64'},\n    {key: eTypeCode.Int16, name: 'Int16'},\n    {key: eTypeCode.Int32, name: 'Int32'},\n    {key: eTypeCode.Int64, name: 'Int64'},\n    {key: eTypeCode.Decimal, name: 'Decimal'},\n    {key: eTypeCode.Double, name: 'Double'},\n    {key: eTypeCode.Single, name: 'Single'},\n    {key: eTypeCode.String, name: 'String'},\n    {key: eTypeCode.Text, name: 'Text'},\n    {key: eTypeCode.Boolean, name: 'Boolean'},\n    {key: eTypeCode.DateTime, name: 'DateTime'},\n    {key: eTypeCode.Time, name: 'Time'},\n    {key: eTypeCode.Guid, name: 'Guid'},\n    {key: eTypeCode.Json, name: 'Json'},\n    {key: eTypeCode.Xml, name: 'Xml'},\n    {key: eTypeCode.Enum, name: 'Enum'},\n    {key: eTypeCode.CharArray, name: 'CharArray'},\n    {key: eTypeCode.Object, name: 'Object'},\n    {key: eTypeCode.Node, name: 'Node'},\n    {key: eTypeCode.Geometry, name: 'Geometry'},\n    {key: eTypeCode.Date, name: 'Date'},\n   ]\n   \n   export enum eUpdateStrategy {\n    Reload = 1,\n    Append = 2,\n    AppendUpdate = 3,\n    AppendUpdateDelete = 4,\n    AppendUpdatePreserve = 5,\n    AppendUpdateDeletePreserve = 6,\n   }\n   \n   export const eUpdateStrategyItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eUpdateStrategy.Reload, name: 'Reload'},\n    {key: eUpdateStrategy.Append, name: 'Append'},\n    {key: eUpdateStrategy.AppendUpdate, name: 'AppendUpdate'},\n    {key: eUpdateStrategy.AppendUpdateDelete, name: 'AppendUpdateDelete'},\n    {key: eUpdateStrategy.AppendUpdatePreserve, name: 'AppendUpdatePreserve'},\n    {key: eUpdateStrategy.AppendUpdateDeletePreserve, name: 'AppendUpdateDeletePreserve'},\n   ]\n   \n   export enum eViewType {\n    Table = 1,\n    Chart = 2,\n   }\n   \n   export const eViewTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eViewType.Table, name: 'Table'},\n    {key: eViewType.Chart, name: 'Chart'},\n   ]\n   \n   export enum eWeekOfMonth {\n    First = 1,\n    Second = 2,\n    Third = 3,\n    Fourth = 4,\n    Last = 5,\n   }\n   \n   export const eWeekOfMonthItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eWeekOfMonth.First, name: 'First'},\n    {key: eWeekOfMonth.Second, name: 'Second'},\n    {key: eWeekOfMonth.Third, name: 'Third'},\n    {key: eWeekOfMonth.Fourth, name: 'Fourth'},\n    {key: eWeekOfMonth.Last, name: 'Last'},\n   ]\n   \n   export enum logLevel {\n    Trace = 0,\n    Debug = 1,\n    Information = 2,\n    Warning = 3,\n    Error = 4,\n    Critical = 5,\n    None = 6,\n   }\n   \n   export const logLevelItems = [\n    {key: logLevel.Trace, name: 'Trace'},\n    {key: logLevel.Debug, name: 'Debug'},\n    {key: logLevel.Information, name: 'Information'},\n    {key: logLevel.Warning, name: 'Warning'},\n    {key: logLevel.Error, name: 'Error'},\n    {key: logLevel.Critical, name: 'Critical'},\n    {key: logLevel.None, name: 'None'},\n   ]\n   \n   ","import { NgModule, ModuleWithProviders} from '@angular/core';\nimport { CommonModule} from '@angular/common';\nimport { FormsModule} from '@angular/forms';\nimport { RouterModule} from '@angular/router';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\nimport { LayoutService} from './layout/layout.service';\nimport { UtilsModule} from './utils/utils.module';\nimport { DexihTableModule} from 'dexih-ngx-table';\nimport { DexihMessageModule } from './ui/dexihMessage';\nimport { DexihFormControlsModule } from './ui/dexihFormControls';\nimport { DexihComponentsModule } from 'dexih-ngx-components';\nimport { DexihHelpModule } from './help/dexih-help.module';\nimport { NgxMdModule } from 'ngx-md';\nimport { DexihIconsModule } from './ui/icons'\nimport { QueryBuilderModule } from './ui/queryBuilder/query-builder.module';\nimport { ChartBuilderModule } from './ui/charts/charts.module';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { GridsterModule} from 'angular-gridster2';\nimport { DexihSupportOptionsModule } from './ui/supportOptions/support-options.module'\nimport { SharedDataModule} from './ui/sharedData/shared-data.module';\nimport { SeriesAnimateModule } from './ui/seriesAnimate/series-animate.module';\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, RouterModule, HttpClientModule,\n\n    DragDropModule,\n\n    BsDropdownModule.forRoot(),\n    ModalModule.forRoot(),\n    NgxMdModule.forRoot(),\n\n    DexihTableModule,\n    DexihMessageModule,\n    DexihFormControlsModule,\n    DexihComponentsModule,\n    DexihHelpModule,\n    DexihIconsModule,\n    QueryBuilderModule,\n    ChartBuilderModule,\n    NgxChartsModule,\n    GridsterModule,\n    DexihSupportOptionsModule,\n    SharedDataModule,\n    SeriesAnimateModule\n  ],\n  declarations: [\n  ],\n  exports: [\n    CommonModule, FormsModule, RouterModule, DragDropModule,\n\n    BsDropdownModule,\n    UtilsModule,\n    NgxMdModule,\n\n    DexihTableModule,\n    DexihMessageModule,\n    DexihFormControlsModule,\n    DexihComponentsModule,\n    DexihHelpModule,\n    DexihIconsModule,\n    QueryBuilderModule,\n    ChartBuilderModule,\n    NgxChartsModule,\n    GridsterModule,\n    DexihSupportOptionsModule,\n    SeriesAnimateModule\n  ],\n  providers: [\n    LayoutService,\n    HttpClientModule\n  ]\n\n})\nexport class SharedModule {\n\n  static forRoot(): ModuleWithProviders<SharedModule> {\n    return {\n      ngModule: SharedModule,\n      providers: [\n        LayoutService\n      ]\n    };\n  }\n}\n","// Generate more colorsets at https://medialab.github.io/iwanthue/\n\nexport let colorSets = [\n    {\n        name: 'bright',\n        selectable: true,\n        group: 'Ordinal',\n        domain: [\n            '#00d352',\n            '#c300dc',\n            '#00bd00',\n            '#000371',\n            '#56ff75',\n            '#e944c1',\n            '#67c436',\n            '#005fd8',\n            '#c2cc33',\n            '#548eff',\n            '#da9d00',\n            '#0093ff',\n            '#ff871a',\n            '#16c1ff',\n            '#b80006',\n            '#00eea2',\n            '#ff6bba',\n            '#23b54f',\n            '#95003e',\n            '#58f7ba',\n            '#330328',\n            '#ffc649',\n            '#002f5f',\n            '#459c3a',\n            '#9375c3',\n            '#004e00',\n            '#6d1c4d',\n            '#7aa84b',\n            '#0097d6',\n            '#905e00',\n            '#00aed4',\n            '#415e00',\n            '#008aa0',\n            '#464500',\n            '#00af8b',\n            '#003400',\n            '#796d39',\n            '#00724f',\n            '#003500',\n            '#003700'\n        ]\n    },\n    {\n        name: 'pastel',\n        selectable: true,\n        group: 'Ordinal',\n        domain: ['#7cd7d5',\n            '#ecabb7',\n            '#5ecee9',\n            '#eab494',\n            '#98c2ec',\n            '#b5d08d',\n            '#e1b0dd',\n            '#9ab474',\n            '#bcb8ec',\n            '#c6eeb6',\n            '#80b6aa',\n            '#ece6af',\n            '#9bd1c6',\n            '#adaf74',\n            '#acefd7',\n            '#d3c195',\n            '#92ca9c',\n            '#c2c387',\n            '#98c3a6',\n            '#c2cba1']\n    },\n    {\n        name: 'dark',\n        selectable: true,\n        group: 'Ordinal',\n        domain:\n            ['#361a31',\n                '#2d562b',\n                '#5f345c',\n                '#1b3516',\n                '#393c6b',\n                '#4f4b23',\n                '#405167',\n                '#704125',\n                '#192f3e',\n                '#6b2f38',\n                '#2d564d',\n                '#4f2f2a',\n                '#091f1b',\n                '#51503f',\n                '#091f1b',\n                '#332412',\n                '#091f1b',\n                '#273421',\n                '#1e3430',\n                '#131f0b']\n    },\n    {\n        name: 'fluorescent',\n        selectable: true,\n        group: 'Ordinal',\n        domain:\n            ['#97eb43',\n                '#ed7781',\n                '#4dd747',\n                '#ee7d45',\n                '#59e388',\n                '#dc9e51',\n                '#65e9c1',\n                '#e5c434',\n                '#43b78b',\n                '#dbed3b',\n                '#7db986',\n                '#77b624',\n                '#e2de80',\n                '#56b569',\n                '#b2a446',\n                '#ade872',\n                '#8daf63',\n                '#b1c43c',\n                '#b6e89e',\n                '#6bb44a']\n    },\n    {\n        name: 'roses',\n        selectable: true,\n        group: 'Ordinal',\n        domain:\n            ['#9e7681',\n                '#d339b7',\n                '#e6bbcd',\n                '#bb297b',\n                '#845865',\n                '#e954af',\n                '#8b6582',\n                '#e73d74',\n                '#c691b1',\n                '#b82f51',\n                '#e288cb',\n                '#904251',\n                '#ee84b0',\n                '#8d476f',\n                '#de8e9b',\n                '#af5090',\n                '#a96370',\n                '#9d3862',\n                '#b56993',\n                '#cf637e']\n    },\n    {\n        name: 'ocean',\n        selectable: true,\n        group: 'Ordinal',\n        domain:\n            ['#6d9fde',\n                '#274c56',\n                '#427ee2',\n                '#274c56',\n                '#576eb0',\n                '#43a8ba',\n                '#3a4e86',\n                '#2b777f',\n                '#2e6ea9',\n                '#274c56',\n                '#84a2b8',\n                '#154975',\n                '#5e7d94',\n                '#3e4756',\n                '#4283b0',\n                '#555f6e',\n                '#2e5b88',\n                '#3f646e',\n                '#3c5472',\n                '#1c5872']\n    },\n    {\n        name: 'fire',\n        selectable: true,\n        group: 'Ordinal',\n        domain:\n            ['#983151',\n                '#e27e8e',\n                '#dd3e66',\n                '#ac595b',\n                '#a3302b',\n                '#7d3f36',\n                '#de4f37',\n                '#e38a6b',\n                '#c15f2a',\n                '#ab7254',\n                '#84421c',\n                '#e38d30',\n                '#a66f2b',\n                '#755121',\n                '#e5b782',\n                '#b19359',\n                '#b7902e',\n                '#e5b946',\n                '#7c671a',\n                '#6d5d2c']\n    },\n    {\n        name: 'green',\n        selectable: true,\n        group: 'Ordinal',\n        domain:\n            ['#415a1f',\n                '#6c8548',\n                '#669a36',\n                '#97ce64',\n                '#66be3b',\n                '#326e20',\n                '#3c5a31',\n                '#66865a',\n                '#98c38a',\n                '#599954',\n                '#34983a',\n                '#245b28',\n                '#51d672',\n                '#5fcb87',\n                '#3d8d5f',\n                '#27755d',\n                '#57d9b6',\n                '#50ae94',\n                '#63dad7',\n                '#42afc1']\n    },\n    {\n        name: 'nightshade',\n        selectable: true,\n        group: 'Ordinal',\n        domain:\n            ['#23337c',\n                '#121331',\n                '#433d9f',\n                '#33285d',\n                '#4838c0',\n                '#150e3f',\n                '#574e6a',\n                '#2d206f',\n                '#342c46',\n                '#594588',\n                '#15064d',\n                '#3d1584',\n                '#771fba',\n                '#1d1224',\n                '#220c31',\n                '#3f264e',\n                '#46155c',\n                '#782d89',\n                '#673d6c',\n                '#401142']\n    },\n    {\n        name: 'vibrant',\n        selectable: true,\n        group: 'Ordinal',\n        domain:\n        ['#7ad78b',\n        '#763ecb',\n        '#70d64c',\n        '#d345c5',\n        '#c9d642',\n        '#686fd7',\n        '#d59c33',\n        '#4d468c',\n        '#cec87a',\n        '#8b3476',\n        '#4d8039',\n        '#c87dd1',\n        '#59caba',\n        '#d84930',\n        '#709bd6',\n        '#ce7c54',\n        '#d94475',\n        '#7b6729',\n        '#d483a4',\n        '#8c3636']\n    },\n];\n","import { eChartType } from '../../shared.models';\n\nexport enum eInputFormat {\n    SingleSeries,\n    MultiSeries,\n    ComboSeries,\n    InverseSeries,\n    Xy,\n    XyMinMax,\n    XyBubble,\n    GeoCoordinates\n}\n\nexport const inputFormats = [\n{key: eInputFormat.SingleSeries, allowLabel: true, maxSeries: 1, allowYSeries: false,\n    allowMinMax: false, allowBubble: false, inverse: false },\n{key: eInputFormat.MultiSeries, allowLabel: true, maxSeries: 10, allowYSeries: false,\n    allowMinMax: false, allowBubble: false, inverse: false },\n{key: eInputFormat.ComboSeries, allowLabel: true, maxSeries: 10, allowYSeries: false,\n    allowMinMax: false, allowBubble: false, inverse: false },\n{key: eInputFormat.InverseSeries, allowLabel: true, maxSeries: 10, allowYSeries: false,\n    allowMinMax: false, allowBubble: false, inverse: true },\n{key: eInputFormat.Xy, allowLabel: false, maxSeries: 1, allowYSeries: true,\n    allowMinMax: false, allowBubble: false, inverse: false },\n{key: eInputFormat.XyMinMax, allowLabel: false, maxSeries: 1, allowYSeries: true,\n    allowMinMax: true, allowBubble: false, inverse: false },\n{key: eInputFormat.XyBubble, allowLabel: false, maxSeries: 1, allowYSeries: true,\n    allowMinMax: false, allowBubble: true, inverse: false },\n]\n\nexport const ChartTypes = [\n    {\n        name: 'Bar Charts',\n        charts: [\n            {\n                key: eChartType.BarVertical, name: 'Vertical Bar Chart',\n                inputFormat: eInputFormat.SingleSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: true,\n                allowYScaleMax: true,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: true\n            },\n            {\n                key: eChartType.BarHorizontal, name: 'Horizontal Bar Chart',\n                inputFormat: eInputFormat.SingleSeries,\n                isHorizontal: true,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: true,\n                allowXScaleMax: true,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: true\n            },\n            {\n                key: eChartType.BarVertical2D, name: 'Vertical Bar Chart (MultiSeries)',\n                inputFormat: eInputFormat.MultiSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: false,\n                allowYScaleMax: true,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: true\n            },\n            {\n                key: eChartType.BarHorizontal2D, name: 'Horizontal Bar Chart (MultiSeries)',\n                inputFormat: eInputFormat.MultiSeries,\n                isHorizontal: true,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: false,\n                allowXScaleMax: true,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: true\n            },\n            {\n                key: eChartType.BarVerticalStacked, name: 'Vertical Stacked Bar Chart',\n                inputFormat: eInputFormat.MultiSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: false,\n                allowYScaleMax: true,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: true\n            },\n            {\n                key: eChartType.BarHorizontalStacked, name: 'Horizontal Stacked Bar Chart',\n                inputFormat: eInputFormat.MultiSeries,\n                isHorizontal: true,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: false,\n                allowXScaleMax: true,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: true\n            },\n            {\n                key: eChartType.BarVerticalNormalized, name: 'Vertical Normalized Bar Chart',\n                inputFormat: eInputFormat.MultiSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: true\n            },\n            {\n                key: eChartType.BarHorizontalNormalized, name: 'Horizontal Normalized Bar Chart',\n                inputFormat: eInputFormat.MultiSeries,\n                isHorizontal: true,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: true\n            },\n        ]\n    },\n    {\n        name: 'Pie Charts',\n        charts: [\n            {\n                key: eChartType.Pie, name: 'Pie Chart',\n                inputFormat: eInputFormat.SingleSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: false,\n                allowYAxis: false,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: true,\n                allowExplodeSlices: true,\n                allowDoughnut: true,\n                allowGridLines: false,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: false\n            },\n            {\n                key: eChartType.PieAdvanced, name: 'Pie Chart (Advanced)',\n                inputFormat: eInputFormat.SingleSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: false,\n                allowXAxis: false,\n                allowYAxis: false,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: false,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: false\n            },\n            {\n                key: eChartType.PieGrid, name: 'Pie Chart (Grid)',\n                inputFormat: eInputFormat.SingleSeries,\n                isHorizontal: false,\n                allowGradient: false,\n                allowLegend: false,\n                allowXAxis: false,\n                allowYAxis: false,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: false,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: false\n            },\n        ]\n    },\n    {\n        name: 'Line/Area Charts',\n        charts: [\n            {\n                key: eChartType.Line, name: 'Line Chart',\n                inputFormat: eInputFormat.InverseSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: true,\n                allowYScaleMax: true,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: false\n            },\n            {\n                key: eChartType.Area, name: 'Area Chart',\n                inputFormat: eInputFormat.InverseSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: true,\n                allowYScaleMax: true,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: false\n            },\n            {\n                key: eChartType.Polar, name: 'Polar Chart',\n                inputFormat: eInputFormat.InverseSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: false\n            },\n            {\n                key: eChartType.AreaStacked, name: 'Area Stacked Chart',\n                inputFormat: eInputFormat.InverseSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: true,\n                allowXScaleMax: true,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: false\n            },\n            {\n                key: eChartType.AreaNormalized, name: 'Area Normalized Chart',\n                inputFormat: eInputFormat.InverseSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: false\n            },\n        ]\n    },\n    {\n        name: 'X-Y Charts',\n        charts: [\n            {\n                key: eChartType.Scatter, name: 'X-Y Scatter Chart',\n                inputFormat: eInputFormat.Xy,\n                isHorizontal: false,\n                allowGradient: false,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: true,\n                allowXScaleMax: true,\n                allowYScaleMin: true,\n                allowYScaleMax: true,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: false\n            },\n            {\n                key: eChartType.Error, name: 'X-Y Error Chart',\n                inputFormat: eInputFormat.XyMinMax,\n                isHorizontal: false,\n                allowGradient: false,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: true,\n                allowXScaleMax: true,\n                allowYScaleMin: true,\n                allowYScaleMax: true,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: false\n            },\n            {\n                key: eChartType.Bubble, name: 'X-Y Bubble Chart',\n                inputFormat: eInputFormat.XyBubble,\n                isHorizontal: false,\n                allowGradient: false,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: true,\n                allowXScaleMax: true,\n                allowYScaleMin: true,\n                allowYScaleMax: true,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: false\n            },\n        ]\n    },\n    {\n        name: 'Other Charts',\n        charts: [\n            {\n                key: eChartType.BarLineCombo, name: 'Bar/Line Combo Chart',\n                inputFormat: eInputFormat.ComboSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: true\n            },\n            {\n                key: eChartType.HeatMap, name: 'Heat Map',\n                inputFormat: eInputFormat.MultiSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: true,\n                allowXScaleMax: true,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: false,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: false,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'flame',\n                defaultShowLegend: true,\n                isBar: false\n            },\n            {\n                key: eChartType.TreeMap, name: 'Tree Map',\n                inputFormat: eInputFormat.SingleSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: false,\n                allowXAxis: false,\n                allowYAxis: false,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: false\n            },\n            {\n                key: eChartType.Cards, name: 'Number Cards',\n                inputFormat: eInputFormat.SingleSeries,\n                isHorizontal: false,\n                allowGradient: false,\n                allowLegend: false,\n                allowXAxis: false,\n                allowYAxis: false,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: false,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: false\n            },\n            {\n                key: eChartType.Gauge, name: 'Gauge',\n                inputFormat: eInputFormat.SingleSeries,\n                isHorizontal: false,\n                allowGradient: false,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: false,\n                allowXScaleMin: true,\n                allowXScaleMax: true,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: false,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: true,\n                isBar: false\n            },\n            {\n                key: eChartType.LinearGauge, name: 'Linear Gauge',\n                inputFormat: eInputFormat.SingleSeries,\n                isHorizontal: false,\n                allowGradient: false,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: false,\n                allowXScaleMin: true,\n                allowXScaleMax: true,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: false,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: true,\n                isBar: false\n            },\n            {\n                key: eChartType.Map, name: 'Google Map',\n                inputFormat: eInputFormat.GeoCoordinates,\n                isHorizontal: false,\n                allowGradient: false,\n                allowLegend: false,\n                allowXAxis: false,\n                allowYAxis: false,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: false,\n                defaultShowXAxisLabel: false,\n                defaultShowYAxisLabel: false,\n                defaultShowXAxis: false,\n                defaultShowYAxis: false,\n                defaultShowGridLines: false,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: false\n            },\n\n        ]\n    }\n]\n","import { Component, OnInit, Input, OnChanges, EventEmitter, Output, ContentChild } from '@angular/core';\nimport { ChartTypes, eInputFormat } from '../chart-groups';\nimport { colorSets } from '../chart-colors';\nimport * as html2canvas from 'html2canvas';\nimport { Subject } from 'rxjs';\nimport { ChartConfig, eChartType } from '../../../shared.models';\n\n@Component({\n    selector: 'chart-builder',\n    templateUrl: 'chart-builder.component.html'\n})\n\nexport class ChartBuilderComponent implements OnInit, OnChanges {\n    @Input() title = '';\n    @Input() config: ChartConfig;\n    @Input() columns: any[];\n    @Input() data: Array<any>;\n    @Input() showEdit = true;\n    @Output() hasChanged = new EventEmitter();\n\n    // public labelColumnIndex: any = null;\n    // public seriesColumnIndex: any = null;\n    // public seriesColumnsIndex = [];\n    // public xColumnIndex: any = null;\n    // public yColumnIndex: any = null;\n    // public minColumnIndex: any = null;\n    // public maxColumnIndex: any = null;\n    // public radiusColumnIndex: any = null;\n    // public latitudeColumnIndex: any = null;\n    // public longitudeColumnIndex: any = null;\n\n    eChartType = eChartType;\n    eInputFormat = eInputFormat;\n    chartTypes = ChartTypes;\n\n    results: any[];\n\n    chartType: any;\n    colorSets = colorSets;\n\n    public updateChartSubject: Subject<void> = new Subject<void>();\n\n    constructor() { }\n\n    ngOnInit() {\n        if (!this.config) {\n            this.config = new ChartConfig();\n        }\n    }\n\n    ngOnChanges() {\n        this.chartType = null;\n        if (this.columns) {\n            ChartTypes.forEach(chartGroup => {\n                if (!this.chartType) {\n                    this.chartType = chartGroup.charts.find(c => c.key === this.config.chartType);\n                }\n            });\n        }\n    }\n\n    changeChart() {\n        this.config.showXAxisLabel = this.chartType.defaultShowXAxisLabel;\n        this.config.showYAxisLabel = this.chartType.defaultShowYAxisLabel;\n        this.config.showXAxis = this.chartType.defaultShowXAxis;\n        this.config.showYAxis = this.chartType.defaultShowYAxis;\n        this.config.showGridLines = this.chartType.defaultShowGridLines;\n        this.config.colorScheme = this.chartType.defaultColorScheme;\n        this.config.showLegend = this.chartType.defaultShowLegend;\n        this.hasChanged.emit();\n        this.ngOnChanges();\n    }\n\n    updateChart() {\n        // trigger a change event in the chart\n        // this.config = Object.assign({}, this.config);\n        this.hasChanged.emit();\n        this.updateChartSubject.next();\n        this.ngOnChanges();\n\n    }\n\n    onChanged() {\n        this.hasChanged.emit();\n    }\n\n    export() {\n        const chart = document.getElementById('chart');\n        if (chart == null) {\n            return;\n        }\n\n        let svgElem = chart.getElementsByTagName('svg');\n        for (const node of Array.from(svgElem)) {\n            node.setAttribute('font-family', window.getComputedStyle(node, null).getPropertyValue('font-family'));\n            node.replaceWith(node);\n        }\n\n        html2canvas.default(chart, <html2canvas.Options> {\n            height: chart.clientHeight,\n            width: chart.clientWidth,\n            scale: 3,\n            // backgroundColor: null,\n            logging: false,\n            // onclone: (document) => {\n            //     document.getElementById('chart').style.visibility = 'visible';\n            // }\n        }).then((canvas) => {\n            // // Get chart data so we can append to the pdf\n            // const chartData = canvas.toDataURL();\n            // // Prepare pdf structure\n            // const docDefinition = {\n            //     content: [],\n            //     styles: {\n            //         subheader: {\n            //             fontSize: 16,\n            //             bold: true,\n            //             margin: [0, 10, 0, 5],\n            //             alignment: 'left'\n            //         },\n            //         subsubheader: {\n            //             fontSize: 12,\n            //             italics: true,\n            //             margin: [0, 10, 0, 25],\n            //             alignment: 'left'\n            //         }\n            //     },\n            //     defaultStyle: {\n            //         // alignment: 'justify'\n            //     }\n            // };\n\n            canvas.toBlob((blob) => {\n                saveAs(blob, 'chart.png');\n            }, 'image/png');\n        });\n    }\n}\n","<dexih-widget-section *ngIf=\"columns && showEdit\" title=\"Chart Properties\" [showExpandButton]=\"true\">\n    <div class=\"d-flex flex-wrap\">\n        <div class=\"flex-fill\">\n            <form-select [(ngModel)]=\"config.chartType\" (ngModelChange)=\"updateChart($event)\" labelLeft=\"Chart\"\n                [items]=\"chartTypes\" parentName='name' childItems='charts' itemKey='key' itemName='name'>\n            </form-select>\n        </div>\n\n        <div class=\"flex-fill pl-1\">\n            <form-select [(ngModel)]=\"config.colorScheme\" (ngModelChange)=\"updateChart($event)\" labelLeft=\"Color\" [items]=\"colorSets\" itemName='name'\n                itemKey='name'>\n            </form-select>\n        </div>\n\n        <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowGradient\">\n            <form-checkbox label=\"Color Gradient\" [(ngModel)]=\"config.showGradient\" (ngModelChange)=\"onChanged()\"\n                [border]=\"true\"></form-checkbox>\n        </div>\n\n        <div class=\"flex-fill\">\n            <form-select [(ngModel)]=\"config.multiGridColumn\" (ngModelChange)=\"updateChart($event)\" labelLeft=\"Grid Column\"\n                [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n            </form-select>\n        </div>\n    </div>\n\n    <div class=\"d-flex flex-wrap pt-1\"\n        *ngIf=\"chartType.inputFormat === eInputFormat.SingleSeries || chartType.inputFormat === eInputFormat.GeoCoordinates\">\n        <div class=\"flex-fill\">\n            <form-select [(ngModel)]=\"config.labelColumn\" (ngModelChange)=\"updateChart($event)\" labelLeft=\"Labels\"\n                [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n            </form-select>\n        </div>\n\n        <div class=\"flex-fill pl-1\">\n            <form-select [(ngModel)]=\"config.seriesColumn\" (ngModelChange)=\"updateChart($event)\"\n                labelLeft=\"Series Column\" [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n            </form-select>\n        </div>\n    </div>\n\n    <div class=\"d-flex flex-wrap pt-1\" *ngIf=\"chartType.inputFormat === eInputFormat.GeoCoordinates\">\n        <div class=\"flex-fill\">\n            <form-select [(ngModel)]=\"config.latitudeColumn\" (ngModelChange)=\"updateChart($event)\" labelLeft=\"Latitude\"\n                [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n            </form-select>\n        </div>\n\n        <div class=\"flex-fill pl-1\">\n            <form-select [(ngModel)]=\"config.longitudeColumn\" (ngModelChange)=\"updateChart($event)\"\n                labelLeft=\"Longitude\" [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n            </form-select>\n        </div>\n    </div>\n\n    <div class=\"d-flex flex-wrap pt-1\"\n        *ngIf=\"chartType.inputFormat === eInputFormat.MultiSeries || chartType.inputFormat === eInputFormat.InverseSeries\">\n        <div class=\"flex-fill\">\n            <form-select [(ngModel)]=\"config.labelColumn\" (ngModelChange)=\"updateChart($event)\" labelLeft=\"Labels\"\n                [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n            </form-select>\n        </div>\n        <div class=\"flex-fill pl-1\">\n            <form-select [(ngModel)]=\"config.pivotColumn\" (ngModelChange)=\"updateChart($event)\"\n            [allowNullSelect]=\"true\" selectNullMessage=\"(No pivot column)\"\n            labelLeft=\"Series Pivot\" [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n            </form-select>\n        </div>\n        <div class=\"flex-fill pl-1\">\n            <form-tags-dropdown [(ngModel)]=\"config.seriesColumns\" (ngModelChange)=\"updateChart($event)\"\n                labelLeft=\"Series Columns\" [items]=\"columns\" itemKey=\"title\" itemName=\"title\" [enableAddAll]=\"true\">\n            </form-tags-dropdown>\n        </div>\n    </div>\n\n    <div class=\"d-flex flex-wrap pt-1\"\n    *ngIf=\"chartType.inputFormat === eInputFormat.ComboSeries\">\n        <div class=\"flex-fill\">\n            <form-select [(ngModel)]=\"config.labelColumn\" (ngModelChange)=\"updateChart($event)\" labelLeft=\"Labels\"\n                [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n            </form-select>\n        </div>\n        <div class=\"flex-fill pl-1\">\n            <form-select [(ngModel)]=\"config.seriesColumn\" (ngModelChange)=\"updateChart($event)\"\n                labelLeft=\"Bar Column\" [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n            </form-select>\n        </div>\n        <div class=\"flex-fill pl-1\">\n            <form-tags-dropdown [(ngModel)]=\"config.seriesColumns\" (ngModelChange)=\"updateChart($event)\"\n                labelLeft=\"Line Series\" [items]=\"columns\" itemKey=\"title\" itemName=\"title\" [enableAddAll]=\"true\">\n            </form-tags-dropdown>\n        </div>\n        <div class=\"flex-fill pl-1\" >\n            <form-checkbox label=\"Separate x-Axis\" [(ngModel)]=\"config.separateAxis\" (ngModelChange)=\"onChanged()\"\n                [border]=\"true\"></form-checkbox>\n        </div>\n        <div class=\"flex-fill pl-1\" >\n            <form-checkbox label=\"Single Color\" [(ngModel)]=\"config.singleBarColor\" (ngModelChange)=\"updateChart($event)\"\n                [border]=\"true\"></form-checkbox>\n        </div>\n    </div>\n\n    <div class=\"d-flex flex-wrap pt-1\" *ngIf=\" chartType.inputFormat===eInputFormat.Xy || chartType.inputFormat===eInputFormat.XyMinMax\n            || chartType.inputFormat===eInputFormat.XyBubble\">\n        <div class=\"flex-fill\">\n            <form-select [(ngModel)]=\"config.labelColumn\" (ngModelChange)=\"updateChart($event)\" labelLeft=\"Labels\"\n                [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n            </form-select>\n        </div>\n\n        <div class=\"flex-fill pl-1\">\n            <form-select [(ngModel)]=\"config.xColumn\" (ngModelChange)=\"updateChart($event)\" labelLeft=\"X-Column\"\n                [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n            </form-select>\n        </div>\n\n        <div class=\"flex-fill pl-1\">\n            <form-select [(ngModel)]=\"config.yColumn\" (ngModelChange)=\"updateChart($event)\" labelLeft=\"Y-Column\"\n                [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n            </form-select>\n        </div>\n\n        <ng-template [ngIf]=\"chartType.inputFormat === eInputFormat.XyMinMax\">\n            <div class=\"flex-fill pl-1\">\n                <form-select [(ngModel)]=\"config.minColumn\" (ngModelChange)=\"updateChart($event)\"\n                    labelLeft=\"Error Min Column\" [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n                </form-select>\n            </div>\n\n            <div class=\"flex-fill pl-1\">\n                <form-select [(ngModel)]=\"config.maxColumn\" (ngModelChange)=\"updateChart($event)\"\n                    labelLeft=\"Error Max Column\" [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n                </form-select>\n            </div>\n        </ng-template>\n\n        <ng-template [ngIf]=\"chartType.inputFormat === eInputFormat.XyBubble\">\n            <div class=\"flex-fill pl-1\">\n                <form-select [(ngModel)]=\"config.radiusColumn\" (ngModelChange)=\"updateChart($event)\"\n                    labelLeft=\"Bubble Radius\" [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n                </form-select>\n            </div>\n        </ng-template>\n\n    </div>\n\n    <div class=\"d-flex flex-wrap pt-1\">\n        <div class=\"flex-fill \">\n            <div class=\"input-group-text\">\n                Formatting\n            </div>\n        </div>\n\n        <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowLabels\">\n            <form-checkbox label=\"Labels\" [(ngModel)]=\"config.showXAxis\" (ngModelChange)=\"onChanged()\" [border]=\"true\">\n            </form-checkbox>\n        </div>\n        <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowXAxis\">\n            <form-checkbox label=\"X-Axis Title\" [(ngModel)]=\"config.showXAxisLabel\" (ngModelChange)=\"onChanged()\"\n                [border]=\"true\"></form-checkbox>\n        </div>\n        <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowXAxis\">\n            <form-checkbox label=\"X-Axis Labels\" [(ngModel)]=\"config.showXAxis\" (ngModelChange)=\"onChanged()\"\n                [border]=\"true\"></form-checkbox>\n        </div>\n        <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowYAxis\">\n            <form-checkbox label=\"Y-Axis Title\" [(ngModel)]=\"config.showYAxisLabel\" (ngModelChange)=\"onChanged()\"\n                [border]=\"true\"></form-checkbox>\n        </div>\n        <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowYAxis\">\n            <form-checkbox label=\"Y-Axis Labels\" [(ngModel)]=\"config.showYAxis\" (ngModelChange)=\"onChanged()\"\n                [border]=\"true\"></form-checkbox>\n        </div>\n        <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowGridLines\">\n            <form-checkbox label=\"Grid Lines\" [(ngModel)]=\"config.showGridLines\" (ngModelChange)=\"onChanged()\"\n                [border]=\"true\"></form-checkbox>\n        </div>\n        <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowLegend\">\n            <form-checkbox label=\"Legend\" [(ngModel)]=\"config.showLegend\" (ngModelChange)=\"onChanged()\" [border]=\"true\">\n            </form-checkbox>\n        </div>\n        <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowLegend && config.showLegend\">\n            <form-select [(ngModel)]=\"config.legendPosition\" (ngModelChange)=\"onChanged()\" labelLeft=\"Legend Position\"\n                [items]=\"['right', 'below']\">\n            </form-select>\n        </div>\n\n        <ng-template [ngIf]=\"chartType.isBar\">\n            <div class=\"flex-fill pl-1\" >\n                <form-checkbox label=\"Single Color\" [(ngModel)]=\"config.singleBarColor\" (ngModelChange)=\"updateChart($event)\"\n                    [border]=\"true\"></form-checkbox>\n            </div>\n            <div class=\"flex-fill  pl-1\">\n                <form-input type=\"number\" labelLeft=\"Bar Padding\" [(ngModel)]=\"config.barPadding\" (ngModelChange)=\"onChanged()\"></form-input>\n            </div>\n            <div class=\"flex-fill pl-1\" >\n                <form-checkbox label=\"Round Edges\" [(ngModel)]=\"config.roundEdges\" (ngModelChange)=\"updateChart($event)\"\n                    [border]=\"true\"></form-checkbox>\n            </div>\n            <div class=\"flex-fill pl-1\" >\n                <form-checkbox label=\"Data Label\" [(ngModel)]=\"config.showDataLabel\" (ngModelChange)=\"updateChart($event)\"\n                    [border]=\"true\"></form-checkbox>\n            </div>\n        </ng-template>\n\n        <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowExplodeSlices\">\n            <form-checkbox label=\"Explode Slices\" [(ngModel)]=\"config.explodeSlices\" (ngModelChange)=\"onChanged()\"\n                [border]=\"true\"></form-checkbox>\n        </div>\n        <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowDoughnut\">\n            <form-checkbox label=\"Doughnut\" [(ngModel)]=\"config.doughnut\" (ngModelChange)=\"onChanged()\" [border]=\"true\">\n            </form-checkbox>\n        </div>\n    </div>\n\n    <div class=\"d-flex flex-wrap pt-1\"\n        *ngIf=\"chartType.allowYScaleMin || chartType.allowYScaleMax ||chartType.allowXScaleMin ||chartType.allowXScaleMax\">\n        <div class=\"flex-fill \">\n            <div class=\"input-group-text\">\n                Axis Scales\n            </div>\n        </div>\n\n        <div class=\"flex-fill  pl-1\">\n            <form-checkbox label=\"Auto scale\" [(ngModel)]=\"config.autoScale\" (ngModelChange)=\"onChanged()\"\n                [border]=\"true\"></form-checkbox>\n        </div>\n\n        <ng-template [ngIf]=\"!config.autoScale\">\n            <div class=\"flex-fill  pl-1\" *ngIf=\"chartType.allowXScaleMin\">\n                <form-input labelLeft=\"X-Min\" [(ngModel)]=\"config.xScaleMin\" (ngModelChange)=\"onChanged()\"></form-input>\n            </div>\n            <div class=\"flex-fill  pl-1\" *ngIf=\"chartType.allowXScaleMax\">\n                <form-input labelLeft=\"X-Max\" [(ngModel)]=\"config.xScaleMax\" (ngModelChange)=\"onChanged()\"></form-input>\n            </div>\n            <div class=\"flex-fill  pl-1\" *ngIf=\"chartType.allowYScaleMin\">\n                <form-input labelLeft=\"Y-Min\" [(ngModel)]=\"config.yScaleMin\" (ngModelChange)=\"onChanged()\"></form-input>\n            </div>\n            <div class=\"flex-fill  pl-1\" *ngIf=\"chartType.allowYScaleMax\">\n                <form-input labelLeft=\"Y-Max\" [(ngModel)]=\"config.yScaleMax\" (ngModelChange)=\"onChanged()\"></form-input>\n            </div>\n        </ng-template>\n    </div>\n\n</dexih-widget-section>\n\n<dexih-widget-section [title]=\"title\" [showExpandButton]=\"true\" [padding]=\"false\">\n    <ng-template #header>\n        <dexih-button buttonClass=\"btn-sm btn-primary m-1\" iconClass=\"fa fa-download\" (click)=\"export()\" text=\"export\"></dexih-button>\n    </ng-template>\n\n    <chart-view [responsive]=\"false\" #chartView [config]=\"config\" [columns]=\"columns\" [data]=\"data\" [updateChartEvent]=\"updateChartSubject\">\n    </chart-view>\n\n</dexih-widget-section>\n","import { Component, OnInit, Input, OnChanges, OnDestroy, AfterViewInit, SimpleChanges, ViewChild, ElementRef } from '@angular/core';\nimport { eInputFormat, ChartTypes } from '../chart-groups';\nimport { colorSets } from '../chart-colors';\nimport { Subscription, Observable } from 'rxjs';\nimport { ResizedEvent } from 'angular-resize-event';\nimport { ChartConfig, eChartType } from '../../../shared.models';\nimport { Functions } from '../../../utils/functions';\n\n@Component({\n    selector: 'chart-view',\n    templateUrl: 'chart-view.component.html',\n    styleUrls: ['./chart-view.component.scss']\n})\n\nexport class ChartViewComponent implements OnInit, OnDestroy, OnChanges {\n    @Input() config: ChartConfig;\n    @Input() columns: any[];\n    @Input() data: Array<any>;\n    @Input() updateChartEvent: Observable<void>;\n    @Input() responsive = false;\n\n    // @ViewChild('wrapper', { static: true }) public wrapper: ElementRef;\n\n    private _updateChartSubscription: Subscription;\n\n    public gridColumnIndex: any = null;\n    public labelColumnIndex: any = null;\n    public seriesColumnIndex: any = null;\n    public seriesPivotIndex: any = null;\n    public seriesColumnsIndex = [];\n    public xColumnIndex: any = null;\n    public yColumnIndex: any = null;\n    public minColumnIndex: any = null;\n    public maxColumnIndex: any = null;\n    public radiusColumnIndex: any = null;\n    public latitudeColumnIndex: any = null;\n    public longitudeColumnIndex: any = null;\n\n\n    eChartType = eChartType;\n    eInputFormat = eInputFormat;\n    chartTypes = ChartTypes;\n\n    resultArray: any[];\n\n    chartType: any;\n    colorSets = colorSets;\n\n    customColors = [];\n    colorIndex = 0;\n\n    view: any;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n        if (!this.config) {\n            this.config = new ChartConfig();\n        }\n        this.getChartType();\n\n        if (this.updateChartEvent) {\n            this._updateChartSubscription = this.updateChartEvent.subscribe(() => {\n                this.ngOnChanges(null);\n            });\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this._updateChartSubscription) { this._updateChartSubscription.unsubscribe(); }\n    }\n\n    ngOnChanges(simpleChanges: SimpleChanges) {\n        if (this.columns) {\n            this.gridColumnIndex = this.getColumnIndex(this.config.multiGridColumn);\n            this.labelColumnIndex = this.getColumnIndex(this.config.labelColumn);\n            this.seriesColumnIndex = this.getColumnIndex(this.config.seriesColumn);\n            this.seriesPivotIndex = this.getColumnIndex(this.config.pivotColumn);\n            this.xColumnIndex = this.getColumnIndex(this.config.xColumn);\n            this.yColumnIndex = this.getColumnIndex(this.config.yColumn);\n            this.minColumnIndex = this.getColumnIndex(this.config.minColumn);\n            this.maxColumnIndex = this.getColumnIndex(this.config.maxColumn);\n            this.radiusColumnIndex = this.getColumnIndex(this.config.radiusColumn);\n            this.latitudeColumnIndex = this.getColumnIndex(this.config.latitudeColumn);\n            this.longitudeColumnIndex = this.getColumnIndex(this.config.longitudeColumn);\n\n            if (simpleChanges !== null) {\n                let keys = Object.keys(simpleChanges);\n                if (keys.length === 1 && keys[0] === 'data') {\n                    // do nothing\n                } else {\n                    this.customColors = [];\n                }\n            } else {\n                this.customColors = [];\n            }\n\n            if (this.config.seriesColumns) {\n                this.seriesColumnsIndex = new Array(this.config.seriesColumns.length);\n                for (let i = 0; i < this.config.seriesColumns.length; i++) {\n                    let col = this.columns.find(c => c.title === this.config.seriesColumns[i]);\n                    if (col) {\n                        this.seriesColumnsIndex[i] = col;\n                    }\n                }\n            }\n\n            this.getChartType();\n            this.updateChart();\n            // this.view = [this.wrapper.nativeElement.clientWidth, this.wrapper.nativeElement.clientHeight];\n        }\n    }\n\n    trackChartChange(index: number, data: any) {\n        if (data) {\n            return data[index].name;\n        }\n      }\n\n    // onResize() {\n    //     this.createView();\n    // }\n\n    onResized(event) {\n        // legend needs to be padded as ngx-charts not calculating size correctly.\n        // https://github.com/swimlane/ngx-charts/issues/1248\n        if (this.config.showLegend && this.config.legendPosition === 'below') {\n            this.view = [event.newWidth, event.newHeight - 60];\n        } else {\n            this.view = [event.newWidth, event.newHeight];\n        }\n    }\n\n    getChartType() {\n        this.chartType = null;\n        ChartTypes.forEach(chartGroup => {\n            if (!this.chartType) {\n                this.chartType = chartGroup.charts.find(c => c.key === this.config.chartType);\n            }\n        });\n    }\n\n    getColumnTitle(index: number): string {\n        if (index >= 0) {\n            let col = this.columns[index];\n            if (col) {\n                return col.title;\n            }\n        }\n        return null;\n    }\n\n    getColumnIndex(title: string): number {\n        if (title) {\n            let index = this.columns.findIndex(c => c.title === title);\n            return index;\n        }\n        return null;\n    }\n\n    // sets the label to either x-series or y-series depending on whether horizontal/vertical chart.\n    setLabel(label: string) {\n        if (this.chartType.isHorizontal) {\n            this.config.yAxisLabel = label;\n        } else {\n            this.config.xAxisLabel = label;\n        }\n    }\n\n    setSeriesLabel(seriesLabel: string) {\n        if (this.chartType.isHorizontal) {\n            this.config.xAxisLabel = seriesLabel;\n        } else {\n            this.config.yAxisLabel = seriesLabel;\n        }\n    }\n\n    addCustomColor(label: string, changeColor = true) {\n        if ( this.customColors.findIndex(c => c.name === label) < 0) {\n            let colorSet;\n\n            if (this.config.colorScheme) {\n                colorSet = colorSets.find(c => c.name === this.config.colorScheme);\n            }\n            if (!colorSet) {\n                colorSet = colorSets[0];\n            }\n\n            let colors = colorSet.domain;\n\n            if (this.colorIndex >= colors.length) {\n                this.colorIndex = 0;\n            }\n\n            this.customColors.push({name: label, value: colors[this.colorIndex] });\n\n            if (changeColor) {\n                this.colorIndex++;\n            }\n        }\n    }\n\n    updateChart() {\n        if (this.chartType && this.data) {\n\n            this.getChartType();\n\n            if (this.seriesColumnsIndex) {\n                this.config.seriesColumns = new Array(this.seriesColumnsIndex.length);\n                for (let i = 0; i < this.seriesColumnsIndex.length; i++) {\n                    this.config.seriesColumns[i] = this.seriesColumnsIndex[i].title;\n                }\n            }\n\n            if (this.labelColumnIndex !== null) {\n                this.setLabel(this.columns[this.labelColumnIndex].title);\n            }\n\n            let values: Array<any>;\n            let chartItems: Array<any> = [];\n\n            if (this.gridColumnIndex != null && this.gridColumnIndex >= 0) {\n                values = this.gridSeriesValues(this.data);\n            } else {\n                values = [null];\n            }\n\n            let singleColor = this.chartType.isBar && this.config.singleBarColor ? true : false;\n\n\n            for (let value of values) {\n                let chartItem: Array<any>;\n                let data;\n                if (this.gridColumnIndex != null && this.gridColumnIndex >= 0 ) {\n                    data = this.data.filter(c => c[this.gridColumnIndex] === value.value);\n                } else {\n                    data = this.data;\n                }\n\n                switch (this.chartType.inputFormat) {\n                    case eInputFormat.SingleSeries:\n                        chartItem = this.singleSeries(data);\n                        break;\n\n                    case eInputFormat.MultiSeries:\n                        chartItem = this.multiSeries(data);\n                        break;\n\n                    case eInputFormat.InverseSeries:\n                        chartItem = this.inverseSeries(data);\n                        break;\n\n                    case eInputFormat.ComboSeries:\n                        chartItem = this.singleSeries(data);\n                        if (chartItem) {\n                            let yAxisLabel = this.config.yAxisLabel;\n                            chartItem['lineChartSeries'] = this.inverseSeries(data);\n                            this.config.yAxisLabelRight = this.config.yAxisLabel;\n                            this.config.yAxisLabel = yAxisLabel;\n                        }\n                        break;\n                    case eInputFormat.Xy:\n                        if (this.yColumnIndex != null && this.xColumnIndex != null) {\n                            chartItem = new Array(data.length);\n                            for (let i = 0; i < data.length; i++) {\n                                chartItem[i] = {\n                                    name: this.formatValue(data, this.labelColumnIndex, i),\n                                    series: [{\n                                        name: this.formatValue(data, this.labelColumnIndex, i),\n                                        x: this.formatValue(data, this.xColumnIndex, i),\n                                        y: this.formatValue(data, this.yColumnIndex, i),\n                                        r: 10\n                                    }]\n                                };\n                            }\n                            this.config.yAxisLabel = this.columns[this.yColumnIndex].title;\n                            this.config.xAxisLabel = this.columns[this.xColumnIndex].title;\n                        }\n                        break;\n\n                    case eInputFormat.XyMinMax:\n                        if (this.yColumnIndex != null && this.xColumnIndex != null) {\n                            chartItem = new Array(data.length);\n                            for (let i = 0; i < data.length; i++) {\n                                chartItem[i] = {\n                                    name: this.formatValue(data, this.labelColumnIndex, i),\n                                    series: [{\n                                        name: this.formatValue(data, this.labelColumnIndex, i),\n                                        x: this.formatValue(data, this.xColumnIndex, i),\n                                        y: this.formatValue(data, this.yColumnIndex, i),\n                                        min: this.formatValue(data, this.minColumnIndex, i),\n                                        max: this.formatValue(data, this.maxColumnIndex, i)\n                                    }]\n                                };\n                            }\n                            this.config.yAxisLabel = this.columns[this.yColumnIndex].title;\n                            this.config.xAxisLabel = this.columns[this.xColumnIndex].title;\n                        }\n                        break;\n\n\n                    case eInputFormat.XyBubble:\n                        if (this.yColumnIndex != null && this.xColumnIndex != null) {\n\n                            chartItem = new Array(data.length);\n                            for (let i = 0; i < data.length; i++) {\n                                chartItem[i] = {\n                                    name: this.formatValue(data, this.labelColumnIndex, i),\n                                    series: [{\n                                        name: this.formatValue(data, this.labelColumnIndex, i),\n                                        x: this.formatValue(data, this.xColumnIndex, i),\n                                        y: this.formatValue(data, this.yColumnIndex, i),\n                                        r: this.formatValue(data, this.radiusColumnIndex, i)\n                                    }]\n                                };\n                            }\n                            this.config.yAxisLabel = this.columns[this.yColumnIndex].title;\n                            this.config.xAxisLabel = this.columns[this.xColumnIndex].title;\n                        }\n                        break;\n\n                    case eInputFormat.GeoCoordinates:\n                        if (this.latitudeColumnIndex != null && this.longitudeColumnIndex != null) {\n                            chartItem = new Array(data.length);\n                            for (let i = 0; i < data.length; i++) {\n                                chartItem[i] = {\n                                    name: this.formatValue(data, this.labelColumnIndex, i),\n                                    value: this.formatValue(data, this.seriesColumnIndex, i),\n                                    latitude: this.formatValue(data, this.latitudeColumnIndex, i),\n                                    longitude: this.formatValue(data, this.longitudeColumnIndex, i),\n                                };\n                            }\n                        }\n                        break;\n                }\n\n                if (chartItem) {\n                    if (value) {\n                        chartItem['name'] = value.name;\n                    }\n                    chartItem.forEach(item => {\n                        this.addCustomColor(item.name, !singleColor);\n                    });\n\n                    if (chartItem['lineChartSeries']) {\n                        if (singleColor) {\n                            this.addCustomColor(this.columns[this.seriesColumnIndex].title, false);\n                            this.colorIndex++;\n                        }\n\n                        chartItem['lineChartSeries'].forEach(item => {\n                            this.addCustomColor(item.name, true);\n                        });\n                    }\n                }\n\n\n                chartItems.push(chartItem);\n            }\n\n            this.resultArray = chartItems;\n\n        }\n\n    }\n\n    gridSeriesValues(data: any[]): any {\n        const format = this.columns[this.gridColumnIndex].format;\n        const values = Array.from(new Set(data.map(c => c[this.gridColumnIndex]))).sort((a, b) => {\n            if (a > b) {\n                return 1;\n            }\n            if (a < b) {\n                return -1;\n            }\n            return 0;\n        });\n        let gridValues = values.map(c => {\n            return {\n                name: Functions.formatValue(c, format),\n                value: c\n            }\n        });\n\n        return gridValues;\n    }\n\n    singleSeries(data): Array<any> {\n        let chartData: Array<any>;\n\n        if (this.labelColumnIndex !== null && this.seriesColumnIndex != null) {\n            chartData = new Array(data.length);\n            for (let i = 0; i < data.length; i++) {\n                chartData[i] = {\n                    name: this.formatValue(data, this.labelColumnIndex, i),\n                    value: this.formatValue(data, this.seriesColumnIndex, i)\n                };\n            }\n            this.setSeriesLabel(this.columns[this.seriesColumnIndex].title);\n        }\n\n        return chartData;\n    }\n\n    multiSeries(data): Array<any> {\n        let chartData: Array<any>;\n\n        if (this.labelColumnIndex != null && this.seriesColumnsIndex.length > 0) {\n            if (this.seriesPivotIndex != null) {\n                let pivotValues: any[] = this.uniqueValues(data, this.seriesPivotIndex);\n                let seriesCount = pivotValues.length * this.seriesColumnsIndex.length;\n                let pivotData = {};\n\n                for (let pivotIndex = 0; pivotIndex < pivotValues.length; pivotIndex++) {\n                    let pivotValue = pivotValues[pivotIndex];\n                    let seriesData = data.filter(c => c[this.seriesPivotIndex] === pivotValue.value);\n\n                    for (let i = 0; i < seriesData.length; i++) {\n\n                        const label = seriesData[i][this.labelColumnIndex];\n                        let row = pivotData[label];\n                        if (!row) {\n                            row = new Array(seriesCount);\n                            pivotData[label] = row;\n                        }\n\n                        for (let j = 0; j < this.seriesColumnsIndex.length; j++) {\n                            if (this.seriesColumnsIndex[j]) {\n                                row[((j + 1) * (pivotIndex + 1)) - 1 ] = {\n                                    name: pivotValue.name + '/' + this.seriesColumnsIndex[j].title,\n                                    value: this.formatValue(seriesData, this.seriesColumnsIndex[j].name, i)\n                                };\n                            }\n                        }\n                    }\n                }\n\n                let labels = Object.keys(pivotData);\n                chartData = new Array(labels.length);\n                let labelColumn = this.columns[this.labelColumnIndex];\n\n                for (let i  = 0; i < labels.length; i++) {\n                    chartData[i] = {\n                        name: Functions.formatValue(labels[i], labelColumn.format),\n                        series: pivotData[labels[i]].filter(c => c)\n                    }\n                }\n\n                this.setSeriesLabel(this.seriesColumnsIndex.map(c => c.title).join(' / '));\n            } else {\n                chartData = new Array(data.length);\n                for (let i = 0; i < data.length; i++) {\n                    let series = new Array(this.seriesColumnsIndex.length);\n                    for (let j = 0; j < this.seriesColumnsIndex.length; j++) {\n                        if (this.seriesColumnsIndex[j]) {\n                            series[j] = {\n                                name: this.seriesColumnsIndex[j].title,\n                                value: this.formatValue(data, this.seriesColumnsIndex[j].name, i)\n                            };\n                        }\n                    }\n                    chartData[i] = {\n                        name: this.formatValue(data, this.labelColumnIndex, i),\n                        series: series\n                    };\n                }\n                this.setSeriesLabel(this.seriesColumnsIndex.map(c => c.title).join(' / '));\n            }\n        }\n\n        return chartData;\n    }\n\n    inverseSeries(data): Array<any> {\n        let chartData: Array<any>;\n\n        if (this.labelColumnIndex != null && this.seriesColumnsIndex.length > 0) {\n            if (this.seriesPivotIndex != null) {\n                let labelValues: any[] = this.uniqueValues(data, this.labelColumnIndex);\n                let seriesCount = labelValues.length * this.seriesColumnsIndex.length;\n                let pivotData = {};\n\n                for (let seriesIndex = 0; seriesIndex < labelValues.length; seriesIndex++) {\n                    let seriesValue = labelValues[seriesIndex];\n                    let seriesData = data.filter(c => c[this.labelColumnIndex] === seriesValue.value);\n\n                    for (let i = 0; i < seriesData.length; i++) {\n                        for (let j = 0; j < this.seriesColumnsIndex.length; j++) {\n                            let pivotItem = seriesData[i][this.seriesPivotIndex];\n                            if (this.seriesColumnsIndex.length > 1 ) {\n                                pivotItem += ' / ' + this.seriesColumnsIndex[j].title;\n                            }\n\n                            let row = pivotData[pivotItem];\n                            if (!row) {\n                                row = new Array(seriesCount);\n                                pivotData[pivotItem] = row;\n                            }\n\n                            if (this.seriesColumnsIndex[j]) {\n                                let name = this.formatValue(seriesData, this.labelColumnIndex, j);\n                                row[((j + 1) * (seriesIndex + 1)) - 1 ] = {\n                                    name: name,\n                                    value: this.formatValue(seriesData, this.seriesColumnsIndex[j].name, i)\n                                };\n                            }\n                        }\n                    }\n                }\n\n                let labels = Object.keys(pivotData);\n                chartData = new Array(labels.length);\n                let seriesColumn = this.columns[this.seriesPivotIndex];\n\n                for (let i  = 0; i < labels.length; i++) {\n                    chartData[i] = {\n                        name: Functions.formatValue(labels[i], seriesColumn.format),\n                        series: pivotData[labels[i]].filter(c => c)\n                    }\n                }\n                this.setSeriesLabel(this.seriesColumnsIndex.map(c => c.title).join(' / '));\n            } else {\n                chartData = new Array(this.seriesColumnsIndex.length);\n                for (let i = 0; i < this.seriesColumnsIndex.length; i++) {\n                    let series = new Array(data.length);\n                    for (let j = 0; j < data.length; j++) {\n                        series[j] = {\n                            name: this.formatValue(data, this.labelColumnIndex, j),\n                            value: this.formatValue(data, this.seriesColumnsIndex[i].name, j)\n                        };\n                    }\n                    series = series.filter(c => c.value !== '');\n                    chartData[i] = { name: this.seriesColumnsIndex[i].title, series: series };\n                }\n                this.setSeriesLabel(this.seriesColumnsIndex.map(c => c.title).join(' / '));\n            }\n        }\n\n        return chartData;\n    }\n\n    uniqueValues(data, index: number): any[] {\n        const format = this.columns[index].format;\n        const values = Array.from(new Set(data.map(c => c[index]))).sort((a, b) => {\n            if (a > b) {\n                return 1;\n            }\n            if (a < b) {\n                return -1;\n            }\n            return 0;\n        });\n\n        const valuesSet = values.map(c => {\n            return {\n                name: Functions.formatValue(c, format),\n                value: c\n            }\n        });\n        return valuesSet;\n    }\n\n    formatValue(data, columnIndex: number, row: number) {\n        if (columnIndex === null) {\n            return row;\n        }\n\n        let value = data[row][columnIndex];\n        let column = this.columns[columnIndex];\n\n        return Functions.formatValue(value, column.format);\n    }\n\n}\n","<div class=\"m-3\" *ngIf=\"!resultArray || resultArray?.length === 0 || !chartType\">\n    <div class=\"alert alert-warning\">\n        Chart not displayed.  Check the chart type, labels and series have been set.\n    </div>\n</div>\n<div #wrapper class=\"chart-parent border\" *ngFor=\"let results of resultArray; trackBy:trackChartChange\" >\n   <div class=\"w-100 text-center \"><div class=\"badge badge-secondary\">{{results?.name}}</div></div> \n<div (resized)=\"onResized($event)\" *ngIf=\"results && chartType\" id=\"chart\" [ngClass]=\"{'responsive-chart' : responsive, 'fixed-chart': !responsive}\" >\n    <ngx-charts-bar-vertical *ngIf=\"chartType.key === eChartType.BarVertical\" [view]=\"view\" \n        [results]=\"results\" [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\" [yAxis]=\"config.showYAxis\"\n        [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\" [showXAxisLabel]=\"config.showXAxisLabel\"\n        [showYAxisLabel]=\"config.showYAxisLabel\" [xAxisLabel]=\"config.xAxisLabel\" [yScaleMin]=\"config.yScaleMin\" \n        [yScaleMax]=\"config.yScaleMax\" [yAxisLabel]=\"config.yAxisLabel\" [customColors]=\"customColors\"\n        [barPadding]=\"config.barPadding ? config.barPadding : 3\" [roundEdges]=\"config.roundEdges\" [showDataLabel]=\"config.showDataLabel\">\n    </ngx-charts-bar-vertical>\n\n    <ngx-charts-bar-horizontal *ngIf=\"chartType.key === eChartType.BarHorizontal\" [view]=\"view\" \n        [results]=\"results\" [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\" [yAxis]=\"config.showYAxis\"\n        [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\" [showXAxisLabel]=\"config.showXAxisLabel\"\n        [showYAxisLabel]=\"config.showYAxisLabel\" [xAxisLabel]=\"config.xAxisLabel\" [xScaleMin]=\"config.xScaleMin\"\n        [xScaleMax]=\"config.xScaleMax\" [yAxisLabel]=\"config.yAxisLabel\" [customColors]=\"customColors\"\n        [barPadding]=\"config.barPadding ? config.barPadding : 3\" [roundEdges]=\"config.roundEdges\" [showDataLabel]=\"config.showDataLabel\">\n    </ngx-charts-bar-horizontal>\n\n    <ngx-charts-bar-vertical-2d *ngIf=\"chartType.key === eChartType.BarVertical2D\" [view]=\"view\" [customColors]=\"customColors\"\n        [results]=\"results\" [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\" [yAxis]=\"config.showYAxis\"\n        [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\" [showXAxisLabel]=\"config.showXAxisLabel\"\n        [showYAxisLabel]=\"config.showYAxisLabel\" [xAxisLabel]=\"config.xAxisLabel\" [yScaleMax]=\"config.yScaleMax\"\n        [yAxisLabel]=\"config.yAxisLabel\" [barPadding]=\"config.barPadding ? config.barPadding : 3\" [roundEdges]=\"config.roundEdges\" [showDataLabel]=\"config.showDataLabel\">\n    </ngx-charts-bar-vertical-2d>\n\n    <ngx-charts-bar-horizontal-2d *ngIf=\"chartType.key === eChartType.BarHorizontal2D\" [view]=\"view\" [customColors]=\"customColors\"\n        [results]=\"results\" [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\" [yAxis]=\"config.showYAxis\"\n        [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\" [showXAxisLabel]=\"config.showXAxisLabel\"\n        [showYAxisLabel]=\"config.showYAxisLabel\" [xAxisLabel]=\"config.xAxisLabel\" [xScaleMax]=\"config.xScaleMax\"\n        [yAxisLabel]=\"config.yAxisLabel\" [barPadding]=\"config.barPadding ? config.barPadding : 3\" [roundEdges]=\"config.roundEdges\" [showDataLabel]=\"config.showDataLabel\">\n    </ngx-charts-bar-horizontal-2d>\n\n    <ngx-charts-bar-vertical-stacked *ngIf=\"chartType.key === eChartType.BarVerticalStacked\"\n        [view]=\"view\" [customColors]=\"customColors\" [results]=\"results\" [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\"\n        [yAxis]=\"config.showYAxis\" [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\"\n        [showXAxisLabel]=\"config.showXAxisLabel\" [showYAxisLabel]=\"config.showYAxisLabel\"\n        [xAxisLabel]=\"config.xAxisLabel\" [yScaleMax]=\"config.yScaleMax\" [yAxisLabel]=\"config.yAxisLabel\" \n        [barPadding]=\"config.barPadding ? config.barPadding : 3\" [roundEdges]=\"config.roundEdges\" [showDataLabel]=\"config.showDataLabel\">\n    </ngx-charts-bar-vertical-stacked>\n\n    <ngx-charts-bar-horizontal-stacked *ngIf=\"chartType.key === eChartType.BarHorizontalStacked\"\n        [view]=\"view\" [customColors]=\"customColors\" [results]=\"results\" [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\"\n        [yAxis]=\"config.showYAxis\" [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\"\n        [showXAxisLabel]=\"config.showXAxisLabel\" [showYAxisLabel]=\"config.showYAxisLabel\"\n        [xAxisLabel]=\"config.xAxisLabel\" [xScaleMax]=\"config.xScaleMax\" [yAxisLabel]=\"config.yAxisLabel\"\n        [barPadding]=\"config.barPadding ? config.barPadding : 3\" [roundEdges]=\"config.roundEdges\" [showDataLabel]=\"config.showDataLabel\">\n    </ngx-charts-bar-horizontal-stacked>\n\n    <ngx-charts-bar-vertical-normalized *ngIf=\"chartType.key === eChartType.BarVerticalNormalized\"\n        [view]=\"view\" [customColors]=\"customColors\" [results]=\"results\" [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\"\n        [yAxis]=\"config.showYAxis\" [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\"\n        [showXAxisLabel]=\"config.showXAxisLabel\" [showYAxisLabel]=\"config.showYAxisLabel\"\n        [xAxisLabel]=\"config.xAxisLabel\" [yAxisLabel]=\"config.yAxisLabel\"\n        [barPadding]=\"config.barPadding ? config.barPadding : 3\" [roundEdges]=\"config.roundEdges\" [showDataLabel]=\"config.showDataLabel\">\n    </ngx-charts-bar-vertical-normalized>\n\n    <ngx-charts-bar-horizontal-normalized *ngIf=\"chartType.key === eChartType.BarHorizontalNormalized\"\n        [view]=\"view\" [customColors]=\"customColors\" [results]=\"results\" [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\"\n        [yAxis]=\"config.showYAxis\" [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\"\n        [showXAxisLabel]=\"config.showXAxisLabel\" [showYAxisLabel]=\"config.showYAxisLabel\"\n        [xAxisLabel]=\"config.xAxisLabel\" [yAxisLabel]=\"config.yAxisLabel\"\n        [barPadding]=\"config.barPadding ? config.barPadding : 3\" [roundEdges]=\"config.roundEdges\" [showDataLabel]=\"config.showDataLabel\">\n    </ngx-charts-bar-horizontal-normalized>\n\n    <ngx-charts-pie-chart *ngIf=\"chartType.key === eChartType.Pie\" [view]=\"view\" [customColors]=\"customColors\" [results]=\"results\"\n        [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [labels]=\"config.showXAxis\" [explodeSlices]=\"config.explodeSlices\"\n        [doughnut]=\"config.doughnut\" [gradient]=\"config.showGradient\" [legend]=\"false\" [labels]=\"true\" >\n    </ngx-charts-pie-chart>\n\n    <ngx-charts-advanced-pie-chart *ngIf=\"chartType.key === eChartType.PieAdvanced\" [view]=\"view\" [customColors]=\"customColors\"\n        [results]=\"results\" [gradient]=\"config.showGradient\">\n    </ngx-charts-advanced-pie-chart>\n\n    <ngx-charts-pie-grid *ngIf=\"chartType.key === eChartType.PieGrid\" [view]=\"view\" [customColors]=\"customColors\" [results]=\"results\">\n    </ngx-charts-pie-grid>\n\n    <ngx-charts-line-chart *ngIf=\"chartType.key === eChartType.Line\" [view]=\"view\" [customColors]=\"customColors\" [results]=\"results\"\n        [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\" [yAxis]=\"config.showYAxis\"\n        [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\" [showXAxisLabel]=\"config.showXAxisLabel\"\n        [showYAxisLabel]=\"config.showYAxisLabel\" [xAxisLabel]=\"config.xAxisLabel\" [autoScale]=\"config.autoScale\" [yScaleMin]=\"config.yScaleMin\"\n        [yScaleMax]=\"config.yScaleMax\" [yAxisLabel]=\"config.yAxisLabel\">\n    </ngx-charts-line-chart>\n\n    <ngx-charts-polar-chart *ngIf=\"chartType.key === eChartType.Polar\" [view]=\"view\" [customColors]=\"customColors\" [results]=\"results\"\n        [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\" [yAxis]=\"config.showYAxis\"\n        [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\" [showXAxisLabel]=\"config.showXAxisLabel\"\n        [showYAxisLabel]=\"config.showYAxisLabel\" [xAxisLabel]=\"config.xAxisLabel\" [yAxisLabel]=\"config.yAxisLabel\">\n    </ngx-charts-polar-chart>\n\n    <ngx-charts-area-chart *ngIf=\"chartType.key === eChartType.Area\" [view]=\"view\" [customColors]=\"customColors\" [results]=\"results\"\n        [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\" [yAxis]=\"config.showYAxis\"\n        [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\" [showXAxisLabel]=\"config.showXAxisLabel\"\n        [showYAxisLabel]=\"config.showYAxisLabel\" [xAxisLabel]=\"config.xAxisLabel\" [yScaleMax]=\"config.yScaleMax\"\n        [yAxisLabel]=\"config.yAxisLabel\">\n    </ngx-charts-area-chart>\n\n    <ngx-charts-area-chart-stacked *ngIf=\"chartType.key === eChartType.AreaStacked\" [view]=\"view\" [customColors]=\"customColors\"\n        [results]=\"results\" [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\" [yAxis]=\"config.showYAxis\"\n        [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\" [showXAxisLabel]=\"config.showXAxisLabel\"\n        [showYAxisLabel]=\"config.showYAxisLabel\" [xAxisLabel]=\"config.xAxisLabel\" [yScaleMin]=\"config.yScaleMin\"\n        [yScaleMax]=\"config.yScaleMax\" [yAxisLabel]=\"config.yAxisLabel\">\n    </ngx-charts-area-chart-stacked>\n\n    <ngx-charts-area-chart-normalized *ngIf=\"chartType.key === eChartType.AreaNormalized\" [view]=\"view\" [customColors]=\"customColors\"\n        [results]=\"results\" [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\" [yAxis]=\"config.showYAxis\"\n        [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\" [showXAxisLabel]=\"config.showXAxisLabel\"\n        [showYAxisLabel]=\"config.showYAxisLabel\" [xAxisLabel]=\"config.xAxisLabel\" [yAxisLabel]=\"config.yAxisLabel\">\n    </ngx-charts-area-chart-normalized>\n\n    <combo-chart-component *ngIf=\"chartType.key === eChartType.BarLineCombo\" [view]=\"view\" [customColors]=\"customColors\"\n        [results]=\"results\" [lineChart]=\"results?.lineChartSeries\" [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\" [yAxis]=\"config.showYAxis\"\n        [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\" [showXAxisLabel]=\"config.showXAxisLabel\"\n        [showYAxisLabel]=\"config.showYAxisLabel\" [showRightYAxisLabel]=\"config.showYAxisLabel\" [xAxisLabel]=\"config.xAxisLabel\" [yScaleMax]=\"config.yScaleMax\"\n        [yAxisLabel]=\"config.yAxisLabel\" [yAxisLabelRight]=\"config.yAxisLabelRight\" [separateAxis]=\"config.separateAxis\"\n        [barPadding]=\"config.barPadding ? config.barPadding : 3\" [roundEdges]=\"config.roundEdges\" [showDataLabel]=\"config.showDataLabel\">\n    </combo-chart-component>\n\n    <ngx-charts-bubble-chart\n        *ngIf=\"chartType.key === eChartType.Bubble || chartType.key === eChartType.Error || chartType.key === eChartType.Scatter\"\n        [view]=\"view\" [customColors]=\"customColors\" [results]=\"results\" [xAxis]=\"config.showXAxis\" [yAxis]=\"config.showYAxis\"\n        [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\" [showXAxisLabel]=\"config.showXAxisLabel\"\n        [showYAxisLabel]=\"config.showYAxisLabel\" [xAxisLabel]=\"config.xAxisLabel\" [autoScale]=\"config.autoScale\" [xScaleMin]=\"config.xScaleMin\"\n        [xScaleMax]=\"config.xScaleMax\" [yScaleMin]=\"config.yScaleMin\" \n        [yAxisLabel]=\"config.yAxisLabel\">\n    </ngx-charts-bubble-chart>\n\n    <ngx-charts-heat-map *ngIf=\"chartType.key === eChartType.HeatMap\" [view]=\"view\" [customColors]=\"customColors\"\n        [gradient]=\"config.showGradient\" [results]=\"results\" [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\"\n        [yAxis]=\"config.showYAxis\" [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showXAxisLabel]=\"config.showXAxisLabel\"\n        [showYAxisLabel]=\"config.showYAxisLabel\" [xAxisLabel]=\"config.xAxisLabel\" [max]=\"config.xScaleMax\"\n        [min]=\"config.xScaleMin\" [yAxisLabel]=\"config.yAxisLabel\">\n    </ngx-charts-heat-map>\n\n    <ngx-charts-tree-map *ngIf=\"chartType.key === eChartType.TreeMap\" [view]=\"view\" [customColors]=\"customColors\"\n        [gradient]=\"config.showGradient\" [results]=\"results\" [gradient]=\"config.showGradient\">\n    </ngx-charts-tree-map>\n\n    <ngx-charts-number-card *ngIf=\"chartType.key === eChartType.Cards\" [view]=\"view\" [customColors]=\"customColors\"\n        [results]=\"results\">\n    </ngx-charts-number-card>\n\n    <ngx-charts-gauge *ngIf=\"chartType.key === eChartType.Gauge\" [view]=\"view\" [customColors]=\"customColors\" [results]=\"results\"\n        [showAxis]=\"config.showXAxis\" [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showAxis]=\"config.showXAxisLabel\"\n        [textValue]=\"config.xAxisLabel\" [min]=\"config.xScaleMin\" [max]=\"config.xScaleMax\" [units]=\"config.yAxisLabel\">\n    </ngx-charts-gauge>\n\n    <ngx-charts-linear-gauge *ngIf=\"chartType.key === eChartType.LinearGauge\" [view]=\"view\" [customColors]=\"customColors\"\n        [results]=\"results\" [min]=\"config.xScaleMin\" [max]=\"config.xScaleMax\" [units]=\"config.yAxisLabel\">\n    </ngx-charts-linear-gauge>\n\n    <google-map *ngIf=\"chartType.key === eChartType.Map\" [results]=\"results\"></google-map>\n</div>\n</div>","import {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ChartBuilderComponent } from './chartBuilder/chart-builder.component';\nimport { DexihComponentsModule } from 'dexih-ngx-components';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { GoogleMapComponent } from './googleMap/google-map.component';\nimport { ChartViewComponent } from './chartView/chart-view.component';\nimport { ComboChartComponent, ComboSeriesVerticalComponent } from './comboChart';\nimport { AngularResizedEventModule } from 'angular-resize-event';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    DexihComponentsModule,\n    NgxChartsModule,\n    AngularResizedEventModule,\n  ],\n  declarations: [\n    ChartBuilderComponent,\n    ChartViewComponent,\n    GoogleMapComponent,\n    ComboChartComponent, ComboSeriesVerticalComponent\n  ],\n  exports: [ChartBuilderComponent, ChartViewComponent, GoogleMapComponent, ComboChartComponent],\n})\nexport class ChartBuilderModule {\n\n}\n","import {\n    Component,\n    Input,\n    ViewEncapsulation,\n    Output,\n    EventEmitter,\n    ViewChild,\n    HostListener,\n    ContentChild,\n    TemplateRef\n  } from '@angular/core';\n  \n  import { curveLinear } from 'd3-shape';\n  import { scaleBand, scaleLinear, scalePoint, scaleTime } from 'd3-scale';\n  import {\n    BaseChartComponent,\n    LineSeriesComponent,\n    ViewDimensions,\n    ColorHelper,\n    calculateViewDimensions\n  } from '@swimlane/ngx-charts';\n  \n  @Component({\n    // tslint:disable-next-line: component-selector\n    selector: 'combo-chart-component',\n    templateUrl: './combo-chart.component.html',\n    styleUrls: ['./combo-chart.component.scss'],\n    encapsulation: ViewEncapsulation.None\n  })\n  export class ComboChartComponent extends BaseChartComponent {\n    @Input() curve: any = curveLinear;\n    @Input() legend = false;\n    @Input() legendTitle: string = 'Legend';\n    @Input() legendPosition: string = 'right';\n    @Input() xAxis;\n    @Input() yAxis;\n    @Input() showXAxisLabel;\n    @Input() showYAxisLabel;\n    @Input() showRightYAxisLabel;\n    @Input() xAxisLabel;\n    @Input() yAxisLabel;\n    @Input() yAxisLabelRight;\n    @Input() yScaleMax;\n    @Input() tooltipDisabled: boolean = false;\n    @Input() gradient: boolean;\n    @Input() showGridLines: boolean = true;\n    @Input() activeEntries: any[] = [];\n    @Input() schemeType: string;\n    @Input() xAxisTickFormatting: any;\n    @Input() yAxisTickFormatting: any;\n    @Input() yRightAxisTickFormatting: any;\n    @Input() roundDomains: boolean = false;\n    @Input() colorSchemeLine = 'fire';\n    @Input() autoScale;\n    @Input() lineChart: any;\n    @Input() yLeftAxisScaleFactor: any;\n    @Input() yRightAxisScaleFactor: any;\n    @Input() rangeFillOpacity: number;\n    @Input() animations: boolean = true;\n    @Input() noBarWhenZero: boolean = true;\n    @Input() roundEdges: boolean = false;\n    @Input() barPadding = 3;\n    @Input() separateAxis = false; // seprate axis for bar/series\n    @Input() showDataLabel = false;\n    @Input() dataLabelFormatting;\n  \n    @Output() activate: EventEmitter<any> = new EventEmitter();\n    @Output() deactivate: EventEmitter<any> = new EventEmitter();\n  \n    @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n    @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<any>;\n  \n    @ViewChild(LineSeriesComponent) lineSeriesComponent: LineSeriesComponent;\n  \n    dims: ViewDimensions;\n    xScale: any;\n    yScale: any;\n    xDomain: any;\n    yDomain: any;\n    transform: string;\n    colors: ColorHelper;\n    colorsLine: ColorHelper;\n    margin: any[] = [10, 20, 10, 20];\n    xAxisHeight: number = 0;\n    yAxisWidth: number = 0;\n    legendOptions: any;\n    scaleType = 'linear';\n    xScaleLine;\n    yScaleLine;\n    xDomainLine;\n    yDomainLine;\n    seriesDomain;\n    scaledAxis;\n    combinedSeries;\n    xSet;\n    filteredDomain;\n    hoveredVertical;\n    yOrientLeft = 'left';\n    yOrientRight = 'right';\n    legendSpacing = 0;\n    bandwidth;\n    // barPadding = 8;\n  \n    trackBy(index, item): string {\n      return item.name;\n    }\n  \n    update(): void {\n      super.update();\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n  \n      if (!this.yAxis) {\n        // this.legendSpacing = 0;\n      } else if (this.showYAxisLabel && this.separateAxis && this.yAxis) {\n        // this.legendSpacing = 100;\n        this.dims.width -= 70;\n      } else {\n        // this.legendSpacing = 40;\n        this.dims.width -= 40;\n      }\n      this.xScale = this.getXScale();\n      this.yScale = this.getYScale();\n  \n      if (this.lineChart) {\n        // line chart\n        this.xDomainLine = this.getXDomainLine();\n        if (this.filteredDomain) {\n          this.xDomainLine = this.filteredDomain;\n        }\n    \n        this.yDomainLine = this.getYDomainLine();\n        this.scaleLines();\n      }\n\n      this.seriesDomain = this.getSeriesDomain();\n\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n  \n      this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n  \n    deactivateAll() {\n      this.activeEntries = [...this.activeEntries];\n      for (const entry of this.activeEntries) {\n        this.deactivate.emit({ value: entry, entries: [] });\n      }\n      this.activeEntries = [];\n    }\n  \n    @HostListener('mouseleave')\n    hideCircles(): void {\n      this.hoveredVertical = null;\n      this.deactivateAll();\n    }\n  \n    updateHoveredVertical(item): void {\n      this.hoveredVertical = item.value;\n      this.deactivateAll();\n    }\n  \n    updateDomain(domain): void {\n      this.filteredDomain = domain;\n      this.xDomainLine = this.filteredDomain;\n      this.xScaleLine = this.getXScaleLine(this.xDomainLine, this.dims.width);\n    }\n  \n    scaleLines() {\n      if (!this.lineChart) { return; }\n\n      if (this.separateAxis) {\n        this.xScaleLine = this.getXScaleLine(this.xDomainLine, this.dims.width);\n        this.yScaleLine = this.getYScaleLine(this.yDomainLine, this.dims.height);\n      } else {\n        this.xScaleLine = this.xScale;\n        this.yScaleLine = this.yScale;\n      }\n    }\n  \n    getSeriesDomain(): any[] {\n      if (this.lineChart) {\n        this.combinedSeries = this.lineChart.slice(0);\n      } else {\n        this.combinedSeries = [];\n      }\n      \n      this.combinedSeries.push({\n        name: this.yAxisLabel,\n        series: this.results\n      });\n      return this.combinedSeries.map(d => d.name);\n    }\n  \n    isDate(value): boolean {\n      if (value instanceof Date) {\n        return true;\n      }\n  \n      return false;\n    }\n  \n    getScaleType(values): string {\n      let date = true;\n      let num = true;\n  \n      for (const value of values) {\n        if (!this.isDate(value)) {\n          date = false;\n        }\n  \n        if (typeof value !== 'number') {\n          num = false;\n        }\n      }\n  \n      if (date) return 'time';\n      if (num) return 'linear';\n      return 'ordinal';\n    }\n  \n    getXDomainLine(): any[] {\n      let values = [];\n\n      for (const results of this.lineChart) {\n        for (const d of results.series) {\n          if (!values.includes(d.name)) {\n            values.push(d.name);\n          }\n        }\n      }\n  \n      this.scaleType = this.getScaleType(values);\n      let domain = [];\n  \n      if (this.scaleType === 'time') {\n        const min = Math.min(...values);\n        const max = Math.max(...values);\n        domain = [min, max];\n      } else if (this.scaleType === 'linear') {\n        values = values.map(v => Number(v));\n        const min = Math.min(...values);\n        const max = Math.max(...values);\n        domain = [min, max];\n      } else {\n        domain = values;\n      }\n  \n      this.xSet = values;\n      return domain;\n    }\n  \n    getYDomainLine(): any[] {\n      const domain = [];\n  \n      for (const results of this.lineChart) {\n        for (const d of results.series) {\n          if (domain.indexOf(d.value) < 0) {\n            domain.push(d.value);\n          }\n          if (d.min !== undefined) {\n            if (domain.indexOf(d.min) < 0) {\n              domain.push(d.min);\n            }\n          }\n          if (d.max !== undefined) {\n            if (domain.indexOf(d.max) < 0) {\n              domain.push(d.max);\n            }\n          }\n        }\n      }\n  \n      let min = Math.min(...domain);\n      const max = Math.max(...domain);\n      if (this.yRightAxisScaleFactor) {\n        const minMax = this.yRightAxisScaleFactor(min, max);\n        return [Math.min(0, minMax.min), minMax.max];\n      } else {\n        min = Math.min(0, min);\n        return [min, max];\n      }\n    }\n  \n    getXScaleLine(domain, width): any {\n      let scale;\n      if (this.bandwidth === undefined) {\n        this.bandwidth = width - this.barPadding;\n      }\n      const offset = Math.floor((width + this.barPadding - (this.bandwidth + this.barPadding) * domain.length) / 2);\n  \n      if (this.scaleType === 'time') {\n        scale = scaleTime().range([0, width]).domain(domain);\n      } else if (this.scaleType === 'linear') {\n        scale = scaleLinear().range([0, width]).domain(domain);\n  \n        if (this.roundDomains) {\n          scale = scale.nice();\n        }\n      } else if (this.scaleType === 'ordinal') {\n        scale = scalePoint()\n          .range([offset + this.bandwidth / 2, width - offset - this.bandwidth / 2])\n          .domain(domain);\n      }\n  \n      return scale;\n    }\n  \n    getYScaleLine(domain, height): any {\n      const scale = scaleLinear().range([height, 0]).domain(domain);\n  \n      return this.roundDomains ? scale.nice() : scale;\n    }\n  \n    getXScale(): any {\n      this.xDomain = this.getXDomain();\n      const spacing = this.xDomain.length / (this.dims.width / this.barPadding + 1);\n      return scaleBand().range([0, this.dims.width]).paddingInner(spacing).domain(this.xDomain);\n    }\n  \n    getYScale(): any {\n      this.yDomain = this.getYDomain();\n      if ( this.yScaleMax ) {\n        this.yDomain[1] = this.yScaleMax;\n      }\n      const scale = scaleLinear().range([this.dims.height, 0]).domain(this.yDomain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n  \n    getXDomain(): any[] {\n      return this.results.map(d => d.name);\n    }\n  \n    getYDomain() {\n      const values = this.results.map(d => d.value);\n      let min = Math.min(0, ...values);\n      let max = Math.max(...values);\n\n      // if we are not using a separate axis for series, check the series values for min/max\n      if (!this.separateAxis && this.lineChart) {\n        let yDomainLine = this.getYDomainLine();\n        if (min > yDomainLine[0]) { min = yDomainLine[0]; }\n        if (max < yDomainLine[1]) { max = yDomainLine[1]; }\n      }\n\n      if (this.yLeftAxisScaleFactor) {\n        const minMax = this.yLeftAxisScaleFactor(min, max);\n        return [Math.min(0, minMax.min), minMax.max];\n      } else {\n        return [min, max];\n      }\n    }\n  \n    onClick(data) {\n      this.select.emit(data);\n    }\n  \n    setColors(): void {\n      let domain;\n      if (this.schemeType === 'ordinal') {\n        domain = this.xDomain;\n      } else {\n        domain = this.yDomain;\n      }\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n\n      if (this.seriesDomain) {\n        this.colorsLine = new ColorHelper(this.colorSchemeLine, this.schemeType, this.seriesDomain, this.customColors);\n      }\n    }\n  \n    getLegendOptions() {\n      const opts = {\n        scaleType: this.schemeType,\n        colors: undefined,\n        domain: [],\n        title: undefined,\n        position: this.legendPosition\n      };\n      if (opts.scaleType === 'ordinal') {\n        opts.domain = this.seriesDomain;\n        opts.colors = this.colorsLine;\n        opts.title = this.legendTitle;\n      } else {\n        opts.domain = this.seriesDomain;\n        opts.colors = this.colors.scale;\n      }\n      return opts;\n    }\n  \n    updateLineWidth(width): void {\n      this.bandwidth = width;\n      this.scaleLines();\n    }\n  \n    updateYAxisWidth({ width }): void {\n      this.yAxisWidth = width + 20;\n      this.update();\n    }\n  \n    updateXAxisHeight({ height }): void {\n      this.xAxisHeight = height;\n      this.update();\n    }\n  \n    onActivate(item) {\n      const idx = this.activeEntries.findIndex(d => {\n        return d.name === item.name && d.value === item.value && d.series === item.series;\n      });\n      if (idx > -1) {\n        return;\n      }\n  \n      this.activeEntries = [item, ...this.activeEntries];\n      this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n  \n    onDeactivate(item) {\n      const idx = this.activeEntries.findIndex(d => {\n        return d.name === item.name && d.value === item.value && d.series === item.series;\n      });\n  \n      this.activeEntries.splice(idx, 1);\n      this.activeEntries = [...this.activeEntries];\n  \n      this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n  }\n  ","<ngx-charts-chart\n  [view]=\"[width + legendSpacing, height]\"\n  [showLegend]=\"legend\"\n  [legendOptions]=\"legendOptions\"\n  [activeEntries]=\"activeEntries\"\n  [animations]=\"animations\"\n  (legendLabelClick)=\"onClick($event)\"\n  (legendLabelActivate)=\"onActivate($event)\"\n  (legendLabelDeactivate)=\"onDeactivate($event)\"\n>\n  <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n    <svg:g\n      ngx-charts-x-axis\n      *ngIf=\"xAxis\"\n      [xScale]=\"xScale\"\n      [dims]=\"dims\"\n      [showLabel]=\"showXAxisLabel\"\n      [labelText]=\"xAxisLabel\"\n      [tickFormatting]=\"xAxisTickFormatting\"\n      (dimensionsChanged)=\"updateXAxisHeight($event)\"\n    ></svg:g>\n    <svg:g\n      ngx-charts-y-axis\n      *ngIf=\"yAxis\"\n      [yScale]=\"yScale\"\n      [dims]=\"dims\"\n      [yOrient]=\"yOrientLeft\"\n      [showGridLines]=\"showGridLines\"\n      [showLabel]=\"showYAxisLabel\"\n      [labelText]=\"yAxisLabel\"\n      [tickFormatting]=\"yAxisTickFormatting\"\n      (dimensionsChanged)=\"updateYAxisWidth($event)\"\n    ></svg:g>\n    <svg:g *ngIf=\"lineChart && yAxis && separateAxis\"\n      ngx-charts-y-axis\n      [yScale]=\"yScaleLine\"\n      [dims]=\"dims\"\n      [yOrient]=\"yOrientRight\"\n      [showGridLines]=\"false\"\n      [showLabel]=\"showRightYAxisLabel\"\n      [labelText]=\"yAxisLabelRight\"\n      [tickFormatting]=\"yRightAxisTickFormatting\"\n      (dimensionsChanged)=\"updateYAxisWidth($event)\"\n    ></svg:g>\n    <svg:g \n      ngx-combo-charts-series-vertical\n      [xScale]=\"xScale\"\n      [yScale]=\"yScale\"\n      [colors]=\"colors\"\n      [series]=\"results\"\n      [seriesLine]=\"lineChart\"\n      [dims]=\"dims\"\n      [gradient]=\"gradient\"\n      tooltipDisabled=\"true\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      [noBarWhenZero]=\"noBarWhenZero\"\n      [roundEdges]=\"roundEdges\"\n      [barPadding]=\"barPadding\"\n      [showDataLabel]=\"showDataLabel\"\n      [dataLabelFormatting]=\"dataLabelFormatting\"\n      (activate)=\"onActivate($event)\"\n      (deactivate)=\"onDeactivate($event)\"\n      (bandwidth)=\"updateLineWidth($event)\"\n      (select)=\"onClick($event)\"\n    ></svg:g>\n  </svg:g>\n  <svg:g *ngIf=\"lineChart\" [attr.transform]=\"transform\" class=\"line-chart chart\">\n    <svg:g>\n      <svg:g *ngFor=\"let series of lineChart; trackBy: trackBy\">\n        <svg:g\n          ngx-charts-line-series\n          [xScale]=\"xScaleLine\"\n          [yScale]=\"yScaleLine\"\n          [colors]=\"colorsLine\"\n          [data]=\"series\"\n          [activeEntries]=\"activeEntries\"\n          [scaleType]=\"scaleType\"\n          [curve]=\"curve\"\n          [rangeFillOpacity]=\"rangeFillOpacity\"\n          [animations]=\"animations\"\n        />\n      </svg:g>\n\n      <svg:g\n        ngx-charts-tooltip-area\n        *ngIf=\"!tooltipDisabled\"\n        [dims]=\"dims\"\n        [xSet]=\"xSet\"\n        [xScale]=\"xScaleLine\"\n        [yScale]=\"yScaleLine\"\n        [results]=\"combinedSeries\"\n        [colors]=\"colorsLine\"\n        [tooltipDisabled]=\"tooltipDisabled\"\n        (hover)=\"updateHoveredVertical($event)\"\n      />\n\n      <svg:g *ngFor=\"let series of lineChart\">\n        <svg:g\n          ngx-charts-circle-series\n          [xScale]=\"xScaleLine\"\n          [yScale]=\"yScaleLine\"\n          [colors]=\"colorsLine\"\n          [data]=\"series\"\n          [scaleType]=\"scaleType\"\n          [visibleValue]=\"hoveredVertical\"\n          [activeEntries]=\"activeEntries\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n        />\n      </svg:g>\n    </svg:g>\n  </svg:g>\n</ngx-charts-chart>\n","import { Component, Input, Output, EventEmitter, OnChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { formatLabel, escapeLabel } from '@swimlane/ngx-charts';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'g[ngx-combo-charts-series-vertical]',\n  template: `\n    <svg:g\n      ngx-charts-bar\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\n      [@animationState]=\"'active'\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"'vertical'\"\n      [roundEdges]=\"bar.roundEdges\"\n      [gradient]=\"gradient\"\n      [isActive]=\"isActive(bar.data)\"\n      [animations]=\"animations\"\n      [noBarWhenZero]=\"noBarWhenZero\"\n      (select)=\"onClick($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"'top'\"\n      [tooltipType]=\"'tooltip'\"\n      [tooltipTitle]=\"bar.tooltipText\"\n    ></svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n    <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"'vertical'\"\n      />\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition('* => void', [\n        style({\n          opacity: 1,\n          transform: '*'\n        }),\n        animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n      ])\n    ])\n  ]\n})\nexport class ComboSeriesVerticalComponent implements OnChanges {\n  @Input() dims;\n  @Input() type = 'standard';\n  @Input() series;\n  @Input() seriesLine;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() colors;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() gradient: boolean;\n  @Input() activeEntries: any[];\n  @Input() seriesName: string;\n  @Input() animations: boolean = true;\n  @Input() noBarWhenZero: boolean = true;\n  @Input() showDataLabel: boolean = false;\n  @Input() dataLabelFormatting: any;\n  @Input() roundEdges: boolean = false;\n  @Input() barPadding = 3;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n  @Output() bandwidth = new EventEmitter();\n  @Output() dataLabelHeightChanged = new EventEmitter();\n\n  bars: any;\n  barsForDataLabels: Array<{ x: number; y: number; width: number; height: number; total: number; series: string }> = [];\n  x: any;\n  y: any;\n\n  ngOnChanges(changes): void {\n    this.update();\n  }\n\n  update(): void {\n    let width;\n    if (this.series.length) {\n      width = this.xScale.bandwidth();\n      this.bandwidth.emit(width);\n    }\n\n    let d0 = 0;\n    let total;\n    if (this.type === 'normalized') {\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n    }\n\n    this.bars = this.series.map((d, index) => {\n      let value = d.value;\n      const label = d.name;\n      const formattedLabel = formatLabel(label);\n      const roundEdges = this.type === 'standard' && this.roundEdges;\n\n      const bar: any = {\n        value,\n        label,\n        roundEdges,\n        data: d,\n        width,\n        formattedLabel,\n        height: 0,\n        x: 0,\n        y: 0,\n      };\n\n      if (this.type === 'standard') {\n        bar.height = Math.abs(this.yScale(value) - this.yScale(0));\n        bar.x = this.xScale(label);\n\n        if (value < 0) {\n          bar.y = this.yScale(0);\n        } else {\n          bar.y = this.yScale(value);\n        }\n      } else if (this.type === 'stacked') {\n        const offset0 = d0;\n        const offset1 = offset0 + value;\n        d0 += value;\n\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\n        bar.x = 0;\n        bar.y = this.yScale(offset1);\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n      } else if (this.type === 'normalized') {\n        let offset0 = d0;\n        let offset1 = offset0 + value;\n        d0 += value;\n\n        if (total > 0) {\n          offset0 = (offset0 * 100) / total;\n          offset1 = (offset1 * 100) / total;\n        } else {\n          offset0 = 0;\n          offset1 = 0;\n        }\n\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\n        bar.x = 0;\n        bar.y = this.yScale(offset1);\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n        value = (offset1 - offset0).toFixed(2) + '%';\n      }\n\n      if (this.colors.scaleType === 'ordinal') {\n        bar.color = this.colors.getColor(label);\n      } else {\n        if (this.type === 'standard') {\n          bar.color = this.colors.getColor(value);\n          bar.gradientStops = this.colors.getLinearGradientStops(value);\n        } else {\n          bar.color = this.colors.getColor(bar.offset1);\n          bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n        }\n      }\n\n     let tooltipLabel = formattedLabel;\n      bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n      if (this.seriesName) {\n        tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n        bar.data.series = this.seriesName;\n        bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n      }\n\n      bar.tooltipText = this.tooltipDisabled\n        ? undefined\n        : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${\n          this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()\n        }</span>\n      `;\n\n      return bar;\n    });\n\n    this.updateDataLabels();\n  }\n\n  updateDataLabels() {\n    if (this.type === 'stacked') {\n      this.barsForDataLabels = [];\n      const section: any = {};\n      section.series = this.seriesName;\n      const totalPositive = this.series.map(d => d.value).reduce((sum, d) => (d > 0 ? sum + d : sum), 0);\n      const totalNegative = this.series.map(d => d.value).reduce((sum, d) => (d < 0 ? sum + d : sum), 0);\n      section.total = totalPositive + totalNegative;\n      section.x = 0;\n      section.y = 0;\n      if (section.total > 0) {\n        section.height = this.yScale(totalPositive);\n      } else {\n        section.height = this.yScale(totalNegative);\n      }\n      section.width = this.xScale.bandwidth();\n      this.barsForDataLabels.push(section);\n    } else {\n      this.barsForDataLabels = this.series.map(d => {\n        const section: any = {};\n        section.series = this.seriesName ? this.seriesName : d.name;\n        section.total = d.value;\n        section.x = this.xScale(d.name);\n        section.y = this.yScale(0);\n        section.height = this.yScale(section.total) - this.yScale(0);\n        section.width = this.xScale.bandwidth();\n        return section;\n      });\n    }\n  }\n  \n  isActive(entry): boolean {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  trackBy(index, bar): string {\n    return bar.label;\n  }\n}\n","export * from './combo-chart.component';\nexport * from './combo-series-vertical.component';\n","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { ResultsIndexComponent } from '../../../../+hub/results';\n\ndeclare var google: any;\n\n@Component({\n    selector: 'google-map',\n    templateUrl: 'google-map.component.html'\n})\nexport class GoogleMapComponent implements OnInit, OnChanges {\n    @Input() results: any[];\n\n    public googleMapsAPIKey: string;\n    public isLoaded = false;\n\n    constructor(private authService: AuthService) { }\n\n    ngOnInit() {\n        this.authService.getGlobalCachePromise().then(cache => {\n            this.googleMapsAPIKey = cache.googleMapsAPIKey;\n\n            this.addMapsScript();\n        });\n    }\n\n    ngOnChanges() {\n        if (this.isLoaded) {\n            this.loadMapsData();\n        }\n    }\n\n    addMapsScript() {\n        let googleMapsUrl = `https://maps.googleapis.com/maps/api/js?key=${this.googleMapsAPIKey}`;\n        if (!document.querySelectorAll(`[src=\"${googleMapsUrl}\"]`).length) {\n            document.body.appendChild(Object.assign(\n                document.createElement('script'), {\n                    type: 'text/javascript',\n                    src: googleMapsUrl,\n                    onload: () => {\n                        this.loadMapsData();\n                        this.isLoaded = true;\n                    }\n                }));\n        } else {\n            this.loadMapsData();\n            this.isLoaded = true;\n        }\n    }\n\n    loadMapsData() {\n        if (this.results && this.results.length > 0) {\n            let mapProp = {\n                center: new google.maps.LatLng(this.results[0].latitude, this.results[0].longitude),\n                zoom: 5,\n                mapTypeId: google.maps.MapTypeId.ROADMAP\n            };\n\n            let map = new google.maps.Map(document.getElementById('map'), mapProp);\n            let bounds = new google.maps.LatLngBounds();\n            this.results.forEach(result => {\n                let latLong = { lat: result.latitude, lng: result.longitude };\n                let marker = new google.maps.Marker({\n                    position: latLong,\n                    label: result.name + ' / ' + result.value,\n                    animation: google.maps.Animation.DROP,\n                    map: map\n                });\n\n                bounds.extend(latLong);\n            });\n            map.fitBounds(bounds);\n        }\n    }\n\n}\n","<div id=\"map\" style=\"width:100%;height:500px;\">Please wait for map to load...</div>\n","import {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { DexihInvalidFormIconComponent } from './dexih-invalid-form-icon/dexih-invalid-form-icon.component';\nimport { DexihInvalidFormDetailsComponent } from './dexih-invalid-form-details/dexih-invalid-form-details.component';\nimport { DexihComponentsModule } from 'dexih-ngx-components';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    DexihComponentsModule\n  ],\n  declarations: [\n    DexihInvalidFormIconComponent,\n    DexihInvalidFormDetailsComponent\n  ],\n  exports: [\n    DexihInvalidFormIconComponent,\n    DexihInvalidFormDetailsComponent\n  ],\n})\nexport class DexihFormControlsModule {\n\n}\n","import { AbstractControl, FormGroup, FormArray } from '@angular/forms';\n\nexport class DexihFormErrorsModule {\n\n    public static createErrorMessage(key: string, control: AbstractControl): string {\n        let message = '';\n        switch (key) {\n            case 'minlength':\n                message = 'Value is ' +\n                    control.errors.minlength.actualLength +\n                    ' characters long, required minimum length is '\n                    + control.errors.minlength.requiredLength + ' characters.';\n                break;\n            case 'maxlength':\n                message = 'Value is ' +\n                    control.errors.maxlength.actualLength +\n                    ' characters long, required maximum length is '\n                    + control.errors.maxlength.requiredLength + ' characters.';\n                break;\n            case 'maxvalue':\n                message = 'Value is ' +\n                    control.value +\n                    ' required maximum is '\n                    + control.errors.maxvalue.requiredValue + '.';\n                break;\n            case 'minvalue':\n                message = 'Value is ' +\n                    control.value +\n                    ' required minimum is '\n                    + control.errors.minvalue.requiredValue + '.';\n                break;\n            case 'required':\n                message = 'A value is required.';\n                break;\n            case 'dataType':\n                message = 'There is a datatype mismatch.';\n                break;\n            default:\n                message = 'Field error: ' + key;\n        }\n        return message;\n    }\n    \n}","import { Component, OnInit, OnChanges, OnDestroy, Input } from '@angular/core';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { AbstractControl, FormGroup, FormArray, FormControl } from '@angular/forms';\nimport { map } from 'rxjs/operators';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DexihDatalinkTransformItem, eTransformItemType, DexihDatalinkTransform, eFunctionType, eTransformType } from '../../../shared.models';\nimport { DexihFormErrorsModule} from '../dexih-form-errors.module';\n\nclass ControlError {\n    public field: string;\n    public name: string;\n    public position: number;\n    public errors: string[];\n    public link: string[];\n\n    public childControlErrors: ControlError[];\n\n    constructor() {\n        this.childControlErrors = new Array<ControlError>();\n        this.errors = [];\n    }\n}\n\n@Component({\n    selector: 'dexih-invalid-form-details',\n    templateUrl: './dexih-invalid-form-details.component.html',\n})\nexport class DexihInvalidFormDetailsComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() control: AbstractControl;\n    @Input() baseLink: string;\n\n    public showErrors = false;\n\n    private _changesSubscription: Subscription;\n\n    valid = true;\n    public controlErrors = [];\n\n    constructor(public router: Router, public route: ActivatedRoute) { }\n\n    ngOnInit() { }\n\n    ngOnChanges() {\n        if (!this.control) {\n            this.valid = true;\n            this.controlErrors = [];\n            return;\n        }\n\n        this.refresh();\n\n        if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n        this._changesSubscription = this.control.statusChanges.subscribe(() => {\n            this.refresh();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n    }\n\n    refresh() {\n        if (this.control && this.control.invalid) {\n            this.valid = false;\n            this.controlErrors = this.getFormErrors();\n        } else {\n            this.valid = true;\n            this.controlErrors = [];\n        }\n    }\n\n    public getFormErrors(): ControlError[] {\n        return this.getFormErrorsRecursive(<FormGroup>this.control, 0, null);\n    }\n\n\n    private getFormErrorsRecursive(form: FormGroup, depth: number, parentControlError: ControlError): ControlError[] {\n        let controlErrors = [];\n\n        if (form && form.invalid && form.controls) {\n            for (const field of Object.keys(form.controls)) {\n                const control = form.get(field);\n\n                // if the control is dirty or flag is set to show all errors.\n                if (control && control.invalid) {\n\n                    if (control instanceof FormArray) {\n                        const formArray = <FormArray>control;\n                        let controls = formArray.controls.sort((a: FormGroup, b: FormGroup) => {\n                            if (a.controls.position) {\n                                return a.controls.position.value - b.controls.position.value;\n                            }\n                            return 1;\n                        });\n\n                        controls.forEach((cont, formIndex) => {\n                            if (cont.invalid) {\n                            let controlError = new ControlError();\n\n                            if (cont.value && cont.value.name) {\n                                controlError.name = cont.value.name;\n                            }\n\n                            this.setError(field, cont, controlError, form, parentControlError);\n                            controlError.position = formIndex + 1;\n                            controlError.childControlErrors = this.getFormErrorsRecursive(<FormGroup>cont, depth + 1,\n                                    controlError);\n                            controlErrors.push(controlError);\n                        }\n                        });\n                    } else if (control instanceof FormGroup) {\n                        let controlError = new ControlError();\n\n                        if (control.value && control.value.name) {\n                            controlError.name = control.value.name;\n                        }\n\n                        this.setError(field, control, controlError, form, parentControlError);\n                        controlError.position = null;\n                        controlError.childControlErrors = this.getFormErrorsRecursive(<FormGroup>control, depth + 1, controlError);\n                        controlErrors.push(controlError);\n\n                    } else {\n                        let controlError = new ControlError();\n                        this.setError(field, control, controlError, form, parentControlError);\n                        controlError.position = null;\n                        for (const key of Object.keys(control.errors)) {\n                                let message = DexihFormErrorsModule.createErrorMessage(key, control);\n                                controlError.errors.push(message);\n                            }\n                            controlErrors.push(controlError);\n                        }\n                }\n            }\n        }\n\n        return controlErrors;\n    }\n\n    private setError(field: string, control: AbstractControl, controlError: ControlError,\n            parentControl: AbstractControl, parentControlError: ControlError) {\n        let link: any[];\n\n        switch (field) {\n            case 'dexihDatalinkTransforms':\n                let transform = <DexihDatalinkTransform>control.value;\n                if (transform.name) {\n                    controlError.field = 'Transform ' + transform.name;\n                } else {\n                    controlError.field = 'Transform ' + eTransformType[transform.transformType];\n                }\n\n                link = ['transforms', 'transform', control.value.key];\n                break;\n            case 'dexihDatalinkTransformItems':\n                let item = <DexihDatalinkTransformItem>control.value;\n                const functionType = this.getFunctionType(parentControl.value);\n\n                switch (item.transformItemType) {\n                    case eTransformItemType.BuiltInFunction:\n                        controlError.field = item.functionMethodName;\n                        link = ['standard-function-edit', functionType, item.key];\n                        break;\n                    case eTransformItemType.CustomFunction:\n                        controlError.field = 'Custom Function';\n                        link = ['custom-function-edit', functionType, item.key];\n                        break;\n                    case eTransformItemType.Column:\n                    case eTransformItemType.JoinNode:\n                    case eTransformItemType.GroupNode:\n                    case eTransformItemType.ColumnPair:\n                    case eTransformItemType.Sort:\n                    case eTransformItemType.JoinPair:\n                    case eTransformItemType.FilterPair:\n                    case eTransformItemType.AggregatePair:\n                    case eTransformItemType.Series:\n                        controlError.field = eTransformItemType[item.transformItemType] + ' mapping';\n                        link = ['mapping-edit', item.transformItemType, item.key];\n                        break;\n                    case eTransformItemType.UnGroup:\n                        controlError.field = 'UnGroup';\n                        link = ['unGroup-edit', item.key];\n                        break;\n                }\n                controlError.link = [];\n                break;\n            case 'dexihFunctionParameters':\n                controlError.field = 'Parameter';\n                controlError.link = [];\n                break;\n            case 'arrayParameters':\n                controlError.field = 'Array Item';\n                controlError.link = [];\n                break;\n            case 'functionMethodName':\n                controlError.field = 'Standard Function';\n                controlError.link = [];\n                break;\n            default:\n                controlError.field = field;\n                controlError.link = [];\n        }\n\n        if (link) {\n            if (parentControlError && parentControlError.link) {\n                controlError.link = parentControlError.link.concat(link);\n            } else {\n                controlError.link = link;\n            }\n        } else {\n            if (parentControlError && parentControlError.link) {\n                controlError.link = parentControlError.link\n            }\n        }\n    }\n\n    public getFunctionType(datalinkTransform: DexihDatalinkTransform): eFunctionType {\n        let functionType: eFunctionType;\n        switch (datalinkTransform.transformType) {\n            case eTransformType.Filter:\n                functionType = eFunctionType.Condition;\n                break;\n            case eTransformType.Mapping:\n                functionType = eFunctionType.Map;\n                break;\n            case eTransformType.Join:\n                functionType = eFunctionType.JoinCondition;\n                break;\n            case eTransformType.Group:\n            case eTransformType.Aggregate:\n                functionType = eFunctionType.Aggregate;\n                break;\n            case eTransformType.Series:\n                functionType = eFunctionType.Series;\n                break;\n            case eTransformType.Sort:\n                functionType = eFunctionType.Sort;\n                break;\n            case eTransformType.Validation:\n                functionType = eFunctionType.Validate;\n                break;\n            case eTransformType.Rows:\n                functionType = eFunctionType.Rows;\n                break;\n            case eTransformType.Lookup:\n                functionType = eFunctionType.JoinCondition;\n                break;\n            case eTransformType.Delta:\n                break;\n        }\n\n        return functionType;\n    }\n}\n","<dexih-button-dropdown \n[iconClass]=\"valid ? 'fa fa-check' : 'fa fa-exclamation-circle'\"\n[buttonClass]=\"valid ? 'btn btn-success' : 'btn btn-warning'\"\n[text]= \"valid ? 'Valid' : 'Warnings'\" \ntitle=\"Potential errors and warnings.\"\n[pullRight]=\"true\"\n>\n\n<ng-template [ngIf]=\"valid\">\n    <h5 class=\"dropdown-header\">The current form is valid.</h5>\n</ng-template>\n\n<!-- Recurs through the errors -->\n<ng-template #recursiveList let-list>\n    \n    <li *ngFor=\"let item of list\">\n        <span *ngIf=\"item.childControlErrors.length > 0\">\n            <a class=\"dropdown-item\" [routerLink]=\"item.link\">{{item.field}} {{item.name}}</a>\n            <ul>\n                <ng-container *ngTemplateOutlet=\"recursiveList; context:{ $implicit: item.childControlErrors }\">\n                </ng-container>\n            </ul>\n        </span>\n        <a *ngFor=\"let error of item.errors\" class=\"dropdown-item\" [routerLink]=\"item.link\">{{item.field}} - {{error}}</a>\n    </li>\n</ng-template>\n\n<!-- Recurs through the errors -->\n<ng-container *ngTemplateOutlet=\"recursiveList; context:{ $implicit: controlErrors }\">\n</ng-container>\n\n</dexih-button-dropdown>\n","import { Component, OnInit, OnChanges, OnDestroy, Input, AfterViewInit } from '@angular/core';\nimport { Subscription} from 'rxjs';\nimport { AbstractControl, FormGroup, FormArray } from '@angular/forms';\nimport { DexihFormErrorsModule } from '../dexih-form-errors.module';\n\n@Component({\n    selector: 'dexih-invalid-form-icon',\n    templateUrl: './dexih-invalid-form-icon.component.html'\n})\n\nexport class DexihInvalidFormIconComponent implements AfterViewInit  {\n    @Input() control: AbstractControl;\n\n    public pageLoaded = false;\n\n    constructor() { }\n\n\n    // workaround to stop ExpressionChangedAfterItHasBeenCheckedError\n    ngAfterViewInit() {\n        this.pageLoaded = true;\n    }\n\n    isFormValid(): boolean {\n        if (this.pageLoaded) {\n            return this.control.valid;\n        } else {\n            return false;\n        }\n    }\n\n}\n","<span *ngIf=\"!isFormValid\">&nbsp;<i title='There are errors with this control' class=\"fa fa-exclamation-circle text-danger\"></i></span>","export * from './dexih-form-controls.module';\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from '../../../+auth/auth.models';\n\n@Component({\n    selector: 'dexih-message',\n    templateUrl: './dexih-message.component.html',\n})\n\nexport class DexihMessageComponent implements OnInit {\n    @Input() message: Message;\n\n    isHidden = true;\n\n    ngOnInit() {\n    }\n\n    public addMessage(message: Message) {\n        this.message = message;\n    }\n\n    public addErrorMessage(messageString: string) {\n        this.addMessage(new Message(false, messageString, null, null));\n    }\n\n    public addSuccessMessage(messageString: string) {\n        this.addMessage(new Message(true, messageString, null, null));\n    }\n\n    public reset() {\n        this.message = null;\n    }\n}\n","<section *ngIf=\"message\">\n    <div class=\"alert alert-dismissible\" [class.alert-danger]=\"message.success == false\" [class.alert-success]=\"message.success == true\">\n        <div style=\"white-space: pre-wrap;\">{{message.message}}</div>\n        <button type=\"button\" class=\"close\" (click)=\"reset()\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <div *ngIf=\"message.exceptionDetails && message.message != message.exceptionDetails\">\n            <hr>\n            <a class=\"btn btn-sm btn-primary text-white\" (click)='isHidden = !isHidden'>Details</a>\n            <div *ngIf=\"!isHidden && message.exceptionDetails && message.message != message.exceptionDetails\">\n                <hr>\n                <pre style=\"word-wrap: break-word;\">{{message.exceptionDetails}}</pre>\n            </div>\n        </div>\n    </div>\n</section>","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DexihMessageComponent } from './dexih-message.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n  ],\n  declarations: [\n    DexihMessageComponent,\n  ],\n  exports: [\n    DexihMessageComponent\n  ],\n})\nexport class DexihMessageModule {\n}\n","export * from './dexih-message.component';\nexport * from './dexih-message.module';\n\n","import { Component, OnDestroy, OnInit, EventEmitter, Output, Input } from '@angular/core';\nimport { downloadFormats } from '../../../../+hub/hub.query.models';\nimport { eDownloadFormat } from '../../../shared.models';\n\n@Component({\n    selector: 'download-button',\n    templateUrl: './download-button.component.html'\n})\n\nexport class DownloadButtonComponent implements OnInit, OnDestroy {\n    @Input() autoCompact = true;\n    @Output() download = new EventEmitter<eDownloadFormat>();\n\n    eDownloadFormat = eDownloadFormat;\n    downloadFormats = downloadFormats;\n\n    constructor() { }\n\n    ngOnInit() {\n\n    }\n\n    ngOnDestroy() {\n     }\n\n     doDownload(format: eDownloadFormat) {\n         this.download.emit(format);\n     }\n\n\n\n}\n","<dexih-button-dropdown text=\"Download (all rows)\" iconClass=\"fa fa-download\" [autoCompact]=\"autoCompact\">\n    <a *ngFor=\"let downloadFormat of downloadFormats\" class=\"dropdown-item\" (click)=\"doDownload(downloadFormat.key)\">{{downloadFormat.name}}</a>\n</dexih-button-dropdown>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'encryption-status-icon',\n    templateUrl: './encryption-status.component.html'\n})\n\nexport class EncryptionStatusIconComponent implements OnInit {\n    @Input() isEncrypted = false;\n\n    @Output() click = new EventEmitter();\n\n    constructor() { }\n\n    ngOnInit() { }\n\n    doClick() {\n        this.click.emit(true);\n    }\n}\n","<span *ngIf='isEncrypted' class=\"text-success\"> <i class=\"fa fa-lg fa-fw fa-lock text-success'\" title=\"This agent is secure and sends/receives data with encryption.\"></i></span>\n<span *ngIf='!isEncrypted' class=\"text-danger\"><i class=\"fa fa-lg fa-fw fa-info-circle text-warning'\" title=\"Warning: This agent sends/receives data without encryption.\" ></i></span>\n","import {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { EncryptionStatusIconComponent } from './encryption-status/encryption-status.component';\nimport { PrivacyStatusButtonComponent } from './privacy-status/privacy-status.component';\nimport { DownloadButtonComponent } from './download-button/download-button.component';\nimport { DexihComponentsModule } from 'dexih-ngx-components';\nimport { PrintButtonComponent} from './print/print-button.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    DexihComponentsModule\n  ],\n  declarations: [\n    EncryptionStatusIconComponent,\n    PrivacyStatusButtonComponent,\n    DownloadButtonComponent,\n    PrintButtonComponent\n  ],\n  exports: [\n    EncryptionStatusIconComponent,\n    PrivacyStatusButtonComponent,\n    DownloadButtonComponent,\n    PrintButtonComponent\n  ],\n})\nexport class DexihIconsModule {\n\n}\n","export * from './icons.module';\n","import { Component, OnDestroy, OnInit, EventEmitter, Output, Input } from '@angular/core';\n\n@Component({\n    selector: 'print-button',\n    templateUrl: './print-button.component.html'\n})\n\nexport class PrintButtonComponent implements OnInit, OnDestroy {\n    @Input() autoCompact = true;\n    @Input() element = 'print-body';\n\n    constructor() { }\n\n    ngOnInit() {\n\n    }\n\n    ngOnDestroy() {\n     }\n\n     print(): void {\n        let printContents, popupWin;\n        printContents = document.getElementById(this.element).innerHTML;\n        popupWin = window.open('', '_blank', 'top=0,left=0,height=100%,width=auto');\n        popupWin.document.open();\n        popupWin.document.write(`\n          <html>\n            <head>\n              <title>Print tab</title>\n              <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n              <style>\n              </style>\n            </head>\n        <body onload=\"window.print();window.close()\">${printContents}</body>\n          </html>`\n        );\n        popupWin.document.close();\n    }\n\n}\n","<dexih-button iconClass=\"fa fa-print\" (click)=\"print()\" id=\"print\">Print</dexih-button>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { eDataPrivacyStatus } from '../../../shared.models';\n\n@Component({\n    selector: 'privacy-status-icon',\n    templateUrl: './privacy-status.component.html'\n})\n\nexport class PrivacyStatusButtonComponent implements OnInit {\n    @Input() privacyStatus: eDataPrivacyStatus;\n\n    eDataPrivacyStatus = eDataPrivacyStatus;\n\n    @Output() click = new EventEmitter();\n\n    constructor() { }\n\n    ngOnInit() {  }\n\n    doClick() {\n        this.click.emit(true);\n    }\n}\n","<span *ngIf='privacyStatus == eDataPrivacyStatus.Internet' class=\"text-primary\"><i  class=\"fa fa-lg fa-globe\" title=\"This item sends data across the internet.\"></i></span>\n<span *ngIf='privacyStatus == eDataPrivacyStatus.Lan' class=\"text-success\"><i class=\"fa fa-lg fa-shield\" title=\"This item sends data to the local network.\" ></i></span>\n<span *ngIf='privacyStatus == eDataPrivacyStatus.Proxy' class=\"text-warning\"><i class=\"fa fa-lg fa-info-circle\" title=\"This item sends data through a proxy server.\" ></i></span>\n<span *ngIf='privacyStatus == eDataPrivacyStatus.NotAllowed' class=\"text-warning\"><i class=\"fa fa-lg fa-stop-circle-o\" title=\"This item is not allowed to send data.\" ></i></span>\n","import { Component, OnInit, Input, OnChanges, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport { SelectQuery, InputColumn, TableColumn, SelectColumn, eSortDirection, Filter, eTypeCode, eCompare } from '../../shared.models';\nimport { DexihInputParameter } from '../../../+hub/hub.models';\nimport { compare } from '../../../+hub/hub.query.models';\nimport { TypeCodes } from '../../../+hub/hub.remote.models';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n    selector: 'query-builder',\n    templateUrl: 'query-builder.component.html',\n    styleUrls: ['./query-builder.component.scss']\n})\n\nexport class QueryBuilderComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() selectQuery: SelectQuery;\n    @Input() columns: TableColumn[];\n    @Input() inputColumns: InputColumn[];\n    @Input() parameters: DexihInputParameter[];\n    @Input() refreshEvent: Observable<void>;\n\n    @Output() hasChanged = new EventEmitter();\n    @Output() onRefreshData = new EventEmitter();\n\n    private _refreshSubscription: Subscription;\n\n    selectColumns: SelectColumn[];\n    sortColumns: any[];\n\n    compare = compare;\n\n    allRows = false;\n    savedRowCount: number;\n    typeCodes = TypeCodes;\n    eCompare = eCompare;\n\n    variables: string[];\n\n    requiresRefresh = false;\n\n    constructor() { }\n\n    ngOnInit() {\n        if (!this.selectQuery) {\n            this.selectQuery = new SelectQuery();\n            this.selectQuery.rows = 100;\n        }\n\n        if (this.selectQuery.sorts) {\n            this.selectQuery.sorts.forEach(sort => {\n                sort.column['runTime'] = sort.column.name + sort.direction;\n            });\n        }\n\n        this._refreshSubscription = this.refreshEvent.subscribe(() => {\n            this.requiresRefresh = false;\n        });\n\n        this.allRows = this.selectQuery.rows < 0 ? true : false;\n    }\n\n    ngOnDestroy() {\n        if (this._refreshSubscription) { this._refreshSubscription.unsubscribe(); }\n    }\n\n    ngOnChanges() {\n        if (this.parameters) {\n            this.variables = this.parameters.map(c => '{' + c.name + '}');\n        }\n        if (this.columns) {\n            this.selectColumns = new Array(this.columns.length);\n            this.sortColumns = new Array(this.columns.length * 2);\n\n            for (let i = 0; i < this.columns.length; i++) {\n                this.selectColumns[i] = { column: this.columns[i], aggregate: null, outputColumn: null };\n\n                let column1 = Object.assign({}, this.columns[i]);\n                column1['details'] = column1.logicalName + ' asc';\n                column1['runTime'] = column1.name + eSortDirection.Ascending;\n                this.sortColumns[i * 2] = { key: column1['details'], column: column1, direction: eSortDirection.Ascending };\n\n                let column2 = Object.assign({}, this.columns[i]);\n                column2['details'] = column2.logicalName + ' desc';\n                column2['runTime'] = column2.name + eSortDirection.Descending;\n                this.sortColumns[i * 2 + 1] = { key: column2['details'], column: column2, direction: eSortDirection.Descending };\n            }\n        }\n    }\n\n    addFilter(index: number) {\n        let filter = new Filter();\n        filter.compareDataType = eTypeCode.String;\n        this.selectQuery.filters.splice(index, 0, filter);\n        this.onChanged();\n    }\n\n    removeFilter(index: number) {\n        this.selectQuery.filters.splice(index, 1);\n        this.onChanged();\n    }\n\n    selectAllRows() {\n        if (this.allRows) {\n            this.selectQuery.rows = this.savedRowCount > 0 ? this.savedRowCount : 100;\n        } else {\n            this.savedRowCount = this.selectQuery.rows;\n            this.selectQuery.rows = -1;\n        }\n        this.onChanged();\n    }\n\n    refreshData() {\n        this.onRefreshData.emit();\n    }\n\n    onChanged() {\n        this.hasChanged.emit();\n        this.requiresRefresh = true;\n    }\n}\n","<div *ngIf=\"selectQuery\">\n    <div class=\"d-flex flex-wrap\" *ngIf=\"selectColumns || sortColumns\">\n        <div class=\"flex-fill\" *ngIf=\"selectColumns\">\n            <form-tags-dropdown floatingLabel=\"Display Columns\" [(ngModel)]=\"selectQuery.columns\" (ngModelChange)=\"onChanged()\" [items]=\"selectColumns\"\n                itemKey=\"column.name\" itemName=\"column.logicalName\" textEntryNote=\"Specify the columns to select.\"\n                [enableAddAll]=\"true\" [returnKeys]=\"false\">\n            </form-tags-dropdown>\n        </div>\n    \n        <div class=\"flex-fill ml-1\" *ngIf=\"sortColumns\">\n            <form-tags-dropdown floatingLabel=\"Sort Columns\" [(ngModel)]=\"selectQuery.sorts\"  (ngModelChange)=\"onChanged()\" [items]=\"sortColumns\" \n            itemKey=\"column.runTime\" itemName=\"column.details\" textEntryNote=\"Specify the columns to sort.\" [enableAddAll]=\"false\" [returnKeys]=\"false\">\n            </form-tags-dropdown>\n        </div>\n    </div>\n\n    <div class=\"d-flex flex-wrap pt-1\" *ngIf=\"inputColumns && inputColumns.length > 0\" >\n        <div class=\"input-group-text\">\n            Default Input Values\n        </div>\n\n        <span *ngFor=\"let column of inputColumns; let i = index\" class=\"input-group pt-1\">\n            <div class=\"input-group-prepend\">\n                <div class=\"input-group-text\">\n                    {{column.logicalName}}\n                </div>\n            </div>\n            <form-input name=\"column{{i}}\" class=\"form-control p-0\" [placeholder]=\"column.logicalName\" [(ngModel)]=\"column.value\" (ngModelChange)=\"onChanged()\"></form-input>\n        </span>\n    </div>\n\n    <div class=\"d-flex flex-wrap pt-1\">\n        <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">\n                Filters\n            </div>\n        </div>\n\n        <form-checkbox class=\"flex-fill pl-1\" label=\"All Rows\" [(ngModel)]=\"allRows\" (ngModelChange)=\"onChanged()\" (click)=\"selectAllRows()\" [border]=\"true\"></form-checkbox>\n        <form-input type=\"number\" class=\"flex-fill pl-1\" *ngIf=\"!allRows\" labelLeft=\"Max Rows\" placeholder=\"Maximum rows...\" title=\"Specify the maximum rows to return\" [(ngModel)]=\"selectQuery.rows\" (ngModelChange)=\"onChanged()\"></form-input>\n        <dexih-button *ngIf=\"selectColumns\" class=\"flex-fill pl-1\" buttonClass=\"btn-outline-primary\" (ngModelChange)=\"onChanged()\" (click)=\"addFilter(0)\">Add Filter</dexih-button>\n    </div>\n\n    <div class=\"d-flex flex-wrap pt-1\" *ngFor=\"let filter of selectQuery.filters; let i = index\">\n        <div class=\"d-flex w-100\">\n            <form-select [(ngModel)]=\"filter.compareDataType\" (ngModelChange)=\"onChanged()\" [border]=\"true\" class=\"flex-fill flex-form pl-1\" [items]=\"typeCodes\" itemName=\"name\" itemKey=\"key\"\n                [enableTextEntry]=\"false\">\n            </form-select>\n\n            <form-select [(ngModel)]=\"filter.column1\" (ngModelChange)=\"onChanged()\" [border]=\"true\" class=\"flex-fill flex-form  pl-1\" [items]=\"columns\" itemKey=\"key\" itemName=\"logicalName\" [enableKeySelect]=\"false\"\n                [(textValue)]=\"filter.value1\" [enableTextEntry]=\"true\"  [setTextEntryToValue]=\"false\" [enableTextEntryMatch]=\"false\" textEntryNote=\"Enter a static value or select a column.\">\n            </form-select>\n\n            <form-select [(ngModel)]=\"filter.operator\" (ngModelChange)=\"onChanged()\" [items]=\"compare\" itemKey=\"key\" itemName=\"name\" [border]=\"true\" class=\"flex-fill  pl-1\">\n            </form-select>\n\n            <form-select *ngIf=\"filter.operator !== eCompare.IsIn && filter.operator !== eCompare.IsNotIn\" [(ngModel)]=\"filter.column2\" [setTextEntryToValue]=\"false\" (ngModelChange)=\"onChanged()\" [border]=\"true\" class=\"flex-fill flex-form  pl-1\" [items]=\"columns\" itemKey=\"key\" itemName=\"logicalName\" [enableKeySelect]=\"false\"\n                [(textValue)]=\"filter.value2\" [enableTextEntry]=\"true\" [enableTextEntryMatch]=\"false\" textEntryNote=\"Enter a static value or select a column.\"\n                [textEntryItems]=\"variables\" textEntryItemsTitle=\"Variables\">\n            </form-select>\n\n            <form-select *ngIf=\"filter.operator === eCompare.IsIn || filter.operator === eCompare.IsNotIn\" [(ngModel)]=\"filter.value2\" [multiSelect]=\"true\" (ngModelChange)=\"onChanged()\" [border]=\"true\" class=\"flex-fill flex-form  pl-1\" [items]=\"[]\"\n                [enableTextEntry]=\"true\" [enableTextEntryMatch]=\"false\" textEntryNote=\"Enter the values.\"\n                [textEntryItems]=\"variables\" textEntryItemsTitle=\"Variables\">\n            </form-select>\n\n            <div class=\"input-group-append\">\n                <div class=\"input-group-text p-0\">\n                    <button type=\"button\" (click)=\"addFilter(i)\" class=\"btn btn-sm border-0 rounded-0 bg-transparent\" value=\"Add\">\n                        <i class=\"fa fa-plus-square-o\"></i>\n                    </button>\n                </div>\n                <div class=\"input-group-text p-0\">\n                    <button type=\"button\" (click)=\"removeFilter(i)\" class=\"btn btn-sm border-0 rounded-0 bg-transparent\" value=\"Remove\">\n                        <i class=\"fa fa-minus-square-o\"></i>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div *ngIf=\"requiresRefresh\" class=\"alert alert-warning mt-2\">\n        <a href=\"javascript:void(0)\" class=\"alert-link\" (click)=\"refreshData()\">The query has changed.  Click to refresh.</a>\n    </div>\n</div>","import {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { QueryBuilderComponent } from './query-builder.component';\nimport { DexihComponentsModule } from 'dexih-ngx-components';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    DexihComponentsModule\n  ],\n  declarations: [\n    QueryBuilderComponent,\n  ],\n  exports: [QueryBuilderComponent],\n})\nexport class QueryBuilderModule {\n\n}\n","import { Component, OnInit, Input, OnChanges, Output, EventEmitter, OnDestroy, SimpleChanges } from '@angular/core';\nimport { AnimateConfig } from '../../shared.models';\nimport { Functions } from '../../../shared/utils/functions';\n\n@Component({\n    selector: 'series-animate',\n    templateUrl: 'series-animate.component.html'\n})\n\nexport class SeriesAnimateComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() showEdit = false;\n    @Input() animateConfig: AnimateConfig;\n    @Input() columns: Array<any>;\n    @Input() baseData: Array<any>;\n    @Input() showFrame = true;\n\n    @Input() data: Array<any>;\n    @Output() dataChange = new EventEmitter<Array<any>>();\n\n    @Output() hasChanged = new EventEmitter();\n\n\n    public animationValues = [];\n    public animationValue;\n    public animationTimer;\n    public animationColumnIndex: number;\n    public animationRowIndex: number;\n    public animationPaused = false;\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n    ngOnDestroy() {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.baseData || changes.columns || changes.animateConfig) {\n            setTimeout(() => {\n                this.initializeAnimation();\n            });\n\n        }\n    }\n\n    onChanged() {\n        this.hasChanged.emit();\n    }\n\n    seriesChanged() {\n        this.initializeAnimation();\n        this.hasChanged.emit();\n    }\n\n    initializeAnimation() {\n        if (this.baseData && this.columns && this.animateConfig && this.animateConfig.seriesColumn) {\n\n            this.animationStop();\n            this.animationSeriesValues();\n            this.animationRowIndex = 0;\n\n            if (this.animateConfig.automatic) {\n                this.animationPlay();\n            } else {\n                this.animationFilter();\n            }\n        } else {\n            this.dataChange.emit(this.baseData);\n        }\n    }\n\n    animationSeriesValues() {\n        this.animationColumnIndex = this.columns.findIndex(c => c.title === this.animateConfig.seriesColumn);\n        const format = this.columns[this.animationColumnIndex].format;\n        const values = Array.from(new Set(this.baseData.map(c => c[this.animationColumnIndex]))).sort((a, b) => {\n            if (a > b) {\n                return 1;\n            }\n            if (a < b) {\n                return -1;\n            }\n            return 0;\n        });\n        this.animationValues = values.map(c => {\n            return {\n                name: Functions.formatValue(c, format),\n                value: c\n            }\n        });\n    }\n\n    animationFilter() {\n        const value = this.animationValues[this.animationRowIndex].value;\n        this.animationValue = value;\n        const data = this.baseData.filter(c => c[this.animationColumnIndex] === value);\n        this.dataChange.emit(data);\n    }\n\n    animationPlay() {\n\n        if (this.animationColumnIndex >= 0) {\n            if (!this.animationPaused) {\n                this.animationRowIndex = 0;\n            }\n            this.animationStop();\n\n            let first = true;\n\n            this.animationTimer = setInterval(() => {\n                if (first) {\n                    first = false;\n                } else {\n                    this.animationRowIndex++;\n                }\n\n                if (this.animationRowIndex + 1 >= this.animationValues.length) {\n                    clearInterval(this.animationTimer);\n                } else {\n                    this.animationFilter();\n\n                    // at last item, then stop.\n                    if (this.animationRowIndex + 1 >= this.animationValues.length) {\n                        clearInterval();\n                    }\n                }\n            }, this.animateConfig.delay);\n\n        } else {\n            //   this.hubService.addHubErrorMessage('The animation did not start as a series column is not set.');\n        }\n    }\n\n    animationPause() {\n        if (this.animationTimer) {\n            this.animationPaused = true;\n            clearInterval(this.animationTimer);\n        }\n    }\n\n    animationStepForward() {\n        if (this.animationRowIndex + 1 < this.animationValues.length) {\n            this.animationRowIndex++;\n            this.animationFilter();\n        }\n    }\n\n    animationStepBackward() {\n        if (this.animationRowIndex > 0) {\n            this.animationRowIndex--;\n            this.animationFilter();\n        }\n    }\n\n    animationLast() {\n        if (this.animationRowIndex + 1 < this.animationValues.length) {\n            this.animationRowIndex = this.animationValues.length - 1;\n            this.animationFilter();\n        }\n    }\n\n    animationFirst() {\n        if (this.animationRowIndex > 0) {\n            this.animationRowIndex = 0;\n            this.animationFilter();\n        }\n    }\n\n    animationChange($event) {\n        this.animationRowIndex = this.animationValues.findIndex(c => c.value === $event);\n        this.animationFilter();\n    }\n\n    animationStop() {\n        this.animationPaused = false;\n        if (this.animationTimer) {\n            clearInterval(this.animationTimer);\n        }\n    }\n}\n","<div *ngIf=\"animateConfig && (showEdit || animateConfig.seriesColumn)\">\n<dexih-widget-section *ngIf=\"showFrame\"  title=\"Series Animation\" [showExpandButton]=\"true\">\n    <ng-template [ngTemplateOutlet]=\"animate\"></ng-template>\n</dexih-widget-section>\n\n<div *ngIf=\"!showFrame\">\n    <ng-template [ngTemplateOutlet]=\"animate\"></ng-template>\n</div>\n\n</div>\n\n<ng-template #animate>\n    <div  *ngIf=\"showEdit\" class=\"d-flex flex-wrap\">\n        <div class=\"flex-fill\">\n            <form-select [(ngModel)]=\"animateConfig.seriesColumn\" labelLeft=\"Series\" [allowNullSelect]=\"true\" selectNullMessage=\"Turn off animation\"\n                [items]=\"columns\" itemKey=\"title\" itemName=\"title\" (ngModelChange)=\"seriesChanged()\">\n            </form-select>\n        </div>\n\n        <div class=\"flex-fill pl-1\">\n            <form-checkbox label=\"Automatic Start\" [(ngModel)]=\"animateConfig.automatic\" [border]=\"true\" (ngModelChange)=\"onChanged()\"></form-checkbox>\n        </div>\n\n        <div class=\"flex-fill pl-1\" >\n            <form-input type=\"number\" [(ngModel)]=\"animateConfig.delay\" (ngModelChange)=\"onChanged()\" labelLeft=\"Delay (ms)\"></form-input>\n        </div>\n    </div>\n\n    <div *ngIf=\"animateConfig.seriesColumn\" class=\"d-flex flex-wrap mt-1\">\n        <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"animationFirst()\"><i class=\"fa fa-fast-backward\"></i></button>\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"animationStepBackward()\"><i class=\"fa fa-step-backward\"></i></button>\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"animationPause()\"><i class=\"fa fa-pause\"></i></button>\n            <!-- <button type=\"button\" class=\"btn btn-secondary\" (click)=\"animationStop()\"><i class=\"fa fa-stop\"></i></button> -->\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"animationPlay()\"><i class=\"fa fa-play\"></i></button>\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"animationStepForward()\"><i class=\"fa fa-step-forward\"></i></button>\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"animationLast()\"><i class=\"fa fa-fast-forward\"></i></button>\n            <form-select class=\"ml-1\" [items]=\"animationValues\" [(ngModel)]=\"animationValue\" (ngModelChange)=\"animationChange($event)\" itemKey=\"value\" itemName=\"name\" >\n            </form-select>\n        </div>\n    </div>\n</ng-template>","import {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SeriesAnimateComponent } from './series-animate.component';\nimport { DexihComponentsModule } from 'dexih-ngx-components';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    DexihComponentsModule\n  ],\n  declarations: [\n    SeriesAnimateComponent,\n  ],\n  exports: [SeriesAnimateComponent],\n})\nexport class SeriesAnimateModule {\n\n}\n","export { SharedDataComponent } from './sharedData.component';\nexport { PreviewDataComponent } from './preview-data/preview-data.component';\nexport { PreviewDashboardComponent} from './preview-dashboard/preview-dashboard.component';\nexport { PreviewDashboardItemComponent } from './preview-dashboard/preview-dashboard-item.component';\nexport { PreviewComponent } from './preview/preview.component';\nexport { InputParametersViewComponent } from './input-parameters-view/input-parameters-view.component';","import { Component, OnInit, Input, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { DexihListOfValues, InputParameterBase, eDataObjectType, ListOfValuesItem } from '../../../shared.models';\nimport { Subscription, Observable } from 'rxjs';\nimport { CancelToken } from '../../../../+auth/auth.models';\nimport { AuthService } from '../../../../+auth/auth.service';\n\n@Component({\n    selector: 'input-parameters-view',\n    templateUrl: 'input-parameters-view.component.html'\n})\nexport class InputParametersViewComponent implements OnInit, OnDestroy {\n    @Input() hubKey: number;\n    @Input() objectType: eDataObjectType;\n    @Input() objectKey: number;\n    @Input() parameters: InputParameterBase[];\n    @Input() refreshEvent: Observable<void>;\n    @Output() onChange = new EventEmitter();\n    @Output() onRefreshData = new EventEmitter();\n\n    private _hubSubscription: Subscription;\n    private _refreshSubscription: Subscription;\n\n    public parentParams: string[] = [];\n    public values: ListOfValuesItem[] = [];\n    public listOfValues: Array<DexihListOfValues>;\n\n    public cancelToken: CancelToken = new CancelToken();\n\n    public userParameters: InputParameterBase[];\n\n    public requiresRefresh = false;\n\n    public showRefresh = false;\n    public isRefreshing = false;\n\n    constructor(private authService: AuthService) { }\n\n    ngOnInit() {\n        this.userParameters = [];\n        this.parameters.filter(c => c.isValid && c.allowUserSelect).forEach((parameter: InputParameterBase) => {\n            parameter['runTime'] = {showRefresh: parameter.listOfValuesKey > 0, isRefreshing: false, items: []};\n            if (parameter.value && parameter.listOfValuesKey && parameter.rank === 0) {\n                parameter['runTime'].items = [{key: parameter.value, name: parameter.valueDesc}];\n            }\n\n            this.userParameters.push(parameter);\n        });\n\n        this._refreshSubscription = this.refreshEvent.subscribe(() => {\n            this.requiresRefresh = false;\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._hubSubscription) { this._hubSubscription.unsubscribe(); }\n        if (this._refreshSubscription) { this._refreshSubscription.unsubscribe(); }\n    }\n\n    refresh(parameter: InputParameterBase) {\n        if (!parameter.listOfValuesKey) { return; }\n        parameter['runTime'].isRefreshing = true;\n        this.authService.previewListOfValues(this.hubKey, this.objectKey, this.objectType,\n            parameter.name, false, this.cancelToken).then(result => {\n            parameter['runTime'].items = result;\n            parameter['runTime'].showRefresh = false;\n        }).catch(reason => {\n            this.authService.addUpdateNotification(reason, false);\n        }).finally(() => {\n            parameter['runTime'].isRefreshing = false;\n        });\n    }\n\n    refreshData() {\n        this.onRefreshData.emit();\n    }\n\n    change(parameter: InputParameterBase) {\n        if (parameter.listOfValuesKey > 0) {\n            this.onChange.emit();\n        } else {\n            this.requiresRefresh = true;\n        }\n    }\n}\n","<div *ngIf=\"parameters\" class=\"d-flex flex-wrap\">\n    <div *ngFor=\"let parameter of userParameters; let i = index\" class=\"pr-1\">\n        <form-select *ngIf=\"parameter.listOfValuesKey > 0\" [labelLeft]=\"parameter.name\" [(ngModel)]=\"parameter.value\"\n            itemKey=\"key\" itemName=\"name\" [items]=\"parameter.runTime.items\"\n            [enableTextEntry]=\"! (parameter.listOfValuesKey > 0)\" [textEntryItems]=\"parentParams\"\n            textEntryItemsTitle=\"Linked Parameters\" (ngModelChange)=\"change(parameter)\"\n            [showRefresh]=\"parameter.runTime.showRefresh\" [isRefreshing]=\"parameter.runTime.isRefreshing\"\n            (onRefresh)=\"refresh(parameter)\" [multiSelect]=\"parameter.rank === 1\">\n        </form-select>\n        <form-input *ngIf=\"!( parameter.listOfValuesKey > 0)\" [labelLeft]=\"parameter.name\" [(ngModel)]=\"parameter.value\"\n            (ngModelChange)=\"change(parameter)\">\n        </form-input>\n    </div>\n</div>\n<div *ngIf=\"requiresRefresh\" class=\"alert alert-warning mt-2\">\n    <a href=\"javascript:void(0)\" class=\"alert-link\" (click)=\"refreshData()\">The parameters have changed. Click to\n        refresh.</a>\n</div>\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { DexihDashboardItem, eDataObjectType, InputParameter, InputParameterBase } from '../../../shared.models';\n\n@Component({\n    selector: 'preview-dashboard-item',\n    templateUrl: 'preview-dashboard-item.component.html',\n    styleUrls: ['./preview-dashboard-item.component.scss']\n\n})\n\nexport class PreviewDashboardItemComponent implements OnInit {\n    @Input() hubKey: number;\n    @Input() item: DexihDashboardItem;\n    @Input() refreshData: EventEmitter<string>;\n    @Input() isMaximized = false;\n    @Input() parentParameters: InputParameterBase[];\n    @Output() onMaximize = new EventEmitter<boolean>();\n\n    eDataObjectType = eDataObjectType;\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n\n    // public refresh() {\n    //     let data = <DataCache> this.item['data'];\n    //     let view = this.hubCache.hub.dexihViews.find(c => c.key === this.item.controls.viewKey.value);\n    //     view = Object.assign({}, view);\n    //     view.parameters = this.item.controls.parameters.value;\n    //     if (view) {\n    //         let preview = this.hubService.previewView(view, view.inputValues,\n    //                 this.formsService.currentForm.controls.parameters.value, this.cancelToken);\n    //         data.refresh(preview);\n    //     }\n    // }\n\n    public maximize($event) {\n        this.onMaximize.emit($event);\n    }\n}\n","<div class=\"box\">\n\n    <div *ngIf=\"item.header\" class=\"box-header\">\n        <div class=\"p-3 bg-secondary text-white\">\n            <b>{{item.name}}</b>\n        </div>\n    </div>\n\n    <div *ngIf=\"item.description\" class=\"box-header\">\n        <div class=\"m-1\">\n            <ngx-md [data]=\"item.description\"></ngx-md>\n        </div>\n    </div>\n\n    <dexih-message #DexihMessage></dexih-message>\n\n    <div class=\"box-content\">\n        <preview-data [hubKey]=\"hubKey\" [parentParameters]=\"parentParameters\"\n            [objectType]=\"eDataObjectType.DashboardItem\" [objectKey]=\"item.key\" [showToolbar]=\"true\"\n            (onMaximize)=\"maximize($event)\"></preview-data>\n    </div>\n</div>","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { Subscription, combineLatest, Subject} from 'rxjs';\nimport { DexihMessageComponent } from '../../../../shared/ui/dexihMessage/index';\nimport { CancelToken } from '../../../../+auth/auth.models';\nimport { InputColumn, DexihColumnBase, DexihDashboard,\n    DexihActiveAgent, InputParameterBase, eDataObjectType } from '../../../shared.models';\nimport { GridsterConfig, GridType, CompactType, DisplayGrid, GridsterItem, GridsterItemComponent } from 'angular-gridster2';\n\n@Component({\n\n    selector: 'preview-dashboard',\n    templateUrl: './preview-dashboard.component.html',\n    styleUrls: ['./preview-dashboard.component.scss']\n})\nexport class PreviewDashboardComponent implements OnInit, OnDestroy {\n    @ViewChild('DexihMessage', { static: true }) public dexihMessage: DexihMessageComponent;\n\n    private _subscription: Subscription;\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    private refreshDataSubject: Subject<void> = new Subject<void>();\n\n    public inputColumns: InputColumn[];\n    public tableColumns: DexihColumnBase[];\n\n    public name = 'loading...';\n\n    dashboardKey: number;\n    hubKey: number;\n    eDataObjectType = eDataObjectType;\n\n    dashboard: DexihDashboard = null;\n    activeAgent: DexihActiveAgent;\n    maximizedIndex: number;\n\n    public options: GridsterConfig;\n    public parameters: InputParameterBase[];\n\n    private cancelToken = new CancelToken();\n\n    constructor(\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.params,\n                this.authService.getSharedDataIndex('', [], 50, false)\n            ).subscribe(result => {\n                let params = result[0];\n\n                this.hubKey = +params['hubKey'];\n                this.dashboardKey = +params['dashboardKey'];\n\n                this.refresh();\n            });\n        } catch (e) {\n            this.dexihMessage.addMessage(e);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    parameterChange() {\n        this.refresh();\n    }\n\n    refresh() {\n        this.authService.getDashboard(this.hubKey, this.dashboardKey).then((dashboard) => {\n            this.refreshDataSubject.next();\n\n            this.setOptions(dashboard);\n            this.dashboard = dashboard;\n            this.name = dashboard.name;\n            if (!this.parameters) {\n                this.parameters = dashboard.parameters;\n            }\n\n        }).catch(reason => {\n            this.dexihMessage.addMessage(reason);\n            this.dashboard = null;\n        });\n    }\n\n    private setOptions(dashboard: DexihDashboard) {\n        this.options = {\n            gridType: GridType.ScrollVertical,\n            compactType: CompactType.None,\n            margin: 5,\n            outerMargin: true,\n            outerMarginTop: null,\n            outerMarginRight: null,\n            outerMarginBottom: null,\n            outerMarginLeft: null,\n            useTransformPositioning: true,\n            mobileBreakpoint: 640,\n            minCols: dashboard.minCols,\n            maxCols: dashboard.maxCols,\n            minRows: dashboard.minRows,\n            maxRows: dashboard.maxRows,\n            maxItemCols: 100,\n            minItemCols: 1,\n            maxItemRows: 100,\n            minItemRows: 1,\n            maxItemArea: 2500,\n            minItemArea: 1,\n            defaultItemCols: 2,\n            defaultItemRows: 2,\n            fixedColWidth: 105,\n            fixedRowHeight: 105,\n            keepFixedHeightInMobile: false,\n            keepFixedWidthInMobile: false,\n            scrollSensitivity: 10,\n            scrollSpeed: 20,\n            enableEmptyCellClick: false,\n            enableEmptyCellContextMenu: false,\n            enableEmptyCellDrop: false,\n            enableEmptyCellDrag: false,\n            emptyCellDragMaxCols: 50,\n            emptyCellDragMaxRows: 50,\n            ignoreMarginInRow: false,\n            // setGridSize: true,\n            draggable: {\n              enabled: false,\n            },\n            resizable: {\n              enabled: false,\n            },\n            swap: false,\n            pushItems: true,\n            disablePushOnDrag: false,\n            disablePushOnResize: false,\n            pushDirections: {north: true, east: true, south: true, west: true},\n            pushResizeItems: false,\n            displayGrid: DisplayGrid.None,\n            disableWindowResize: false,\n            disableWarnings: false,\n            scrollToNewItems: false,\n            itemChangeCallback: (item, itemComponent: GridsterItemComponent) => {\n            this.itemResize(item, itemComponent);\n            },\n            itemResizeCallback: (item, itemComponent: GridsterItemComponent) => {\n            this.itemResize(item, itemComponent);\n            },\n            itemInitCallback: (item, itemComponent: GridsterItemComponent) => {\n            this.itemResize(item, itemComponent);\n            },\n          };\n    }\n\n    maximize(isMaximized: boolean, index: number) {\n        if (isMaximized) {\n            this.maximizedIndex = index;\n        } else {\n            this.maximizedIndex = -1;\n        }\n      }\n\n      public itemResize(item: GridsterItem, itemComponent: GridsterItemComponent) {\n        // console.debug(`top: ${itemComponent.el.clientTop}, left: ${itemComponent.el.clientLeft},\n        // width: ${itemComponent.el.clientWidth}, height: ${itemComponent.el.clientHeight}`)\n      }\n\n    // downloadData(format: eDownloadFormat) {\n    //     let sharedData = new SharedData();\n    //     sharedData.objectKey = this.dashboardKey;\n    //     sharedData.objectType = this.objectType;\n    //     sharedData.hubKey = this.hubKey;\n    //     sharedData.inputColumns = this.inputColumns;\n    //     sharedData.query = this.selectQuery;\n\n    //     this.hubsService.downloadData([sharedData], true, format, this.cancelToken).then(() => {\n    //         this.dexihMessage.addSuccessMessage('The download task has started.');\n    //     }).catch(reason => {\n    //         this.dexihMessage.addMessage(reason);\n    //     });\n    // }\n\n    edit() {\n        this.router.navigate(['hub', this.hubKey, 'dashboards', 'dashboard-edit', this.dashboardKey]);\n    }\n}\n","<div class=\"container-fluid\">\n    <dexih-message #DexihMessage></dexih-message>\n\n    <dexih-widget [title]=\"'Preview ' + name\" iconClass=\"fa fa-lg fa-fw fa-table\" [showCloseButton]=\"true\"\n        (close)=\"close()\">\n\n        <ng-template #header>\n            <dexih-button-refresh (click)=\"refresh()\" text=\"Reload\"></dexih-button-refresh>\n            <dexih-button-edit class=\"ml-1\"  (click)=\"edit()\"></dexih-button-edit>\n        </ng-template>\n\n        <div *ngIf=\"parameters\" class=\"m-3\">\n            <input-parameters-view [hubKey]=\"hubKey\" [objectType]=\"eDataObjectType.Dashboard\" [objectKey]=\"dashboardKey\" [parameters]=\"parameters\" [refreshEvent]=\"refreshDataSubject.asObservable()\" (onRefreshData)=\"refresh()\" (onChange)=\"parameterChange()\"></input-parameters-view>\n        </div>\n        \n        <div>\n            <div style=\"height:800px\">\n                <ng-template [ngIf]=\"dashboard\">\n                    <gridster [options]=\"options\" #gridster>\n                        <gridster-item [item]=\"{x: item.x, y: item.y, cols: item.cols, rows: item.rows, control: item}\"\n                            *ngFor=\"let item of dashboard.dexihDashboardItems; let i = index;\" \n                            [ngClass]=\"{'maximize': i === maximizedIndex}\" [hidden]=\"maximizedIndex >= 0 && i !== maximizedIndex\">\n                            <preview-dashboard-item [hubKey]=\"hubKey\" [item]=\"item\" [parentParameters]=\"parameters\" (onMaximize)=\"maximize($event, i)\" >\n                            </preview-dashboard-item>\n                        </gridster-item>\n                    </gridster>\n                </ng-template>\n            </div>\n        </div>\n    </dexih-widget>\n</div>","import { Component, OnDestroy, OnInit, ViewChild, Input, Output, EventEmitter } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { Subscription, combineLatest, Subject} from 'rxjs';\nimport { DexihMessageComponent } from '../../../../shared/ui/dexihMessage/index';\nimport { CancelToken, Message } from '../../../../+auth/auth.models';\nimport { InputColumn, DexihColumnBase, SelectQuery, eDownloadFormat, SharedData, eDataObjectType,\n    ViewConfig, InputParameterBase, eViewType } from '../../../shared.models';\n\n@Component({\n\n    selector: 'preview-data',\n    templateUrl: './preview-data.component.html',\n})\nexport class PreviewDataComponent implements OnInit, OnDestroy {\n    @Input() public objectType: eDataObjectType;\n    @Input() public objectKey: number;\n    @Input() public hubKey: number;\n    @Input() parentParameters: InputParameterBase[]; // parameters passed from parent\n    @Input() public showToolbar = false;\n    @Input() public updateQueryParameters = true;\n    @Input() isMaximized = false;\n    @Output() onMaximize = new EventEmitter<boolean>();\n\n    private _subscription: Subscription;\n\n    private refreshDataSubject: Subject<void> = new Subject<void>();\n\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    public inputColumns: InputColumn[];\n    public tableColumns: DexihColumnBase[];\n    public userParameters: InputParameterBase[]; // parameters that can be edited by user\n    public parameters: InputParameterBase[]; // combined parameters\n\n    public name = 'loading...';\n\n    columns: Array<any>;\n    selectQuery: SelectQuery = new SelectQuery();\n\n    public baseData: Array<any>;\n    public data: Array<any>;\n    public viewConfig: ViewConfig;\n    public showChart = false;\n\n    public eViewType = eViewType;\n\n    private cancelToken = new CancelToken();\n\n    constructor(\n        private authService: AuthService,\n        private route: ActivatedRoute ) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.authService.getSharedDataObject(this.hubKey, this.objectType, this.objectKey),\n                this.route.queryParams\n            ).subscribe(result => {\n                let object = result[0];\n                let queryParams = result[1];\n\n                if (object != null) {\n                    this.inputColumns = object.inputColumns;\n                    this.tableColumns = object.outputColumns;\n                    this.parameters = object.parameters;\n                    this.userParameters = this.parameters;\n\n                    let p = queryParams['p'];\n                    if (p) {\n                        let paramValues = JSON.parse(p);\n\n                        for (let parameter of this.userParameters) {\n                            let value = paramValues[parameter.name];\n                            if (value !== undefined) {\n                                parameter.value = value;\n                                if (parameter.rank === 0) {\n                                    parameter.valueDesc = value;\n                                }\n                            }\n                        }\n                    }\n                } else {\n                    this.parameters = [];\n                }\n\n                this.refresh();\n            });\n        } catch (e) {\n            this.authService.addUpdateNotification(e, false);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    public parameterChange() {\n            // update the query parameters so page refresh will be the same.\n        if (this.updateQueryParameters && this.userParameters.length > 0) {\n            let parameters = {};\n            for (let parameter of this.userParameters) {\n                parameters[parameter.name] = parameter.value;\n            }\n\n            if ('URLSearchParams' in window) {\n                let searchParams = new URLSearchParams(window.location.search)\n                searchParams.set('p', JSON.stringify(parameters));\n                let newRelativePathQuery = window.location.pathname + '?' + searchParams.toString();\n                history.pushState(null, '', newRelativePathQuery);\n            }\n        }\n\n        this.refresh();\n    }\n\n    public refresh() {\n        this.authService.previewData(this.hubKey, this.objectKey, this.objectType, this.inputColumns, this.selectQuery,\n            this.parameters, this.parentParameters, this.cancelToken).then((result) => {\n                this.refreshDataSubject.next();\n                this.columns = result.columns;\n                this.baseData = result.data;\n                this.name = result.name;\n                this.viewConfig = result.viewConfig;\n                if (!this.viewConfig) {\n                    this.data = this.baseData;\n                }\n                if (this.viewConfig && this.viewConfig.viewType === eViewType.Chart) {\n                    this.showChart = true;\n                } else {\n                    this.showChart = false;\n                }\n\n                if (result.status) {\n                    // this.dexihMessage.addMessage(result.status);\n                    this.authService.addUpdateNotification(result.status, false);\n                }\n            }).catch(reason => {\n                this.authService.addUpdateNotification(reason, false);\n                this.baseData = [];\n                this.data = [];\n                this.name = 'failed';\n            });\n    }\n\n    public downloadData(format: eDownloadFormat) {\n        let sharedData = new SharedData();\n        sharedData.objectKey = this.objectKey;\n        sharedData.objectType = this.objectType;\n        sharedData.hubKey = this.hubKey;\n        sharedData.inputColumns = this.inputColumns;\n        sharedData.parameters = this.parameters;\n        sharedData.parentParameters = this.parentParameters;\n        sharedData.query = this.selectQuery;\n\n        this.authService.downloadData([sharedData], true, format, this.cancelToken).then(() => {\n            let message = new Message(true, 'The download task has started.', null, null);\n            this.authService.addUpdateNotification(message, false);\n        }).catch(reason => {\n            this.authService.addUpdateNotification(reason, false);\n        });\n    }\n\n    public maximize() {\n        this.isMaximized = true;\n        this.onMaximize.emit(true);\n    }\n\n    public minimize() {\n        this.isMaximized = false;\n        this.onMaximize.emit(false);\n    }\n\n}\n","<div *ngIf=\"showToolbar\" class=\"side-menu\">\n    <div class=\"side-menu-content\">\n        <div class=\"spin-icon\">\n            <i class=\"fa fa-cog fa-spin\"></i>\n        </div>\n        <div class=\"side-menu-box\">\n            <div class=\"bg-light rounded p-1\">\n                <div>\n                    <download-button (download)=\"downloadData($event)\"></download-button>\n\n                    <div *ngIf=\"viewConfig?.viewType === eViewType.Chart\" class=\"btn-group btn-group-toggle ml-1\"\n                        data-toggle=\"buttons\" title=\"Table\">\n                        <label class=\"btn btn-primary\" [ngClass]=\"{active: showChart===false}\">\n                            <input type=\"radio\" name=\"options\" value=\"table\" autocomplete=\"off\"\n                                (click)=\"showChart = false\">\n                            <i class=\"fa fa-table\"></i>\n                        </label>\n                        <label class=\"btn btn-primary\" [ngClass]=\"{active: showChart===true}\" title=\"Chart\">\n                            <input type=\"radio\" name=\"options\" value=\"chart\" autocomplete=\"off\"\n                                (click)=\"showChart = true\">\n                            <i class=\"fa fa-bar-chart\"></i>\n                        </label>\n                    </div>\n                    <dexih-button-refresh class=\"ml-1\" [compact]=\"true\" (click)=\"refresh()\"></dexih-button-refresh>\n                    <dexih-button *ngIf=\"!isMaximized\" class=\"ml-1\" buttonClass=\"btn btn-primary\"\n                        iconClass=\"fa fa-window-maximize text-white\" (click)=\"maximize()\" tooltip=\"Maximize window\">\n                    </dexih-button>\n                    <dexih-button *ngIf=\"isMaximized\" class=\"ml-1\" buttonClass=\"btn btn-primary\"\n                        iconClass=\"fa fa-window-minimize text-white\" (click)=\"minimize()\" tooltip=\"Minimize window\">\n                    </dexih-button>\n                </div>\n\n                <div *ngIf=\"userParameters && userParameters.length > 0\" class=\"m-1\">\n                    <input-parameters-view [hubKey]=\"hubKey\" [objectType]=\"objectType\" [objectKey]=\"objectKey\"\n                        [parameters]=\"userParameters\" [refreshEvent]=\"refreshDataSubject.asObservable()\"\n                        (onRefreshData)=\"refresh()\" (onChange)=\"parameterChange()\"></input-parameters-view>\n                </div>\n\n                <div *ngIf=\"viewConfig && baseData\" class=\"m-1\">\n                    <series-animate [showEdit]=\"false\" [showFrame]=\"false\" [animateConfig]=\"viewConfig.animateConfig\"\n                        [columns]=\"columns\" (hasChanged)=\"hasChanged()\" [baseData]=\"baseData\" [(data)]=\"data\">\n                    </series-animate>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<div *ngIf=\"!data\" class=\"m-3\">\n    <div class=\"dexih-loader\"></div> &nbsp; &nbsp; Loading ...\n</div>\n\n<div *ngIf=\"!showToolbar && baseData\" class=\"d-flex\">\n    <div *ngIf=\"viewConfig?.chartConfig\" class=\"align-self-start btn-group btn-sm btn-group-toggle\" data-toggle=\"buttons\" title=\"Table\">\n        <label class=\"btn btn-primary\" [ngClass]=\"{active: showChart===false}\">\n            <input type=\"radio\" name=\"options\" value=\"table\" autocomplete=\"off\" (click)=\"showChart = false\">\n            <i class=\"fa fa-table\"></i>\n        </label>\n        <label class=\"btn btn-primary\" [ngClass]=\"{active: showChart===true}\" title=\"Chart\">\n            <input type=\"radio\" name=\"options\" value=\"chart\" autocomplete=\"off\" (click)=\"showChart = true\">\n            <i class=\"fa fa-bar-chart\"></i>\n        </label>\n    </div>\n\n    <div *ngIf=\"userParameters && userParameters.length > 0\" class=\"mt-1\">\n        <input-parameters-view [hubKey]=\"hubKey\" [objectType]=\"objectType\" [objectKey]=\"objectKey\"\n            [parameters]=\"userParameters\" [refreshEvent]=\"refreshDataSubject.asObservable()\" (onRefreshData)=\"refresh()\"\n            (onChange)=\"parameterChange()\">\n        </input-parameters-view>\n    </div>\n\n    <div *ngIf=\"viewConfig && baseData\">\n        <series-animate [showEdit]=\"false\" [showFrame]=\"false\" [animateConfig]=\"viewConfig.animateConfig\"\n            [columns]=\"columns\" (hasChanged)=\"hasChanged()\" [baseData]=\"baseData\" [(data)]=\"data\">\n        </series-animate>\n    </div>\n</div>\n\n<div class=\"h-100 box\" *ngIf=\"data\">\n    <div class=\"box-content\" style=\"height: 90vh;\">\n\n        <dexih-table *ngIf=\"!showChart\" [enableMultiSelect]=\"false\" [enableSaveCsv]=\"true\" [csvFileName]=\"name\"\n            [enableFilter]=\"false\" [columns]=\"columns\" [data]=\"data\">\n\n            <ng-template #actions let-items=\"items\">\n            </ng-template>\n\n            <ng-template #tableHeader>\n            </ng-template>\n\n        </dexih-table>\n\n        <chart-view *ngIf=\"showChart\" [responsive]=\"true\" [columns]=\"columns\" [data]=\"data\"\n            [config]=\"viewConfig.chartConfig\">\n        </chart-view>\n    </div>\n</div>","import { Component, OnDestroy, OnInit, ViewChild, Input, AfterViewChecked, OnChanges, AfterContentChecked } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { DexihMessageComponent } from '../../../ui/dexihMessage/index';\nimport { eDataObjectType } from '../../../shared.models';\nimport { PreviewDataComponent} from '../preview-data/preview-data.component';\n\n@Component({\n\n    selector: 'preview',\n    templateUrl: './preview.component.html'\n})\nexport class PreviewComponent implements OnInit, OnDestroy, AfterContentChecked {\n    @ViewChild('DexihMessage', { static: true }) public dexihMessage: DexihMessageComponent;\n    @ViewChild('PreviewData', { static: false }) public previewData: PreviewDataComponent;\n\n    private _subscription: Subscription;\n\n\n    objectKey: number;\n    objectType: eDataObjectType;\n    hubKey: number;\n    embed = false; // removes frames from data.\n\n    title = '';\n\n    constructor(\n        private authService: AuthService,\n        private route: ActivatedRoute,\n        private router: Router) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.params,\n                this.route.queryParams\n            ).subscribe(result => {\n                let params = result[0];\n                let queryParams = result[1];\n\n                this.hubKey = +params['hubKey'];\n                this.objectType = +params['objectType'];\n                this.objectKey = +params['objectKey'];\n\n                if (queryParams['embed'] === 'true') {\n                    this.embed = true;\n                }\n            });\n        } catch (e) {\n            this.dexihMessage.addMessage(e);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    // use aftercontentchecked to stop\n    ngAfterContentChecked(): void {\n        if (this.previewData) {\n            this.title = this.previewData.name;\n        }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    edit() {\n        switch (this.objectType) {\n            case eDataObjectType.Datalink:\n                this.router.navigate(['hub', this.hubKey, 'datalinks', 'datalink-edit', 'edit', this.objectKey]);\n                break;\n            case eDataObjectType.Table:\n                this.router.navigate(['hub', this.hubKey, 'tables', 'table-edit', this.objectKey]);\n                break;\n            case eDataObjectType.View:\n                this.router.navigate(['hub', this.hubKey, 'views', 'view-edit', this.objectKey]);\n                break;\n        }\n    }\n\n}\n","<div *ngIf=\"!embed\" class=\"container-fluid\">\n    <dexih-widget [title]=\"'Preview ' + title\" iconClass=\"fa fa-lg fa-fw fa-table\" [showCloseButton]=\"true\"\n        [padding]=\"false\" (close)=\"close()\">\n\n        <ng-template #header>\n            <dexih-button-refresh class=\"mr-1\" (click)=\"previewData.refresh()\" text=\"Reload\"></dexih-button-refresh>\n            <download-button class=\"ml-1\" (download)=\"previewData.downloadData($event)\"></download-button>\n            <dexih-button-edit class=\"ml-1\" (click)=\"edit()\"></dexih-button-edit>\n\n\n        </ng-template>\n\n            <preview-data #PreviewData [hubKey]=\"hubKey\" [objectType]=\"objectType\" [objectKey]=\"objectKey\" [parameters]=\"parameters\" [updateQueryParameters]=\"true\">\n            </preview-data>\n    </dexih-widget>\n</div>\n\n<div *ngIf=\"embed\">\n    <preview-data [hubKey]=\"hubKey\" [objectType]=\"objectType\" [objectKey]=\"objectKey\" [parameters]=\"parameters\" [updateQueryParameters]=\"false\"></preview-data>\n</div>","import {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedDataComponent, PreviewDataComponent, PreviewDashboardComponent, PreviewDashboardItemComponent,\n  PreviewComponent, InputParametersViewComponent} from './';\nimport { DexihComponentsModule } from 'dexih-ngx-components';\nimport { DexihTableModule} from 'dexih-ngx-table';\nimport { ChartBuilderModule } from '../charts/charts.module';\nimport { GridsterModule} from 'angular-gridster2';\nimport { DexihMessageModule } from '../dexihMessage';\nimport { DexihIconsModule } from '../icons';\nimport { SeriesAnimateModule} from '../seriesAnimate/series-animate.module';\nimport { NgxMdModule } from 'ngx-md';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DexihComponentsModule,\n    DexihTableModule,\n    ChartBuilderModule,\n    GridsterModule,\n    DexihMessageModule,\n    DexihIconsModule,\n    SeriesAnimateModule,\n    NgxMdModule.forRoot()\n  ],\n  declarations: [\n    SharedDataComponent, PreviewDataComponent, PreviewDashboardComponent, PreviewDashboardItemComponent, PreviewComponent,\n    InputParametersViewComponent\n  ],\n  exports: [],\n})\nexport class SharedDataModule {\n\n}\n","import { FormGroup, FormBuilder } from '@angular/forms';\nimport { DexihMessageComponent } from '../dexihMessage';\nimport { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { DexihHubAuth, CancelToken } from '../../../+auth/auth.models';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { eDownloadFormat, SharedData, eSharedObjectType, eDataObjectType, DexihTag } from '../../shared.models';\n\n@Component({\n    selector: 'sharedData',\n    templateUrl: './sharedData.component.html',\n})\nexport class SharedDataComponent implements OnInit, OnDestroy {\n    @ViewChild('DexihMessage', { static: true }) public dexihMessage: DexihMessageComponent;\n\n    public _subscription: Subscription;\n    public _searchSubscription: Subscription;\n    public searchForm: FormGroup;\n    private cancelToken = new CancelToken();\n\n    eDownloadFormat = eDownloadFormat;\n\n    embedLink: string;\n    embedFrame: string;\n\n    hubs: DexihHubAuth[];\n    hubKeys: number[];\n    tags: DexihTag[];\n\n    columns = [\n        { name: 'logicalName', title: 'Details', header: 'hubName', footer: 'description', format: 'Md', tags: 'tags' },\n        { name: 'objectType', title: 'Type', format: 'Enum', enum: eDataObjectType},\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    public dataIndex: SharedData[] = null;\n\n    constructor(private authService: AuthService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private fb: FormBuilder) { }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.params,\n                this.authService.getHubsObservable()\n            ).subscribe(result => {\n                let params = result[0];\n                this.hubs = result[1];\n\n                if (this.hubs) {\n                    this.hubKeys = this.hubs.map(c => c.hubKey);\n                }\n\n                this.searchForm = this.fb.group({\n                    'searchString': ['', [\n                    ]],\n                    'hubKeys': [[], [\n                    ]],\n                });\n\n                this.updateSearch();\n\n                if (this._searchSubscription) { this._searchSubscription.unsubscribe(); }\n                this._searchSubscription = this.searchForm.valueChanges\n                    .pipe(debounceTime(500))\n                    .subscribe(() => {\n                        this.updateSearch();\n                    });\n            });\n        } catch (e) {\n            this.dexihMessage.addErrorMessage(e.message);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    updateSearch() {\n        let hubKeys = <number[]>this.searchForm.value.hubKeys;\n        this.authService.getSharedDataIndex(this.searchForm.value.searchString, hubKeys, 50, true).then(result => {\n\n            this.dataIndex = result.filter(c => c.objectType !== eDataObjectType.DashboardItem);\n\n            this.tags = [];\n            this.dataIndex.forEach(item => {\n                if (item.tags && item.tags.length > 0) {\n                    item.tags.forEach(tag => {\n                        if (this.tags.findIndex(c => c.name === tag.name) < 0) {\n                            this.tags.push(tag);\n                        }\n                    });\n                }\n            });\n\n        }).catch(reason => this.dexihMessage.addMessage(reason));\n    }\n\n    previewData(item: SharedData) {\n        if (item.objectType === eDataObjectType.Dashboard) {\n            this.router.navigate(['previewDashboard', item.hubKey, item.objectKey], { relativeTo: this.route.parent });\n        } else {\n            this.router.navigate(['preview', item.hubKey, item.objectType, item.objectKey], { relativeTo: this.route.parent });\n        }\n    }\n\n    embed(item: SharedData) {\n        let embed: string;\n        if (item.objectType === eDataObjectType.Dashboard) {\n            this.embedLink =\n            `${window.location.origin}/public/index/previewDashboard/${item.hubKey}/${item.objectType}/${item.objectKey}?embed=true`;\n        } else {\n            this.embedLink =\n            `${window.location.origin}/public/index/preview/${item.hubKey}/${item.objectType}/${item.objectKey}?embed=true`;\n        }\n\n        this.embedFrame = `<iframe width=\"560\" height=\"315\" src=\"${this.embedLink}\" frameborder=\"0\" ></iframe>`\n\n        document.body.scrollTop = 0; // For Safari\n        document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\n    }\n\n    downloadData(sharedItems: Array<SharedData>, zipFiles: boolean, downloadFormat: eDownloadFormat) {\n        this.authService.downloadData(sharedItems, zipFiles, downloadFormat, this.cancelToken).then(() => {\n            this.dexihMessage.addSuccessMessage('The download task has started.');\n        }).catch(reason => {\n            this.dexihMessage.addMessage(reason);\n        });\n    }\n\n    edit(item: SharedData) {\n        switch (item.objectType) {\n            case eDataObjectType.Datalink:\n                this.router.navigate(['hub', item.hubKey, 'datalinks', 'datalink-edit', 'edit', item.objectKey]);\n                break;\n            case eDataObjectType.Table:\n                this.router.navigate(['hub', item.hubKey, 'tables', 'table-edit', item.objectKey]);\n                break;\n            case eDataObjectType.View:\n                this.router.navigate(['hub', item.hubKey, 'views', 'view-edit', item.objectKey]);\n                break;\n            case eDataObjectType.Dashboard:\n                this.router.navigate(['hub', item.hubKey, 'dashboards', 'dashboard-edit', item.objectKey]);\n                break;\n            }\n    }\n}\n\n","<div class=\"container-fluid\">\n    <div class=\"m-1\">\n        <dexih-message #DexihMessage></dexih-message>\n    </div>\n\n    <dexih-widget title=\"Shared Data\" iconClass=\"fa fa-lg fa-fw fa-life-saver\">\n        <dexih-widget-section *ngIf=\"embedLink\" title=\"Embedded html\" [showExpandButton]=\"false\">\n            <ng-template #header>\n                <button type=\"button\" class=\"close ml-2\" (click)=\"embedLink = null\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </ng-template>\n            <section>\n                <form-textarea label=\"Link\" [showCopy]=\"true\" [showPreview]=\"false\" [hideToggle]=\"true\" [disabled]=\"true\"\n                    rows=\"1\" [(ngModel)]=\"embedLink\">\n                    <a [href]=\"embedLink\" target=\"_blank\" class=\"ml-1\">(Open)</a>\n                </form-textarea>\n            </section>\n            <section>\n                <form-textarea label=\"Embedded IFrame\" [showCopy]=\"true\" [showPreview]=\"false\" [hideToggle]=\"true\"\n                    [disabled]=\"true\" rows=\"1\" [(ngModel)]=\"embedFrame\"></form-textarea>\n            </section>\n        </dexih-widget-section>\n\n        <dexih-table \n            [enableMultiSelect]=\"true\" \n            [enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n            [enableFilter]=\"false\" \n            [columns]=\"columns\" \n            [data]=\"dataIndex\"\n            (rowClick)=\"previewData($event)\" \n            [tags]=\"tags\">\n\n            <ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n                <dexih-button-preview [routerLink]=\"['preview', item.hubKey, item.objectType, item.objectKey]\">\n                </dexih-button-preview>\n                <dexih-button-edit *ngIf=\"hubKeys?.indexOf(item.hubKey)>=0\" class=\"ml-1\" \n                    (click)=\"edit(item)\"></dexih-button-edit>\n                <dexih-button class=\"ml-1\" iconClass=\"fa fa-code\" title=\"Get embedded version\" (click)=\"embed(item)\" text=\"Embedded\"></dexih-button>\n\n            </ng-template>\n\n            <ng-template #filter select=\"filter\" let-items=\"items\">\n                <form [formGroup]=\"searchForm\" class=\"row\">\n                    <div *ngIf=\"hubs\" class=\"col-xs-12 col-sm mr-1\">\n                        <form-tags-dropdown labelLeft=\"Hubs\" formControlName=\"hubKeys\" [items]=\"hubs\" itemKey=\"hubKey\"\n                            itemName=\"name\" [enableAddAll]=\"true\">\n                        </form-tags-dropdown>\n                    </div>\n                    <div class=\"col-xs-12 col-sm mr-1 input-expand\">\n                        <form-input formControlName=\"searchString\" placeholder=\"Search...\" iconClass=\"fa fa-search\">\n                        </form-input>\n                    </div>\n                </form>\n            </ng-template>\n\n            <ng-template #actions let-items=\"items\">\n            </ng-template>\n\n            <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n                <download-button class=\"ml-1\" (download)=\"downloadData(items, true, $event)\"></download-button>\n            </ng-template>\n\n            <!-- <ng-template #rowAction let-item=\"item\">\n                <div *ngFor=\"let column of item.inputColumns; let i = index\" class=\"input-group\">\n                    <div class=\"input-group-prepend\">\n                        <div class=\"input-group-text\">\n                            {{column.logicalName}}\n                        </div>\n                    </div>\n                    <form-input name=\"column{{i}}\" class=\"form-control p-0\" [placeholder]=\"column.logicalName\"\n                        [(ngModel)]=\"column.defaultValue\" [border]=\"false\"></form-input>\n                </div>\n            </ng-template> -->\n\n        </dexih-table>\n    </dexih-widget>\n</div>","import { Component, Input } from '@angular/core';\n\n@Component({\n\n  selector: 'support-options',\n  templateUrl: './support-options.component.html'\n})\nexport class SupportOptionsComponent {\n  @Input() isExpanded = false;\n\n  supportOptions = [\n    {name: 'Features / Issues', icon: 'fa fa-github', link: 'https://github.com/DataExperts/Dexih.App.UI/issues', description: 'We are an open source platform.  Raise feature requests and bugs on our github pages.'},\n    {name: 'Forums', icon: 'fa fa-smile-o', link: 'https://dexih.mn.co/feed', description: 'Use the community forums for questions and other integration hub discussion.'},\n    {name: 'Twitter', icon: 'fa fa-twitter', link: 'https://twitter.com/dataexperts', description: 'Send messages to our twitter for quick short queries and comments.'},\n    {name: 'YouTube', icon: 'fa fa-youtube', link: 'https://www.youtube.com/channel/UCUQQ_sVuFti-xYvKtfLJNkg', description: 'Refer to our youtube channel for video tutorials.'},\n  ];\n\n\n  constructor() {\n  }\n\n}\n","<dexih-widget-section iconClass=\"fa fa-question-circle\" title=\"Support Channels\" [padding]=\"true\"\n\t[showExpandButton]=\"true\" [isExpanded]=\"isExpanded\">\n\t<div class=\"card-deck\">\n\t\t<div *ngFor=\"let supportOption of supportOptions\" class=\"card\">\n\t\t\t<div class=\"card-header\">\n\t\t\t\t<div class=\"d-flex flex-row p-0\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<i [class]=\"supportOption.icon\"></i>\n\t\t\t\t\t\t{{supportOption.name}}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"card-body\">\n\t\t\t\t<p class=\"card-text\">{{supportOption.description}}</p>\n\t\t\t</div>\n\t\t\t<div class=\"card-footer\">\n\t\t\t\t<a [href]=\"supportOption.link\" target=\"_blank\" class=\"btn btn-button btn-info\">\n\t\t\t\t\t<i class=\"fa fa-folder-open\"></i>\n\t\t\t\t\tOpen\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</dexih-widget-section>","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SupportOptionsComponent } from './support-options.component';\nimport { DexihComponentsModule } from 'dexih-ngx-components';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    DexihComponentsModule,\n  ],\n  declarations: [\n    SupportOptionsComponent,\n  ],\n  exports: [\n    SupportOptionsComponent\n  ],\n})\nexport class DexihSupportOptionsModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'allFilter',\n})\nexport class AllFilterPipe implements PipeTransform {\n\n  transform(items: any[], value: string): any[] {\n    if (!items) { return []; }\n    if (!value) { return items; }\n\n    const filterValue = value.toLowerCase();\n    return items.filter(item => {\n      const keys = Object.keys(item);\n      let found = false;\n      keys.forEach(key => {\n        if (!found) {\n          if ((typeof item[key] === 'string' || item[key] instanceof String)) {\n            if (item[key].toLowerCase().indexOf(value.toLowerCase()) > -1) {\n              found = true;\n            }\n          }\n        }\n      });\n      return found;\n    });\n  }\n}\n\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n@Pipe({\n  name: 'calendar'\n})\nexport class CalendarPipe implements PipeTransform {\n  transform(value: Date): any {\n    return moment(value).calendar();\n  }\n}","import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'countdown',\n  template: '{{ displayTime }}',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CountdownComponent implements OnDestroy {\n  private _time: number;\n  private _timing = 1000;\n  private _interval;\n\n  @Input() public set end(value: string) {\n    let endDate = new Date(value);\n    this._time = endDate.getTime();\n    this._startTimer();\n}\n\n  @Input()\n  public set time(value: string | number) {\n    this._time = parseInt(value as string, 10);\n    this._startTimer();\n  }\n\n  @Input()\n  public set timing(value: string | number) {\n    this._timing = parseInt(value as string, 10);\n    this._startTimer();\n  }\n\n  public get delta() {\n    let date = new Date();\n    return Math.max(0, Math.floor((this._time - date.getTime()) / 1000));\n  }\n\n  public get displayTime() {\n    let days, hours, minutes, seconds, delta = this.delta;\n\n    let time = '';\n\n    days = Math.floor(delta / 86400);\n    delta -= days * 86400;\n    hours = Math.floor(delta  / 3600) % 24;\n    delta -= hours * 3600;\n    minutes = Math.floor(delta  / 60) % 60;\n    delta -= minutes * 60;\n    seconds = delta % 60;\n\n    // create the display string\n    time += days > 0 ? days + ' days ' : '';\n    time += hours > 0 ? hours + ' hours ' : '';\n    time += minutes > 0 && days === 0 ? minutes + ' minutes ' : '';\n    time += days === 0 && hours === 0 ? seconds + ' seconds ' : '';\n\n    return time;\n  }\n\n  constructor(private _changeDetector: ChangeDetectorRef) { }\n\n  ngOnDestroy() {\n    this._stopTimer();\n  }\n\n  private _startTimer() {\n    if (this.delta <= 0) { return; }\n    this._stopTimer();\n    this._interval = setInterval(() => {\n      this._changeDetector.detectChanges();\n      if (this.delta <= 0) { this._stopTimer(); }\n    }, this._timing);\n  }\n\n  private _stopTimer() {\n    clearInterval(this._interval);\n    this._interval = undefined;\n  }\n}\n","import { Directive, HostListener, Input, Output, EventEmitter, ElementRef, HostBinding } from '@angular/core';\n\n@Directive({ selector: '[dragZone]' })\nexport class DragZoneDirective {\n    @Input() zone: string;\n    @Input() data: any;\n    @Output() dragStart: EventEmitter<any> = new EventEmitter();\n\n    constructor(public element: ElementRef) { }\n\n    @HostBinding('draggable')\n    get draggable() {\n      return true;\n    }\n\n    @HostListener('dragstart', ['$event']) public onDragStart(event) {\n        // event.preventDefault();\n        // event.stopPropagation();\n\n        event.dataTransfer.setData('zone:' + this.zone, '');\n        event.dataTransfer.setData('data', JSON.stringify(this.data));\n        this.dragStart.emit(this.data);\n    }\n\n    // @HostListener('drop', ['$event']) public onDrop(event) {\n    //     event.preventDefault();\n    //     event.stopPropagation();\n\n    //     event.dataTransfer.setData('zone', this.zone);\n    //     event.dataTransfer.setData('data', JSON.stringify(this.data));\n    //     this.drop.emit();\n    // }\n}\n","import { Directive, HostListener, Input, Output, EventEmitter, HostBinding } from '@angular/core';\n\n@Directive({ selector: '[dropZone]' })\nexport class DropZoneDirective {\n    @Input() requireFiles = false;\n    @Input() zones: string[];\n    @Input() zone: string;\n    @Input() dropAllowedClass = '';\n    @Input() dropNotAllowedClass = '';\n    @Output() dropFiles: EventEmitter<File> = new EventEmitter<File>();\n    @Output() dragFilesOver: EventEmitter<any> = new EventEmitter();\n    @Output() dragLeave: EventEmitter<any> = new EventEmitter();\n    @Output() dragInvalid: EventEmitter<any> = new EventEmitter();\n    @Output() dropData: EventEmitter<any> = new EventEmitter();\n\n    private isMouseOver = false;\n    private isDropAllowed = false;\n\n    private _elementClass: string\n\n    @Input('class')\n    @HostBinding('class')\n    get elementClass(): string {\n        let dragClass = this.isMouseOver ?\n        (this.isDropAllowed ? this.dropAllowedClass : this.dropNotAllowedClass) : '';\n\n        return this._elementClass + ' ' + dragClass;\n    }\n    set elementClass(val: string) {\n        this._elementClass = val;\n    }\n\n    constructor() { }\n\n    @HostListener('dragover', ['$event']) public onDragOver(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.isMouseOver = true;\n\n        if (this.dropAllowed(event)) {\n            event.dataTransfer.dropEffect = 'copy';\n            this.isDropAllowed = true;\n            this.dragFilesOver.emit();\n            return;\n        }\n\n        this.isDropAllowed = false;\n        event.dataTransfer.dropEffect = 'none';\n        this.dragInvalid.emit();\n    }\n\n    dropAllowed(event): boolean {\n        if (this.requireFiles) {\n            if (event.dataTransfer.types) {\n                for (let i = 0; i < event.dataTransfer.types.length; i++) {\n                    if (event.dataTransfer.types[i] === 'Files') {\n                        return true;\n                    }\n                }\n            }\n        } else {\n            let zone = this.getZone(event);\n            if (!zone && !this.zone && !this.zones) {\n                return true;\n            }\n            if (this.zone && this.zone === zone) {\n                return true;\n            }\n            if (this.zones && Array.isArray(this.zones) && this.zones.findIndex(z => z === zone) >= 0) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    getZone(event): string {\n        if (event.dataTransfer.types) {\n            for (let i = 0; i < event.dataTransfer.types.length; i++) {\n                let type = <string> event.dataTransfer.types[i];\n                if (type && type.substr(0, 5) === 'zone:') {\n                    return type.substr(5);\n                }\n            }\n        }\n    }\n\n    @HostListener('dragleave', ['$event']) public onDragLeave(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.isMouseOver = false;\n        this.isDropAllowed = false;\n        this.dragLeave.emit();\n    }\n\n    @HostListener('drop', ['$event']) public onDrop(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.isMouseOver = false;\n        this.isDropAllowed = false;\n\n        if (this.dropAllowed(event)) {\n            let files = event.dataTransfer.files;\n            if (files.length > 0) {\n                this.dropFiles.emit(files);\n            }\n\n            let data = event.dataTransfer.getData('data');\n            if (data) {\n                this.dropData.emit(JSON.parse(data));\n            }\n        }\n\n        this.dragLeave.emit();\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'equalFilter',\n})\nexport class EqualFilterPipe implements PipeTransform {\n\n  transform(items: any[], field: string, value = true): any[] {\n    if (!items) {\n        return [];\n    }\n    return items.filter(it => it[field] === value);\n  }\n}\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'fieldFilter',\n})\nexport class FieldFilterPipe implements PipeTransform {\n\n  transform(items: any[], field: string, value: string): any[] {\n    if (!items) { return [] };\n    if (!value) { return items };\n    return items.filter(it => it[field].toLowerCase().indexOf(value.toLowerCase()) > -1);\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n@NgModule()\nexport class Functions {\n\n    static numberWithCommas = (x) => {\n        let parts = x.toString().split('.');\n        parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n        return parts.join('.');\n    }\n\n    static getLanguage() {\n        let language;\n        if (window.navigator.languages) {\n            language = window.navigator.languages[0];\n        } else {\n            language = window.navigator.language;\n        }\n\n        return language;\n    }\n\n    static formatValue(value: any, format: string): string {\n        moment.locale(this.getLanguage());\n\n        if (!value && value !== false && value !== 0) {\n            return '';\n        } else if (Object.keys(value).length === 0 && value.constructor === Object) {\n            return '(null)';\n        } else {\n            switch (format) {\n                case 'Calendar':\n                    return moment(value).calendar();\n                case 'Date':\n                    return moment(value).format('L');\n                case 'Time':\n                    return moment(value).format('LTS');\n                case 'DateTime':\n                    return moment(value).format('L') + ' ' + moment(value).format('LTS');\n                case 'CharArray':\n                    return [].concat(value).join('');\n                case 'CharArray':\n                    return [].concat(value).join('');\n                default:\n                    return value;\n            }\n        }\n    }\n\n        /*\n    * General utils for managing cookies in Typescript.\n    */\n   static setCookie(name: string, val: string) {\n        const date = new Date();\n        const value = val;\n\n        // Set it expire in 7 days\n        date.setTime(date.getTime() + (7 * 24 * 60 * 60 * 1000));\n\n        if (location.protocol === 'https:') {\n\n        }\n\n        const sameSite = location.protocol === 'https:' ? 'SameSite=None;secure' : 'SameSite=Lax'\n\n        // Set it\n        document.cookie = `${name}=${value};expires=${date.toUTCString()};path=/;${sameSite}`;\n    }\n\n    static getCookie(name: string) {\n        const value = `; ${document.cookie}`;\n        const parts = value.split(`; ${name}=`);\n\n        if (!parts) { return null; }\n\n        if (parts.length === 2) {\n            return parts.pop().split(';').shift();\n        }\n    }\n\n    static deleteCookie(name: string) {\n        const date = new Date();\n\n        // Set it expire in -1 days\n        date.setTime(date.getTime() + (-1 * 24 * 60 * 60 * 1000));\n\n        // Set it\n        document.cookie = `${name}=;expires=${date.toUTCString()};path=/`;\n    }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'gtFilter',\n})\nexport class GtFilterPipe implements PipeTransform {\n\n  transform(items: any[], field: string, value: number): any[] {\n    if (!items) {\n        return [];\n    }\n    return items.filter(it => it[field] > value);\n  }\n}\n\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Pipe({\n    name: 'isValidFilter'\n})\n@Injectable()\nexport class IsValidFilterPipe implements PipeTransform {\n    transform(items: any[], field: string): any {\n        if (!items) {\n            return [];\n        } else {\n            if (items[0] instanceof FormGroup) {\n                return items.filter(c => c.controls.isValid.value);\n            } else {\n                return items.filter(c => c.isValid);\n            }\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'maxItems',\n})\nexport class MaxItemsFilterPipe implements PipeTransform {\n\n  transform(items: any[], value: number): any[] {\n    if (!items) { return []; }\n    if (!value) { return items; }\n\n    return items.slice(0, value);\n\n  }\n}\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'fieldSortDesc',\n})\nexport class SortDescPipe implements PipeTransform {\n\n  transform(items: any[], field: string): any[] {\n    if (!items) { return []; }\n    return items.sort((b, a) => {\n      if (a[field] > b[field]) {\n        return 1;\n    }\n\n    if (a[field] < b[field]) {\n        return -1;\n    }\n\n    return 0;\n    });\n  }\n}\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'fieldSort',\n})\nexport class SortPipe implements PipeTransform {\n\n  transform(items: any[], field: string): any[] {\n    if (!items) { return []; }\n    return items.sort((a, b) => {\n      if (a[field] > b[field]) {\n        return 1;\n      }\n\n      if (a[field] < b[field]) {\n        return -1;\n      }\n\n      return 0;\n\n    });\n  }\n}\n\n","import { Directive } from '@angular/core';\n@Directive({ selector: 'time'})\nexport class TimeDirective {}\n","import {NgModule} from '@angular/core';\nimport {TimeDirective} from './time.directive';\nimport { FieldFilterPipe } from './field-filter.pipe';\nimport { EqualFilterPipe } from './equal-filter.pipe';\nimport { GtFilterPipe } from './gt-filter.pipe';\nimport { IsValidFilterPipe } from './isValid-filter.pipe';\nimport { AllFilterPipe } from './all-filter.pipe';\nimport { SortPipe } from './sort.pipe';\nimport { SortDescPipe } from './sort.desc.pipe';\nimport { CountdownComponent } from './countdown.component';\nimport { MaxItemsFilterPipe } from './max-items-filter';\nimport { DropZoneDirective } from './dropzone';\nimport { DragZoneDirective } from './dragzone';\nimport { CalendarPipe } from './calendar.pipe'\n@NgModule({\n  declarations: [\n    TimeDirective,\n    FieldFilterPipe,\n    EqualFilterPipe,\n    GtFilterPipe,\n    IsValidFilterPipe,\n    AllFilterPipe,\n    SortPipe,\n    SortDescPipe,\n    CountdownComponent,\n    MaxItemsFilterPipe,\n    DropZoneDirective,\n    DragZoneDirective,\n    CalendarPipe\n    ],\n  imports: [\n    ],\n  exports: [\n    TimeDirective,\n    FieldFilterPipe,\n    EqualFilterPipe,\n    GtFilterPipe,\n    IsValidFilterPipe,\n    AllFilterPipe,\n    SortPipe,\n    SortDescPipe,\n    CountdownComponent,\n    MaxItemsFilterPipe,\n    DropZoneDirective,\n    DragZoneDirective,\n    CalendarPipe\n    ]\n})\nexport class UtilsModule {\n\n}\n","export const environment = {\n  production: true,\n  apiUrl: 'https://dexih.com'\n};\n","import { environment } from './environments/environment';\nimport { Message } from './app/+auth/auth.models';\n\nexport enum eLogLevel {\n    Trace,\n    Debug,\n    Warning,\n    Error,\n    Information\n}\n\nexport class LogFactory {\n    constructor(private category: string) {\n\n    }\n\n    private formatMessage(message): string {\n        return this.category + '::' + (new Date()).toISOString() + '::' + message;\n    }\n\n    public Log(message: string, logLevel: eLogLevel) {\n        if (!environment.production) {\n            switch (logLevel) {\n                case eLogLevel.Trace:\n                   // tslint:disable-next-line:no-console\n                   console.debug(this.formatMessage(message));\n                    break;\n                case eLogLevel.Debug:\n                    // tslint:disable-next-line:no-console\n                    console.debug(this.formatMessage(message));\n                    break;\n                case eLogLevel.Warning:\n                    console.warn(this.formatMessage(message));\n                    break;\n                case eLogLevel.Error:\n                    console.error(this.formatMessage(message));\n                    break;\n                case eLogLevel.Information:\n                    // tslint:disable-next-line:no-console\n                    console.info(this.formatMessage(message));\n                    break;\n            }\n        }\n    }\n\n    public LogC(message: () => string, logLevel: eLogLevel) {\n        if (!environment.production) {\n            this.Log(message(), logLevel);\n        }\n    }\n\n    public LogMessage(message: Message) {\n        if (message.success) {\n            this.Log(message.message, eLogLevel.Information);\n        } else {\n            this.Log(message.message + '/n' + message.exceptionDetails, eLogLevel.Error);\n        }\n    }\n\n}\n","import './polyfills';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n","// This file includes polyfills needed by Angular 2 and is loaded before\n// the app. You can add your own extra polyfills to this file.\n// import 'core-js/es/symbol';\n// import 'core-js/es/object';\n// import 'core-js/es/function';\n// import 'core-js/es/parse-int';\n// import 'core-js/es/parse-float';\n// import 'core-js/es/number';\n// import 'core-js/es/math';\n// import 'core-js/es/string';\n// import 'core-js/es/date';\n// import 'core-js/es/array';\n// import 'core-js/es/regexp';\n// import 'core-js/es/map';\n// import 'core-js/es/set';\n// import 'core-js/es/reflect';\n\n// import 'core-js/es/reflect';\nimport 'zone.js/dist/zone';\n\n"]}