{"version":3,"sources":["webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/+auth/auth.models.ts","webpack:///src/app/+auth/auth.service.ts","webpack:///src/app/+auth/token.interceptor.service.ts","webpack:///src/app/+auth/websocket.service.ts","webpack:///src/app/+hub/buttons/actions-api-button/actions-api-button.component.ts","webpack:///src/app/+hub/buttons/actions-api-button/actions-api-button.component.html","webpack:///src/app/+hub/buttons/actions-columnValidation-button/actions-columnValidation-button.component.ts","webpack:///src/app/+hub/buttons/actions-columnValidation-button/actions-columnValidation-button.component.html","webpack:///src/app/+hub/buttons/actions-connection-button/actions-connection-button.component.html","webpack:///src/app/+hub/buttons/actions-connection-button/actions-connection-button.component.ts","webpack:///src/app/+hub/buttons/actions-dashboard-button/actions-dashboard-button.component.ts","webpack:///src/app/+hub/buttons/actions-dashboard-button/actions-dashboard-button.component.html","webpack:///src/app/+hub/buttons/actions-datajob-button/actions-datajob-button.component.ts","webpack:///src/app/+hub/buttons/actions-datajob-button/actions-datajob-button.component.html","webpack:///src/app/+hub/buttons/actions-datalink-button/actions-datalink-button.component.html","webpack:///src/app/+hub/buttons/actions-datalink-button/actions-datalink-button.component.ts","webpack:///src/app/+hub/buttons/actions-datalinkTest-button/actions-datalinkTest-button.component.ts","webpack:///src/app/+hub/buttons/actions-datalinkTest-button/actions-datalinkTest-button.component.html","webpack:///src/app/+hub/buttons/actions-fileFormat-button/actions-fileFormat-button.component.ts","webpack:///src/app/+hub/buttons/actions-fileFormat-button/actions-fileFormat-button.component.html","webpack:///src/app/+hub/buttons/actions-listOfValues-button/actions-listOfValues-button.component.ts","webpack:///src/app/+hub/buttons/actions-listOfValues-button/actions-listOfValues-button.component.html","webpack:///src/app/+hub/buttons/actions-table-button/actions-table-button.component.html","webpack:///src/app/+hub/buttons/actions-table-button/actions-table-button.component.ts","webpack:///src/app/+hub/buttons/actions-view-button/actions-view-button.component.ts","webpack:///src/app/+hub/buttons/actions-view-button/actions-view-button.component.html","webpack:///src/app/+hub/buttons/buttons.module.ts","webpack:///src/app/+hub/buttons/cancel-button/cancel-button.component.ts","webpack:///src/app/+hub/buttons/cancel-button/cancel-button.component.html","webpack:///src/app/+hub/buttons/columnValidation-edit-button/columnValidation-edit-button.component.ts","webpack:///src/app/+hub/buttons/columnValidation-edit-button/columnValidation-edit-button.component.html","webpack:///src/app/+hub/buttons/connection-edit-button/connection-edit-button.component.ts","webpack:///src/app/+hub/buttons/connection-edit-button/connection-edit-button.component.html","webpack:///src/app/+hub/buttons/customFunction-edit-button/customFunction-edit-button.component.ts","webpack:///src/app/+hub/buttons/customFunction-edit-button/customFunction-edit-button.component.html","webpack:///src/app/+hub/buttons/datalink-edit-button/datalink-edit-button.component.ts","webpack:///src/app/+hub/buttons/datalink-edit-button/datalink-edit-button.component.html","webpack:///src/app/+hub/buttons/dependent-items/dependent-items-button.component.html","webpack:///src/app/+hub/buttons/dependent-items/dependent-items-button.component.ts","webpack:///src/app/+hub/buttons/index.ts","webpack:///src/app/+hub/buttons/new-connection-button/new-connection-button.component.ts","webpack:///src/app/+hub/buttons/new-connection-button/new-connection-button.component.html","webpack:///src/app/+hub/buttons/new-datalink-button/new-datalink-button.component.ts","webpack:///src/app/+hub/buttons/new-datalink-button/new-datalink-button.component.html","webpack:///src/app/+hub/buttons/new-table-button/new-table-button.component.ts","webpack:///src/app/+hub/buttons/new-table-button/new-table-button.component.html","webpack:///src/app/+hub/buttons/save-button/save-button.component.ts","webpack:///src/app/+hub/buttons/save-button/save-button.component.html","webpack:///src/app/+hub/buttons/table-edit-button/table-edit-button.component.ts","webpack:///src/app/+hub/buttons/table-edit-button/table-edit-button.component.html","webpack:///src/app/+hub/buttons/tags-filter-button/tags-filter-button.component.ts","webpack:///src/app/+hub/buttons/tags-filter-button/tags-filter-button.component.html","webpack:///src/app/+hub/buttons/tags-update-button/tags-update-button.component.ts","webpack:///src/app/+hub/buttons/tags-update-button/tags-update-button.component.html","webpack:///src/app/+hub/buttons/view-edit-button/view-edit-button.component.ts","webpack:///src/app/+hub/buttons/view-edit-button/view-edit-button.component.html","webpack:///src/app/+hub/fileFormat/fileFormat-edit/fileFormat-edit.component.ts","webpack:///src/app/+hub/fileFormat/fileFormat-edit/fileFormat-edit.component.html","webpack:///src/app/+hub/fileFormat/fileFormat-index/fileFormat-index.component.ts","webpack:///src/app/+hub/fileFormat/fileFormat-index/fileFormat-index.component.html","webpack:///src/app/+hub/fileFormat/index.ts","webpack:///src/app/+hub/hub.component.html","webpack:///src/app/+hub/hub.component.ts","webpack:///src/app/+hub/hub.forms.service.ts","webpack:///src/app/+hub/hub.lineage.models.ts","webpack:///src/app/+hub/hub.models.ts","webpack:///src/app/+hub/hub.module.ts","webpack:///src/app/+hub/hub.query.models.ts","webpack:///src/app/+hub/hub.remote.models.ts","webpack:///src/app/+hub/hub.routing.ts","webpack:///src/app/+hub/hub.service.ts","webpack:///src/app/+hub/hub.shared.module.ts","webpack:///src/app/+hub/index.ts","webpack:///src/app/+hub/item-edit.guard.ts","webpack:///src/app/+hub/summary/index.ts","webpack:///src/app/+hub/summary/summary.component.ts","webpack:///src/app/+hub/summary/summary.component.html","webpack:///src/app/+hub/table/table-preview-data/table-preview-data.component.ts","webpack:///src/app/+hub/table/table-preview-data/table-preview-data.component.html","webpack:///src/app/+hub/view/index.ts","webpack:///src/app/+hub/view/view-edit/view-edit.component.ts","webpack:///src/app/+hub/view/view-edit/view-edit.component.html","webpack:///src/app/+hub/view/view-index/view-index.component.ts","webpack:///src/app/+hub/view/view-index/view-index.component.html","webpack:///src/app/+hub/widgets/api-status/api-status.component.ts","webpack:///src/app/+hub/widgets/api-status/api-status.component.html","webpack:///src/app/+hub/widgets/api-view/api-view.component.ts","webpack:///src/app/+hub/widgets/api-view/api-view.component.html","webpack:///src/app/+hub/widgets/columnValidation-view/columnValidation-view.component.ts","webpack:///src/app/+hub/widgets/columnValidation-view/columnValidation-view.component.html","webpack:///src/app/+hub/widgets/connection-view/connection-view.component.html","webpack:///src/app/+hub/widgets/connection-view/connection-view.component.ts","webpack:///src/app/+hub/widgets/dashboard-view/dashboard-view.component.ts","webpack:///src/app/+hub/widgets/dashboard-view/dashboard-view.component.html","webpack:///src/app/+hub/widgets/datajob-view/datajob-view.component.ts","webpack:///src/app/+hub/widgets/datajob-view/datajob-view.component.html","webpack:///src/app/+hub/widgets/datalink-status/datalink-status.component.ts","webpack:///src/app/+hub/widgets/datalink-status/datalink-status.component.html","webpack:///src/app/+hub/widgets/datalink-view/datalink-view.component.ts","webpack:///src/app/+hub/widgets/datalink-view/datalink-view.component.html","webpack:///src/app/+hub/widgets/datalinkTest-view/datalinkTest-view.component.ts","webpack:///src/app/+hub/widgets/datalinkTest-view/datalinkTest-view.component.html","webpack:///src/app/+hub/widgets/fileFormat-view/fileFormat-view.component.ts","webpack:///src/app/+hub/widgets/fileFormat-view/fileFormat-view.component.html","webpack:///src/app/+hub/widgets/input-parameters-view/input-parameters-view.component.ts","webpack:///src/app/+hub/widgets/input-parameters-view/input-parameters-view.component.html","webpack:///src/app/+hub/widgets/input-parameters/input-parameters.component.ts","webpack:///src/app/+hub/widgets/input-parameters/input-parameters.component.html","webpack:///src/app/+hub/widgets/listOfValues-view/listOfValues-view.component.ts","webpack:///src/app/+hub/widgets/listOfValues-view/listOfValues-view.component.html","webpack:///src/app/+hub/widgets/preview-data/preview-data.component.ts","webpack:///src/app/+hub/widgets/preview-data/preview-data.component.html","webpack:///src/app/+hub/widgets/remoteAgent-view/remoteAgent-view.component.ts","webpack:///src/app/+hub/widgets/remoteAgent-view/remoteAgent-view.component.html","webpack:///src/app/+hub/widgets/table-column-view/table-column-view.component.ts","webpack:///src/app/+hub/widgets/table-column-view/table-column-view.component.html","webpack:///src/app/+hub/widgets/table-view/table-view.component.ts","webpack:///src/app/+hub/widgets/table-view/table-view.component.html","webpack:///src/app/+hub/widgets/transform-properties/transform-properties-item.component.ts","webpack:///src/app/+hub/widgets/transform-properties/transform-properties-item.component.html","webpack:///src/app/+hub/widgets/transform-properties/transform-properties.component.ts","webpack:///src/app/+hub/widgets/transform-properties/transform-properties.component.html","webpack:///src/app/+hub/widgets/view-view/view-view.component.ts","webpack:///src/app/+hub/widgets/view-view/view-view.component.html","webpack:///src/app/+hub/widgets/widgets.module.ts","webpack:///src/app/+hubs/hubs.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/global.error.handler.ts","webpack:///src/app/shared/help/dexih-help.component.ts","webpack:///src/app/shared/help/dexih-help.component.html","webpack:///src/app/shared/help/dexih-help.module.ts","webpack:///src/app/shared/layout/app-layouts/auth-layout.component.ts","webpack:///src/app/shared/layout/app-layouts/auth-layout.component.html","webpack:///src/app/shared/layout/app-layouts/empty-layout.component.ts","webpack:///src/app/shared/layout/app-layouts/empty-layout.component.html","webpack:///src/app/shared/layout/app-layouts/main-layout.component.ts","webpack:///src/app/shared/layout/app-layouts/main-layout.component.html","webpack:///src/app/shared/layout/footer/footer.component.ts","webpack:///src/app/shared/layout/footer/footer.component.html","webpack:///src/app/shared/layout/header/header.component.ts","webpack:///src/app/shared/layout/header/header.component.html","webpack:///src/app/shared/layout/header/header.module.ts","webpack:///src/app/shared/layout/header/tasks/tasks.component.ts","webpack:///src/app/shared/layout/header/tasks/tasks.component.html","webpack:///src/app/shared/layout/layout.guard.ts","webpack:///src/app/shared/layout/layout.module.ts","webpack:///src/app/shared/layout/layout.service.ts","webpack:///src/app/shared/layout/navigation/hubs/hubs.component.ts","webpack:///src/app/shared/layout/navigation/hubs/hubs.component.html","webpack:///src/app/shared/layout/navigation/login-info/login-info.component.ts","webpack:///src/app/shared/layout/navigation/login-info/login-info.component.html","webpack:///src/app/shared/layout/navigation/menu/index.ts","webpack:///src/app/shared/layout/navigation/menu/menu-item.component.ts","webpack:///src/app/shared/layout/navigation/menu/menu-item.component.html","webpack:///src/app/shared/layout/navigation/menu/menu-parent.component.ts","webpack:///src/app/shared/layout/navigation/menu/menu-parent.component.html","webpack:///src/app/shared/layout/navigation/navigation.component.ts","webpack:///src/app/shared/layout/navigation/navigation.component.html","webpack:///src/app/shared/layout/navigation/navigation.module.ts","webpack:///src/app/shared/layout/navigation/remote-agent/remote-agent.component.ts","webpack:///src/app/shared/layout/navigation/remote-agent/remote-agent.component.html","webpack:///src/app/shared/layout/ribbon/index.ts","webpack:///src/app/shared/layout/ribbon/ribbon.component.ts","webpack:///src/app/shared/layout/ribbon/ribbon.component.html","webpack:///src/app/shared/layout/ribbon/ribbon.module.ts","webpack:///src/app/shared/layout/ribbon/route-breadcrumbs/route-breadcrumbs.component.ts","webpack:///src/app/shared/layout/ribbon/route-breadcrumbs/route-breadcrumbs.component.html","webpack:///src/app/shared/shared.models.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/ui/charts/chart-colors.ts","webpack:///src/app/shared/ui/charts/chart-groups.ts","webpack:///src/app/shared/ui/charts/chartBuilder/chart-builder.component.ts","webpack:///src/app/shared/ui/charts/chartBuilder/chart-builder.component.html","webpack:///src/app/shared/ui/charts/chartView/chart-view.component.ts","webpack:///src/app/shared/ui/charts/chartView/chart-view.component.html","webpack:///src/app/shared/ui/charts/charts.module.ts","webpack:///src/app/shared/ui/charts/comboChart/combo-chart.component.ts","webpack:///src/app/shared/ui/charts/comboChart/combo-chart.component.html","webpack:///src/app/shared/ui/charts/comboChart/combo-series-vertical.component.ts","webpack:///src/app/shared/ui/charts/comboChart/index.ts","webpack:///src/app/shared/ui/charts/googleMap/google-map.component.ts","webpack:///src/app/shared/ui/charts/googleMap/google-map.component.html","webpack:///src/app/shared/ui/dexihFormControls/dexih-form-controls.module.ts","webpack:///src/app/shared/ui/dexihFormControls/dexih-form-errors.module.ts","webpack:///src/app/shared/ui/dexihFormControls/dexih-invalid-form-details/dexih-invalid-form-details.component.ts","webpack:///src/app/shared/ui/dexihFormControls/dexih-invalid-form-details/dexih-invalid-form-details.component.html","webpack:///src/app/shared/ui/dexihFormControls/dexih-invalid-form-icon/dexih-invalid-form-icon.component.ts","webpack:///src/app/shared/ui/dexihFormControls/dexih-invalid-form-icon/dexih-invalid-form-icon.component.html","webpack:///src/app/shared/ui/dexihFormControls/index.ts","webpack:///src/app/shared/ui/dexihMessage/dexih-message.component.ts","webpack:///src/app/shared/ui/dexihMessage/dexih-message.component.html","webpack:///src/app/shared/ui/dexihMessage/dexih-message.module.ts","webpack:///src/app/shared/ui/dexihMessage/index.ts","webpack:///src/app/shared/ui/icons/download-button/download-button.component.ts","webpack:///src/app/shared/ui/icons/download-button/download-button.component.html","webpack:///src/app/shared/ui/icons/encryption-status/encryption-status.component.ts","webpack:///src/app/shared/ui/icons/encryption-status/encryption-status.component.html","webpack:///src/app/shared/ui/icons/icons.module.ts","webpack:///src/app/shared/ui/icons/index.ts","webpack:///src/app/shared/ui/icons/print/print-button.component.ts","webpack:///src/app/shared/ui/icons/print/print-button.component.html","webpack:///src/app/shared/ui/icons/privacy-status/privacy-status.component.ts","webpack:///src/app/shared/ui/icons/privacy-status/privacy-status.component.html","webpack:///src/app/shared/ui/queryBuilder/query-builder.component.ts","webpack:///src/app/shared/ui/queryBuilder/query-builder.component.html","webpack:///src/app/shared/ui/queryBuilder/query-builder.module.ts","webpack:///src/app/shared/ui/seriesAnimate/series-animate.component.ts","webpack:///src/app/shared/ui/seriesAnimate/series-animate.component.html","webpack:///src/app/shared/ui/seriesAnimate/series-animate.module.ts","webpack:///src/app/shared/ui/sharedData/index.ts","webpack:///src/app/shared/ui/sharedData/input-parameters-view/input-parameters-view.component.ts","webpack:///src/app/shared/ui/sharedData/input-parameters-view/input-parameters-view.component.html","webpack:///src/app/shared/ui/sharedData/preview-dashboard/preview-dashboard-item.component.ts","webpack:///src/app/shared/ui/sharedData/preview-dashboard/preview-dashboard-item.component.html","webpack:///src/app/shared/ui/sharedData/preview-dashboard/preview-dashboard.component.ts","webpack:///src/app/shared/ui/sharedData/preview-dashboard/preview-dashboard.component.html","webpack:///src/app/shared/ui/sharedData/preview-data/preview-data.component.ts","webpack:///src/app/shared/ui/sharedData/preview-data/preview-data.component.html","webpack:///src/app/shared/ui/sharedData/preview/preview.component.ts","webpack:///src/app/shared/ui/sharedData/preview/preview.component.html","webpack:///src/app/shared/ui/sharedData/shared-data.module.ts","webpack:///src/app/shared/ui/sharedData/sharedData.component.ts","webpack:///src/app/shared/ui/sharedData/sharedData.component.html","webpack:///src/app/shared/ui/supportOptions/support-options.component.ts","webpack:///src/app/shared/ui/supportOptions/support-options.component.html","webpack:///src/app/shared/ui/supportOptions/support-options.module.ts","webpack:///src/app/shared/utils/all-filter.pipe.ts","webpack:///src/app/shared/utils/calendar.pipe.ts","webpack:///src/app/shared/utils/countdown.component.ts","webpack:///src/app/shared/utils/dragzone.ts","webpack:///src/app/shared/utils/dropzone.ts","webpack:///src/app/shared/utils/equal-filter.pipe.ts","webpack:///src/app/shared/utils/field-filter.pipe.ts","webpack:///src/app/shared/utils/functions.ts","webpack:///src/app/shared/utils/gt-filter.pipe.ts","webpack:///src/app/shared/utils/isValid-filter.pipe.ts","webpack:///src/app/shared/utils/max-items-filter.ts","webpack:///src/app/shared/utils/sort.desc.pipe.ts","webpack:///src/app/shared/utils/sort.pipe.ts","webpack:///src/app/shared/utils/time.directive.ts","webpack:///src/app/shared/utils/utils.module.ts","webpack:///src/environments/environment.ts","webpack:///src/logging.ts","webpack:///src/main.ts","webpack:///src/polyfills.ts"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","webpackContextKeys","Object","resolve","module","exports","webpackEmptyAsyncContext","Promise","then","logoUrl","logoSmallUrl","User","_email","_userName","_password","_rememberMe","email","userName","password","rememberMe","firstName","lastName","terms","subscription","emailConfirmed","isInvited","inviteQuota","notifyPrivateMessage","notifySupportMessage","newPassword","confirmPassword","UserLoginInfo","loginProvider","providerDisplayName","providerKey","DexihHubAuth","sharedAccess","Registered","isValid","ExternalLoginResult","ExternalLogin","Parameter","Message","success","message","exceptionDetails","value","time","Date","now","eHubAccess","eFileStatus","FileHandler","file","url","Math","random","toString","substr","status","Waiting","progress","Uploading","Downloading","httpSubscription","unsubscribe","RemoteToken","CancelToken","cancelMethod","PromiseWithCancel","executor","cancel","_cancel","WaitMessage","AuthService","http","router","route","location","_currentUser","_refreshUserAttempted","_hubs","_hubErrors","_displayHelp","_tasks","_notification","_notifications","_logErrors","_waitMessages","Map","_waitMessagesObserve","_globalCache","_remoteAgents","logger","updateRemoteAgentsFlag","isInitialized","xSrfToken","LogC","Debug","_userSubscribe","_webSocketSubscribe","_logErrorsSubscribe","getCookie","Information","webSocketService","refreshGlobalCache","refreshUser","getUserObservable","subscribe","user","refreshHubs","initializeWebSocket","getWebSocketObservable","data","command","Disconnect","next","Connect","pingRemoteAgents","ActiveAgentUpdate","remoteAgents","activeAgent","remoteAgent","find","c","remoteAgentKey","existingIndex","findIndex","instanceId","push","name","RemoteAgentDelete","forEach","splice","RemoteAgentUpdateKey","index","RemoteAgentDeleteKey","HubUpdate","hub","setHubAccess","hubs","getValue","previousHub","hubKey","assign","sort","a","b","toLocaleLowerCase","HubDelete","hubKeys","indexOf","Task","task","addUpdateTask","FileDownload","downloadData","formBody","HubKey","SecurityToken","securityToken","FileReference","reference","downloadFile","fileName","contentType","reason","DownloadReady","startsWith","modalComponent","confirm","result","window","open","newWin","closed","asObservable","logMessage","headers","defaultHeaders","m","details","context","body","JSON","stringify","post","getApiUrl","withCredentials","event","element","target","link","getAttribute","endsWith","navigate","relativeTo","queryParams","preventDefault","parentElement","dexihHubUsers","permission","Owner","FullReader","ReadOnly","Public","pipe","toPromise","getWebSocketStatusObservable","getWebSocketConnectionId","key","undefined","apiUrl","prepareExternalUrl","waitMessage","cancelToken","postBody","messageKey","addWaitMessage","promise","reject","postRemoteGetKey","getRemoteData","removeWaitMessage","remoteAgentId","getBestDownloadUrl","downloadUrl","json","JsonNoNulls","responseType","parse","error","downloadUrl2","localStorage","setItem","reason2","httpError","formData","append","extra","baseUrl","downloadUrls","length","download","getRemoteUrl","getFromExternal","clientConnectionId","get","stack","confirmMessage","confirmDialog","FormData","reportProgress","request","type","UploadProgress","percentDone","round","loaded","total","Complete","columns","dtColumns","logicalName","dataType","DateTime","title","format","Boolean","Json","Xml","CharArray","Node","childColumns","constructDataTableColumns","inputPrompt","inputValue","prompt","information","returnData","blob","Blob","reader","FileReader","readAsText","onload","force","_refreshUserPromise","previousUser","isAdmin","userResult","loadScript","forceLogin","getGlobalCachePromise","googleSignIn","externalLogin","loginResult","identityLogin","Google","authenticationToken","cache","googleLoadScript","gapi","load","auth2","init","scope","client_id","googleClientId","login","isSignedIn","currentUser","profile","getBasicProfile","getEmail","getGivenName","getFamilyName","Eea","getAuthResponse","id_token","getLoginDetails","idToken","signIn","getAuthInstance","signOut","clientId","config","auth","authority","redirectUri","origin","cacheLocation","storeAuthStateInCookie","userAgentApplication","handleRedirectCallback","errorDesc","console","log","microsoftApp","microsoftClientId","getAccount","userNames","split","accountIdentifier","scopes","acquireTokenSilent","authResponse","accessToken","microsoftSignIn","Microsoft","tokenPromise","loginPopup","microsoftAuthResponseToLogin","account","logout","provider","src","isExternal","script","document","getElementById","newScript","createElement","async","head","appendChild","externalLoginCallback","href","postConfirm","verificationCode","connectionId","currentAgents","newAgents","newAgent","currentAgent","activeAgents","i","position","msg","issue","issueKeys","issueKey","comment","issueCommentKeys","hubName","hubNames","join","remoteAgentKeys","postGetRaw","currentRoute","parent","outlet","routeSnapshot","snapshot","pageTitle","navigateSkip","root","breadcrumbs","childrenRoutes","children","segment","path","queryParamsHandling","maxTime","newGuid","set","setTimeout","has","errorMessage","addUpdateNotification","tasks","originalTask","taskId","replace","r","v","getFromApi","getGlobalCacheObservable","searchString","maxResults","reload","sharedItemsIndex","objectType","objectKey","agent","getItem","sharedItems","zipFiles","downloadFormat","flags","getActiveAgent","postRemote","filter","inputColumns","selectQuery","parameters","parentParameters","parameterName","resetCache","dashboardKey","dashboard","AddCsrfHeaderInterceptorService","handle","xsrfToken","setCookie","WebSocketService","_webSocketStatus","_webSocketMessages","startingWebSocket","hubConnected","_connectHubSubscription","hubConnection","stop","configureLogging","Trace","withUrl","build","on","remoteMessage","onclose","err","sendDisconnect","_connectionId","startWebSocket","state","Connected","start","sendConnect","disconnectMessage","invoke","ActionsApiButtonComponent","authService","hubService","pullRight","_hubCacheSubscription","getHubCacheObservable","hubCache","deleteApis","apis","api","createHub","item","cacheAddApi","filename","exportHub","isShared","shareItems","Api","activateApis","deactivateApis","selector","templateUrl","ActionsColumnValidationButtonComponent","isLoaded","dexihTables","tab","con","dexihConnections","connectionKey","dexihTableColumns","col","columnValidationKey","columnValidation","tableKey","columnKey","ActionsConnectionButtonComponent","hideEdit","eConnectionCategory","eConnectionPurpose","datalinks","datajobs","_subscription","hubPath","getHubUrl","connections","GetConnectionReference","connectionReference","dexihDatajobs","datajob","auditConnectionKey","dexihDatalinks","datalink","sourceDatalinkTable","sourceTableKey","table","getTable","dexihDatalinkTransforms","transform","joinDatalinkTable","sourceDatalinkKey","dexihDatalinkTargets","connection","cacheAddConnection","deleteConnections","ActionsDashboardButtonComponent","tables","deleteDashboards","dashboards","Dashboard","cacheAddDashboard","ActionsDatajobButtonComponent","showEdit","deleteDatajobs","truncate","resetIncremental","runDatajobs","datajobsString","cacheAddDatajob","activateDatajobs","deactivateDatajobs","ActionsDatalinkButtonComponent","relatedDatalinks","relatedDatajobs","targetTables","changes","dexihDatalinkSteps","step","datalinkKey","deleteDatalinks","Datalink","truncateTarget","runDatalinks","datalinkString","cancelDatalinks","setNewDatajob","navigateByUrl","datalinkKeys","cacheAddDatalink","downloadItems","Array","downloadObject","Csv","ActionsDatalinkTestButtonComponent","datalinkTests","dexihDatalinkTestSteps","deleteDatalinkTests","runDatalinkTests","runDatalinkTestSnapshot","datalinkTest","ActionsFileFormatButtonComponent","fileFormatKey","fileFormat","ActionsListOfValuesButtonComponent","listOfValues","ActionsTableButtonComponent","refreshTables","changedTables","datalinksSource","datalinksTarget","canWrite","getConnection","t","tableKeys","reImportTables","getTableKeys","tableNames","addHubSuccessMessage","emit","clearTables","createTables","getTables","deleteTables","getDbml","Table","cacheAddTable","ActionsViewButtonComponent","deleteViews","views","View","view","cacheAddView","ButtonsModule","imports","declarations","providers","CancelButtonComponent","formsService","ColumnValidationEditButtonComponent","ConnectionEditButtonComponent","CustomFunctionEditButtonComponent","DatalinkEditButtonComponent","DependentItemsButtonComponent","sharedObjectProperties","dependent","cacheAddObjectFromKey","NewConnectionButtonComponent","NewDatalinkButtonComponent","NewTableButtonComponent","SaveButtonComponent","TableEditButtonComponent","TagState","isChecked","TagsFilterButtonComponent","tags","dexihTags","tagStates","tag","tagChange","selectedTags","isIndeterminate","TagsUpdateButtonComponent","objectTypeName","updateTags","objectTags","dexihTagObjects","objects","d","matchingTags","tagKey","deleteTagObjects","saveTagObjects","ViewEditButtonComponent","FileFormatEditComponent","params","action","Loaded","hasChanged","addHubClientErrorMessage","_formChangeSubscription","addHubErrorMessage","dexihColumnValidations","dexihFileFormats","getCurrentFormObservable","form","controls","history","pushState","newUrl","pathname","navigateUp","close","FileFormatIndexComponent","eSharedObjectType","footer","_tableData","tableData","watchChanges","updateFileFormats","_hubCacheChangeSubscription","fileFormats","deleteFileFormats","description","updateDate","getObjectTags","FileFormat","items","cacheAddFileFormat","getHubCacheChangeObservable","hubCacheChange","changeClass","TagObjects","editFileFormat","styles","HubComponent","eCacheStatus","ePermission","openDelay","_webSocketSubscription","webSocketStatus","_remoteAgentSubscription","getRemoteAgentObservable","updateHub","onFocus","HubFormsService","fb","_datalinkTargetChanges","_parameterChanges","_currentFormObservable","formErrors","formSaving","showAllErrors","IgnoreFormChange","ignoreHubCacheChange","formChangeCount","validationMessages","validationFieldMessages","clearFormSubscriptions","currentForm","_valueChangesSubscription","_connectionChangesSubscription1","_connectionChangesSubscription2","_connectionChangesSubscription3","_tableChangesSubscription1","_tableChangesSubscription2","_tableColumnChangesSubscription1","_tableColumnChangesSubscription2","_tableColumnChangesSubscription3","_datalinkChangesSubscription1","_datalinkChangesSubscription2","_datalinkChangesSubscription3","_datalinkTestChangesSubscription","_genericParameterSubscription","itemTemplate","excludeKeys","existingKeys","control","setValue","addControl","valueChanges","onValueChanged","getFormErrorMessages","markAsDirty","field","dirty","valid","messages","errors","createErrorMessage","minlength","actualLength","requiredLength","maxlength","maxvalue","required","minvalue","keyField","formGroupFunc","changeType","Replace","pristine","call","ngOnDestroy","Delete","saveAs","valueMethod","getRawValue","property","cacheProperty","promptDialog","displayName","currentStatus","entityStatus","previousStatus","runTime","saveMethod","import1","importAction","New","updateHubChange","addHubMessage","cacheGetMethod","getFormErrorsRecursive","depth","repeat","formArray","cont","formIndex","value1","value2","trim","toLowerCase","parameter","showRefresh","listOfValuesKey","isRefreshing","rank","valueDesc","group","disabled","minLength","maxLength","addMissing","subscription2","isArray","connectionForm","duplicateConnectionNameValidator","connectionString","validators","requiredConnectionFields","Connection","passwordDisplay","passwordRaw","connectionStringDisplay","connectionStringRaw","startForm","no","stringCompare","useConnectionString","server","setErrors","tableForm","duplicateTableNameValidator","defaultTableLogicalName","schema","array","validator","requiredTableFields","tableColumnsForm","column","tableColumn","useLogical","siblingColumns","columnForm","duplicateTableColumnNameValidator","precision","columnMinRangeValidator","columnMaxRangeValidator","scale","String","Double","Decimal","Single","impact","lineage","isString","isNumber","updateValueAndValidity","columnsArray","columnGroup","min","Number","max","fileFormatForm","duplicateFileFormatNameValidator","quote","viewForm","duplicateViewNameValidator","sourceType","validateViewSource","dexihViews","duplicateDashboardNameValidator","lock","dashboardItemsForm","dexihDashboardItems","dashboardItem","dexihDashboards","resizeEvent","viewKey","formParameters","currentParameters","clear","concat","currentParameter","newParameter","newFormParameter","staticData","listOfValuesItem","lovForm","duplicateLovNameValidator","ListOfValues","dexihListOfValues","apiForm","validateDatalinkTable","validation","validationForm","duplicateValidationNameValidator","ColumnValidation","customFunction","customFunctionForm","duplicateCustomFunctionNameValidator","dexihCustomFunctionParameters","customFunctionParametersFormGroup","CustomFunction","dexihCustomFunctions","parameterForm","hubVariable","hubVariableForm","duplicateHubVariableNameValidator","isEncrypted","HubVariable","dexihHubVariables","duplicateTagNameValidator","Tags","duplicateDatalinkTestNameValidator","testStepsForm","datalinkTestStep","DatalinkTest","dexihDatalinkTests","testTablesForm","dexihDatalinkTestTables","datalinkTestTable","removeAt","testTable","trigger","triggerForm","datajobForm","stepForm","duplicateStepNameValidator","dexihDatalinkDependencies","dep","datalinkDependencyFormGroup","dexihDatalinkStepColumns","datalinkStepColumnFormGroup","depForm","colForm","triggers","dexihTriggers","triggerFormGroup","stepsArray","duplicateDatajobNameValidator","requiredNotZero","failAction","datalinkStepFormGroup","Datajob","remoteAgentForm","duplicateDatalinkColumnNameValidator","datalinkTableColumn","transformForm","sourceDatalinkTableFormGroup","nodeDatalinkColumn","outputColumns","transformColumns","dexihDatalinkTransformItems","datalinkDatalinkTransformItemFormGroup","datalinkTransformForm","itemForm","dexihFunctionParameters","datalinkFunctionParametersFormGroup","targetDatalinkColumn","duplicateOutputColumn","functionClassName","functionMethodName","asyncValidators","invalidClassName","genericTypeCode","typeCode","isGeneric","p","param","arrayParams","arrayParameters","ap","aParam","datalinkTransformItemForm","transformItemType","BuiltInFunction","GetFunctionReference","func","datalinkColumn","datalinkFunctionArrayParametersFormGroup","inconsistentDataType","parameterDataType","profileForm","targetForm","setControl","datalinkTable","dexihDatalinkColumns","profiles","dexihDatalinkProfiles","datalinkProfileFormGroup","targets","datalinkTargetFormGroup","transforms","datalinkTransformFormGroup","datalinkForm","duplicateDatalinkNameValidator","updateStrategy","templateDatalink","updateTransformFormColumns","transformsArray","ioColumns","buildInputOutput","transformFormControl","datalinkTransform","datalinkTransformKey","transformItemForm","sourceDatalinkColumn","paramForm","targetsArray","eDatalinkObjectType","eObjectUse","ImpactLineage","objectUse","Sort","Sorted","Mapping","Mapped","Function","Join","Joined","PassThrough","PassThroughMap","Source","Target","mappingStatus","NotMapped","ImpactItems","newStatus","GetImpact","InputOutputColumns","nodeDatalinkColumnKey","childColumn","findColumn","returnCol","findNodeColumn","findParentColumns","validColumns","cols","newCol","findValidColumn","levelCount","returnColumns","newColumn","io","getAvailableColumns","apply","newPosition","newGroup","copyDatalinkColumn","isIncrementalUpdate","isInput","newColumns","newTable","deltaType","IgnoreField","transformItems","pos","nodeColumn","copyDatalinkColumns","Series","Column","groupNode","GroupNode","groupColumn","transformType","Lookup","joinColumns","joinNode","JoinNode","joinColumn","joinPos","joinDuplicateStrategy","MergeValidDates","ValidFromDate","ValidToDate","jc","Concatenate","joinTable","AggregatePair","ColumnPair","UnGroup","parameterIsOutput","arrayParam","passThroughColumns","node","targetColumns","ColumnUsageNode","datalinkTransformItem","flat","useNextTransform","impactTree","newMappingStatus","nextTransform","SourceTable","Transform","TargetTable","columnIsMapped","newImpactTree","createDatalinkImpact","inputParams","flattenParameters","parameterIsInput","inputParam","outParams","outParam","JoinPair","joinDatalinkColumn","isAutoGenerateColumn","AutoGenerate","MappedToNothing","PassThroughToNothing","isQuery","MappedToVirtual","PassThroughToVirtual","usePreviousTransform","lineageTree","currentColumn","previousTransform","transforms2","outputs","newLineageTree","createDatalinkLineage","inParam","returnValue","AutoIncrement","DbAutoIncrement","Version","PartitionKey","RowKey","CreateAuditKey","CreateDate","FileName","IsCurrentField","RejectedReason","SourceSurrogateKey","TimeStamp","UpdateAuditKey","UpdateDate","ValidationStatus","EntityStatus","isBusy","lastStatus","None","eSearchObjectType","SearchObjectTypes","All","TableColumn","SearchResult","object","objectParent","SharedObjectProperty","parentKey","parentType","cacheAddMethod","icon","routerLink","SharedObject","HubCacheChange","HubCache","_sequenceGenerator","purpose","Managed","itemType","dexihApis","to","connectionCopy","datalinkTestStepKey","test","testStep","minKey","maxPos","deltaTypeDetail","deltaTypes","unique","defaultName","allowDbNull","getNextSequence","addColumn","TrackingField","Int64","Int32","newConnection","j","search","searchObject","results","searchAll","searchItem","itemParent","found","dataTypeIsString","dataTypeIsDecimal","getParametersCache","ti","customFunctionKey","cacheAddCustomFunction","datalinkDup","getDatalinkCache","expectedConnectionKey","targetConnectionKey","sourceConnectionKey","testConnectionKey","lookupColumnKey","lookupColumn","getColumn","cacheAddListOfValues","lov","parentObject","parentItem","obj","label","sharedType","sharedObject","datajobKey","dup","getDatajobCache","datajobCopy","dupDatalink","datalinkCopy","datalinkTestKey","dupDatalinkTest","getDatalinkTestCache","datalinkTestCopy","getConnectionCopy","cacheAddColumnValidation","dupValidation","getColumnValidationCache","dupFunction","apiKey","hubVariableKey","variable","startDate","toLocaleDateString","startTime","endTime","daysOfWeek","intervalTime","maxRecurs","originalDatalink","copyDatalink","datalinkColumnKeys","datalinkTableKey","filterDatalinkColumn","datalinkTransformItemKey","direction","Input","hubPermission","Output","ResultOutput","ResultReturnValue","ReturnValue","ResultInput","DataCache","previewQuery","DexihInputParameter","sortDirections","Ascending","Descending","seriesGrains","Second","Minute","Hour","Day","Week","Month","Year","NaturalKey","NonTrackingField","FileRowNumber","FileDate","ResponseSuccess","ResponseData","ResponseStatus","ResponseSegment","DatabaseOperation","Url","securityFlags","FastEncrypt","FastDecrypt","FastEncrypted","StrongEncrypt","StrongDecrypt","StrongEncrypted","OneWayHash","OneWayHashed","Hide","loadStrategies","Bulk","Transaction","updateStrategies","Reload","Append","AppendUpdate","AppendUpdateDelete","AppendUpdatePreserve","AppendUpdateDeletePreserve","transformItemTypes","useSource","useTarget","useJoin","useFilter","FilterPair","transformFunctionTypes","Condition","Aggregate","Rows","Profile","Validate","JoinCondition","FailActions","Abend","Continue","ContinueNonDependent","InvalidActions","Pass","Clean","RejectClean","Reject","Discard","FunctionCache","NoCache","EnableCache","CallOnce","CleanActions","DefaultValue","Truncate","Blank","Null","OriginalValue","CleanValue","sourceTypes","FileProperties","runStatus","Initialised","Scheduled","Started","Running","RunningErrors","Finished","FinishedErrors","Abended","Cancelled","NotRunning","Passed","Failed","formatTypes","Text","importActions","Leave","Skip","eMappingStatus","lineageMappingStatuses","statusClass","impactMappingStatuses","ConnectionTables","PreviewResults","FlatFilesReady","DashboardUrl","HubModule","ngModule","UpdateQueries","downloadFormats","JsonCompact","compare","IsEqual","showFilter","GreaterThan","GreaterThanEqual","LessThan","LessThanEqual","NotEqual","IsIn","IsNotIn","IsNull","IsNotNull","Like","RemoteAgentStatus","activeDatajobs","activeDatalinks","activeApis","functionTypes","transformTypes","allowUserConfig","Filter","Group","Validation","Delta","TransformReference","TypeCodes","isNumeric","Binary","Int16","UInt16","UInt32","UInt64","Byte","SByte","Time","Guid","Geometry","eBasicType","TypeFunctions","Numeric","Any","columnIsString","columnIsDecimal","routes","component","redirectTo","pathMatch","loadChildren","HubBaseModule","Routing","forChild","HubService","_hubKey","_hubCache","NoHub","_hubMessages","_hubCacheChange","_transformWriterResultChange","_apiStatusChange","_remoteLibraries","_flatFiles","_remoteAgent","isResettingRemoteAgent","_refreshHubRunning","processWebSocketMessage","getHubsObservable","getRemoteAgentsObservable","globalCache","remoteLibraries","defaultRemoteLibraries","functions","resetRemoteAgent","getHubCache","filterLoaded","observable","converted","getHubMessages","newMessage","refreshHubCache","Loading","hubPost","filterActive","isRunning","dexihRemoteAgentHubs","setNoRemoteAgent","getRemoteAgentsPromise","isAuthorized","defaultAgents","isDefault","getRemoteAgentStatus","otherAgents","remoteAgentHubs","authorized","getRemoteLibrariesPromise","ref","connectionAssemblyName","connectionClassName","userConfig","u","functionAssemblyName","functionType","HubChange","hubChange","HubError","DatalinkProgress","addDatalinkProgress","DatalinkStatus","DatajobProgress","addDatajobProgress","DatalinkTestProgress","addDatalinkTestProgress","ApiStatus","apiData","addApiStatus","flatFiles","mergeChange","hubVariables","columnValidations","customFunctions","RemoteAgent","tagObjects","mergeChangeTagObjects","source","current","isHubCacheLoaded","writerResult","referenceKey","targetTableKey","addTableProgress","childResults","auditKey","LogMessage","getRemoteAgentCurrent","hubPostRemote","hubPostConfirm","remoteAgentHubKey","remoteAgentHub","remoteAgentPromise","globalCachePromise","hubPromise","getHubCachePromise","all","values","agentStatus","getTransformWriterResult","previousDatalinks","getTransformWriterTable","previousDatajobs","activeDatalinkTests","previousDatalinkTests","referentKey","datalinkResult","SearchForTable","child","emails","sendInvites","userIds","alertEmails","content","navigator","msSaveBlob","URL","createObjectURL","setAttribute","style","visibility","click","removeChild","importPackage","connectionNames","itemKeys","getRemoteResponse","save","importedTables","doImport","saveTables","hubPostRemoteConfirm","dropTables","names","getCurrentRemoteAgentId","sourceTableKeys","datalinkType","targetTableName","addSourceColumns","auditColumns","datalinkName","datalinkNames","resetIncrementalValue","inputParameters","datalinkTestKeys","auditType","connectionKeys","referenceKeys","childItems","rows","datajobKeys","viewNames","objectKeys","apiNames","apiKeys","showRejectedData","previewTableDataQuery","previewData","transformProperties","viewConfig","getData","previewUpdates","urls","Static","httpPromise","summaryOnly","profileTableName","downloadObjects","getProfileTable","downloadTableData","validations","validationNames","functionNames","testValues","fileFormatNames","testValue","variables","variableNames","itemNames","createDefaultDatajob","stepKey","newDatajob","managedConnections","flatFilePath","subdirectory","useCustomFilePaths","Incoming","fileIncomingPath","Processed","fileProcessedPath","Rejected","fileRejectedPath","Outgoing","fileOutgoingPath","fixTrailingSlash","defaultDatabase","fileRootPath","files","fileNames","fromFilePath","toFilePath","fromPath","toPath","filePath","postRemoteUpload","formatType","loadData","includeFileName","includeFileDate","includeFileRowNumber","HubSharedModule","ItemEditGuard","canDeactivate","SummaryComponent","noManagedConnection","filterString","datalinkFilterString","connectionFilterString","columnValidationFilterString","fileFormatFilterString","datajobFilterString","tableFilterString","TablePreviewDataComponent","eDataObjectType","ViewEditComponent","hasEdited","refreshDataSubject","refreshDataObservable","eViewType","connectionTables","showChart","firstLoad","dialogOpen","animationValues","animationPaused","getConnectionTables","animateConfig","inputValues","viewType","Chart","getColumns","refresh","autoRefresh","_changesSubscription","reset","refreshDatalink","chartConfig","viewInputs","input","defaultValue","tableColumns","getDatalinkOutputColumns","baseData","viewParameters","datalinkParameterKey","datalinkParameters","datalinkParameter","previewView","seriesColumn","query","markAsChanged","$event","unloadNotification","ViewIndexComponent","iconClass","tooltip","width","align","updateViews","sourceName","sourceTable","sourceDatalink","sharedIcon","sharedToolTip","editView","ApiStatusComponent","progressClick","eApiStatus","showCancel","_currentStatusSubscription","apiStatus","Activated","downloadUrlType","Proxy","downloadType","securityKey","testUrl","proxy","errorCount","statusIcon","val","selBox","left","top","opacity","focus","select","execCommand","ApiViewComponent","eSourceType","ColumnValidationViewComponent","ConnectionViewComponent","getRemoteLibrariesObservable","DashboardViewComponent","DatajobViewComponent","StatusInfo","DatalinkStatusComponent","eRunStatus","getStatus","dataObject","currentWriterResult","_previousStatusSubscription","statusInfo","percentage","statusType","lastRowTotal","rowsTotal","numberWithCommas","rowsReadPrimary","cancelDatalinkTests","informationDialog","DatalinkViewComponent","eDatalinkType","DatalinkTestViewComponent","FileFormatViewComponent","InputParametersViewComponent","onChange","onRefreshData","parentParams","requiresRefresh","_hubSubscription","userParameters","allowUserSelect","_refreshSubscription","refreshEvent","previewListOfValuesKey","InputParametersComponent","allowAddRemove","maxKey","refreshLOV","insert","ListOfValuesViewComponent","PreviewDataComponent","requiresRefreshDataSubject","requiresRefreshDataObservable","allowViewSave","viewSource","previewDatalinkKeyData","previewTransformData","previewTableKeyData","previewTableData","downloadDatalinkData","saveView","RemoteAgentViewComponent","selectedAgent","isConnected","isSelected","lastLoginDateTime","TableColumnViewComponent","TableViewComponent","TransformPropertiesItemComponent","propertyKeys","properties","TransformPropertiesComponent","ViewViewComponent","WidgetsModule","HubsService","embedUserName","environment","ll","settings","remoteAgentSettings","logLevel","remoteApplicationSettings","RemoteApplicationSettings","AppComponent","setDialogDefaultContainer","modal","waitMessagesObservable","getWaitMessagesObservable","_waitMessagesSubscription","waitMessages","from","_routeEventsSubscription","events","loadingRouteKey","styleUrls","AppModule","provide","useClass","multi","bootstrap","canActivate","AdminModule","HubsModule","AuthModule","PublicModule","routing","forRoot","GlobalErrorHandler","injector","rejection","DexihHelpComponent","display","linkClick","_displayHelpSubscription","getDisplayHelp","displayHelp","matches","RegExp","match","setDisplayHelp","str","scrollTo","DexihHelpModule","AuthLayoutComponent","EmptyLayoutComponent","MainLayoutComponent","layoutService","collapsed","mobileViewActivated","sidebarState","mainState","_layoutSubscription","store","menuCollapsed","animations","FooterComponent","_globalCacheSubscription","date","buildDate","year","getFullYear","buildVersion","HeaderComponent","_notificationSubscription","getNotificationObservable","toastMessage","buttonName","delay","onButtonClick","toastClick","toasts","add","documentMethods","enter","exit","classList","contains","documentElement","method","remove","onCollapseMenu","onMenuToggle","onFullScreenToggle","logOut","HeaderModule","TasksComponent","tasksRunning","eManagedTaskStatus","eManagedTaskStatusItems","active","loading","activities","count","lastUpdate","getTasksObservable","_tasksSubscription","Created","Queued","alert","LayoutGuard","initialize","isLoggedIn","redirectUrl","LayoutModule","shortcutOpen","isMobile","userAgent","device","menuIsOpen","LayoutService","subject","resizeUpdate","complete","innerWidth","condition","HubsComponent","textClass","hubStatusMessage","hubCacheStatusSubscription","NotLoaded","manageHubs","LoginInfoComponent","userSubcription","MenuItemComponent","MenuParentComponent","expanded","toggle","height","NavigationComponent","hubCacheLoaded","objectCounts","ignoreClick","activeAgentCount","hideMenu","_hubCacheObserve","targetElement","clickedInside","sidebarElement","nativeElement","onClick","NavigationModule","RemoteAgentComponent","eDataPrivacyStatus","selectedRemoteAgent","activeHubAgents","setCurrentRemoteAgent","RibbonComponent","RibbonModule","RouteBreadcrumbsComponent","_eventSubscription","Breadcrumb","AnimateConfig","automatic","ApiData","successCount","ApplicationUser","concurrencyStamp","lockoutEnabled","lockoutEnd","normalizedEmail","passwordHash","phoneNumber","securityStamp","accessFailedCount","normalizedUserName","phoneNumberConfirmed","twoFactorEnabled","isRegistered","isEnabled","hubQuota","privateKey","certificateChain","certificateExpiry","AppSettingsSection","userPrompt","userToken","encryptionKey","webServer","autoUpgrade","allowPreReleases","autoStartPath","CacheManager","googleMapsAPIKey","cacheEncryptionKey","ChartConfig","labelColumn","pivotColumn","seriesColumns","xColumn","yColumn","minColumn","maxColumn","radiusColumn","latitudeColumn","longitudeColumn","chartType","eChartType","BarVertical","colorScheme","showGradient","showXAxis","showYAxis","showLegend","legendPosition","showXAxisLabel","showYAxisLabel","showGridLines","xAxisLabel","yAxisLabel","xScaleMax","xScaleMin","yScaleMax","yScaleMin","autoScale","explodeSlices","doughnut","separateAxis","barPadding","roundEdges","showDataLabel","singleBarColor","multiGridColumn","yAxisLabelRight","ClientMessage","eClientCommand","ConnectionAttribute","connectionCategory","databaseDescription","serverDescription","allowsConnectionString","allowsSql","allowsFlatFiles","allowsManagedConnection","allowsSourceConnection","allowsTargetConnection","allowsUserPassword","allowsWindowsAuth","requiresDatabase","requiresLocalStorage","serverHelp","allowsToken","defaultSchema","ConnectionReference","eMessageCommand","DataPack","DataPackColumn","eTypeCode","Unknown","DeleteQuery","filters","DexihActiveAgent","ipAddress","dataPrivacyStatus","upgradeAvailable","version","latestVersion","latestDownloadUrl","namingStandards","DexihApi","autoStart","cacheQueries","cacheResetInterval","logDirectory","createDate","DexihApiParameter","DexihBaseEntity","DexihColumnBase","isUnicode","eDeltaType","isUnique","isMandatory","securityFlag","eSecurityFlag","DexihColumnValidation","minValue","maxValue","patternMatch","regexMatch","listOfNotValues","lookupIsValid","lookupMultipleRecords","invalidAction","cleanAction","cleanValue","DexihConnection","useWindowsAuth","username","usePasswordVariable","useConnectionStringVariable","embedTableKey","connectionTimeout","commandTimeout","DexihCustomFunction","methodCode","resultCode","returnType","genericTypeDefault","DexihCustomFunctionParameter","allowNull","DexihDashboard","minRows","minCols","maxRows","maxCols","DexihDashboardItem","x","y","header","scrollable","DexihDashboardItemParameter","dashboardItemKey","DexihDashboardParameter","DexihDatajob","eFailAction","fileWatch","alertLevel","eAlertLevel","DexihDatajobParameter","DexihDatalink","sourceDatalinkTableKey","eUpdateStrategy","loadStrategy","eTransformWriterMethod","rowsPerCommit","rowsPerProgress","rollbackOnFail","addDefaultRow","DexihDatalinkColumn","DexihDatalinkDependency","datalinkStepKey","dependentDatalinkStepKey","DexihDatalinkParameter","DexihDatalinkProfile","detailedResults","DexihDatalinkStep","DexihDatalinkStepColumn","DexihDatalinkStepParameter","DexihDatalinkTable","rowsStartAt","rowsEndAt","rowsIncrement","disableVersioning","disablePushDown","DexihDatalinkTarget","DexihDatalinkTest","DexihDatalinkTestStep","targetSchema","expectedTableName","expectedSchema","errorConnectionKey","errorTableName","errorSchema","DexihDatalinkTestTable","sourceSchema","sourceTableName","testSchema","testTableName","DexihDatalinkTransform","joinDatalinkTableKey","joinSortDatalinkColumnKey","transformClassName","transformAssemblyName","joinStrategy","eJoinStrategy","Auto","eDuplicateStrategy","joinNotFoundStrategy","eJoinNotFoundStrategy","joinSortDatalinkColumn","maxInputRows","maxOutputRows","DexihDatalinkTransformItem","targetDatalinkColumnKey","sourceDatalinkColumnKey","joinDatalinkColumnKey","filterDatalinkColumnKey","sourceValue","joinValue","filterValue","functionCaching","eFunctionCaching","sortDirection","filterCompare","aggregate","seriesGrain","seriesFill","seriesStart","seriesFinish","functionCode","functionResultCode","onError","eErrorAction","onNull","Execute","notCondition","eInvalidAction","DexihFileFormat","matchHeaderRecord","skipHeaderRows","allowComments","bufferSize","delimiter","detectColumnCountChanges","hasHeaderRecord","ignoreHeaderWhiteSpace","ignoreReadingExceptions","ignoreQuotes","quoteAllFields","quoteNoFields","skipEmptyRecords","trimFields","trimHeaders","willThrowOnMissingField","setWhiteSpaceCellsToNull","DexihFunctionArrayParameter","functionParameterKey","datalinkColumnKey","DexihFunctionParameter","DexihFunctionParameterBase","DexihHub","eSharedAccess","DexihHubEntity","DexihHubKeyEntity","DexihHubNamedEntity","DexihHubUser","userId","receiveAlerts","DexihHubVariable","valueRaw","isEnvironmentVariable","DexihIssue","eIssueType","Other","category","eIssueCategory","severity","eIssueSeverity","Critical","gitHubLink","isPrivate","issueStatus","eIssueStatus","Open","dexihIssueComments","DexihIssueComment","DexihListOfValues","keyColumn","nameColumn","descriptionColumn","cacheSeconds","DexihParameterBase","DexihRemoteAgent","restrictIp","allowExternalConnect","ipAddresses","hashedToken","lastLoginIpAddress","DexihRemoteAgentHub","DexihTable","baseTableName","tableType","eTableType","sourceConnectionName","rejectedTableName","queryString","rowPath","sortColumnKeys","autoManageFiles","fileMatchPattern","restfulUri","maxImportLevels","isVersioned","fileSample","DexihTableColumn","DexihTag","color","DexihTagObject","DexihTrigger","cronExpression","DexihView","DexihViewParameter","DownloadData","transformSettings","DownloadObject","DownloadReadyBase","DownloadReadyMessage","DownloadUrl","eStatus","FileConfiguration","column1","compareDataType","column2","operator","eCompare","andOr","eAndOr","And","FlatFile","fileConfiguration","outputSortFields","FunctionParameter","isIndex","linkedName","linkedDescription","isLabel","isPassword","FunctionReference","resultMethodName","resetMethodName","importMethodName","genericType","isStandardFunction","returnParameters","outputParameters","resultReturnParameters","resultInputParameters","resultOutputParameters","HubUser","Import","warnings","ImportAction","ImportObject","InputColumn","InputParameter","InputParameterBase","InputParameters","InsertQuery","insertColumns","ListOfValuesItem","LoggingSection","includeScopes","LogLevelSection","logFilePath","LoginModel","system","microsoft","ManagedTask","originatorId","categoryKey","referenceId","counter","concurrentTaskAction","eConcurrentTaskAction","stepName","fileWatchers","nextTriggerTime","runCount","dependentTaskIds","dependenciesMet","ManagedTaskFileWatcher","isStarted","ManagedTaskProgressItem","ManagedTaskTrigger","endDate","intervalType","eIntervalType","Interval","daysOfMonth","weeksOfMonth","skipDates","NamingStandards","NetworkSection","externalDownloadUrl","localIpAddress","localPort","proxyUrl","downloadPort","enforceHttps","autoGenerateCertificate","dynamicDomain","certificateFilename","certificatePassword","enableUPnP","ParameterArray","ParameterColumn","ParameterJoinColumn","ParameterOutputColumn","Parameters","ParameterValue","PermissionsSection","allowLocalFiles","allowAllPaths","allowedPaths","allowAllHubs","allowedHubs","PluginsSection","mLNet","excel","oracle","dB2","mongo","PrivacySection","allowDataDownload","allowDataUpload","allowLanAccess","allowExternalAccess","allowProxy","QueryColumn","RegisterModel","eLoginProvider","Dexih","firstname","lastname","RemoteAgentProperties","RemoteAgentSettings","RemoteAgentSettingsSubset","allowDownload","allowUpload","autoSchedule","firstRun","preRelease","smtpServer","smtpUserName","smtpPassword","smtpPort","enableSsl","fromEmail","adminEmails","alertOnShutdown","alertOnCritical","requiresUpgrade","RemoteLibraries","RemoteMessage","messageId","timeOut","RemoteSettings","appSettings","systemSettings","SystemSettingsSection","logging","runtime","RuntimeSection","network","privacy","permissions","plugins","alerts","RenewSslCertificateModel","domain","ResponseMessage","configDirectory","appSettingsPath","externalIpAddress","defaultProxyUrl","userHash","generateUserToken","saveSettings","doUpgrade","SelectColumn","eAggregate","outputColumn","SelectQuery","tableName","sorts","groups","groupFilters","joins","eFlatFilePath","alias","SharedData","Sorts","maxAcknowledgeWait","responseTimeout","cancelDelay","encryptionIterations","maxPreviewDuration","maxConcurrentTasks","maxUploadSize","socketTransportType","defaultPreviewRows","maxPreviewRows","referenceTable","isParent","TableColumns","TransformAttribute","TransformPerformance","transformName","seconds","TransformProperties","primaryProperties","referenceProperties","TransformSettings","remoteSettings","TransformWriterOptions","TransformWriterResult","parentAuditKey","referenceName","lastMaxIncrementalValue","rowsPerProgressEvent","rowsCreated","rowsUpdated","rowsDeleted","rowsPreserved","rowsIgnored","rowsRejected","rowsFiltered","rowsSorted","rowsReadReference","passed","failed","readTicks","writeTicks","processingTicks","maxIncrementalValue","maxSurrogateKey","initializeTime","scheduledTime","lastUpdateTime","triggerMethod","eTriggerMethod","Manual","triggerInfo","performanceSummary","rejectTableName","isCurrent","isPrevious","isPreviousSuccess","isFinished","isScheduled","percentageComplete","UpdateQuery","updateColumns","UserModel","logins","roles","claims","ViewConfig","WebService","eAggregateItems","Sum","Average","Min","Max","Count","First","Last","eAlertLevelItems","Errors","eAndOrItems","Or","eApiStatusItems","Deactivated","eChartTypeItems","BarHorizontal","BarVertical2D","BarHorizontal2D","BarVerticalStacked","BarHorizontalStacked","BarVerticalNormalized","BarHorizontalNormalized","Pie","PieAdvanced","PieGrid","Line","Area","Polar","AreaStacked","AreaNormalized","Scatter","Bubble","ForceDirected","HeatMap","TreeMap","Cards","Gauge","LinearGauge","BarLineCombo","eCleanAction","eCleanActionItems","eClientCommandItems","DatajobStatus","TableProgress","ApiQuery","Command","eCompareItems","eConcurrentTaskActionItems","Parallel","Sequence","eConnectionCategoryItems","SqlDatabase","NoSqlDatabase","DatabaseFile","File","Hub","eConnectionPurposeItems","eDatalinkTypeItems","General","Stage","Deliver","Publish","Share","Query","eDataObjectTypeItems","DashboardItem","eDataPrivacyStatusItems","NotAllowed","Lan","Internet","eDayOfWeek","eDayOfWeekItems","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","eDeltaTypeItems","UpdateReason","eDownloadFormat","eDownloadFormatItems","eDownloadUrlType","eDownloadUrlTypeItems","Direct","eDuplicateStrategyItems","eEnvironment","eEnvironmentItems","Windows","Osx","Linux","eErrorActionItems","Ignore","eFailActionItems","eFlatFilePathItems","eFunctionCachingItems","eFunctionType","eFunctionTypeItems","eGenericType","eGenericTypeItems","eImportAction","eImportActionItems","eIntervalTypeItems","Once","Daily","Monthly","eInvalidActionItems","eIssueCategoryItems","Web","Saving","Security","eIssueSeverityItems","Major","Minor","Trivial","eIssueStatusItems","UnderReview","InProgress","Closed","eIssueTypeItems","Bug","Request","Question","Feedback","eJoinNotFoundStrategyItems","NullJoin","eJoinStrategyItems","Hash","Database","eLoginProviderItems","eLOVObjectType","eLOVObjectTypeItems","FileWatching","Completed","eMessageCommandItems","MessageResponse","RemoteAgentUpdate","RemoteMethod","eParameterDirection","eParameterDirectionItems","ePermissionItems","Suspended","PublishReader","eRunStatusItems","eSecurityFlagItems","eSeriesGrain","eSeriesGrainItems","eSharedAccessItems","Reader","eSharedObjectTypeItems","eSortDirection","eSortDirectionItems","eSourceTypeItems","eStatusItems","Ready","Imported","Updated","Added","eTableTypeItems","eTestTableAction","eTestTableActionItems","DropCreate","TruncateCopy","DropCreateCopy","eTransformItemType","eTransformItemTypeItems","eTransformType","eTransformTypeItems","Internal","eTransformWriterMethodItems","eTriggerMethodItems","NotTriggered","Schedule","FileWatcher","External","eTypeCodeItems","Char","Enum","eUpdateStrategyItems","eViewTypeItems","eWeekOfMonth","eWeekOfMonthItems","Third","Fourth","logLevelItems","Warning","SharedModule","colorSets","selectable","eInputFormat","inputFormats","SingleSeries","allowLabel","maxSeries","allowYSeries","allowMinMax","allowBubble","inverse","MultiSeries","ComboSeries","InverseSeries","Xy","XyMinMax","XyBubble","ChartTypes","charts","inputFormat","isHorizontal","allowGradient","allowLegend","allowXAxis","allowYAxis","allowXScaleMin","allowXScaleMax","allowYScaleMin","allowYScaleMax","allowLabels","allowExplodeSlices","allowDoughnut","allowGridLines","defaultShowXAxisLabel","defaultShowYAxisLabel","defaultShowXAxis","defaultShowYAxis","defaultShowGridLines","defaultColorScheme","defaultShowLegend","isBar","GeoCoordinates","ChartBuilderComponent","chartTypes","updateChartSubject","chartGroup","ngOnChanges","chart","svgElem","getElementsByTagName","getComputedStyle","getPropertyValue","replaceWith","clientHeight","clientWidth","canvas","toBlob","ChartViewComponent","responsive","gridColumnIndex","labelColumnIndex","seriesColumnIndex","seriesPivotIndex","seriesColumnsIndex","xColumnIndex","yColumnIndex","minColumnIndex","maxColumnIndex","radiusColumnIndex","latitudeColumnIndex","longitudeColumnIndex","customColors","colorIndex","getChartType","updateChartEvent","_updateChartSubscription","simpleChanges","getColumnIndex","updateChart","newWidth","newHeight","seriesLabel","changeColor","colorSet","colors","setLabel","chartItems","gridSeriesValues","singleColor","chartItem","singleSeries","multiSeries","inverseSeries","formatValue","series","latitude","longitude","addCustomColor","resultArray","Set","gridValues","chartData","setSeriesLabel","pivotValues","uniqueValues","seriesCount","pivotData","pivotIndex","pivotValue","seriesData","row","labels","labelValues","seriesIndex","seriesValue","pivotItem","valuesSet","columnIndex","ChartBuilderModule","ComboChartComponent","curve","legend","legendTitle","tooltipDisabled","activeEntries","roundDomains","colorSchemeLine","noBarWhenZero","activate","deactivate","margin","xAxisHeight","yAxisWidth","scaleType","yOrientLeft","yOrientRight","legendSpacing","dims","margins","xAxis","yAxis","showXLabel","showYLabel","legendType","schemeType","xScale","getXScale","yScale","getYScale","lineChart","xDomainLine","getXDomainLine","filteredDomain","yDomainLine","getYDomainLine","scaleLines","seriesDomain","getSeriesDomain","setColors","legendOptions","getLegendOptions","xOffset","entry","entries","hoveredVertical","deactivateAll","xScaleLine","getXScaleLine","yScaleLine","getYScaleLine","combinedSeries","slice","num","isDate","includes","getScaleType","xSet","yRightAxisScaleFactor","minMax","bandwidth","offset","floor","range","nice","xDomain","getXDomain","spacing","paddingInner","yDomain","getYDomain","yLeftAxisScaleFactor","scheme","colorsLine","opts","update","idx","onActivate","onDeactivate","updateLineWidth","encapsulation","showRightYAxisLabel","gradient","xAxisTickFormatting","yAxisTickFormatting","yRightAxisTickFormatting","rangeFillOpacity","dataLabelFormatting","tooltipTemplate","seriesTooltipTemplate","lineSeriesComponent","hideCircles","ComboSeriesVerticalComponent","dataLabelHeightChanged","barsForDataLabels","d0","reduce","sum","bars","formattedLabel","bar","abs","offset0","offset1","toFixed","getColor","gradientStops","getLinearGradientStops","tooltipLabel","ariaLabel","toLocaleString","seriesName","tooltipText","updateDataLabels","section","totalPositive","totalNegative","template","changeDetection","OnPush","seriesLine","GoogleMapComponent","addMapsScript","loadMapsData","googleMapsUrl","querySelectorAll","mapProp","center","google","maps","LatLng","zoom","mapTypeId","MapTypeId","ROADMAP","bounds","LatLngBounds","latLong","lat","lng","marker","Marker","animation","Animation","DROP","extend","fitBounds","DexihFormControlsModule","DexihFormErrorsModule","requiredValue","ControlError","childControlErrors","DexihInvalidFormDetailsComponent","showErrors","controlErrors","statusChanges","invalid","getFormErrors","parentControlError","controlError","setError","parentControl","getFunctionType","baseLink","DexihInvalidFormIconComponent","pageLoaded","DexihMessageComponent","isHidden","messageString","addMessage","DexihMessageModule","DownloadButtonComponent","autoCompact","EncryptionStatusIconComponent","DexihIconsModule","PrintButtonComponent","printContents","popupWin","innerHTML","write","print","PrivacyStatusButtonComponent","privacyStatus","QueryBuilderComponent","allRows","typeCodes","requiresRefreshEvent","_requiresRefreshSubscription","changed","selectColumns","sortColumns","onChanged","savedRowCount","QueryBuilderModule","SeriesAnimateComponent","showFrame","dataChange","initializeAnimation","animationStop","animationSeriesValues","animationRowIndex","animationPlay","animationFilter","animationColumnIndex","animationValue","first","animationTimer","setInterval","clearInterval","SeriesAnimateModule","previewListOfValues","PreviewDashboardItemComponent","isMaximized","onMaximize","maximize","refreshData","PreviewDashboardComponent","getSharedDataIndex","dexihMessage","getDashboard","setOptions","options","gridType","ScrollVertical","compactType","outerMargin","outerMarginTop","outerMarginRight","outerMarginBottom","outerMarginLeft","useTransformPositioning","mobileBreakpoint","maxItemCols","minItemCols","maxItemRows","minItemRows","maxItemArea","minItemArea","defaultItemCols","defaultItemRows","fixedColWidth","fixedRowHeight","keepFixedHeightInMobile","keepFixedWidthInMobile","scrollSensitivity","scrollSpeed","enableEmptyCellClick","enableEmptyCellContextMenu","enableEmptyCellDrop","enableEmptyCellDrag","emptyCellDragMaxCols","emptyCellDragMaxRows","ignoreMarginInRow","draggable","enabled","resizable","swap","pushItems","disablePushOnDrag","disablePushOnResize","pushDirections","north","east","south","west","pushResizeItems","displayGrid","disableWindowResize","disableWarnings","scrollToNewItems","itemChangeCallback","itemComponent","itemResize","itemResizeCallback","itemInitCallback","maximizedIndex","showToolbar","updateQueryParameters","getSharedDataObject","paramValues","searchParams","URLSearchParams","newRelativePathQuery","sharedData","PreviewComponent","embed","SharedDataModule","SharedDataComponent","dataIndex","searchForm","updateSearch","_searchSubscription","addErrorMessage","embedLink","embedFrame","scrollTop","addSuccessMessage","SupportOptionsComponent","isExpanded","supportOptions","DexihSupportOptionsModule","AllFilterPipe","moment","CalendarPipe","calendar","CountdownComponent","_changeDetector","_timing","_stopTimer","delta","_interval","detectChanges","_time","getTime","_startTimer","parseInt","days","hours","minutes","end","timing","DragZoneDirective","dragStart","dataTransfer","setData","zone","onDragStart","DropZoneDirective","requireFiles","dropAllowedClass","dropNotAllowedClass","dropFiles","dragFilesOver","dragLeave","dragInvalid","dropData","isMouseOver","isDropAllowed","stopPropagation","dropAllowed","dropEffect","types","getZone","zones","z","dragClass","_elementClass","elementClass","onDragOver","onDragLeave","onDrop","EqualFilterPipe","it","FieldFilterPipe","Functions","language","languages","locale","getLanguage","constructor","setTime","protocol","sameSite","cookie","toUTCString","parts","pop","shift","GtFilterPipe","IsValidFilterPipe","MaxItemsFilterPipe","SortDescPipe","SortPipe","TimeDirective","UtilsModule","production","eLogLevel","LogFactory","toISOString","debug","formatMessage","warn","info","Log","bootstrapModule"],"mappings":"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CAAeuD,MAAf;;AACA,sBAAI,CAAC+mB,YAAL,GAAoB,KAApB;AACH,aAHD,WAGS,YAAM;AACX,sBAAI,CAACzqB,IAAL,CAAUG,IAAV,CAAe,IAAf;;AACA,sBAAI,CAACsqB,YAAL,GAAoB,KAApB;AACH,aAND;AAOH;;;;WAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;UAEakc,mB,GAAb;AAAA;;AACW,aAAA1gC,GAAA,GAAM,CAAN;AACA,aAAAhF,IAAA,GAAe,IAAf;AACA,aAAAuiB,WAAA,GAAsB,IAAtB;AACA,aAAA3nB,KAAA,GAAQ,IAAR;AACV,O,EAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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AAnC,OAFwB,EAGxB;AAACgF,WAAG,EAAE,mEAAaklC,KAAnB;AAA0BlqC,YAAI,EAAE;AAAhC,OAHwB,EAIxB;AAACgF,WAAG,EAAE,mEAAamlC,IAAnB;AAAyBnqC,YAAI,EAAE;AAA/B,OAJwB,EAKxB;AAACgF,WAAG,EAAE,mEAAaolC,aAAnB;AAAkCpqC,YAAI,EAAE;AAAxC,OALwB,EAMxB;AAACgF,WAAG,EAAE,mEAAaqlC,UAAnB;AAA+BrqC,YAAI,EAAE;AAArC,OANwB,CAArB,C,CASP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEO,UAAMsqC,WAAW,GAAG,CACvB;AAACtlC,WAAG,EAAE,kEAAY6V,QAAlB;AAA4B7a,YAAI,EAAE;AAAlC,OADuB,EAEvB;AAACgF,WAAG,EAAE,kEAAYyY,KAAlB;AAAyBzd,YAAI,EAAE;AAA/B,OAFuB,EAGvB;AAACgF,WAAG,EAAE,kEAAY6jC,IAAlB;AAAwB7oC,YAAI,EAAE;AAA9B,OAHuB,CAApB,C,CAMP;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;;UAGauqC,c;;SAOb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AA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","file":"main-es5.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Subscription } from 'rxjs';\nimport { DexihHubUser, eSharedAccess, eLoginProvider } from '../shared/shared.models';\n\nexport const logoUrl = 'assets/img/dexih/dex_logo_wide_raw.png';\nexport const logoSmallUrl = 'assets/img/dexih/dexih_small.png';\n\nexport class User {\n        public email: string = null;\n        public userName: string = null;\n        public password: string = null;\n        public rememberMe = false;\n        public firstName: string = null;\n        public lastName: string = null;\n        public terms = false;\n        public subscription = false;\n        public code: string = null;\n        public emailConfirmed = false;\n        public isInvited = false;\n        public inviteQuota = 0;\n        public notifyPrivateMessage = true;\n        public notifySupportMessage = true;\n\n        // used when resetting passwords.\n        public newPassword = '';\n        public confirmPassword = '';\n\n        public isAdmin: boolean;\n\n    constructor(\n        _email?: string,\n        _userName?: string,\n        _password?: string,\n        _rememberMe?: boolean,\n    ) {\n        this.email = _email;\n        this.userName = _userName;\n        this.password = _password;\n        this.rememberMe = _rememberMe;\n    }\n}\n\nexport class UserLoginInfo {\n    public loginProvider: eLoginProvider = null;\n    public providerDisplayName: string = null;\n    public providerKey: string = null;\n}\n\nexport class DexihHubAuth {\n    public hubKey: number;\n    public name: string;\n    public description: string;\n    public encryptionKey: string;\n    public sharedAccess: eSharedAccess = eSharedAccess.Registered;\n    public expiryDate: Date;\n\n    public dexihHubUsers: Array<DexihHubUser>;\n\n    public remoteAgentId: string;\n\n    public createDate: Date;\n    public updateDate: Date;\n    public isValid = true;\n\n}\n\nexport class ExternalLoginResult {\n    public provider: string;\n    public email: string;\n    public isSignedIn: boolean;\n    public isLocked: boolean;\n    public isAlreadyRegistered: boolean;\n}\n\nexport class ExternalLogin {\n    public provider: string;\n    public email: string;\n    public firstName: string;\n    public lastName: string;\n    public providerKey: string;\n    public authenticationToken: string;\n}\n\nexport class Parameter {\n    public key: string;\n    public value;\n}\n\nexport class Message {\n    public reference: string;\n    public time: Number;\n\n    constructor(\n        public success: boolean,\n        public message: string,\n        public exceptionDetails: string,\n        public value: any\n    ) {\n        this.time = Date.now();\n    }\n}\n\n// export class ManagedTask {\n//     public reference: string;\n//     public remoteAgentId: string;\n//     public referenceKey: number;\n//     public referenceId: string;\n//     public status: eManagedTaskStatus;\n//     public name: string;\n//     public description: string;\n//     public category: string;\n//     public data: any;\n//     public percentage: number;\n//     public stepName: string;\n//     public isCompleted: boolean;\n//     public lastUpdate: string;\n//     public success: boolean;\n//     public message: string;\n//     public exceptionDetails: string;\n\n//     constructor() {\n//         this.status = eManagedTaskStatus.Created;\n//     }\n// }\n\n// export enum eManagedTaskStatus {\n//     Created = <any>'Created',\n//     Scheduled = <any>'Scheduled',\n//     Queued = <any>'Queued',\n//     Running = <any>'Running',\n//     Cancelled = <any>'Cancelled',\n//     Error = <any>'Error',\n//     Completed = <any>'Completed',\n//     FileWatching = <any>'FileWatching'\n// }\n\n// export class DexihRemoteAgent extends EntityBase {\n//     public remoteAgentKey = 0;\n//     public name: string = null;\n//     public restrictIp: boolean = null;\n//     public ipAddresses: string[] = null;\n//     public remoteAgentId: string = null;\n//     public userId: string = null;\n//     public hashedToken: string = null;\n//     public allowExternalConnect: boolean = null;\n//     public lastLoginIpAddress: string = null;\n//     public lastLoginDateTime: Date = null;\n\n//     public activeAgents: DexihActiveAgent[];\n// }\n\n// export class DexihActiveAgent {\n//     public remoteAgentKey: number;\n//     public user: string;\n//     public name: string;\n//     public isRunning: boolean;\n//     public ipAddress: string;\n//     public instanceId: string;\n//     public isEncrypted: boolean;\n//     public dataPrivacyStatus: eDataPrivacyStatus;\n//     public downloadUrls: DownloadUrl[];\n//     public currentDownloadUrl: DownloadUrl;\n//     public downloadUrlSummary: string;\n\n//     public upgradeAvailable: boolean;\n//     public version: string;\n//     public latestVersion: string;\n//     public latestDownloadUrl: string;\n// }\n\n// export enum eDataPrivacyStatus {\n//     NotAllowed = <any>'NotAllowed',\n//     Proxy = <any>'Proxy',\n//     Lan = <any>'Lan',\n//     Internet = <any>'Internet',\n//     CustomUrl = <any>'CustomUrl',\n// }\n\n// export enum EDownloadUrlType {\n//     Proxy = <any>'Proxy',\n//     Direct = <any>'Direct',\n// }\n\n// export class DownloadUrl {\n//     public url: string;\n//     public downloadUrlType: EDownloadUrlType;\n//     public isEncrypted: boolean;\n//     public testStatus: string;\n//     public testMessage: string;\n// }\n\nexport enum eHubAccess {\n    All, User, ReadOnly, Public\n}\n\nexport enum eFileStatus {\n    Waiting = <any>'Waiting',\n    Uploading = <any>'Uploading',\n    Downloading = <any>'Downloading',\n    Complete = <any>'Complete',\n    Error = <any>'Error',\n    Cancelled = <any>'Cancelled'\n}\n\nexport class FileHandler {\n    public id = Math.random().toString(36).substr(2, 9);\n    public progress: number;\n    public status: eFileStatus;\n    public message: string;\n    public httpSubscription: Subscription;\n    public file: File;\n    public url: string;\n\n    public constructor(file: File, url: string) {\n        this.file = file;\n        this.status = eFileStatus.Waiting;\n        this.progress = 0;\n        this.url = url;\n    }\n\n    public isRunning(): boolean {\n        switch (this.status) {\n            case eFileStatus.Uploading:\n            case eFileStatus.Downloading:\n                return true;\n        }\n\n        return false;\n    }\n\n    public cancel() {\n        if (this.httpSubscription) {\n            this.httpSubscription.unsubscribe();\n        }\n    }\n}\n\nexport class RemoteToken {\n    public user: string;\n    public remoteAgentId: string;\n    public userToken: string;\n}\n\n// export class PromiseWithCancel<T> implements Promise<T> {\n//     then<TResult1 = T, TResult2 = never>(onfulfilled?: (value: T) => TResult1 | PromiseLike<TResult1>, onrejected?:\n//    (reason: any) => TResult2 | PromiseLike<TResult2>): Promise<TResult1 | TResult2> {\n//         return this._promise.then(onfulfilled);\n//     }\n\n//     catch<TResult = never>(onrejected?: (reason: any) => TResult | PromiseLike<TResult>): Promise<T | TResult> {\n//         return this._promise.catch(onrejected);\n//     }\n\n//     [Symbol.toStringTag]: string;\n//     finally(onfinally?: () => void): Promise<T> {\n//         return this._promise.finally(onfinally);\n//     }\n\n//     public constructor(executor: (\n//         resolve: (value?: T | PromiseLike<T>) => void,\n//         reject: (reason?: any) => void) => void, cancel: () => void) {\n\n//         this._promise = new Promise<T>((resolve, reject) => {executor(resolve, reject)});\n//       }\n\n//     private _promise: Promise<T>;\n//     private _cancel?: () => void;\n\n//     onCancel(cancel?: () => void) {\n//         this._cancel = cancel;\n//     }\n\n//     cancel() {\n//         this._cancel();\n//     }\n// }\n\nexport class CancelToken {\n    public cancelMethod: () => void;\n\n    // cancel the operation\n    public cancel() {\n        if (this.cancelMethod) {\n            this.cancelMethod();\n        }\n    }\n}\n\nexport class PromiseWithCancel<T> extends Promise<T> {\n\n    private _cancel: CancelToken;\n\n\n    constructor(executor: (resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void,\n        cancel: CancelToken = new CancelToken()) {\n        super(executor);\n        this._cancel = cancel;\n    }\n\n    public cancel() {\n        if (this._cancel) {\n            this._cancel.cancel();\n        }\n    }\n\n}\n\nexport class WaitMessage {\n    public message: string;\n    public cancelToken: CancelToken;\n}\n\n\n\n","import { HttpClient, HttpHeaders, HttpRequest, HttpEventType, HttpResponse } from '@angular/common/http';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as FileSaver from 'file-saver';\nimport { BehaviorSubject, Observable, Subscription, Subject, ReplaySubject } from 'rxjs';\nimport { timeout, first, take } from 'rxjs/operators'\nimport { eLogLevel, LogFactory } from '../../logging';\nimport {\n    DexihHubAuth, ExternalLoginResult, Message,\n    User, UserLoginInfo, ExternalLogin, FileHandler, eFileStatus, RemoteToken, PromiseWithCancel, CancelToken, eHubAccess, WaitMessage\n} from './auth.models';\nimport { UserAgentApplication, AuthResponse, CacheLocation } from 'msal';\nimport { DModalComponent } from 'ngx-d-components';\nimport { Location } from '@angular/common';\nimport { DexihRemoteAgent, DexihActiveAgent, DownloadUrl, CacheManager, eClientCommand, eLoginProvider,\n    eTypeCode, ManagedTask, eManagedTaskStatus, ePermission, eSharedAccess, DexihIssue,\n    DexihDashboard, ListOfValuesItem, SharedData, eDownloadFormat, eDataObjectType, InputColumn, SelectQuery, InputParameterBase } from '../shared/shared.models';\nimport { PreviewResults } from '../+hub/hub.models';\nimport { WebSocketService} from './websocket.service';\nimport { environment } from '../../environments/environment';\nimport { Functions } from '../shared/utils/functions';\n\ndeclare var gapi: any;\n\n@Injectable()\nexport class AuthService implements OnDestroy {\n    // Create an observable user, so consuming components can update when credentials change.\n    private _currentUser = new BehaviorSubject<User>(null);\n    private _refreshUserAttempted = false;\n    private _refreshUserPromise;\n    public _hubs = new BehaviorSubject<Array<DexihHubAuth>>(null);\n    private _hubErrors = new BehaviorSubject<Array<Message>>([]);\n\n    private _displayHelp = new BehaviorSubject<boolean>(false);\n\n    private _tasks = new BehaviorSubject<Array<ManagedTask>>([]);\n\n    private _notification = new Subject<Message>();\n    private _notifications: Message[] = [];\n\n    private _logErrors = new BehaviorSubject<Message>(null);\n\n    private _waitMessages = new Map<string, WaitMessage>();\n    private _waitMessagesObserve = new BehaviorSubject<Map<string, WaitMessage>>(this._waitMessages);\n\n    private _globalCache = new ReplaySubject<CacheManager>();\n\n    private _remoteAgents = new BehaviorSubject<Array<DexihRemoteAgent>>(null);\n\n    // store the URL so we can redirect after logging in\n    public redirectUrl: string;\n\n    private _userSubscribe: Subscription;\n    private _webSocketSubscribe: Subscription;\n    private _logErrorsSubscribe: Subscription;\n\n    private modalComponent: DModalComponent;\n\n    private logger = new LogFactory('auth.service');\n\n    private updateRemoteAgentsFlag = false;\n\n    private sharedItemsIndex: SharedData[];\n\n    private webSocketService: WebSocketService;\n\n    private isInitialized = false;\n\n    private xSrfToken = null;\n\n    constructor(\n        private http: HttpClient,\n        private router: Router,\n        private route: ActivatedRoute,\n        private location: Location,\n    ) {\n    }\n\n    ngOnDestroy() {\n        this.logger.LogC(() => `ngOnDestroy.`, eLogLevel.Debug);\n\n        if (this._userSubscribe) { this._userSubscribe.unsubscribe(); }\n        if (this._webSocketSubscribe) { this._webSocketSubscribe.unsubscribe(); }\n        if (this._remoteAgents) { this._remoteAgents.unsubscribe(); }\n        if (this._logErrorsSubscribe) { this._logErrorsSubscribe.unsubscribe(); }\n    }\n\n    defaultHeaders(): HttpHeaders {\n        return new HttpHeaders({\n            'Content-Type': 'application/json',\n            'X-XSRF-TOKEN': Functions.getCookie('XSRF-TOKEN') ?? ''\n        });\n    }\n\n    initialize() {\n        // only initialize once\n        if (this.isInitialized) { return; }\n        this.isInitialized = true;\n\n        this.logger.LogC(() => 'Initializing AuthService', eLogLevel.Information);\n\n        this.webSocketService = new WebSocketService(this.location);\n\n        this.refreshGlobalCache();\n        this.refreshUser();\n\n        // whenever user login changes, update the list of hubs, and establish a websocket connection.\n        if (this._userSubscribe) { this._userSubscribe.unsubscribe(); }\n        this._userSubscribe = this.getUserObservable().subscribe(async (user) => {\n            if (user) {\n                this.logger.LogC(() => `New authorized user ${user.email}`, eLogLevel.Information);\n                this.refreshHubs();\n\n                await this.webSocketService.initializeWebSocket();\n\n                if (this._webSocketSubscribe) { this._webSocketSubscribe.unsubscribe(); }\n                this._webSocketSubscribe = this.webSocketService.getWebSocketObservable().subscribe(data => {\n                    if (data) {\n                        switch (data.command) {\n                            case eClientCommand.Disconnect: {\n                                this._remoteAgents.next(null);\n                            }\n                                break;\n                            case eClientCommand.Connect:\n                                // this.refreshGlobalCache();\n                                // this.refreshUser();\n                                this.pingRemoteAgents();\n                                break;\n                            case eClientCommand.ActiveAgentUpdate: {\n                                let remoteAgents = <DexihRemoteAgent[]>this._remoteAgents.value;\n                                if (remoteAgents) {\n                                    let activeAgent = <DexihActiveAgent>data.value;\n                                    let remoteAgent = remoteAgents.find(c => c.remoteAgentKey === activeAgent.remoteAgentKey);\n                                    if (remoteAgent) {\n                                        let existingIndex = remoteAgent['activeAgents']\n                                            .findIndex(c => c.instanceId === activeAgent.instanceId);\n                                        if (existingIndex >= 0) {\n                                            remoteAgent['activeAgents'][existingIndex] = activeAgent;\n                                        } else {\n                                            remoteAgent['activeAgents'].push(activeAgent);\n                                        }\n                                    } else {\n                                        remoteAgent = new DexihRemoteAgent();\n                                        remoteAgent.remoteAgentKey = activeAgent.remoteAgentKey;\n                                        remoteAgent.name = activeAgent.name;\n                                        remoteAgent['activeAgents'] = [activeAgent];\n                                        remoteAgents.push(remoteAgent);\n                                    }\n                                    this._remoteAgents.next(remoteAgents);\n                                } else {\n                                    let activeAgent = <DexihActiveAgent>data.value;\n                                    let remoteAgent = new DexihRemoteAgent();\n                                    remoteAgent.remoteAgentKey = activeAgent.remoteAgentKey;\n                                    remoteAgent.name = activeAgent.name;\n                                    remoteAgent['activeAgents'] = [activeAgent];\n                                    this._remoteAgents.next([remoteAgent]);\n                                }\n                                break;\n                            }\n                            case eClientCommand.RemoteAgentDelete: {\n                                let remoteAgents = <DexihRemoteAgent[]>this._remoteAgents.value;\n                                if (remoteAgents) {\n                                    let instanceId = data.value;\n                                    remoteAgents.forEach(remoteAgent => {\n                                        let existingIndex = remoteAgent['activeAgents'].findIndex(c => c.instanceId === instanceId);\n                                        if (existingIndex >= 0) {\n                                            remoteAgent['activeAgents'].splice(existingIndex, 1);\n                                        }\n                                    });\n                                    this._remoteAgents.next(remoteAgents);\n                                }\n                                break;\n                            }\n\n                            case eClientCommand.RemoteAgentUpdateKey: {\n                                let remoteAgents = <DexihRemoteAgent[]>this._remoteAgents.value;\n                                let index = remoteAgents.findIndex(c => c.remoteAgentKey === data.value);\n                                if (index >= 0) {\n                                    remoteAgents[index] = data.value;\n                                } else {\n                                    remoteAgents.push(data.value);\n                                }\n                                this._remoteAgents.next(remoteAgents);\n                                break;\n                            }\n\n                            case eClientCommand.RemoteAgentDeleteKey: {\n                                let remoteAgents = <DexihRemoteAgent[]>this._remoteAgents.value;\n                                let index = remoteAgents.findIndex(c => c.remoteAgentKey === data.value);\n                                if (index >= 0) {\n                                    remoteAgents.splice(index, 1);\n                                    this._remoteAgents.next(remoteAgents);\n                                }\n                                break;\n                            }\n\n                            case eClientCommand.HubUpdate: {\n                                this.logger.LogC(() => `hub-update: ${data.value}`, eLogLevel.Debug);\n\n                                let hub: DexihHubAuth = data.value;\n                                this.setHubAccess(hub);\n                                let hubs = this._hubs.getValue();\n                                if (hubs) {\n                                    let previousHub = hubs.find(c => c.hubKey === hub.hubKey);\n                                    if (previousHub) {\n                                        Object.assign(previousHub, hub);\n                                        this._hubs\n                                            .next(hubs.sort((a, b) => a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase() ? 1 : -1));\n                                    } else {\n                                        hubs.push(hub);\n                                        this._hubs\n                                            .next(hubs.sort((a, b) => a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase() ? 1 : -1));\n                                    }\n                                }\n                            }\n                                break;\n                            case eClientCommand.HubDelete: {\n                                this.logger.LogC(() => `hubs-delete: ${data.value}`, eLogLevel.Debug);\n\n                                let hubKeys: Array<number> = data.value;\n\n                                let hubs = this._hubs.getValue();\n                                if (hubs) {\n                                    hubKeys.forEach(hubKey => {\n                                        let previousHub = hubs.find(c => c.hubKey === hubKey);\n                                        if (previousHub) {\n                                            let index = hubs.indexOf(previousHub);\n                                            hubs.splice(index, 1);\n                                        }\n                                    });\n                                    this._hubs.next(hubs);\n                                }\n                            }\n                                break;\n                            case eClientCommand.Task:\n                                this.logger.LogC(() => `task: ${data.value}`, eLogLevel.Debug);\n\n                                const task = data.value;\n                                this.addUpdateTask(task);\n                                break;\n                            case eClientCommand.FileDownload: {\n                                this.logger.LogC(() => `file-download: ${data.value}`, eLogLevel.Debug);\n\n                                const downloadData = data.value;\n\n                                let formBody = {\n                                    HubKey: downloadData.hubKey,\n                                    SecurityToken: downloadData.securityToken,\n                                    FileReference: downloadData.reference\n                                }\n\n                                this.downloadFile('/api/Remote/GetFileStream',\n                                    formBody, downloadData.fileName, downloadData.contentType).then(() => {\n                                        // if (currentTask) {\n                                        //     currentTask.percentage = 100;\n                                        //     currentTask.status = eManagedTaskStatus.Success;\n                                        //     this.addUpdateTask(currentTask);\n                                        // }\n                                    }).catch(reason => {\n                                        // currentTask.percentage = 0;\n                                        // currentTask.status = eManagedTaskStatus.Error;\n                                        // currentTask.message = reason;\n                                        // this.addUpdateTask(currentTask);\n                                        this._hubErrors.next(reason);\n                                    });\n                            }\n                                break;\n                            case eClientCommand.DownloadReady: {\n                                this.logger.LogC(() => `download-ready ${data.value.url}`, eLogLevel.Debug);\n\n                                if (data.value.url.startsWith('http://')) {\n                                    this.modalComponent.confirm(\n                                        'Download (NOT ENCRYPTED)',\n                                        // tslint:disable-next-line:max-line-length\n                                        'Your download is ready from a remote agent that is not configured for encrypted (https) downloads.  Would you still like to download the data?',\n                                        'Download Now',\n                                        'Discard'\n                                    ).then((result) => {\n                                        if (result) {\n                                            window.open(data.value.url);\n                                        }\n                                    }).catch(reason => {\n                                        this._hubErrors.next(reason);\n                                    });\n                                } else {\n                                    let newWin = window.open(data.value.url);\n\n                                    if (!newWin || newWin.closed || typeof newWin.closed === 'undefined') {\n                                        this.modalComponent.confirm(\n                                            'Download ready',\n                                            'Your download is ready.  Click here to download directly.',\n                                            'Download Now',\n                                            'Discard'\n                                        ).then((result) => {\n                                            if (result) {\n                                                window.open(data.value.url);\n                                            }\n                                        }).catch(reason => {\n                                            this._hubErrors.next(reason);\n                                        });\n                                    }\n                                }\n                            }\n                                break;\n                        }\n                    }\n                });\n            }\n        });\n\n        if (this._logErrorsSubscribe) { this._logErrorsSubscribe.unsubscribe(); }\n        this._logErrorsSubscribe = this._logErrors.asObservable().subscribe((logMessage: Message) => {\n            if (!logMessage) { return; }\n\n            let headers = this.defaultHeaders(); // new HttpHeaders({ 'Content-Type': 'application/json' });\n\n            const m = {\n                message: logMessage.message,\n                details: logMessage.exceptionDetails,\n                context: 'global',\n                url: this.router.url\n            };\n\n            this.logger.LogC(() =>\n                `Global Error (this has been logged for further analysis)\\n\n                Message: ${logMessage.message}\\n\n                Details: ${logMessage.exceptionDetails}\\n\n                Url: ${this.router.url}\\n\n            `, eLogLevel.Error);\n\n            const body = JSON.stringify(m);\n\n            this.http.post<Message>(this.getApiUrl('/api/Account/LogError'),\n                body,\n                { withCredentials: true, headers: headers }).subscribe(() => {\n                // doesn't matter what is returned.\n            });\n        });\n    }\n\n    // redirects a link click to either a route or an external web site based on the link format\n    // the event should be from the click event (click)=\"getRoute(event)\"\n    getRoute(event) {\n        let element = event.target;\n        while (element) {\n            let link: string = element.getAttribute('href');\n      \n            if (link) {\n                if (link.endsWith('.md') && !link.startsWith('http')) {\n                  this.router.navigate([], { relativeTo: this.route, queryParams: {'path': link} });\n                } else if (link.startsWith('route:')) {\n                  // don't allow link clicks unless logged in\n                } else if (link.startsWith('unsafe:route:')) {\n                    let route = link.substr(13);\n                    this.router.navigate([route]);\n                } else if (link.startsWith('#')) {\n                    this.router.navigate(['.', link]);\n                } else {\n                    window.open(link);\n                }\n                event.preventDefault();\n            }\n      \n            element = element.parentElement;\n        }\n      }\n\n    // // converts a string from underscore notation to camel case\n    // toCamelCase(str): string {\n    //     return str.substring(0, 1).toLowerCase() +\n    //         str.substring(1).replace(/_([a-z])(?=[a-z]|$)/g, function ($0, $1) { return $1.toUpperCase(); });\n    // }\n\n    // // this function adds alternative getters and setters for the camel cased counterparts\n    // // to the runtime message's prototype (i.e. without having to register a custom class):\n    // addCamelCase(type) {\n    //     // type.name = this.toCamelCase(type.name);\n    //     if (type.fieldsArray) {\n    //         type.fieldsArray.forEach(field => {\n    //             field.name = this.toCamelCase(field.name);\n    //         });\n    //     }\n\n    //     // flatten oneofs array\n    //     if (type.oneofsArray) {\n    //         type.oneofsArray.forEach(oneof => {\n    //             oneof.name = this.toCamelCase(oneof.name);\n    //         });\n    //     }\n    //     return type;\n    // }\n\n    setHubAccess(hub: DexihHubAuth) {\n        if (hub.dexihHubUsers.findIndex(c => c.permission === ePermission.Owner || c.permission === ePermission.User) >= 0) {\n            hub['hubAccess'] = eHubAccess.User;\n          } else if (hub.dexihHubUsers.findIndex(c => c.permission === ePermission.FullReader) >= 0) {\n            hub['hubAccess'] = eHubAccess.ReadOnly;\n          } else if (hub.sharedAccess === eSharedAccess.Public || hub.sharedAccess === eSharedAccess.Registered) {\n            hub['hubAccess'] = eHubAccess.Public;\n          }\n    }\n\n    // set available remoteAgents\n    getRemoteAgentsObservable(): Observable<DexihRemoteAgent[]> {\n        return this._remoteAgents.asObservable();\n    }\n\n    getRemoteAgentsPromise(): Promise<DexihRemoteAgent[]> {\n        // return new Promise<DexihRemoteAgent[]>((resolve, reject) => {\n        //   let subscription = this._remoteAgents.subscribe(\n        //     result => {\n        //         resolve(result);\n        //         subscription.unsubscribe();\n        //     },\n        //     error => {\n        //         reject(error);\n        //     }\n        //     );\n        // });\n\n        return this._remoteAgents.asObservable().pipe(take(1)).toPromise();\n    }\n\n    // gets an instance of a remote agent.\n    getRemoteAgent(remoteAgentKey: number): DexihRemoteAgent {\n        let remoteAgents = this._remoteAgents.value;\n        if (remoteAgents) {\n            return remoteAgents.find(c => c.remoteAgentKey === remoteAgentKey);\n        } else {\n            return null;\n        }\n    }\n\n    getAuthErrorsObservable(): Observable<Array<Message>> {\n        return this._hubErrors.asObservable();\n    }\n\n    getAuthErrors(): Array<Message> {\n        return this._hubErrors.value;\n    }\n\n    public getUserObservable(): Observable<User> {\n        return this._currentUser.asObservable();\n    }\n\n    public getUser(): User {\n        if (this._currentUser) {\n            return this._currentUser.value;\n        } else {\n            return null;\n        }\n    }\n\n    public getDisplayHelp(): Observable<boolean> {\n        return this._displayHelp.asObservable();\n    }\n\n    public setDisplayHelp(value: boolean) {\n        this._displayHelp.next(value);\n    }\n\n\n    // if logged in returns the user, otherwise returns null.\n    public isLoggedIn(): Promise<User> {\n        if (!this._refreshUserAttempted) {\n            return Promise.resolve(this._currentUser.value);\n        } else {\n            return this.refreshUser();\n        }\n    }\n\n    public getWebSocketObservable() {\n        return this.webSocketService?.getWebSocketObservable();\n    }\n\n    public getWebSocketStatusObservable() {\n        return this.webSocketService?.getWebSocketStatusObservable();\n    }\n\n    public getWebSocketConnectionId() {\n        return this.webSocketService?.getWebSocketConnectionId();\n    }\n\n    public JsonNoNulls(data) {\n        return JSON.stringify(data, (key, value) => {\n            // don't bother saving the null values.\n            if (value === null) { return undefined; }\n\n            switch (key) {\n                case 'currentStatus':\n                case 'entityStatus':\n                case 'previousStatus':\n                case 'runTime':\n                    return undefined;\n            }\n\n            return value;\n        });\n    }\n\n    public getApiUrl(url) {\n        if (environment.apiUrl ) {\n            return environment.apiUrl + url;\n        } else {\n            // adds path information if the app is installed under a subfolder.\n            return this.location.prepareExternalUrl(url);\n        }\n    }\n\n    // post form data\n    public postForm(url, data, waitMessage = 'Please wait while the operation completes.', cancelToken = null): Promise<any> {\n        // let headers = new HttpHeaders({\n        //     // 'Authorization': `Bearer ${authToken}`,\n        //     // 'Content-Type': 'multipart/form-data'\n        // });\n\n        let headers = new HttpHeaders({\n            'X-XSRF-TOKEN': Functions.getCookie('XSRF-TOKEN') ?? ''\n        });\n        // const headers = this.defaultHeaders();\n\n        return this.postBody(url, data, headers, waitMessage, cancelToken);\n    }\n\n    // posts a command that will be collected from a remoteAgent\n    public postRemote<T>(url: string, data, remoteAgent: DexihActiveAgent,\n        waitMessage = 'Please wait while the operation completes.', cancelToken: CancelToken = null): PromiseWithCancel<T> {\n        \n        let messageKey = this.addWaitMessage(waitMessage, null, cancelToken);\n\n        if (!cancelToken) {\n            cancelToken = new CancelToken();\n        }\n\n        let promise = new PromiseWithCancel<any>((resolve, reject) => {\n\n            // post the command to the web server, and receive unique id that can call the remote agent.\n            this.postRemoteGetKey(url, data, remoteAgent, cancelToken).then(key => {\n\n                // call the remote agent with the unique id.\n                this.getRemoteData<T>(remoteAgent, key, cancelToken, 'download').then(result => {\n                    this.removeWaitMessage(messageKey);\n                    resolve(result);\n                }).catch(reason => {\n                    this.removeWaitMessage(messageKey);\n                    reject(reason);\n                    // reject(`The request failed to the remote agent at ${url} for reason: ${reason}`);\n                });\n            }).catch(reason => {\n                this.removeWaitMessage(messageKey);\n                reject(reason);\n            });\n        });\n\n        return promise;\n    }\n\n    public postRemoteGetKey(url: string, data, remoteAgent: DexihActiveAgent,\n         cancelToken: CancelToken): PromiseWithCancel<string> {\n        if (!cancelToken) {\n            cancelToken = new CancelToken();\n        }\n\n        // let headers = new HttpHeaders({\n        //     // 'Authorization': `Bearer ${authToken}`,\n        //     'Content-Type': 'application/json'\n        // });\n\n        const headers = this.defaultHeaders();\n       \n        if (!cancelToken) {\n           cancelToken = new CancelToken();\n       }\n\n        let promise = new PromiseWithCancel<any>((resolve, reject) => {\n            if (!remoteAgent) {\n                reject(new Message(false, 'The request failed, as there are no available remote agents.', null, null));\n                return;\n            }\n\n            data.remoteAgentId = remoteAgent.instanceId;\n\n            // get the best download route\n            this.getBestDownloadUrl(remoteAgent, 0).then(downloadUrl => {\n                data.downloadUrl = downloadUrl;\n\n                let json = this.JsonNoNulls(data);\n\n                // post command to api server, and return the unique key which can be\n                // used to collect the results form the remote agent.\n                const apiUrl = this.getApiUrl(url);\n                this.http.post(apiUrl, json, { withCredentials: true, headers: headers, responseType: 'text' })\n                .toPromise().then(key => {\n                    resolve(key);\n                }).catch(reason => {\n\n                    // special return code, which means the remote agent has changed.\n                    if (reason.status === 426) {\n\n                        // the new agent is returned as part of the error.\n                        remoteAgent = JSON.parse(reason.error);\n\n                        // run the query again with the new remote agent.\n                        this.getBestDownloadUrl(remoteAgent, 0).then(downloadUrl2 => {\n                            localStorage.setItem(`hub-remote-agent-${data.hubKey}`, JSON.stringify(remoteAgent));\n                            data.downloadUrl = downloadUrl2;\n                            data.remoteAgentId = remoteAgent.instanceId;\n                            json = this.JsonNoNulls(data);\n                            this.http.post(apiUrl, json, { withCredentials: true, headers: headers, responseType: 'text' })\n                            .toPromise().then(key => {\n                                resolve(key);\n                            }).catch(reason2 => reject(reason2));\n                        }).catch(reason2 => reject(reason2));\n                    } else {\n                        reject(this.httpError(url, reason));\n                    }\n                });\n            }).catch(reason => {\n                reject(reason);\n            });\n        });\n\n        return promise;\n    }\n\n    public postFormRemoteGetKey(url: string, formData: FormData, remoteAgent: DexihActiveAgent,\n        cancelToken: CancelToken): PromiseWithCancel<string> {\n       if (!cancelToken) {\n           cancelToken = new CancelToken();\n       }\n\n       formData.append('remoteAgentId', remoteAgent.instanceId);\n\n       let promise = new PromiseWithCancel<any>((resolve, reject) => {\n           this.getBestDownloadUrl(remoteAgent, 0).then(downloadUrl => {\n            //    if (downloadUrl && downloadUrl.downloadUrlType === eDownloadUrlType.Proxy) {\n            //         formData.append('responseUrl', downloadUrl.url);\n            //    }\n\n            formData.append('downloadUrlJson', JSON.stringify(downloadUrl));\n\n               this.http.post(this.getApiUrl(url), formData, { withCredentials: true, responseType: 'text' })\n               .toPromise().then(key => {\n                   resolve(key);\n               }).catch(reason => {\n                   reject(this.httpError(url, reason));\n               });\n           }).catch(reason => {\n               reject(reason);\n           });\n       });\n\n       return promise;\n   }\n\n\n\n    /// posts to api, and returns raw result.\n    public postGetRaw(url: string, data, waitMessage = 'Please wait while the operation completes.',\n      cancelToken: CancelToken): PromiseWithCancel<string> {\n        let messageKey = this.addWaitMessage(waitMessage);\n       if (!cancelToken) {\n           cancelToken = new CancelToken();\n       }\n\n    //    let headers = new HttpHeaders({\n    //        // 'Authorization': `Bearer ${authToken}`,\n    //        'Content-Type': 'application/json'\n    //    });\n\n        const headers = this.defaultHeaders();\n\n       let promise = new PromiseWithCancel<any>((resolve, reject) => {\n            this.http.post(this.getApiUrl(url), this.JsonNoNulls(data), { withCredentials: true, headers: headers, responseType: 'text' })\n            .toPromise().then(value => {\n                this.removeWaitMessage(messageKey);\n                resolve(value);\n            }).catch(reason => {\n                this.removeWaitMessage(messageKey);\n                reject(this.httpError(url, reason));\n            });\n       });\n\n       return promise;\n   }\n\n    // returns a url to upload files to\n    public postRemoteUpload(url: string, data, remoteAgent: DexihActiveAgent,\n        waitMessage = 'Please wait while the operation completes.', cancelToken: CancelToken):\n            PromiseWithCancel<{url: string, key: string}> {\n        let messageKey = this.addWaitMessage(waitMessage);\n        if (!cancelToken) {\n            cancelToken = new CancelToken();\n        }\n\n        // let headers = new HttpHeaders({\n        //     // 'Authorization': `Bearer ${authToken}`,\n        //     'Content-Type': 'application/json'\n        // });\n\n        const headers = this.defaultHeaders();\n\n        data.remoteAgentId = remoteAgent.instanceId;\n\n        let promise = new PromiseWithCancel<{url: string, key: string}>((resolve, reject) => {\n            this.getBestDownloadUrl(remoteAgent, 0).then(downloadUrl => {\n                data.downloadUrl = downloadUrl;\n                // if (downloadUrl && downloadUrl.downloadUrlType === eDownloadUrlType.Proxy) {\n                //     data.responseUrl = downloadUrl.url;\n                // }\n\n                this.http.post(this.getApiUrl(url), this.JsonNoNulls(data),\n                { withCredentials: true, headers: headers, responseType: 'text' })\n                .toPromise().then(key => {\n                    this.removeWaitMessage(messageKey);\n                    resolve({url: downloadUrl.url + '/upload/' + key, key});\n                }).catch(reason => {\n                    this.removeWaitMessage(messageKey);\n                    reject(this.httpError(url, reason));\n                });\n            }).catch(reason => {\n                this.removeWaitMessage(messageKey);\n                reject(reason);\n            });\n        })\n\n        return promise;\n    }\n\n    // gets the url to execute a remote command\n    public async getRemoteUrl(activeAgent: DexihActiveAgent, key: string, command: 'upload' | 'download' | 'setRaw' = 'download',\n        extra: string): Promise<string> {\n        let baseUrl: string;\n\n        if (!activeAgent) {\n            let message = new Message(false, 'The data cannot be downloaded as there is no current remote agent.', null, null);\n            return Promise.reject(message);\n        } else if (activeAgent['currentDownloadUrl']) {\n            baseUrl = activeAgent['currentDownloadUrl'].url;\n        } else if (activeAgent.downloadUrls.length === 0) {\n            let message = new Message(false, 'Current remote agent does not have data download/upload available.', null, null);\n            return Promise.reject(message);\n        } else {\n            let download = await this.getBestDownloadUrl(activeAgent, 0);\n            baseUrl = download.url;\n        }\n\n        let downloadUrl: string;\n        downloadUrl = baseUrl + '/' + command + '/' + key;\n\n        if (extra) {\n            downloadUrl += '/' + extra;\n        }\n\n        return Promise.resolve(downloadUrl);\n    }\n\n    // gets the url to execute a remote command\n    public async getRemoteData<T>(activeAgent: DexihActiveAgent, key: string, cancelToken: CancelToken, command: 'upload' | 'download' | 'setRaw' = 'download', extra = ''): Promise<T> {\n        let downloadUrl = await this.getRemoteUrl(activeAgent, key, command, extra);\n        return this.getFromExternal<T>(downloadUrl, null, cancelToken);\n    }\n\n    // post an object which is converted to json.\n    public post<T>(url, data, waitMessage = 'Please wait while the operation completes.',\n        cancelToken: CancelToken = null): PromiseWithCancel<T> {\n        // let headers = new HttpHeaders({\n        //     // 'Authorization': `Bearer ${authToken}`,\n        //     'content-type': 'application/json'\n        // });\n\n        const headers = this.defaultHeaders();\n\n        let body: string;\n        if (data) {\n            data.clientConnectionId = this.getWebSocketConnectionId()\n            body = this.JsonNoNulls(data);\n        } else {\n            body = '{}';\n        }\n\n        return this.postBody(url, body, headers, waitMessage, cancelToken);\n    }\n\n    // posts data to the api.\n    private postBody<T>(url, body, headers, waitMessage = 'Please wait while the operation completes.',\n        cancelToken: CancelToken): PromiseWithCancel<any> {\n\n        if (!cancelToken) {\n            cancelToken = new CancelToken();\n        }\n\n        let promise = new PromiseWithCancel<T>((resolve, reject) => {\n            let messageKey = this.addWaitMessage(waitMessage);\n            this.logger.LogC(() => `post url: ${url}, data: ${body}.`, eLogLevel.Debug);\n\n            let subscription = this.http.post<T>(this.getApiUrl(url), body, { withCredentials: true, headers: headers }).subscribe(\n                result => {\n                    this.removeWaitMessage(messageKey);\n                    resolve(result);\n                }, error => {\n                    this.removeWaitMessage(messageKey);\n                    reject(this.httpError(url, error));\n                }, () => {\n                    this.removeWaitMessage(messageKey);\n                });\n\n            cancelToken.cancelMethod = () => {\n                subscription.unsubscribe();\n                reject(new Message(false, 'Cancelled', null, null));\n            }\n        }, cancelToken);\n\n        return promise;\n    }\n\n    // get from the api\n    public getFromApi<T>(url, waitMessage = 'Please wait while the operation completes.', cancelToken: CancelToken):\n        PromiseWithCancel<T> {\n        let messageKey: string = null;\n        if (waitMessage) {\n            messageKey = this.addWaitMessage(waitMessage);\n        }\n        let baseUrl = this.getApiUrl(url);\n\n        if (!cancelToken) {\n            cancelToken = new CancelToken();\n        }\n\n        let promise = new PromiseWithCancel<T>((resolve, reject) => {\n            let subscription = this.http.get<T>(baseUrl, {withCredentials: true}).subscribe(result => {\n                this.removeWaitMessage(messageKey);\n                resolve(result);\n            }, error => {\n                this.removeWaitMessage(messageKey);\n                reject(this.httpError(url, error));\n            }, () => {\n                cancelToken.cancelMethod = null;\n            });\n\n            cancelToken.cancelMethod = () => {\n                subscription.unsubscribe();\n                reject(new Message(false, 'Cancelled', null, null));\n            }\n        }, cancelToken);\n\n        return promise;\n    }\n\n    // calls an external url (mostly used for remote agent calls).\n    public getFromExternal<T>(url, waitMessage = 'Please wait while the operation completes.', cancelToken: CancelToken):\n    PromiseWithCancel<T> {\n        let messageKey: string = null;\n        if (waitMessage) {\n            messageKey = this.addWaitMessage(waitMessage);\n        }\n\n        if (!cancelToken) {\n            cancelToken = new CancelToken();\n        }\n\n        let promise = new PromiseWithCancel<T>((resolve, reject) => {\n            let subscription = this.http.get<T>(url).subscribe(result => {\n                this.removeWaitMessage(messageKey);\n                resolve(result);\n            }, error => {\n                this.removeWaitMessage(messageKey);\n                reject(this.httpError(url, error));\n            }, () => {\n                cancelToken.cancelMethod = null;\n            });\n\n            cancelToken.cancelMethod = () => {\n                subscription.unsubscribe();\n                reject(new Message(false, 'Cancelled', null, null));\n            }\n        }, cancelToken);\n\n        return promise;\n    }\n\n    private httpError(url: string, error: any): Message {\n        let message = new Message(false, 'Http Error', `Error calling ${url}.`, null);\n        if (error.error) {\n            if (error.error.error) {\n                message.message = error.error.error.message;\n                message.exceptionDetails += error.error.error.stack;\n            } else {\n                if (error.status === 400) {\n                    if (typeof(error.error) === 'string') {\n                        message = JSON.parse(error.error);\n                    } else {\n                        message = error.error;\n                    }\n                } else {\n                    message.message = error.error;\n                }\n            }\n        } else {\n            this.logger.LogC(() =>\n                `post warning error:${error}`, eLogLevel.Error);\n            if (error.status === 504) {\n                message.message = 'The Integration Hub API could not be reached.';\n            }\n            message.message = error.message;\n        }\n\n        return message;\n    }\n\n    public postConfirm<T>(url, data, waitMessage = 'Please wait while the operation completes.',\n        confirmMessage = 'Please confirm action?', cancelToken = null): Promise<T> {\n        return new Promise<T>((resolve, reject) => {\n            this.confirmDialog('Please confirm?', confirmMessage)\n            .then(result => {\n                if (result) {\n                    resolve(this.post<T>(url, data, waitMessage, cancelToken));\n                } else {\n                    reject();\n                }\n            }).catch(() => { reject(); });\n        });\n    }\n\n    \n\n    public upload(file: FileHandler): Promise<Message> {\n        return new Promise<Message>((resolve, reject) => {\n\n            if (!file.file) {\n                return new Message(false, 'The specified file was not found.', '', '');\n            }\n\n            // create a new multipart-form for every file\n            const formData: FormData = new FormData();\n            formData.append('file', file.file, file.file.name);\n\n\n            // create a http-post request and pass the form\n            // tell it to report the upload progress\n            const req = new HttpRequest('POST', file.url, formData, {\n                // withCredentials: true,\n                // headers: headers,\n                reportProgress: true\n            });\n\n            file.progress = 0;\n            file.status = eFileStatus.Uploading;\n\n            // send the http-request and subscribe for progress-updates\n            file.httpSubscription = this.http.request(req).subscribe(event => {\n                if (event.type === HttpEventType.UploadProgress) {\n\n                    // calculate the progress percentage\n                    const percentDone = Math.round(100 * event.loaded / event.total);\n\n                    // pass the percentage into the progress-stream\n                    file.status = eFileStatus.Uploading;\n                    file.progress = percentDone;\n                } else if (event instanceof HttpResponse) {\n                    if (event.body) {\n                        let result = <Message>event.body;\n                        if (result.success) {\n                            // Close the progress-stream if we get an answer form the API\n                            // The upload is complete\n                            file.status = eFileStatus.Complete;\n                            file.progress = 100;\n                            resolve(result);\n                        } else {\n                            file.status = eFileStatus.Error;\n                            file.message = result.message;\n                            file.progress = 0;\n                            reject(result);\n                        }\n                    } else {\n                        // Close the progress-stream if we get an answer form the API\n                        // The upload is complete\n                        file.status = eFileStatus.Complete;\n                        file.progress = 100;\n                        resolve(new Message(true, 'File upload successful.', '', ''));\n                    }\n                }\n            }, error => {\n                let message: Message;\n                if (error.error) {\n                    message = error.error;\n                } else {\n                    message = new Message(false, error.message, error, '');\n                }\n\n                file.status = eFileStatus.Error;\n                file.message = message.message;\n                file.progress = 0;\n\n                reject(message);\n            });\n        });\n\n    }\n\n    // converts columns returned by preview into columns which can be displayed on <d-table>\n    public constructDataTableColumns(columns: Array<any>): Array<any> {\n        let dtColumns = [];\n\n        if (columns) {\n            columns.forEach((c, index) => {\n                let name = c.logicalName ? c.logicalName : c.name;\n\n                switch (c.dataType) {\n                    case eTypeCode.DateTime:\n                        dtColumns.push({ name: index, title: name, format: 'DateTime'});\n                        break;\n                    case eTypeCode.Date:\n                        dtColumns.push({ name: index, title: name, format: 'Date'});\n                        break;\n                    case eTypeCode.Boolean:\n                        dtColumns.push({ name: index, title: name, format: 'Boolean'});\n                        break;\n                    case eTypeCode.Json:\n                        dtColumns.push({ name: index, title: name, format: 'Json'});\n                        break;\n                    case eTypeCode.Xml:\n                        dtColumns.push({ name: index, title: name, format: 'Code'});\n                        break;\n                    case eTypeCode.CharArray:\n                        dtColumns.push({name: index, title: name, format: 'CharArray'});\n                        break;\n                    case eTypeCode.Node:\n                        dtColumns.push({name: index, title: name, format: 'Node',\n                            childColumns: this.constructDataTableColumns(c.childColumns) });\n                        break;\n                    default:\n                        dtColumns.push({ name: index, title: name, format: ''});\n                }\n            });\n        }\n\n        return dtColumns;\n    }\n\n    // this needs to be set by a top level component so the dialog has a container to load into.\n    setDialogDefaultContainer(modalComponent: DModalComponent) {\n        // this.overlay.defaultViewContainer = defaultViewContainer;\n        this.modalComponent = modalComponent;\n    }\n\n    confirmDialog(title: string, body: string): Promise<boolean> {\n        return this.modalComponent.confirm(title, body, 'Confirm', 'Cancel');\n    }\n\n    promptDialog(title: string, body: string, inputPrompt = '', inputValue = ''): Promise<string> {\n        return this.modalComponent.prompt(title, body, inputPrompt, inputValue);\n    }\n\n    informationDialog(title: string, body: any, details: string = null): Promise<boolean> {\n        return this.modalComponent.information(title, body, 'Close', details);\n    }\n\n\n    public getLoginProviders(): Promise<Array<UserLoginInfo>> {\n        return this.post<Array<UserLoginInfo>>('/api/Account/ExternalLogins', null, 'Getting external login information.')\n    }\n\n    // download a file from the api.\n    public downloadFile(url, data, name, type): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            // let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n            const headers = this.defaultHeaders();\n\n            let body = this.JsonNoNulls(data);\n\n            this.http.post(this.getApiUrl(url), body, { headers: headers, responseType: 'blob' })\n                .subscribe(returnData => {\n                    // let result: any = returnData;\n                    let blob = new Blob([returnData], { type: type });\n                    // var url = window.URL.createObjectURL(blob);\n                    FileSaver.saveAs(blob, name);\n                    resolve(true);\n                }, error => {\n                    if (error.error) {\n                        let reader = new FileReader();\n                        reader.readAsText(error.error);\n                        reader.onload = function () {\n                            let message = JSON.parse(reader.result.toString());\n                            reject(message);\n                        }\n                    } else {\n                        reject(error);\n                    }\n                });\n        });\n    }\n\n\n    refreshUser(force = false): Promise<User> {\n        if (!force && this._currentUser.value) {\n            return Promise.resolve(this._currentUser.value);\n        }\n\n        if (this._refreshUserPromise) {\n            return this._refreshUserPromise;\n        }\n\n        this._refreshUserAttempted = true;\n        this._refreshUserPromise = new Promise<User>((resolve) => {\n            this.post<User>('/api/Account/GetUser', null, 'Refreshing user details...').then(result => {\n                let previousUser = this._currentUser.value;\n                if (!previousUser || (\n                    result.email !== previousUser.email &&\n                    result.firstName !== previousUser.firstName &&\n                    result.lastName !== previousUser.lastName &&\n                    result.isAdmin !== previousUser.isAdmin &&\n                    result.isInvited !== previousUser.isInvited &&\n                    result.rememberMe !== previousUser.rememberMe &&\n                    result.subscription !== previousUser.subscription &&\n                    result.terms !== previousUser.terms\n                )) {\n                    this._currentUser.next(result);\n                }\n                resolve(result);\n                this._refreshUserPromise = null;\n                // this._refreshUserAttempted = false;\n            }).catch(reason => {\n                this.logger.LogC(() => `refreshUser error:${reason.message}`, eLogLevel.Error);\n\n                this._currentUser.next(null);\n                this._hubErrors.next(reason);\n                resolve(null);\n                this._refreshUserPromise = null;\n                // this._refreshUserAttempted = false;\n                // reject(reason);\n            });\n        });\n\n        return this._refreshUserPromise;\n    }\n\n    login(user: User): Promise<User> {\n        return new Promise<User>((resolve, reject) => {\n            // call the login service, followed by get-user.\n            // The second call is to ensure the anti-forgery headers are updated when the user credentials have changed.\n            this.post('/api/Account/Login',\n                {email: user.email, password: user.password, rememberMe: user.rememberMe}, 'Authenticating...').then(() => {\n                return this.refreshUser().then(userResult => {\n                    resolve(userResult);\n                });\n            }).catch(reason => {\n                this.logger.LogC(() => `login error:${reason.message}`, eLogLevel.Error);\n\n                this._currentUser.next(null);\n                this._hubErrors.next(reason);\n                reject(reason);\n            });\n        });\n    }\n\n    googleLoadScript(): Promise<boolean> {\n        // node: safari seems to require script local\n        // original script at https://apis.google.com/js/api.js\n        // return this.loadScript('GOOGLE', '/assets/js/google-api.js');\n        return this.loadScript('GOOGLE', 'https://apis.google.com/js/api.js', true);\n    }\n\n    googleLogin(forceLogin: boolean): Promise<User> {\n        return new Promise<User>((resolve, reject) => {\n            this.getGlobalCachePromise().then(() => {\n            this.googleSignIn(forceLogin).then(externalLogin => {\n                let loginResult = this.identityLogin(eLoginProvider.Google, externalLogin.providerKey, externalLogin.authenticationToken);\n                resolve(loginResult);\n            }).catch(() => {\n                reject('Error with google login.');\n            });\n        }).catch(reason => { reject(reason); });\n        });\n    }\n\n    googleEnable(): Promise<ExternalLogin> {\n        let messageKey: string = null;\n        return new Promise<ExternalLogin>((resolve, reject) => {\n            try {\n                this.getGlobalCachePromise().then(cache => {\n                messageKey = this.addWaitMessage('Loading google sign-in scripts...');\n                this.googleLoadScript().then(() => {\n                    gapi.load('auth2', () => {\n                        gapi.auth2.init({\n                            ...{ scope: 'email', prompt: 'select_account' },\n                            client_id: cache.googleClientId\n                        }).then((auth2) => {\n                            let login: ExternalLogin = null;\n                            if (auth2.isSignedIn.get()) {\n                                let user = auth2.currentUser.get();\n                                login = new ExternalLogin();\n                                let profile = user.getBasicProfile();\n                                login.email = profile.getEmail();\n                                login.firstName = profile.getGivenName();\n                                login.lastName = profile.getFamilyName();\n                                login.providerKey = profile.Eea;\n                                login.authenticationToken = user.getAuthResponse(true).id_token;\n                                resolve(login);\n                            } else {\n                                resolve(null);\n                            }\n                        });\n                    });\n                });\n            }).catch(reason => { reject(reason); });\n\n            } catch (e) {\n                this.logger.LogC(() => `login error:${e.message}`, eLogLevel.Error);\n                this._hubErrors.next(e);\n                reject(e);\n            } finally {\n                if (messageKey) { this.removeWaitMessage(messageKey); }\n            }\n        });\n    }\n\n    googleSignIn(forceLogin: boolean): Promise<ExternalLogin> {\n        return new Promise<ExternalLogin>((resolve, reject) => {\n            try {\n                this.getGlobalCachePromise().then(cache => {\n                this.googleLoadScript().then(() => {\n                    gapi.load('auth2', () => {\n                        gapi.auth2.init({\n                            ...{ scope: 'email', prompt: 'select_account' },\n                            client_id: cache.googleClientId\n                        }).then((auth2) => {\n                            function getLoginDetails(): ExternalLogin {\n                                let login = new ExternalLogin();\n                                let profile = auth2.currentUser.get().getBasicProfile();\n                                let idToken = auth2.currentUser.get().getAuthResponse(true).id_token;\n                                login.email = profile.getEmail();\n                                login.firstName = profile.getGivenName();\n                                login.lastName = profile.getFamilyName();\n                                login.authenticationToken = idToken;\n                                login.providerKey = profile.Eea;\n                                return login;\n                            }\n                            if (!forceLogin && auth2.isSignedIn.get()) {\n                                let result = getLoginDetails();\n                                resolve(result);\n                            } else {\n                                auth2.signIn().then(() => {\n                                    let result = getLoginDetails();\n                                    resolve(result);\n                                }).catch(reason => {\n                                    reject(reason.error);\n                                });\n                            }\n                        });\n                    });\n                }).catch(reason => {\n                    reject(reason);\n                });\n            }).catch(reason => { reject(reason); });\n\n            } catch (e) {\n                this.logger.LogC(() => `login error:${e.message}`, eLogLevel.Error);\n                this._currentUser.next(null);\n                this._hubErrors.next(e);\n                reject(e);\n            }\n        });\n    }\n\n    googleSignOut(): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            try {\n                this.googleLoadScript().then(() => {\n                    let auth2 = gapi.auth2.getAuthInstance();\n                    if (auth2) {\n                        auth2.signOut().then(() => {\n                            resolve(true);\n                        });\n                    } else {\n                        resolve(false);\n                    }\n                });\n            } catch (e) {\n                this.logger.LogC(() => `google sign out error:${e.message}`, eLogLevel.Error);\n                reject(e);\n            }\n        });\n    }\n\n    microsoftApp(clientId: string): UserAgentApplication {\n        const config = {\n            auth: {\n                clientId: clientId,\n                authority: 'https://login.microsoftonline.com/common/',\n                redirectUri: location.origin + '/api/Account/MicrosoftRedirect'\n            },\n            cache: {\n                cacheLocation: <CacheLocation>'sessionStorage',\n                storeAuthStateInCookie: false\n            }\n        };\n\n        let userAgentApplication = new UserAgentApplication(config);\n\n        userAgentApplication.handleRedirectCallback((error, errorDesc) => {\n            if (error) {\n                console.log(error + ':' + errorDesc);\n            }\n        });\n\n        return userAgentApplication;\n    }\n\n\n    microsoftEnable(): Promise<ExternalLogin> {\n        let messageKey: string = null;\n        return new Promise<ExternalLogin>(async (resolve, reject) => {\n            try {\n                this.getGlobalCachePromise().then(cache => {\n\n                messageKey = this.addWaitMessage('Loading microsoft sign-in...');\n\n                let userAgentApplication = this.microsoftApp(cache.microsoftClientId);\n                let user = userAgentApplication.getAccount();\n\n                if (user) {\n                    let login = new ExternalLogin();\n\n                    let userName = user.name;\n                    let userNames = userName.split(' ');\n\n                    login.email = user.userName;\n                    login.firstName = userNames[0];\n                    login.lastName = userNames.length > 1 ? userNames[1] : '';\n                    login.providerKey = user.accountIdentifier;\n\n                    let request = {\n                        scopes: ['user.read'],\n                        // authority: 'https://login.microsoftonline.com/common/',\n                    }\n                    userAgentApplication.acquireTokenSilent(request).then(authResponse => {\n                        login.authenticationToken = authResponse.accessToken;\n                        resolve(login);\n                    }).catch(reason => {\n                        reject(reason);\n                    });\n\n                    this.removeWaitMessage(messageKey);\n                } else {\n                    resolve(null);\n                    this.removeWaitMessage(messageKey);\n                }\n            }).catch(reason => { reject(reason); });\n\n\n            } catch (e) {\n                if (messageKey) { this.removeWaitMessage(messageKey); }\n                this.logger.LogC(() => `login error:${e.message}`, eLogLevel.Error);\n\n                this._currentUser.next(null);\n                this._hubErrors.next(e);\n                reject(e);\n            }\n        });\n    }\n\n    microsoftLogin(forceLogin: boolean): Promise<User> {\n        return new Promise<User>((resolve, reject) => {\n            this.microsoftSignIn(forceLogin).then(externalLogin => {\n                let loginResult = this.identityLogin(eLoginProvider.Microsoft,\n                    externalLogin.providerKey, externalLogin.authenticationToken);\n                resolve(loginResult);\n            }).catch((reason) => {\n                reject(reason);\n            });\n\n        });\n    }\n\n    microsoftSignIn(forceLogin: boolean): Promise<ExternalLogin> {\n        let messageKey: string = null;\n        return new Promise<ExternalLogin>(async (resolve, reject) => {\n            try {\n                messageKey = this.addWaitMessage('Loading microsoft sign-in...');\n\n                this.getGlobalCachePromise().then(cache => {\n\n                let userAgentApplication = this.microsoftApp(cache.microsoftClientId);\n                let tokenPromise: Promise<AuthResponse>;\n                // let user = userAgentApplication.getUser();\n\n                if (forceLogin) {\n                    let request = {\n                        scopes: ['user.read'],\n                        // authority: 'https://login.microsoftonline.com/common/',\n                        prompt: 'select_account'\n                    }\n                    tokenPromise = userAgentApplication.loginPopup(request);\n                } else {\n                    let user = userAgentApplication.getAccount();\n                    let request = {\n                        scopes: ['user.read'],\n                        // authority: 'https://login.microsoftonline.com/common/',\n                    }\n                    if (user) {\n                        tokenPromise = userAgentApplication.acquireTokenSilent(request);\n                    } else {\n                        tokenPromise = userAgentApplication.loginPopup(request);\n                    }\n                }\n\n                tokenPromise.then(authResponse => {\n                    this.removeWaitMessage(messageKey);\n                    if (authResponse) {\n                        if (!authResponse.accessToken) {\n                            let request = {\n                                scopes: ['user.read'],\n                                // authority: 'https://login.microsoftonline.com/common/',\n                            }\n\n                            userAgentApplication.acquireTokenSilent(request).then(result => {\n                                resolve(this.microsoftAuthResponseToLogin(result));\n                            }).catch(reason => {\n                                reject(reason);\n                            });\n                        } else {\n                            resolve(this.microsoftAuthResponseToLogin(authResponse));\n                        }\n                    } else {\n                        reject(new Message(false, 'Microsoft login failed.', null, null));\n                    }\n                }).catch(reason => {\n                    this.removeWaitMessage(messageKey);\n                    reject(reason);\n                }).catch(reason => { reject(reason); });\n            });\n\n            } catch (e) {\n                if (messageKey) { this.removeWaitMessage(messageKey); }\n                this.logger.LogC(() => `login error:${e.message}`, eLogLevel.Error);\n\n                this._currentUser.next(null);\n                this._hubErrors.next(e);\n                reject(e);\n            }\n        });\n    }\n\n    private microsoftAuthResponseToLogin(authResponse: AuthResponse): ExternalLogin {\n        let user = authResponse.account;\n        let login = new ExternalLogin();\n        let userName = user.name;\n        let userNames = userName.split(' ');\n        login.email = user.userName;\n        login.firstName = userNames[0];\n        login.lastName = userNames.length > 1 ? userNames[1] : '';\n        login.authenticationToken = authResponse.accessToken;\n        login.providerKey = user.accountIdentifier;\n        return login;\n    }\n\n\n    microsoftSignOut(): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            try {\n                this.getGlobalCachePromise().then(cache => {\n                let userAgentApplication = this.microsoftApp(cache.microsoftClientId)\n                userAgentApplication.logout();\n                resolve(true);\n                }).catch(reason => { reject(reason); });\n            } catch (e) {\n                this.logger.LogC(() => `microsoft sign out error:${e.message}`, eLogLevel.Error);\n                reject(e);\n            }\n        });\n    }\n\n\n\n    // called for external identity login.\n    identityLogin(provider: eLoginProvider, providerKey: string, authenticationToken: string): Promise<User> {\n        return new Promise<User>((resolve, reject) => {\n            // call the callback api.\n            this.post('/api/Account/ExternalLogin', {\n                provider: provider,\n                providerKey: providerKey,\n                authenticationToken: authenticationToken\n            }, 'Validating external login...')\n                .then(() => {\n                    return this.refreshUser().then(userResult => {\n                        resolve(userResult);\n                    });\n                }).catch(reason => {\n                    this.logger.LogC(() => `externalLoginCallBack error:${reason.message}`, eLogLevel.Error);\n                    this._hubErrors.next(reason);\n                    reject(reason);\n                });\n        });\n    }\n\n    loadScript(id: string, src: string, isExternal = false): Promise<boolean> {\n        return new Promise<boolean>((resolve) => {\n            // if script already loaded, do nothing\n            let script = document.getElementById(id)\n            if (script) {\n                resolve(true);\n                return;\n            }\n\n            // add the script to the page.\n            let newScript = document.createElement('script');\n            newScript.id = id;\n            newScript.type = 'text/javascript';\n            newScript.async = true;\n            newScript.src = isExternal ? src : this.location.prepareExternalUrl(src);\n            newScript.onload = (() => { resolve(true); });\n            document.head.appendChild(newScript);\n        });\n    }\n\n    // redirects browser to the requested login provider.\n    externalLogin(provider: eLoginProvider): Promise<ExternalLoginResult> {\n        return new Promise<ExternalLoginResult>((resolve) => {\n            // attempt to receive external login details (this will save a leaving the page)\n            this.externalLoginCallback().then(loginResult => {\n                if (loginResult.isSignedIn) {\n                    return this.refreshUser().then(() => {\n                        resolve(loginResult);\n                    });\n                } else {\n                    resolve(loginResult);\n                }\n\n            }).catch(reason => {\n                this.logger.LogC(() => `externalLogin error:${reason.message}`, eLogLevel.Error);\n                window.location.href = '/api/Account/ExternalLogin?provider=' + provider + '&returnUrl=/auth/login';\n            });\n        });\n    }\n\n    // redirects browser to the requested login provider.\n    addExternalLogin(provider: eLoginProvider, providerKey: string, authenticationToken: string): Promise<ExternalLoginResult> {\n        return this.post<ExternalLoginResult>('/api/Account/AddExternalLogin', {\n            provider: provider,\n            providerKey: providerKey,\n            authenticationToken: authenticationToken\n        }, 'Adding an external login...')\n    }\n\n    // redirects browser to the requested login provider.\n    removeExternalLogin(provider: eLoginProvider, providerKey: string, ): Promise<boolean> {\n        return this.postConfirm<boolean>('/api/Account/RemoveExternalLogin', {\n            provider: provider,\n            providerKey: providerKey\n        }, 'Removing external login...',\n        'Are you sure you want to remove the login ' +\n        provider + ' from your available logins.  When removed you will not be able to login via ' +\n        provider + ' provider.');\n    }\n\n    // called when provider is redirected back.\n    externalLoginCallback(): Promise<ExternalLoginResult> {\n        return this.post<ExternalLoginResult>('/api/Account/ExternalLoginCallback', null, 'Completing external login...')\n    }\n\n    // register an external login\n    externalLoginConfirmation(user: User): Promise<User> {\n        return this.post<User>('/api/Account/ExternalLoginConfirmation', user, 'Confirming external login...');\n    }\n\n\n    register(user: User): Promise<User> {\n        return this.post<User>('/api/Account/Register', user, 'Registering user...');\n    }\n\n    confirmEmail(email: string, verificationCode: string): Promise<User> {\n        let user = new User(email, null, null, false);\n        user.code = verificationCode;\n\n        return this.post<User>('/api/Account/ConfirmEmail', user, 'Confirming email...');\n    }\n\n    resendConfirmationEmail(email: string): Promise<boolean> {\n        let user = new User(email, null, null, false);\n        return this.post<boolean>('/api/Account/ResendConfirmationEmail', user, 'Resending confirmation email...');\n    }\n\n    forgotPassword(email: string): Promise<boolean> {\n        let user = new User(email, null, null, false);\n        return this.post<boolean>('/api/Account/ForgotPassword', user, 'Sending forgotten password email...')\n    }\n\n    resetPassword(email: string, verificationCode: string, password: string): Promise<boolean> {\n        let user = new User(email, email, password, false);\n        user.code = verificationCode;\n\n        return new Promise<boolean>((resolve, reject) => {\n            // call the login service to reset the password.\n            this.post('/api/Account/ResetPassword', user, 'Resetting password...').then(() => {\n                // after resetting password, we can log the user in.\n                return this.refreshUser().then(() => {\n                    resolve(true);\n                });\n            }).catch(reason => {\n                this.logger.LogC(() => `resetPassword error:${reason.message}`, eLogLevel.Error);\n\n                this._hubErrors.next(reason);\n                reject(reason);\n            });\n        });\n    }\n\n    changePassword(password: string, newPassword: string): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            // call the login service to reset the password.\n            this.post('/api/Account/ChangePassword', {\n                password: password,\n                newPassword: newPassword\n            }, 'Changing password...').then(() => {\n                resolve(true);\n            }).catch(reason => {\n                this.logger.LogC(() => `changePassword error:${reason.message}`, eLogLevel.Error);\n                this._hubErrors.next(reason);\n                reject(reason);\n            });\n        });\n    }\n\n    updateUserDetails(user: User): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            // call the login service to reset the password.\n            this.post('/api/Account/UpdateDetails',\n                {\n                    userName: user.userName,\n                    firstName: user.firstName,\n                    lastName: user.lastName,\n                    subscription: user.subscription,\n                    notifyPrivateMessage: user.notifyPrivateMessage,\n                    notifySupportMessage: user.notifySupportMessage\n                }, 'Updating user details...').then(() => {\n                    this.refreshUser();\n                    resolve(true);\n                }).catch(reason => {\n                    this.logger.LogC(() => `updateUserDetails error:${reason.message}`, eLogLevel.Error);\n\n                    this._hubErrors.next(reason);\n                    reject(reason);\n                });\n        });\n    }\n\n    logout(): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            this.postConfirm<boolean>('/api/Account/Logout', null, 'Logging out current user...',\n            'Proceed to logout?  You can improve your security further after logging out by closing this opened browser').then(() => {\n                    this._currentUser.next(null);\n                    this._hubs.next(null);\n\n                    // this refresh is just to reset the XSRF token\n                    // now that the user is logged out.\n                    this.refreshUser().then(() => {\n                        this.router.navigate(['/auth/login']);\n                    });\n                }).catch(reason => {\n                    if (reason) {\n                        this.logger.LogC(() => `logout error:${reason.message}`, eLogLevel.Error);\n\n                        this._hubErrors.next(reason);\n                        reject(reason);\n                    }\n                });\n        });\n    }\n\n    public pingRemoteAgents() {\n        if (!this.updateRemoteAgentsFlag) {\n            this.updateRemoteAgentsFlag = true;\n            // update the remote agents for this hub.\n            let connectionId = this.getWebSocketConnectionId();\n            if (!connectionId) {\n                this.updateRemoteAgentsFlag = false;\n                return;\n            }\n\n            this.post('/api/Account/PingRemoteAgents', { connectionId: connectionId }, null)\n                .then(result => {\n                    let currentAgents = this._remoteAgents.getValue();\n\n                    let newAgents = <DexihRemoteAgent[]>result;\n\n                    if (currentAgents == null) {\n                        currentAgents = newAgents;\n                        newAgents.map(c => c['activeAgents'] = []);\n                    } else {\n\n                        newAgents.forEach(newAgent => {\n                            let currentAgent = currentAgents.find(c => c.remoteAgentKey === newAgent.remoteAgentKey);\n                            if (currentAgent) {\n                                let activeAgents = currentAgent['activeAgents'];\n                                Object.assign(currentAgent, newAgent);\n                                currentAgent['activeAgents'] = activeAgents;\n                            } else {\n                                newAgent['activeAgents'] = [];\n                                currentAgents.push(newAgent);\n                            }\n                        });\n\n                        for (let i = currentAgents.length - 1; i >= 0; i--) {\n                            if (newAgents.findIndex(c => c.remoteAgentKey === currentAgents[i].remoteAgentKey) < 0) {\n                                currentAgents.splice(i, 1);\n                            }\n                        }\n                    }\n                    this._remoteAgents.next(currentAgents);\n\n                }).catch(reason => {\n                    this.logger.LogC(() => `updateRemoteAgents, error: ${reason.message}.`, eLogLevel.Error);\n                    this._remoteAgents.next(null);\n                }).then(() => this.updateRemoteAgentsFlag = false);\n        }\n    }\n\n    saveRemoteAgent(remoteAgent: DexihRemoteAgent): Promise<boolean> {\n        return this.post<boolean>('/api/Account/SaveRemoteAgent', remoteAgent, 'Saving remote agent details...');\n    }\n\n    // scans each available download url in order, to find one this client can access.\n    public getBestDownloadUrl(activeAgent: DexihActiveAgent, position: number): Promise<DownloadUrl> {\n        return new Promise<DownloadUrl>((resolve, reject) => {\n            if (position >= activeAgent.downloadUrls.length) {\n                let message = new Message(false, 'The client cannot connect to any of the data download/upload endpoints.', null, null);\n                reject(message);\n                return;\n            }\n\n            // if there is only one location, then save a ping test.\n            if (activeAgent.downloadUrls.length === 1) {\n                resolve(activeAgent.downloadUrls[0]);\n                return;\n            }\n\n            if (activeAgent['currentDownloadUrl']) {\n                resolve(activeAgent['currentDownloadUrl']);\n                return;\n            }\n\n            let url = activeAgent.downloadUrls[position].url + '/ping';\n\n            let messageKey = this.addWaitMessage('Testing remote agent connectivity...');\n\n            this.http.get(url).pipe(timeout(5000)).subscribe(() => {\n                activeAgent['currentDownloadUrl'] = activeAgent.downloadUrls[position];\n                this.removeWaitMessage(messageKey);\n                resolve(activeAgent['currentDownloadUrl']);\n            }, () => {\n                this.removeWaitMessage(messageKey);\n                this.getBestDownloadUrl(activeAgent, position + 1).then(result => {\n                    resolve(result);\n                }).catch(msg => {\n                    reject(msg);\n                });\n            });\n        });\n    }\n\n    refreshHubs(): void {\n        this.post<DexihHubAuth[]>('/api/Account/GetAuthorizedHubs', null, 'Getting authorized hubs...').then(result => {\n            let hubs = result.sort((a, b) => a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase() ? 1 : -1);\n            hubs.forEach(hub => {\n                this.setHubAccess(hub);\n            });\n            this._hubs.next(hubs);\n        }).catch(reason => {\n            this.logger.LogC(() => `refreshHubs error:${reason.message}`, eLogLevel.Error);\n\n            this._hubErrors.next(reason);\n            this._hubs.next(null);\n        });\n    }\n\n    getHubsObservable(): Observable<Array<DexihHubAuth>> {\n        return this._hubs.asObservable();\n    }\n\n    getHubs(): Array<DexihHubAuth> {\n        return this._hubs.value;\n    }\n\n    saveHub(hub: DexihHubAuth): Promise<DexihHubAuth> {\n        return this.post<DexihHubAuth>('/api/Account/SaveHub', hub, 'Saving hub details...');\n    }\n\n    saveIssue(issue: DexihIssue): Promise<DexihIssue> {\n        return this.post<DexihIssue>('/api/Account/SaveIssue', issue, 'Creating issue ... ');\n    }\n\n    deleteIssues(issueKeys: number[]): Promise<boolean> {\n        return new Promise((resolve, reject) => {\n            this.confirmDialog('Delete Issues', 'Please confirm that you would like to delete the selected issues.').then(c => {\n                if(c) {\n                    resolve(this.post('/api/Account/DeleteIssues', {issueKeys: issueKeys}, 'Deleting issues ... '));\n                } else {\n                    reject();\n                }\n            }).catch(reason => {\n                reject(reason);\n            });;\n        });\n    }\n\n    getIssue(issueKey: number, cancelToken: CancelToken): Promise<DexihIssue> {\n        return this.post<DexihIssue>('/api/Account/GetIssue', {issueKey: issueKey}, 'Getting issues ... ', cancelToken);\n    }\n\n    getIssues(cancelToken: CancelToken): Promise<DexihIssue[]> {\n        return this.post<DexihIssue[]>('/api/Account/GetIssues', { }, 'Getting issues ... ', cancelToken);\n    }\n\n    addIssueComment(issueKey: number, comment: string) {\n        return this.post<DexihIssue>('/api/Account/AddIssueComment', {issueKey: issueKey, comment: comment}, 'Getting issues ... ');\n    }\n\n    deleteIssueComments(issueCommentKeys: number[]): Promise<DexihIssue> {\n        return new Promise((resolve, reject) => {\n            this.confirmDialog('Delete Issues', 'Please confirm that you would like to delete the selected issue comments.').then(c => {\n                if(c) {\n                    resolve(this.post('/api/Account/DeleteIssueComments', {issueCommentKeys: issueCommentKeys}, 'Deleting issue comments... '));\n                } else {\n                    reject();\n                }\n            }).catch(reason => {\n                reject(reason);\n            });;\n        });\n    }\n\n    hubNameExists(hubKey: number, hubName: string): boolean {\n        if (this._hubs.value) {\n            return this._hubs.value.findIndex(c => c.name === hubName && c.hubKey !== hubKey && c.isValid) >= 0 ? true : false;\n        } else {\n            return false;\n        }\n    }\n\n    deleteHubs(hubs: Array<DexihHubAuth>): Promise<boolean> {\n        let hubNames = hubs.map(c => c.name).join(', ');\n        return this.postConfirm<boolean>('/api/Account/DeleteHubs', {\n            hubKeys: hubs.map(c => c.hubKey)\n        }, 'Deleting hubs...',\n        'This action will delete the following hubs, and any related metadata.<p></p>' + hubNames + '<p></p>Are you sure?');\n    }\n\n    removeUserTokens(remoteAgentKeys: Array<number>): Promise<boolean> {\n        let connectionId = this.getWebSocketConnectionId();\n\n        return this.postConfirm<boolean>('/api/Account/RemoveRemoteAgents', { connectionId, remoteAgentKeys }, 'Removing remote agents...',\n        'This action will revoke the selected tokens.  Remote Agents using these tokens will be immediately logged off.<p></p>' +\n                '<p></p>Are you sure?');\n    }\n\n    refreshRemoteAgentToken(remoteAgentKey: number): Promise<RemoteToken> {\n        let connectionId = this.getWebSocketConnectionId();\n\n        return this.postConfirm<RemoteToken>('/api/Account/RefreshRemoteAgentToken', { connectionId, remoteAgentKey },\n        'Refreshing remote agent token...',\n         // tslint:disable-next-line:max-line-length\n         'This action will revoke the selected token, and create a new one.  Remote agents using these tokens will be immediately logged off.<p></p>' +\n         '<p></p>Are you sure?');\n    }\n\n    createRemoteAgent(): Promise<RemoteToken> {\n        return this.post<RemoteToken>('/api/Account/CreateRemoteAgent', {\n        }, 'Creating remote agent...');\n    }\n\n\n    getRandomEncryptionKey(): Promise<string> {\n        return this.postGetRaw('/api/Account/GetRandomEncryptionKey', null, 'Getting random key...', null)\n    }\n\n\n    getUserToken(): Promise<{ remoteAgentId: string, userToken: string }> {\n        return this.post<{ remoteAgentId: string, userToken: string }>('/api/Account/CreateRemoteAgent', {}, 'Creating remote agent...')\n    }\n\n    parentRoute(route: ActivatedRoute): ActivatedRoute {\n        let currentRoute = route.parent;\n\n        while (currentRoute) {\n            if (currentRoute.outlet === 'primary') {\n                let routeSnapshot = currentRoute.snapshot;\n                let pageTitle = routeSnapshot.data['pageTitle'];\n                let navigateSkip = routeSnapshot.data['navigateSkip'];\n\n                if (pageTitle && !(navigateSkip === true)) {\n                    return currentRoute;\n                }\n            }\n            currentRoute = currentRoute.parent;\n        }\n\n        return route.root;\n    }\n\n    // navigates up one page, ignoring any empty routes\n    navigateUp() {\n        let breadcrumbs: Array<any> = [];\n        let currentRoute = this.route.root;\n        let url = '';\n        do {\n            let childrenRoutes = currentRoute.children;\n            currentRoute = null;\n            childrenRoutes.forEach(route => {\n                if (route.outlet === 'primary') {\n                    let routeSnapshot = route.snapshot;\n                    url += '/' + routeSnapshot.url.map(segment => segment.path).join('/');\n                    let pageTitle = routeSnapshot.data['pageTitle'];\n                    let navigateSkip = routeSnapshot.data['navigateSkip'];\n                    if (pageTitle && !(navigateSkip === true) &&\n                        breadcrumbs.findIndex((value) => value.pageTitle === pageTitle) === -1) {\n                        breadcrumbs.push({\n                            pageTitle: pageTitle,\n                            url: url,\n                        });\n                    }\n                    currentRoute = route;\n                }\n            });\n        } while (currentRoute);\n\n        if (breadcrumbs.length < 2) {\n            this.router.navigate(['/'], { queryParamsHandling: 'merge' });\n        } else {\n            parent = breadcrumbs[breadcrumbs.length - 2].url;\n            this.logger.LogC(() => `navigateUp :${parent}`, eLogLevel.Debug);\n            this.router.navigate([parent], { queryParamsHandling: 'merge' });\n        }\n    }\n\n    getWaitMessagesObservable(): Observable<Map<string, WaitMessage>> {\n        return this._waitMessagesObserve.asObservable();\n    }\n\n    addWaitMessage(message: string, maxTime = 10000, cancelToken: CancelToken = null): string {\n        if (!message) { return; }\n        \n        let key = this.newGuid();\n        this._waitMessages.set(key, {message: message, cancelToken: cancelToken});\n        this._waitMessagesObserve.next(this._waitMessages);\n\n        if (maxTime > 0) {\n            setTimeout(() => {\n                if (this._waitMessages.has(key)) {\n                    this.removeWaitMessage(key);\n                    let errorMessage = new Message(false, `The '${message}' will continue to run in the background.`, null, null);\n                    this.addUpdateNotification(errorMessage, false);\n                }\n            }, maxTime);\n        }\n        return key;\n    }\n\n\n    removeWaitMessage(key: string) {\n        if (this._waitMessages.has(key)) {\n            this._waitMessages.delete(key);\n            this._waitMessagesObserve.next(this._waitMessages);\n        }\n    }\n\n    getTasksObservable(): Observable<Array<ManagedTask>> {\n        return this._tasks.asObservable();\n    }\n\n    addUpdateTask(task: ManagedTask) {\n        if (task.status === eManagedTaskStatus.Error) {\n            const message = new Message(false, `The task ${task.name} failed.  Message: ${task.message}`,\n                task.exceptionDetails, null);\n            this.addUpdateNotification(message, false);\n        }\n\n        const tasks = this._tasks.value;\n        const originalTask = tasks.find(c => c.taskId === task.taskId);\n        if (originalTask) {\n            Object.assign(originalTask, task);\n        } else {\n            tasks.push(task);\n        }\n        this._tasks.next(tasks);\n    }\n\n    getTask(reference: string): ManagedTask {\n        const tasks = this._tasks.value;\n        const task = tasks.find(c => c.taskId === reference);\n        return task;\n    }\n\n    getNotificationObservable(): Observable<Message> {\n        return this._notification.asObservable();\n    }\n\n    addUpdateNotification(message: Message, log: boolean): string {\n        if (!message.reference) {\n            message.reference = this.newGuid();\n        }\n        this._notifications.push(message);\n\n        this._notification.next(message);\n\n        if (log) {\n            this._logErrors.next(message);\n        }\n\n        return message.reference;\n    }\n\n    getNotifications(): Message[] {\n        return this._notifications;\n    }\n\n    getNotification(reference: string): Message {\n        const message = this._notifications.find(c => c.reference === reference);\n        return message;\n    }\n\n    // public isHubCacheLoaded(): boolean {\n    //     if (!this._globalCache.value) {\n    //         return false;\n    //     } else {\n    //         return true;\n    //     }\n    // }\n\n    /**\n     * Generates a new GUID.\n     */\n    public newGuid(): string {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            // tslint:disable-next-line:no-bitwise\n            let r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n\n    public refreshGlobalCache() {\n        let promise = this.getFromApi<CacheManager>('/api/Account/GetGlobalCache', null, null);\n        promise.then(cache => {\n            this._globalCache.next(cache);\n        }).catch(reason => {\n            let message = new Message(false, 'Update global cache failed: ' + reason, reason, null);\n            this.addUpdateNotification(message, false);\n\n            // If cache load error, try again to refresh.\n            setTimeout(() => {\n                this.refreshGlobalCache();\n            }, 5000);\n        });\n    }\n\n    public getGlobalCacheObservable(): Observable<CacheManager> {\n        return this._globalCache.asObservable();\n    }\n\n    public getGlobalCachePromise(): Promise<CacheManager> {\n        return this.getGlobalCacheObservable().pipe(first()).toPromise();\n    }\n\n    // gets all shared data items\n    getSharedDataIndex(searchString: string, hubKeys: number[], maxResults: number, reload: boolean): Promise<SharedData[]> {\n        if (reload || !this.sharedItemsIndex) {\n            return this.post<SharedData[]>('/api/SharedData/SharedDataIndex', {\n                searchString, hubKeys, maxResults\n            }, 'Getting shared data index...');\n        } else {\n            Promise.resolve(this.sharedItemsIndex);\n        }\n    }\n\n    getSharedDataObject(hubKey: number, objectType: eDataObjectType, objectKey: number): Promise<SharedData> {\n        return this.post<SharedData>('/api/SharedData/SharedDataObject', {\n            hubKey, objectType, objectKey\n        }, 'Getting shared item...');\n    }\n\n    getActiveAgent(hubKey: number): Promise<DexihActiveAgent> {\n        // the activeAgent is cached in a localstorage to save an extra roundtrip.\n        let agent = localStorage.getItem(`hub-remote-agent-${hubKey}`);\n\n        if (agent) {\n            let remoteAgent = <DexihActiveAgent>JSON.parse(agent);\n            return Promise.resolve(remoteAgent);\n        }\n\n        return new Promise<DexihActiveAgent>((resolve, reject) => {\n\n            this.post<DexihActiveAgent>('/api/SharedData/GetActiveAgent', { hubKey: hubKey }, 'Getting active remote agent...')\n                .then(activeAgent => {\n                    this.getBestDownloadUrl(activeAgent, 0).then(() => {\n                        localStorage.setItem(`hub-remote-agent-${hubKey}`, JSON.stringify(activeAgent));\n                        resolve(activeAgent);\n                    });\n                }).catch(reason => reject(reason));\n        });\n    }\n\n    downloadData(sharedItems: Array<SharedData>, zipFiles: boolean, downloadFormat: eDownloadFormat, cancelToken: CancelToken):\n        Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n\n            // get distinct list of hubKeys\n            let flags = [], hubKeys = []\n            for (let i = 0; i < sharedItems.length; i++) {\n                if (flags[sharedItems[i].hubKey]) { continue };\n                flags[sharedItems[i].hubKey] = true;\n                hubKeys.push(sharedItems[i].hubKey);\n            }\n\n            let clientId = this.getWebSocketConnectionId();\n            if (!clientId) {\n                let message = new Message(false, 'Data downloads are only available for registered users.', null, null);\n                reject(message);\n                return;\n            }\n\n            hubKeys.forEach(hubKey => {\n                this.getActiveAgent(hubKey).then(activeAgent => {\n                    this.postRemote<ManagedTask>('/api/SharedData/DownloadData', {\n                        hubKey: hubKey,\n                        clientId: this.getWebSocketConnectionId(),\n                        downloadFormat: downloadFormat,\n                        zipFiles: zipFiles,\n                        sharedItems: sharedItems.filter(c => c.hubKey === hubKey),\n                        remoteAgentId: activeAgent.instanceId,\n                    }, activeAgent, 'Downloading data...', cancelToken)\n                        .then(task => {\n                        this.addUpdateTask(task);\n                        resolve(true);\n                    }).catch(reason => {\n                        this.logger.LogC(() => `downloadData, error: ${reason.message}.`, eLogLevel.Error);\n                        reject(reason);\n                    });\n                });\n            });\n        });\n    }\n\n    // starts a preview, and returns the url to get the download stream.\n    previewData(hubKey: number, objectKey: number, objectType: eDataObjectType,\n        inputColumns: InputColumn[], selectQuery: SelectQuery, parameters: InputParameterBase[],\n        parentParameters: InputParameterBase[], cancelToken: CancelToken):\n        Promise<PreviewResults> {\n\n        return new Promise<PreviewResults>((resolve, reject) => {\n            this.getActiveAgent(hubKey).then(activeAgent => {\n                this.postRemote<PreviewResults>('/api/SharedData/PreviewData', {\n                    hubKey: hubKey,\n                    objectType: objectType,\n                    objectKey: objectKey,\n                    selectQuery: selectQuery,\n                    remoteAgentId: activeAgent.instanceId,\n                    inputColumns: inputColumns,\n                    parameters: parameters,\n                    parentParameters: parentParameters\n                }, activeAgent, 'Previewing data...', cancelToken).then(result => {\n                    result.columns = this.constructDataTableColumns(result.columns);\n                    resolve(result);\n                }).catch(reason => {\n                    reject(reason);\n                });\n            }).catch(reason => {\n                reject(reason);\n            });\n        });\n    }\n\n      // starts a preview, and returns the url to get the download stream.\n      previewListOfValues(hubKey: number, objectKey: number, objectType: eDataObjectType, parameterName,\n        resetCache: boolean, cancelToken: CancelToken):\n        Promise<ListOfValuesItem[]> {\n\n        return new Promise<ListOfValuesItem[]>((resolve, reject) => {\n            this.getActiveAgent(hubKey).then(activeAgent => {\n                this.postRemote<ListOfValuesItem[]>('/api/SharedData/PreviewListOfValues', {\n                    hubKey: hubKey,\n                    objectType: objectType,\n                    objectKey: objectKey,\n                    parameterName: parameterName,\n                    resetCache: resetCache,\n                    remoteAgentId: activeAgent.instanceId,\n                }, activeAgent, 'Previewing list of values...', cancelToken).then(result => {\n                    resolve(result);\n                }).catch(reason => {\n                    reject(reason);\n                });\n            }).catch(reason => {\n                reject(reason);\n            });\n        });\n    }\n\n    getDashboard(hubKey: number, dashboardKey: number): Promise<DexihDashboard> {\n\n        return new Promise<DexihDashboard>((resolve, reject) => {\n            this.post<DexihDashboard>('/api/SharedData/PreviewDashboard', {\n                hubKey: hubKey,\n                dashboardKey: dashboardKey,\n            }, 'Getting dashboard download locations...').then(dashboard => {\n                resolve(dashboard);\n            }).catch(reason => reject(reason));\n        });\n    }\n\n}\n\n\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Functions } from '../shared/utils/functions';\nimport { tap } from 'rxjs/operators';\n\n\n// intercept is used to map the XSRF-TOKEN to the X-XSRF-TOKEN which is used\n// to present x-scripting attacks.\n// can't use the build in interceptor as it does not support x-domain.\n@Injectable()\nexport class AddCsrfHeaderInterceptorService implements HttpInterceptor {\n\n    // private token;\n    \n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        // const token = this.token ?? Functions.getCookie('XSRF-TOKEN');\n        // if (token) {\n        //     req = req.clone({\n        //         headers: req.headers.set('X-XSRF-TOKEN', token)\n        //     });\n        // }\n\n        return next.handle(req).pipe(tap((event: HttpEvent<any>) => {\n            // if the token is in the header (cross domain request, then set it to the local cookie)\n            if (event instanceof HttpResponse) {\n                const xsrfToken = event.headers.get('XSRF-TOKEN');\n                if (xsrfToken) {\n                    Functions.setCookie('XSRF-TOKEN', xsrfToken);\n                    // this.token = xsrfToken;\n                }\n                return event;\n            }\n        }));\n    }\n\n}\n","import {  OnDestroy, Injectable } from '@angular/core';\nimport { Observable, Subscription, BehaviorSubject} from 'rxjs';\nimport { LogFactory, eLogLevel } from '../../logging';\nimport { HubConnection, HubConnectionBuilder, LogLevel, HubConnectionState } from '@microsoft/signalr';\nimport { Location } from '@angular/common';\nimport { ClientMessage, eClientCommand } from '../shared/shared.models';\nimport { environment } from '../../environments/environment';\n\n@Injectable()\nexport class WebSocketService implements OnDestroy {\n    private _webSocketStatus = new BehaviorSubject<string>('Disconnected');\n    private _connectHubSubscription: Subscription;\n\n    public _webSocketMessages = new BehaviorSubject<ClientMessage>(null);\n    private _connectionId: string;\n\n    private startingWebSocket = false;\n\n    private logger = new LogFactory('WebsocketService');\n\n    private hubConnection: HubConnection;\n    private hubConnected = new BehaviorSubject<boolean>(false);\n\n    constructor(private location: Location\n    ) {\n        this._webSocketStatus.next('Disconnected');\n    }\n\n    ngOnDestroy() {\n        if (this._webSocketStatus) { this._webSocketStatus.unsubscribe(); }\n        if (this._connectHubSubscription) { this._connectHubSubscription.unsubscribe(); }\n    }\n\n    public async initializeWebSocket() {\n        this.logger.LogC(() => `InitializeWebSocket`, eLogLevel.Debug);\n\n        this._webSocketStatus.next('Connecting');\n\n        if (this.hubConnection) {\n            await this.hubConnection.stop();\n        }\n\n        this.hubConnection = new HubConnectionBuilder()\n            .configureLogging(LogLevel.Trace)\n            .withUrl(environment.apiUrl ? environment.apiUrl + '/browser' : this.location.prepareExternalUrl('/browser'))\n            .build();\n\n        this.hubConnection.on('Command', (remoteMessage: ClientMessage) => {\n            this.logger.LogC(() => `startWebSocket: receive new message: ${remoteMessage.command}.`, eLogLevel.Debug);\n            this._webSocketMessages.next(remoteMessage);\n        });\n\n        this.hubConnection.onclose((err: any) => {\n            this.logger.LogC(() => `startWebSocket disconnected. ${err}.`, eLogLevel.Error);\n            this._webSocketStatus.next(`${err}.  Check your network connection.`);\n            this.hubConnected.next(false);\n            this.sendDisconnect();\n            this._connectionId = null;\n\n            // wait 5 seconds, then attempt to reconnect.\n            setTimeout(() => this.startWebSocket(), 5000);\n        });\n\n        await this.startWebSocket();\n    }\n\n    public getWebSocketObservable(): Observable<ClientMessage> {\n        return this._webSocketMessages.asObservable();\n    }\n\n    public getWebSocketStatusObservable(): Observable<string> {\n        return this._webSocketStatus.asObservable();\n    }\n\n    public getWebSocketConnectionId() {\n        return this._connectionId;\n    }\n\n    private startWebSocket(): Promise<void> {\n        if (!this.startingWebSocket) {\n            this.startingWebSocket = true;\n\n            return new Promise<void>((resolve, reject) => {\n                if (this.hubConnection.state === HubConnectionState.Connected) {\n                    resolve();\n                    this.startingWebSocket = false;\n                    return;\n                }\n\n                this.hubConnection.start().then(() => {\n                    this._webSocketStatus.next('Connected');\n                    this.hubConnected.next(true);\n                    this.sendConnect().then(() => {\n                        resolve();\n                        this.logger.LogC(() => `startWebSocket: Hub started.`, eLogLevel.Debug);\n                        this.startingWebSocket = false;\n                    }).catch(reason => {\n                        reject(reason);\n                        this.startingWebSocket = false;\n                    });\n                })\n                    .catch(err => {\n                        this._webSocketStatus.next(`${err}.  Check your network connection.`);\n                        this.sendDisconnect();\n                        this.hubConnected.next(false);\n                        this.logger.LogC(() => `startWebSocket: Hub start failed ${err}.`, eLogLevel.Debug);\n                        setTimeout(() => {\n                            this.startingWebSocket = false;\n                            this.startWebSocket();\n                        }, 5000);\n                        resolve();\n                    });\n            });\n        }\n    }\n\n    private sendDisconnect() {\n        const disconnectMessage = new ClientMessage();\n        disconnectMessage.command = eClientCommand.Disconnect;\n        this._webSocketMessages.next(disconnectMessage);\n    }\n\n    private sendConnect(): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            const message = new ClientMessage();\n            return this.hubConnection.invoke('Connect').then(value => {\n                this._connectionId = value;\n                message.command = eClientCommand.Connect;\n                this._webSocketMessages.next(message);\n                resolve();\n            }).catch(reason => {\n                this._webSocketMessages.next(reason);\n                reject(reason);\n            });\n        });\n    }\n\n\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription} from 'rxjs';\n\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubCache } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { DexihApi, DexihHub, eDataObjectType } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n    selector: 'actions-api-button',\n    templateUrl: './actions-api-button.component.html'\n})\n\nexport class ActionsApiButtonComponent implements OnInit, OnDestroy {\n    @Input() public apis: DexihApi[];\n    @Input() public pullRight = false;\n\n    public hubCache: HubCache;\n\n    private _hubCacheSubscription: Subscription;\n\n    private cancelToken: CancelToken = new CancelToken();\n\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n                private router: Router,\n                private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n            this.hubCache = cache;\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    delete() {\n        this.hubService.deleteApis(this.apis);\n    }\n\n    editApi(api: DexihApi) {\n        this.router.navigate(['api-edit', api.key], { relativeTo: this.route });\n    }\n\n    export() {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        this.apis.forEach(item => { this.hubCache.cacheAddApi(item.key, hub); });\n\n        let filename = this.apis.length === 1 ? 'Api - ' + this.apis[0].name + '.json' : 'apis.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    shareItems(isShared: boolean) {\n        this.hubService.shareItems(this.apis.map(c => c.key), eDataObjectType.Api, isShared);\n    }\n\n    activateApis() {\n        this.hubService.activateApis(this.apis, this.cancelToken);\n    }\n\n    cancelApis() {\n        this.hubService.deactivateApis(this.apis.map(c => c.key), this.cancelToken);\n    }\n}\n","<ng-template [ngIf]=\"apis\">\n    <d-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-table\" [text]=\"apis.length > 1 ? 'apis' : 'Api'\" [pullRight]=\"pullRight\">\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Metadata</li>\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" [routerLink]=\"['api-new']\" title=\"Create a new api.\"><i class=\"fa fa-file-o\"></i> New</a></li>\n        <ng-template [ngIf]=\"apis.length > 0\">\n            <li *ngIf=\"apis.length == 1\">\n                <a class=\"dropdown-item\" [routerLink]=\"['api-edit', apis[0].key]\" queryParamsHandling=\"merge\"><i class=\"fa fa-edit\"></i> Edit</a>\n            </li>\n\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"shareItems(true)\" title=\"Select the selected items as shared.\"><i class=\"fa fa-group\"></i> Share</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"shareItems(false)\" title=\"Select the selected items as private.\"><i class=\"fa fa-user-secret\"></i> Private</a></li>\n\n            <li><a class=\"dropdown-item\" (click)=\"export()\" title=\"Export the metadata for the selected apis to a local file.\"><i class=\"fa fa-save\"></i> Save Locally</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"delete()\" title=\"Delete the metadata for the selected apis.\"><span class=\"text-danger\"><i class=\"fa fa-trash-o text-danger\"></i> Delete</span></a></li>\n    \n            <li class=\"list-group-item list-group-item-heading list-group-item-info\">Operations</li>\n            <li><a class=\"dropdown-item\" *ngIf=\"apis.length == 1\" [routerLink]=\"['results']\" [queryParams]=\"{apiKeys: [apis[0].key]}\" title=\"Show the Api Logs\"><i class=\"fa fa-history\"></i> Logs</a></li>\n\n            <ng-template [ngIf]=\"hubCache.canWrite\">\n                <li><a class=\"dropdown-item\" (click)=\"activateApis()\" title=\"Activates the api.\"><span class=\"text-success\"><i class=\"fa fa-bolt\"></i> Activate Api's</span> </a></li>\n                <li><a class=\"dropdown-item\" (click)=\"cancelApis()\" title=\"Cancel & deactivate the api's\"><span class=\"text-danger\"><i class=\"fa fa-ban\"></i> Cancel/Deactivate Api's</span> </a></li>\n            </ng-template>\n\n        </ng-template>\n    </d-button-dropdown>\n</ng-template>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription, combineLatest} from 'rxjs';\n\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubService } from '../../hub.service';\nimport { DexihColumnValidation } from '../../../shared/shared.models';\n\n\n@Component({\n    selector: 'actions-columnValidation-button',\n    templateUrl: './actions-columnValidation-button.component.html'\n})\n\nexport class ActionsColumnValidationButtonComponent implements OnInit, OnDestroy {\n    @Input() public columnValidation: DexihColumnValidation;\n    @Input() public pullRight = false;\n\n    private _hubCacheSubscription: Subscription;\n\n    columns = [];\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n                private router: Router,\n                private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n\n            if (cache.isLoaded()) {\n                // search any columns for an occurrence of the columnValidation.\n                cache.hub.dexihTables.forEach(tab => {\n                    let con = cache.hub.dexihConnections.find(c => c.key === tab.connectionKey);\n                    tab.dexihTableColumns.forEach(col => {\n                        if (col.columnValidationKey === this.columnValidation.key) {\n                            this.columns.push({\n                                name : `${col.name} (${con.name}.${tab.name})`,\n                                tableKey: tab.key,\n                                columnKey: col.key\n                            });\n                        }\n                    });\n                });\n            }\n        });\n\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n     }\n\n    navigateToColumn(col: any) {\n        this.router.navigate(['table-edit', col.tableKey, 'column', col.key], { relativeTo: this.route.parent.parent });\n    }\n\n}\n","<d-button-edit class=\"mr-1\" [routerLink]=\"['columnValidation-edit', columnValidation.key]\" queryParamsHandling=\"merge\"></d-button-edit>\n<d-button-dropdown *ngIf=\"columns.length > 0 || columns.length > 0\" buttonClass=\"btn-primary\" iconClass=\"fa fa-info-circle\" text=\"Used In\" [pullRight]=\"pullRight\">\n    <li *ngFor=\"let col of columns\">\n        <a class=\"dropdown-item\" (click)=\"navigateToColumn(col)\">{{col.name}}</a>\n    </li>\n</d-button-dropdown>","<ng-template [ngIf]=\"connections\">\n    <d-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-database\" [text]=\"connections.length > 1 ? 'Connections' : 'Connection'\" [pullRight]=\"pullRight\">\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Metadata</li>\n        <li *ngIf=\"hubCache.canWrite\">\n            <a class=\"dropdown-item\" [routerLink]=\"['connection-new', eConnectionPurpose.Source]\" title=\"Create a new datalink.\">\n                <i class=\"fa fa-file-o\"></i> New (Source)</a>\n        </li>\n        <li *ngIf=\"hubCache.canWrite\">\n            <a class=\"dropdown-item\" [routerLink]=\"['connection-new', eConnectionPurpose.Managed]\" title=\"Create a new datalink.\">\n                <i class=\"fa fa-file-o\"></i> New (Managed)</a>\n        </li>\n        <li *ngIf=\"hubCache.canWrite\">\n            <a class=\"dropdown-item\" [routerLink]=\"['connection-new', eConnectionPurpose.Target]\" title=\"Create a new datalink.\">\n                <i class=\"fa fa-file-o\"></i> New (Target)</a>\n        </li>\n        <ng-template [ngIf]=\"connections.length > 0\">\n            <li *ngIf=\"!hideEdit && connections.length == 1\">\n                <a class=\"dropdown-item\" [routerLink]=\"['connection-edit', connections[0].key]\" queryParamsHandling=\"merge\">\n                    <i class=\"fa fa-edit\"></i> Edit</a>\n            </li>\n            <li *ngIf=\"hubCache.canWrite\">\n                    <a class=\"dropdown-item\" [routerLink]=\"['connection-copy', connections[0].key]\" queryParamsHandling=\"merge\" title=\"Copy the connection.\">\n                            <i class=\"fa fa-copy\"></i> Copy\n                    </a>\n                </li>\n            <li *ngIf=\"hubCache.canWrite && showEdit\">\n                <a class=\"dropdown-item\" (click)=\"shareSelectedConnections(true)\" title=\"Select the selected connections as shared.\">\n                    <i class=\"fa fa-group\"></i> Share</a>\n            </li>\n            <li *ngIf=\"hubCache.canWrite && showEdit\">\n                <a class=\"dropdown-item\" (click)=\"shareSelectedConnections(false)\" title=\"Select the selected connections as private.\">\n                    <i class=\"fa fa-user-secret\"></i> Private</a>\n            </li>\n            <li>\n                <a class=\"dropdown-item\" (click)=\"export()\" title=\"Export the metadata for the selected connections to a local file.\">\n                    <i class=\"fa fa-save\"></i> Save Locally</a>\n            </li>\n            <li *ngIf=\"hubCache.canWrite\">\n                <a class=\"dropdown-item\" (click)=\"delete()\" title=\"Delete the metadata for the selected connections.\">\n                    <span class=\"text-danger\">\n                        <i class=\"fa fa-trash-o text-danger\"></i> Delete</span>\n                </a>\n            </li>\n\n            <ng-template [ngIf]=\"hubCache.canWrite && connections.length == 1 && connectionReference\">\n                <li class=\"list-group-item list-group-item-heading list-group-item-info\">Operations</li>\n                <ng-template [ngIf]=\"connectionReference.connectionCategory == eConnectionCategory.SqlDatabase || connectionReference.connectionCategory == eConnectionCategory.DatabaseFile || connectionReference.connectionCategory == eConnectionCategory.NoSqlDatabase || connectionReference.connectionCategory == eConnectionCategory.Hub\">\n                    <li>\n                        <a class=\"dropdown-item\"  routerLink=\"tables\" [queryParams]=\"{'connectionKey': connections[0].key}\" title=\"View imported table for this connection.\">\n                            <i class=\"fa fa-folder\"></i> View Imported Tables</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" *ngIf=\"hubCache.canWrite\" [routerLink]=\"['connection-import', connections[0].key]\" title=\"Import tables for this connection.\">\n                            <i class=\"fa fa-plus-square\"></i> Import Tables</a>\n                    </li>\n                </ng-template>\n\n                <ng-template [ngIf]=\"hubCache.canWrite && connections.length == 1\">\n                    <ng-template [ngIf]=\"connectionReference.connectionCategory == eConnectionCategory.File\">\n                        <li>\n                            <a class=\"dropdown-item\" routerLink=\"tables\" [queryParams]=\"{'connectionKey': connections[0].key}\" title=\"View imported files for this connection.\">\n                                <i class=\"fa fa-folder\"></i> View Imported Files</a>\n                        </li>\n                        <li>\n                            <a class=\"dropdown-item\" *ngIf=\"hubCache.canWrite\" [routerLink]=\"[hubPath, 'files', 'bulk-load', connections[0].key]\" title=\"Import a new file for this connection.\">\n                                <i class=\"fa fa-plus-square\"></i> Bulk Create new Files</a>\n                        </li>\n                        <li>\n                            <a class=\"dropdown-item\" *ngIf=\"hubCache.canWrite\" [routerLink]=\"['tables', 'table-new', connections[0].key]\" title=\"Import a new file for this connection.\">\n                                <i class=\"fa fa-plus-square\"></i> Add File(s)</a>\n                        </li>\n                    </ng-template>\n\n                    <ng-template [ngIf]=\"hubCache.canWrite && connections.length == 1\">\n                        <ng-template [ngIf]=\"connectionReference.connectionCategory == eConnectionCategory.WebService\">\n                            <li>\n                                <a class=\"dropdown-item\" routerLink=\"tables\" [queryParams]=\"{'connectionKey': connections[0].key}\" title=\"View imported web services for this connection.\">\n                                    <i class=\"fa fa-folder\"></i> View Imported Web Services</a>\n                            </li>\n                            <li>\n                                <a class=\"dropdown-item\" *ngIf=\"hubCache.canWrite\" [routerLink]=\"['tables', 'table-new', connections[0].key]\" title=\"Import a new web service for this connection.\">\n                                    <i class=\"fa fa-plus-square\"></i> New Web Service</a>\n                            </li>\n                        </ng-template>\n                    </ng-template>\n\n\n                    <ng-template [ngIf]=\"datalinks.length > 0 || datalinks.length > 0 || datajobs.length > 0 || datajobs.length > 0\">\n                        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Related</li>\n                        <li *ngFor=\"let datalink of datalinks\">\n                            <a class=\"dropdown-item\" (click)=\"navigateToDatalink(datalink)\">{{datalink.name}}</a>\n                        </li>\n                        <li *ngFor=\"let datajob of datajobs\">\n                            <a class=\"dropdown-item\" (click)=\"navigateToDatajob(datajob)\">{{datajob.name}}</a>\n                        </li>\n                    </ng-template>\n                </ng-template>\n            </ng-template>\n        </ng-template>\n    </d-button-dropdown>\n    </ng-template>","import { Component, Input, OnDestroy, OnInit, OnChanges } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription ,  Observable, combineLatest} from 'rxjs';\n\nimport { AuthService } from '../../../+auth/auth.service';\nimport {HubCache } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { DexihConnection, ConnectionReference, eConnectionCategory, DexihDatalink, DexihDatajob, eConnectionPurpose } from '../../../shared/shared.models';\nimport { async } from 'q';\n\n@Component({\n    selector: 'actions-connection-button',\n    templateUrl: './actions-connection-button.component.html'\n})\n\nexport class ActionsConnectionButtonComponent implements OnInit, OnDestroy, OnChanges {\n    @Input() public connections: DexihConnection[];\n    @Input() public hideEdit = false;\n    @Input() public pullRight = false;\n\n    public connectionReference: ConnectionReference;\n    eConnectionCategory = eConnectionCategory;\n\n    private _subscription: Subscription;\n\n    public hubCache: HubCache;\n    public eConnectionPurpose = eConnectionPurpose;\n\n    public hubPath: string;\n\n    datalinks = [];\n    datajobs = [];\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n                private router: Router,\n                private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        this._subscription = combineLatest(\n            this.hubService.getHubCacheObservable(),\n        ).subscribe(async result => {\n            this.hubCache = result[0];\n\n            if (!this.hubCache.isLoaded()) {\n                return;\n            }\n\n            this.hubPath = this.hubCache.getHubUrl();\n\n            this.datalinks = [];\n            this.datajobs = [];\n\n            let cache = this.hubCache;\n\n            if (this.connections && this.connections.length === 1) {\n                this.connectionReference = await this.hubService.GetConnectionReference(this.connections[0]);\n\n                // search any columns for an occurrence of the columnValidation.\n                cache.hub.dexihDatajobs.forEach(datajob => {\n                    if ( datajob.auditConnectionKey === this.connections[0].key) {\n                        this.datajobs.push({\n                            key: datajob.key,\n                            name: `${datajob.name} (datajob audit connection)`\n                        });\n                    }\n                });\n\n                cache.hub.dexihDatalinks.forEach(datalink => {\n                    if ( datalink.auditConnectionKey === this.connections[0].key) {\n                        this.datalinks.push({\n                            key: datalink.key,\n                            name: `${datalink.name} (datalink audit connection)`\n                        });\n                    }\n\n                    if (datalink.sourceDatalinkTable && datalink.sourceDatalinkTable.sourceTableKey) {\n                        let table = cache.getTable(datalink.sourceDatalinkTable.sourceTableKey);\n                        if (table && table.connectionKey === this.connections[0].key) {\n                            this.datalinks.push({\n                                key: datalink.key,\n                                name: `${datalink.name} (datalink source)`\n                            });\n                        }\n                    }\n\n                    datalink.dexihDatalinkTransforms.forEach(transform => {\n                        if (transform.joinDatalinkTable && transform.joinDatalinkTable.sourceDatalinkKey) {\n                            let table = cache.getTable(transform.joinDatalinkTable.sourceTableKey);\n                            if (table && table.connectionKey === this.connections[0].key) {\n                                this.datalinks.push({\n                                    key: datalink.key,\n                                    name: `${datalink.name} (datalink join)`\n                                });\n                            }\n                        }\n                    });\n\n                    datalink.dexihDatalinkTargets.forEach(target => {\n                        let table = cache.getTable(target.tableKey);\n                        if (table && table.connectionKey === this.connections[0].key) {\n                            this.datalinks.push({\n                                key: datalink.key,\n                                name: `${datalink.name} (datalink target)`\n                            });\n                        }\n                    });\n                });\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    async ngOnChanges() {\n        if (this.connections && this.connections.length === 1 ) {\n            this.connectionReference = await this.hubService.GetConnectionReference(this.connections[0]);\n        }\n    }\n\n    export() {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        this.connections.forEach(connection => { this.hubCache.cacheAddConnection(connection.key, hub); });\n\n        let filename = this.datalinks.length === 1 ? 'Connection - ' + this.connections[0].name + '.json' : 'connections.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    delete() {\n        this.hubService.deleteConnections(this.connections);\n    }\n\n    navigateToDatalink(datalink: DexihDatalink) {\n        this.router.navigate(['datalinks', 'datalink-edit', 'edit', datalink.key], { relativeTo: this.route.parent.parent });\n    }\n\n    navigateToDatajob(datajob: DexihDatajob) {\n        this.router.navigate(['datajobs', 'datajob-edit', datajob.key], { relativeTo: this.route.parent.parent });\n    }\n\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription, combineLatest} from 'rxjs';\n\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubCache } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { DexihView, eDataObjectType, DexihDashboard } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'actions-dashboard-button',\n    templateUrl: './actions-dashboard-button.component.html'\n})\n\nexport class ActionsDashboardButtonComponent implements OnInit, OnDestroy {\n    @Input() public dashboards: DexihDashboard[];\n    @Input() public pullRight = false;\n\n    private _hubCacheSubscription: Subscription;\n    public hubCache: HubCache;\n\n        tables = [];\n\n        constructor(\n            private authService: AuthService,\n            private hubService: HubService,\n                    private router: Router,\n                    private route: ActivatedRoute) { }\n\n        ngOnInit() {\n            this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n                this.hubCache = cache;\n            });\n\n        }\n\n        ngOnDestroy() {\n            if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n         }\n\n         delete() {\n            this.hubService.deleteDashboards(this.dashboards);\n        }\n\n        shareItems(isShared: boolean) {\n            this.hubService.shareItems(this.dashboards.map(c => c.key), eDataObjectType.Dashboard, isShared);\n        }\n\n        export() {\n            const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n            this.dashboards.forEach(dashboard => { this.hubCache.cacheAddDashboard(dashboard.key, hub); });\n\n            let filename = this.dashboards.length === 1 ? 'Dashboard - ' + this.dashboards[0].name + '.json' : 'dashboards.json';\n\n            this.hubService.exportHub(hub, filename);\n        }\n\n\n}\n","<ng-template [ngIf]=\"dashboards\">\n    <d-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-pie-chart\" [text]=\"dashboards.length > 1 ? 'Dashboards' : 'Dashboard'\" [pullRight]=\"pullRight\">\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Metadata</li>\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" [routerLink]=\"['dashboard-new']\" title=\"Create a new dashboard.\"><i class=\"fa fa-file-o\"></i> New</a></li>\n        <ng-template [ngIf]=\"dashboards.length > 0\">\n            <li *ngIf=\"dashboards.length == 1\">\n                <a class=\"dropdown-item\" [routerLink]=\"['dashboard-edit', dashboards[0].key]\" queryParamsHandling=\"merge\"><i class=\"fa fa-edit\"></i> Edit</a>\n            </li>\n\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"shareItems(true)\" title=\"Select the selected items as shared.\"><i class=\"fa fa-group\"></i> Share</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"shareItems(false)\" title=\"Select the selected items as private.\"><i class=\"fa fa-user-secret\"></i> Private</a></li>\n\n            <li><a class=\"dropdown-item\" (click)=\"export()\" title=\"Export the metadata for the selected apis to a local file.\"><i class=\"fa fa-save\"></i> Save Locally</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"delete()\" title=\"Delete the metadata for the selected apis.\"><span class=\"text-danger\"><i class=\"fa fa-trash-o text-danger\"></i> Delete</span></a></li>\n\n        </ng-template>\n    </d-button-dropdown>\n</ng-template>","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { HubCache } from '../../hub.models';\nimport { Subscription } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DexihDatajob, DexihHub } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n    selector: 'actions-datajob-button',\n    templateUrl: './actions-datajob-button.component.html'\n})\n\nexport class ActionsDatajobButtonComponent implements OnInit, OnDestroy {\n    @Input() public datajobs: DexihDatajob[];\n    @Input() public showEdit = true;\n    @Input() public pullRight = false;\n\n    public hubCache: HubCache;\n\n    private _hubCacheSubscription: Subscription;\n    private cancelToken: CancelToken = new CancelToken();\n\n\n    constructor(private hubService: HubService,\n        private router: Router,\n        private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n            this.hubCache = cache;\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    delete() {\n        this.hubService.deleteDatajobs(this.datajobs);\n    }\n\n    runDatajobs(truncate: boolean, resetIncremental: boolean) {\n        this.hubService.runDatajobs(this.datajobs, truncate, resetIncremental, null, null, this.cancelToken);\n    }\n\n    runDatajobsOptions() {\n        let datajobs = this.datajobs.map(c => c.key);\n        let datajobsString = datajobs.join('|');\n        this.router.navigate(['datajobs', 'datajob-run', datajobsString], { relativeTo: this.route.parent.parent });\n    }\n\n    export() {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        this.datajobs.forEach(datajob => { this.hubCache.cacheAddDatajob(datajob.key, hub); });\n\n        let filename = this.datajobs.length === 1 ? 'Datajob - ' + this.datajobs[0].name + '.json' : 'datajobs.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    activateDatajobs() {\n        this.hubService.activateDatajobs(this.datajobs, null, this.cancelToken);\n    }\n\n    cancelDatajobs() {\n        this.hubService.deactivateDatajobs(this.datajobs.map(c => c.key), this.cancelToken);\n    }\n\n    editDatajob(datajob: DexihDatajob) {\n        this.router.navigate(['datajob-edit', datajob.key], { relativeTo: this.route });\n    }\n}\n","<ng-template [ngIf]=\"datajobs\">\n    <d-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-table\" [text]=\"datajobs.length > 1 ? 'Datajobs' : 'Datajob'\" [pullRight]=\"pullRight\">\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Metadata</li>\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" [routerLink]=\"['datajob-new']\" title=\"Create a new datajob.\"><i class=\"fa fa-file-o\"></i> New</a></li>\n        <ng-template [ngIf]=\"datajobs.length > 0\">\n            <li *ngIf=\"showEdit && datajobs.length == 1\">\n                <a class=\"dropdown-item\" [routerLink]=\"['datajob-edit', datajobs[0].key]\" queryParamsHandling=\"merge\"><i class=\"fa fa-edit\"></i> Edit</a>\n            </li>\n\n            <li><a class=\"dropdown-item\" (click)=\"export()\" title=\"Export the metadata for the selected datajobs to a local file.\"><i class=\"fa fa-save\"></i> Save Locally</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"delete()\" title=\"Delete the metadata for the selected datajobs.\"><span class=\"text-danger\"><i class=\"fa fa-trash-o text-danger\"></i> Delete</span></a></li>\n    \n            <li class=\"list-group-item list-group-item-heading list-group-item-info\">Operations</li>\n            <li><a class=\"dropdown-item\" *ngIf=\"datajobs.length == 1\" [routerLink]=\"['results']\" [queryParams]=\"{datajobKeys: [datajobs[0].key]}\" title=\"Show the execution history \"><i class=\"fa fa-history\"></i> Execution History</a></li>\n\n            <ng-template [ngIf]=\"hubCache.canWrite\">\n                <li><a class=\"dropdown-item\" (click)=\"activateDatajobs()\" title=\"Activates the datajob schedules/triggers\"><span class=\"text-success\"><i class=\"fa fa-bolt\"></i> Activate Triggers</span> </a></li>\n                <li><a class=\"dropdown-item\" (click)=\"cancelDatajobs()\" title=\"Cancel & deactivate the datajob schedules/triggers\"><span class=\"text-danger\"><i class=\"fa fa-ban\"></i> Cancel/Deactivate Triggers</span> </a></li>\n                <li><a class=\"dropdown-item\"  (click)=\"runDatajobs(false, false)\" title=\"Run selected datajobs now.\"><i class=\"fa fa-bolt\"></i> Run</a></li>\n                <li><a class=\"dropdown-item\" (click)=\"runDatajobs(true, false)\" title=\"Run selected datajobs now (truncate target tables).\"><i class=\"fa fa-bolt\"></i> Run (truncate)</a></li>\n                <li><a class=\"dropdown-item\" (click)=\"runDatajobs(false, true)\" title=\"Run selected datajobs now (reset delta counter).\"><i class=\"fa fa-bolt\"></i> Run (reset delta)</a></li>\n                <li><a class=\"dropdown-item\" (click)=\"runDatajobsOptions()\" title=\"Run selected datajobs with options.\"><i class=\"fa fa-bolt\"></i> Run (options)</a></li>\n            </ng-template>\n\n        </ng-template>\n    </d-button-dropdown>\n</ng-template>","<ng-template [ngIf]=\"datalinks\">\n    <d-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-table\" [text]=\"datalinks.length > 1 ? 'Datalinks' : 'Datalink'\" [pullRight]=\"pullRight\">\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Metadata</li>\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" [routerLink]=\"['datalink-edit', 'new']\" title=\"Create a new datalink.\"><i class=\"fa fa-file-o\"></i> New</a></li>\n        <ng-template [ngIf]=\"datalinks.length > 0\">\n            <li *ngIf=\"showEdit && datalinks.length == 1\">\n                <a class=\"dropdown-item\" [routerLink]=\"['datalink-edit', 'edit', datalinks[0].key]\" queryParamsHandling=\"merge\"><i class=\"fa fa-edit\"></i> Edit</a>\n            </li>\n            <li *ngIf=\"hubCache.canWrite\">\n                <a class=\"dropdown-item\" [routerLink]=\"['datalink-edit', 'copy', datalinks[0].key]\" queryParamsHandling=\"merge\" title=\"Copy the datalink.\">\n                        <i class=\"fa fa-copy\"></i> Copy\n                </a>\n            </li>\n            <li *ngIf=\"hubCache.canWrite && showEdit\"><a class=\"dropdown-item\" (click)=\"shareItems(true)\" title=\"Select the selected datalinks as shared.\"><i class=\"fa fa-group\"></i> Share</a></li>\n            <li *ngIf=\"hubCache.canWrite && showEdit\"><a class=\"dropdown-item\" (click)=\"shareItems(false)\" title=\"Select the selected datalinks as private.\"><i class=\"fa fa-user-secret\"></i> Private</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"createDatajob()\" title=\"Create data job from selected datalinks\"><i class=\"fa fa-calendar\"></i> New Datajob</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"createDatalinkTests()\" title=\"Create test from the selected datalinks\"><i class=\"fa fa-calendar\"></i> New Datalink Tests</a></li>\n\n            <li><a class=\"dropdown-item\" (click)=\"export()\" title=\"Export the metadata for the selected datalinks to a local file.\"><i class=\"fa fa-save\"></i> Save Locally</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"delete()\" title=\"Delete the metadata for the selected datalinks.\"><span class=\"text-danger\"><i class=\"fa fa-trash-o text-danger\"></i> Delete</span></a></li>\n    \n            <li class=\"list-group-item list-group-item-heading list-group-item-info\">Operations</li>\n            <li *ngIf=\"datalink\">\n                <a class=\"dropdown-item\" [routerLink]=\"['datalink-preview', datalinks[0].key, false]\" queryParamsHandling=\"merge\"  title=\"Preview the data output from the datalink.\"><i class=\"fa fa-table\"></i> Preview Datalink</a>\n                <a class=\"dropdown-item\" [routerLink]=\"['datalink-preview', datalinks[0].key, true]\" queryParamsHandling=\"merge\"  title=\"Preview the data changes when the datalink is run.\"><i class=\"fa fa-table\"></i> Preview Datalink (changes)</a>\n                <a class=\"dropdown-item\" *ngFor=\"let table of targetTables\" [routerLink]=\"['table-preview', table.key]\" queryParamsHandling=\"merge\" [title]=\"'Preview the target table ' + table.name\"><i class=\"fa fa-table\"></i> Preview {{table.name}}</a>\n            </li>\n            <li><a class=\"dropdown-item\" *ngIf=\"datalinks.length == 1\" [routerLink]=\"['results']\" [queryParams]=\"{datalinkKeys: [datalinks[0].key]}\" title=\"Show the execution history \"><i class=\"fa fa-history\"></i> Execution History</a></li>\n\n            <li><a class=\"dropdown-item\" (click)=\"download()\" title=\"Download data from selected datalinks data to csv files.\"><i class=\"fa fa-cloud-download\"></i> Download Data</a></li>\n\n            <ng-template [ngIf]=\"hubCache.canWrite\">\n                <li><a class=\"dropdown-item\" (click)=\"cancelDatalinks()\" title=\"Cancel selected running datalinks.\"><span class=\"text-danger\"><i class=\"fa fa-ban\"></i> Cancel Datalinks</span> </a></li>\n                <li><a class=\"dropdown-item\"  (click)=\"runDatalinks(false, false)\" title=\"Run selected datalinks now.\"><i class=\"fa fa-bolt\"></i> Run</a></li>\n                <li><a class=\"dropdown-item\" (click)=\"runDatalinksOptions()\" title=\"Run selected datalinks with options.\"><i class=\"fa fa-bolt\"></i> Run (options)</a></li>\n            </ng-template>\n\n            <ng-template [ngIf]=\"datalinks.length == 1\">\n                <li class=\"list-group-item list-group-item-heading list-group-item-info\">Related</li>\n                <li *ngFor=\"let datalink of relatedDatalinks\">\n                    <a class=\"dropdown-item\" (click)=\"navigateToDatalink(datalink)\">(Datalink) {{datalink.name}}</a>\n                </li>\n                <li *ngFor=\"let datajob of relatedDatajobs\">\n                    <a class=\"dropdown-item\" (click)=\"navigateToDatajob(datajob)\">(DataJob) {{datajob.name}}</a>\n                </li>\n            </ng-template>\n        </ng-template>\n    </d-button-dropdown>\n</ng-template>","import { Component, Input, OnDestroy, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription} from 'rxjs';\nimport { HubCache } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { DexihDatalink, DexihTable, DexihDatajob, DexihHub, DownloadObject, eSourceType, eDownloadFormat, eDataObjectType } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n    selector: 'actions-datalink-button',\n    templateUrl: './actions-datalink-button.component.html'\n})\n\nexport class ActionsDatalinkButtonComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() public datalinks: Array<DexihDatalink>;\n    @Input() public showEdit = true;\n    @Input() public pullRight = false;\n\n    public hubCache: HubCache;\n\n    relatedDatalinks = [];\n    relatedDatajobs = [];\n\n    datalink: DexihDatalink;\n    targetTables: DexihTable[] = [];\n    private cancelToken: CancelToken = new CancelToken();\n\n    private _hubCacheSubscription: Subscription;\n\n    constructor(\n        private hubService: HubService,\n        private router: Router,\n        private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n            this.hubCache = cache;\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (!this.hubCache || !this.hubCache.isLoaded()) { return; }\n\n        if (this.datalinks && this.datalinks.length > 0) {\n            // search any columns for an occurrence of the datajob.\n            this.hubCache.hub.dexihDatajobs.forEach(datajob => {\n                datajob.dexihDatalinkSteps.forEach(step => {\n                    if ( step.datalinkKey === this.datalinks[0].key) {\n                        this.relatedDatajobs.push({\n                            key: datajob.key,\n                            name: `${datajob.name} (datajob step)`\n                        });\n                    }\n                });\n            });\n\n            this.hubCache.hub.dexihDatalinks.forEach(datalink => {\n                if (datalink.sourceDatalinkTable && datalink.sourceDatalinkTable.sourceDatalinkKey === this.datalinks[0].key) {\n                    this.relatedDatalinks.push({\n                        key: datalink.key,\n                        name: `${datalink.name} (datalink source)`\n                    });\n                }\n            });\n\n            this.datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === this.datalinks[0].key);\n            if (this.datalink) {\n                this.targetTables = [];\n                this.datalink.dexihDatalinkTargets.forEach(target => {\n                    if (target.tableKey) {\n                        let table = this.hubCache.getTable(target.tableKey);\n                        if (table) {\n                            this.targetTables.push(table);\n                        }\n                    }\n                });\n            } else {\n                this.targetTables = [];\n            }\n        } else {\n            this.relatedDatajobs = [];\n            this.relatedDatalinks = [];\n        }\n    }\n\n    navigateToDatalink(datalink: DexihDatalink) {\n        this.router.navigate(['datalinks', 'datalink-edit', 'edit', datalink.key], { relativeTo: this.route.parent.parent });\n    }\n\n    navigateToDatajob(datajob: DexihDatajob) {\n        this.router.navigate(['datajobs', 'datajob-edit', datajob.key], { relativeTo: this.route.parent.parent });\n    }\n\n    delete() {\n        this.hubService.deleteDatalinks(this.datalinks);\n    }\n\n    shareItems(isShared: boolean) {\n        this.hubService.shareItems(this.datalinks.map(c => c.key), eDataObjectType.Datalink, isShared);\n    }\n\n    async runDatalinks(truncateTarget: boolean, resetIncremental: boolean) {\n        await this.hubService.runDatalinks(this.datalinks.map(c => c.key), truncateTarget, resetIncremental, null, null, null,\n            this.cancelToken);\n    }\n\n    runDatalinksOptions() {\n        let datalinks = this.datalinks.map(c => c.key);\n        let datalinkString = datalinks.join('|');\n        this.router.navigate(['datalinks', 'datalink-run', datalinkString], { relativeTo: this.route.parent.parent });\n    }\n\n    cancelDatalinks() {\n        this.hubService.cancelDatalinks(this.datalinks.map(c => c.key), this.cancelToken).catch();\n    }\n\n    createDatajob() {\n        this.hubService.setNewDatajob(this.datalinks);\n        this.router.navigateByUrl(this.hubCache.getHubUrl() + '/datajobs/datajob-new');\n    }\n\n    createDatalinkTests() {\n        let datalinkKeys = this.datalinks.map(c => c.key).join('|');\n        this.router.navigateByUrl(this.hubCache.getHubUrl() + '/datalinkTests/datalinkTest-new/' + datalinkKeys);\n    }\n\n    export() {\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        this.datalinks.forEach(datalink => { this.hubCache.cacheAddDatalink(datalink.key, hub); });\n\n        let filename = this.datalinks.length === 1 ? 'Datalink - ' + this.datalinks[0].name + '.json' : 'datalinks.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    download() {\n        let downloadItems = new Array<DownloadObject>();\n\n        this.datalinks.forEach(c => {\n            let downloadObject = new DownloadObject();\n            downloadObject.objectKey = c.key;\n            downloadObject.objectType = eDataObjectType.Datalink;\n            downloadItems.push(downloadObject);\n        });\n        this.hubService.downloadData(downloadItems, true, eDownloadFormat.Csv, this.cancelToken)\n    }\n\n}\n","import { Component, Input, OnDestroy, OnInit, OnChanges } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { HubCache } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { DexihDatalinkTest, DexihDatalink } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n    selector: 'actions-datalinkTest-button',\n    templateUrl: './actions-datalinkTest-button.component.html'\n})\n\nexport class ActionsDatalinkTestButtonComponent implements OnInit, OnDestroy, OnChanges {\n    @Input() public datalinkTests: Array<DexihDatalinkTest>;\n    @Input() public showEdit = true;\n    @Input() public pullRight = false;\n\n    public hubCache: HubCache;\n\n    private cancelToken: CancelToken = new CancelToken();\n\n    relatedDatalinks = [];\n\n    private _hubCacheSubscription: Subscription;\n\n    constructor(\n        private hubService: HubService,\n        private router: Router,\n        private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n            this.hubCache = cache;\n        });\n    }\n\n    ngOnChanges() {\n        if (this.datalinkTests && this.datalinkTests.length === 1 && this.datalinkTests[0].dexihDatalinkTestSteps) {\n            let datalinkKeys = this.datalinkTests[0].dexihDatalinkTestSteps.map(c => c.datalinkKey);\n            this.hubCache.hub.dexihDatalinks.forEach(datalink => {\n                if (datalinkKeys.findIndex(c => c === datalink.key) >= 0) {\n                    this.relatedDatalinks.push({\n                        datalinkKey: datalink.key,\n                        name: `${datalink.name} (datalink source)`\n                    });\n                }\n            });\n        } else {\n            this.relatedDatalinks = [];\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    navigateToDatalink(datalink: DexihDatalink) {\n        this.router.navigate(['datalinks', 'datalink-edit', 'edit', datalink.key], { relativeTo: this.route.parent.parent });\n    }\n\n    delete() {\n        this.hubService.deleteDatalinkTests(this.datalinkTests);\n    }\n\n    run() {\n        this.hubService.runDatalinkTests(this.datalinkTests.map(c => c.key), this.cancelToken).catch();\n    }\n\n    snapshot() {\n        this.hubService.runDatalinkTestSnapshot(this.datalinkTests, this.cancelToken).catch();\n    }\n\n    cancel() {\n        this.hubService.cancelDatalinks(this.datalinkTests.map(c => c.key), this.cancelToken).catch();\n    }\n\n    export() {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        this.datalinkTests.forEach(datalinkTest => { this.hubCache.cacheAddDatalink(datalinkTest.key, hub); });\n\n        let filename = this.datalinkTests.length === 1 ? 'DatalinkTest - ' + this.datalinkTests[0].name + '.json' : 'datalinkTests.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n}\n","<ng-template [ngIf]=\"datalinkTests\">\n    <d-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-table\" [text]=\"datalinkTests.length > 1 ? 'Datalink Test' : 'Datalink Test'\" [pullRight]=\"pullRight\">\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Metadata</li>\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" [routerLink]=\"['datalinkTest-new']\" title=\"Create a new datalink test.\"><i class=\"fa fa-file-o\"></i> New</a></li>\n        <ng-template [ngIf]=\"datalinkTests.length > 0\">\n            <li *ngIf=\"showEdit && datalinkTests.length == 1\">\n                <a class=\"dropdown-item\" [routerLink]=\"['datalinkTest-edit', datalinkTests[0].key]\" queryParamsHandling=\"merge\"><i class=\"fa fa-edit\"></i> Edit</a>\n            </li>\n            <li *ngIf=\"hubCache.canWrite\">\n                <a class=\"dropdown-item\" [routerLink]=\"['datalinkTest-edit', 'copy', datalinkTests[0].key]\" queryParamsHandling=\"merge\" title=\"Copy the datalink test.\">\n                        <i class=\"fa fa-copy\"></i> Copy\n                </a>\n            </li>\n\n            <li><a class=\"dropdown-item\" (click)=\"export()\" title=\"Export the metadata for the selected datalink tests to a local file.\"><i class=\"fa fa-save\"></i> Save Locally</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"delete()\" title=\"Delete the metadata for the selected datalink tests.\"><span class=\"text-danger\"><i class=\"fa fa-trash-o text-danger\"></i> Delete</span></a></li>\n    \n            <li class=\"list-group-item list-group-item-heading list-group-item-info\">Operations</li>\n            <li><a class=\"dropdown-item\" *ngIf=\"datalinkTests.length == 1\" [routerLink]=\"['results']\" [queryParams]=\"{datalinkTestKeys: [datalinkTests[0].key]}\" title=\"Show the execution history \"><i class=\"fa fa-history\"></i> Test History</a></li>\n\n            <ng-template [ngIf]=\"hubCache.canWrite\">\n                <li><a class=\"dropdown-item\" (click)=\"cancel()\" title=\"Cancel selected running datalinks.\"><span class=\"text-danger\"><i class=\"fa fa-ban\"></i> Cancel Tests</span> </a></li>\n                <li><a class=\"dropdown-item\"  (click)=\"snapshot()\" title=\"Snapshot the selected datalinks now.\"><i class=\"fa fa-bolt\"></i> Run Snapshot</a></li>\n                <li><a class=\"dropdown-item\"  (click)=\"run()\" title=\"Run selected datalinks now.\"><i class=\"fa fa-bolt\"></i> Run Test</a></li>\n            </ng-template>\n\n            <ng-template [ngIf]=\"datalinkTests.length == 1\">\n                <li class=\"list-group-item list-group-item-heading list-group-item-info\">Related</li>\n                <li *ngFor=\"let datalink of relatedDatalinks\">\n                    <a class=\"dropdown-item\" (click)=\"navigateToDatalink(datalink)\">(Datalink) {{datalink.name}}</a>\n                </li>\n            </ng-template>\n        </ng-template>\n    </d-button-dropdown>\n</ng-template>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription, combineLatest} from 'rxjs';\n\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubService } from '../../hub.service';\nimport { DexihFileFormat } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'actions-fileFormat-button',\n    templateUrl: './actions-fileFormat-button.component.html'\n})\n\nexport class ActionsFileFormatButtonComponent implements OnInit, OnDestroy {\n    @Input() public fileFormat: DexihFileFormat;\n    @Input() public pullRight = false;\n\n    private _hubCacheSubscription: Subscription;\n\n        tables = [];\n\n        constructor(\n            private authService: AuthService,\n            private hubService: HubService,\n                    private router: Router,\n                    private route: ActivatedRoute) { }\n\n        ngOnInit() {\n            this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n                if (!cache.isLoaded()) { return; }\n\n                // search any columns for an occurrence of the columnValidation.\n                    cache.hub.dexihTables.forEach(tab => {\n                        let con = cache.hub.dexihConnections.find(c => c.key === tab.connectionKey);\n                        if (tab.fileFormatKey === this.fileFormat.key) {\n                            this.tables.push({\n                                name : `${tab.name} (${con ? con.name : 'undefined'})`,\n                                tableKey: tab.key,\n                            });\n                        }\n                });\n            });\n\n        }\n\n        ngOnDestroy() {\n            if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n         }\n\n        navigateToTable(col: any) {\n            this.router.navigate(['table-edit', col.tableKey], { relativeTo: this.route.parent.parent });\n        }\n\n}\n","<d-button-edit class=\"mr-1\" [routerLink]=\"['fileFormat-edit', fileFormat.key]\" queryParamsHandling=\"merge\"></d-button-edit>\n<d-button-dropdown *ngIf=\"tables.length > 0 || tables.length > 0\" buttonClass=\"btn-primary\" iconClass=\"fa fa-info-circle\" text=\"Used In\" [pullRight]=\"pullRight\">\n    <li *ngFor=\"let tab of tables\">\n        <a class=\"dropdown-item\" (click)=\"navigateToTable(tab)\">{{tab.name}}</a>\n    </li>\n</d-button-dropdown>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription} from 'rxjs';\n\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubService } from '../../hub.service';\nimport { DexihListOfValues } from '../../../shared/shared.models';\n\n\n@Component({\n    selector: 'actions-listOfValues-button',\n    templateUrl: './actions-listOfValues-button.component.html'\n})\n\nexport class ActionsListOfValuesButtonComponent implements OnInit, OnDestroy {\n    @Input() public listOfValues: DexihListOfValues;\n    @Input() public pullRight = false;\n\n    private _hubCacheSubscription: Subscription;\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n                private router: Router,\n                private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n\n            if (cache.isLoaded()) {\n                // search any columns for an occurrence of the columnValidation.\n            }\n        });\n\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n     }\n\n\n}\n","<d-button-edit class=\"mr-1\" [routerLink]=\"['listOfValues-edit', listOfValues.key]\" queryParamsHandling=\"merge\"></d-button-edit>\n","<ng-template [ngIf]=\"tables\">\n<d-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-table\" [text]=\"tables.length > 1 ? 'Tables' : 'Table'\" [pullRight]=\"pullRight\">\n    <li class=\"list-group-item list-group-item-heading list-group-item-info\">Metadata</li>\n    <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\"  [routerLink]=\"['table-new']\" title=\"Create a new table.\"><i class=\"fa fa-file-o\"></i> New</a></li>\n    <ng-template [ngIf]=\"tables.length > 0\">\n        <li *ngIf=\"showEdit && tables.length == 1\">\n            <a class=\"dropdown-item\" [routerLink]=\"['table-edit', tables[0].key]\" queryParamsHandling=\"merge\"><i class=\"fa fa-edit\"></i> Edit</a>\n        </li>\n        <li *ngIf=\"hubCache.canWrite && showEdit\"><a class=\"dropdown-item\" (click)=\"shareItems(true)\" title=\"Select the selected tables as shared.\"><i class=\"fa fa-group\"></i> Share</a></li>\n        <li *ngIf=\"hubCache.canWrite && showEdit\"><a class=\"dropdown-item\" (click)=\"shareItems(false)\" title=\"Select the selected tables as private.\"><i class=\"fa fa-user-secret\"></i> Private</a></li>\n\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"reImport()\" title=\"Re-Import the select tables from the source database\"><i class=\"fa fa-share-square-o\"></i> Re-Import Metadata</a></li>\n        <li><a class=\"dropdown-item\" (click)=\"export()\" title=\"Export the metadata for the selected tables to a local file.\"><i class=\"fa fa-save\"></i> Save Locally</a></li>\n        <li><a class=\"dropdown-item\" (click)=\"dbml()\" title=\"Create a dbml file from the selected tables.\"><i class=\"fa fa-comments\"></i> Export DBML</a></li>\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"delete()\" title=\"Delete the metadata for the selected tables.\"><span class=\"text-danger\"><i class=\"fa fa-trash-o text-danger\"></i> Delete</span></a></li>\n\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Operations</li>\n        <li *ngIf=\"tables.length == 1\">\n            <a class=\"dropdown-item\" [routerLink]=\"['table-preview', tables[0].key]\" queryParamsHandling=\"merge\"><i class=\"fa fa-table\"></i> Preview Data</a>\n        </li>\n        <li><a class=\"dropdown-item\" (click)=\"download()\" title=\"Download data from selected tables to csv files.\"><i class=\"fa fa-cloud-download\"></i> Download Data</a></li>\n\n        <li *ngIf=\"hubCache.canWrite && ( connectionReference?.connectionCategory == eConnectionCategory.File || connection?.purpose !== eConnectionPurpose.Source)\">\n            <a class=\"dropdown-item\" [routerLink]=\"[hubPath, 'files', 'manage']\" [queryParams]=\"{'tableKey': tables[0].key}\" queryParamsHandling=\"merge\"><i class=\"fa fa-upload\"></i> Upload/Download Files</a>\n        </li>\n\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"clear()\" title=\"Clear the data from the selected tables\"><i class=\"fa fa-trash\"></i><span class=\"text-danger\"> Truncate Table<span *ngIf=\"tables.length > 1\">s</span></span></a></li>\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"rebuild()\" title=\"Drop &amp; rebuild the tables\"><i class=\"fa fa-gears\"></i><span class=\"text-danger\"> Drop/Create Table<span *ngIf=\"tables.length > 1\">s</span></span></a></li>\n\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Datalinks</li>\n        <li *ngIf=\"hubCache.canWrite && tables.length == 1\"><a class=\"dropdown-item\" (click)=\"datalinkQuery()\" title=\"Create new datalinks using the selected tables as the source.\"><i class=\"fa fa-exchange\"></i> Datalink Query</a></li>\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"newDatalinks()\" title=\"Create new datalinks using the selected tables as the source.\"><i class=\"fa fa-exchange\"></i> New Datalinks (from selected tables)</a></li>\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Related</li>\n        <li *ngFor=\"let datalink of datalinksSource\">\n            <a class=\"dropdown-item\" [routerLink]=\"['datalink-edit', 'edit', datalink.key, 'source-table']\">(source) {{datalink.name}}</a>\n        </li>\n        <li *ngFor=\"let datalink of datalinksTarget\">\n            <a class=\"dropdown-item\"  [routerLink]=\"['datalink-edit', 'edit', datalink.key, 'target']\">(target) {{datalink.name}}</a>\n        </li>\n    </ng-template>\n</d-button-dropdown>\n</ng-template>","import { Component, OnInit, OnChanges, OnDestroy, Input, Output, EventEmitter } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HubService } from '../../hub.service';\nimport { HubCache } from '../../hub.models';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { DexihTable, eConnectionCategory, DexihConnection, ConnectionReference, DexihDatalink,\n    DownloadObject, eSourceType, eDownloadFormat, DexihHub, eDataObjectType, eConnectionPurpose } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n    selector: 'actions-table-button',\n    templateUrl: './actions-table-button.component.html'\n})\n\nexport class ActionsTableButtonComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() public tables: DexihTable[] = [];\n    @Input() public refreshTables = false;\n    @Input() public showEdit = true;\n    @Input() public pullRight = false;\n\n    @Output() public changedTables: EventEmitter<Array<DexihTable>> = new EventEmitter<Array<DexihTable>>();\n\n    private _subscription: Subscription;\n    private cancelToken: CancelToken = new CancelToken()\n    private hubCache: HubCache;\n    eConnectionCategory = eConnectionCategory;\n\n    public connection: DexihConnection;\n    public connectionReference: ConnectionReference;\n    public eConnectionPurpose = eConnectionPurpose;\n\n    datalinksSource: Array<DexihDatalink> = [];\n    datalinksTarget: Array<DexihDatalink> = [];\n\n    public hubPath: string;\n    public canWrite: boolean;\n\n    constructor(private hubService: HubService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this._subscription = combineLatest(\n            this.hubService.getHubCacheObservable(),\n        ).subscribe(async result => {\n            this.hubCache = result[0];\n\n            if (this.hubCache.isLoaded()) {\n                this.hubPath = this.hubCache.getHubUrl();\n\n                this.canWrite = this.hubCache.canWrite;\n                if (this.tables && this.tables.length === 1) {\n                    this.connection = this.hubCache.getConnection(this.tables[0].connectionKey);\n                    this.connectionReference = await this.hubService.GetConnectionReference(this.connection);\n                }\n            }\n        });\n     }\n\n     async ngOnChanges() {\n        if (this.tables && this.hubCache) {\n            this.datalinksSource = this.hubCache.hub.dexihDatalinks\n                .filter(c => this.tables.find(t => t.key === c.sourceDatalinkTable.sourceTableKey));\n\n            this.datalinksTarget = this.hubCache.hub.dexihDatalinks.filter(c => {\n                for (let target of c.dexihDatalinkTargets) {\n                    if (this.tables.find(t => t.key === target.tableKey)) { return true; }\n                }\n            });\n\n            if (this.tables.length === 1) {\n                this.connection = this.hubCache.getConnection(this.tables[0].connectionKey);\n                this.connectionReference = await this.hubService.GetConnectionReference(this.connection);\n            }\n        }\n     }\n\n     ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.cancelToken.cancel();\n     }\n\n     getTables(): DexihTable[] {\n\n        if (!this.refreshTables) {\n            return this.tables;\n        }\n\n        let tableKeys = this.tables.map(c => c.key);\n        let tables = tableKeys.map(c => this.hubCache.getTable(c));\n        return tables;\n     }\n\n     getTableKeys(): number[] {\n        if (!this.refreshTables) {\n            return this.tables.map(c => c.key);\n        }\n\n        return this.tables.map(c => c.key);\n    }\n\n    reImport() {\n        this.hubService.reImportTables(this.getTableKeys(), true, this.cancelToken).then(tables => {\n            if (tables) {\n                let tableNames = tables.map(c => c.name).join(', ');\n                this.hubService.addHubSuccessMessage(`Tables ${tableNames} imported successfully.`);\n                this.changedTables.emit(tables);\n            }\n        }).catch();\n    }\n\n    clear() {\n        if (this.canWrite) {\n            this.hubService.clearTables(this.getTableKeys(), this.cancelToken).then(tables => {\n                if (tables) {\n                    let tableNames = this.tables.map(c => c.name).join(', ');\n                    this.hubService.addHubSuccessMessage(`Tables ${tableNames} have been truncated.`);\n                }\n            }).catch();\n        }\n    }\n\n    rebuild() {\n        if (this.canWrite) {\n            this.hubService.createTables(this.getTables(), this.cancelToken).then(tables => {\n                if (tables) {\n                    let tableNames = this.tables.map(c => c.name).join(', ');\n                    this.hubService.addHubSuccessMessage(`Tables ${tableNames} have been dropped & recreated.`);\n                }\n            });\n        }\n    }\n\n    delete() {\n        this.hubService.deleteTables(this.getTables());\n    }\n\n    dbml() {\n        this.hubService.getDbml(this.getTables());\n    }\n\n    shareItems(isShared: boolean) {\n        this.hubService.shareItems(this.getTableKeys(), eDataObjectType.Table, isShared);\n    }\n\n    newDatalinks() {\n        let tableKeys = this.getTableKeys().join('|');\n        this.router.navigate(['/hub', this.hubCache.hub.hubKey, 'tables', 'datalink-new', tableKeys, 0],\n            { relativeTo: this.route.root });\n        // this.router.navigate(['datalink-new', tableKeys, 0], { relativeTo: this.route.parent });\n    }\n\n    datalinkQuery() {\n        this.router.navigate(['/hub', this.hubCache.hub.hubKey, 'datalinks', 'datalink-edit', 'sourceTable', this.tables[0].key],\n        { relativeTo: this.route.root });\n    }\n\n    download() {\n        let downloadItems = new Array<DownloadObject>();\n\n        this.getTables().forEach(c => {\n            let downloadObject = new DownloadObject();\n            downloadObject.objectKey = c.key;\n            downloadObject.objectType = eDataObjectType.Table;\n            downloadItems.push(downloadObject);\n        });\n        this.hubService.downloadData(downloadItems, true, eDownloadFormat.Csv, this.cancelToken)\n    }\n\n    export() {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        let tables = this.getTables();\n        tables.forEach(table => { this.hubCache.cacheAddTable(table.key, hub); });\n\n        let filename = tables.length === 1 ? 'Table - ' + tables[0].name + '.json' : 'tables.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription, combineLatest} from 'rxjs';\n\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubCache } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { DexihView, eDataObjectType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'actions-view-button',\n    templateUrl: './actions-view-button.component.html'\n})\n\nexport class ActionsViewButtonComponent implements OnInit, OnDestroy {\n    @Input() public views: DexihView[];\n    @Input() public pullRight = false;\n\n    private _hubCacheSubscription: Subscription;\n    public hubCache: HubCache;\n\n        tables = [];\n\n        constructor(\n            private authService: AuthService,\n            private hubService: HubService,\n                    private router: Router,\n                    private route: ActivatedRoute) { }\n\n        ngOnInit() {\n            this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n                this.hubCache = cache;\n            });\n\n        }\n\n        ngOnDestroy() {\n            if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n         }\n\n         delete() {\n            this.hubService.deleteViews(this.views);\n        }\n\n        shareItems(isShared: boolean) {\n            this.hubService.shareItems(this.views.map(c => c.key), eDataObjectType.View, isShared);\n        }\n\n        export() {\n            const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n            this.views.forEach(view => { this.hubCache.cacheAddView(view.key, hub); });\n\n            let filename = this.views.length === 1 ? 'View - ' + this.views[0].name + '.json' : 'views.json';\n\n            this.hubService.exportHub(hub, filename);\n        }\n\n}\n","<ng-template [ngIf]=\"views\">\n    <d-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-bar-chart\" [text]=\"views.length > 1 ? 'Views' : 'View'\" [pullRight]=\"pullRight\">\n        <li class=\"list-group-item list-group-item-heading list-group-item-info\">Metadata</li>\n        <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" [routerLink]=\"['view-new']\" title=\"Create a new view.\"><i class=\"fa fa-file-o\"></i> New</a></li>\n        <ng-template [ngIf]=\"views.length > 0\">\n            <li *ngIf=\"views.length == 1\">\n                <a class=\"dropdown-item\" [routerLink]=\"['view-edit', views[0].key]\" queryParamsHandling=\"merge\"><i class=\"fa fa-edit\"></i> Edit</a>\n            </li>\n\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"shareItems(true)\" title=\"Select the selected items as shared.\"><i class=\"fa fa-group\"></i> Share</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"shareItems(false)\" title=\"Select the selected items as private.\"><i class=\"fa fa-user-secret\"></i> Private</a></li>\n\n            <li><a class=\"dropdown-item\" (click)=\"export()\" title=\"Export the metadata for the selected apis to a local file.\"><i class=\"fa fa-save\"></i> Save Locally</a></li>\n            <li *ngIf=\"hubCache.canWrite\"><a class=\"dropdown-item\" (click)=\"delete()\" title=\"Delete the metadata for the selected apis.\"><span class=\"text-danger\"><i class=\"fa fa-trash-o text-danger\"></i> Delete</span></a></li>\n\n        </ng-template>\n    </d-button-dropdown>\n</ng-template>","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { SharedModule } from '../../shared/shared.module';\nimport { CancelButtonComponent, SaveButtonComponent } from './';\nimport { NewDatalinkButtonComponent } from './new-datalink-button/new-datalink-button.component';\nimport { NewConnectionButtonComponent } from './new-connection-button/new-connection-button.component';\nimport { NewTableButtonComponent} from './new-table-button/new-table-button.component';\nimport { ActionsDatajobButtonComponent } from './actions-datajob-button/actions-datajob-button.component'\nimport { ActionsDatalinkButtonComponent } from './actions-datalink-button/actions-datalink-button.component'\nimport { ActionsConnectionButtonComponent } from './actions-connection-button/actions-connection-button.component';\nimport { ActionsTableButtonComponent } from './actions-table-button/actions-table-button.component';\nimport { ActionsFileFormatButtonComponent } from './actions-fileFormat-button/actions-fileFormat-button.component';\nimport { ActionsColumnValidationButtonComponent } from './actions-columnValidation-button/actions-columnValidation-button.component';\nimport { ActionsDatalinkTestButtonComponent } from './actions-datalinkTest-button/actions-datalinkTest-button.component';\nimport { ActionsViewButtonComponent } from './actions-view-button/actions-view-button.component';\nimport { ActionsApiButtonComponent } from './actions-api-button/actions-api-button.component';\nimport { ActionsDashboardButtonComponent } from './actions-dashboard-button/actions-dashboard-button.component';\nimport { ActionsListOfValuesButtonComponent } from './actions-listOfValues-button/actions-listOfValues-button.component';\nimport { TagsUpdateButtonComponent } from './tags-update-button/tags-update-button.component';\nimport { TagsFilterButtonComponent } from './tags-filter-button/tags-filter-button.component';\nimport { DependentItemsButtonComponent } from './dependent-items/dependent-items-button.component';\nimport { ConnectionEditButtonComponent } from './connection-edit-button/connection-edit-button.component';\nimport { DatalinkEditButtonComponent } from './datalink-edit-button/datalink-edit-button.component';\nimport { TableEditButtonComponent } from './table-edit-button/table-edit-button.component';\nimport { ViewEditButtonComponent } from './view-edit-button/view-edit-button.component';\nimport { CustomFunctionEditButtonComponent } from './customFunction-edit-button/customFunction-edit-button.component';\nimport { ColumnValidationEditButtonComponent } from './columnValidation-edit-button/columnValidation-edit-button.component';\n\n@NgModule({\n    imports: [\n        SharedModule\n    ],\n    exports: [\n        CancelButtonComponent,\n        SaveButtonComponent,\n        NewDatalinkButtonComponent,\n        NewConnectionButtonComponent,\n        NewTableButtonComponent,\n        ActionsDatajobButtonComponent,\n        ActionsDatalinkButtonComponent,\n        ActionsConnectionButtonComponent,\n        ActionsTableButtonComponent,\n        ActionsFileFormatButtonComponent,\n        ActionsColumnValidationButtonComponent,\n        ActionsDatalinkTestButtonComponent,\n        ActionsViewButtonComponent,\n        ActionsApiButtonComponent,\n        ActionsDashboardButtonComponent,\n        ActionsListOfValuesButtonComponent,\n        TagsUpdateButtonComponent,\n        TagsFilterButtonComponent,\n        DependentItemsButtonComponent,\n        ConnectionEditButtonComponent,\n        TableEditButtonComponent,\n        DatalinkEditButtonComponent,\n        ViewEditButtonComponent,\n        CustomFunctionEditButtonComponent,\n        ColumnValidationEditButtonComponent\n    ],\n    declarations: [\n        CancelButtonComponent,\n        SaveButtonComponent,\n        NewDatalinkButtonComponent,\n        NewConnectionButtonComponent,\n        NewTableButtonComponent,\n        ActionsDatajobButtonComponent,\n        ActionsDatalinkButtonComponent,\n        ActionsConnectionButtonComponent,\n        ActionsTableButtonComponent,\n        ActionsFileFormatButtonComponent,\n        ActionsColumnValidationButtonComponent,\n        ActionsDatalinkTestButtonComponent,\n        ActionsViewButtonComponent,\n        ActionsApiButtonComponent,\n        ActionsDashboardButtonComponent,\n        ActionsListOfValuesButtonComponent,\n        TagsUpdateButtonComponent,\n        TagsFilterButtonComponent,\n        DependentItemsButtonComponent,\n        ConnectionEditButtonComponent,\n        TableEditButtonComponent,\n        DatalinkEditButtonComponent,\n        ViewEditButtonComponent,\n        CustomFunctionEditButtonComponent,\n        ColumnValidationEditButtonComponent\n    ],\n    providers: [],\n})\nexport class ButtonsModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { HubFormsService } from '../../hub.forms.service';\n\n@Component({\n    selector: 'cancel-button',\n    templateUrl: './cancel-button.component.html'\n})\n\nexport class CancelButtonComponent implements OnInit {\n    @Input() formsService: HubFormsService;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<d-button-cancel (click)=\"formsService.cancel()\"></d-button-cancel>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\n\n@Component({\n    selector: 'columnValidation-edit-button',\n    templateUrl: './columnValidation-edit-button.component.html'\n})\nexport class ColumnValidationEditButtonComponent implements OnInit {\n    @Input() key = null;\n\n    public hubPath: string;\n\n    constructor(private hubService: HubService) { }\n\n    ngOnInit() {\n        this.hubPath = this.hubService.getHubUrl();\n    }\n}\n","<a [routerLink]=\"[hubPath, 'columnValidation-edit', key]\" *ngIf=\"key\" > \n    <i class=\"fa fa-edit\"></i> \n    Edit \n</a>","import { Component, OnInit, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\n\n@Component({\n    selector: 'connection-edit-button',\n    templateUrl: './connection-edit-button.component.html'\n})\nexport class ConnectionEditButtonComponent implements OnInit {\n    @Input() key = null;\n\n    public hubPath: string;\n\n    constructor(private hubService: HubService) { }\n\n    ngOnInit() {\n        this.hubPath = this.hubService.getHubUrl();\n    }\n}\n","<a [routerLink]=\"[hubPath, 'connection-edit', key]\" *ngIf=\"key\" > \n    <i class=\"fa fa-edit\"></i> \n    Edit \n</a>","import { Component, OnInit, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\n\n@Component({\n    selector: 'customFunction-edit-button',\n    templateUrl: './customFunction-edit-button.component.html'\n})\nexport class CustomFunctionEditButtonComponent implements OnInit {\n    @Input() key = null;\n\n    public hubPath: string;\n\n    constructor(private hubService: HubService) { }\n\n    ngOnInit() {\n        this.hubPath = this.hubService.getHubUrl();\n    }\n}\n","<a [routerLink]=\"[hubPath, 'customFunction-edit', key]\" *ngIf=\"key\" > \n    <i class=\"fa fa-edit\"></i> \n    Edit \n</a>","import { Component, OnInit, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\n\n@Component({\n    selector: 'datalink-edit-button',\n    templateUrl: './datalink-edit-button.component.html'\n})\nexport class DatalinkEditButtonComponent implements OnInit {\n    @Input() key = null;\n\n    public hubPath: string;\n\n    constructor(private hubService: HubService) { }\n\n    ngOnInit() {\n        this.hubPath = this.hubService.getHubUrl();\n    }\n}\n","<a [routerLink]=\"[hubPath, 'datalink-edit', 'edit', key]\" *ngIf=\"key\" > \n    <i class=\"fa fa-edit\"></i> \n    Edit \n</a>","<d-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-sitemap\" text=\"Dependencies\" [pullRight]=\"pullRight\">\n    <li *ngIf=\"dependent.dexihDatalinks.length === 0 && dependent.dexihTables.length === 0 && dependent.dexihConnections.length === 0 &&\n        dependent.dexihViews.length === 0 && dependent.dexihListOfValues.length === 0 && dependent.dexihCustomFunctions.length === 0 && \n        dependent.dexihHubVariables.length === 0 && dependent.dexihFileFormats.length === 0\"\n        class=\"dropdown-item\">\n        There are no dependencies\n    </li>\n\n    <li *ngIf=\"dependent.dexihDatalinks.length > 0\" class=\"list-group-item list-group-item-heading list-group-item-info\">Datalinks</li>\n    <li *ngFor=\"let item of dependent.dexihDatalinks\">\n        <a class=\"dropdown-item\" [routerLink]=\"[hubPath, 'datalinks', 'datalink-edit', 'edit', item.key]\">\n            {{item.name}}\n        </a>\n    </li>\n    \n    <li *ngIf=\"dependent.dexihTables.length > 0\" class=\"list-group-item list-group-item-heading list-group-item-info\">Tables</li>\n    <li *ngFor=\"let item of dependent.dexihTables\">\n        <a class=\"dropdown-item\" [routerLink]=\"[hubPath, 'tables', 'table-edit', item.key]\">\n            {{item.logicalName}}\n        </a>\n    </li>\n\n    <li *ngIf=\"dependent.dexihConnections.length > 0\" class=\"list-group-item list-group-item-heading list-group-item-info\">Connections</li>\n    <li *ngFor=\"let item of dependent.dexihConnections\">\n        <a class=\"dropdown-item\" [routerLink]=\"[hubPath, 'connections', 'connection-edit', item.key]\">\n            {{item.name}}\n        </a>\n    </li>\n\n    <li *ngIf=\"dependent.dexihViews.length > 0\" class=\"list-group-item list-group-item-heading list-group-item-info\">Views</li>\n    <li *ngFor=\"let item of dependent.dexihViews\">\n        <a class=\"dropdown-item\" [routerLink]=\"[hubPath, 'views', 'view-edit', item.key]\">\n            {{item.name}}\n        </a>\n    </li>\n\n    <li *ngIf=\"dependent.dexihListOfValues.length > 0\" class=\"list-group-item list-group-item-heading list-group-item-info\">List of Values</li>\n    <li *ngFor=\"let item of dependent.dexihListOfValues\">\n        <a class=\"dropdown-item\" [routerLink]=\"[hubPath, 'listOfValues', 'listOfValue-edit', item.key]\">\n            {{item.name}}\n        </a>\n    </li>\n\n    <li *ngIf=\"dependent.dexihCustomFunctions.length > 0\" class=\"list-group-item list-group-item-heading list-group-item-info\">Custom Functions</li>\n    <li *ngFor=\"let item of dependent.dexihCustomFunctions\">\n        <a class=\"dropdown-item\" [routerLink]=\"[hubPath, 'customFunctions', 'customFunction-edit', item.key]\">\n            {{item.name}}\n        </a>\n    </li>\n\n    <li *ngIf=\"dependent.dexihHubVariables.length > 0\" class=\"list-group-item list-group-item-heading list-group-item-info\">Variables</li>\n    <li *ngFor=\"let item of dependent.dexihHubVariables\">\n        <a class=\"dropdown-item\" [routerLink]=\"[hubPath, 'hubVariables', 'hubVariable-edit', item.key]\">\n            {{item.name}}\n        </a>\n    </li>\n\n    <li *ngIf=\"dependent.dexihFileFormats.length > 0\" class=\"list-group-item list-group-item-heading list-group-item-info\">File Formats</li>\n    <li *ngFor=\"let item of dependent.dexihFileFormats\">\n        <a class=\"dropdown-item\" [routerLink]=\"[hubPath, 'fileFormats', 'fileFormat-edit', item.key]\">\n            {{item.name}}\n        </a>\n    </li>\n</d-button-dropdown>\n","import { Component, Input, OnDestroy, OnInit, OnChanges } from '@angular/core';\nimport { Subscription ,  combineLatest} from 'rxjs';\n\nimport {HubCache, sharedObjectProperties } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { ConnectionReference, eConnectionCategory, eSharedObjectType, DexihHub } from '../../../shared/shared.models';\n\n\n@Component({\n    selector: 'dependent-items-button',\n    templateUrl: './dependent-items-button.component.html'\n})\n\nexport class DependentItemsButtonComponent implements OnInit, OnDestroy, OnChanges {\n    @Input() public objectType: eSharedObjectType\n    @Input() public key: number;\n    @Input() public pullRight = false;\n\n    private _subscription: Subscription;\n\n    public hubCache: HubCache;\n    public hubPath: string;\n\n    public dependent: DexihHub;\n    public sharedObjectProperties = sharedObjectProperties;\n\n    constructor(\n        private hubService: HubService) { }\n\n    ngOnInit() {\n        this._subscription = combineLatest(\n            this.hubService.getHubCacheObservable(),\n        ).subscribe(async result => {\n            this.hubCache = result[0];\n\n            if (!this.hubCache.isLoaded()) {\n                return;\n            }\n\n            this.hubPath = this.hubCache.getHubUrl();\n\n            this.dependent = new DexihHub();\n            this.hubCache.cacheAddObjectFromKey(this.objectType, this.key, this.dependent)\n\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    ngOnChanges() {\n\n    }\n\n}\n","export {CancelButtonComponent} from './cancel-button/cancel-button.component';\nexport {SaveButtonComponent} from './save-button/save-button.component';\n","import { Component, OnInit, Input } from '@angular/core';\nimport { eConnectionPurpose } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'new-connection-button',\n    templateUrl: './new-connection-button.component.html'\n})\n\nexport class NewConnectionButtonComponent implements OnInit {\n    @Input() pullRight = true;\n\n    eConnectionPurpose = eConnectionPurpose;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<d-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-file-o\" text=\"New\" [pullRight]=\"pullRight\">\n        <li>\n            <a class=\"dropdown-item\" [routerLink]=\"['connection-new', eConnectionPurpose.Source]\">Source Database/Service</a>\n        </li>\n        <li>\n            <a class=\"dropdown-item\"  [routerLink]=\"['connection-new', eConnectionPurpose.Managed]\">Managed Database</a>\n        </li>\n        <li>\n            <a class=\"dropdown-item\" [routerLink]=\"['connection-new', eConnectionPurpose.Target]\">Target Connection</a>\n        </li>\n</d-button-dropdown>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n    selector: 'new-datalink-button',\n    templateUrl: './new-datalink-button.component.html'\n})\n\nexport class NewDatalinkButtonComponent implements OnInit {\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<d-button-new [routerLink]=\"['datalink-edit', 'new']\"></d-button-new>\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { Subscription } from 'rxjs';\nimport { DexihConnection } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'new-table-button',\n    templateUrl: './new-table-button.component.html'\n})\n\nexport class NewTableButtonComponent implements OnInit, OnDestroy {\n    @Input() pullRight = true;\n\n    private _hubCacheSubscription: Subscription;\n\n    connections: Array<DexihConnection>;\n\n    constructor(private hubService: HubService) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n            if (cache.isLoaded()) {\n                this.connections = cache.hub.dexihConnections;\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n      }\n}\n","<d-button-dropdown *ngIf=\"connections\" buttonClass=\"btn-primary\" iconClass=\"fa fa-file-o\" text=\"New\" [pullRight]=\"pullRight\"> \n    <li *ngFor=\"let connection of connections\">\n        <a class=\"dropdown-item\" [routerLink]=\"['table-new', connection.key]\">Add to {{connection.name}}</a>\n    </li>\n</d-button-dropdown>","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { HubService } from '../../hub.service';\nimport { Subscription } from 'rxjs';\nimport { HubCache } from '../../hub.models';\n\n@Component({\n    selector: 'save-button',\n    templateUrl: './save-button.component.html'\n})\n\nexport class SaveButtonComponent implements OnInit, OnDestroy {\n    @Input() formsService: HubFormsService;\n\n    private _hubCacheSubscription: Subscription;\n    public hubCache: HubCache;\n\n    constructor(public hubService: HubService) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n            this.hubCache = cache;\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n    }\n}\n","<d-button-splitdropdown *ngIf=\"hubCache.canWrite\" [disabled]=\"!formsService.hasChanged\" buttonClass=\"btn-primary\" iconClass=\"fa fa-cloud-download\" text=\"Save\" (buttonClick)=\"formsService.save()\" [pullRight]=\"true\" title=\"Save to the Hub\">\n        <li><a class=\"dropdown-item\" (click)=\"formsService.save(false, false)\" title=\"Save in the hub\"><i class=\"fa fa-cloud-download\"></i> Save</a></li>\n        <li><a class=\"dropdown-item\" (click)=\"formsService.saveLocal()\" title=\"Export as a local file\"><i class=\"fa fa-floppy-o\"></i> Save as file</a></li>\n        <li><a class=\"dropdown-item\" (click)=\"formsService.save(false, true)\" title=\"Save another version\"><i class=\"fa fa-plus-circle\"></i> Save As...</a></li>\n</d-button-splitdropdown>\n<d-button *ngIf=\"!hubCache.canWrite\" (click)=\"formsService.saveLocal()\" iconClass=\"fa fa-floppy-o\"></d-button>","import { Component, OnInit, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\n\n@Component({\n    selector: 'table-edit-button',\n    templateUrl: './table-edit-button.component.html'\n})\nexport class TableEditButtonComponent implements OnInit {\n    @Input() key = null;\n\n    public hubPath: string;\n\n    constructor(private hubService: HubService) { }\n\n    ngOnInit() {\n        this.hubPath = this.hubService.getHubUrl();\n    }\n}\n","<a [routerLink]=\"[hubPath, 'table-edit', key]\" *ngIf=\"key\" > \n    <i class=\"fa fa-edit\"></i> \n    Edit \n</a>","import { Component, OnDestroy, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { Subscription} from 'rxjs';\nimport { HubCache } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { DexihTag } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\nclass TagState {\n    public tag: DexihTag\n    public isChecked = false;\n    \n}\n\n@Component({\n    selector: 'tags-filter-button',\n    templateUrl: './tags-filter-button.component.html'\n})\nexport class TagsFilterButtonComponent implements OnInit, OnDestroy {\n    @Input() public pullRight = false;\n    @Output() public tags = new EventEmitter<DexihTag[]>();\n\n    public hubCache: HubCache;\n    public tagStates: TagState[];\n\n    private _hubCacheSubscription: Subscription;\n\n    private cancelToken: CancelToken = new CancelToken();\n\n    constructor(\n        private hubService: HubService) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n            if (cache.isLoaded) {\n                this.hubCache = cache;\n\n                let dexihTags = this.hubCache.hub.dexihTags;\n\n                this.tagStates = new Array(dexihTags.length);\n                for (let i = 0; i < this.tagStates.length; i++) {\n                    let tag = dexihTags[i];\n                    this.tagStates[i] = new TagState();\n                    this.tagStates[i].tag = tag;\n                    this.tagStates[i].isChecked = false;\n                }\n            }\n        });\n    }\n\n\n    clear() {\n        this.tagStates.forEach(c => c.isChecked = false);\n        this.tagChange();\n    }\n\n    tagChange() {\n        let selectedTags = this.tagStates.filter(c => c.isChecked).map(c => c.tag);\n        this.tags.emit(selectedTags);\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n}\n","<ng-template [ngIf]=\"tagStates\">\n    <d-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-tags\" text=\"Tag Filters\" [pullRight]=\"pullRight\">\n      <a class=\"dropdown-item\" (click)=\"clear()\" title=\"Clear tag filters\"><span class=\"text-danger\"><i class=\"fa fa-trash-o text-danger\"></i> Clear Filter</span></a>\n        <a *ngFor=\"let tagState of tagStates\" class=\"dropdown-item\" >\n            <div class=\"input-group\">\n              <input type=\"checkbox\" class=\"form-check-input\" [(ngModel)]=\"tagState.isChecked\" (change)=\"tagChange(tagState)\" >\n              <h5><span class=\"badge\" [ngStyle]=\"{'background-color': tagState.tag.color}\" ><span class=\"blend-text\">{{tagState.tag.name}}</span></span></h5>\n            </div>\n          </a>\n    </d-button-dropdown>\n</ng-template>","import { Component, Input, OnDestroy, OnInit, OnChanges } from '@angular/core';\nimport { Subscription} from 'rxjs';\nimport { HubCache } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { eSharedObjectType, DexihTag, eSharedObjectTypeItems, DexihHubNamedEntity } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\nclass TagState {\n    public tag: DexihTag\n    public isChecked = false;\n    public isIndeterminate = false;\n}\n\n@Component({\n    selector: 'tags-update-button',\n    templateUrl: './tags-update-button.component.html'\n})\nexport class TagsUpdateButtonComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() public objectType: eSharedObjectType;\n    @Input() public objects: DexihHubNamedEntity[];\n\n    public hubCache: HubCache;\n    public tags: TagState[];\n    public objectTypeName: string;\n\n    private _hubCacheSubscription: Subscription;\n\n    private cancelToken: CancelToken = new CancelToken();\n\n    constructor(\n        private hubService: HubService) { }\n\n    ngOnInit() {\n        this.objectTypeName = eSharedObjectTypeItems.find(c => c.key === this.objectType)?.name;\n\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n            if (cache.isLoaded) {\n                this.hubCache = cache;\n                this.updateTags();\n            }\n        });\n    }\n\n    ngOnChanges(): void {\n        if (this.hubCache?.isLoaded) {\n            this.updateTags();\n        }\n    }\n\n    updateTags() {\n        let objectTags = this.hubCache.hub.dexihTagObjects.filter(c =>\n            c.objectType === this.objectType &&\n            this.objects.findIndex(d => d.key === c.objectKey) >= 0);\n\n        let dexihTags = this.hubCache.hub.dexihTags;\n\n        this.tags = new Array(dexihTags.length);\n        for (let i = 0; i < this.tags.length; i++) {\n            let tag = dexihTags[i];\n            this.tags[i] = new TagState();\n            this.tags[i].tag = tag;\n            let matchingTags = objectTags.filter(c => c.tagKey === tag.key);\n            if (matchingTags.length > 0 && matchingTags.length === this.objects.length) {\n                this.tags[i].isChecked = true;\n                this.tags[i].isIndeterminate = false;\n            } else if (matchingTags.length > 0) {\n                this.tags[i].isChecked = false;\n                this.tags[i].isIndeterminate = true;\n            } else {\n                this.tags[i].isChecked = false;\n                this.tags[i].isIndeterminate = false;\n            }\n        }\n    }\n\n    delete() {\n        this.hubService.deleteTagObjects(this.objects.map(c => {\n            return {objectType: this.objectType, objectKey: c.key};\n        }));\n    }\n\n    tagChange(tag: TagState) {\n        this.hubService.saveTagObjects(tag.tag.key, tag.isChecked,\n            this.objects.map(c => {\n                return {objectType: this.objectType, objectKey: c.key};\n            }));\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n}\n","<ng-template [ngIf]=\"tags && tags.length > 0\">\n    <d-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-tags\" [text]=\"'Tag ' + objectTypeName + 's'\">\n        <a class=\"dropdown-item\" (click)=\"delete()\" title=\"Clear tags from selected {{objectTypeName}}s\"><span class=\"text-danger\"><i class=\"fa fa-trash-o text-danger\"></i> Clear</span></a>\n        <a *ngFor=\"let tag of tags\" class=\"dropdown-item\" >\n            <div class=\"input-group\">\n              <input type=\"checkbox\" class=\"form-check-input\" [indeterminate]=\"tag.isIndeterminate\" [(ngModel)]=\"tag.isChecked\" (change)=\"tagChange(tag)\" >\n              <h5><span class=\"badge\" [ngStyle]=\"{'background-color': tag.tag.color}\" ><span class=\"blend-text\">{{tag.tag.name}}</span></span></h5>\n            </div>\n          </a>\n    </d-button-dropdown>\n</ng-template>","import { Component, OnInit, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\n\n@Component({\n    selector: 'view-edit-button',\n    templateUrl: './view-edit-button.component.html'\n})\nexport class ViewEditButtonComponent implements OnInit {\n    @Input() key = null;\n\n    public hubPath: string;\n\n    constructor(private hubService: HubService) { }\n\n    ngOnInit() {\n        this.hubPath = this.hubService.getHubUrl();\n    }\n}\n","<a [routerLink]=\"[hubPath, 'view-edit', key]\" *ngIf=\"key\" > \n    <i class=\"fa fa-edit\"></i> \n    Edit \n</a>","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\nimport { HubService } from '../../hub.service';\nimport { Observable, Subscription, combineLatest} from 'rxjs';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubCache, eCacheStatus } from '../../hub.models';\nimport { DexihFileFormat } from '../../../shared/shared.models';\n\n@Component({\n  selector: 'dexih-fileFormat-edit-form',\n  templateUrl: './fileFormat-edit.component.html',\n  providers: [HubFormsService]\n})\nexport class FileFormatEditComponent implements OnInit, OnDestroy {\n  public fileFormatKey: number;\n\n  private hubCache: HubCache;\n  public action: string; // new or edit\n  public pageTitle: string;\n  public params: Params;\n\n  // public parseErrorActions = ParseErrorActions;\n  // public missingFieldActions = MissingFieldActions;\n  // public valueTrimmingOptions = ValueTrimmingOptions;\n\n  private _subscription: Subscription;\n  private _formChangeSubscription: Subscription;\n  private _hubCacheChangeSubscription: Subscription;\n  private isLoaded = false;\n\n  constructor(\n    private hubService: HubService,\n    private authService: AuthService,\n    public formsService: HubFormsService,\n    private route: ActivatedRoute,\n    private router: Router,\n  ) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n      ).subscribe(result => {\n        let data = result[0];\n        this.params = result[1];\n        this.hubCache = result[2];\n\n        this.action = data['action'];\n        this.pageTitle = data['pageTitle'];\n\n        if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded ) { return; }\n\n        if (this.isLoaded && this.action === 'new') { return; }\n\n        if (this.isLoaded && this.formsService.hasChanged) {\n            this.authService.confirmDialog('Synchronization warning',\n            'The hub was disconnected, meaning this edit could have been changed by another session.  Would you like to discard the current changes, and reload the latest version?')\n            .then(confirm => {\n                if (confirm) {\n                    this.load();\n                }\n            }).catch(reason => {\n                return;\n            });\n        } else {\n            this.load();\n        }\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'File Format Edit');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._formChangeSubscription) { this._formChangeSubscription.unsubscribe(); }\n  }\n\n  load() {\n\n    if (this.hubCache.isLoaded()) {\n      if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded || this.isLoaded) { return; }\n      this.isLoaded = true;\n\n      if (this.action === 'edit') {\n        // get the hub key from the route data, and update the service.\n        this.fileFormatKey = + this.params['fileFormatKey'];\n\n        if (!this.fileFormatKey) {\n          this.hubService.addHubErrorMessage('There was no file format specified to edit.');\n        } else {\n          if (!this.hubCache.hub || !this.hubCache.hub.dexihColumnValidations) {\n            this.hubService.addHubErrorMessage('The hub cache is not loaded.');\n          } else {\n\n            let fileFormat = this.hubCache.hub.dexihFileFormats.find(c => c.key === this.fileFormatKey);\n            this.formsService.fileFormat(fileFormat);\n          }\n        }\n      }\n\n      if (this.action === 'new') {\n        let fileFormat = new DexihFileFormat();\n        this.formsService.fileFormat(fileFormat);\n\n        // update the url with the saved key\n        this._formChangeSubscription = this.formsService.getCurrentFormObservable().subscribe(form => {\n          let key = form.controls.key.value;\n          if (key) {\n            if (history.pushState) {\n              let newUrl = window.location.pathname.replace('/fileFormat-new', `/fileFormat-edit/${key}`)\n              this.router.navigateByUrl(newUrl);\n              this._formChangeSubscription.unsubscribe();\n            }\n          }\n        });\n      }\n    }\n  }\n\n  close() {\n    this.authService.navigateUp();\n  }\n}\n","<div class=\"container\">\n\t<d-widget \n\t\ttitle=\"Edit Format\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-file-text-o\" \n\t\t[showCloseButton]=\"true\"\n\t\t[padding]=\"true\"\n\t\t(close)=\"close()\"\n\t\t>\n        <ng-template #header>\n\t\t\t<dexih-invalid-form-details [control]=\"formsService.currentForm\" (click)=\"formsService.showErrors()\" class=\"mr-1\"></dexih-invalid-form-details>\n            <save-button *ngIf=\"hubCache.canWrite\" [formsService]=\"formsService\"  class=\"mr-1\"></save-button>\n            <cancel-button [formsService]=\"formsService\"></cancel-button>\n        </ng-template>\n\n\t\t<form *ngIf=\"formsService.currentForm\"  [formGroup]=\"formsService.currentForm\">\n\t\t\t<fieldset>\n\t\t\t\t<section>\n\t\t\t\t\t<form-input label=\"File Format Name\" formControlName=\"name\" placeholder=\"Enter the file format name.\" iconClass=\"fa fa-list\" [errors]=\"formsService.formErrors['name']\" [autocapitalize]=\"true\">\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<form-textarea label=\"Description\" [showPreview]=\"true\" [isHidden]=\"true\" formControlName=\"description\" placeholder=\"Enter the description.\" >\n\t\t\t\t\t</form-textarea>\n\t\t\t\t</section>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Delimiter\" formControlName=\"delimiter\" placeholder=\"Enter the delimiter\" iconClass=\"fa fa-list\"\n\t\t\t\t\t\t [errors]=\"formsService.formErrors['delimiter']\" note=\"The field delimiter (use \\t=tab, \\n=new line, \\r=carriage return).\">\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input type=\"number\" label=\"Buffer Size\" formControlName=\"bufferSize\" placeholder=\"Enter buffer size\" iconClass=\"fa fa-list\" [errors]=\"formsService.formErrors['bufferSize']\" note=\"The size of the internal buffer that is used when reader or writing data.\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input type=\"number\" label=\"Skip Header Rows Count\" formControlName=\"skipHeaderRows\" placeholder=\"Enter row count\" iconClass=\"fa fa-list\" [errors]=\"formsService.formErrors['skipHeaderRows']\" note=\"The number of rows at the start of the file that will be ignored.\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Has Header Record\" formControlName=\"hasHeaderRecord\" note=\"Tells the reader/writer if there is a header row in the CSV file.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Ignore Header White Space\" formControlName=\"ignoreHeaderWhiteSpace\" note=\"Tells the reader to ignore white space in the headers when matching the columns to the properties by name.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Match to Column to Header\" formControlName=\"matchHeaderRecord\" note=\"Tells the reader to use the column heading name to load the data.  If unchecked, columns will be read into fields in the order specified in the table columns.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Set White Space Cells to Null \" formControlName=\"setWhiteSpaceCellsToNull\" note=\"Set empty cells or cells containing only white spaces to null.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Allow Comments\" formControlName=\"allowComments\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t\t<div *ngIf=\"formsService.currentForm.controls.allowComments.value\">\n\t\t\t\t\t\t\t<form-input label=\"Comment\" formControlName=\"comment\" placeholder=\"Enter comment character\" iconClass=\"fa fa-list\"\n\t\t\t\t\t\t\t note=\"The value used to denote a line that is commented out.\" [errors]=\"formsService.formErrors['comment']\">\n\t\t\t\t\t\t\t</form-input>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Ignore Quotes\" formControlName=\"ignoreQuotes\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t\t<div *ngIf=\"!formsService.currentForm.controls.ignoreQuotes.value\">\n\t\t\t\t\t\t\t<form-input label=\"Quote\" formControlName=\"quote\" placeholder=\"Enter the quote\" [maxlength]=\"1\" iconClass=\"fa fa-list\"\n\t\t\t\t\t\t\t [errors]=\"formsService.formErrors['quote']\" note=\"The value used to escape fields that contain a delimiter, quote, or line ending.\">\n\t\t\t\t\t\t\t</form-input>\n\t\t\t\t\t\t</div>\t\t\t\t\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Quote All Fields\" formControlName=\"quoteAllFields\" note=\"Tells the writer whether all fields written should have quotes around them; regardless if the field contains anything that should be escaped.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Quote No Fields\" formControlName=\"quoteNoFields\" note=\"Tells the writer whether all fields written should not have quotes around them; regardless if the field contains anything that should be escaped.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Trim Fields\" formControlName=\"trimFields\" note=\"Tells the reader to trim whitespace from the beginning and ending of the field value when reading.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Trim Headers\" formControlName=\"trimHeaders\" note=\"Tells the reader to ignore white space from the beginning and ending of the headers when matching the columns to the properties by name.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Detect Column Count Changes\" formControlName=\"detectColumnCountChanges\" note=\"Check for changes in the number of column from row to row.  If true, the job will abend.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Ignore Reading Exceptions\" formControlName=\"ignoreReadingExceptions\" note=\"Tells the reader to ignore any issues when parsing the file.  Issues mean the file is bad in some way, and the parser isn't able to recover.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Will Abend On Missing Field\" formControlName=\"willThrowOnMissingField\" note=\"Indicates if the job should be abended if reading and an expected field is missing.\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Skip Empty Records\" formControlName=\"skipEmptyRecords\" note=\"Tells the reader a record should be skipped when reading if it's empty. A record is considered empty if all fields are empty.\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t</fieldset>\n\t\t</form>\n \n\t</d-widget>\n\t\n\t<dexih-help class=\"m-3\" title=\"File Formats\" path=\"/assets/help/reference/fileFormat.md\"></dexih-help>\n</div>\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { HubCache } from '../../hub.models';\nimport { DexihFileFormat, DexihHub, eSharedObjectType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'fileFormats',\n    templateUrl: './fileFormat-index.component.html',\n    styles: []\n})\nexport class FileFormatIndexComponent implements OnInit, OnDestroy {\n    @Input() public hubKey: number;\n\n    private _subscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n\n    hubCache: HubCache;\n\n    fileFormats: Array<DexihFileFormat>;\n    public eSharedObjectType = eSharedObjectType;\n\n    columns = [\n        { name: 'name', title: 'Name', footer: 'description', format: 'Md', tags: 'tags' },\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        // watch for any changes in the validations.\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n\n                this.updateFileFormats();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'File Format Index');\n        }\n\n\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    deleteFileFormats(fileFormats: Array<DexihFileFormat>) {\n        this.hubService.deleteFileFormats(fileFormats);\n    }\n\n    updateFileFormats() {\n        if (this.hubCache && this.hubCache.isLoaded()) {\n            let fileFormats = this.hubCache.hub.dexihFileFormats.filter(c => c.isValid).map(c => {\n                return {\n                    key: c.key,\n                    name: c.name,\n                    description: c.description,\n                    updateDate: c.updateDate,\n                    tags: this.hubCache.getObjectTags(eSharedObjectType.FileFormat, c.key)\n                }\n            });\n            this._tableData.next(fileFormats);\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    editFileFormat(fileFormat: DexihFileFormat) {\n        this.router.navigate(['fileFormat-edit', fileFormat.key], { relativeTo: this.route });\n    }\n\n    export(items: Array<DexihFileFormat>) {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        items.forEach(item => { this.hubCache.cacheAddFileFormat(item.key, hub); });\n\n        let filename = items.length === 1 ? 'FileFormat - ' + items[0].name + '.json' : 'fileFormats.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    watchChanges() {\n        // watch the current validation in case it is changed in another session.\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n            if (hubCacheChange.changeClass === eSharedObjectType.FileFormat ||\n                hubCacheChange.changeClass === eSharedObjectType.TagObjects) {\n                this.updateFileFormats();\n            }\n        });\n    }\n}\n","<div class=\"container-fluid\">\n\t<d-widget title=\"File Formats\" iconClass=\"fa fa-lg fa-fw fa-file-text-o\" [showCloseButton]=\"true\"\n\t\t(close)=\"close()\">\n\n\t\t<d-table \n\t\t[enableMultiSelect]=\"true\" \n\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t[columns]=\"columns\" \n\t\t[dataObservable]=\"tableData\"\n\t\t(rowClick)=\"editFileFormat($event)\" \n\t\t[tags]=\"this.hubCache.hub.dexihTags\">\n\t\t\t\n\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t<d-button-new *ngIf=\"hubCache.canWrite\" class=\"mr-1\" [routerLink]=\"['fileFormat-new']\"\n\t\t\t\t\ttitle=\"Create a new file format\"></d-button-new>\n\t\t\t</ng-template>\n\n\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-fileFormat=\"item\">\n\t\t\t\t<actions-fileFormat-button [fileFormat]=\"fileFormat\" class=\"mr-1\"></actions-fileFormat-button>\n\t\t\t</ng-template>\n\n\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t<d-button-save-local class=\"mr-1\" (click)=\"export(items)\"></d-button-save-local>\n\t\t\t\t<d-button-delete *ngIf=\"hubCache.canWrite\" (click)=\"deleteFileFormats(items)\"\n\t\t\t\t\ttitle=\"Delete selected file formats\"></d-button-delete>\n\t\t\t\t<tags-update-button class=\"ml-1\" [objectType]=\"eSharedObjectType.FileFormat\" [objects]=\"items\">\n\t\t\t\t</tags-update-button>\n\t\t\t</ng-template>\n\n\n\t\t</d-table>\n\n\t</d-widget>\n\n\t<dexih-help class=\"m-3\" title=\"File Formats\" path=\"/assets/help/reference/fileFormat.md\"></dexih-help>\n\n</div>","export * from './fileFormat-index/fileFormat-index.component';\nexport * from './fileFormat-edit/fileFormat-edit.component';\n","<div id=\"content\">\n    <section *ngIf=\"!hubCache || (hubCache.status != eCacheStatus.Loaded && hubCache.status != eCacheStatus.Error)\">\n        <div class=\"dexih-loader-container\">\n            <div class=\"dexih-loader\"></div>\n            <div class=\"dexih-loader-text\">Loading the hub ...</div>\n        </div>\n    </section>\n\n    <div *ngIf=\"hubCache && hubCache.status == eCacheStatus.Loaded\">\n        <section *ngIf=\"hubCache.hubPermission === ePermission.FullReader\">\n            <div class=\"alert alert-info m-3\">\n                The current user has readonly access to this hub.\n            </div>\n        </section>\n\n        <section *ngIf=\"hubCache.hubPermission === ePermission.PublishReader\">\n            <div class=\"alert alert-info m-3\">\n                The current user only has access to shared items in this hub.\n            </div>\n        </section>\n    \n        <section *ngIf=\"openDelay && webSocketStatus != 'Connected'\">\n            <div class=\"alert alert-danger m-3\">\n                {{webSocketStatus}}.\n            </div>\n        </section>\n        \n        <section *ngIf=\"hubCache && hubCache.status == eCacheStatus.Error\">\n            <div class=\"alert alert-danger m-3\">\n                There was an error encountered when loading the hub.\n            </div>\n        </section>\n\n        <div *ngIf=\"hubCache && hubCache.status == eCacheStatus.Loaded\">\n            <section *ngIf=\"(openDelay && webSocketStatus != 'Connected') && !remoteAgent\">\n                <div class=\"alert alert-danger m-3\">\n                    Warning: There is no remote agent connected.  A remote agent is required for any data access and processing.\n                    <hr>\n                    <d-button buttonClass=\"btn btn-sm btn-primary text-white\" iconClass=\"fa fa-wrench\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary/agents\" text=\"Configure Agent\"></d-button>\n                    <d-button-refresh class=\"ml-1\" buttonClass=\"btn btn-sm btn-primary text-white\" (click)=\"refresh()\"></d-button-refresh>\n                </div>\n            </section>\n        </div>\n\n    </div>\n    <router-outlet></router-outlet>\n</div>\n\n","import { Component, OnDestroy, OnInit, HostListener } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription, combineLatest} from 'rxjs';\n\nimport { AuthService } from '../+auth/auth.service';\nimport { HubCache, eCacheStatus } from './hub.models';\nimport { HubService } from './hub.service';\nimport { DexihHub, DexihActiveAgent, ePermission } from '../shared/shared.models';\nimport { first, filter, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'dexih-hub',\n    templateUrl: './hub.component.html'\n})\nexport class HubComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n    private _hubCacheSubscription: Subscription;\n    private _remoteAgentSubscription: Subscription;\n    private _webSocketSubscription: Subscription;\n\n    public hubCache: HubCache;\n\n    hubKey: number;\n    hub: DexihHub;\n    remoteAgent: DexihActiveAgent;\n\n    eCacheStatus = eCacheStatus;\n    ePermission = ePermission;\n\n    webSocketStatus: string;\n    openDelay = false; // used to pause the websocket error message displaying whilst a connect attempt occurs.\n\n    constructor(private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(hubCache => {\n            this.hubCache = hubCache;\n        });\n\n        this._webSocketSubscription = this.authService.getWebSocketStatusObservable().subscribe(webSocketStatus => {\n            this.webSocketStatus = webSocketStatus;\n        });\n\n        this._remoteAgentSubscription = this.hubService.getRemoteAgentObservable().subscribe(remoteAgent => {\n            this.remoteAgent = remoteAgent;\n        })\n\n        try {\n            this._subscription = combineLatest(\n                this.route.params,\n                this.authService.getUserObservable()\n            ).subscribe(async result => {\n                let params = result[0];\n                let user = result[1];\n\n                if (!user) {\n                    return;\n                }\n\n                this.hubKey = + params['hubKey'];\n\n                if (this.hubKey > 0) {\n                    await this.hubService.updateHub(this.hubKey, 'Loading...');\n                } else {\n                    this.router.navigate(['/hubs']);\n                }\n\n                if (this.hubCache.hub != null) {\n                    this.hubKey = this.hubCache.hub.hubKey;\n                    this.hub = this.hubCache.hub;\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Hub Component');\n        }\n\n        setTimeout(() => {\n            this.openDelay = true;\n        }, 5000);\n\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n        if (this._remoteAgentSubscription) { this._remoteAgentSubscription.unsubscribe(); }\n        if (this._webSocketSubscription) { this._webSocketSubscription.unsubscribe(); }\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    refresh() {\n        this.authService.pingRemoteAgents();\n    }\n\n    @HostListener('window:focus', ['$event'])\n    onFocus(): void {\n        this.openDelay = false;\n        setTimeout(() => {\n            this.openDelay = true;\n        }, 5000);\n    }\n}\n","import { Injectable, OnDestroy, OnInit, EventEmitter } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators, AsyncValidatorFn, ValidationErrors } from '@angular/forms';\nimport { BehaviorSubject, Observable, Subscription, combineLatest} from 'rxjs';\n\nimport { AuthService } from '../+auth/auth.service';\nimport { eLogLevel, LogFactory } from '../../logging';\nimport { InputOutputColumns } from './hub.lineage.models';\nimport {\n  HubCache,\n  eMappingStatus,\n  sharedObjectProperties,\n  SharedObjectProperty,\n  DexihInputParameter,\n  DataCache,\n} from './hub.models';\nimport { HubService } from './hub.service';\nimport { eImportAction, Import, DexihConnection, DexihTable, DexihTableColumn, eTypeCode,\n   DexihFileFormat, DexihView, DexihDashboard, DexihDashboardItem, DexihApi, DexihColumnValidation,\n   DexihCustomFunction, DexihCustomFunctionParameter, DexihHubVariable, DexihDatalinkTest,\n   DexihDatalinkTestStep, DexihDatalinkTestTable, DexihTrigger, DexihDatalinkStep, DexihDatalinkDependency,\n   DexihDatalinkStepColumn, DexihDatajob, DexihRemoteAgentHub, DexihDatalink, DexihDatalinkColumn,\n   DexihDatalinkTransform, DexihDatalinkTransformItem, DexihFunctionParameter, DexihFunctionArrayParameter,\n   DexihDatalinkProfile, DexihDatalinkTarget, DexihDatalinkTable,\n   eSourceType, eSharedObjectType, DexihListOfValues, InputParameterBase,\n   eDataObjectType, ListOfValuesItem, eTransformItemType, DexihTag, DexihViewParameter } from '../shared/shared.models';\nimport { filter, debounceTime } from 'rxjs/operators';\n\n@Injectable()\nexport class HubFormsService implements OnDestroy {\n  private hubCache: HubCache;\n\n  private _hubCacheSubscription: Subscription;\n  private _hubCacheChangeSubscription: Subscription;\n  private _valueChangesSubscription: Subscription;\n\n  private _connectionChangesSubscription1: Subscription;\n  private _connectionChangesSubscription2: Subscription;\n  private _connectionChangesSubscription3: Subscription;\n  private _tableChangesSubscription1: Subscription;\n  private _tableChangesSubscription2: Subscription;\n  private _tableColumnChangesSubscription1: Subscription;\n  private _tableColumnChangesSubscription2: Subscription;\n  private _tableColumnChangesSubscription3: Subscription;\n  private _datalinkChangesSubscription1: Subscription;\n  private _datalinkChangesSubscription2: Subscription;\n  private _datalinkChangesSubscription3: Subscription;\n  private _datalinkTestChangesSubscription: Subscription;\n  private _genericParameterSubscription: Subscription;\n  private _datalinkTargetChanges: Subscription[] = [];\n  private _parameterChanges: Subscription[] = [];\n\n  public currentForm: FormGroup;\n  private _currentFormObservable = new BehaviorSubject<FormGroup>(null);\n  public formErrors: any = {};\n  public hasChanged = false;\n  public formSaving = false;\n  public showAllErrors = false;\n  public IgnoreFormChange = false;\n  private ignoreHubCacheChange = false; // used to avoid recursive loop in the hubCacheChange subscription.\n  private formChangeCount = 0;\n\n  private updateDate: Date;\n\n  private saveMethod: string;\n  private property: SharedObjectProperty;\n  private formGroupFunc: (item) => void\n  private valueMethod: string;\n\n  private logger = new LogFactory('hub.forms.service');\n\n  validationMessages = {\n    'required': 'A value is required.',\n    'duplicateName': 'The value is already being used.',\n    'dataType': 'The data types are inconsistent.',\n    'invalidClass': 'The function method could not be found'\n  };\n\n  validationFieldMessages = {\n\n  };\n\n  constructor(\n    private fb: FormBuilder,\n    private hubService: HubService,\n    private authService: AuthService,\n\n  ) {\n    this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(hubCache => {\n      this.hubCache = hubCache\n    });\n  }\n\n  ngOnDestroy() {\n    this.clearFormSubscriptions();\n\n    this.currentForm = null;\n    this.updateDate = null;\n    this.formErrors = {};\n    this.hasChanged = false;\n    this.formSaving = false;\n    this.showAllErrors = false;\n    this.IgnoreFormChange = false;\n    // this.ignoreHubCacheChange = false; // used to avoid recursive loop in the hubCacheChange subscription.\n    this.formChangeCount = 0;\n  }\n\n  clearFormSubscriptions() {\n    this.logger.LogC(() => `clearFormSubscriptions started`, eLogLevel.Trace);\n    if (this._valueChangesSubscription) { this._valueChangesSubscription.unsubscribe(); }\n    // if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n    if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n    if (this._connectionChangesSubscription1) { this._connectionChangesSubscription1.unsubscribe(); }\n    if (this._connectionChangesSubscription2) { this._connectionChangesSubscription2.unsubscribe(); }\n    if (this._connectionChangesSubscription3) { this._connectionChangesSubscription3.unsubscribe(); }\n    if (this._tableChangesSubscription1) { this._tableChangesSubscription1.unsubscribe(); }\n    if (this._tableChangesSubscription2) { this._tableChangesSubscription2.unsubscribe(); }\n    if (this._tableColumnChangesSubscription1) { this._tableColumnChangesSubscription1.unsubscribe(); }\n    if (this._tableColumnChangesSubscription2) { this._tableColumnChangesSubscription2.unsubscribe(); }\n    if (this._tableColumnChangesSubscription3) { this._tableColumnChangesSubscription3.unsubscribe(); }\n    if (this._datalinkChangesSubscription1) { this._datalinkChangesSubscription1.unsubscribe(); }\n    if (this._datalinkChangesSubscription2) { this._datalinkChangesSubscription2.unsubscribe(); }\n    if (this._datalinkChangesSubscription3) { this._datalinkChangesSubscription3.unsubscribe(); }\n    if (this._datalinkTestChangesSubscription) { this._datalinkTestChangesSubscription.unsubscribe(); }\n    if (this._genericParameterSubscription) { this._genericParameterSubscription.unsubscribe(); }\n    this._datalinkTargetChanges.forEach(c => c.unsubscribe());\n    this._parameterChanges.forEach(c => c.unsubscribe());\n  }\n\n  private addMissing(item: any, form: FormGroup, itemTemplate: any, excludeKeys: string[] = []) {\n    if (!item) { return; }\n\n    let keys = Object.keys(itemTemplate);\n    let existingKeys = Object.keys(form.controls);\n    keys.forEach(key => {\n      if ((excludeKeys.findIndex(c => c === key) === -1)\n        && existingKeys.findIndex(c => c === key) === -1) {\n        let control = new FormControl(key);\n        let value = item[key];\n        if (typeof value === 'undefined') {\n          value = null;\n        }\n        control.setValue(value);\n        form.addControl(key, control);\n      }\n    });\n\n    this.updateDate = item['updateDate'];\n  }\n\n  public startForm(form: FormGroup) {\n    this.logger.LogC(() => `startForm started`, eLogLevel.Trace);\n\n    if (form) {\n      if (this._valueChangesSubscription) { this._valueChangesSubscription.unsubscribe(); }\n      this._valueChangesSubscription = form.valueChanges.subscribe(data => {\n        this.onValueChanged(data)\n      });\n\n      this.onValueChanged(); // (re)set validation messages now\n    }\n\n    this.currentForm = form;\n    this._currentFormObservable.next(form);\n\n    this.hasChanged = false;\n\n    this.logger.LogC(() => `startForm finished`, eLogLevel.Trace);\n  }\n\n  public getCurrentFormObservable(): Observable<FormGroup> {\n    return this._currentFormObservable.asObservable();\n  }\n\n  // re-create any error messages whenever the form changes.\n  private onValueChanged(data?: any) {\n    if (this.IgnoreFormChange === false) {\n\n      this.logger.LogC(() => `onValueChanged started.  Counter = ${this.formChangeCount++}`, eLogLevel.Trace);\n\n      if (!this.currentForm || !this.currentForm.value) { return; }\n      const form = this.currentForm;\n\n      this.hasChanged = true;\n      this.formErrors = this.getFormErrorMessages(form, this.showAllErrors);\n\n      this.logger.LogC(() => `onValueChanged completed`, eLogLevel.Trace);\n    }\n  }\n\n  public markAsChanged() {\n    if (!this.currentForm || !this.currentForm.value) { return; }\n\n    this.hasChanged = true;\n    this.currentForm.markAsDirty();\n  }\n\n  public showErrors() {\n    this.showAllErrors = true;\n    this.onValueChanged();\n  }\n\n  // returns an object containing any error message for controls contained within the specified form.\n  public getFormErrorMessages(form: FormGroup, showAllErrors: boolean): {} {\n    let formErrors = {};\n\n    if (!form.controls) { return ''; }\n\n    for (const field of Object.keys(form.controls)) {\n      // clear previous error message (if any)\n      formErrors[field] = '';\n      const control = form.get(field);\n\n      // if the control is dirty or flag is set to show all errors.\n      if (control && (control.dirty || showAllErrors)) {\n        if (!control.valid) {\n          if (control instanceof FormArray) {\n\n          } else {\n            const messages = this.validationFieldMessages[field];\n            if (control && control.errors) {\n              for (const key of Object.keys(control.errors)) {\n                if (messages && messages[key]) {\n                  formErrors[field] += messages[key] + ' ';\n                } else if (this.validationMessages[key]) {\n                  formErrors[field] += this.validationMessages[key] + ' ';\n                } else {\n                  let message = this.createErrorMessage(key, control);\n                  formErrors[field] += message + ' ';\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return formErrors;\n  }\n\n  public getErrorMessage(control: AbstractControl): string {\n    if (control && control.errors) {\n      let errorMessage = '';\n\n      for (const key of Object.keys(control.errors)) {\n        if (this.validationMessages[key]) {\n          errorMessage += this.validationMessages[key] + ' ';\n        } else {\n          errorMessage = this.createErrorMessage(key, control);\n        }\n      }\n      return errorMessage;\n    } else {\n      return '';\n    }\n  }\n\n  private createErrorMessage(key: string, control: AbstractControl): string {\n    let message = '';\n    switch (key) {\n      case 'minlength':\n        message = 'Value is ' +\n          control.errors.minlength.actualLength +\n          ' characters long, required minimum length is '\n          + control.errors.minlength.requiredLength + ' characters.';\n        break;\n      case 'maxlength':\n        message = 'Value is ' +\n          control.errors.maxlength.actualLength +\n          ' characters long, required maximum length is '\n          + control.errors.maxlength.requiredLength + ' characters.';\n        break;\n      case 'maxvalue':\n        message = 'Value is ' +\n          control.value +\n          ' required maximum is '\n          + control.errors.maxvalue.required + '.';\n        break;\n      case 'minvalue':\n        message = 'Value is ' +\n          control.value +\n          ' required minimum is '\n          + control.errors.minvalue.required + '.';\n        break;\n      default:\n        message = 'Field error: ' + key;\n    }\n    return message;\n\n  }\n\n  watchChanges(changeClass: eSharedObjectType, keyField: string, description: string, formGroupFunc: (item) => void) {\n    if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n    // if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n\n    if (this.formSaving) {\n      return;\n    }\n\n    // watch the current form in case it is changed in another session.\n    this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n      if (!this.ignoreHubCacheChange) {\n        this.ignoreHubCacheChange = true;\n        if (hubCacheChange.changeClass === changeClass &&\n          hubCacheChange.data && hubCacheChange.data[keyField] === this.currentForm.value[keyField]) {\n          switch (hubCacheChange.changeType) {\n            case eImportAction.Replace:\n              if (this.currentForm.pristine) {\n                let item = Object.assign({}, hubCacheChange.data);\n                formGroupFunc.call(this, item);\n              } else {\n                this.authService.confirmDialog('The ' + description + ' has changed',\n                  'Another session has updated this ' +\n                  description + ', would you like to discard any changes in this session and update with the new version?')\n                  .then(confirm => {\n                    if (confirm) {\n                      let item = Object.assign({}, hubCacheChange.data);\n                      this.ngOnDestroy() // clear old subscriptions\n                      formGroupFunc.call(this, item);\n                    }\n                  }).catch(reason => {\n\n                  });\n              }\n              break;\n            case eImportAction.Delete:\n              this.authService.confirmDialog('The ' + description + ' has been deleted',\n                'Another session has deleted this ' + description + ', would you like to discard current changes?')\n                .then(confirm => {\n                  if (confirm) {\n                    this.authService.navigateUp();\n                  }\n                }).catch(reason => {\n\n              });\n          }\n        }\n        this.ignoreHubCacheChange = false;\n      }\n    });\n\n    // this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(hubCache => {\n    //   if (!this.currentForm) { return; }\n\n    //   this.hubCache = hubCache;\n\n    //   let item = hubCache.getCacheItem(changeClass, this.currentForm.value[keyField]);\n\n    //   if (item) {\n    //     // if the version from the cache was updated more recently than current version, prompt user.\n    //     if (this.updateDate && this.updateDate < item.updateDate) {\n    //       this.authService.confirmDialog('The ' + description + ' has changed',\n    //         'This is likely due to a another session changing the ' +\n    //         description + ' whilst this session was disconnected.  ' +\n//         'Would you like to discard the changes and reload the newer version from the server (otherwise this will be created a a copy)?')\n    //         .then(confirm => {\n    //           if (confirm) {\n    //             let newItem = Object.assign({}, item);\n    //             this.ngOnDestroy() // clear old subscriptions\n    //             formGroupFunc.call(this, newItem);\n    //           }\n    //         }).catch(reason => {\n    //           this.currentForm.controls[keyField].setValue(0);\n    //         });\n    //     }\n    //   }\n    // });\n  }\n\n  public async save(navigateUp = false, saveAs = false) {\n    try {\n      if (!saveAs && (this.formSaving || !this.hasChanged)) {\n        return;\n      }\n\n      // if (!this.currentForm.valid) {\n      //   this.showAllErrors = true;\n      //   this.onValueChanged();\n\n      //   let confirm = await this.authService.confirmDialog('There are errors!',\n      //     'There are errors in the current form.  Confirm that would like to save the changes anyhow?');\n      //   if (!confirm) {\n      //     return;\n      //   }\n      // }\n\n      this.formSaving = true;\n\n      let value;\n      if (this.valueMethod) {\n        value = this[this.valueMethod]()\n      } else {\n        value = this.currentForm.getRawValue();\n      }\n\n      if (saveAs) {\n        let name = value.name;\n        while (this.hubCache.hub[this.property.cacheProperty].find(c => c.name === name)) {\n          name = await this.authService.promptDialog('Specify a new name',\n            // tslint:disable-next-line:max-line-length\n            `The name ${name} already exists.  Specify a new name for the ${this.property.displayName} and then select ok to save this as a copy.`,\n            '', name + ' 2');\n\n          if (!name) {\n            return;\n          }\n        }\n\n        value.name = name;\n        value.key = 0;\n      }\n\n      this.ignoreHubCacheChange = true;\n\n      const currentStatus =  value.currentStatus;\n      const entityStatus = value.entityStatus;\n      const previousStatus = value.previousStatus;\n      const runTime = value.runTime;\n\n      // remove status as they will not parse into json.\n      value.currentStatus = null;\n      value.entityStatus = null;\n      value.previousStatus = null;\n      value.runTime = null;\n\n      let result = await this.authService.post('/api/Hub/' + this.saveMethod, {\n        hubKey: this.hubCache.hub.hubKey,\n        value: value\n      }, 'Saving...');\n\n      let import1 = new Import();\n      import1[this.property.property] = [{ importAction: eImportAction.New, item: result }];\n      this.hubService.updateHubChange(import1);\n\n      if (this.formGroupFunc) {\n        // this.ignoreHubCacheChange = true;\n        this.formGroupFunc(result);\n\n        if (this.currentForm.controls.currentStatus) { this.currentForm.controls.currentStatus.setValue(currentStatus); }\n        if (this.currentForm.controls.entityStatus) { this.currentForm.controls.entityStatus.setValue(entityStatus); }\n        if (this.currentForm.controls.previousStatus) { this.currentForm.controls.previousStatus.setValue(previousStatus); }\n        if (this.currentForm.controls.runTime) { this.currentForm.controls.runTime.setValue(runTime); }\n        this.ignoreHubCacheChange = false;\n      }\n\n      this.formSaving = false;\n      this.hasChanged = false;\n\n      if (navigateUp) {\n        this.authService.navigateUp();\n      } else {\n        this.hubService.addHubSuccessMessage('The save operation completed.');\n      }\n    } catch (error) {\n      if (error) {\n        this.hubService.addHubMessage(error);\n        this.currentForm.markAsDirty();\n      }\n    } finally {\n      this.formSaving = false;\n    }\n  }\n\n  public saveLocal() {\n    let value;\n    if (this.valueMethod) {\n      value = this[this.valueMethod]()\n    } else {\n      value = this.currentForm.getRawValue();\n    }\n\n    const cache = this.hubCache;\n    const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n\n    if (this.property.cacheGetMethod) {\n      cache[this.property.cacheGetMethod](value, hub);\n    }\n\n    hub[this.property.cacheProperty].push(value);\n    let filename = this.property.displayName + '-' + value.name + '.json';\n    this.hubService.exportHub(hub, filename);\n  }\n\n  cancel() {\n    if (!this.formSaving) {\n      this.authService.navigateUp();\n    }\n  }\n\n  public getFormErrors(): string {\n    const form = this.currentForm;\n    return this.getFormErrorsRecursive(this.currentForm, 0, 0);\n  }\n\n  private getFormErrorsRecursive(form: FormGroup, depth: number, index: number): string {\n    let message = '';\n\n    for (const field of Object.keys(form.controls)) {\n      const control = form.get(field);\n\n      // if the control is dirty or flag is set to show all errors.\n      if (control && !control.valid) {\n        message += ' '.repeat(depth * 3) + `The control ${field} at position ${index} has the following error(s):<p></p>`;\n        if (control instanceof FormArray) {\n          const formArray = <FormArray>control;\n          formArray.controls.forEach((cont, formIndex) => {\n            message += this.getFormErrorsRecursive(<FormGroup>cont, depth + 1, formIndex);\n          });\n        } else if (control instanceof FormGroup) {\n          message += this.getFormErrorsRecursive(<FormGroup>control, depth + 1, 0);\n        } else {\n          for (const key of Object.keys(control.errors)) {\n            message += ' '.repeat(depth * 3 + 1) + key + ':' + this.createErrorMessage(key, control) + '<p></p>';\n          }\n        }\n      }\n    }\n\n    return message;\n  }\n\n  private stringCompare(value1: string, value2: string): boolean {\n    if (!value1 && !value2) {\n      return true;\n    }\n    if (!value1 || !value2) {\n      return false;\n    }\n\n    return value1.trim().toLowerCase() === value2.trim().toLowerCase();\n  }\n\n  public parameter(parameter: InputParameterBase): FormGroup {\n    let runTime = {showRefresh: parameter.listOfValuesKey > 0, isRefreshing: false, items: []};\n    if (parameter.value) {\n      if (parameter.rank === 0 && parameter.listOfValuesKey > 0) {\n        runTime.items = [{key: parameter.value, name: parameter.valueDesc}];\n      }\n    }\n\n    const form = this.fb.group({\n      'name': [{value: parameter.name, disabled: parameter['datalinkParameterKey'] > 0 }, [\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(50),\n      ]],\n      'runTime': [runTime],\n      'datalinkParameterKey': parameter['datalinkParameterKey'] // used specifically for view\n    }\n    );\n\n    this.addMissing(parameter, form, new InputParameterBase());\n\n    let subscription = form.controls.listOfValuesKey.valueChanges.subscribe(value => {\n        form.controls.runTime.setValue({showRefresh: form.controls.listOfValuesKey.value > 0, isRefreshing: false, items: []});\n    });\n    this._parameterChanges.push(subscription);\n\n    let subscription2 = form.controls.rank.valueChanges.subscribe(rank => {\n      let value = form.controls.value.value;\n        if (rank === 0) {\n          if (value && Array.isArray(value)) {\n            if (value.length === 0) {\n              form.controls.value.setValue(null);\n              form.controls.valueDesc.setValue(value[0]);\n            } else {\n              form.controls.value.setValue(value[0]);\n              form.controls.valueDesc.setValue(value[0]);\n            }\n          }\n        }\n\n        if (rank === 1) {\n          if (value && !Array.isArray(value)) {\n            form.controls.value.setValue(null);\n          }\n        }\n      });\n    this._parameterChanges.push(subscription2);\n\n    return form;\n  }\n\n  public connection(connection: DexihConnection) {\n    this.logger.LogC(() => `connection`, eLogLevel.Trace);\n\n    const connectionForm = this.fb.group({\n      'name': [connection.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateConnectionNameValidator()\n      ]],\n      'connectionStringDisplay': [connection.connectionString ? '(Connection string hidden)' : '', [\n      ]],\n      'passwordDisplay': [connection.password ? '**************************' : '', [\n      ]],\n      'connectionStringRaw': ['', [\n      ]],\n      'passwordRaw': ['', [\n      ]],\n    }, { validators: [this.requiredConnectionFields()] }\n    );\n\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.Connection);\n    this.saveMethod = 'SaveConnection';\n    this.formGroupFunc = this.connection;\n    this.addMissing(connection, connectionForm, new DexihConnection());\n\n    this.clearFormSubscriptions();\n\n    // whenever the passwordDisplay or connectionStringDisplay changes, write the value to the raw\n    // this allows encrypted values to be loaded, then overwritten when use changes.\n    if (this._connectionChangesSubscription1) { this._connectionChangesSubscription1.unsubscribe(); }\n    this._connectionChangesSubscription1 = connectionForm.controls.passwordDisplay.valueChanges.subscribe(value => {\n      connectionForm.controls.passwordRaw.setValue(value);\n    });\n\n    if (this._connectionChangesSubscription2) { this._connectionChangesSubscription2.unsubscribe(); }\n    this._connectionChangesSubscription2 = connectionForm.controls.connectionStringDisplay.valueChanges.subscribe(value => {\n      connectionForm.controls.connectionStringRaw.setValue(value);\n    });\n\n    this.startForm(connectionForm);\n    this.watchChanges(eSharedObjectType.Connection, 'key', 'Connection', this.connection);\n\n    this.logger.LogC(() => `connection finished`, eLogLevel.Trace);\n  }\n\n  private duplicateConnectionNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihConnections.findIndex(c =>\n          c.key !== this.currentForm.value.key && c.isValid && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  requiredConnectionFields(): ValidatorFn {\n    return (group: FormGroup): { [key: string]: any } => {\n      if (this.currentForm) {\n        const useConnectionString = group.controls['useConnectionString'];\n        const connectionStringDisplay = group.controls['connectionStringDisplay'];\n        const server = group.controls['server'];\n\n        if (!useConnectionString || !connectionStringDisplay || !server) {\n          return;\n        }\n\n        connectionStringDisplay.setErrors(null);\n        server.setErrors(null);\n\n        // if use connection string is selected, connectionString is required.\n        if (useConnectionString.value && !connectionStringDisplay.value) {\n          connectionStringDisplay.setErrors({ 'required': true });\n        }\n\n        // use not connection string, server is required.\n        if (!useConnectionString.value) {\n          if (!server.value) {\n            server.setErrors({ 'required': true });\n          }\n        }\n        return;\n      }\n    };\n  }\n\n  public table(table: DexihTable) {\n    this.clearFormSubscriptions();\n    const tableForm = this.tableForm(table);\n\n    this.formGroupFunc = this.table;\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.Table);\n    this.saveMethod = 'SaveTable';\n    this.watchChanges(eSharedObjectType.Table, 'tableKey', 'table', this.table);\n    this.startForm(tableForm);\n  }\n\n  public tableForm(table: DexihTable): FormGroup {\n    const tableForm = this.fb.group({\n      'name': [table.name, [\n        Validators.required,\n        Validators.maxLength(250),\n        this.duplicateTableNameValidator()\n      ]],\n      'connectionKey': [table.connectionKey, [\n        Validators.required\n      ]],\n      'logicalName': [table.logicalName, [\n        Validators.required,\n        Validators.maxLength(250)\n      ]],\n      'useLogical': [this.hubCache.defaultTableLogicalName(table.schema, table.name) !== table.logicalName, [\n      ]],\n      'dexihTableColumns': this.fb.array([]),\n    }, { validator: this.requiredTableFields() }\n    );\n\n    let tableColumnsForm = <FormArray>tableForm.controls.dexihTableColumns;\n    table.dexihTableColumns.filter(c => c.isValid).forEach(column => {\n      tableColumnsForm.push(this.tableColumn(tableColumnsForm.value, column));\n    });\n\n    if (this._tableChangesSubscription1) { this._tableChangesSubscription1.unsubscribe(); }\n    this._tableChangesSubscription1 = tableForm.controls.useLogical.valueChanges.subscribe(value => {\n      if (!tableForm.controls.useLogical.value) {\n        tableForm.controls.logicalName.setValue(\n          this.hubCache.defaultTableLogicalName(tableForm.controls.schema.value, tableForm.controls.name.value));\n      }\n    });\n\n    if (this._tableChangesSubscription2) { this._tableChangesSubscription2.unsubscribe(); }\n    this._tableChangesSubscription2 = tableForm.controls.name.valueChanges.subscribe(value => {\n      if (!tableForm.controls.useLogical.value) {\n        tableForm.controls.logicalName.setValue(\n          this.hubCache.defaultTableLogicalName(tableForm.controls.schema.value, tableForm.controls.name.value));\n      }\n    });\n\n    this.addMissing(table, tableForm, new DexihTable());\n\n    return tableForm;\n  }\n\n  private duplicateTableNameValidator(): ValidatorFn {\n    // validate no matching tables names in the same connection.\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n\n        const no = this.hubCache.hub.dexihTables\n        .find(c => c.key !== this.currentForm.controls.key.value &&\n            c.isValid && this.stringCompare(c.name, name) && c.connectionKey === this.currentForm.value.connectionKey);\n          return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  requiredTableFields(): ValidatorFn {\n    return (group: FormGroup): { [key: string]: any } => {\n      if (this.currentForm) {\n        const useConnectionString = group.controls['useConnectionString'];\n        const connectionStringDisplay = group.controls['connectionStringDisplay'];\n        const server = group.controls['server'];\n\n        if (!useConnectionString || !connectionStringDisplay || !server) {\n          return;\n        }\n\n        connectionStringDisplay.setErrors(null);\n        server.setErrors(null);\n\n        // if use connection string is selected, connectionString is required.\n        if (useConnectionString.value && !connectionStringDisplay.value) {\n          connectionStringDisplay.setErrors({ 'required': true });\n        }\n\n        // use not connection string, server is required.\n        if (!useConnectionString.value) {\n          if (!server.value) {\n            server.setErrors({ 'required': true });\n          }\n        }\n        return;\n      }\n    };\n  }\n\n\n  tableColumn(siblingColumns: DexihTableColumn[], column: DexihTableColumn): FormGroup {\n    let childColumns = column.childColumns ? column.childColumns : [];\n    let columnForm = this.fb.group({\n      'name': [column.name, [\n        Validators.required,\n        Validators.maxLength(250),\n        this.duplicateTableColumnNameValidator(siblingColumns)\n      ]],\n      'logicalName': [column.logicalName, [\n        Validators.required,\n        Validators.maxLength(250)\n      ]],\n      'precision': [column.precision, [\n        this.columnMinRangeValidator(0),\n        this.columnMaxRangeValidator(30),\n      ]],\n      'scale': [column.scale, [\n        this.columnMinRangeValidator(0),\n        this.columnMaxRangeValidator(30),\n      ]],\n      'useLogical': [column.name !== column.logicalName, [\n      ]],\n      'isString': [column.dataType === eTypeCode.String || column.dataType === eTypeCode.CharArray ? true : false, [\n      ]],\n      'isNumber': [column.dataType === eTypeCode.Double || column.dataType === eTypeCode.Decimal ||\n        column.dataType === eTypeCode.Single ? true : false, [\n      ]],\n      'childColumns': this.fb.array(childColumns.filter(c => c.isValid).map(col => {\n        return this.tableColumn(childColumns, col);\n      })),\n      'runTime': {impact: eMappingStatus, lineage: eMappingStatus}\n    }\n    );\n\n    this.addMissing(column, columnForm, new DexihTableColumn());\n\n    // update isString and isNumber properties automatically when dataType changes.\n    if (this._tableColumnChangesSubscription1) { this._tableColumnChangesSubscription1.unsubscribe(); }\n    this._tableColumnChangesSubscription1 = columnForm.controls.dataType.valueChanges.subscribe(dataType => {\n      if (dataType === eTypeCode.String || dataType === eTypeCode.CharArray) {\n        columnForm.controls.isString.setValue(true);\n      } else {\n        columnForm.controls.isString.setValue(false);\n      }\n\n      if (dataType === eTypeCode.Double || dataType === eTypeCode.Decimal || dataType === eTypeCode.Single) {\n        columnForm.controls.isNumber.setValue(true);\n      } else {\n        columnForm.controls.isNumber.setValue(false);\n      }\n    });\n\n    // match logical name, unless the logical name is changed.\n    if (this._tableColumnChangesSubscription2) { this._tableColumnChangesSubscription2.unsubscribe(); }\n    this._tableColumnChangesSubscription2 = columnForm.controls.useLogical.valueChanges.subscribe(value => {\n      if (!columnForm.controls.useLogical.value) {\n        columnForm.controls.logicalName.setValue(columnForm.controls.name.value);\n      }\n    });\n\n    if (this._tableColumnChangesSubscription3) { this._tableColumnChangesSubscription3.unsubscribe(); }\n    this._tableColumnChangesSubscription3 = columnForm.controls.name.valueChanges.subscribe(value => {\n      if (!columnForm.controls.useLogical.value) {\n        columnForm.controls.logicalName.setValue(columnForm.controls.name.value);\n      }\n    });\n\n    for (const field of Object.keys(columnForm.controls)) {\n      let control = columnForm.controls[field];\n      if (control.validator) {\n        columnForm.controls[field].updateValueAndValidity();\n      }\n    }\n    return columnForm;\n  }\n\n  private duplicateTableColumnNameValidator(columnsArray: DexihTableColumn[]): ValidatorFn {\n    if (!columnsArray) { return null; }\n\n    // validate no matching tables names in the same connection.\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        if (control.parent) {\n          const key = control.parent.value.key;\n          const columnGroup = control.parent.value.columnGroup;\n          if (columnsArray) {\n            const no = columnsArray.findIndex(c =>\n              c.key !== key &&\n              c.columnGroup === columnGroup &&\n              c.isValid &&\n              this.stringCompare(c.name, name)) >= 0;\n            return no ? { 'duplicateName': { name } } : null;\n          }\n        }\n      }\n    };\n  }\n\n  private requiredNotZero(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      const name = control.value;\n      const value = control.value;\n      const no = !value || value === 0;\n      return no ? { 'required': { name } } : null;\n    }\n  }\n\n  private columnMinRangeValidator(min: number): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      const name = control.value;\n      const column = <FormGroup>control.parent;\n      if (column) {\n        if (column.controls.isNumber.value) {\n          const value = control.value;\n          const no = Number(value) >= min;\n          return no ? null : { 'minvalue': { name, required: min }};\n        } else {\n          return;\n        }\n      }\n    };\n  }\n\n  private columnMaxRangeValidator(max: number): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      const name = control.value;\n      const column = <FormGroup>control.parent;\n      if (column) {\n        if (column.controls.isNumber.value) {\n          const value = control.value;\n          const no = Number(value) <= max;\n          return no ? null : { 'maxvalue': { name , required: max } };\n        } else {\n          return;\n        }\n      }\n    };\n  }\n\n  public fileFormat(fileFormat: DexihFileFormat) {\n    const fileFormatForm = this.fb.group({\n      'name': [fileFormat.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateFileFormatNameValidator()\n      ]],\n      'quote': [fileFormat.quote, [\n        Validators.maxLength(1)\n      ]],\n    }\n    );\n\n    this.formGroupFunc = this.fileFormat;\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.FileFormat);\n    this.saveMethod = 'SaveFileFormat';\n    this.addMissing(fileFormat, fileFormatForm, new DexihFileFormat());\n    this.clearFormSubscriptions();\n    this.watchChanges(eSharedObjectType.FileFormat, 'fileFormatKey', 'file format', this.fileFormat);\n    this.startForm(fileFormatForm);\n  }\n\n  duplicateFileFormatNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihFileFormats.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  public view(view: DexihView) {\n\n    this.clearFormSubscriptions();\n\n    let parameters = view.parameters.filter(c => c.isValid).map(parameter => {\n      return this.parameter(parameter);\n    });\n\n    const viewForm = this.fb.group({\n      'name': [view.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateViewNameValidator()\n      ]],\n      'sourceType': [view.sourceType, [\n        Validators.required,\n      ]],\n      'sourceDatalinkKey': [view.sourceDatalinkKey],\n      'sourceTableKey': [view.sourceTableKey],\n      'parameters': this.fb.array(parameters),\n    }, { validator: this.validateViewSource() }\n    );\n\n    this.formGroupFunc = this.view;\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.View);\n    this.saveMethod = 'SaveView';\n    this.addMissing(view, viewForm, new DexihView());\n    this.watchChanges(eSharedObjectType.View, 'viewKey', 'view', this.view);\n    this.startForm(viewForm);\n  }\n\n  duplicateViewNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihViews.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  private validateViewSource() {\n    return (group: FormGroup) => {\n      let sourceType = group.get('sourceType').value;\n      let sourceTableKey = group.get('sourceTableKey');\n      let sourceDatalinkKey = group.get('sourceDatalinkKey');\n\n      sourceTableKey.setErrors(null);\n      sourceDatalinkKey.setErrors(null);\n\n      if (sourceType === eDataObjectType.Table) {\n        if (!sourceTableKey.value) {\n          return sourceTableKey.setErrors({ required: true });\n        }\n      } else if (sourceType === eDataObjectType.Datalink) {\n        if (!sourceDatalinkKey.value) {\n          return sourceDatalinkKey.setErrors({ required: true });\n        }\n      }\n    };\n  }\n\n  public dashboard(dashboard: DexihDashboard) {\n    this.clearFormSubscriptions();\n\n    let parameters = dashboard.parameters.filter(c => c.isValid).map(parameter => {\n      return this.parameter(parameter);\n    });\n\n\n    const form = this.fb.group({\n      'name': [dashboard.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateDashboardNameValidator()\n      ]],\n      'dexihDashboardItems': this.fb.array([]),\n      'parameters': this.fb.array(parameters),\n      'runTime': {showEdit: false, lock: true},\n    }, { }\n    );\n\n    let dashboardItemsForm = <FormArray>form.controls.dexihDashboardItems;\n    dashboard.dexihDashboardItems.filter(c => c.isValid).forEach(item => {\n      dashboardItemsForm.push(this.dashboardItem(item));\n    });\n\n    this.formGroupFunc = this.dashboard;\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.Dashboard);\n    this.saveMethod = 'SaveDashboard';\n    this.addMissing(dashboard, form, new DexihDashboard());\n    this.watchChanges(eSharedObjectType.Dashboard, 'dashboardKey', 'dashboard', this.dashboard);\n    this.startForm(form);\n  }\n\n  duplicateDashboardNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihDashboards.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  public dashboardItem(dashboardItem: DexihDashboardItem): FormGroup {\n    let parameters = dashboardItem.parameters.filter(c => c.isValid).map(parameter => {\n      return this.parameter(parameter);\n    });\n\n    const form = this.fb.group({\n      'name': [dashboardItem.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n      ]],\n      'parameters': this.fb.array(parameters),\n      'runTime': {resizeEvent: new EventEmitter<any[]>(), data: new DataCache()},\n    }\n    );\n\n    this.addMissing(dashboardItem, form, new DexihDashboardItem());\n\n    return form;\n  }\n\n  // updates the parameters when a new dashboard item is created.\n  public updateDashboardItemView(item: FormGroup) {\n    let views = this.hubCache.hub.dexihViews;\n    if (views && item.controls.viewKey.value) {\n        let view = this.hubCache.hub.dexihViews.find(c => c.key === item.controls.viewKey.value);\n        if (this.view) {\n            item.controls.name.setValue(this.view.name);\n            item.controls.runTime.value.data = new DataCache();\n\n            // reset parameters.\n            let formParameters = <FormArray> item.controls.parameters;\n            let currentParameters = <DexihInputParameter[]> formParameters.value;\n\n            formParameters.clear();\n\n            let parameters = <InputParameterBase[]> view.parameters;\n            if (view.sourceType === eDataObjectType.Datalink) {\n                let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === view.sourceDatalinkKey);\n                if (datalink && datalink.parameters) {\n                    parameters = parameters.concat(datalink.parameters);\n                }\n            }\n\n            parameters.forEach(parameter => {\n                let currentParameter = currentParameters.find( c => c.name === parameter.name);\n                let newParameter = new InputParameterBase();\n                if (currentParameter) {\n                    newParameter.name = currentParameter.name;\n                    newParameter.value = currentParameter.value;\n                } else {\n                    newParameter.name = parameter.name;\n                    newParameter.value = parameter.value;\n                    newParameter.listOfValuesKey = parameter.listOfValuesKey;\n                }\n                let newFormParameter = this.parameter(newParameter);\n                formParameters.push(newFormParameter);\n            });\n        }\n    }\n}\n\n  public listOfValuesItem(item: ListOfValuesItem) {\n    const form = this.fb.group({\n      'key': [item.key, [\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(50),\n      ]],\n    }\n    );\n\n    this.addMissing(item, form, new ListOfValuesItem());\n\n    return form;\n  }\n\n  public listOfValues(listOfValues: DexihListOfValues) {\n\n    let staticData: FormGroup[]\n    if (listOfValues.staticData) {\n      staticData = listOfValues.staticData.map(item => {\n        return this.listOfValuesItem(item);\n      });\n    } else {\n      staticData = [];\n    }\n\n    const lovForm = this.fb.group({\n      'name': [listOfValues.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateLovNameValidator()\n      ]],\n      'sourceType': [listOfValues.sourceType, [\n        Validators.required,\n      ]],\n      'sourceDatalinkKey': [listOfValues.sourceDatalinkKey],\n      'sourceTableKey': [listOfValues.sourceTableKey],\n      'staticData': this.fb.array(staticData),\n    }, { validator: this.validateViewSource() }\n    );\n\n    this.formGroupFunc = this.listOfValues;\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.ListOfValues);\n    this.saveMethod = 'SaveListOfValues';\n    this.addMissing(listOfValues, lovForm, new DexihListOfValues());\n    this.clearFormSubscriptions();\n    this.watchChanges(eSharedObjectType.ListOfValues, 'listOfValuesKey', 'listOfValues', this.listOfValues);\n    this.startForm(lovForm);\n  }\n\n  duplicateLovNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihListOfValues.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  public api(api: DexihApi) {\n    this.clearFormSubscriptions();\n\n    let parameters = api.parameters.filter(c => c.isValid).map(parameter => {\n      return this.parameter(parameter);\n    });\n\n    const apiForm = this.fb.group({\n      'name': [api.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n      ]],\n      'sourceType': [api.sourceType, [\n        Validators.required,\n      ]],\n      'sourceDatalinkKey': [api.sourceDatalinkKey],\n      'sourceTableKey': [api.sourceTableKey],\n      'parameters': this.fb.array(parameters),\n    }, { validator: this.validateDatalinkTable() }\n    );\n\n    this.formGroupFunc = this.api;\n    this.saveMethod = 'SaveApi';\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.Api);\n    this.addMissing(api, apiForm, new DexihApi());\n    this.watchChanges(eSharedObjectType.Api, 'apiKey', 'api', this.api);\n    this.startForm(apiForm);\n  }\n\n  public validation(validation: DexihColumnValidation) {\n    const validationForm = this.fb.group({\n      'name': [validation.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateValidationNameValidator()\n      ]],\n    }\n    );\n\n    this.formGroupFunc = this.validation;\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.ColumnValidation);\n    this.saveMethod = 'SaveColumnValidation';\n    this.addMissing(validation, validationForm, new DexihColumnValidation());\n    this.watchChanges(eSharedObjectType.ColumnValidation, 'key', 'column validation', this.validation);\n    this.startForm(validationForm);\n  }\n\n  duplicateValidationNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihColumnValidations.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid\n          && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  public customFunction(customFunction: DexihCustomFunction) {\n    const customFunctionForm = this.fb.group({\n      'name': [customFunction.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateCustomFunctionNameValidator()\n      ]],\n      'dexihCustomFunctionParameters': this.fb.array(customFunction.dexihCustomFunctionParameters.filter(c => c.isValid).map(parameter => {\n        return this.customFunctionParametersFormGroup(parameter);\n      })),\n\n    }\n    );\n\n    this.formGroupFunc = this.customFunction;\n    this.saveMethod = 'SaveCustomFunction';\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.CustomFunction);\n    this.addMissing(customFunction, customFunctionForm, new DexihCustomFunction());\n    this.watchChanges(eSharedObjectType.CustomFunction, 'customFunctionKey', 'custom function', this.customFunction);\n    this.startForm(customFunctionForm);\n  }\n\n  duplicateCustomFunctionNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihCustomFunctions.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid\n          && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  public customFunctionParametersFormGroup(parameter: DexihCustomFunctionParameter): FormGroup {\n    const parameterForm = this.fb.group({\n      'name': [parameter.name, [\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(50),\n      ]],\n    });\n\n    this.addMissing(parameter, parameterForm, new DexihCustomFunctionParameter());\n    return parameterForm;\n  }\n\n  public hubVariable(hubVariable: DexihHubVariable) {\n    const hubVariableForm = this.fb.group({\n      'name': [hubVariable.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateHubVariableNameValidator()\n      ]],\n      'valueRaw': [hubVariable.isEncrypted ? null : hubVariable.value]\n    }\n    );\n\n    this.formGroupFunc = this.hubVariable;\n    this.saveMethod = 'SaveHubVariable';\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.HubVariable);\n    this.addMissing(hubVariable, hubVariableForm, new DexihHubVariable());\n    this.watchChanges(eSharedObjectType.HubVariable, 'hubVariable', 'hub variable', this.hubVariable);\n    this.startForm(hubVariableForm);\n  }\n\n  duplicateHubVariableNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihHubVariables.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid\n          && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  public tag(tag: DexihTag) {\n    const form = this.fb.group({\n      'name': [tag.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateTagNameValidator()\n      ]],\n    }\n    );\n\n    this.formGroupFunc = this.tag;\n    this.saveMethod = 'SaveTag';\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.Tags);\n    this.addMissing(tag, form, new DexihTag());\n    this.watchChanges(eSharedObjectType.Tags, 'tag', 'hub variable', this.tag);\n    this.startForm(form);\n  }\n\n  duplicateTagNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihTags.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid\n          && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  public datalinkTest(datalinkTest: DexihDatalinkTest) {\n    const form = this.fb.group({\n      'name': [datalinkTest.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateDatalinkTestNameValidator()\n      ]],\n      'dexihDatalinkTestSteps': this.fb.array([]),\n    });\n\n    let testStepsForm = <FormArray>form.controls.dexihDatalinkTestSteps;\n    datalinkTest.dexihDatalinkTestSteps.filter(c => c.isValid).forEach(step => {\n      testStepsForm.push(this.datalinkTestStep(step));\n    });\n\n    this.formGroupFunc = this.datalinkTest;\n    this.saveMethod = 'SaveDatalinkTest';\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.DatalinkTest);\n    this.addMissing(datalinkTest, form, new DexihDatalinkTest());\n    this.watchChanges(eSharedObjectType.DatalinkTest, 'datalinkTest', 'datalink test', this.datalinkTest);\n    this.startForm(form);\n  }\n\n  duplicateDatalinkTestNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihDatalinkTests.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid\n          && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  public datalinkTestStep(step: DexihDatalinkTestStep): FormGroup {\n    const form = this.fb.group({\n      'dexihDatalinkTestTables': this.fb.array([]),\n    });\n\n    let testTablesForm = <FormArray>form.controls.dexihDatalinkTestTables;\n    step.dexihDatalinkTestTables.filter(c => c.isValid).forEach(table => {\n      testTablesForm.push(this.datalinkTestTable(table));\n    });\n\n    this.addMissing(step, form, new DexihDatalinkTestStep());\n\n    if (this._datalinkTestChangesSubscription) {this._datalinkTestChangesSubscription.unsubscribe(); }\n    this._datalinkTestChangesSubscription = form.controls.datalinkKey.valueChanges.subscribe(datalinkKey => {\n      let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === datalinkKey);\n\n      while (testTablesForm.length > 0) {testTablesForm.removeAt(0); }\n\n      if (datalink.sourceDatalinkTable.sourceTableKey) {\n          let testTable = new DexihDatalinkTestTable();\n          testTable.tableKey = datalink.sourceDatalinkTable.sourceTableKey;\n          testTable.isValid = true;\n          testTablesForm.push(this.datalinkTestTable(testTable));\n      }\n\n      datalink.dexihDatalinkTransforms.filter(c => c.joinDatalinkTable && c.joinDatalinkTable.sourceTableKey).forEach(transform => {\n          let testTable = new DexihDatalinkTestTable();\n          testTable.tableKey = transform.joinDatalinkTable.sourceTableKey;\n          testTable.isValid = true;\n          testTablesForm.push(this.datalinkTestTable(testTable));\n      });\n    });\n    return form;\n  }\n\n  public datalinkTestTable(table: DexihDatalinkTestTable): FormGroup {\n    const form = this.fb.group({});\n    this.addMissing(table, form, new DexihDatalinkTestTable());\n    return form;\n  }\n\n\n\n  /// ***********\n  /// Datajob forms\n  /// ***********\n\n  public triggerFormGroup(trigger: DexihTrigger): FormGroup {\n    let triggerForm = this.fb.group({\n    });\n\n    this.addMissing(trigger, triggerForm, new DexihTrigger());\n    return triggerForm;\n  }\n\n  public datalinkStepFormGroup(datajobForm: FormGroup, step: DexihDatalinkStep): FormGroup {\n\n    let parameters = step.parameters.filter(c => c.isValid).map(parameter => {\n      return this.parameter(parameter);\n    });\n\n    let stepForm = this.fb.group({\n      'key': [step.key, [\n      ]],\n      'name': [step.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateStepNameValidator(datajobForm)\n      ]],\n      'datalinkKey': [step.datalinkKey, [\n        Validators.required\n      ]],\n      'dexihDatalinkDependencies': this.fb.array(step.dexihDatalinkDependencies.filter(c => c.isValid).map(dep => {\n        return this.datalinkDependencyFormGroup(dep);\n      })),\n      'dexihDatalinkStepColumns': this.fb.array(step.dexihDatalinkStepColumns.filter(c => c.isValid).map(col => {\n        return this.datalinkStepColumnFormGroup(col);\n      })),\n      'parameters': this.fb.array(parameters)\n    });\n\n    this.addMissing(step, stepForm, new DexihDatalinkStep());\n    return stepForm;\n  }\n\n  public datalinkDependencyFormGroup(dep: DexihDatalinkDependency): FormGroup {\n    let depForm = this.fb.group({\n    });\n\n    this.addMissing(dep, depForm, new DexihDatalinkDependency());\n    return depForm;\n  }\n\n  public datalinkStepColumnFormGroup(col: DexihDatalinkStepColumn): FormGroup {\n    let colForm = this.fb.group({\n    });\n\n    this.addMissing(col, colForm, new DexihDatalinkStepColumn());\n    return colForm;\n  }\n\n  public datajob(datajob: DexihDatajob): void {\n    this.clearFormSubscriptions();\n\n    const triggers = datajob.dexihTriggers.filter(c => c.isValid).map(trigger => {\n      return this.triggerFormGroup(trigger);\n    });\n\n    let parameters = datajob.parameters.filter(c => c.isValid).map(parameter => {\n      return this.parameter(parameter);\n    });\n\n    const stepsArray = this.fb.array([]);\n\n    const datajobForm = this.fb.group({\n      'key': [datajob.key, [\n      ]],\n      'name': [datajob.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateDatajobNameValidator()\n      ]],\n      'auditConnectionKey': [datajob.auditConnectionKey, [\n        this.requiredNotZero()\n      ]],\n      'failAction': [datajob.failAction, [\n        Validators.required\n      ]],\n      'dexihDatalinkSteps': stepsArray,\n      'dexihTriggers': this.fb.array(triggers),\n      'parameters': this.fb.array(parameters)\n    });\n\n    datajob.dexihDatalinkSteps.filter(c => c.isValid).forEach(step => {\n      stepsArray.push(this.datalinkStepFormGroup(datajobForm, step));\n    });\n\n    this.formGroupFunc = this.datajob;\n    this.saveMethod = 'SaveDatajob';\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.Datajob);\n    this.addMissing(datajob, datajobForm, new DexihDatajob());\n    this.watchChanges(eSharedObjectType.Datajob, 'key', 'data job', this.datajob);\n    this.startForm(datajobForm);\n  }\n\n  duplicateDatajobNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihDatajobs.findIndex(c =>\n          c.key !== this.currentForm.controls.key.value && c.isValid && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n\n  duplicateStepNameValidator(datajobForm: FormGroup): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        if (control && control.parent) {\n          let key = control.parent.controls['key'].value;\n          const no = datajobForm.value.dexihDatalinkSteps.findIndex(c =>\n            c.key !== key && c.isValid && c.name === name) >= 0;\n          return no ? { 'duplicateName': { name } } : null;\n        }\n      }\n    };\n  }\n\n  public remoteAgent(remoteAgent: DexihRemoteAgentHub) {\n    const remoteAgentForm = this.fb.group({\n    }\n    );\n\n    // this.formGroupFunc = this.remoteAgentSettings;\n    // this.saveMethod = 'SaveRemoteAgent';\n    // this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.RemoteAgent);\n    this.clearFormSubscriptions();\n    this.addMissing(remoteAgent, remoteAgentForm, new DexihRemoteAgentHub());\n    this.startForm(remoteAgentForm);\n  }\n\n  //\n  //\n  // Datalink Edit Forms\n  //\n  //\n\n  // gets the datalink object with embedded data stripped off.\n  public getDatalinkValue(): DexihDatalink {\n    const datalink = this.currentForm.value;\n\n    // causes problems with target table as output columns seems to get set null in the form.\n    // datalink.dexihDatalinkTransforms.forEach(t => {\n    //   t.inputColumns = null;\n    //   t.outputColumns = null;\n    // });\n\n    // datalink.targetTable = null;\n\n    return datalink;\n  }\n\n  datalinkTableColumn(siblingColumns: DexihDatalinkColumn[], column: DexihDatalinkColumn): FormGroup {\n    let childColumns = column.childColumns ? column.childColumns : [];\n\n    let columnForm = this.fb.group({\n      'name': [column.name, [\n        Validators.required,\n        Validators.maxLength(250),\n        this.duplicateDatalinkColumnNameValidator(siblingColumns)\n      ]],\n      'logicalName': [column.logicalName, [\n        Validators.required,\n        Validators.maxLength(250)\n      ]],\n      'precision': [column.precision, [\n        this.columnMinRangeValidator(0),\n        this.columnMaxRangeValidator(30),\n      ]],\n      'scale': [column.scale, [\n        this.columnMinRangeValidator(0),\n        this.columnMaxRangeValidator(30),\n      ]],\n      'useLogical': [column.name !== column.logicalName, [\n      ]],\n      'isString': [column.dataType === eTypeCode.String  || column.dataType === eTypeCode.CharArray ? true : false, [\n      ]],\n      'isNumber': [column.dataType === eTypeCode.Double || column.dataType === eTypeCode.Decimal ||\n        column.dataType === eTypeCode.Single ? true : false, [\n      ]],\n      'childColumns': this.fb.array(childColumns.filter(c => c.isValid).map(col => {\n        return this.datalinkTableColumn(childColumns, col);\n      })),\n      'runTime': {impact: eMappingStatus, lineage: eMappingStatus}\n    });\n\n    this.addMissing(column, columnForm, new DexihDatalinkColumn());\n\n    // update isString and isNumber properties automatically when dataType changes.\n    if (this._tableColumnChangesSubscription1) { this._tableColumnChangesSubscription1.unsubscribe(); }\n    this._tableColumnChangesSubscription1 = columnForm.controls.dataType.valueChanges.subscribe(dataType => {\n      if (dataType === eTypeCode.String  || dataType === eTypeCode.CharArray) {\n        columnForm.controls.isString.setValue(true);\n      } else {\n        columnForm.controls.isString.setValue(false);\n      }\n\n      if (dataType === eTypeCode.Double || dataType === eTypeCode.Decimal || dataType === eTypeCode.Single) {\n        columnForm.controls.isNumber.setValue(true);\n      } else {\n        columnForm.controls.isNumber.setValue(false);\n      }\n    });\n\n    // match logical name, unless the logical name is changed.\n    if (this._tableColumnChangesSubscription2) { this._tableColumnChangesSubscription2.unsubscribe(); }\n    this._tableColumnChangesSubscription2 = columnForm.controls.useLogical.valueChanges.subscribe(value => {\n      if (!columnForm.controls.useLogical.value) {\n        columnForm.controls.logicalName.setValue(columnForm.controls.name.value);\n      }\n    });\n\n    if (this._tableColumnChangesSubscription3) { this._tableColumnChangesSubscription3.unsubscribe(); }\n    this._tableColumnChangesSubscription3 = columnForm.controls.name.valueChanges.subscribe(value => {\n      if (!columnForm.controls.useLogical.value) {\n        columnForm.controls.logicalName.setValue(columnForm.controls.name.value);\n      }\n    });\n\n    for (const field of Object.keys(columnForm.controls)) {\n      let control = columnForm.controls[field];\n      if (control.validator) {\n        columnForm.controls[field].updateValueAndValidity();\n      }\n    }\n    return columnForm;\n  }\n\n  private duplicateDatalinkColumnNameValidator(columnsArray: DexihDatalinkColumn[]): ValidatorFn {\n    // validate no matching tables names in the same connection.\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (!columnsArray) { return null; }\n      if (this.currentForm) {\n        const name = control.value;\n        if (control.parent) {\n          const key = control.parent.value.key;\n          if (columnsArray) {\n            const no = columnsArray.findIndex(c =>\n              c.key !== key && c.isValid && this.stringCompare(c.name, name)) >= 0;\n            return no ? { 'duplicateName': { name } } : null;\n          }\n        }\n      }\n    };\n  }\n\n  public datalinkTransformFormGroup(transform: DexihDatalinkTransform): FormGroup {\n    const transformForm = this.fb.group({\n      'datalinkTransformKey': [transform.key, [\n      ]],\n      'name': [transform.name, [\n        // Validators.required,\n        // Validators.minLength(3),\n        // Validators.maxLength(50),\n      ]],\n      'datalinkKey': [transform.datalinkKey, [\n        Validators.required\n      ]],\n      'joinDatalinkTable': transform.joinDatalinkTable ? this.sourceDatalinkTableFormGroup(transform.joinDatalinkTable) : null,\n      'nodeDatalinkColumn': transform.nodeDatalinkColumn ? transform.nodeDatalinkColumn : null,\n      'isValid': true,\n\n      'runTime': {inputColumns: null, outputColumns: null, transformColumns: null},\n    });\n\n    transformForm.addControl('dexihDatalinkTransformItems', this.fb.array(transform.dexihDatalinkTransformItems\n      .filter(c => c.isValid).map(item => {\n        return this.datalinkDatalinkTransformItemFormGroup(transformForm, item);\n      })));\n\n    this.addMissing(transform, transformForm, new DexihDatalinkTransform());\n    return transformForm;\n  }\n\n  // public datalinkTransformTableFormGroup(table: DexihTable): FormGroup {\n  //   if (table) {\n  //     const tableForm = this.fb.group({\n  //       'isInternal': true,\n  //       'dexihTableColumns': this.fb.array([]),\n  //     });\n\n  //     let tableColumnsForm = <FormArray>tableForm.controls.dexihTableColumns;\n  //     table.dexihTableColumns.filter(c => c.isValid).forEach(column => {\n  //       tableColumnsForm.push(this.tableColumn(tableForm, column));\n  //     });\n\n  //     this.addMissing(table, tableForm);\n  //     return tableForm;\n  //   } else {\n  //     return null;\n  //   }\n  // }\n\n  public  datalinkDatalinkTransformItemFormGroup(datalinkTransformForm: FormGroup, item: DexihDatalinkTransformItem): FormGroup {\n    const itemForm = this.fb.group({\n      'dexihFunctionParameters': this.fb.array(item.dexihFunctionParameters.filter(c => c.isValid).map(parameter => {\n        return this.datalinkFunctionParametersFormGroup(parameter);\n      })),\n      // 'standardFunction': item.standardFunction,\n      'targetDatalinkColumn': [item.targetDatalinkColumn, [\n        this.duplicateOutputColumn(datalinkTransformForm)\n      ]],\n      'functionClassName': [item.functionClassName],\n      'functionMethodName': [item.functionMethodName],\n      'isValid': true\n    }, {asyncValidators: [this.invalidClassName()]});\n\n    this.addMissing(item, itemForm, new DexihDatalinkTransformItem());\n\n    // itemForm.controls.functionMethodName.setAsyncValidators(this.invalidClassName(itemForm));\n\n    // when ever generic parameter changes, change all underlying types.\n    if (this._genericParameterSubscription) { this._genericParameterSubscription.unsubscribe(); }\n    this._genericParameterSubscription = itemForm.controls.genericTypeCode.valueChanges.subscribe(() => {\n      let typeCode = itemForm.controls.genericTypeCode.value;\n      let parameters = <FormArray> itemForm.controls.dexihFunctionParameters;\n      parameters.controls.filter(c => c.value.isGeneric).forEach(p => {\n        let param = <FormGroup>p;\n        param.controls.dataType.setValue(typeCode);\n        let arrayParams = <FormArray> param.controls.arrayParameters;\n        arrayParams.controls.forEach(ap => {\n          let aParam = <FormGroup>ap;\n          aParam.controls.dataType.setValue(typeCode);\n        });\n      });\n    });\n\n\n    return itemForm;\n  }\n\n  duplicateOutputColumn(datalinkTransformForm: FormGroup): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const column = <DexihDatalinkColumn>control.value;\n        const transformColumns = <DexihDatalinkColumn[]>datalinkTransformForm.controls.runTime.value.transformColumns;\n        if (transformColumns && column) {\n          const no = transformColumns.filter(c => c.name === column.name).length > 1;\n          return no ? { 'duplicateName': { name } } : null;\n        } else {\n          return null;\n        }\n      }\n    };\n  }\n\n  invalidClassName(): AsyncValidatorFn {\n    return (control: AbstractControl): Promise<ValidationErrors | null> => {\n      const datalinkTransformItemForm = <FormGroup>control;\n      datalinkTransformItemForm.controls.functionMethodName.setErrors(null);\n      if (this.currentForm && datalinkTransformItemForm.controls.transformItemType\n        && datalinkTransformItemForm.controls.transformItemType.value === eTransformItemType.BuiltInFunction ) {\n        return new Promise((resolve, reject) => {\n          this.hubService.GetFunctionReference(datalinkTransformItemForm.value).then(func => {\n          if (func) {\n            resolve(null);\n          } else {\n            const value = datalinkTransformItemForm.controls.functionClassName.value + '.' +\n              datalinkTransformItemForm.controls.functionMethodName.value;\n              datalinkTransformItemForm.controls.functionMethodName.setErrors({ 'invalidClass': { value } });\n            resolve({ 'invalidClass': { value } });\n          }\n        }).catch(reason => {\n          reject(reason);\n        });\n      });\n      } else {\n        return Promise.resolve(null);\n      }\n    };\n  }\n\n  public datalinkFunctionParametersFormGroup(parameter: DexihFunctionParameter): FormGroup {\n    const parameterForm = this.fb.group({\n      // 'name': [, [ // used for adding new columns\n      // ]],\n      'datalinkColumn': parameter.datalinkColumn,\n      'runTime': parameter['runTime'],\n      'arrayParameters': this.fb.array(parameter.arrayParameters.filter(c => c.isValid).map(p => {\n        return this.datalinkFunctionArrayParametersFormGroup(p);\n      })),\n    }, { validator: this.inconsistentDataType()});\n\n    this.addMissing(parameter, parameterForm, new DexihFunctionParameter());\n\n    return parameterForm;\n  }\n\n  public datalinkFunctionArrayParametersFormGroup(parameter: DexihFunctionArrayParameter): FormGroup {\n    const parameterForm = this.fb.group({\n      // 'name': [, [ // used for adding new columns\n      // ]],\n      'datalinkColumn': parameter.datalinkColumn,\n      'runTime': parameter['runTime'],\n    }, { validator: this.inconsistentDataType()});\n\n    this.addMissing(parameter, parameterForm, new DexihFunctionArrayParameter());\n\n    return parameterForm;\n  }\n\n  inconsistentDataType(): ValidatorFn {\n    return (group: FormGroup): { [key: string]: any } => {\n      if (this.currentForm) {\n        const datalinkColumn = group.controls.datalinkColumn;\n        if (datalinkColumn && datalinkColumn.value) {\n          const dataType = datalinkColumn.value.dataType;\n          const parameterDataType = group.controls.dataType?.value;\n          if (dataType !== parameterDataType) {\n            datalinkColumn.setErrors({'dataType': { dataType }});\n            return { 'dataType': { dataType }};\n          } else {\n            datalinkColumn.setErrors(null);\n          }\n        }\n      }\n      return null;\n    };\n  }\n\n  public datalinkProfileFormGroup(profile: DexihDatalinkProfile): FormGroup {\n    const profileForm = this.fb.group({\n      'isValid': true\n    });\n\n    this.addMissing(profile, profileForm, new DexihDatalinkProfile());\n    return profileForm;\n  }\n\n  public datalinkTargetFormGroup(target: DexihDatalinkTarget, table: DexihTable = null): FormGroup {\n\n    if (!table && target.tableKey) {\n      table = this.hubCache.getTable(target.tableKey);\n    }\n    // if (!table) {\n    //   table = new DexihTable();\n    // }\n\n    const targetForm = this.fb.group({\n      'table': table ? this.tableForm(table) : null,\n      'runTime': {inputColumns: null},\n      'nodeDatalinkColumn': target.nodeDatalinkColumn ? target.nodeDatalinkColumn : null,\n      'isValid': true\n    });\n\n    this.addMissing(target, targetForm, new DexihDatalinkTarget());\n\n    let subscription = targetForm.controls.tableKey.valueChanges.subscribe(tableKey => {\n      if (tableKey > 0) {\n        table = this.hubCache.getTable(tableKey);\n        const tableForm = table ? this.tableForm(table) : null;\n        targetForm.setControl('table', tableForm);\n      }\n    });\n\n    this._datalinkTargetChanges.push(subscription);\n\n    return targetForm;\n  }\n\n\n  public sourceDatalinkTableFormGroup(datalinkTable: DexihDatalinkTable): FormGroup {\n    const form = this.fb.group({\n      'sourceType': [datalinkTable.sourceType, [\n        Validators.required,\n      ]],\n      'sourceTableKey': [datalinkTable.sourceTableKey, [\n      ]],\n      'sourceDatalinkKey': [datalinkTable.sourceDatalinkKey, [\n      ]],\n      'isValid': true,\n      'dexihDatalinkColumns': this.fb.array([]),\n    }, { validator: this.validateDatalinkTable() });\n\n    let tableColumnsForm = <FormArray>form.controls.dexihDatalinkColumns;\n    datalinkTable.dexihDatalinkColumns.filter(c => c.isValid).forEach(column => {\n      tableColumnsForm.push(this.datalinkTableColumn(tableColumnsForm.value, column));\n    });\n\n    this.addMissing(datalinkTable, form, new DexihDatalinkTable());\n    return form;\n  }\n\n  private validateDatalinkTable() {\n    return (group: FormGroup) => {\n      let sourceType = group.get('sourceType').value;\n      let sourceTableKey = group.get('sourceTableKey');\n      let sourceDatalinkKey = group.get('sourceDatalinkKey');\n\n      sourceTableKey.setErrors(null);\n      sourceDatalinkKey.setErrors(null);\n\n      if (sourceType === eSourceType.Table) {\n        if (!sourceTableKey.value) {\n          return sourceTableKey.setErrors({ required: true });\n        }\n      } else if (sourceType === eSourceType.Datalink) {\n        if (!sourceDatalinkKey.value) {\n          return sourceDatalinkKey.setErrors({ required: true });\n        }\n      }\n    };\n  }\n\n  private missingSourceDatalinkKey(sourceType: eSourceType): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      return sourceType === eSourceType.Datalink && !control.value ? { 'required': 'required' } : null;\n    };\n  }\n\n  datalink(datalink: DexihDatalink): void {\n    this.logger.LogC(() => `datalink key:${datalink.key} datalink:${datalink.name}`, eLogLevel.Debug);\n\n    this.clearFormSubscriptions();\n\n    let profiles = datalink.dexihDatalinkProfiles.filter(c => c.isValid).map(profile => {\n      return this.datalinkProfileFormGroup(profile);\n    });\n\n    let targets = datalink.dexihDatalinkTargets.filter(c => c.isValid).map(target => {\n      return this.datalinkTargetFormGroup(target);\n    });\n\n    let transforms = datalink.dexihDatalinkTransforms.filter(c => c.isValid).map(transform => {\n      return this.datalinkTransformFormGroup(transform);\n    });\n\n    let parameters = datalink.parameters.filter(c => c.isValid).map(parameter => {\n      return this.parameter(parameter);\n    });\n\n\n    const datalinkForm = this.fb.group({\n      'name': [datalink.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n        this.duplicateDatalinkNameValidator(datalink.key)\n      ]],\n      'sourceDatalinkTable': this.sourceDatalinkTableFormGroup(datalink.sourceDatalinkTable),\n      'auditConnectionKey': [datalink.auditConnectionKey, [\n        // Validators.required,\n      ]],\n      'updateStrategy': [datalink.updateStrategy, [\n        // Validators.required,\n      ]],\n      'dexihDatalinkTransforms': this.fb.array(transforms),\n      'dexihDatalinkProfiles': this.fb.array(profiles),\n      'dexihDatalinkTargets': this.fb.array(targets),\n      'parameters': this.fb.array(parameters),\n      'isValid': true\n    });\n\n    let templateDatalink = new DexihDatalink();\n    templateDatalink.sourceDatalinkTable = new DexihDatalinkTable();\n    this.addMissing(datalink, datalinkForm, templateDatalink);\n\n    this.formGroupFunc = this.datalink;\n    this.saveMethod = 'SaveDatalink';\n    this.property = sharedObjectProperties.find(c => c.type === eSharedObjectType.Datalink);\n    this.valueMethod = 'getDatalinkValue';\n\n    // whenever the datalink changes, update any transforms input/output columns.\n    if (this._datalinkChangesSubscription1) { this._datalinkChangesSubscription1.unsubscribe(); }\n    this._datalinkChangesSubscription1 = datalinkForm.valueChanges.subscribe(() => {\n      this.updateTransformFormColumns(datalinkForm);\n    });\n    this.updateTransformFormColumns(datalinkForm);\n\n    this.watchChanges(eSharedObjectType.Datalink, 'key', 'datalink', this.datalink);\n    this.startForm(datalinkForm);\n  }\n\n  private duplicateDatalinkNameValidator(datalinkKey: number): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.currentForm) {\n        const name = control.value;\n        const no = this.hubCache.hub.dexihDatalinks.findIndex(c =>\n          c.key !== datalinkKey && c.isValid && this.stringCompare(c.name, name)) >= 0;\n        return no ? { 'duplicateName': { name } } : null;\n      }\n    };\n  }\n\n  private updateTransformFormColumns(datalinkForm: FormGroup) {\n    if (this.IgnoreFormChange === false) {\n      this.IgnoreFormChange = true;\n      const transformsArray = <FormArray>datalinkForm.controls.dexihDatalinkTransforms;\n      const datalink = <DexihDatalink> datalinkForm.value;\n      const ioColumns = new InputOutputColumns();\n\n      ioColumns.buildInputOutput(datalink);\n\n      transformsArray.controls.forEach(transformFormControl => {\n        const datalinkTransformForm = <FormGroup>transformFormControl;\n        const datalinkTransform = datalinkTransformForm.value;\n\n        // const inputColumns = ioColumns.getInputColumns(this.hubCache, datalink, datalinkTransform, []);\n        // const outputColumns = ioColumns.getOutputColumns(this.hubCache, datalink, datalinkTransform);\n\n        const transform = datalink.dexihDatalinkTransforms.find(c => c.key === datalinkTransform.datalinkTransformKey);\n\n        datalinkTransformForm.controls.runTime.setValue(transform['runTime']);\n\n        const items = <FormArray>datalinkTransformForm.controls.dexihDatalinkTransformItems;\n        items.controls.forEach(item => {\n          const transformItemForm = <FormGroup>item;\n          if (transformItemForm.controls.targetDatalinkColumn) {\n            transformItemForm.controls.targetDatalinkColumn.updateValueAndValidity();\n          }\n          if (transformItemForm.controls.sourceDatalinkColumn) {\n            transformItemForm.controls.sourceDatalinkColumn.updateValueAndValidity();\n          }\n\n          const params = <FormArray>transformItemForm.controls.dexihFunctionParameters;\n          params.controls.forEach(param => {\n            const paramForm = <FormGroup>param;\n            if (paramForm.controls.datalinkColumn) {\n              paramForm.controls.datalinkColumn.updateValueAndValidity();\n            }\n          });\n        });\n      });\n\n      const targetsArray = <FormArray>datalinkForm.controls.dexihDatalinkTargets;\n      targetsArray.controls.forEach((targetForm: FormGroup) => {\n        let target = datalink.dexihDatalinkTargets.find(c => c.key === targetForm.controls.key.value);\n        if (target) {\n          targetForm.controls.runTime.setValue(target['runTime']);\n        }\n      });\n\n      this.IgnoreFormChange = false;\n    }\n  }\n}\n","import {HubCache, eMappingStatus } from './hub.models'\nimport { DexihDatalinkColumn, eTypeCode, DexihDatalink, DexihDatalinkTable, eTransformItemType,\n    eTransformType, DexihTableColumn, DexihDatalinkTransform, DexihDatalinkTransformItem, DexihFunctionParameter, eDeltaType, eDuplicateStrategy } from '../shared/shared.models';\n\nexport enum eDatalinkObjectType {\n    SourceTable,\n    TargetTable,\n    Transform\n}\n\nexport enum eObjectUse {\n    Sort,\n    Mapping,\n    Function,\n    Join,\n    PassThrough,\n    Source,\n    Target\n}\n\nexport class ImpactLineage {\n    public objectType: eDatalinkObjectType;\n    public objectUse: eObjectUse;\n\n    public column: DexihDatalinkColumn;\n    public link: string;\n\n    public ImpactItems: ImpactLineage[];\n    public LineageItems: ImpactLineage[];\n\n    private currentMappingStatus(): eMappingStatus {\n        switch (this.objectUse) {\n            case eObjectUse.Sort:\n                return eMappingStatus.Sorted;\n            case eObjectUse.Mapping:\n                return eMappingStatus.Mapped;\n            case eObjectUse.Function:\n                return eMappingStatus.Mapped;\n            case eObjectUse.Join:\n                return eMappingStatus.Joined;\n            case eObjectUse.PassThrough:\n                return eMappingStatus.PassThroughMap;\n            case eObjectUse.Source:\n                return eMappingStatus.Mapped;\n            case eObjectUse.Target:\n                return eMappingStatus.Mapped;\n        }\n    }\n\n    // look at forward mappings to get current impact mapping status for column\n    public GetImpact(): eMappingStatus {\n        let mappingStatus = eMappingStatus.NotMapped;\n\n        this.ImpactItems.forEach(impact => {\n            let newStatus = impact.GetImpact();\n            if (newStatus < mappingStatus) {\n                mappingStatus = newStatus;\n            }\n        });\n\n        return mappingStatus;\n    }\n\n    public GetLineage(): eMappingStatus {\n        let mappingStatus = eMappingStatus.NotMapped;\n        return mappingStatus;\n    }\n}\n\n\nexport class InputOutputColumns {\n\n    // used to find a column within a node structure.\n    findColumn(column: DexihDatalinkColumn, nodeDatalinkColumnKey: number): boolean {\n        if (!nodeDatalinkColumnKey) {\n            return false;\n        }\n        if (column.key === nodeDatalinkColumnKey) {\n            return true;\n        }\n        if (column.childColumns) {\n            for (let childColumn of column.childColumns) {\n                if (this.findColumn(childColumn, nodeDatalinkColumnKey)) {\n                    return true;\n                }\n            };\n        }\n        return false;\n    }\n\n    // used to find a node column within a node structure.\n    findNodeColumn(column: DexihDatalinkColumn, columns: DexihDatalinkColumn[]): DexihDatalinkColumn {\n        if (!column || !columns || columns.length === 0) {\n            return null;\n        }\n\n        for (let col of columns) {\n            if (col.key === column.key) {\n                return col;\n            }\n            if (col.childColumns) {\n                let returnCol = this.findNodeColumn(column, col.childColumns);\n                if (returnCol) {\n                    return returnCol;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    // used to find a node column within a node structure.\n    findParentColumns(column: DexihDatalinkColumn, columns: DexihDatalinkColumn[]): DexihDatalinkColumn[] {\n        if (!column || !columns || columns.length === 0) {\n            return null;\n        }\n\n        for (let col of columns) {\n            if (col.key === column.key) {\n                return columns;\n            }\n            if (col.childColumns) {\n                let returnCol = this.findParentColumns(column, col.childColumns);\n                if (returnCol) {\n                    return returnCol;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    // gets all allowable columns given the specified nodeLevel\n    validColumns(nodeDatalinkColumnKey: number, columns: DexihDatalinkColumn[]): DexihDatalinkColumn[] {\n        if (!nodeDatalinkColumnKey) {\n            return columns;\n        }\n\n        let validColumns: DexihDatalinkColumn[] = [];\n\n        columns.forEach(col => {\n            validColumns.push(col);\n            if (col.key === nodeDatalinkColumnKey) {\n                if (col.childColumns) {\n                    validColumns = validColumns.concat(col.childColumns);\n                }\n            } else if (this.findColumn(col, nodeDatalinkColumnKey)) {\n                let cols = this.validColumns(nodeDatalinkColumnKey, col.childColumns);\n                validColumns = validColumns.concat(cols);\n            }\n        });\n\n        return validColumns;\n    }\n\n    findValidColumn(column: DexihDatalinkColumn, nodeDatalinkColumnKey: number, columns: DexihDatalinkColumn[])\n        : DexihDatalinkColumn {\n\n        for (let col of columns) {\n            if (col.key === column.key) {\n                return col;\n            }\n\n            if (this.findColumn(col, nodeDatalinkColumnKey)) {\n                let newCol = this.findValidColumn(column, nodeDatalinkColumnKey, col.childColumns);\n                if (newCol) { return newCol };\n            }\n        };\n\n        return null;\n    }\n\n\n    // gets a flattened list of the available source columns, which can be used to populate drop-downs\n    getAvailableColumns(columns: DexihDatalinkColumn[], nodeDatalinkColumnKey: number, levelCount: number): DexihDatalinkColumn[] {\n        let returnColumns = [];\n\n        columns.forEach(column => {\n          let newColumn = Object.assign({}, column);\n          newColumn.logicalName = '-'.repeat(levelCount) + column.logicalName;\n          returnColumns.push(newColumn);\n          if (column.dataType === eTypeCode.Node && column.childColumns) {\n            let io = new InputOutputColumns();\n            if (io.findColumn(column, nodeDatalinkColumnKey)) {\n              let childColumns = this.getAvailableColumns(column.childColumns, nodeDatalinkColumnKey, levelCount + 1);\n              returnColumns.push.apply(returnColumns, childColumns);\n            }\n          }\n        });\n\n        return returnColumns;\n      }\n\n      public getDatalinkOutputColumns(datalink: DexihDatalink): DexihDatalinkColumn[] {\n        if (datalink.dexihDatalinkTransforms.length > 0) {\n            let transforms = datalink.dexihDatalinkTransforms.sort((a, b) => b.position - a.position);\n            return transforms[0]['runTime'].outputColumns;\n        } else {\n            return datalink.sourceDatalinkTable.dexihDatalinkColumns;\n        }\n      }\n\n    /// used to copy a datalink column from source to target, modifying properties which shouldn't be passed across.\n    public copyDatalinkColumn(column: DexihDatalinkColumn, newPosition: number, newGroup: string): DexihDatalinkColumn {\n        if (!column) { return null; }\n\n        let newColumn = new DexihDatalinkColumn();\n        Object.assign(newColumn, column);\n        if (column.childColumns) {\n            newColumn.childColumns = column.childColumns\n            .sort((a, b) => a.position - b.position)\n            .map((c, index) => this.copyDatalinkColumn(c, index, newGroup + '.' + column.logicalName));\n        }\n        newColumn.isIncrementalUpdate = false;\n        newColumn.isInput = false;\n        newColumn.position = newPosition;\n\n        if (newGroup) {\n            newColumn.columnGroup = newGroup;\n        } else {\n            newColumn.columnGroup = column.columnGroup;\n        }\n        return newColumn;\n    }\n\n    public copyDatalinkColumns(columns: DexihDatalinkColumn[]): DexihDatalinkColumn[] {\n        let newColumns: DexihDatalinkColumn[] = [];\n        columns.forEach(column => {\n            newColumns.push(this.copyDatalinkColumn(column, column.position, column.columnGroup));\n        });\n        return newColumns;\n    }\n\n    public copyDatalinkTable(table: DexihDatalinkTable): DexihDatalinkTable {\n        let newTable = Object.assign({}, table);\n        let newColumns: DexihDatalinkColumn[] = [];\n\n        table.dexihDatalinkColumns.forEach(column => {\n            newColumns.push(this.copyDatalinkColumn(column, column.position, column.columnGroup));\n        });\n        newTable.dexihDatalinkColumns = newColumns;\n\n        return newTable;\n    }\n\n    public buildInputOutput(datalink: DexihDatalink) {\n\n        // get a reverse sorted list of transforms prior to the current one.\n        let transforms = datalink.dexihDatalinkTransforms\n            .filter(a => a.isValid)\n            .sort((a, b) => a.position - b.position);\n\n        transforms.forEach((transform, index) => {\n            let inputColumns: DexihDatalinkColumn[] = [];\n\n            // if this is the first transform, then the inputs columns will come from the source.\n            if (index === 0) {\n                inputColumns = datalink.sourceDatalinkTable.dexihDatalinkColumns\n                    .filter(c => c.deltaType !== eDeltaType.IgnoreField)\n                    .sort((a, b) => a.position - b.position)\n                    .map((c, i) => this.copyDatalinkColumn(c, i, c.columnGroup));\n\n                // initialize all input columns to not mapped.\n                inputColumns.forEach(c => {\n                    c['runTime'] = {impact: eMappingStatus.NotMapped, lineage: eMappingStatus.NotMapped}\n                });\n            } else {\n                // get outputs from the previous transform\n                inputColumns = transforms[index - 1]['runTime'].outputColumns\n                    .filter(c => c.deltaType !== eDeltaType.IgnoreField)\n                    .sort((a, b) => a.position - b.position)\n                    .map((c, i) => this.copyDatalinkColumn(c, i, c.columnGroup));\n            }\n\n            // get a sorted list of the transform items.\n            let transformItems = transform.dexihDatalinkTransformItems\n                .sort((a, b) => a.position - b.position);\n\n            // outputColumns contains columns at the top level.\n            let outputColumns: DexihDatalinkColumn[] = [];\n\n            // transformColumns the current node which is being transformed (i.e. which mappings and other operations should be applied to)\n            let transformColumns = outputColumns;\n\n            let pos = 0;\n\n            let nodeColumn = transform.nodeDatalinkColumn ?\n                this.findNodeColumn(transform.nodeDatalinkColumn, inputColumns) : null;\n\n            // if the mapping uses a node level, copy parent columns, and set new node level.\n            if (nodeColumn) {\n                outputColumns = this.copyDatalinkColumns(inputColumns);\n\n                nodeColumn = transform.nodeDatalinkColumn ?\n                this.findNodeColumn(transform.nodeDatalinkColumn, outputColumns) : null;\n\n                // create a copy of the inputs columns\n                inputColumns.forEach((column) => {\n                    transformColumns.push(this.copyDatalinkColumn(column, pos++, column.columnGroup));\n                });\n\n                nodeColumn.childColumns = [];\n                transformColumns = nodeColumn.childColumns;\n            }\n\n            // add group columns\n            transformItems\n                .filter(c => (c.transformItemType === eTransformItemType.Series\n                    || c.transformItemType === eTransformItemType.Column) &&\n                    c.sourceDatalinkColumn )\n                .forEach(item => {\n                transformColumns.push(this.copyDatalinkColumn(item.sourceDatalinkColumn, pos++, 'Group'));\n            });\n\n            // if there is group node, all non-group columns should be child columns.\n            let groupNode = transformItems.find(c => c.transformItemType === eTransformItemType.GroupNode)\n            if (groupNode) {\n                let groupColumn = this.copyDatalinkColumn(groupNode.targetDatalinkColumn, pos++, 'Group Node');\n                transformColumns.push(groupColumn);\n\n                // set the current node level to the group column, so transforms are mapped as it's child columns.\n                transformColumns = groupColumn.childColumns;\n            }\n\n            // if the transform is a join, then pull in the join table columns\n            if ((transform.transformType === eTransformType.Join || transform.transformType === eTransformType.Lookup)\n                && transform.joinDatalinkTable) {\n                let joinColumns: DexihDatalinkColumn[];\n                let joinNode = transform.dexihDatalinkTransformItems.find(c => c.transformItemType === eTransformItemType.JoinNode)\n\n                if (joinNode) {\n                    let joinColumn = joinNode.targetDatalinkColumn;\n                    if (joinColumn) {\n                        joinColumn = this.copyDatalinkColumn(joinColumn, pos++, 'Join Node');\n                        joinColumn.childColumns = [];\n                        transformColumns.push(joinColumn);\n                        joinColumns = joinColumn.childColumns;\n                    } else {\n                        joinColumns = [];\n                    }\n                } else {\n                    joinColumns = transformColumns;\n                }\n\n\n                // set join position to high number so join columns are positioned after other columns.\n                let joinPos = 10000;\n                transform.joinDatalinkTable.dexihDatalinkColumns.sort((a, b) => a.position - b.position).forEach(c => {\n                    if(transform.joinDuplicateStrategy !== eDuplicateStrategy.MergeValidDates || (c.deltaType !== eDeltaType.ValidFromDate && c.deltaType !== eDeltaType.ValidToDate)) {\n                        \n                        let jc = this.copyDatalinkColumn(c, joinPos++, transform.joinDatalinkTable.name);\n                        joinColumns.push(jc);\n                    }\n                });\n            }\n\n            // if the transform is a Concatenate, then merge common column names together.\n            if (transform.transformType === eTransformType.Concatenate && transform.joinDatalinkTable) {\n                // get the join tables.\n                let joinTable = transform.joinDatalinkTable;\n\n                // add any missing columns in the join table to the main table.\n                joinTable.dexihDatalinkColumns.sort((a, b) => a.position - b.position).forEach(concat => {\n                    if (!transformColumns.find(c => c.name === concat.name)) {\n                        transformColumns.push(this.copyDatalinkColumn(concat, pos++, 'Concatenate'));\n                    }\n                });\n            }\n\n            // add other mapped columns to the current node level.\n            transformItems.forEach(item => {\n                // if the item type of a column (used for group transform), then the source column is pushed to the output.\n                switch (item.transformItemType) {\n                    case eTransformItemType.AggregatePair:\n                    case eTransformItemType.BuiltInFunction:\n                    case eTransformItemType.ColumnPair:\n                    case eTransformItemType.CustomFunction:\n                    case eTransformItemType.UnGroup:\n                        if (item.targetDatalinkColumn) {\n                            transformColumns.push(item.targetDatalinkColumn);\n                        }\n                        item.dexihFunctionParameters.filter(c => HubCache.parameterIsOutput(c)).forEach(param => {\n                            if (param.datalinkColumn) {\n                                transformColumns.push(param.datalinkColumn);\n                            }\n\n                            param.arrayParameters.forEach(arrayParam => {\n                                if (arrayParam.datalinkColumn) {\n                                    transformColumns.push(arrayParam.datalinkColumn);\n                                }\n                            });\n                        });\n                        break;\n                }\n            });\n\n            // add the passThrough columns\n            if (transform.passThroughColumns) {\n                let columns = inputColumns;\n                // get the matching node from the inputs\n                if (nodeColumn) {\n                    let node = this.findNodeColumn(nodeColumn, columns);\n                    if (node) {\n                        columns = node.childColumns;\n                    }\n                }\n                columns.forEach(column => {\n                    if (transformColumns.findIndex(c => c.name === column.name && c.columnGroup === column.columnGroup  ) < 0) {\n                        let newColumn = this.copyDatalinkColumn(column, pos++, column.columnGroup)\n\n                        if(transform.joinDuplicateStrategy === eDuplicateStrategy.MergeValidDates && (newColumn.deltaType === eDeltaType.ValidFromDate || newColumn.deltaType === eDeltaType.ValidToDate)) {\n                            newColumn.columnGroup = 'merged';\n                            newColumn.position = 20000 + pos;\n                        }\n\n                        transformColumns.push(newColumn);\n                    }\n                });\n            }\n\n            transform['runTime'] = {inputColumns: inputColumns, outputColumns: outputColumns, transformColumns: transformColumns }\n        });\n\n        // set the columns for the targets\n        let targetColumns: DexihDatalinkColumn[];\n        if (transforms.length > 0) {\n            targetColumns = transforms[0]['runTime'].outputColumns;\n        } else {\n            targetColumns = datalink.sourceDatalinkTable.dexihDatalinkColumns;\n        }\n\n        datalink.dexihDatalinkTargets.forEach(target => {\n            if (target.nodeDatalinkColumn) {\n                let validColumns =  this.validColumns(target.nodeDatalinkColumn.key, targetColumns);\n                target['runTime'] = {inputColumns: validColumns }\n            } else {\n                target['runTime'] = {inputColumns: targetColumns};\n            }\n\n        });\n\n    }\n}\n\nexport class ColumnUsageNode {\n    public impactTree: Array<ColumnUsageNode>;\n    public lineageTree: Array<ColumnUsageNode>;\n\n    public constructor(\n        public objectType: eDatalinkObjectType,\n        public objectUse: eObjectUse,\n        public datalink: DexihDatalink,\n        // public table: DexihTable,\n        public datalinkColumn: DexihDatalinkColumn,\n        public tableColumn: DexihTableColumn,\n        public datalinkTransform: DexihDatalinkTransform,\n        public datalinkTransformItem: DexihDatalinkTransformItem,\n        public mappingStatus: eMappingStatus,\n        public hubCache: HubCache\n    ) {}\n\n    // get the parameters and array parameter in a single list to save recursive calls.\n    private flattenParameters(params: DexihFunctionParameter[]): any[] {\n        let flat = <any[]> params;\n\n        params.forEach(p => {\n            flat = flat.concat(p.arrayParameters);\n        })\n\n        return flat;\n    }\n\n    // builds the impactTree and returns a status to indicate how the column is mapped.\n    public createDatalinkImpact(useNextTransform: boolean): eMappingStatus  {\n       this.impactTree = [];\n       let newMappingStatus: eMappingStatus = eMappingStatus.NotMapped;\n\n        let nextTransform: DexihDatalinkTransform = null;\n       if (useNextTransform) {\n            switch (this.objectType) {\n                case  eDatalinkObjectType.SourceTable:\n                    if (this.datalink.dexihDatalinkTransforms.length > 0 ) {\n                        nextTransform = this.datalink.dexihDatalinkTransforms.sort((a, b) => a.position - b.position)[0];\n                    }\n                    break;\n                case eDatalinkObjectType.Transform:\n                    let transforms = this.datalink.dexihDatalinkTransforms\n                        .filter(c => c.position > this.datalinkTransform.position).sort((a, b) => a.position - b.position);\n                    if (transforms.length > 0 ) {\n                        nextTransform = transforms[0];\n                    } else {\n                        this.mappingStatus = eMappingStatus.Mapped;\n                    }\n                    break;\n                case eDatalinkObjectType.TargetTable:\n                    return;\n            }\n       } else {\n           if (this.datalinkTransform) {\n                nextTransform = this.datalinkTransform;\n           } else {\n               if (this.datalink.dexihDatalinkTransforms.length > 0) {\n                    let transforms = this.datalink.dexihDatalinkTransforms.sort((a, b) => b.position - a.position); // sort asc\n                    nextTransform = transforms[0];\n               }\n           }\n       }\n\n        // find all occurrences of the current column in the next transform.\n        if (nextTransform) {\n            let columnIsMapped = false;\n            nextTransform.dexihDatalinkTransformItems.forEach(item => {\n                switch (item.transformItemType) {\n                    case eTransformItemType.Column:\n                        // if this column is mapped, then add it to the impact tree.\n                        if (item.sourceDatalinkColumn &&\n                                item.sourceDatalinkColumn.key === this.datalinkColumn.key ) {\n                            let column = item.sourceDatalinkColumn;\n                            if (column) {\n                                let newImpactTree =\n                                    new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Mapping, this.datalink,\n                                        column, null, nextTransform, null, eMappingStatus.Mapped, this.hubCache);\n                                let newStatus = newImpactTree.createDatalinkImpact(true);\n                                if (newStatus < newMappingStatus) {\n                                    newMappingStatus = newStatus;\n                                }\n                                this.impactTree.push(newImpactTree);\n                                if (column.name === this.datalinkColumn.name) {\n                                    columnIsMapped = true;\n                                }\n                            } else {\n                                this.mappingStatus = eMappingStatus.Error;\n                                return eMappingStatus.Error;\n                            }\n                        }\n                        break;\n                    case eTransformItemType.ColumnPair:\n                        // if this column is mapped, then add it to the impact tree.\n                        if (item.sourceDatalinkColumn &&\n                                item.sourceDatalinkColumn.key === this.datalinkColumn.key &&\n                                item.targetDatalinkColumn ) {\n                            let column = item.targetDatalinkColumn;\n                            if (column) {\n                                let newImpactTree =\n                                    new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Mapping, this.datalink,\n                                        column, null, nextTransform, null, eMappingStatus.Mapped, this.hubCache);\n                                let newStatus = newImpactTree.createDatalinkImpact(true);\n                                if (newStatus < newMappingStatus) {\n                                    newMappingStatus = newStatus;\n                                }\n                                this.impactTree.push(newImpactTree);\n                                if (item.targetDatalinkColumn.name === this.datalinkColumn.name) {\n                                    columnIsMapped = true;\n                                }\n                            } else {\n                                this.mappingStatus = eMappingStatus.Error;\n                                return eMappingStatus.Error;\n                            }\n                        }\n                        break;\n                    case eTransformItemType.BuiltInFunction:\n                    case eTransformItemType.CustomFunction:\n                        // if the column is part of a function parameter, then add it to the tree.\n\n                        let inputParams = this.flattenParameters(item.dexihFunctionParameters\n                            .filter(p => HubCache.parameterIsInput(p)));\n\n                            inputParams.forEach(inputParam => {\n\n                                if (inputParam.datalinkColumn &&\n                                    inputParam.datalinkColumn.key === this.datalinkColumn.key) {\n                                    // add the target column (if mapped)\n                                    if (item.targetDatalinkColumn) {\n                                        let column = item.targetDatalinkColumn;\n                                        if (column) {\n                                            let newImpactTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Function,\n                                                this.datalink, column, null, nextTransform, item, eMappingStatus.Mapped, this.hubCache);\n                                            let newStatus = newImpactTree.createDatalinkImpact(true);\n                                            if (newStatus < newMappingStatus) {\n                                                newMappingStatus = newStatus;\n                                            }\n                                            this.impactTree.push(newImpactTree);\n                                            if (column.name === this.datalinkColumn.name) {\n                                                columnIsMapped = true;\n                                            }\n                                        } else {\n                                            this.mappingStatus = eMappingStatus.Error;\n                                            return eMappingStatus.Error;\n                                        }\n                                    }\n\n                                    let outParams = this.flattenParameters(item.dexihFunctionParameters\n                                        .filter(p => HubCache.parameterIsOutput(p)));\n\n                                    // add any output parameters\n                                    outParams.forEach(outParam => {\n                                        if (outParam.datalinkColumn) {\n                                            let column = outParam.datalinkColumn;\n                                            if (column) {\n                                                let newImpactTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Function,\n                                                    this.datalink, column, null, nextTransform,\n                                                    item, eMappingStatus.Mapped, this.hubCache);\n                                                let newStatus = newImpactTree.createDatalinkImpact(true);\n                                                if (newStatus < newMappingStatus) {\n                                                    newMappingStatus = newStatus;\n                                                }\n                                                this.impactTree.push(newImpactTree);\n                                                if (column.name === this.datalinkColumn.name) {\n                                                    columnIsMapped = true;\n                                                }\n                                            } else {\n                                                this.mappingStatus = eMappingStatus.Error;\n                                                return eMappingStatus.Error;\n                                            }\n                                        }\n                                    });\n                                }\n                            });\n                        break;\n                    case eTransformItemType.JoinPair:\n                        // if this column part of a join add it.\n                        if (item.sourceDatalinkColumn && item.sourceDatalinkColumn.key\n                                === this.datalinkColumn.key) {\n                            let joinTable = nextTransform.joinDatalinkTable;\n                            if (joinTable) {\n                                let column = item.joinDatalinkColumn;\n\n                                if (column) {\n                                    let newImpactTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Join,\n                                        this.datalink, column, null, nextTransform, item, eMappingStatus.Joined, this.hubCache);\n                                    this.impactTree.push(newImpactTree);\n                                } else {\n                                    this.mappingStatus = eMappingStatus.Error;\n                                    return eMappingStatus.Error;\n                                }\n                            } else {\n                                return eMappingStatus.Error;\n                            }\n                        }\n                        break;\n                    case eTransformItemType.Sort:\n                        // if this column part of a sort, add it.\n                        if (item.sourceDatalinkColumn &&\n                                item.sourceDatalinkColumn.key === this.datalinkColumn.key) {\n                            let newImpactTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Sort,\n                                    this.datalink, this.datalinkColumn, null, nextTransform, item, eMappingStatus.Sorted, this.hubCache);\n                            this.impactTree.push(newImpactTree);\n                        }\n                        break;\n                }\n\n            });\n\n            // if the column was not mapped, and the transform passes through columns without mapping, then add it.\n            if (!columnIsMapped && nextTransform.passThroughColumns) {\n                if (this.mappingStatus === eMappingStatus.Mapped) {\n                    newMappingStatus = eMappingStatus.Mapped;\n                } else {\n                    newMappingStatus = eMappingStatus.NotMapped;\n                }\n                let newImpactTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.PassThrough,\n                        this.datalink, this.datalinkColumn, null, nextTransform, null, this.mappingStatus, this.hubCache);\n                let newStatus = newImpactTree.createDatalinkImpact(true);\n                if (newStatus < newMappingStatus) {\n                    newMappingStatus = newStatus;\n                }\n                this.impactTree.push(newImpactTree);\n            }\n\n        } else {\n            // if there is no next transform, then check against the target tables.\n            for (let target of this.datalink.dexihDatalinkTargets) {\n\n                let table = this.hubCache.getTable(target.tableKey);\n\n                if (table) {\n                    let column = table.dexihTableColumns.find(c => c.isValid && c.name === this.datalinkColumn.name);\n                    if (column) {\n                        if (this.mappingStatus === eMappingStatus.Mapped) {\n                            newMappingStatus = eMappingStatus.Mapped;\n                        } else {\n                            if (this.isAutoGenerateColumn(column.deltaType)) {\n                                newMappingStatus = eMappingStatus.AutoGenerate;\n                            } else {\n                                if (!this.datalinkTransform || this.datalinkTransform.passThroughColumns) {\n                                    newMappingStatus = eMappingStatus.PassThroughMap;\n                                } else {\n                                    newMappingStatus = eMappingStatus.NotMapped;\n                                }\n\n                            }\n                        }\n                    } else {\n                        if (this.mappingStatus === eMappingStatus.Mapped) {\n                            newMappingStatus = eMappingStatus.MappedToNothing;\n                        } else {\n                            if (!this.datalinkTransform || this.datalinkTransform.passThroughColumns) {\n                                newMappingStatus = eMappingStatus.PassThroughToNothing;\n                            } else {\n                                newMappingStatus = eMappingStatus.NotMapped;\n                            }\n                    }\n                    }\n                    let newImpactTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Target,\n                            this.datalink, null, column, null, null, newMappingStatus, this.hubCache);\n                    this.impactTree.push(newImpactTree);\n                } else {\n                    if (!this.datalink.isQuery) {\n                        if (this.mappingStatus === eMappingStatus.Mapped) {\n                            newMappingStatus = eMappingStatus.MappedToVirtual;\n                        } else {\n                            newMappingStatus = eMappingStatus.PassThroughToVirtual;\n                        }\n\n                    } else {\n                        newMappingStatus = eMappingStatus.Error;\n                    }\n                }\n\n                if (this.mappingStatus === eMappingStatus.NotMapped) { break; }\n            }\n\n        }\n\n        return newMappingStatus;\n\n\n    }\n\n    public createDatalinkLineage(usePreviousTransform: boolean): eMappingStatus  {\n       this.lineageTree = [];\n       let newMappingStatus: eMappingStatus = eMappingStatus.NotMapped;\n       let currentColumn = this.datalinkColumn;\n\n       if (!currentColumn || this.tableColumn ) {\n            currentColumn = new DexihDatalinkColumn();\n            Object.assign(currentColumn, this.tableColumn);\n       }\n\n        let previousTransform: DexihDatalinkTransform = null;\n        if (usePreviousTransform) {\n            switch (this.objectType) {\n                case  eDatalinkObjectType.SourceTable:\n                    return;\n                case eDatalinkObjectType.Transform:\n                    let transforms = this.datalink.dexihDatalinkTransforms\n                        .filter(c => c.position < this.datalinkTransform.position).sort((a, b) => a.position - b.position); // sort asc\n                    if (transforms.length > 0 ) {\n                        previousTransform = transforms[transforms.length - 1];\n                    }\n                    break;\n                case eDatalinkObjectType.TargetTable:\n                    // check for column types which will populate without mappings (i.e. auto-generate)\n                    if (this.tableColumn && this.isAutoGenerateColumn(this.tableColumn.deltaType)) {\n                        newMappingStatus = eMappingStatus.AutoGenerate;\n                    } else {\n                        newMappingStatus = eMappingStatus.NotMapped;\n                    }\n\n                    if (this.datalink.dexihDatalinkTransforms.length > 0 ) {\n                        // get the last transform.\n                        let transforms2 = this.datalink.dexihDatalinkTransforms.sort((a, b ) => b.position - a.position);\n                        previousTransform = transforms2[0];\n\n                        // map the column name to the transform.\n                        if (this.tableColumn) {\n                            let column = previousTransform['runTime'].outputColumns.find(c => c.name === this.tableColumn.name);\n                            if (column) {\n                                currentColumn = column;\n                            }\n                        } else {\n                            currentColumn = this.datalinkColumn;\n                        }\n\n                    } else {\n                        if (this.tableColumn) {\n                            let outputs = this.datalink.sourceDatalinkTable.dexihDatalinkColumns;\n                            let column = outputs.find(c => c.name === this.tableColumn.name);\n                            if (column) {\n                                currentColumn = column;\n                            }\n                        } else {\n                            currentColumn = this.datalinkColumn;\n                        }\n\n                    }\n                    break;\n            }\n        } else {\n            previousTransform = this.datalinkTransform;\n\n            if (this.datalinkTransform) {\n                previousTransform = this.datalinkTransform;\n           } else {\n               if (this.datalink.dexihDatalinkTransforms.length > 0) {\n                    let transforms = this.datalink.dexihDatalinkTransforms.sort((a, b) => a.position - b.position); // sort desc\n                    previousTransform = transforms[0]; // get last transform\n               }\n           }\n\n        }\n\n        // find all occurrences of the current column in the next transform.\n        if (previousTransform) {\n            let columnIsMapped = false;\n            previousTransform.dexihDatalinkTransformItems.forEach(item => {\n                switch (item.transformItemType) {\n                    case eTransformItemType.Column:\n                    // if this column is mapped, then add it to the impact tree.\n                    if (item.sourceDatalinkColumn &&\n                        item.sourceDatalinkColumn.key) {\n                        let newLineageTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Mapping,\n                            this.datalink, item.sourceDatalinkColumn, null, previousTransform, null,\n                            eMappingStatus.Mapped, this.hubCache);\n                        let newStatus = newLineageTree.createDatalinkLineage(true);\n                        if (newStatus < newMappingStatus) {\n                            newMappingStatus = newStatus;\n                        }\n                        this.lineageTree.push(newLineageTree);\n                        // if (item.sourceDatalinkColumn.name === this.datalinkColumn.name) {\n                            columnIsMapped = true;\n                        // }\n                    }\n                    break;\n                    case eTransformItemType.ColumnPair:\n                        // if this column is mapped, then add it to the impact tree.\n                        if (item.targetDatalinkColumn &&\n                            item.targetDatalinkColumn.key === currentColumn.key\n                            && item.sourceDatalinkColumn) {\n                            let newLineageTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Mapping,\n                                this.datalink, item.sourceDatalinkColumn, null, previousTransform, null,\n                                eMappingStatus.Mapped, this.hubCache);\n                            let newStatus = newLineageTree.createDatalinkLineage(true);\n                            if (newStatus < newMappingStatus) {\n                                newMappingStatus = newStatus;\n                            }\n                            this.lineageTree.push(newLineageTree);\n                            // if (item.sourceDatalinkColumn.name === this.datalinkColumn.name) {\n                                columnIsMapped = true;\n                            // }\n                        }\n                        break;\n                    case eTransformItemType.BuiltInFunction:\n                    case eTransformItemType.CustomFunction:\n\n                        // if this column is mapped, then add it to the impact tree.\n                        if (item.targetDatalinkColumn &&\n                            item.targetDatalinkColumn.key === currentColumn.key) {\n                            newMappingStatus = eMappingStatus.Mapped;\n\n                            let inputParams = this.flattenParameters(item.dexihFunctionParameters\n                                .filter(p => HubCache.parameterIsOutput(p)));\n                            inputParams.filter(c => c.datalinkColumn).forEach(inParam => {\n                                if (inParam.datalinkColumn) {\n                                    let newLineageTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Function,\n                                            this.datalink, inParam.datalinkColumn, null, previousTransform, item,\n                                            eMappingStatus.Mapped, this.hubCache);\n                                    let newStatus = newLineageTree.createDatalinkLineage(true);\n                                    if (newStatus < newMappingStatus) {\n                                        newMappingStatus = newStatus;\n                                    }\n                                    this.lineageTree.push(newLineageTree);\n                                    // if (inParam.datalinkColumn.name === this.datalinkColumn.name) {\n                                        columnIsMapped = true;\n                                    // }\n                                }\n                            });\n                        }\n\n                        // add any output parameters\n                        let outParams = this.flattenParameters(item.dexihFunctionParameters\n                            .filter(p => HubCache.parameterIsOutput(p)));\n                        outParams.filter(c => c.datalinkColumn).forEach(outParam => {\n                                if (outParam.datalinkColumn.key === currentColumn.key) {\n                                    newMappingStatus = eMappingStatus.Mapped;\n                                    item.dexihFunctionParameters\n                                        .filter(p => HubCache.parameterIsOutput(p) && p.datalinkColumn).forEach(inParam => {\n                                    if (inParam.datalinkColumn) {\n                                        let newLineageTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Function,\n                                            this.datalink, inParam.datalinkColumn, null, previousTransform, item,\n                                            eMappingStatus.Mapped, this.hubCache);\n                                        let newStatus = newLineageTree.createDatalinkLineage(true);\n                                        if (newStatus < newMappingStatus) {\n                                            newMappingStatus = newStatus;\n                                        }\n                                        this.lineageTree.push(newLineageTree);\n                                        // if (inParam.datalinkColumn.name === this.datalinkColumn.name) {\n                                            columnIsMapped = true;\n                                        // }\n                                    }\n                                });\n                            }\n\n                        });\n\n\n                        break;\n                    case eTransformItemType.JoinPair:\n                        // if this column part of a join add it.\n                        if (item.sourceDatalinkColumn && item.sourceDatalinkColumn.key === currentColumn.key) {\n                            let table = previousTransform.joinDatalinkTable;\n                            let column = item.joinDatalinkColumn;\n                            if (table && column) {\n                                let newLineageTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Join,\n                                        this.datalink, column, null, previousTransform, item, eMappingStatus.Joined, this.hubCache);\n                                this.lineageTree.push(newLineageTree);\n                            } else {\n                                return eMappingStatus.Error;\n                            }\n                        }\n\n                        break;\n                    case eTransformItemType.Sort:\n                        // if this column part of a sort, add it.\n                        if (item.sourceDatalinkColumn && item.sourceDatalinkColumn.key === currentColumn.key) {\n                            let newLineageTree = new ColumnUsageNode( eDatalinkObjectType.Transform, eObjectUse.Sort,\n                                this.datalink, currentColumn, null, previousTransform, item, eMappingStatus.Sorted, this.hubCache);\n                            this.lineageTree.push(newLineageTree);\n                        }\n\n                        break;\n                }\n\n            });\n\n            // if the column was not mapped, and the transform passes through columns without mapping, then add it.\n            if (!columnIsMapped && previousTransform.passThroughColumns) {\n                if (this.mappingStatus === eMappingStatus.Mapped) {\n                    newMappingStatus = eMappingStatus.Mapped;\n                } else if (this.objectType === eDatalinkObjectType.TargetTable && this.tableColumn &&\n                    this.isAutoGenerateColumn(this.tableColumn.deltaType)) {\n                    newMappingStatus = eMappingStatus.AutoGenerate;\n                }\n                let newLineageTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.PassThrough,\n                        this.datalink, currentColumn, null, previousTransform, null, this.mappingStatus, this.hubCache);\n                let newStatus = newLineageTree.createDatalinkLineage(true);\n                if (newStatus < newMappingStatus) {\n                    newMappingStatus = newStatus;\n                }\n                this.lineageTree.push(newLineageTree);\n            } else if (!columnIsMapped && previousTransform.joinDatalinkTable) {\n                // if there is a join table, then check against that.\n                let table = previousTransform.joinDatalinkTable;\n                let column = table.dexihDatalinkColumns.find(c => c.isValid && c.name === currentColumn.name);\n                if (column) {\n                    if (this.mappingStatus === eMappingStatus.Mapped) {\n                        newMappingStatus = eMappingStatus.Mapped;\n                    } else if (newMappingStatus === eMappingStatus.NotMapped) {\n                        newMappingStatus = eMappingStatus.PassThroughMap;\n                    }\n                    let newLineageTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Join, this.datalink,\n                        column, null, null, null, newMappingStatus, this.hubCache);\n                    this.lineageTree.push(newLineageTree);\n                }\n            } else if (!columnIsMapped) {\n                if (newMappingStatus !== eMappingStatus.AutoGenerate) {\n                    newMappingStatus = eMappingStatus.NotMapped;\n                }\n            } else {\n                newMappingStatus = eMappingStatus.Mapped;\n            }\n        } else {\n            // if there is no previous transform, then check against the source table.\n            let table = this.datalink.sourceDatalinkTable;\n            let column = table.dexihDatalinkColumns.find(c => c.isValid && c.name === currentColumn.name);\n            if (column) {\n                if (this.mappingStatus === eMappingStatus.Mapped) {\n                    newMappingStatus = eMappingStatus.Mapped;\n                } else if (newMappingStatus === eMappingStatus.NotMapped) {\n                    newMappingStatus = eMappingStatus.PassThroughMap;\n                }\n            } else {\n                if (this.mappingStatus === eMappingStatus.Mapped) {\n                    newMappingStatus = eMappingStatus.MappedToNothing;\n                } else if (!newMappingStatus) {\n                    newMappingStatus = eMappingStatus.PassThroughToNothing;\n                }\n            }\n            let newLineageTree = new ColumnUsageNode(eDatalinkObjectType.Transform, eObjectUse.Source, this.datalink,\n                    column, null, null, null, newMappingStatus, this.hubCache);\n            this.lineageTree.push(newLineageTree);\n\n        }\n\n        return newMappingStatus;\n    }\n\n\n    public isAutoGenerateColumn(deltaType: eDeltaType): boolean {\n        let returnValue: boolean;\n        switch (deltaType) {\n            case eDeltaType.AutoIncrement:\n            case eDeltaType.DbAutoIncrement:\n            case eDeltaType.Version:\n            case eDeltaType.ValidFromDate:\n            case eDeltaType.ValidToDate:\n            case eDeltaType.PartitionKey:\n            case eDeltaType.RowKey:\n            case eDeltaType.CreateAuditKey:\n            case eDeltaType.CreateDate:\n            case eDeltaType.FileName:\n            case eDeltaType.IsCurrentField:\n            case eDeltaType.RejectedReason:\n            case eDeltaType.SourceSurrogateKey:\n            case eDeltaType.TimeStamp:\n            case eDeltaType.UpdateAuditKey:\n            case eDeltaType.UpdateDate:\n            case eDeltaType.ValidationStatus: {\n                returnValue = true;\n            }\n            break;\n            default:\n                returnValue = false;\n        }\n        return returnValue;\n    }\n\n}\n\n\n\n","import { BehaviorSubject} from 'rxjs';\nimport { Message } from '../+auth/auth.models';\nimport { DexihHubVariable, DexihHub, DexihFunctionParameter, DexihConnection, DexihTable,\n    DexihTableColumn, DexihDatalinkTransform, DexihColumnValidation, DexihFileFormat, DexihDatalink,\n    DexihDatalinkTest, DexihDatajob, DexihView, DexihDashboard, DexihApi, DexihCustomFunction,\n    DexihTrigger, TransformProperties, eStatus, eParameterDirection, eConnectionPurpose, eDeltaType,\n    eSourceType, eImportAction, eSecurityFlag, eUpdateStrategy, eFailAction, eInvalidAction,\n    eFunctionCaching, eCleanAction, eRunStatus, ePermission, eTypeCode,\n    eTransformWriterMethod, eTransformItemType, eFunctionType, eDataObjectType, eSharedObjectType,\n    eSortDirection, eSeriesGrain, eDayOfWeek, ChartConfig, eLOVObjectType, DexihListOfValues, InputParameterBase,\n    DexihDatalinkTestStep, eTransformTypeItems, eTransformType, DexihTag, ViewConfig } from '../shared/shared.models';\n\n// export class RemoteMessage {\n//     public messageId: string;\n//     public securityToken: string;\n//     public remoteAgentId: string;\n//     public method: string;\n//     public hubKey: number;\n//     public success: boolean;\n//     public message: string;\n//     public exceptionDetails: string;\n//     public cache: HubCache;\n//     public parameters: Array<Parameter>;\n//     public hubVariables: Array<DexihHubVariable>;\n//     public value;\n\n//     constructor () {\n//     }\n// }\n\nexport enum eCacheStatus {\n    NoHub,\n    NotLoaded,\n    Loading,\n    Loaded,\n    Error\n};\n\nexport class EntityStatus {\n    public lastStatus: eStatus;\n    public message: string;\n    public isBusy: boolean;\n\n    public constructor() {\n        this.isBusy = false;\n        this.lastStatus = eStatus.None;\n    }\n}\n\nexport class Parameter {\n    public key: string;\n    public value;\n}\n\nexport enum eSearchObjectType {\n    All,\n    Connection,\n    Table,\n    TableColumn,\n    FileFormat,\n    Datalink,\n    Datajob,\n    ColumnValidation,\n    View,\n    Api,\n    Dashboard,\n    ListOfValues,\n    DatalinkTest\n}\n\nexport const SearchObjectTypes = [\n    {key: eSearchObjectType.All, name: 'All'},\n    {key: eSearchObjectType.Connection, name: 'Connection'},\n    {key: eSearchObjectType.Table, name: 'Table'},\n    {key: eSearchObjectType.TableColumn, name: 'Table Column'},\n    {key: eSearchObjectType.FileFormat, name: 'File Format'},\n    {key: eSearchObjectType.Datalink, name: 'Datalink'},\n    {key: eSearchObjectType.Datajob, name: 'Datajob'},\n    {key: eSearchObjectType.ColumnValidation, name: 'Column Validation'},\n    {key: eSearchObjectType.View, name: 'View'},\n    {key: eSearchObjectType.Api, name: 'Api'},\n    {key: eSearchObjectType.Dashboard, name: 'Dashboard'},\n    {key: eSearchObjectType.ListOfValues, name: 'List of Values'},\n    {key: eSearchObjectType.DatalinkTest, name: 'Datalink Test'},\n];\n\nexport class SearchResult {\n    public object: any;\n    public objectParent: any;\n    public objectType: eSearchObjectType;\n\n    constructor(object: any, objectParent, objectType: eSearchObjectType) {\n        this.object = object;\n        this.objectType = objectType;\n        this.objectParent = objectParent;\n    }\n}\n\n\nexport class SharedObjectProperty {\n    public type: eSharedObjectType;\n    public parentType: eSharedObjectType;\n    public name: string;\n    public parentKey: string;\n    public property: string;\n    public cacheProperty: string;\n    public cacheAddMethod: string;\n    public cacheGetMethod: string;\n    public icon: string;\n    public routerLink: string;\n    public displayName: string;\n    public description: string;\n}\n\nexport const sharedObjectProperties: SharedObjectProperty[] = [\n    {\n        type: eSharedObjectType.Connection, name: 'Connection', cacheProperty: 'dexihConnections', property: 'connections',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddConnection', cacheGetMethod: '',\n        icon: 'fa-database', routerLink: 'connections',\n        displayName: 'Connections', description: 'Connections to data sources such as databases, flat files and web services.'\n    },\n    {\n        type: eSharedObjectType.Table, name: 'Table', cacheProperty: 'dexihTables', property: 'tables',\n        parentKey: 'connectionKey', parentType: eSharedObjectType.Connection, cacheAddMethod: 'cacheAddTable',\n        cacheGetMethod: 'getTableCache', icon: 'fa-table', routerLink: 'tables',\n        displayName: 'Tables', description: 'References to structured and unstructured datasets.'\n    },\n    {\n        type: eSharedObjectType.Datalink, name: 'Datalink', cacheProperty: 'dexihDatalinks', property: 'datalinks',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddDatalink', cacheGetMethod: 'getDatalinkCache',\n        icon: 'fa-exchange', routerLink: 'datalinks',\n        displayName: 'Datalinks', description: 'Runnable or queryable data sets of data transformations.'\n    },\n    {\n        type: eSharedObjectType.Datajob, name: 'Datajob', cacheProperty: 'dexihDatajobs', property: 'datajobs',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddDatajob',\n        cacheGetMethod: 'getDatajobCache', icon: 'fa-calendar', routerLink: 'datajobs',\n        displayName: 'Jobs and Schedules',\n        description: 'Job which can be scheduled or run on demand, which contains a sequence of datalinks'\n    },\n    {\n        type: eSharedObjectType.View, name: 'View', cacheProperty: 'dexihViews', property: 'views',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddView',\n        cacheGetMethod: 'getViewCache', icon: 'fa-bar-chart', routerLink: 'views',\n        displayName: 'Views', description: 'Charts and tabular views of table or datalinks outputs.'\n    },\n    {\n        type: eSharedObjectType.Dashboard, name: 'Dashboard', cacheProperty: 'dexihDashboards', property: 'dashboards',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddDashboard',\n        cacheGetMethod: 'getDashboardCache', icon: 'fa-pie-chart', routerLink: 'dashboards',\n        displayName: 'Dashboards', description: 'A collection of views gathered into a single dashboard.'\n    },\n    {\n        type: eSharedObjectType.Api, name: 'Api', cacheProperty: 'dexihApis', property: 'apis',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddApi',\n        cacheGetMethod: 'getApiCache', icon: 'fa-feed', routerLink: 'apis',\n        displayName: 'Api\\'s', description: 'Published Rest based Api\\'s which can be used to access data using third party tools'\n    },\n    {\n        type: eSharedObjectType.FileFormat, name: 'FileFormat', cacheProperty: 'dexihFileFormats', property: 'fileFormats',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddFileFormat',\n        cacheGetMethod: '', icon: 'fa-file-text-o', routerLink: 'fileFormats',\n        displayName: 'File Formats', description: 'Definitions for delimited flat files'\n    },\n    {\n        type: eSharedObjectType.ColumnValidation, name: 'ColumnValidation', cacheProperty: 'dexihColumnValidations',\n        property: 'columnValidations',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddColumnValidation',\n        cacheGetMethod: 'getColumnValidationCache', icon: 'fa-check-square-o',\n        routerLink: 'columnValidations',\n        displayName: 'Column Validations', description: 'Validation rule that can be applied to columns within a table.'\n    },\n    {\n        type: eSharedObjectType.HubVariable, name: 'HubVariable', cacheProperty: 'dexihHubVariables', property: 'hubVariables',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddHubVariable',\n        cacheGetMethod: '', icon: 'fa-fw fa-at', routerLink: 'hubVariables',\n        displayName: 'Variables', description: 'Variables which can be used as global configuration throughout the hub.'\n    },\n    {\n        type: eSharedObjectType.ListOfValues, name: 'List Of Values', cacheProperty: 'dexihListOfValues', property: 'listOfValues',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddListOfValues',\n        cacheGetMethod: 'getListOfValuesCache', icon: 'fa-list-alt', routerLink: 'listOfValues',\n        displayName: 'List Of Values',\n        description: 'List of values which can be used for parameter drop downs and validations.'\n    },\n    {\n        type: eSharedObjectType.CustomFunction, name: 'CustomFunction', cacheProperty: 'dexihCustomFunctions', property: 'customFunctions',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddCustomFunction',\n        cacheGetMethod: '', icon: 'fa-code', routerLink: 'customFunctions',\n        displayName: 'Functions', description: 'Custom c# functions which can be used in datalinks.'\n    },\n    {\n        type: eSharedObjectType.DatalinkTest, name: 'DatalinkTest', cacheProperty: 'dexihDatalinkTests', property: 'datalinkTests',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddDatalinkTest',\n        cacheGetMethod: 'getDatalinkTestCache', icon: 'fa-flag-checkered', routerLink: 'datalinkTests',\n        displayName: 'Datalink Tests',\n        description: 'Regression tests which can be used to ensure datalinks function after upgrades or modification.'\n    },\n    {\n        type: eSharedObjectType.Tags, name: 'Tag', cacheProperty: 'dexihTags', property: 'tags',\n        parentKey: '', parentType: null, cacheAddMethod: 'cacheAddTag',\n        cacheGetMethod: 'getTagCache', icon: 'fa-tags', routerLink: 'tags',\n        displayName: 'Tags',\n        description: 'Tags can be used to group and categorize objects as needed.'\n    },\n];\n\nexport class SharedObject {\n    public type: eSharedObjectType;\n    public item: any;\n    public parentItem: any;\n    public key: number;\n    public name: string;\n    public label: string;\n    public updateDate: Date;\n    public description: string;\n    public tags: DexihTag[];\n}\n\nexport class HubCacheChange {\n    constructor(\n        public changeClass: eSharedObjectType,\n        public changeType: eImportAction,\n        public data: any\n    ) {}\n}\n\n\nexport class HubCache {\n\n    public hub: DexihHub;\n\n    public hubPermission: ePermission;\n\n    public readonly status: eCacheStatus;\n\n    private _sequenceGenerator = 0;\n\n    public static parameterIsOutput(p: DexihFunctionParameter): boolean {\n        return p.direction === eParameterDirection.Output\n        || p.direction === eParameterDirection.ResultOutput\n        || p.direction === eParameterDirection.ResultReturnValue\n        || p.direction === eParameterDirection.ReturnValue\n    }\n\n    public static parameterIsInput(p: DexihFunctionParameter): boolean {\n        return p.direction === eParameterDirection.Input\n        || p.direction === eParameterDirection.ResultInput\n    }\n\n    constructor(status: eCacheStatus, hub: DexihHub)  {\n        this.status = status;\n        if (hub) {\n            this.hub = hub;\n        }\n    }\n\n    get canAdministrate(): boolean {\n        if (this.hub) {\n            return this.hubPermission === ePermission.Owner;\n        }\n\n        return false;\n    }\n\n    get canRead(): boolean {\n        if (this.hub) {\n            return this.hubPermission === ePermission.Owner ||\n                this.hubPermission === ePermission.FullReader ||\n                this.hubPermission === ePermission.User;\n        }\n\n        return false;\n    }\n\n    get canWrite(): boolean {\n        if (this.hub) {\n            return this.hubPermission === ePermission.Owner ||\n                this.hubPermission === ePermission.User;\n        }\n\n        return false;\n    }\n\n    // create a simple unique, sequence, starting from -1, which is used to generate temporary keys.\n    public getNextSequence(): number {\n        this._sequenceGenerator--;\n        return this._sequenceGenerator;\n    }\n\n    public getManagedConnections(): Array<DexihConnection> {\n        let connections = this.hub.dexihConnections.filter(c => c.purpose === eConnectionPurpose.Managed && c.isValid);\n        return connections;\n    }\n\n    public getCacheItem(itemType: eSharedObjectType, key: number) {\n        if (!this.hub) { return; }\n\n        switch (itemType) {\n            case eSharedObjectType.Api:\n                return this.hub.dexihApis.find(c => c.key === key && c.isValid);\n            case eSharedObjectType.ColumnValidation:\n                return this.hub.dexihColumnValidations.find(c => c.key === key && c.isValid);\n            case eSharedObjectType.Connection:\n                return this.hub.dexihConnections.find(c => c.key === key && c.isValid);\n            case eSharedObjectType.CustomFunction:\n                return this.hub.dexihCustomFunctions.find(c => c.key === key && c.isValid);\n            case eSharedObjectType.Datajob:\n                return this.hub.dexihDatajobs.find(c => c.key === key && c.isValid);\n            case eSharedObjectType.Datalink:\n                return this.hub.dexihDatalinks.find(c => c.key === key && c.isValid);\n            case eSharedObjectType.DatalinkTest:\n                return this.hub.dexihDatalinkTests.find(c => c.key === key && c.isValid);\n            case eSharedObjectType.FileFormat:\n                return this.hub.dexihFileFormats.find(c => c.key === key && c.isValid);\n            case eSharedObjectType.HubVariable:\n                return this.hub.dexihHubVariables.find(c => c.key === key && c.isValid);\n            case eSharedObjectType.Table:\n                return this.getTable(key);\n            case eSharedObjectType.View:\n                return this.hub.dexihViews.find(c => c.key === key && c.isValid);\n        }\n\n        return null;\n    }\n\n    isLoaded(): boolean {\n        return this.status === eCacheStatus.Loaded;\n    }\n\n    getHubUrl(): string {\n        return '/hub/' + this.hub.hubKey;\n    }\n\n    public getObjectTags(objectType: eSharedObjectType, key: number): DexihTag[] {\n        let tags = this.hub.dexihTagObjects\n                        .filter(to => to.objectType === objectType && to.objectKey === key)\n                        .map(to => this.hub.dexihTags.find(e => e.key === to.tagKey));\n        return tags;\n    }\n\n    public getConnection(connectionKey): DexihConnection {\n        let connection = this.hub.dexihConnections.find(c => c.key === connectionKey);\n        return connection;\n    }\n\n    public getConnectionCopy(connectionKey): DexihConnection {\n        let connection = this.hub.dexihConnections.find(c => c.key === connectionKey);\n        let connectionCopy = Object.assign({}, connection);\n        return connectionCopy;\n    }\n\n    public getTable(tableKey: number): DexihTable {\n        let hub = this.hub;\n        let table = hub.dexihTables.find(c => c.key === tableKey);\n        return table;\n    }\n\n    public getTransformName(transform: DexihDatalinkTransform): string {\n        if (transform.name) {\n            return transform.name;\n        }\n\n        let name = eTransformTypeItems[transform.transformType].name;\n\n        switch(transform.transformType) {\n            case eTransformType.Join:\n            case eTransformType.Lookup:\n                name = name + ' ' + transform.joinDatalinkTable.name;\n        }\n\n        if(transform.nodeDatalinkColumn) {\n            name = name + ' at ' + transform.nodeDatalinkColumn.name\n        }\n\n        return name;\n    }\n\n    public getColumn(columnKey: number) {\n        let hub = this.hub;\n        for (let i = 0; i < hub.dexihTables.length; i++) {\n            let table = hub.dexihTables[i];\n            let column = table.dexihTableColumns.find(c => c.key === columnKey);\n            if (column) { return column; }\n        }\n        return null;\n    }\n\n    public getDatalinkTestStep(datalinkTestStepKey: number): DexihDatalinkTestStep {\n        let hub = this.hub;\n        for (let test of hub.dexihDatalinkTests) {\n            let testStep = test.dexihDatalinkTestSteps.find(c => c.key === datalinkTestStepKey);\n            if (testStep) {\n                return testStep;\n            }\n        }\n        return null;\n    }\n\n\n    public newColumn(table: DexihTable, deltaType: eDeltaType): DexihTableColumn {\n        let column = new DexihTableColumn();\n        // if new column, then set a temporary key of -1 or lower.\n        let minKey = -1;\n        let maxPos = 0;\n        table.dexihTableColumns.forEach(t => {\n            if (t.key <= minKey ) {\n                minKey = t.key - 1;\n            }\n            if (t.position >= maxPos) {\n                maxPos = t.position + 1;\n            }\n        });\n        column.key = minKey;\n        column.position = maxPos;\n\n        if (deltaType != null) {\n            column.deltaType = deltaType;\n\n            let deltaTypeDetail = deltaTypes.find(c => c.key === deltaType);\n\n            if (deltaTypeDetail.unique) {\n                let index = table.dexihTableColumns.findIndex(c => c.deltaType === deltaType);\n                if (index >= 0) {\n                    return null;\n                }\n            }\n\n            if (deltaTypeDetail.defaultName) {\n                column.name = deltaTypeDetail.defaultName;\n                column.logicalName = deltaTypeDetail.defaultName;\n                column.dataType = deltaTypeDetail.dataType;\n\n                if (deltaType === eDeltaType.AutoIncrement || deltaType === eDeltaType.DbAutoIncrement) {\n                    column.name =  table.name + 'Key';\n                    column.logicalName = column.name;\n                }\n            }\n       }\n\n       return column;\n    }\n\n    private addColumn(table: DexihTable, deltaType: eDeltaType, name: string, dataType: eTypeCode, allowDbNull: boolean) {\n        let column = this.newColumn(table, deltaType);\n        column.name = name;\n        column.logicalName = name;\n        column.allowDbNull = allowDbNull;\n        column.dataType = dataType;\n        table.dexihTableColumns.push(column);\n    }\n\n    public getProfileTable(name: string, connectionKey: number): DexihTable {\n        let table = new DexihTable();\n        table.connectionKey = connectionKey;\n        table.name = name;\n        table.logicalName = name;\n        table.key = this.getNextSequence();\n\n        this.addColumn(table, eDeltaType.TrackingField, 'AuditKey', eTypeCode.Int64, false);\n        this.addColumn(table, eDeltaType.TrackingField, 'Profile', eTypeCode.String, false);\n        this.addColumn(table, eDeltaType.TrackingField, 'ColumnName', eTypeCode.String, false);\n        this.addColumn(table, eDeltaType.TrackingField, 'IsSummary', eTypeCode.Boolean, false);\n        this.addColumn(table, eDeltaType.TrackingField, 'Value', eTypeCode.String, true);\n        this.addColumn(table, eDeltaType.TrackingField, 'Count', eTypeCode.Int32, true);\n\n        return table;\n    }\n\n\n\n    public getConnectionTables(): ConnectionTables[] {\n        let connections: ConnectionTables[] = [];\n        this.hub.dexihConnections.forEach(c => {\n            let newConnection = <ConnectionTables> Object.assign({}, c);\n            let tables = this.hub.dexihTables.filter(t => c.key === t.connectionKey && t.isValid);\n            newConnection.dexihTables = tables;\n            connections.push(newConnection);\n        });\n\n        return connections;\n    }\n\n    public getTables(): DexihTable[] {\n        return this.hub.dexihTables;\n    }\n\n    public getDatalinkTransform(datalinkTransformKey: number): DexihDatalinkTransform {\n        for (let i = 0; i < this.hub.dexihDatalinks.length; i++) {\n            let datalink = this.hub.dexihDatalinks[i];\n            for (let j = 0; j < datalink.dexihDatalinkTransforms.length; j++) {\n                if (datalink.dexihDatalinkTransforms[j].key === datalinkTransformKey) {\n                    return datalink.dexihDatalinkTransforms[j];\n                }\n            }\n        }\n\n        return null;\n    }\n\n    public getColumnValidation(columnValidationKey: number): DexihColumnValidation {\n        let columnValidation: DexihColumnValidation = null;\n        if (this.hub.dexihColumnValidations) {\n            columnValidation = this.hub.dexihColumnValidations.find(c => c.key === columnValidationKey);\n        }\n        if (!columnValidation) {\n            columnValidation = new DexihColumnValidation();\n            columnValidation.name = 'No validation';\n        }\n\n        return columnValidation;\n    }\n\n    public getFileFormat(fileFormatKey: number): DexihFileFormat {\n        let fileFormat: DexihFileFormat = null;\n        if (this.hub.dexihFileFormats) {\n            fileFormat = this.hub.dexihFileFormats.find(c => c.key === fileFormatKey);\n        }\n        return fileFormat;\n    }\n\n    public search(search: string, searchObject: eSearchObjectType): Array<SearchResult> {\n        const results = Array<SearchResult>();\n\n        if (!search) {\n            return results;\n        }\n\n        search = search.toLowerCase();\n\n        let searchAll = searchObject === eSearchObjectType.All;\n\n        this.hub.dexihConnections.forEach(connection => {\n            if (searchAll || searchObject === eSearchObjectType.Connection) {\n                this.searchItem(search, connection, null, eSearchObjectType.Connection, results);\n            }\n        });\n\n\n        this.hub.dexihTables.forEach(table => {\n            if (searchAll || searchObject === eSearchObjectType.Table) {\n                let connection = this.hub.dexihConnections.find(c => c.key === table.connectionKey);\n                this.searchItem(search, table, connection, eSearchObjectType.Table, results);\n            }\n\n            if (searchAll || searchObject === eSearchObjectType.TableColumn) {\n                table.dexihTableColumns.forEach(column => {\n                    this.searchItem(search, column, table, eSearchObjectType.TableColumn, results);\n                })\n            }\n        });\n\n        if (searchAll || searchObject === eSearchObjectType.Datalink) {\n            this.hub.dexihDatalinks.forEach(datalink => {\n                this.searchItem(search, datalink, null, eSearchObjectType.Datalink, results);\n            });\n        }\n        if (searchAll || searchObject === eSearchObjectType.Datajob) {\n            this.hub.dexihDatajobs.forEach(datajob => {\n                this.searchItem(search, datajob, null, eSearchObjectType.Datajob, results);\n            });\n        }\n        if (searchAll || searchObject === eSearchObjectType.ColumnValidation) {\n            this.hub.dexihColumnValidations.forEach(columnValidation => {\n                this.searchItem(search, columnValidation, null, eSearchObjectType.ColumnValidation, results);\n            });\n        }\n        if (searchAll || searchObject === eSearchObjectType.FileFormat) {\n            this.hub.dexihFileFormats.forEach(fileFormat => {\n                this.searchItem(search, fileFormat, null, eSearchObjectType.FileFormat, results);\n            });\n        }\n        if (searchAll || searchObject === eSearchObjectType.View) {\n            this.hub.dexihViews.forEach(view => {\n                this.searchItem(search, view, null, eSearchObjectType.View, results);\n            });\n        }\n        if (searchAll || searchObject === eSearchObjectType.Api) {\n            this.hub.dexihApis.forEach(api => {\n                this.searchItem(search, api, null, eSearchObjectType.Api, results);\n            });\n        }\n        if (searchAll || searchObject === eSearchObjectType.Dashboard) {\n            this.hub.dexihDashboards.forEach(d => {\n                this.searchItem(search, d, null, eSearchObjectType.Dashboard, results);\n            });\n        }\n        if (searchAll || searchObject === eSearchObjectType.ListOfValues) {\n            this.hub.dexihListOfValues.forEach(d => {\n                this.searchItem(search, d, null, eSearchObjectType.ListOfValues, results);\n            });\n        }\n        if (searchAll || searchObject === eSearchObjectType.DatalinkTest) {\n            this.hub.dexihDatalinkTests.forEach(d => {\n                this.searchItem(search, d, null, eSearchObjectType.DatalinkTest, results);\n            });\n        }\n        return results;\n    }\n\n    public searchItem(search: string, item: any, itemParent: any, objectType: eSearchObjectType, results: Array<SearchResult>) {\n        const keys = Object.keys(item);\n        let found = false;\n        keys.forEach(key => {\n            if (!found) {\n                if ((typeof item[key] === 'string' || item[key] instanceof String)) {\n                    if (item[key].toLowerCase().indexOf(search) > -1) {\n                        results.push(new SearchResult(item, itemParent, objectType));\n                        found = true;\n                    }\n                }\n            }\n        });\n    }\n\n\n    public dataTypeToString(column: any): string {\n        let value = eTypeCode[column.dataType];\n\n        if (this.dataTypeIsString(column.dataType) && column.maxLength) {\n            value = value + '(' + column.maxLength + ')';\n        }\n        if (this.dataTypeIsDecimal(column.dataType) && (column.precision || column.scale)) {\n            value = value + '(' + column.precision + ',' + column.scale + ')';\n        }\n        if (column.dataType === eTypeCode.Node && column.childColumns) {\n            value = value + '(' + column.childColumns.length + ')';\n        }\n\n        for (let i = 0; i < column.rank; i++) {\n            value = value + '[]';\n        }\n\n\n        return value;\n    }\n\n    public dataTypeIsString(dataType: eTypeCode): boolean {\n        return dataType === eTypeCode.String || dataType === eTypeCode.CharArray;\n    }\n\n    public dataTypeIsDecimal(dataType: eTypeCode): boolean {\n        return dataType === eTypeCode.Double || dataType === eTypeCode.Decimal || dataType === eTypeCode.Single;\n    }\n\n    public defaultTableLogicalName(schema: string, name: string): string {\n        if (schema) {\n            return schema + '.' + name;\n        } else {\n            return name;\n        }\n    }\n\n    /**\n     * Adds the datalink dependencies to the cache\n     * @constructor\n     * @param {DexihDatalink} datalink - The datalink to search dependencies\n     * @param {DexihHub} hub - The hub to add the dependencies to.\n     */\n    public getDatalinkCache(datalink: DexihDatalink, hub: DexihHub): DexihHub {\n        if (datalink.sourceDatalinkTable.sourceType === eSourceType.Datalink) {\n            this.cacheAddDatalink(datalink.sourceDatalinkTable.sourceDatalinkKey, hub);\n        } else if (datalink.sourceDatalinkTable.sourceType === eSourceType.Table) {\n            this.cacheAddTable(datalink.sourceDatalinkTable.sourceTableKey, hub);\n        }\n        this.cacheAddConnection(datalink.auditConnectionKey, hub);\n        this.getParametersCache(datalink.parameters, hub);\n\n        datalink.dexihDatalinkTargets.forEach(target => {\n            this.cacheAddTable(target.tableKey, hub);\n        });\n\n        datalink.dexihDatalinkTransforms.forEach(t => {\n            if (t.joinDatalinkTable) {\n                if (t.joinDatalinkTable.sourceType === eSourceType.Datalink) {\n                    this.cacheAddDatalink(t.joinDatalinkTable.sourceDatalinkKey, hub);\n                } else if (t.joinDatalinkTable.sourceType === eSourceType.Table) {\n                    this.cacheAddTable(t.joinDatalinkTable.sourceTableKey, hub);\n                }\n            }\n\n            t.dexihDatalinkTransformItems.forEach(ti => {\n                if (ti.customFunctionKey) {\n                    this.cacheAddCustomFunction(ti.customFunctionKey, hub);\n                }\n            })\n        });\n        return hub;\n    }\n\n\n    /**\n     * Adds the datalinkTest dependencies to the cache\n     * @constructor\n     * @param {DexihDatalinkTest} datalinkTest - The datalinkTest to search dependencies\n     * @param {DexihHub} hub - The hub to add the dependencies to.\n     */\n    public getDatalinkTestCache(datalinkTest: DexihDatalinkTest, hub: DexihHub): DexihHub {\n        datalinkTest.dexihDatalinkTestSteps.forEach(step => {\n            const datalinkDup = hub.dexihDatalinks.find(c => c.key === step.datalinkKey);\n            if (!datalinkDup) {\n                const datalink = this.hub.dexihDatalinks.find(c => c.key === step.datalinkKey);\n                if (datalink) {\n                    this.getDatalinkCache(datalink, hub);\n                    hub.dexihDatalinks.push(datalink);\n                }\n            }\n            this.cacheAddConnection(step.expectedConnectionKey, hub);\n            this.cacheAddConnection(step.targetConnectionKey, hub);\n\n            step.dexihDatalinkTestTables.forEach(c => {\n                this.cacheAddConnection(c.sourceConnectionKey, hub);\n                this.cacheAddConnection(c.testConnectionKey, hub);\n            });\n        });\n\n        return hub;\n    }\n\n    public getTableCache(table: DexihTable, hub: DexihHub): DexihHub {\n        this.cacheAddConnection(table.connectionKey, hub);\n        return hub;\n    }\n\n    public getDatajobCache(datajob: DexihDatajob, hub: DexihHub): DexihHub {\n        this.cacheAddConnection(datajob.auditConnectionKey, hub);\n        this.getParametersCache(datajob.parameters, hub);\n\n        datajob.dexihDatalinkSteps.forEach(step => {\n            this.getParametersCache(step.parameters, hub);\n\n            const datalinkDup = hub.dexihDatalinks.find(c => c.key === step.datalinkKey);\n            if (!datalinkDup) {\n                const datalink = this.hub.dexihDatalinks.find(c => c.key === step.datalinkKey);\n                if (datalink) {\n                    this.getDatalinkCache(datalink, hub);\n                    hub.dexihDatalinks.push(datalink);\n                }\n            }\n        });\n\n        return hub;\n    }\n\n    public getColumnValidationCache(columnValidation: DexihColumnValidation, hub: DexihHub): DexihHub {\n        if (columnValidation.lookupColumnKey > 0) {\n            let lookupColumn = this.getColumn(columnValidation.lookupColumnKey);\n            this.cacheAddTable(lookupColumn.tableKey, hub);\n        }\n\n        return hub;\n    }\n\n    public getViewCache(view: DexihView, hub: DexihHub): DexihHub {\n        this.cacheAddDatalink(view.sourceDatalinkKey, hub);\n        this.cacheAddTable(view.sourceTableKey, hub);\n        this.getParametersCache(view.parameters, hub);\n\n        return hub;\n    }\n\n    public getDashboardCache(dashboard: DexihDashboard, hub: DexihHub): DexihHub {\n        dashboard.dexihDashboardItems.forEach(item => {\n            this.cacheAddView(item.viewKey, hub);\n        });\n        this.getParametersCache(dashboard.parameters, hub);\n\n        return hub;\n    }\n\n    public getParametersCache(parameters: InputParameterBase[], hub: DexihHub): DexihHub {\n        parameters.forEach(parameter => {\n            this.cacheAddListOfValues(parameter.listOfValuesKey, hub);\n        });\n\n        return hub;\n    }\n\n    public getListOfValuesCache(lov: DexihListOfValues, hub: DexihHub): DexihHub {\n        this.cacheAddDatalink(lov.sourceDatalinkKey, hub);\n        this.cacheAddTable(lov.sourceTableKey, hub);\n\n        return hub;\n    }\n\n    public getApiCache(api: DexihApi, hub: DexihHub): DexihHub {\n        this.cacheAddDatalink(api.sourceDatalinkKey, hub);\n        this.cacheAddTable(api.sourceTableKey, hub);\n        this.getParametersCache(api.parameters, hub);\n\n        return hub;\n    }\n\n    public getSharedObjects(): SharedObject[] {\n        let data: SharedObject[] = [];\n\n        sharedObjectProperties.forEach(o => {\n            let parentObject;\n            if (o.parentType) {\n                parentObject = sharedObjectProperties.find(c => c.type === o.parentType);\n            }\n\n            data = data.concat(this.hub[o.cacheProperty].map(item => {\n                let parentItem: any;\n\n                if (parentObject) {\n                    parentItem = this.hub[parentObject.cacheProperty].find(c => c.key === item[o.parentKey]);\n                }\n\n                let obj: SharedObject = {\n                    item: item,\n                    label: o.name,\n                    type: o.type,\n                    parentItem: parentItem,\n                    key: item.key,\n                    name: (parentItem ? `(${parentItem.name}) ` : '' ) + item.name,\n                    description: item.description,\n                    updateDate: item.updateDate,\n                    tags: this.getObjectTags(o.type, item.key)\n                };\n\n                return obj;\n            }));\n        });\n\n        return data;\n    }\n\n    public cacheAddObject(sharedType: eSharedObjectType, item: any, hub: DexihHub) {\n        let sharedObject = sharedObjectProperties.find(c => c.type === sharedType);\n        let key = item.key;\n\n        this[sharedObject.cacheAddMethod](key, hub);\n\n    }\n\n    public cacheAddObjectFromKey(sharedType: eSharedObjectType, key: number, hub: DexihHub) {\n        let sharedObject = sharedObjectProperties.find(c => c.type === sharedType);\n        this[sharedObject.cacheAddMethod](key, hub);\n    }\n\n    public cacheAddDatajob(datajobKey: number, hub: DexihHub): DexihDatajob {\n        // check if datajob is already added.\n        const dup = hub.dexihDatajobs.find(c => c.key === datajobKey);\n        if (!dup) {\n            let datajob = this.hub.dexihDatajobs.find(c => c.key === datajobKey);\n            if (datajob) {\n                this.getDatajobCache(datajob, hub);\n\n                let datajobCopy = Object.assign({}, datajob);\n                datajobCopy['currentStatus'] = null;\n                datajobCopy['previousStatus'] = null;\n\n                hub.dexihDatajobs.push(datajobCopy);\n            }\n            return datajob;\n        }\n\n        return null;\n    }\n\n    public cacheAddDatalink(datalinkKey: number, hub: DexihHub): DexihDatalink {\n        // check if datalink is already added.\n        const dupDatalink = hub.dexihDatalinks.find(c => c.key === datalinkKey);\n        if (!dupDatalink) {\n            let datalink = this.hub.dexihDatalinks.find(c => c.key === datalinkKey);\n            if (datalink) {\n                this.getDatalinkCache(datalink, hub);\n\n                let datalinkCopy = Object.assign({}, datalink);\n                datalinkCopy['currentStatus'] = null;\n                datalinkCopy['entityStatus'] = null;\n                datalinkCopy['previousStatus'] = null;\n\n                hub.dexihDatalinks.push(datalinkCopy);\n            }\n            return datalink;\n        }\n\n        return null;\n    }\n\n    public cacheAddDatalinkTest(datalinkTestKey: number, hub: DexihHub): DexihDatalinkTest {\n        // check if datalink is already added.\n        const dupDatalinkTest = hub.dexihDatalinkTests.find(c => c.key === datalinkTestKey);\n        if (!dupDatalinkTest) {\n            let datalinkTest = this.hub.dexihDatalinkTests.find(c => c.key === datalinkTestKey);\n            if (datalinkTest) {\n                this.getDatalinkTestCache(datalinkTest, hub);\n\n                let datalinkTestCopy = Object.assign({}, datalinkTest);\n                datalinkTestCopy['currentStatus'] = null;\n                datalinkTestCopy['entityStatus'] = null;\n                datalinkTestCopy['previousStatus'] = null;\n\n                hub.dexihDatalinkTests.push(datalinkTestCopy);\n            }\n            return datalinkTest;\n        }\n\n        return null;\n    }\n\n    public cacheAddConnection(connectionKey: number, hub: DexihHub): DexihConnection {\n        if (connectionKey > 0) {\n            let connection = hub.dexihConnections.find(c => c.key === connectionKey);\n            if (!connection) {\n                connection = this.getConnectionCopy(connectionKey);\n                hub.dexihConnections.push(connection);\n            }\n\n            return connection;\n        }\n    }\n\n    public cacheAddTable(tableKey: number, hub: DexihHub): DexihTable {\n        if (tableKey > 0) {\n            let table = hub.dexihTables.find(t => t.key === tableKey);\n\n            if (!table) {\n                table = this.getTable(tableKey);\n\n                if (table) {\n                    hub.dexihTables.push(table);\n\n                    this.cacheAddConnection(table.connectionKey, hub);\n\n                    if (table.fileFormatKey) {\n                        this.cacheAddFileFormat(table.fileFormatKey, hub);\n                    }\n\n                    table.dexihTableColumns.forEach(c => {\n                        if (c.columnValidationKey) {\n                            this.cacheAddColumnValidation(c.columnValidationKey, hub);\n                        }\n                    });\n                }\n            }\n\n            return table;\n        }\n    }\n\n    public cacheAddColumnValidation(columnValidationKey: number, hub: DexihHub): DexihColumnValidation {\n        if (columnValidationKey > 0) {\n            const dupValidation = hub.dexihColumnValidations.find(c => c.key === columnValidationKey);\n            if (!dupValidation) {\n                let columnValidation = this.hub.dexihColumnValidations\n                    .find(c => c.key === columnValidationKey && c.isValid);\n                if (columnValidation) {\n\n                    this.getColumnValidationCache(columnValidation, hub);\n                    hub.dexihColumnValidations.push(columnValidation);\n                    return columnValidation;\n                }\n            }\n        }\n    }\n\n    public cacheAddCustomFunction(customFunctionKey: number, hub: DexihHub): DexihCustomFunction {\n        if (customFunctionKey > 0) {\n            const dupFunction = hub.dexihCustomFunctions.find(c => c.key === customFunctionKey);\n            if (!dupFunction) {\n                let customFunction = this.hub.dexihCustomFunctions\n                    .find(c => c.key === customFunctionKey && c.isValid);\n                if (customFunction) {\n                    hub.dexihCustomFunctions.push(customFunction);\n                    return customFunction;\n                }\n            }\n        }\n    }\n\n    public cacheAddFileFormat(fileFormatKey: number, hub: DexihHub): DexihFileFormat {\n        if (fileFormatKey > 0) {\n            const dup = hub.dexihFileFormats.find(c => c.key === fileFormatKey);\n            if (!dup) {\n                let fileFormat = this.hub.dexihFileFormats\n                    .find(c => c.key === fileFormatKey && c.isValid);\n                if (fileFormat) {\n                    hub.dexihFileFormats.push(fileFormat);\n                    return fileFormat;\n                }\n            }\n        }\n    }\n\n    public cacheAddView(viewKey: number, hub: DexihHub): DexihView {\n        if (viewKey > 0) {\n            const dup = hub.dexihViews.find(c => c.key === viewKey);\n            if (!dup) {\n                let view = this.hub.dexihViews\n                    .find(c => c.key === viewKey && c.isValid);\n                if (view) {\n                    hub.dexihViews.push(view);\n                    if (view.sourceType === eDataObjectType.Table) {\n                        this.cacheAddTable(view.sourceTableKey, hub);\n                    }\n                    if (view.sourceType === eDataObjectType.Datalink) {\n                        this.cacheAddDatalink(view.sourceDatalinkKey, hub);\n                    }\n                    return view;\n                }\n            }\n        }\n    }\n\n    public cacheAddDashboard(dashboardKey: number, hub: DexihHub): DexihDashboard {\n        if (dashboardKey > 0) {\n            const dup = hub.dexihDashboards.find(c => c.key === dashboardKey);\n            if (!dup) {\n                let dashboard = this.hub.dexihDashboards\n                    .find(c => c.key === dashboardKey && c.isValid);\n                if (dashboard) {\n                    dashboard.dexihDashboardItems.filter(c => c.viewKey > 0).forEach(item => {\n                        this.cacheAddView(item.viewKey, hub);\n                    });\n                    return dashboard;\n                }\n            }\n        }\n    }\n\n    public cacheAddListOfValues(listOfValuesKey: number, hub: DexihHub): DexihListOfValues {\n        if (listOfValuesKey > 0) {\n            const dup = hub.dexihListOfValues.find(c => c.key === listOfValuesKey);\n            if (!dup) {\n                let lov = this.hub.dexihListOfValues\n                    .find(c => c.key === listOfValuesKey && c.isValid);\n                if (lov) {\n                    hub.dexihListOfValues.push(lov);\n                    if (lov.sourceType === eLOVObjectType.Table) {\n                        this.cacheAddTable(lov.sourceTableKey, hub);\n                    }\n                    if (lov.sourceType === eLOVObjectType.Datalink) {\n                        this.cacheAddDatalink(lov.sourceDatalinkKey, hub);\n                    }\n                    return lov;\n                }\n            }\n        }\n    }\n\n    public cacheAddApi(apiKey: number, hub: DexihHub): DexihApi {\n        if (apiKey > 0) {\n            const dup = hub.dexihApis.find(c => c.key === apiKey);\n            if (!dup) {\n                let api = this.hub.dexihApis\n                    .find(c => c.key === apiKey && c.isValid);\n                if (api) {\n                    hub.dexihApis.push(api);\n                    if (api.sourceType === eSourceType.Table) {\n                        this.cacheAddTable(api.sourceTableKey, hub);\n                    }\n                    if (api.sourceType === eSourceType.Datalink) {\n                        this.cacheAddDatalink(api.sourceDatalinkKey, hub);\n                    }\n                    return api;\n                }\n            }\n        }\n    }\n\n    public cacheAddHubVariable(hubVariableKey: number, hub: DexihHub): DexihHubVariable {\n        if (hubVariableKey > 0) {\n            const dup = hub.dexihHubVariables.find(c => c.key === hubVariableKey);\n            if (!dup) {\n                let variable = this.hub.dexihHubVariables\n                    .find(c => c.key === hubVariableKey && c.isValid);\n                if (variable) {\n                    hub.dexihHubVariables.push(variable);\n                    return variable;\n                }\n            }\n        }\n    }\n\n    public cacheAddTag(key: number, hub: DexihHub): DexihTag {\n        if (key > 0) {\n            const dup = hub.dexihTags.find(c => c.key === key);\n            if (!dup) {\n                let tag = this.hub.dexihTags.find(c => c.key === key && c.isValid);\n                if (tag) {\n                    hub.dexihTags.push(tag);\n                    return tag;\n                }\n            }\n        }\n    }\n\n    public getTriggerDetails(trigger: DexihTrigger): string {\n        let details = '';\n\n        if (trigger.startDate) {\n            details += 'Starts on/after: ' + (new Date(trigger.startDate)).toLocaleDateString() + '<br/>';\n        }\n        if (trigger.startTime) {\n            details += 'Runs after: ' + trigger.startTime + '<br/>';\n        }\n        if (trigger.endTime) {\n            details += 'Ends after: ' + trigger.endTime + '<br/>';\n        }\n        if (trigger.daysOfWeek && trigger.daysOfWeek.length > 0 && trigger.daysOfWeek.length < 7 ) {\n            details += 'Only on: ' + trigger.daysOfWeek.map(c => eDayOfWeek[c]).join() + '<br/>';\n        }\n        if (trigger.intervalTime) {\n            details += 'Run at interval: ' +  trigger.intervalTime + '<br/>';\n        }\n        if (trigger.maxRecurs) {\n            details += 'Recurs for: ' +  trigger.maxRecurs + '<br/>';\n        }\n\n        return details;\n    }\n\n    public CopyDatalink(originalDatalink: DexihDatalink): DexihDatalink {\n        let copyDatalink = Object.assign({}, originalDatalink);\n        copyDatalink.name = copyDatalink.name + ' (copy)'\n        copyDatalink.key = null;\n\n        let datalinkColumnKeys = {};\n\n        if (copyDatalink.sourceDatalinkTable) {\n            copyDatalink.sourceDatalinkTable.key = null;\n            copyDatalink.sourceDatalinkTable.dexihDatalinkColumns.forEach(c => {\n                c.datalinkTableKey = null;\n                let key = this.getNextSequence();\n                datalinkColumnKeys[c.key] = key;\n                c.key = key;\n            });\n        }\n\n        copyDatalink.dexihDatalinkTransforms.sort((a, b) => a.position - b.position).forEach(t => {\n            t.key = this.getNextSequence();\n\n            if (t.joinDatalinkTable) {\n                t.joinDatalinkTable.key = null;\n                t.joinDatalinkTable.dexihDatalinkColumns.forEach(c => {\n                    c.datalinkTableKey = null;\n                    let key = this.getNextSequence();\n                    datalinkColumnKeys[c.key] = key;\n                    c.key = key;\n                });\n            }\n\n            t.dexihDatalinkTransformItems.forEach(i => {\n                i.datalinkTransformKey = t.key;\n                i.key = this.getNextSequence();\n\n                if (i.filterDatalinkColumn) {\n                    i.filterDatalinkColumn.key = datalinkColumnKeys[i.filterDatalinkColumn.key];\n                }\n                if (i.joinDatalinkColumn) {\n                    i.joinDatalinkColumn.key = datalinkColumnKeys[i.joinDatalinkColumn.key];\n                }\n                if (i.sourceDatalinkColumn) {\n                    i.sourceDatalinkColumn.key = datalinkColumnKeys[i.sourceDatalinkColumn.key];\n                }\n\n                if (i.targetDatalinkColumn) {\n                    let key = this.getNextSequence();\n                    datalinkColumnKeys[i.targetDatalinkColumn.key] = key;\n                    i.targetDatalinkColumn.key = key;\n                }\n\n                i.dexihFunctionParameters.forEach(p => {\n                    p.datalinkTransformItemKey = i.key;\n                    p.key = this.getNextSequence();\n\n                    if (p.datalinkColumn) {\n                        if (p.direction === eParameterDirection.Input) {\n                            p.datalinkColumn.key = datalinkColumnKeys[p.datalinkColumn.key];\n                        } else {\n                            let key = this.getNextSequence();\n                            datalinkColumnKeys[p.datalinkColumn.key] = key;\n                            p.datalinkColumn.key = key;\n                        }\n                    }\n                });\n            });\n        });\n\n        return copyDatalink;\n    }\n}\n\nexport class DataCache {\n    public data = new BehaviorSubject<PreviewResults>(null);\n    public isRefreshing = false;\n\n    public refresh(previewQuery: Promise<PreviewResults>) {\n        this.isRefreshing = true;\n        previewQuery.then((result) => {\n            this.data.next(result);\n            this.isRefreshing = false;\n        }).catch(() => {\n            this.data.next(null);\n            this.isRefreshing = false;\n        });\n    }\n}\n\n// export enum eSharedObjectType {\n//     None = <any>'None',\n//     Connection = <any>'Connection',\n//     Table = <any>'Table',\n//     FileFormat = <any>'FileFormat',\n//     Datalink = <any>'Datalink',\n//     Datajob = <any>'Datajob',\n//     DatalinkTransform = <any>'DatalinkTransform',\n//     DatalinkTransformItem = <any>'DatalinkTransformItem',\n//     RemoteAgent = <any>'RemoteAgent',\n//     ColumnValidation = <any>'ColumnValidation',\n//     TransformWriterResult = <any>'TransformWriterResult',\n//     HubVariable = <any>'HubVariable',\n//     CustomFunction = <any>'CustomFunction',\n//     DatalinkTest = <any>'DatalinkTest',\n//     View = <any>'View',\n//     Api = <any>'Api',\n//     Dashboard = <any>'Dashboard',\n//     ApiStatus = <any>'ApiStatus',\n// }\n\n\n\n// export enum eSharedDataObjectType {\n//     Table = <any>'Table',\n//     Datalink = <any>'Datalink',\n//     View = <any>'View',\n//     Dashboard = <any>'Dashboard',\n//     Api = <any>'Api'\n// }\n\n// export class SharedData {\n//     public hubKey: number;\n//     public hubName: string;\n\n//     public objectType: eSharedDataObjectType;\n//     public objectKey: number;\n//     public name: string;\n//     public logicalName: string;\n//     public description: string;\n//     public updateDate: Date;\n\n//     public parameters: any[];\n//     public inputColumns: InputColumn[];\n//     public query: SelectQuery;\n//     public outputColumns: DexihColumnBase[];\n\n// }\n\n// export enum eApiStatus {\n//     Activated = <any>'Activated',\n//     Deactivated = <any>'Deactivated',\n// }\n// export class ApiData {\n//     public apiStatus: eApiStatus;\n//     public hubKey: number;\n//     public apiKey: number;\n//     public securityKey = '';\n//     public successCount = 0;\n//     public errorCount = 0;\n// }\n\n// export class DexihApi extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public description: string = null;\n//     public sourceType: eSourceType = eSourceType.Table;\n//     public sourceTableKey = 0;\n//     public sourceDatalinkKey = 0;\n//     public selectQuery = new SelectQuery();\n//     public cacheQueries = true;\n//     public cacheResetInterval: string = null;\n//     public logDirectory = '';\n//     public autoStart = false;\n//     public isShared = false;\n\n//     public parameters: DexihInputParameter[] = [];\n\n//     public currentStatus: BehaviorSubject<ApiData>;\n// }\n\n// export class DexihColumnBase extends EntityBase {\n//     public position = 0;\n//     public name: string = null;\n//     public logicalName: string = null;\n//     public columnGroup: string = null;\n//     public description: string = null;\n//     public dataType: eTypeCode;\n//     public maxLength: number = null;\n//     public precision: number = null;\n//     public scale: number = null;\n//     public allowDbNull = true;\n//     public isUnicode = true;\n//     public deltaType: eDeltaType = eDeltaType.TrackingField;\n//     public defaultValue: string = null;\n//     public isUnique = false;\n//     public isMandatory = false;\n//     public isIncrementalUpdate = false;\n//     public isInput = false;\n//     public rank = 0;\n//     public securityFlag: eSecurityFlag = eSecurityFlag.None;\n\n//     public isSourceColumn = false;\n//     public isGeneratedColumn = false;\n\n//     public mappingStatus: eMappingStatus;\n\n//     public entityStatus: EntityStatus;\n\n//     public runTime: {lineage: eMappingStatus, impact: eMappingStatus}\n\n//     constructor() {\n//         super();\n//         this.securityFlag = eSecurityFlag.None;\n//         this.isUnique = false;\n//         this.isMandatory = false;\n//         this.isIncrementalUpdate = false;\n//         this.allowDbNull = false;\n//         this.isUnicode = false;\n//         this.dataType = eTypeCode.String;\n//         this.deltaType = eDeltaType.NaturalKey;\n//     }\n// }\n\nexport class DexihInputParameter {\n    public key = 0;\n    public name: string = null;\n    public description: string = null;\n    public value = null;\n}\n\n// export class DexihConnection extends EntityBase {\n//     public key = 0;\n//     public purpose: eConnectionPurpose = eConnectionPurpose.Source;\n//     public name: string = null;\n//     public description: string = null;\n//     public server: string = null;\n//     public useWindowsAuth = false;\n//     public username = '';\n//     public password = '';\n//     public usePasswordVariable = false;\n//     public defaultDatabase: string = null;\n//     public filename: string = null;\n//     public useConnectionString = false;\n//     public useConnectionStringVariable = false;\n//     public connectionString: string = null;\n//     public embedTableKey = false;\n//     public passwordRaw: string = null;\n//     public connectionStringRaw: string = null;\n\n//     // public dexihTables: Array<DexihTable> = null;\n\n//     public databases: Array<string> = null;\n\n//     public connectionAssemblyName = '';\n//     public connectionClassName = '';\n\n//     constructor( name: string) {\n//         super();\n//         this.name = name;\n//         // this.dexihTables = new Array<DexihTable>();\n//     }\n// }\n\n// export class DexihCustomFunction extends EntityBase {\n//     public key = 0;\n//     public functionType: eFunctionType = eFunctionType.Map;\n//     public methodCode = '';\n//     public resultCode = '';\n//     public name = '';\n//     public description = '';\n//     public returnType: eTypeCode = eTypeCode.String;\n//     public isGeneric = false;\n//     public genericTypeDefault: eTypeCode = eTypeCode.String;\n\n//     public dexihCustomFunctionParameters: DexihCustomFunctionParameter[] = [];\n// }\n\n// export class DexihCustomFunctionParameter extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public position = 0;\n//     public direction: eParameterDirection = null;\n//     public isGeneric = false;\n//     public dataType: eTypeCode = eTypeCode.String\n//     public rank = 0;\n// }\n\n// export class DexihColumnValidation extends EntityBase {\n//     public key = 0;\n//     public name = '';\n//     public description: string = null;\n//     public dataType: eTypeCode = eTypeCode.String;\n//     public minLength: number = null;\n//     public maxLength: number = null;\n//     public allowDbNull = false;\n//     public minValue: number = null;\n//     public maxValue: number = null;\n//     public patternMatch: string = null;\n//     public regexMatch: string = null;\n//     public listOfValues: string[] = [];\n//     public listOfNotValues: string[] = [];\n//     public lookupColumnKey: number = null;\n//     public lookupIsValid = true;\n//     public lookupMultipleRecords = false;\n//     public invalidAction: eInvalidAction = eInvalidAction.Abend;\n//     public cleanAction: eCleanAction = eCleanAction.Null;\n//     public cleanValue: string = null;\n// }\n\n// export class DexihDashboard extends EntityBase {\n//     public key = 0;\n//     public name = '';\n//     public description: string = null;\n//     public isShared = false;\n//     public minCols = 4;\n//     public maxCols = 100;\n//     public minRows = 4;\n//     public maxRows = 100;\n//     public autoRefresh = true;\n\n//     public dexihDashboardItems: Array<DexihDashboardItem> = [];\n//     public parameters: Array<DexihInputParameter> = [];\n// }\n\n// export class DexihDashboardItem extends EntityBase {\n//     public key = 0;\n//     public name = '';\n//     public description: string = null;\n//     public cols = 1;\n//     public rows = 1;\n//     public x = 0;\n//     public y = 0;\n//     public header = true;\n//     public scrollable = false;\n\n//     public parameters: Array<DexihInputParameter> = [];\n//     public viewKey = 0;\n// }\n\n// export class DexihDatajob extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public description: string = null;\n//     public failAction = eFailAction.Abend;\n//     public auditConnectionKey = 0;\n//     public fileWatch = false;\n//     public autoStart = false;\n// //    public externalTrigger = false;\n\n//     public dexihDatalinkSteps: Array<DexihDatalinkStep> = null;\n//     public dexihTriggers: Array<DexihTrigger> = null;\n\n//     public parameters: Array<DexihInputParameter> = [];\n\n//     public previousStatus: BehaviorSubject<TransformWriterResult>;\n//     public currentStatus: BehaviorSubject<TransformWriterResult>;\n\n//     constructor() {\n//         super();\n//         this.dexihDatalinkSteps = [];\n//         this.dexihTriggers = [];\n//     }\n// }\n// export class DexihDatalinkDependency extends EntityBase {\n//     public key = 0;\n//     public datalinkStepKey = 0;\n//     public dependentDatalinkStepKey = 0;\n// }\n// export class DexihDatalinkProfile extends EntityBase {\n//     public key = 0;\n//     public datalinkKey = 0;\n\n//     public functionClassName: string = null;\n//     public functionAssemblyName: string = null;\n//     public functionMethodName: string = null;\n//     public detailedResults = false;\n\n// // properties used by components\n//     public name: string;\n//     public description: string;\n// }\n// export class DexihDatalink extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public description: string = null;\n//     // public targetTableKey = null;\n//     public auditConnectionKey = null;\n//     public updateStrategy: eUpdateStrategy = eUpdateStrategy.Reload;\n//     public datalinkType: eDatalinkType = eDatalinkType.General;\n//     public loadStrategy: eTransformWriterMethod = eTransformWriterMethod.Bulk;\n//     public rowsPerCommit = 1000;\n//     public rowsPerProgress = 1000;\n//     public rollbackOnFail = false;\n//     public isQuery = false;\n//     public maxRows = 0;\n//     public addDefaultRow = false;\n//     public isShared = false;\n//     public profileTableName: string = null;\n\n//     public sourceDatalinkTable = new DexihDatalinkTable();\n//     public dexihDatalinkTransforms: Array<DexihDatalinkTransform> = [];\n//     public dexihDatalinkProfiles: Array<DexihDatalinkProfile> = [];\n//     public dexihDatalinkTargets: Array<DexihDatalinkTarget> = [];\n//     public parameters: Array<DexihInputParameter> = [];\n\n//     public targetTable: DexihTable;\n\n// // properties used by components.\n//     public sourceTableName: string;\n//     public targetTableName: string;\n\n//     public entityStatus: EntityStatus;\n//     public previousStatus: BehaviorSubject<TransformWriterResult>;\n//     public currentStatus: BehaviorSubject<TransformWriterResult>;\n// }\n\n// export class DexihDatalinkTable extends EntityBase {\n//     public key = 0;\n//     public sourceTableKey = null;\n//     public sourceDatalinkKey = null;\n//     public name: string = null;\n//     public sourceType = eSourceType.Table;\n\n//     public rowsStartAt = null;\n//     public rowsEndAt = null;\n//     public rowsIncrement = null;\n\n//     public dexihDatalinkColumns: Array<DexihDatalinkColumn> = [];\n// }\n\n// export class DexihDatalinkColumn extends DexihColumnBase {\n//     public key = 0;\n//     public datalinkTableKey = null;\n\n//     public childColumns: Array<DexihDatalinkColumn> = [];\n// }\n\n// export class DexihDatalinkStep extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public datajobKey = 0;\n//     public datalinkKey = 0;\n\n//     public dexihDatalinkDependencies: Array<DexihDatalinkDependency> = [];\n//     public dexihDatalinkStepColumns: Array<DexihDatalinkStepColumn> = [];\n//     public parameters: Array<DexihInputParameter> = [];\n// }\n\n// export class DexihDatalinkStepColumn extends DexihColumnBase {\n//     public key = 0;\n//     public datalinkStepKey = null;\n// }\n\n// export class DexihDatalinkTarget extends EntityBase {\n//     public key = 0;\n//     public datalinkKey: number = null;\n//     public nodeDatalinkColumn: DexihDatalinkColumn = null;\n//     public tableKey: number = null;\n//     public position: number = null;\n\n//     public runTime: {\n//         inputColumns: DexihDatalinkColumn[];\n//     }\n// }\n\n// export class DexihDatalinkTest extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public auditConnectionKey = 0;\n//     public description: string = null;\n\n//     public dexihDatalinkTestSteps: Array<DexihDatalinkTestStep> = [];\n\n//     public entityStatus: EntityStatus;\n//     public previousStatus: BehaviorSubject<TransformWriterResult>;\n//     public currentStatus: BehaviorSubject<TransformWriterResult>;\n// }\n\n// export class DexihDatalinkTestStep extends EntityBase {\n//     public key = 0;\n//     public datalinkTestKey = 0;\n//     public position = 0;\n//     public targetConnectionKey = 0;\n//     public targetTableName: string = null;\n//     public targetSchema: string = null;\n//     public expectedConnectionKey = 0;\n//     public expectedTableName: string = null;\n//     public expectedSchema: string = null;\n\n//     public datalinkKey = 0;\n\n//     public name: string = null;\n//     public description: string = null;\n\n//     public dexihDatalinkTestTables: Array<DexihDatalinkTestTable> = [];\n\n// }\n\n// export class DexihDatalinkTestTable extends EntityBase {\n//     public key = 0;\n//     public datalinkTestStepKey = 0;\n//     public tableKey = 0;\n//     public sourceConnectionKey = 0;\n//     public sourceTableName: string = null;\n//     public sourceSchema: string = null;\n//     public testConnectionKey = 0;\n//     public testTableName: string = null;\n//     public testSchema: string = null;\n// }\n\n// export class DexihDatalinkTransformItem extends EntityBase {\n//     public key = 0;\n//     public datalinkTransformKey = 0;\n//     public position = 0;\n//     public transformItemType: eTransformItemType = null;\n//     public sourceValue: string = null;\n//     public joinValue: string = null;\n//     public sortDirection: eSortDirection = null;\n//     public seriesGrain: eSeriesGrain = null;\n//     public seriesFill = false;\n//     public seriesStart: string = null;\n//     public seriesFinish: string = null;\n//     public filterCompare: eCompare = null;\n//     public filterValue: string = null;\n//     public aggregate: eAggregate = null;\n//     public returnType: eTypeCode = eTypeCode.String;\n//     public functionCode: string = null;\n//     public functionResultCode: string = null;\n//     public onError: eOnError = null;\n//     public onNull: eOnNull = null;\n//     public notCondition = false;\n//     public invalidAction: eInvalidAction = null;\n//     public customFunctionKey: number = null;\n\n//     public entityStatus: EntityStatus;\n\n//     public dexihFunctionParameters: Array<DexihFunctionParameter>;\n\n//     public functionClassName: string = null;\n//     public functionAssemblyName: string = null;\n//     public functionMethodName: string = null;\n\n//     public genericTypeCode: eTypeCode = null;\n//     public functionCaching = eFunctionCaching.NoCache;\n\n//     public targetDatalinkColumn: DexihDatalinkColumn = null;\n//     public sourceDatalinkColumn: DexihDatalinkColumn = null;\n//     public joinDatalinkColumn: DexihDatalinkColumn = null;\n//     public filterDatalinkColumn: DexihDatalinkColumn = null;\n\n//     constructor() {\n//         super();\n//         this.onError = eOnError.Abend;\n//         this.onNull = eOnNull.Execute;\n//         this.invalidAction = eInvalidAction.Abend;\n\n//         this.dexihFunctionParameters = [];\n//     }\n\n// }\n// export class DexihDatalinkTransform extends EntityBase {\n//     public key = 0;\n//     public datalinkKey = 0;\n//     public position = 0;\n//     public name: string = null;\n//     public description: string = null;\n//     public passThroughColumns: boolean = null;\n//     public joinTableAlias: string = null;\n//     public joinDuplicateStrategy = eDuplicateStrategy.All;\n\n//     public entityStatus: EntityStatus;\n\n//     public dexihDatalinkTransformItems: Array<DexihDatalinkTransformItem>;\n\n//     public transformType: eTransformType = null;\n//     public transformClassName: string = null;\n//     public transformAssemblyName: string = null ;\n\n//     public maxInputRows = 0;\n//     public maxOutputRows = 0;\n\n//     public joinDatalinkTable: DexihDatalinkTable = null;\n\n//     // TODO Implement joinSortDatalinkColumn\n//     public joinSortDatalinkColumn: DexihDatalinkColumn = null;\n\n//     public nodeDatalinkColumn: DexihDatalinkColumn = null;\n\n//     public runTime: {\n//         inputColumns: DexihDatalinkColumn[];\n//         outputColumns: DexihDatalinkColumn[];\n//         transformColumns: DexihDatalinkColumn[];\n//     }\n\n//     constructor() {\n//         super();\n//         this.dexihDatalinkTransformItems = new Array<DexihDatalinkTransformItem>();\n//     }\n// }\n\n// export class DexihFileFormat extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public description: string = null;\n//     public isDefault = false;\n//     public allowComments = false;\n//     public bufferSize: number;\n//     public comment: string;\n//     public delimiter: string;\n//     public detectColumnCountChanges = false;\n//     public hasHeaderRecord = true;\n//     public ignoreHeaderWhiteSpace = false;\n//     public ignoreReadingExceptions = false;\n//     public ignoreQuotes = false;\n//     public quote: string;\n//     public quoteAllFields = false;\n//     public quoteNoFields = false;\n//     public skipEmptyRecords = false;\n//     public skipHeaderRows = 0;\n//     public trimFields = false;\n//     public trimHeaders = false;\n//     public willThrowOnMissingField = false;\n//     public setWhiteSpaceCellsToNull = false;\n\n//     public matchHeaderRecord = true;\n\n//     public isModified: boolean;\n\n//     constructor() {\n//         super();\n//         this.bufferSize = 2048;\n//         this.delimiter = ',';\n//         this.quote = '\"';\n//         this.comment = '#';\n//     }\n// }\n// export class DexihFunctionParameter extends EntityBase {\n//     public key = 0;\n//     public datalinkTransformItemKey = 0;\n//     public name: string = null;\n//     public position = 0;\n//     public direction: eParameterDirection = null;\n//     public isGeneric = false;\n//     public dataType: eTypeCode = eTypeCode.String\n//     public rank = 0;\n//     public arrayParameters: DexihFunctionArrayParameter[] = [];\n//     public value: string = null;\n\n//     public datalinkColumn: DexihDatalinkColumn;\n//     public entityStatus: EntityStatus;\n\n//     // runtime structures are not exported when saving.\n//     public runTime: {functionParameter: FunctionParameter} = {functionParameter: null};\n// }\n\n// export class DexihFunctionArrayParameter extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public position = 0;\n//     public direction: eParameterDirection = null;\n//     public isGeneric = false;\n//     public dataType: eTypeCode = eTypeCode.String;\n//     public rank = 0;\n//     public value: string = null;\n//     public datalinkColumn: DexihDatalinkColumn = null;\n\n//     // runtime structures are not exported when saving.\n//     public runTime: {functionParameter: FunctionParameter} = {functionParameter: null};\n// }\n\n// export class DexihHub extends EntityBase {\n//     public hubKey = 0;\n//     public name: string;\n//     public description: string;\n//     public encryptionKey: string;\n//     public maxOwners: number;\n//     public maxUsers: number;\n//     public maxReaders: number;\n//     public maxDatalinks: number;\n//     public maxDatajobs: number;\n//     public dailyTransactionQuota: number;\n//     public expiryDate: Date;\n\n//     public hubPermission: ePermission;\n\n//     public dexihHubVariables: Array<DexihHubVariable>;\n//     public dexihConnections: Array<DexihConnection>;\n//     public dexihTables: Array<DexihTable>;\n//     public dexihDatajobs: Array<DexihDatajob>;\n//     public dexihDatalinks: Array<DexihDatalink>;\n//     public dexihColumnValidations: Array<DexihColumnValidation>;\n//     public dexihFileFormats: Array<DexihFileFormat>;\n//     public dexihCustomFunctions: Array<DexihCustomFunction>;\n//     public dexihRemoteAgentHubs: Array<DexihRemoteAgentHub>;\n//     public dexihDatalinkTests: Array<DexihDatalinkTest>;\n//     public dexihViews: Array<DexihView>;\n//     public dexihApis: Array<DexihApi>;\n//     public dexihDashboards: Array<DexihDashboard>;\n\n//     constructor(hubKey: number, name: string) {\n//         super();\n//         this.hubKey = hubKey;\n//         this.name = name;\n//         this.isValid = true;\n\n//         this.dexihHubVariables = new Array<DexihHubVariable>();\n//         this.dexihConnections = new Array<DexihConnection>();\n//         this.dexihTables = new Array<DexihTable>();\n//         this.dexihDatajobs = new Array<DexihDatajob>();\n//         this.dexihDatalinks = new Array<DexihDatalink>();\n//         this.dexihColumnValidations = new Array<DexihColumnValidation>();\n//         this.dexihFileFormats = new Array<DexihFileFormat>();\n//         this.dexihCustomFunctions = new Array<DexihCustomFunction>();\n//         this.dexihDatalinkTests = new Array<DexihDatalinkTest>();\n//         this.dexihViews = new Array<DexihView>();\n//         this.dexihApis = new Array<DexihApi>();\n//         this.dexihDashboards = new Array<DexihDashboard>();\n//     }\n// }\n\n// export class DexihHubVariable extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public value: string = null;\n//     public valueRaw: string = null;\n//     public isEncrypted = false;\n//     public isEnvironmentVariable = false;\n// }\n\n// export class DexihRemoteAgentHub extends EntityBase {\n//     public remoteAgentHubKey = 0;\n//     public remoteAgentKey = 0;\n//     public hubKey = 0;\n//     public isAuthorized = false;\n//     public isDefault = false;\n//     public allowExternalConnect = false;\n\n//     public isSelected = false;\n// }\n\n// export class DexihTableColumn extends DexihColumnBase {\n//     public key = 0;\n//     public tableKey = 0;\n//     public columnValidationKey: number = null;\n\n//     public parentColumnKey: number = null;\n//     public childColumns: DexihTableColumn[] = null;\n\n\n//     public mappingStatus: eMappingStatus;\n//     public entityStatus: EntityStatus;\n\n//     super() {\n//         this.securityFlag = eSecurityFlag.None;\n//         this.isUnique = false;\n//         this.isMandatory = false;\n//         this.isIncrementalUpdate = false;\n//         this.allowDbNull = false;\n//         this.dataType = eTypeCode.String;\n//         this.deltaType = eDeltaType.NaturalKey;\n//     }\n// }\n\n// export class DexihTable extends EntityBase {\n//     public key = 0;\n//     public connectionKey = 0;\n//     public name = '';\n//     public schema: string = null;\n//     public sourceConnectionName: string = null;\n//     public baseTableName: string = null;\n//     public logicalName = '';\n//     public tableType: eTableType = eTableType.Table;\n//     public description: string = null;\n//     public useQuery = false;\n//     public queryString = null;\n//     public fileFormatKey: number = null;\n//     public rejectedTableName: string = null;\n//     public sortColumnKeys: Array<number> = [];\n//     public autoManageFiles = true;\n//     public useCustomFilePaths = false;\n//     public fileRootPath: string = null;\n//     public fileIncomingPath: string = null;\n//     public fileOutgoingPath: string = null;\n//     public fileProcessedPath: string = null;\n//     public fileRejectedPath: string = null;\n//     public fileMatchPattern: string = null;\n//     public restfulUri: string = null;\n//     public formatType: eFormatType = eFormatType.Text;\n//     public maxImportLevels = 1;\n//     public rowPath: string = null;\n//     public isVersioned = false;\n//     public isShared = false;\n//     public fileSample: string = null;\n\n//     public fileFormat: DexihFileFormat = null;\n\n//     public entityStatus: EntityStatus; \n\n//     public dexihTableColumns: Array<DexihTableColumn>;\n\n//     public previousStatus: BehaviorSubject<TransformWriterResult>;\n//     public currentStatus: BehaviorSubject<TransformWriterResult>;\n\n//     constructor() {\n//         super();\n//         this['entityStatus'] = new EntityStatus();\n//         this['entityStatus'].isBusy = false;\n//         this['entityStatus'].lastStatus = eStatus.None;\n\n//         this.key = 0;\n//         this.dexihTableColumns = new Array<DexihTableColumn>();\n//     }\n// }\n\n// export class DexihTrigger extends EntityBase {\n//     public key = 0;\n//     public datajobKey = 0;\n//     public startDate: string = null;\n//     public intervalTime: string = null;\n//     public daysOfWeek: Array<eDayOfWeek> = [\n//         eDayOfWeek.Sunday,\n//         eDayOfWeek.Monday,\n//         eDayOfWeek.Tuesday,\n//         eDayOfWeek.Wednesday,\n//         eDayOfWeek.Thursday,\n//         eDayOfWeek.Friday,\n//         eDayOfWeek.Saturday,\n//     ];\n//     public startTime: string = null;\n//     public endTime: string = null;\n//     public cronExpression: string = null;\n//     public maxRecurs: number = null;\n// }\n\n// export class DexihView extends EntityBase {\n//     public key = 0;\n//     public name: string = null;\n//     public description: string = null;\n//     public viewType: eViewType = eViewType.Table;\n//     public sourceType: eSourceType = eSourceType.Table;\n//     public sourceTableKey = 0;\n//     public sourceDatalinkKey = 0;\n//     public inputValues: InputColumn[] = null;\n//     public selectQuery = new SelectQuery();\n//     public chartConfig = new ChartConfig();\n//     public autoRefresh = true;\n//     public isShared = false;\n\n//     public parameters: Array<DexihInputParameter> = [];\n// }\n\n// export class ChartConfig {\n//     public labelColumn: string = null;\n//     public seriesColumn: string = null;\n//     public seriesColumns = [];\n//     public xColumn: string = null;\n//     public yColumn: string = null;\n//     public minColumn: string = null;\n//     public maxColumn: string = null;\n//     public radiusColumn: string = null;\n//     public longitudeColumn: string = null;\n//     public latitudeColumn: string = null;\n\n//     public chartType = eChartType.BarVertical;\n//     public colorScheme = 'natural';\n//     public showGradient = false;\n//     public showXAxis = true;\n//     public showYAxis = true;\n//     public showLegend = false;\n//     public legendPosition: 'right' | 'below'  = 'below';\n//     public showXAxisLabel = true;\n//     public showYAxisLabel = true;\n//     public showGridLines = false;\n//     public xAxisLabel: string = null;\n//     public yAxisLabel: string = null;\n//     public xScaleMax = null;\n//     public xScaleMin = null;\n//     public yScaleMax = null;\n//     public yScaleMin = null;\n//     public autoScale = true;\n\n//     // pie charts only\n//     public explodeSlices = false;\n//     public doughnut = false;\n// }\n\n// export enum eSourceType {\n//     Table = <any>'Table',\n//     Datalink = <any>'Datalink'\n// }\n\n// export enum eViewType {\n//     Table = <any>'Table',\n//     Chart = <any>'Chart'\n// }\n\n// export enum eTableType {\n//     Table = <any>'Table',\n//     View = <any>'View',\n//     Query = <any>'Query',\n// }\n\n// export enum eTestTableAction {\n//     None = <any>'None',\n//     Truncate = <any>'Truncate',\n//     DropCreate = <any>'DropCreate',\n//     TruncateCopy = <any>'TruncateCopy',\n//     DropCreateCopy = <any>'DropCreateCop',\n// }\n\n// export enum eStatus {\n//     None = <any>'None',\n//     Pending = <any>'Pending',\n//     Error = <any>'Error',\n//     Imported = <any>'Imported',\n//     Added = <any>'Added',\n//     Updated = <any>'Updated',\n//     Deleted = <any>'Deleted',\n// }\n\n// export enum eSortDirection {\n//     Ascending = <any>'Ascending',\n//     Descending = <any>'Descending',\n// }\n\nexport const sortDirections = [\n    {key: eSortDirection.Ascending, name: 'Ascending'},\n    {key: eSortDirection.Descending, name: 'Descending'},\n];\n\n// export enum eSeriesGrain {\n//     Second = <any>'Second',\n//     Minute = <any>'Minute',\n//     Hour = <any>'Hour',\n//     Day = <any>'Day',\n//     Week = <any>'Week',\n//     Month = <any>'Month',\n//     Year = <any>'Year',\n//     Number = <any>'Number',\n// }\nexport const seriesGrains = [\n    {key: eSeriesGrain.Second, name: 'Second'},\n    {key: eSeriesGrain.Minute, name: 'Minute'},\n    {key: eSeriesGrain.Hour, name: 'Hour'},\n    {key: eSeriesGrain.Day, name: 'Day'},\n    {key: eSeriesGrain.Week, name: 'Week'},\n    {key: eSeriesGrain.Month, name: 'Month'},\n    {key: eSeriesGrain.Year, name: 'Year'},\n    {key: eSeriesGrain.Number, name: 'Number'},\n];\n\n// export enum eDeltaType {\n//     SourceSurrogateKey = <any>'SourceSurrogateKey',\n//     ValidFromDate = <any>'ValidFromDate',\n//     ValidToDate = <any>'ValidToDate',\n//     CreateDate = <any>'CreateDate',\n//     UpdateDate = <any>'UpdateDate',\n//     CreateAuditKey = <any>'CreateAuditKey',\n//     UpdateAuditKey = <any>'UpdateAuditKey',\n//     IsCurrentField = <any>'IsCurrentField',\n//     Version = <any>'Version',\n//     NaturalKey = <any>'NaturalKey',\n//     TrackingField = <any>'TrackingField',\n//     NonTrackingField = <any>'NonTrackingField',\n//     IgnoreField = <any>'IgnoreField',\n//     ValidationStatus = <any>'ValidationStatus',\n//     RejectedReason = <any>'RejectedReason',\n//     FileName = <any>'FileName',\n//     FileRowNumber = <any>'FileRowNumber',\n//     AzureRowKey = <any>'AzureRowKey', // special column type for Azure Storage Tables.\n//     AzurePartitionKey = <any>'AzurePartitionKey', // special column type for Azure Storage Tables.\n//     TimeStamp = <any>'TimeStamp', // column that is generated by the database.\n//     DbAutoIncrement = <any>'DbAutoIncement',\n//     AutoIncrement = <any>'AutoIncrement', // column is auto incremented by the integration hub function.\n//     ResponseSuccess = <any>'ResponseSuccess', // webservice/function response aws successful\n//     ResponseData = <any>'ResponseData',  // raw data from a webservice/function response\n//     ResponseStatus = <any>'ResponseStatus',  // status code from a webservice/function call\n//     ResponseSegment = <any>'ResponseSegment',  // status code from a webservice/function call\n//     Error = <any>'Error',  // status code from a webservice/function call\n//     Url = <any>'Url',  // status code from a webservice/function call\n// }\n\n// export enum eChartType {\n//     BarVertical = <any>'BarVertical',\n//     BarHorizontal = <any>'BarHorizontal',\n//     BarVertical2D = <any>'BarVertical2D',\n//     BarHorizontal2D = <any>'BarHorizontal2D',\n//     BarVerticalStacked = <any>'BarVerticalStacked',\n//     BarHorizontalStacked = <any>'BarHorizontalStacked',\n//     BarVerticalNormalized = <any>'BarVerticalNormalized',\n//     BarHorizontalNormalized = <any>'BarHorizontalNormalized',\n//     Pie = <any>'Pie',\n//     PieAdvanced = <any>'PieAdvanced',\n//     PieGrid = <any>'PieGrid',\n//     Line = <any>'Line',\n//     Area = <any>'Area',\n//     Polar = <any>'Polar',\n//     AreaStacked = <any>'AreaStacked',\n//     AreaNormalized = <any>'AreaNormalized',\n//     Scatter = <any>'Scatter',\n//     Error = <any>'Error',\n//     Bubble = <any>'Bubble',\n//     ForceDirected = <any>'ForceDirected',\n//     HeatMap = <any>'HeatMap',\n//     TreeMap = <any>'TreeMap',\n//     Cards = <any>'Cards',\n//     Gauge = <any>'Gauge',\n//     LinearGauge = <any>'LinearGauge',\n//     Map = <any>'Map'\n// }\n\nexport const deltaTypes = [\n    {key: eDeltaType.SourceSurrogateKey, name: 'Source Surrogate Key', dataType: eTypeCode.Int64, defaultName: 'SourceSk', unique: true},\n    {key: eDeltaType.ValidFromDate, name: 'Valid From Date', dataType: eTypeCode.DateTime, defaultName: 'ValidFromDate', unique: true},\n    {key: eDeltaType.ValidToDate, name: 'Valid To Date', dataType: eTypeCode.DateTime, defaultName: 'ValidToDate', unique: true},\n    {key: eDeltaType.CreateDate, name: 'Create Date', dataType: eTypeCode.DateTime, defaultName: 'CreateDate', unique: true},\n    {key: eDeltaType.UpdateDate, name: 'Update Date', dataType: eTypeCode.DateTime, defaultName: 'UpdateDate', unique: true},\n    {key: eDeltaType.CreateAuditKey, name: 'Create Audit Key', dataType: eTypeCode.Int64, defaultName: 'CreateAuditKey', unique: true},\n    {key: eDeltaType.UpdateAuditKey, name: 'Update Audit Key', dataType: eTypeCode.Int64, defaultName: 'UpdateAuditKey', unique: true},\n    {key: eDeltaType.IsCurrentField, name: 'Is Current Field', dataType: eTypeCode.Boolean, defaultName: 'IsCurrent', unique: true},\n    {key: eDeltaType.Version, name: 'Record Version', dataType: eTypeCode.Boolean, defaultName: 'Version', unique: true},\n    {key: eDeltaType.NaturalKey, name: 'Natural Key', dataType: null, defaultName: null, unique: false},\n    {key: eDeltaType.TrackingField, name: 'Tracking Field', dataType: null, defaultName: null, unique: false},\n    {key: eDeltaType.NonTrackingField, name: 'Non-Tracking Field', dataType: null, defaultName: null, unique: false},\n    {key: eDeltaType.IgnoreField, name: 'Ignored Field', dataType: null, defaultName: null, unique: false},\n    {key: eDeltaType.RejectedReason, name: 'Reject Reason', dataType: eTypeCode.String, defaultName: 'RejectReason', unique: true},\n    {key: eDeltaType.FileName, name: 'File Name', dataType: eTypeCode.String, defaultName: 'FileName', unique: true},\n    {key: eDeltaType.FileRowNumber, name: 'File Row Number', dataType: eTypeCode.Int64, defaultName: 'FileRowNumber', unique: true},\n    {key: eDeltaType.FileDate, name: 'File Modified Date', dataType: eTypeCode.Int64, defaultName: 'FileDate', unique: true},\n    {key: eDeltaType.RowKey, name: 'RowKey (Azure/Mongo)', dataType: null, defaultName: null, unique: true},\n    {key: eDeltaType.PartitionKey, name: 'PartitionKey (Azure only)', dataType: null, defaultName: null, unique: true},\n    {key: eDeltaType.TimeStamp, name: 'Auto TimeStamp', dataType: null, defaultName: null, unique: true},\n    {key: eDeltaType.AutoIncrement, name: 'Auto Increment', dataType: eTypeCode.Int64, defaultName: 'Sk', unique: true},\n    {key: eDeltaType.DbAutoIncrement, name: 'Database Auto Increment', dataType: eTypeCode.Int64, defaultName: 'Sk', unique: true},\n    {key: eDeltaType.ResponseSuccess, name: 'Response Success', dataType: eTypeCode.String, defaultName: 'ResponseSuccess', unique: false},\n    {key: eDeltaType.ResponseData, name: 'Response Data', dataType: eTypeCode.String, defaultName: 'ResponseData', unique: false},\n    {key: eDeltaType.ResponseStatus, name: 'Response Status', dataType: eTypeCode.String, defaultName: 'ResponseStatus', unique: true},\n    {key: eDeltaType.ResponseSegment, name: 'Response Segment', dataType: eTypeCode.String, defaultName: null, unique: false},\n    {key: eDeltaType.DatabaseOperation, name: 'Database Operation', dataType: eTypeCode.String, defaultName: null, unique: false},\n    {key: eDeltaType.Error, name: 'Error', dataType: eTypeCode.String, defaultName: null, unique: false},\n    {key: eDeltaType.Url, name: 'Url', dataType: eTypeCode.String, defaultName: null, unique: false},\n    {key: eDeltaType.ValidationStatus, name: 'Validation Status',\n        dataType: eTypeCode.String, defaultName: 'ValidationStatus', unique: true},\n]\n\n// export enum eSecurityFlag {\n//     None = <any>'None',\n//     FastEncrypt = <any>'FastEncrypt',\n//     FastDecrypt = <any>'FastDecrypt',\n//     FastEncrypted = <any>'FastEncrypted',\n//     StrongEncrypt = <any>'StrongEncrypt',\n//     StrongDecrypt = <any>'StrongDecrypt',\n//     StrongEncrypted = <any>'StrongEncrypted',\n//     OneWayHash = <any>'OneWayHash',\n//     OneWayHashed = <any>'OneWayHashed',\n//     Hide = <any>'Hide'\n// }\n\nexport const securityFlags = [\n    {key: eSecurityFlag.None, name: 'Not Secured'},\n    {key: eSecurityFlag.FastEncrypt, name: 'Fast Encrypt (encrypted when read)'},\n    {key: eSecurityFlag.FastDecrypt, name: 'Fast Decrypt (decrypted when written)'},\n    {key: eSecurityFlag.FastEncrypted, name: 'Fast Encrypted Field'},\n    {key: eSecurityFlag.StrongEncrypt, name: 'Strong Encrypt (encrypted when read)'},\n    {key: eSecurityFlag.StrongDecrypt, name: 'Strong Decrypt (decrypted when written)'},\n    {key: eSecurityFlag.StrongEncrypted, name: 'Strong Encrypted Field'},\n    {key: eSecurityFlag.OneWayHash, name: 'Hash (when read)'},\n    {key: eSecurityFlag.OneWayHashed, name: 'Hashed field'},\n    {key: eSecurityFlag.Hide, name: 'Hide the field'},\n]\n\n// export enum eDatalinkType {\n//     General = <any>'General',\n//     Stage = <any>'Stage',\n//     Validate = <any>'Validate',\n//     Transform = <any>'Transform',\n//     Deliver = <any>'Deliver',\n//     Publish = <any>'Publish',\n//     Share = <any>'Share',\n//     Query = <any>'Query'\n// }\n\n// export const datalinkTypes = [\n//     {key: eDatalinkType.General, name: 'General', description: 'Non-categorized general purpose datalink'},\n//     {key: eDatalinkType.Stage, name: 'Staging', description: 'Staging - loads data into a central/interim database'},\n//     {key: eDatalinkType.Validate, name: 'Validate', description: 'Validate - performs data validation and cleaning'},\n//     {key: eDatalinkType.Transform, name: 'Transform', description: 'Transform - reshapes, aggregates data'},\n//     {key: eDatalinkType.Deliver, name: 'Deliver', description: 'Deliver - prepares data for delivering to a system/database'},\n//     {key: eDatalinkType.Publish, name: 'Publish', description: 'Publish - sends data to a target system/database'},\n//     {key: eDatalinkType.Share, name: 'Share', description: 'Share - datalink designed to be shared with other users'},\n//     {key: eDatalinkType.Query, name: 'Query',\n//              description: 'Query - datalink query used for data extracts or as a source for other datalinks'},\n// ]\n\n// export enum eTransformWriterMethod {\n//     Bulk = <any>'Bulk',\n//     Transaction = <any>'Transaction',\n// }\n\nexport const loadStrategies = [\n    {key: eTransformWriterMethod.Bulk, description: 'Bulk load - target tables loaded in parallel as fast as possible'},\n    {key: eTransformWriterMethod.Transaction, description: 'Transaction - Target tables loaded in transactions to ensure data integrity'},\n]\n\n// export enum eUpdateStrategy {\n//     Reload = <any>'Reload',\n//     Append = <any>'Append',\n//     AppendUpdate = <any>'AppendUpdate',\n//     AppendUpdateDelete = <any>'AppendUpdateDelete',\n//     AppendUpdatePreserve = <any>'AppendUpdatePreserve',\n//     AppendUpdateDeletePreserve = <any>'AppendUpdateDeletePreserve',\n// }\n\nexport const updateStrategies = [\n    {key: eUpdateStrategy.Reload, description: 'Truncate target table and reload'},\n    {key: eUpdateStrategy.Append, description: 'Append all rows to target table'},\n    {key: eUpdateStrategy.AppendUpdate, description: 'Append new rows and update existing rows'},\n    {key: eUpdateStrategy.AppendUpdateDelete, description: 'Append new rows, update existing rows, and delete \"deleted\" rows'},\n    {key: eUpdateStrategy.AppendUpdatePreserve, description: 'Append new rows and update existing rows, and preserve changes'},\n    {key: eUpdateStrategy.AppendUpdateDeletePreserve, description: 'Append new rows, check for updates and deletes, and preserve changes'},\n]\n\n// export enum eConnectionPurpose {\n//     Source = <any>'Source',\n//     Managed = <any>'Managed',\n//     Target = <any>'Target',\n//     Internal = <any>'Internal'\n// }\n\n// export const connectionPurposes = [\n//     {key: eConnectionPurpose.Source, name: 'Source Database/Service'},\n//     {key: eConnectionPurpose.Managed, name: 'Managed (by Integration Hub) Database'},\n//     {key: eConnectionPurpose.Target, name: 'Target Database'},\n// ]\n\n// export enum eParameterDirection {\n//     Input = <any>'Input',\n//     Output = <any>'Output',\n//     Join = <any>'Join',\n//     ResultInput = <any>'ResultInput',\n//     ResultOutput = <any>'ResultOutput',\n//     ReturnValue = <any>'ReturnValue',\n//     ResultReturnValue = <any>'ResultReturnValue',\n// };\n\n// export enum eTransformItemType {\n//     BuiltInFunction = <any>'BuiltInFunction',\n//     CustomFunction = <any>'CustomFunction',\n//     ColumnPair = <any>'ColumnPair',\n//     JoinPair = <any>'JoinPair',\n//     FilterPair = <any>'FilterPair',\n//     AggregatePair = <any>'AggregatePair',\n//     Series = <any>'Series',\n//     Sort = <any>'Sort',\n//     Column = <any>'Column',\n//     JoinNode = <any>'JoinNode',\n//     GroupNode = <any>'GroupNode',\n//     Node = <any>'Node',\n//     UnGroup = <any>'UnGroup'\n// }\n\nexport const transformItemTypes = [\n    // tslint:disable-next-line:max-line-length\n    {key: eTransformItemType.BuiltInFunction, name: 'Built in Function', useSource: false, useTarget: false, useJoin: false, useFilter: false},\n    // tslint:disable-next-line:max-line-length\n    {key: eTransformItemType.CustomFunction, name: 'Custom Function', useSource: false, useTarget: false, useJoin: false, useFilter: false},\n    {key: eTransformItemType.ColumnPair, name: 'Mapping', useSource: true, useTarget: true, useJoin: false, useFilter: false},\n    {key: eTransformItemType.JoinPair, name: 'Join', useSource: true, useTarget: false, useJoin: true, useFilter: false},\n    {key: eTransformItemType.FilterPair, name: 'Filter', useSource: true, useTarget: true, useJoin: false, useFilter: true},\n    {key: eTransformItemType.AggregatePair, name: 'Aggregate', useSource: true, useTarget: true, useJoin: false, useFilter: false},\n    {key: eTransformItemType.Series, name: 'Series', useSource: true, useTarget: false, useJoin: false, useFilter: false},\n    {key: eTransformItemType.Sort, name: 'Sort By', useSource: true, useTarget: false, useJoin: false, useFilter: false},\n    {key: eTransformItemType.Column, name: 'Group By', useSource: true, useTarget: false, useJoin: false, useFilter: false},\n    {key: eTransformItemType.JoinNode, name: 'Join Node', useSource: true, useTarget: false, useJoin: true, useFilter: false},\n    {key: eTransformItemType.GroupNode, name: 'Group Node', useSource: true, useTarget: false, useJoin: false, useFilter: false},\n    {key: eTransformItemType.Node, name: 'Node', useSource: true, useTarget: false, useJoin: false, useFilter: false},\n    {key: eTransformItemType.UnGroup, name: 'Un-Group', useSource: true, useTarget: false, useJoin: false, useFilter: false},\n]\n\n// export enum eTransformFunctionType {\n//     Condition = <any>'Condition',\n//     Mapping = <any>'Mapping',\n//     Aggregate = <any>'Aggregate',\n//     Series = <any>'Series',\n//     Rows = <any>'Rows',\n//     Profile = <any>'Profile',\n//     Validation = <any>'Validation',\n//     JoinCondition = <any>'JoinCondition',\n//     Sort = <any>'Sort'\n// }\n\nexport const transformFunctionTypes = [\n    {key: eFunctionType.Condition, name: 'Condition Function'},\n    {key: eFunctionType.Map, name: 'Mapping Function'},\n    {key: eFunctionType.Aggregate, name: 'Aggregate Function'},\n    {key: eFunctionType.Rows, name: 'Row Generating Function'},\n    {key: eFunctionType.Profile, name: 'Profile Function'},\n    {key: eFunctionType.Validate, name: 'Validation Function'},\n    {key: eFunctionType.JoinCondition, name: 'Join Condition'},\n    {key: eFunctionType.Sort, name: 'Sort Function'},\n]\n\n// export enum eOnError {\n//     Abend = <any>'Abend',\n//     Null = <any>'Null',\n//     Ignore = <any>'Ignore'\n// }\n// export const onErrorActions = [\n//     {key: eOnError.Abend, name: 'Abend Datalink'},\n//     {key: eOnError.Null, name: 'Return Null'},\n//     {key: eOnError.Ignore, name: 'Discard the row'},\n// ];\n\n// export enum eOnNull {\n//     Execute = <any>'Execute',\n//     Abend = <any>'Abend',\n//     Null = <any>'Null',\n//     Ignore = <any>'Ignore'\n// }\n\n// export const onNullActions = [\n//     {key: eOnNull.Execute, name: 'Execute Function'},\n//     {key: eOnNull.Abend, name: 'Abend Datalink'},\n//     {key: eOnNull.Null, name: 'Return Null'},\n//     {key: eOnNull.Ignore, name: 'Discard the row'},\n// ];\n\n// export enum eParseErrorAction {\n//     RaiseEvent = <any>'RaiseEvent',\n//     AdvanceToNextLine = <any>'AdvanceToNextLine',\n//     ThrowException = <any>'ThrowException',\n// }\n\n// export const ParseErrorActions = [\n//     {key: eParseErrorAction.ThrowException, name: 'Abend Datalink'},\n//     {key: eParseErrorAction.RaiseEvent, name: 'Reject Record'},\n//     {key: eParseErrorAction.AdvanceToNextLine, name: 'Continue next line'},\n// ];\n\n// export enum eMissingFieldAction {\n//     ParseError = <any>'ParseError',\n//     ReplaceByEmpty = <any>'ReplaceByEmpty',\n//     ReplaceByNull = <any>'ReplaceByNull',\n// };\n\n// export const  MissingFieldActions = [\n//     {key: eMissingFieldAction.ParseError, name: 'Raise parse error'},\n//     {key: eParseErrorAction.RaiseEvent, name: 'Reject Record'},\n//     {key: eParseErrorAction.AdvanceToNextLine, name: 'Continue next line'},\n// ];\n\n// export enum eValueTrimmingOptions {\n//     None = <any>'None',\n//     UnquotedOnly = <any>'UnquotedOnly',\n//     QuotedOnly = <any>'QuotedOnly',\n//     All = <any>'All',\n// };\n\n// export const  ValueTrimmingOptions = [\n//     {key: eValueTrimmingOptions.All, name: 'All'},\n//     {key: eValueTrimmingOptions.None, name: 'None'},\n//     {key: eValueTrimmingOptions.QuotedOnly, name: 'Quoted Fields Only'},\n//     {key: eValueTrimmingOptions.UnquotedOnly, name: 'Unquoted Fields Only'},\n// ];\n\n// export enum eFailAction {\n//     Continue = <any>'Continue',\n//     ContinueNonDependent = <any>'ContinueNonDependent',\n//     Abend = <any>'Abend',\n// }\n\nexport const FailActions = [\n    {key: eFailAction.Abend, name: 'Abend the job'},\n    {key: eFailAction.Continue, name: 'Continue to next datalink'},\n    {key: eFailAction.ContinueNonDependent, name: 'Continue with non-dependent datalinks'},\n];\n\n// export enum eInvalidAction {\n//     Pass= <any>'Pass',\n//     Clean = <any>'Clean',\n//     RejectClean= <any>'RejectClean',\n//     Reject = <any>'Reject',\n//     Discard= <any>'Discard',\n//     Abend= <any>'Abend',\n// }\n\nexport const InvalidActions = [\n    {key: eInvalidAction.Pass, name: 'Pass Record'},\n    {key: eInvalidAction.Clean, name: 'Clean Record'},\n    {key: eInvalidAction.RejectClean, name: 'Reject/Clean Record'},\n    {key: eInvalidAction.Reject, name: 'Reject Record'},\n    {key: eInvalidAction.Discard, name: 'Discard Record'},\n    {key: eInvalidAction.Abend, name: 'Abend Datalink'},\n];\n\n// export enum eFunctionCaching {\n//     NoCache= <any>'NoCache',\n//     EnableCache= <any>'EnableCache',\n//     CallOnce= <any>'CallOnce',\n// }\n\nexport const FunctionCache = [\n    {key: eFunctionCaching.NoCache, name: 'No cache (function called for each row)'},\n    {key: eFunctionCaching.EnableCache, name: 'Enable cache (function called when values change)'},\n    {key: eFunctionCaching.CallOnce, name: 'Call Once (function called for first row only)'},\n]\n\n// export enum eCleanAction {\n//     DefaultValue = <any>'DefaultValue',\n//     Truncate = <any>'Truncate',\n//     Blank = <any>'Blank',\n//     Null = <any>'Null',\n//     OriginalValue = <any>'OriginalValue',\n//     CleanValue = <any>'CleanValue',\n// }\n\nexport const CleanActions = [\n    {key: eCleanAction.DefaultValue, name: 'Use columns default value'},\n    {key: eCleanAction.Truncate, name: 'Truncate (if string) to the maximum allowed length'},\n    {key: eCleanAction.Blank, name: 'Set to blank'},\n    {key: eCleanAction.Null, name: 'Set to null'},\n    {key: eCleanAction.OriginalValue, name: 'Use the original value'},\n    {key: eCleanAction.CleanValue, name: 'Use the specified clean value'},\n];\n\n// export enum eDuplicateStrategy {\n//     Abend = <any>'Abend',\n//     First = <any>'First',\n//     Last = <any>'Last',\n//     All = <any>'All',\n// }\n\n// export const duplicateStrategies = [\n//     {key: eDuplicateStrategy.Abend, name: 'Abend Datalink'},\n//     {key: eDuplicateStrategy.First, name: 'First Match'},\n//     {key: eDuplicateStrategy.Last, name: 'Last Match'},\n//     {key: eDuplicateStrategy.All, name: 'All matches (duplicate rows)'},\n// ];\n\n// export enum eSourceType {\n//     Datalink = <any>'Datalink',\n//     Table = <any>'Table',\n//     Rows = <any>'Rows',\n// }\n\nexport const sourceTypes = [\n    {key: eSourceType.Datalink, name: 'Datalink'},\n    {key: eSourceType.Table, name: 'Table'},\n    {key: eSourceType.Rows, name: 'Static Row Set'},\n];\n\n// export class Table {\n//     public name: string;\n//     public baseTableName: string;\n//     public logicalName: string;\n//     public description: string;\n//     public sourceConnectionName: string;\n\n//     public columns: Array<TableColumn>;\n\n//     public data: Array<Array<any>>;\n// }\n\n// export class TableColumn {\n//     public name: string;\n//     public logicalName: string;\n//     public columnGroup: string;\n//     public description: string;\n//     public dataType: eTypeCode;\n//     public maxLength: number;\n//     public isUnicode: boolean;\n//     public precision: number;\n//     public scale: number;\n//     public allowDbNull: boolean;\n//     public deltaType: eDeltaType;\n//     public defaultValue: string;\n//     public isUnique: boolean;\n//     public isMandatory: boolean;\n//     public isIncrementalUpdate: boolean;\n//     public securityFlag: eSecurityFlag;\n// }\n\n// export class TransformPerformance {\n//     public transformName: string;\n//     public action: string;\n//     public rows: number;\n//     public seconds: number;\n//     public children: TransformPerformance[];\n// }\n\n// export class TransformWriterResult {\n//         public auditKey: number;\n//         public auditType: string;\n//         public referenceKey: number;\n//         public parentAuditKey: number;\n//         public referenceName: string;\n//         public sourceTableKey: number;\n//         public sourceTableName: string;\n//         public targetTableKey: number;\n//         public targetTableName: string;\n\n//         public hubKey: string;\n//         public auditConnectionKey: number;\n\n//         public lastRowTotal: number;\n//         public lastMaxIncrementalValue: any;\n\n//         public rowsTotal: number;\n//         public rowsCreated: number;\n//         public rowsUpdated: number;\n//         public rowsDeleted: number;\n//         public rowsPreserved: number;\n//         public rowsIgnored: number;\n//         public rowsRejected: number;\n//         public rowsFiltered: number;\n//         public rowsSorted: number;\n//         public rowsReadPrimary: number;\n//         public rowsReadReference: number;\n\n//         public readTicks: number;\n//         public writeTicks: number;\n//         public processingTicks: number;\n\n//         public maxIncrementalValue: any;\n//         public maxSurrogateKey: number;\n\n//         public message: string;\n//         public exceptionDetails: string;\n//         public initializeTime: string;\n//         public scheduledTime: string;\n//         public startTime: string;\n//         public endTime: string;\n//         public lastUpdateTime: string;\n//         public triggerMethod: eTriggerMethod;\n//         public triggerInfo: string;\n//         public performanceSummary: TransformPerformance[];\n\n//         public runStatus: eRunStatus;\n\n//         public profileTableName: string;\n//         public rejectTableName: string;\n\n//         public childResults: TransformWriterResult[];\n// }\n\n\nexport class FileProperties {\n    public fileName: string;\n    public lastModified: Date;\n    public length: number;\n    public contentType: string;\n}\n\n// export class ImportOptions {\n//     public connections = eImportAction.Replace;\n//     public tables = eImportAction.Replace;\n//     public fileFormats = eImportAction.Replace;\n//     public datalinks = eImportAction.Replace;\n//     public datajobs = eImportAction.Replace;\n//     public columnValidations = eImportAction.Replace;\n//     public hubVariables = eImportAction.Replace;\n//     public customFunctions = eImportAction.Replace;\n//     public datalinkTests = eImportAction.Replace;\n//     public views = eImportAction.Replace;\n//     public apis = eImportAction.Replace;\n// }\n\n// export class ImportAction {\n//     public objectType: eSharedObjectType;\n//     public action: eImportAction;\n// }\n\n// export class Import {\n//     public hubKey: number;\n//     public hubVariables: ImportObject<DexihHubVariable>[];\n//     public datajobs: ImportObject<DexihDatajob>[];\n//     public datalinks: ImportObject<DexihDatalink>[];\n//     public connections: ImportObject<DexihConnection>[];\n//     public tables: ImportObject<DexihTable>[];\n//     public fileFormats: ImportObject<DexihFileFormat>[];\n//     public columnValidations: ImportObject<DexihColumnValidation>[];\n//     public customFunctions: ImportObject<DexihCustomFunction>[];\n//     public remoteAgentHubs: ImportObject<DexihRemoteAgentHub>[];\n//     public datalinkTests: ImportObject<DexihDatalinkTest>[];\n//     public views: ImportObject<DexihView>[];\n//     public apis: ImportObject<DexihApi>[];\n//     public warnings: string[] = [];\n//     public dashboards: ImportObject<DexihDashboard>[];\n// }\n\n// export class ImportObject<T> {\n//     public item: T;\n//     public importAction: eImportAction;\n// }\n\n// export enum eRunStatus {\n//     Initialised = <any>'Initialised',\n//     Scheduled = <any>'Scheduled',\n//     Started = <any>'Started',\n//     Running = <any>'Running',\n//     RunningErrors = <any>'RunningErrors',\n//     Finished = <any>'Finished',\n//     FinishedErrors = <any>'FinishedErrors',\n//     Abended = <any>'Abended',\n//     Cancelled = <any>'Cancelled',\n//     NotRunning = <any>'NotRunning',\n//     Passed = <any>'Passed',\n//     Failed= <any>'Failed'\n// }\n\nexport const runStatus = [\n    {key: eRunStatus.Initialised, name: 'Initialized'},\n    {key: eRunStatus.Scheduled, name: 'Scheduled'},\n    {key: eRunStatus.Started, name: 'Started'},\n    {key: eRunStatus.Running, name: 'Running'},\n    {key: eRunStatus.RunningErrors, name: 'Running(errors)'},\n    {key: eRunStatus.Finished, name: 'Finished'},\n    {key: eRunStatus.FinishedErrors, name: 'Finished(errors)'},\n    {key: eRunStatus.Abended, name: 'Abended'},\n    {key: eRunStatus.Cancelled, name: 'Cancelled'},\n    {key: eRunStatus.NotRunning, name: 'Not Running'},\n    {key: eRunStatus.Passed, name: 'Test Passed'},\n    {key: eRunStatus.Failed, name: 'Test Failed'},\n];\n\n\n// export enum eTriggerMethod {\n//     NotTriggered = <any>'NotTriggered',\n//     Manual = <any>'Manual',\n//     Schedule = <any>'Schedule',\n//     FileWatcher = <any>'FileWatcher',\n//     External = <any>'External',\n//     Datajob = <any>'Datajob',\n// }\n\n// // Summary:\n// //     Specifies the day of the week.\n// export enum eDayOfWeek {\n//     Sunday = <any>'Sunday',\n//     Monday = <any>'Monday',\n//     Tuesday  = <any>'Tuesday',\n//     Wednesday = <any>'Wednesday',\n//     Thursday  = <any>'Thursday',\n//     Friday = <any>'Friday',\n//     Saturday  = <any>'Saturday'\n// }\n\n// export enum eFlatFilePath {\n//     Incoming = <any>'incoming',\n//     Processed = <any>'processed',\n//     Rejected = <any>'rejected',\n//     Outgoing = <any>'outgoing',\n//     None = <any>'none',\n// }\n\n// export enum eFormatType {\n//     Xml = <any>'Xml',\n//     Json = <any>'Json',\n//     Text = <any>'Text',\n// }\n\nexport const formatTypes  = [\n    {key: eTypeCode.Xml, name: 'Xml'},\n    {key: eTypeCode.Json, name: 'Json'},\n    {key: eTypeCode.Text, name: 'Text'},\n];\n\n// export enum eImportAction {\n//     Replace = <any>'Replace',\n//     New = <any>'New',\n//     Leave = <any>'Leave',\n//     Skip = <any>'Skip',\n//     Delete =  <any>'Delete'\n// }\n\nexport const importActions  = [\n    {key: eImportAction.Replace, name: 'Replace existing'},\n    {key: eImportAction.New, name: 'Create a new version'},\n    {key: eImportAction.Leave, name: 'Leave existing version'},\n    {key: eImportAction.Skip, name: 'Skip item(s)'},\n];\n\n// export class InputColumn {\n//     public datalinkKey = 0;\n//     public datalinkName: string = null;\n//     public name: string = null;\n//     public logicalName: string = null;\n//     public dataType: eTypeCode;\n//     public value: string = null;\n//     public rank = 0;\n\n//     constructor() {\n//         this.dataType = eTypeCode.String;\n//     }\n// }\n\n// // mapping status enum.  Note, order is important.\nexport enum eMappingStatus {\n    MappedToNothing, // indicates a column has been mapped but is not in the target.\n    Mapped, // indicates a column has been mapped from source-target\n    PassThroughToNothing, // indicates a column has been passedThrough but not in the target.\n    PassThroughMap, // indicates a column has been default mapped as part of a passThrough setting.\n    MappedToVirtual, // indicates virtual table target.\n    PassThroughToVirtual,\n    AutoGenerate, // indicates a target column is autoGenerating and does not require a map.\n    Joined, // used in a join\n    Sorted,\n    NotMapped, // indicates a column in the target has not been mapped, and will be defaulted.\n    Error,\n}\n\nexport interface MappingStatusInfo {\n    key: eMappingStatus;\n    name: string;\n    statusClass: string;\n}\n\nexport const lineageMappingStatuses: MappingStatusInfo[] = [\n    // tslint:disable-next-line:max-line-length\n    {key: eMappingStatus.Mapped, name: 'From Mapped', statusClass: 'fa fa-arrow-circle-left text-success'},\n    {key: eMappingStatus.PassThroughToNothing, name: 'From Pass-through to Nothing', statusClass: 'fa fa-arrow-circle-left text-warning'},\n    {key: eMappingStatus.PassThroughMap, name: 'From Pass-through', statusClass: 'fa fa-arrow-circle-o-left text-success'},\n    {key: eMappingStatus.MappedToVirtual, name: 'From Virtual', statusClass: 'fa fa-square text-success'},\n    {key: eMappingStatus.PassThroughToVirtual, name: 'Passed-through to Virtual', statusClass: 'fa fa-square-o text-success'},\n    {key: eMappingStatus.AutoGenerate, name: 'Auto Generated', statusClass: 'fa fa-circle text-success'},\n    {key: eMappingStatus.Joined, name: 'Joined', statusClass: 'fa fa-code-fork text-success'},\n    {key: eMappingStatus.Sorted, name: 'Sorted', statusClass: 'fa fa-sort-alpha-asc text-success'},\n    {key: eMappingStatus.MappedToNothing, name: 'Mapped to Nothing', statusClass: 'fa fa-check-square text-warning'},\n    {key: eMappingStatus.NotMapped, name: 'Not mapped', statusClass: 'fa fa-times-circle text-warning'},\n    {key: eMappingStatus.Error, name: 'Error', statusClass: 'fa fa-exclamation-triangle text-danger'},\n];\n\nexport const impactMappingStatuses: MappingStatusInfo[] = [\n    // tslint:disable-next-line:max-line-length\n    {key: eMappingStatus.Mapped, name: 'Mapped to Target', statusClass: 'fa fa-arrow-circle-right text-success'},\n    {key: eMappingStatus.PassThroughToNothing, name: 'Passed-through to Nothing', statusClass: 'fa fa-arrow-circle-right text-warning'},\n    {key: eMappingStatus.PassThroughMap, name: 'Passed-through to Target', statusClass: 'fa fa-arrow-circle-o-right text-success'},\n    {key: eMappingStatus.MappedToVirtual, name: 'Mapped to Virtual', statusClass: 'fa fa-square text-success'},\n    {key: eMappingStatus.PassThroughToVirtual, name: 'Passed-through to Virtual', statusClass: 'fa fa-square-o text-success'},\n    {key: eMappingStatus.AutoGenerate, name: 'Auto Generated', statusClass: 'fa fa-circle text-success'},\n    {key: eMappingStatus.Joined, name: 'Joined', statusClass: 'fa fa-code-fork text-success'},\n    {key: eMappingStatus.Sorted, name: 'Sorted', statusClass: 'fa fa-sort-alpha-asc text-success'},\n    {key: eMappingStatus.MappedToNothing, name: 'Mapped to Nothing', statusClass: 'fa fa-arrow-circle-o-right text-warning'},\n    {key: eMappingStatus.NotMapped, name: 'Not mapped', statusClass: 'fa fa-times-circle text-warning'},\n    {key: eMappingStatus.Error, name: 'Error', statusClass: 'fa fa-exclamation-triangle text-danger'},\n];\n\nexport class ConnectionTables extends DexihConnection {\n    public dexihTables: DexihTable[];\n}\n\n// export class TransformProperties {\n//     public name: string;\n//     public transformName: string;\n//     public transformType: eTransformType;\n//     public selectQuery: SelectQuery;\n//     public properties: {[key: string]: number};\n//     public primaryProperties: TransformProperties;\n//     public referenceProperties: TransformProperties;\n//     public rows: number;\n//     public seconds: number;\n// }\n\nexport class PreviewResults {\n    public name: string;\n    public columns: Array<any>;\n    public viewConfig: ViewConfig;\n    public data: Array<any>;\n    public transformProperties: TransformProperties;\n    public status: Message;\n}\n\nexport class FlatFilesReady {\n    public hubKey: number;\n    public reference: string;\n    public tables: DexihTable[];\n    public message: Message;\n}\n\nexport class DashboardUrl {\n    public dashboardItemKey: number;\n    public downloadUrl: string;\n}\n\n// export class InputParameter {\n//     public name: string = null;\n//     public value = null;\n// }\n\n// export class LOVItem {\n//     public key;\n//     public name: string;\n//     public description: string;\n// }\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HubService } from './hub.service';\nimport { Routing } from './hub.routing';\nimport { SharedModule } from '../shared/shared.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HubSharedModule} from './hub.shared.module';\n\nimport { HubComponent } from './hub.component';\nimport { SummaryComponent } from './summary';\nimport { ItemEditGuard } from './item-edit.guard';\n\n@NgModule({\n    imports: [\n        SharedModule,\n        Routing,\n        ReactiveFormsModule,\n        HubSharedModule,\n    ],\n    declarations: [\n        HubComponent,\n        SummaryComponent,\n    ],\n    providers: [ ItemEditGuard ],\n    exports: [ ]\n})\nexport class HubModule {\n\n    static forRoot(): ModuleWithProviders<HubModule> {\n        return {\n            ngModule: HubModule,\n            providers: [HubService, ItemEditGuard]\n        };\n    }\n}\n","import { UpdateQuery, eAggregate, eCompare, eDownloadFormat } from '../shared/shared.models';\n\nexport class UpdateQueries {\n    public baseUpdateQuery: UpdateQuery;\n    public data: Array<any>;\n}\n\n// export class SelectQuery {\n//     public columns: Array<SelectColumn>;\n//     public table: string;\n//     public filters: Array<Filter>;\n//     public sorts: Array<Sort>;\n//     public groups: Array<TableColumn>;\n//     public rows: number;\n\n//     public fileName: string;\n//     public path: eFlatFilePath;\n\n//     constructor() {\n//         this.columns = new Array<SelectColumn>();\n//         this.filters = new Array<Filter>();\n//         this.sorts = new Array<Sort>();\n//         this.groups = new Array<TableColumn>();\n//         this.rows = 100; // -1 means show all rows.\n//     }\n// }\n\n// export class SelectColumn {\n//     public column: TableColumn;\n//     public aggregate: eAggregate;\n// }\n\n// export class UpdateQuery {\n//     public updateColumns: Array<QueryColumn>;\n//     public table: string;\n//     public filters: Array<Filter>;\n// }\n\n// export class DeleteQuery {\n//     public table: string;\n//     public filters: Array<Filter>;\n// }\n\n// export class InsertQuery {\n//     public table: string;\n//     public insertColumns: Array<QueryColumn>;\n// }\n\n// export class QueryColumn {\n//     public column: TableColumn;\n//     public Value: any;\n// }\n\n// export class Filter {\n//     public column1: TableColumn;\n//     public value1: any;\n//     public compareDataType: eTypeCode;\n\n//     public column2: TableColumn;\n//     public value2: any;\n\n//     public operator: eCompare;\n//     public andOr: eAndOr;\n// }\n\n// export class Sort {\n//     public column: TableColumn;\n//     public direction: eSortDirection;\n\n//     get details(): string {\n//         return this.column + ' ' + this.direction;\n//     };\n// }\n\n// export class DownloadObject {\n//     public objectType: eSourceType;\n//     public objectKey: number;\n//     public query: SelectQuery;\n//     public inputColumns: InputColumn[];\n//     public parameters: DexihInputParameter[];\n// }\n\n// export enum eDownloadFormat {\n//     Csv = <any>'Csv',\n//     Json = <any>'Json',\n//     JsonCompact = <any>'JsonCompact'\n// }\n\nexport const downloadFormats = [\n    {key: eDownloadFormat.Csv, name: 'Comma Separated File'},\n    {key: eDownloadFormat.Json, name: 'Json File'},\n    {key: eDownloadFormat.JsonCompact, name: 'Json File (separate headers section)'},\n];\n\n// export enum eAggregate {\n//     Sum = <any>'Sum',\n//     Average = <any>'Average',\n//     Min = <any>'Min',\n//     Max = <any>'Max',\n//     Count = <any>'Count',\n//     First = <any>'First',\n//     Last = <any>'Last'\n// }\n\n// export const aggregates = [\n//     {key: eAggregate.Sum, name: 'Sum'},\n//     {key: eAggregate.Average, name: 'Average'},\n//     {key: eAggregate.Min, name: 'Minimum'},\n//     {key: eAggregate.Max, name: 'Maximum'},\n//     {key: eAggregate.Count, name: 'Count'},\n//     {key: eAggregate.First, name: 'Last'},\n//     {key: eAggregate.Last, name: 'First'},\n// ];\n\n// export enum eCompare {\n//     IsEqual = <any>'IsEqual',\n//     GreaterThan = <any>'GreaterThan',\n//     GreaterThanEqual = <any>'GreaterThanEqual',\n//     LessThan = <any>'LessThan',\n//     LessThanEqual = <any>'LessThanEqual',\n//     NotEqual = <any>'NotEqual',\n//     IsIn = <any>'IsIn',\n//     IsNull = <any>'IsNull',\n//     IsNotNull = <any>'IsNotNull',\n//     Like = <any>'Like'\n// }\n\nexport const compare = [\n    {key: eCompare.IsEqual, name: '=', showFilter: false},\n    {key: eCompare.GreaterThan, name: '>', showFilter: false},\n    {key: eCompare.GreaterThanEqual, name: '>=', showFilter: false},\n    {key: eCompare.LessThan, name: '<', showFilter: false},\n    {key: eCompare.LessThanEqual, name: '<=', showFilter: false},\n    {key: eCompare.NotEqual, name: '!=', showFilter: false},\n    {key: eCompare.IsIn, name: 'IN', showFilter: false},\n    {key: eCompare.IsNotIn, name: 'NOT IN', showFilter: false},\n    {key: eCompare.IsNull, name: 'Is Null', showFilter: true},\n    {key: eCompare.IsNotNull, name: 'Is Not Null', showFilter: true},\n    {key: eCompare.Like, name: 'like', showFilter: false},\n];\n\n// export enum eAndOr {\n//     And = <any>'And',\n//     Or = <any>'Or'\n// }\n\n\n// export enum eSortDirection {\n//     Ascending = <any>'Ascending',\n//     Descending = <any>'Descending',\n// }\n\n\n","import { eTypeCode, eFunctionType, eTransformType, ApiData, RemoteLibraries, ManagedTask } from '../shared/shared.models';\n\n\nexport class RemoteAgentStatus {\n    public previousDatajobs: Array<ManagedTask>;\n    public previousDatalinks: Array<ManagedTask>;\n    public previousDatalinkTests: Array<ManagedTask>;\n    public activeDatajobs: Array<ManagedTask>;\n    public activeDatalinks: Array<ManagedTask>;\n    public activeDatalinkTests: Array<ManagedTask>;\n    public remoteLibraries: RemoteLibraries;\n    public activeApis: Array<ApiData>;\n\n    constructor() {\n        this.activeDatajobs = [];\n        this.activeDatalinks = [];\n        this.activeApis = [];\n    }\n}\n\n// export class RemoteLibraries {\n//     public functions: FunctionReference[];\n//     public connections: ConnectionReference[];\n//     public transforms: TransformReference[];\n\n//     public GetConnectionReference(connection: DexihConnection): ConnectionReference {\n//         if (connection && this.connections) {\n//             let ref = this.connections.find(c =>\n//                 c.connectionAssemblyName === connection.connectionAssemblyName\n//                 && c.connectionClassName === connection.connectionClassName);\n\n//             return ref;\n//         } else {\n//             return null;\n//         }\n//     }\n\n//     public GetTransformReference(transform: DexihDatalinkTransform): TransformReference {\n//         if (transform && this.transforms) {\n//             let ref = this.transforms.find(c =>\n//                 c.transformAssemblyName === transform.transformAssemblyName\n//                 && c.transformClassName === transform.transformClassName);\n\n//             return ref;\n//         } else {\n//             return null;\n//         }\n//     }\n\n//     // transforms that can be added/removed within a datalink\n//     public GetUserConfigTransformReference(): TransformReference[] {\n//         if (!this.transforms) {\n//             return [];\n//         }\n//         let userConfig = transformTypes.filter(c => c.allowUserConfig);\n//         return this.transforms.filter(c => userConfig.findIndex(u => u.key === c.transformType ) >= 0 );\n//     }\n\n//     public GetFunctionReference(item: DexihDatalinkTransformItem): FunctionReference {\n//         if (this.functions && item && item.functionClassName) {\n//             let ref = this.functions.find(c =>\n//                 c.functionAssemblyName === item.functionAssemblyName\n//                 && c.functionClassName === item.functionClassName);\n\n//             return ref;\n//         } else {\n//             return null;\n//         }\n//     }\n// }\n\n// export enum eFunctionType {\n//     Map = <any>'Map',\n//     Condition = <any>'Condition',\n//     Aggregate = <any>'Aggregate',\n//     Series = <any>'Series',\n//     Rows = <any>'Rows',\n//     Validate = <any>'Validate',\n//     Profile = <any>'Profile',\n// }\n\nexport const functionTypes = [\n    {key: eFunctionType.Condition, name: 'Condition Function'},\n    {key: eFunctionType.Map, name: 'Mapping Function'},\n    {key: eFunctionType.Aggregate, name: 'Aggregate Function'},\n    {key: eFunctionType.Rows, name: 'Row Generating Function'},\n    {key: eFunctionType.Profile, name: 'Profile Function'},\n    {key: eFunctionType.Validate, name: 'Validation Function'},\n]\n\n// export enum eGenericType {\n//     None = <any>'None',\n//     Numeric = <any>'Numeric',\n//     All = <any>'All',\n//     String = <any>'String',\n// }\n\n\n// export class FunctionReference {\n//     public functionType: eFunctionType;\n//     public category: string;\n//     public name: string;\n//     public description: string;\n\n\n//     public functionClassName: string;\n//     public functionMethodName: string;\n//     public functionAssemblyName: string;\n//     public resultMethodName: string;\n//     public resetMethodName: string;\n//     public importMethodName: string;\n\n//     public isGeneric: boolean;\n//     public genericTypeDefault: eTypeCode;\n//     public genericType: eGenericType;\n\n//     /// <summary>\n//     /// Used for profiling functions, indicates the property use to switch detailed results on/off.\n//     /// </summary>\n//     public detailedFlagName: string;\n\n//     /// <summary>\n//     /// Used to map a filter equivalent operator\n//     /// </summary>\n//     public compare: eCompare;\n\n//     public IsStandardFunction: boolean;\n\n//     public returnParameters: FunctionParameter[];\n//     public returnRank: number;\n//     public inputParameters: FunctionParameter[];\n//     public outputParameters: FunctionParameter[];\n\n//     public resultReturnParameters: FunctionParameter[];\n//     public resultInputParameters: FunctionParameter[];\n//     public resultOutputParameters: FunctionParameter[];\n// }\n\n\n// export class FunctionParameter {\n//     public name: string;\n//     public parameterName: string;\n//     public description: string;\n//     public isGeneric: boolean;\n//     public dataType: eTypeCode;\n//     public rank = 0;\n//     public isIndex: boolean;\n//     public linkedName: string;\n//     public linkedDescription: string;\n//     public isLabel: boolean;\n//     public listOfValues: string[];\n//     public defaultValue: any;\n// }\n\n// export enum eConnectionCategory {\n//     SqlDatabase = <any>'SqlDatabase',\n//     NoSqlDatabase = <any>'NoSqlDatabase',\n//     DatabaseFile = <any>'DatabaseFile',\n//     File = <any>'File',\n//     WebService = <any>'WebService',\n//     Hub = <any>'Hub',\n// }\n\n\n// export class ConnectionReference {\n//     public connectionCategory: eConnectionCategory;\n//     public name: string;\n//     public description: string;\n//     public databaseDescription: string;\n//     public serverDescription: string;\n//     public allowsConnectionString: boolean;\n//     public allowsSql: boolean;\n//     public allowsFlatFiles: boolean;\n//     public allowsManagedConnection: boolean;\n//     public allowsSourceConnection: boolean;\n//     public allowsTargetConnection: boolean;\n//     public allowsUserPassword: boolean;\n//     public allowsWindowsAuth: boolean;\n//     public requiresDatabase: boolean;\n//     public connectionClassName: string;\n//     public connectionAssemblyName: string;\n// }\n\n// export enum eTransformType {\n//     Mapping = <any>'Mapping',\n//     Filter = <any>'Filter',\n//     Sort = <any>'Sort',\n//     Group = <any>'Group',\n//     Aggregate = <any>'Aggregate',\n//     Series = <any>'Series',\n//     Join = <any>'Join',\n//     Rows = <any>'Rows',\n//     Lookup = <any>'Lookup',\n//     Validation = <any>'Validation',\n//     Delta = <any>'Delta',\n//     Concatenate = <any>'Concatenate',\n//     Profile = <any>'Profile'\n// }\n\nexport const transformTypes  = [\n    {key: eTransformType.Mapping, icon: 'fa fa-random', allowUserConfig: true},\n    {key: eTransformType.Filter, icon: 'fa fa-filter', allowUserConfig: true},\n    {key: eTransformType.Sort, icon: 'fa fa-sort-alpha-asc', allowUserConfig: true},\n    {key: eTransformType.Group, icon: 'fa fa-cubes', allowUserConfig: true},\n    {key: eTransformType.Aggregate, icon: 'fa fa-calculator', allowUserConfig: true},\n    {key: eTransformType.Series, icon: 'fa fa-line-chart', allowUserConfig: true},\n    {key: eTransformType.Join, icon: 'fa fa-link', allowUserConfig: true},\n    {key: eTransformType.Rows, icon: 'fa fa-bars', allowUserConfig: true},\n    {key: eTransformType.Lookup, icon: 'fa fa-binoculars', allowUserConfig: true},\n    {key: eTransformType.Validation, icon: 'fa fa-check-square-o', allowUserConfig: false},\n    {key: eTransformType.Delta, icon: 'fa fa-exchange', allowUserConfig: false},\n    {key: eTransformType.Concatenate, icon: 'fa fa-angle-double-down', allowUserConfig: true},\n    {key: eTransformType.Profile, icon: 'fa fa-angle-double-down', allowUserConfig: false},\n];\n\n\nexport class TransformReference {\n    public transformType: eTransformType;\n    public transformClassName: string;\n    public transformAssemblyName: string;\n\n    public name: string;\n    public description: string;\n}\n\n// export enum eTypeCode {\n//     Binary = <any>'Binary',\n//     Byte = <any>'Byte',\n//     CharArray = <any>'CharArray',\n//     SByte = <any>'SByte',\n//     UInt16 = <any>'UInt16',\n//     UInt32 = <any>'UInt32',\n//     UInt64 = <any>'UInt64',\n//     Int16 = <any>'Int16',\n//     Int32 = <any>'Int32',\n//     Int64 = <any>'Int64',\n//     Decimal = <any>'Decimal',\n//     Double = <any>'Double',\n//     Single = <any>'Single',\n//     String = <any>'String',\n//     Text = <any>'Text',\n//     Boolean = <any>'Boolean',\n//     DateTime = <any>'DateTime',\n//     Time = <any>'Time',\n//     Guid = <any>'Guid',\n//     Json = <any>'Json',\n//     Xml = <any>'Xml',\n//     Node = <any>'Node',\n//     Geometry = <any>'Geometry'\n// }\n\nexport const TypeCodes = [\n    {key: eTypeCode.String, name: 'String', isNumeric: false, isString: true},\n    {key: eTypeCode.CharArray, name: 'Char[fixed length string]', isNumeric: false, isString: true},\n    {key: eTypeCode.Text, name: 'Text', isNumeric: false, isString: true},\n    {key: eTypeCode.Binary, name: 'Binary', isNumeric: false, isString: false},\n    {key: eTypeCode.Boolean, name: 'Boolean', isNumeric: false, isString: false},\n    {key: eTypeCode.DateTime, name: 'Date & Time', isNumeric: false, isString: false},\n    {key: eTypeCode.Date, name: 'Date', isNumeric: false, isString: false},\n    {key: eTypeCode.Decimal, name: 'Decimal', isNumeric: true, isString: false},\n    {key: eTypeCode.Double, name: 'Double', isNumeric: true, isString: false},\n    {key: eTypeCode.Int16, name: 'Short Integer', isNumeric: true, isString: false},\n    {key: eTypeCode.Int32, name: 'Integer', isNumeric: true, isString: false},\n    {key: eTypeCode.Int64, name: 'Long Integer', isNumeric: true, isString: false},\n    {key: eTypeCode.UInt16, name: 'Unsigned Short Integer', isNumeric: true, isString: false},\n    {key: eTypeCode.UInt32, name: 'Unsigned Integer', isNumeric: true, isString: false},\n    {key: eTypeCode.UInt64, name: 'Unsigned Long Integer', isNumeric: true, isString: false},\n    {key: eTypeCode.Byte, name: 'Byte', isNumeric: false, isString: false},\n    {key: eTypeCode.SByte, name: 'Signed Byte', isNumeric: false, isString: false},\n    {key: eTypeCode.Time, name: 'Time', isNumeric: false, isString: false},\n    {key: eTypeCode.Guid, name: 'Guid', isNumeric: false, isString: false},\n    {key: eTypeCode.Xml, name: 'Xml', isNumeric: false, isString: false},\n    {key: eTypeCode.Json, name: 'Json', isNumeric: false, isString: false},\n    {key: eTypeCode.Geometry, name: 'Geometry (spacial data)', isNumeric: false, isString: false},\n    {key: eTypeCode.Node, name: 'Node (contains child nodes)', isNumeric: false, isString: false},\n\n];\n\nexport enum eBasicType {\n    Any,\n    String,\n    Numeric,\n    Date,\n    Time,\n    Boolean,\n    Binary\n}\n\n// Functions to simplify display of typeCodes.\nexport class TypeFunctions {\n    constructor(\n        public dataType: eTypeCode,\n        public maxLength: number,\n        public precision: number,\n        public scale: number ) {\n\n    }\n\n    // converts a typeCode to basicType.\n    public getBasicTypeCode(): eBasicType {\n        switch (this.dataType) {\n            case eTypeCode.Byte:\n            case eTypeCode.SByte:\n            case eTypeCode.UInt16:\n            case eTypeCode.UInt32:\n            case eTypeCode.UInt64:\n            case eTypeCode.Int16:\n            case eTypeCode.Int32:\n            case eTypeCode.Int64:\n            case eTypeCode.Decimal:\n            case eTypeCode.Double:\n            case eTypeCode.Single: return eBasicType.Numeric;\n            case eTypeCode.Guid:\n            case eTypeCode.Text:\n            case eTypeCode.CharArray:\n            case eTypeCode.String: return eBasicType.String;\n            case eTypeCode.Boolean: return eBasicType.Boolean;\n            case eTypeCode.DateTime: return eBasicType.Date;\n            case eTypeCode.Date: return eBasicType.Date;\n            case eTypeCode.Time: return eBasicType.Time;\n            case eTypeCode.Binary: return eBasicType.Binary;\n            default: return eBasicType.Any;\n        }\n    }\n\n    // tests if column is string type.\n    public columnIsString(): boolean {\n        return this.dataType === eTypeCode.String || this.dataType === eTypeCode.CharArray;\n    }\n\n    // tests if column is a decimal type.\n    public columnIsDecimal(): boolean {\n        return this.dataType === eTypeCode.Double || this.dataType === eTypeCode.Decimal || this.dataType === eTypeCode.Single;\n    }\n\n    // formats the type with bracket indicating precision (e.g. string(10) or decimal(5,2) )\n    public columnType(): string {\n        let type: string = eTypeCode[this.dataType];\n        if (this.columnIsString() && this.maxLength > 0) {\n            type = type + '(' + this.maxLength + ')';\n        }\n        if (this.columnIsDecimal()) {\n            type = type + '(' + this.precision + ', ' + this.scale + ')';\n        }\n\n        return type;\n    }\n}\n","import { Routes, Route, RouterModule } from '@angular/router';\nimport { HubComponent } from './hub.component';\nimport { SummaryComponent } from './summary';\nimport { SearchComponent} from './search';\nimport { ItemEditGuard} from './item-edit.guard';\n\n\nexport const routes = [\n{\n    path: '',\n    component: HubComponent,\n    children: [\n        { path: '', redirectTo: 'summary'},\n        { path: 'summary', data: { pageTitle: 'Summary' }, children: (<Routes>[\n            { path: '', pathMatch: 'full', component: SummaryComponent, data: { pageTitle: 'Summary' } },\n            { path: '', loadChildren: () => import('./hub.base.module').then(m => m.HubBaseModule) }\n         ])\n        }\n    ]}\n];\n\nexport const Routing = RouterModule.forChild(routes);\n","import { Injectable, OnDestroy, OnInit } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription, combineLatest, Subject} from 'rxjs';\nimport { Message, PromiseWithCancel, CancelToken } from '../+auth/auth.models';\nimport { AuthService } from '../+auth/auth.service';\nimport { eLogLevel, LogFactory } from '../../logging';\nimport {\n    FileProperties,\n    HubCache,\n    HubCacheChange,\n    eCacheStatus,\n    PreviewResults,\n    FlatFilesReady,\n    DexihInputParameter\n} from './hub.models';\nimport { RemoteAgentStatus, transformTypes } from './hub.remote.models';\nimport { DexihDatajob, DexihTable, DexihHub, DexihRemoteAgentHub, DexihConnection, DexihDatalink, InputColumn,\n    InputParameter, DexihView, DexihDashboard, DexihApi, SelectQuery, DexihColumnValidation, DexihCustomFunction,\n    DexihDatalinkTransformItem, DexihFileFormat, DexihHubVariable, DexihDatalinkTest, DexihDatalinkStep, TransformWriterResult,\n    TransformProperties, Import, eImportAction, eRunStatus, eDatalinkType, eDeltaType, eConnectionPurpose, eFlatFilePath,\n    ApiData, DownloadObject, eDownloadFormat, DexihActiveAgent, ImportObject, ePermission, eTypeCode, eDataObjectType,\n    eSharedObjectType, RemoteLibraries, ConnectionReference, TransformReference,\n    FunctionReference, eFunctionType, ClientMessage, eClientCommand, HubUser, DexihListOfValues, ManagedTask,\n    eLOVObjectType, ListOfValuesItem, DexihTag, DexihTagObject, eUpdateStrategy } from '../shared/shared.models';\nimport { filter, take, first } from 'rxjs/operators';\n\n@Injectable()\nexport class HubService implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n    private _webSocketSubscription: Subscription;\n\n    private _hubKey = 0;\n    private _hubCache = new BehaviorSubject<HubCache>(new HubCache(eCacheStatus.NoHub, null));\n    private _hubMessages = new BehaviorSubject<Array<Message>>([]);\n\n    // updates whenever the local hub cache changes\n    private _hubCacheChange = new Subject<HubCacheChange>();\n\n    // updates whenever a new transformWriter result is updated\n    private _transformWriterResultChange = new Subject<TransformWriterResult>();\n\n    // updates whenever an api is started/stopped\n    private _apiStatusChange = new Subject<DexihApi>();\n\n    private _remoteLibraries = new BehaviorSubject<RemoteLibraries>(null);\n\n    // updates whenever a bulk file upload is completed.\n    private _flatFiles = new Subject<FlatFilesReady>();\n\n    // private _activeAgents: DexihActiveAgent[];\n    private _remoteAgent = new BehaviorSubject<DexihActiveAgent>(null);\n    private isResettingRemoteAgent = false;\n\n    public newDatajob: DexihDatajob;\n    public newTable: DexihTable;\n\n    // used to track if the hub is currently refreshing to avoid multiple calls.\n    private _refreshHubRunning = false;\n\n    private logger = new LogFactory('hub.service');\n\n    constructor(\n        private authService: AuthService\n    ) {\n        this.logger.LogC(() => ` Initialized.`, eLogLevel.Information);\n\n        // listen to any message coming from the server.\n        this._webSocketSubscription = this.authService.getWebSocketObservable().subscribe(message => {\n            if (message) {\n                this.processWebSocketMessage(message);\n            }\n        });\n\n\n        this._subscription = combineLatest(\n            authService.getGlobalCacheObservable(),\n            this.authService.getHubsObservable(),\n            this.getHubCacheObservable(),\n            this.authService.getRemoteAgentsObservable()\n        ).subscribe(result => {\n            let globalCache = result[0];\n            let hubs = result[1];\n            let hubCache = result[2];\n\n            if (hubCache && hubCache.hub && globalCache) {\n\n                // if remote libraries are not loaded (from remoteAgent) then use the default.\n                if (!this._remoteLibraries.value) {\n                    let remoteLibraries = new RemoteLibraries();\n                    if (globalCache && globalCache.defaultRemoteLibraries) {\n                        remoteLibraries.connections = globalCache.defaultRemoteLibraries.connections;\n                        remoteLibraries.transforms = globalCache.defaultRemoteLibraries.transforms;\n                        remoteLibraries.functions = globalCache.defaultRemoteLibraries.functions;\n                        this._remoteLibraries.next(remoteLibraries);\n                    }\n                }\n\n                // // if the hub is not available, reset.\n                // if (hubs) {\n                //     if (hubCache && hubCache.hub) {\n                //         let hubFound = hubs.find(h => h.hubKey === hubCache.hub.hubKey);\n                //         if (!hubFound) {\n                //             this.resetHubCache();\n                //         }\n                //     }\n                // } else {\n                //     this.resetHubCache();\n                // }\n\n                this.resetRemoteAgent(hubCache);\n            }\n        });\n    }\n\n    ngOnInit() {\n\n    }\n\n    ngOnDestroy() {\n        this.logger.LogC(() => `OnDestroy.`, eLogLevel.Debug);\n\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._webSocketSubscription) { this._webSocketSubscription.unsubscribe(); }\n        if (this._remoteAgent) { this._remoteAgent.unsubscribe(); }\n        if (this._hubCache) { this._hubCache.unsubscribe(); }\n    }\n\n    public createHub(key: number, name: string): DexihHub {\n        let hub = new DexihHub();\n        hub.hubKey = key;\n        hub.name = name;\n\n        return hub;\n    }\n\n    public isHubCacheLoaded(): boolean {\n        return this.getHubCache().status === eCacheStatus.Loaded;\n    }\n\n    getHubUrl(): string {\n        return '/hub/' + this._hubKey;\n    }\n\n    // gets the hub cache\n    getHubCacheObservable(filterLoaded = false): Observable<HubCache> {\n        let observable = this._hubCache.asObservable();\n\n        if (filterLoaded) {\n            observable = observable.pipe(filter(c => c !== null && c.isLoaded() === true) );\n        }\n\n        return observable;\n    }\n\n    getHubCachePromise(): Promise<HubCache> {\n        return this._hubCache.asObservable().pipe(first()).toPromise();\n    }\n\n    // gets the hub cache\n    getHubCache(): HubCache {\n        return this._hubCache.value;\n    }\n\n    // hubCacheChange detects specific changes to objects and is used to monitor object changes from other sessions when editing forms.\n    getHubCacheChangeObservable(): Observable<HubCacheChange> {\n        return this._hubCacheChange.asObservable();\n    }\n\n    getTransformWriterResultChangeObservable(): Observable<TransformWriterResult> {\n        return this._transformWriterResultChange.asObservable();\n    }\n\n    geApiStatusChangeObservable(): Observable<DexihApi> {\n        return this._apiStatusChange.asObservable();\n    }\n\n    getFlatFilesObservable(): Observable<FlatFilesReady> {\n        return this._flatFiles.asObservable();\n    }\n\n    getHubMessagesObservable(): Observable<Array<Message>> {\n        return this._hubMessages.asObservable();\n    }\n\n    getHubMessages(): Array<Message> {\n        return this._hubMessages.value;\n    }\n\n    addHubMessage(message: any, log = false, context = '') {\n        let converted = message;\n        if (message.stack) {\n            converted = new Message(false, 'Client Error: ' + message.message, message.stack, '');\n        } else {\n            converted = new Message(message.success, context + ': ' + message.message, message.exceptionDetails, message.value);\n        }\n        this.authService.addUpdateNotification(converted, log);\n        let messages = this.getHubMessages();\n        messages.push(converted);\n        this._hubMessages.next(messages);\n    }\n\n    addHubErrorMessage(message: string) {\n        let newMessage = new Message(false, message, null, null);\n        this.addHubMessage(newMessage);\n    }\n\n    addHubClientErrorMessage(error: Error, context: string) {\n        let message = context + '.  The following error occurred on the client: ' + error.message;\n        let newMessage = new Message(false, message, error.stack, null);\n        this.addHubMessage(newMessage, true);\n\n    }\n\n    addHubSuccessMessage(message: string) {\n        let newMessage = new Message(true, message, null, null);\n        this.addHubMessage(newMessage);\n    }\n\n\n    // update the hubKey and refresh the cache.\n    async updateHub(hubKey: number, name: string ): Promise<void> {\n        this.logger.LogC(() => `updateHub, hubKey: ${hubKey}, name: ${name}.`, eLogLevel.Debug);\n\n        this._hubMessages.next([]);\n\n        if (hubKey === null || hubKey === 0) {\n            let hubCache = new HubCache(eCacheStatus.NoHub, this.createHub(0, name));\n            this._hubKey = 0;\n            this._hubCache.next(hubCache);\n        } else if (!this._hubCache.getValue().hub || this._hubCache.getValue().hub.hubKey !== hubKey) {\n            await this.refreshHubCache(hubKey, name);\n        }\n    }\n\n    // refresh the hubCache.\n    async refreshHubCache(hubKey: number, name: string): Promise<void> {\n        if (!this._refreshHubRunning) {\n            this._refreshHubRunning = true;\n\n            this.logger.LogC(() => `refreshHubCache, hubKey: ${hubKey}, name: ${name}.`, eLogLevel.Debug);\n\n            this._hubKey = hubKey;\n            this._hubCache.next(new HubCache(eCacheStatus.Loading, this.createHub(hubKey, name)));\n\n            try {\n                let result = await this.hubPost<{permission: ePermission, hub: DexihHub}>('/api/Hub/GetHubCache', {}, 'Loading the hub cache...');\n                let hub: DexihHub = result.hub;\n                let permission = result.permission;\n\n                this.logger.LogC(() => `refreshHubCache, hub loaded ${hub.name}.`, eLogLevel.Debug);\n\n                // update the status for datalink and datajobs.  These are use to monitor execution status.\n                hub.dexihDatalinks.forEach(datalink => {\n                    datalink['currentStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                    datalink['previousStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                });\n\n                hub.dexihDatajobs.forEach(datajob => {\n                    datajob['currentStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                    datajob['previousStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                });\n\n                hub.dexihDatalinkTests.forEach(datalinkTest => {\n                    datalinkTest['currentStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                    datalinkTest['previousStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                });\n\n                hub.dexihTables.forEach(table => {\n                    table['currentStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                    table['previousStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                });\n\n                hub.dexihApis.forEach(api => {\n                    api['currentStatus'] = new BehaviorSubject<ApiData>(null);\n                });\n\n                let hubCache: HubCache = new HubCache(eCacheStatus.Loaded, hub);\n                hubCache.hubPermission = permission;\n                this.resetRemoteAgent(hubCache);\n                this._hubCache.next(hubCache);\n\n                this._refreshHubRunning = false;\n            } catch(reason) {\n                this.logger.LogC(() => `refreshHubCache, hub load error: ${reason.message}.`, eLogLevel.Error);\n                this._hubCache.next(new HubCache(eCacheStatus.Error, null));\n                this.addHubMessage(reason);\n\n                this._refreshHubRunning = false;\n            }\n        }\n    }\n\n    resetHubCache(): void {\n        this._hubKey = 0;\n        this._hubCache.next(new HubCache(eCacheStatus.NoHub, null));\n    }\n\n    // set current remoteAgent\n    getRemoteAgentObservable(filterActive = false): Observable<DexihActiveAgent> {\n        let observable = this._remoteAgent.asObservable();\n        if (filterActive) {\n            observable = observable.pipe(filter(c => c !== null && c.isRunning) );\n        }\n\n        return observable;\n    }\n\n    getRemoteAgentCurrent(): DexihActiveAgent {\n        return this._remoteAgent.value;\n    }\n\n    getRemoteLibrariesObservable(): Observable<RemoteLibraries> {\n        return this._remoteLibraries.asObservable();\n    }\n\n    getRemoteLibrariesPromise(): Promise<RemoteLibraries> {\n        return this._remoteLibraries.asObservable().pipe(filter(c => c !== null), take(1)).toPromise();\n    }\n\n    // sets the remote agent to the appropriate default agent when a status changes.\n    async resetRemoteAgent(hubCache: HubCache) {\n        if (this.isResettingRemoteAgent) { return; }\n\n        try {\n            if (!hubCache || !hubCache.hub || !hubCache.hub.dexihRemoteAgentHubs) {\n                this.setNoRemoteAgent(hubCache);\n                return;\n            }\n\n            this.isResettingRemoteAgent = true;\n\n            let activeAgent = this._remoteAgent.value;\n\n            let remoteAgents = await this.authService.getRemoteAgentsPromise();\n\n            if (!remoteAgents) {\n                this.setNoRemoteAgent(hubCache);\n                return;\n            }\n\n            // check if currently selected agent is still valid for this hub.\n            if (activeAgent) {\n                if (hubCache.hub.dexihRemoteAgentHubs\n                    .find(c => c.isAuthorized && c.isValid && c.remoteAgentKey === activeAgent.remoteAgentKey)) {\n                    let remoteAgent = remoteAgents.find(c => c.remoteAgentKey === activeAgent.remoteAgentKey);\n                    if (remoteAgent && remoteAgent['activeAgents'] &&\n                        remoteAgent['activeAgents'].find(c => c.instanceId === activeAgent.instanceId)) {\n                        return;\n                    }\n                }\n            }\n\n            let defaultAgents = hubCache.hub.dexihRemoteAgentHubs.filter(c => c.isDefault && c.isAuthorized && c.isValid);\n            for (let i = 0; i < defaultAgents.length; i++) {\n                let remoteAgent = remoteAgents.find(c => c.remoteAgentKey === defaultAgents[i].remoteAgentKey);\n                if (remoteAgent && remoteAgent['activeAgents'] && remoteAgent['activeAgents'].length > 0) {\n                    this._remoteAgent.next(remoteAgent['activeAgents'][0]);\n                    await this.getRemoteAgentStatus(hubCache);\n                    return;\n                }\n            }\n            let otherAgents = hubCache.hub.dexihRemoteAgentHubs.filter(c => !c.isDefault && c.isAuthorized && c.isValid);\n            for (let i = 0; i < otherAgents.length; i++) {\n                let remoteAgent = remoteAgents.find(c => c.remoteAgentKey === otherAgents[i].remoteAgentKey);\n                if (remoteAgent && remoteAgent['activeAgents'] && remoteAgent['activeAgents'].length > 0) {\n                    this._remoteAgent.next(remoteAgent['activeAgents'][0]);\n                    await this.getRemoteAgentStatus(hubCache);\n                    return;\n                }\n            }\n\n            this.setNoRemoteAgent(hubCache);\n        } catch (reason) {\n            this.addHubMessage(reason, true, 'Resetting remote agent' );\n        } finally {\n            this.isResettingRemoteAgent = false;\n        }\n    }\n\n    setCurrentRemoteAgent(activeAgent: DexihActiveAgent) {\n        if (activeAgent) {\n            let remoteAgentHubs = this._hubCache.value.hub.dexihRemoteAgentHubs;\n            let authorized = remoteAgentHubs.findIndex(c => c.remoteAgentKey === activeAgent.remoteAgentKey && c.isAuthorized);\n            if (authorized < 0) {\n                this.addHubErrorMessage('Can not select the remote agent as it is not authorized.')\n            } else {\n                this._remoteAgent.next(activeAgent);\n            }\n        }\n    }\n\n    setNoRemoteAgent(hubCache: HubCache) {\n        this._remoteAgent.next(null);\n        let hub = hubCache.hub;\n\n        if (!hub) { return; }\n\n        hub.dexihApis.forEach(api => {\n            api['currentStatus'].next(null);\n        });\n\n        // merge the datalink/datajob status into the cached objects.\n        hub.dexihDatalinks.forEach(datalink => {\n            datalink['currentStatus'].next(null);\n            datalink['previousStatus'].next(null);\n        });\n\n        hub.dexihTables.forEach(table => {\n            table['currentStatus'].next(null);\n            table['previousStatus'].next(null);\n        });\n\n        hub.dexihDatajobs.forEach(datajob => {\n            datajob['currentStatus'].next(null);\n            datajob['previousStatus'].next(null);\n        });\n\n        hub.dexihDatalinkTests.forEach(test => {\n            test['currentStatus'].next(null);\n            test['previousStatus'].next(null);\n        });\n    }\n\n    // gets the current remote agent\n    getCurrentRemoteAgentId(required = true): string {\n        let agent = this._remoteAgent.getValue();\n        if (!agent) {\n            if (required) {\n                let message = 'The operation can not be completed, as there is no remote agent selected.';\n                this.addHubErrorMessage(message)\n                throw(message);\n            } else {\n                return '';\n            }\n        } else {\n            return agent.instanceId;\n        }\n    }\n\n    public GetConnectionReference(connection: DexihConnection): Promise<ConnectionReference> {\n        return new Promise<ConnectionReference>((resolve, reject) => {\n            this.getRemoteLibrariesPromise().then(remoteLibraries => {\n                if (connection) {\n                    let ref = remoteLibraries.connections.find(c =>\n                        c.connectionAssemblyName === connection.connectionAssemblyName\n                        && c.connectionClassName === connection.connectionClassName);\n\n                    resolve(ref);\n\n                } else {\n                    resolve(null);\n                }\n            }).catch(reason => reject(reason));\n        });\n    }\n\n    // transforms that can be added/removed within a datalink\n    public GetUserConfigTransformReference(): Promise<TransformReference[]> {\n        return new Promise<TransformReference[]>((resolve, reject) => {\n            this.getRemoteLibrariesPromise().then(remoteLibraries => {\n                let userConfig = transformTypes.filter(c => c.allowUserConfig);\n                resolve(remoteLibraries.transforms.filter(c => userConfig.findIndex(u => u.key === c.transformType ) >= 0 ));\n            }).catch(reason => reject(reason));\n        });\n    }\n\n    public GetFunctionReference(item: DexihDatalinkTransformItem): Promise<FunctionReference> {\n        return new Promise<FunctionReference>((resolve, reject) => {\n            this.getRemoteLibrariesPromise().then(remoteLibraries => {\n                if (item) {\n                    let ref = remoteLibraries.functions.find(c =>\n                        c.functionAssemblyName === item.functionAssemblyName\n                        && c.functionClassName === item.functionClassName\n                        && c.functionMethodName === item.functionMethodName);\n\n                    resolve(ref);\n\n                } else {\n                    resolve(null);\n                }\n            }).catch(reason => reject(reason));\n        });\n    }\n\n    public GetFunctionsByType(functionType: eFunctionType): Promise<FunctionReference[]> {\n        return new Promise<FunctionReference[]>((resolve, reject) => {\n            this.getRemoteLibrariesPromise().then(remoteLibraries => {\n                resolve(remoteLibraries.functions.filter(c => c.functionType === functionType));\n            }).catch(reason => reject(reason));\n        });\n    }\n\n    private processWebSocketMessage(data: ClientMessage) {\n            this.logger.LogC(() => `processWebSocketMessage, method: ${data.command}, value: ${data.value}.`, eLogLevel.Debug);\n\n            switch (data.command) {\n                case eClientCommand.Connect:\n                    let cache = this.getHubCache();\n\n                    // if there is an existing cache, and there is a reconnect, then reload it.\n                    // otherwise, it will be loaded by the hubComponent.\n                    if (cache && cache.status === eCacheStatus.Loaded) {\n                        this.refreshHubCache(cache.hub.hubKey, cache.hub.name);\n                        // this.resetRemoteAgent(this._hubCache.value);\n                    }\n                    break;\n                // case 'remoteAgent-update':\n                // case 'remoteAgent-delete':\n                // case 'remoteAgent-deleteKey':\n                // case 'disconnect': {\n                //     this.resetRemoteAgent(this._hubCache.value);\n                //     break;\n                // }\n                case eClientCommand.HubChange: {\n                    let hubChange: Import = data.value;\n                    this.updateHubChange(hubChange);\n                    break;\n                }\n                case eClientCommand.HubError: {\n                    let message: Message = data.value;\n                    this.addHubMessage(message);\n                    break;\n                }\n                case eClientCommand.DatalinkProgress : {\n                    let task: ManagedTask = data.value;\n                    this.addDatalinkProgress(task);\n                }\n                break;\n                case eClientCommand.DatalinkStatus : {\n                    let task: ManagedTask = data.value;\n                    this.addDatalinkProgress(task);\n                }\n                break;\n                case eClientCommand.DatajobProgress : {\n                    let task: ManagedTask = data.value;\n                    this.addDatajobProgress(task);\n                }\n                break;\n                case eClientCommand.DatajobProgress : {\n                    let task: ManagedTask = data.value;\n                    this.addDatajobProgress(task);\n                }\n                break;\n                case eClientCommand.DatalinkTestProgress : {\n                    let task: ManagedTask = data.value;\n                    this.addDatalinkTestProgress(task);\n                }\n                break;\n                case eClientCommand.ApiStatus: {\n                    let apiData: ApiData = data.value;\n                    this.addApiStatus(apiData);\n                }\n                break;\n                case eClientCommand.FlatFilesReady:\n                    let flatFiles: FlatFilesReady = data.value;\n                    this._flatFiles.next(flatFiles);\n\n            }\n            this.logger.LogC(() => `processWebSocketMessage completed, method: ${data.command}.`, eLogLevel.Debug);\n    }\n\n    public updateHubChange(hubChange: Import) {\n        if (!hubChange) { return; }\n\n        let hubCache = this.getHubCache();\n\n        this.mergeChange(hubChange.hubVariables, hubCache.hub.dexihHubVariables, 'key', eSharedObjectType.HubVariable);\n        this.mergeChange(hubChange.columnValidations, hubCache.hub.dexihColumnValidations, 'key',\n            eSharedObjectType.ColumnValidation);\n        this.mergeChange(hubChange.connections, hubCache.hub.dexihConnections, 'key', eSharedObjectType.Connection);\n        this.mergeChange(hubChange.datajobs, hubCache.hub.dexihDatajobs, 'key', eSharedObjectType.Datajob);\n        this.mergeChange(hubChange.datalinks, hubCache.hub.dexihDatalinks, 'key', eSharedObjectType.Datalink);\n        this.mergeChange(hubChange.fileFormats, hubCache.hub.dexihFileFormats, 'key', eSharedObjectType.FileFormat);\n        this.mergeChange(hubChange.customFunctions, hubCache.hub.dexihCustomFunctions, 'key',\n            eSharedObjectType.CustomFunction);\n        this.mergeChange(hubChange.remoteAgentHubs, hubCache.hub.dexihRemoteAgentHubs, 'key', eSharedObjectType.RemoteAgent);\n        this.mergeChange(hubChange.datalinkTests, hubCache.hub.dexihDatalinkTests, 'key', eSharedObjectType.DatalinkTest);\n        this.mergeChange(hubChange.views, hubCache.hub.dexihViews, 'key', eSharedObjectType.View);\n        this.mergeChange(hubChange.apis, hubCache.hub.dexihApis, 'key', eSharedObjectType.Api);\n        this.mergeChange(hubChange.tables, hubCache.hub.dexihTables, 'key', eSharedObjectType.Table);\n        this.mergeChange(hubChange.dashboards, hubCache.hub.dexihDashboards, 'key', eSharedObjectType.Dashboard);\n        this.mergeChange(hubChange.listOfValues, hubCache.hub.dexihListOfValues, 'key', eSharedObjectType.ListOfValues);\n        this.mergeChange(hubChange.tags, hubCache.hub.dexihTags, 'key', eSharedObjectType.Tags);\n\n        if (hubChange.tagObjects && hubChange.tagObjects.length > 0) {\n            this.mergeChangeTagObjects(hubChange.tagObjects, hubCache.hub.dexihTagObjects);\n        }\n\n        if (hubChange.remoteAgentHubs && hubChange.remoteAgentHubs.length > 0) {\n            this.resetRemoteAgent(hubCache);\n        }\n    }\n\n    private mergeChange(source: ImportObject<any>[], target: any[], keyField: string, changeClass: eSharedObjectType) {\n        if (source && source.length > 0) {\n            source.forEach(item => {\n                let current = target.find(c => c[keyField] === item.item[keyField]);\n\n                if (current && current.updateDate === item.item.updateDate) {\n                    return;\n                }\n\n                // if the change is a datalink or datajob, preserve the current/previous status.\n                if (changeClass === eSharedObjectType.Datalink || changeClass === eSharedObjectType.Datajob ||\n                    changeClass === eSharedObjectType.Table || changeClass === eSharedObjectType.DatalinkTest) {\n                    if (current) {\n                        item.item['currentStatus'] = current['currentStatus'];\n                        item.item['previousStatus'] = current['previousStatus'];\n                    } else {\n                        item.item['currentStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                        item.item['previousStatus'] = new BehaviorSubject<TransformWriterResult>(null);\n                    }\n                }\n\n                if ( changeClass === eSharedObjectType.Api) {\n                    if (current) {\n                        item.item['currentStatus'] = current['currentStatus'];\n                        item.item['previousStatus'] = current['previousStatus'];\n                    } else {\n                        item.item['currentStatus'] = new BehaviorSubject<ApiData>(null);\n                        item.item['previousStatus'] = new BehaviorSubject<ApiData>(null);\n                    }\n                }\n\n                // if the change is a connection, preserve the existing tables.\n                if (changeClass === eSharedObjectType.Connection && current) {\n                    item.item.dexihTables = current.dexihTables;\n                }\n\n                switch (item.importAction) {\n                    case eImportAction.New:\n                    case eImportAction.Replace:\n                        if (current) {\n                            Object.assign(current, item.item);\n                        } else {\n                            current = item.item;\n                            target.push(item.item);\n                        }\n                        break;\n                    case eImportAction.Delete:\n                        if (current) {\n                            let index = target.findIndex(c => c[keyField] === item.item[keyField]);\n                            target.splice(index, 1);\n                        }\n                }\n\n                this._hubCacheChange.next(new HubCacheChange(changeClass, item.importAction, current));\n            });\n        }\n    }\n\n    private mergeChangeTagObjects(source: ImportObject<DexihTagObject>[], target: DexihTagObject[]) {\n        if (source && source.length > 0) {\n            source.forEach(item => {\n                let current = target\n                    .find(c => c.tagKey === item.item.tagKey\n                        && c.objectKey === item.item.objectKey && c.objectType === item.item.objectType);\n\n                if (current && current.updateDate === item.item.updateDate) {\n                    return;\n                }\n\n                switch (item.importAction) {\n                    case eImportAction.New:\n                    case eImportAction.Replace:\n                        if (current) {\n                            Object.assign(current, item.item);\n                        } else {\n                            current = item.item;\n                            target.push(item.item);\n                        }\n                        break;\n                    case eImportAction.Delete:\n                        if (current) {\n                            let index = target\n                            .findIndex(c => c.tagKey === item.item.tagKey\n                                && c.objectKey === item.item.objectKey && c.objectType === item.item.objectType);\n                            target.splice(index, 1);\n                        }\n                }\n\n                this._hubCacheChange.next(new HubCacheChange(eSharedObjectType.TagObjects, item.importAction, current));\n            });\n        }\n    }\n\n    private addApiStatus(apiData: ApiData) {\n        const api = this._hubCache.value.hub.dexihApis.find(c => c.key === apiData.apiKey);\n        if (api) {\n            api['currentStatus'].next(apiData);\n            this._apiStatusChange.next(api);\n        }\n    }\n\n        // updates the datalink progress observables.\n    private addDatalinkProgress(task: ManagedTask) {\n        if (!this.isHubCacheLoaded()) { return; }\n        let writerResult: TransformWriterResult = task.data;\n        if (!writerResult) {return; }\n        const datalink = this._hubCache.value.hub.dexihDatalinks.find(c => c.key === writerResult.referenceKey);\n        if (datalink) {\n            if (writerResult.runStatus === eRunStatus.Abended ||\n                writerResult.runStatus === eRunStatus.Finished ||\n                writerResult.runStatus === eRunStatus.FinishedErrors ) {\n                    datalink['previousStatus'].next(writerResult);\n                    datalink['currentStatus'].next(null);\n            } else {\n                datalink['currentStatus'].next(writerResult);\n            }\n\n            if (writerResult.targetTableKey > 0) {\n                this.addTableProgress(writerResult);\n            }\n\n            if (writerResult.childResults) {\n                writerResult.childResults.forEach(c => {\n                    this.addTableProgress(c);\n                });\n            }\n\n            this._transformWriterResultChange.next(writerResult);\n        }\n    }\n\n    private addDatalinkTestProgress(task: ManagedTask) {\n        let writerResult: TransformWriterResult = task.data;\n        if (!writerResult) {return; }\n        const datalinkTest = this._hubCache.value.hub.dexihDatalinkTests.find(c => c.key === writerResult.referenceKey);\n        if (datalinkTest) {\n            if (writerResult.runStatus === eRunStatus.Abended ||\n                writerResult.runStatus === eRunStatus.Finished ||\n                writerResult.runStatus === eRunStatus.FinishedErrors ) {\n                    datalinkTest['previousStatus'].next(writerResult);\n                    datalinkTest['currentStatus'].next(null);\n            } else {\n                datalinkTest['currentStatus'].next(writerResult);\n            }\n            this._transformWriterResultChange.next(writerResult);\n        }\n    }\n\n    private addTableProgress(writerResult: TransformWriterResult) {\n        if (!writerResult) {return; }\n        const table = this._hubCache.value.getTable(writerResult.targetTableKey);\n        if (table) {\n            if (writerResult.runStatus === eRunStatus.Abended ||\n                writerResult.runStatus === eRunStatus.Finished ||\n                writerResult.runStatus === eRunStatus.FinishedErrors ) {\n                    table['previousStatus'].next(writerResult);\n                    table['currentStatus'].next(null);\n            } else {\n                table['currentStatus'].next(writerResult);\n            }\n            this._transformWriterResultChange.next(writerResult);\n\n            if (writerResult.childResults) {\n                writerResult.childResults.forEach(c => {\n                    this.addTableProgress(c);\n                });\n            }\n        }\n    }\n\n      // updates the datalink progress observables.\n    private addDatajobProgress(task: ManagedTask) {\n        if (!this.isHubCacheLoaded()) { return; }\n        let writerResult: TransformWriterResult = task.data;\n        if (!writerResult) {return; }\n        const datajob = this._hubCache.value.hub.dexihDatajobs.find(c => c.key === writerResult.referenceKey);\n        if (datajob) {\n            if (writerResult.runStatus === eRunStatus.Abended ||\n                writerResult.runStatus === eRunStatus.Cancelled ||\n                writerResult.runStatus === eRunStatus.Finished ||\n                writerResult.runStatus === eRunStatus.FinishedErrors ) {\n                    let currentStatus: TransformWriterResult = datajob['currentStatus'].value;\n                    if (currentStatus !== null) {\n                        if (currentStatus.auditKey === writerResult.auditKey) {\n                            datajob['currentStatus'].next(null);\n                        }\n                    }\n                    datajob['previousStatus'].next(writerResult);\n                } else {\n                datajob['currentStatus'].next(writerResult);\n            }\n            this._transformWriterResultChange.next(writerResult);\n        }\n    }\n\n    public hubPostConfirm<T>(url: string, data: any, waitMessage: string, confirmMessage: string) {\n        data.hubKey = this._hubKey;\n        return new Promise<T>((resolve, reject) => {\n            this.authService.postConfirm<T>(url, data, waitMessage, confirmMessage).then(result => {\n                resolve(result);\n            }).catch(reason => {\n                // reason = null is for cancel.\n                if (reason == null || typeof reason === undefined) {\n                    resolve(null);\n                    return;\n                }\n\n                this.logger.LogMessage(reason);\n                // this.addHubMessage(reason);\n                reject(reason);\n            });\n        });\n    }\n\n    public hubPost<T>(url: string, data: any, waitMessage: string): Promise<T> {\n        data.hubKey = this._hubKey;\n        return new Promise<T>((resolve, reject) => {\n            this.authService.post<T>(url, data, waitMessage).then(result => {\n                resolve(result);\n            }).catch(reason => {\n                if (reason) { this.logger.LogMessage(reason); }\n               // this.addHubMessage(reason);\n                reject(reason);\n            });\n        });\n    }\n\n    public hubPostRemote<T>(url: string, data: any, waitMessage: string, cancelToken: CancelToken): PromiseWithCancel<T> {\n        data.hubKey = this._hubKey;\n        return new PromiseWithCancel<T>((resolve, reject) => {\n            this.authService.postRemote<T>(url, data, this.getRemoteAgentCurrent(), waitMessage, cancelToken).then(result => {\n                resolve(result);\n            }).catch(reason => {\n                if (reason) { this.logger.LogMessage(reason); }\n                // this.addHubMessage(reason);\n                reject(reason);\n            });\n        });\n    }\n\n    public hubPostRemoteConfirm<T>(url: string, data: any, waitMessage: string,\n        confirmMessage: string, cancelToken: CancelToken): PromiseWithCancel<T> {\n        data.hubKey = this._hubKey;\n        return new PromiseWithCancel<T>((resolve, reject) => {\n            this.authService.confirmDialog('Please confirm...', confirmMessage).then(confirm => {\n                if (confirm) {\n                    resolve(this.hubPostRemote<T>(url, data, waitMessage, cancelToken));\n                } else {\n                    reject();\n                }\n            }).catch(() => reject() );\n        });\n    }\n\n    public getRemoteResponse<T>(key: string, cancelToken: CancelToken, command: 'upload' | 'download' | 'setRaw' = 'download',\n        extra = ''): Promise<T> {\n        let remoteAgent = this.getRemoteAgentCurrent();\n        return this.authService.getRemoteData<T>(remoteAgent, key, cancelToken, command, extra);\n    }\n\n     deleteRemoteAgent(remoteAgent: DexihRemoteAgentHub): Promise<boolean> {\n         return this.hubPostConfirm<boolean>('/api/Hub/DeleteRemoteAgent', {\n            remoteAgentHubKey:  remoteAgent.remoteAgentHubKey,\n        }, 'Deleting the hub remote agent...',\n        'This action will delete the selected ' +\n        ' remote agent from this hub.  <p></p>Are you sure?'\n        );\n    }\n\n    saveRemoteAgent(remoteAgentHub: DexihRemoteAgentHub): Promise<boolean> {\n        return this.hubPost('/api/Hub/SaveRemoteAgent', {\n            hubKey: this._hubKey,\n            value: remoteAgentHub\n        }, 'Saving the hub remote agent...')\n    }\n\n    // updates all the information on the remoteAgent.\n    private getRemoteAgentStatus(hubCache: HubCache): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            let remoteAgent = this.getRemoteAgentCurrent();\n            if (remoteAgent) {\n                let remoteAgentPromise = this.hubPostRemote<RemoteAgentStatus>('/api/Hub/GetRemoteAgentStatus', {\n                    hubKey: hubCache.hub.hubKey }, null, null);\n                let globalCachePromise = this.authService.getGlobalCachePromise();\n                let hubPromise = this.getHubCachePromise();\n\n                Promise.all([remoteAgentPromise, globalCachePromise, hubPromise]).then(values => {\n                    let agentStatus = values[0];\n                    let globalCache = values[1];\n                    let hub = values[2].hub;\n\n                    // combine any functions in the libraries on the remote agent with the standard global remote libraries.\n                    let remoteLibraries = new RemoteLibraries();\n                    remoteLibraries.connections =\n                        globalCache.defaultRemoteLibraries.connections.concat(agentStatus.remoteLibraries.connections);\n                    remoteLibraries.transforms =\n                        globalCache.defaultRemoteLibraries.transforms.concat(agentStatus.remoteLibraries.transforms);\n                    remoteLibraries.functions =\n                        globalCache.defaultRemoteLibraries.functions.concat(agentStatus.remoteLibraries.functions);\n\n                    this._remoteLibraries.next(remoteLibraries);\n\n                    hub.dexihApis.forEach(api => {\n                        api['currentStatus'].next(agentStatus.activeApis.find(c => c.apiKey === api.key));\n                    });\n\n                    // merge the datalink/datajob status into the cached objects.\n                    hub.dexihDatalinks.forEach(datalink => {\n                        datalink['currentStatus'].next(this.getTransformWriterResult(datalink.key,  agentStatus.activeDatalinks));\n                        datalink['previousStatus'].next(\n                            this.getTransformWriterResult(datalink.key,  agentStatus.previousDatalinks));\n                    });\n\n                    hub.dexihTables.forEach(table => {\n                        table['currentStatus'].next(this.getTransformWriterTable(table.key, agentStatus.activeDatalinks));\n                        table['previousStatus'].next(this.getTransformWriterTable(table.key, agentStatus.previousDatalinks));\n                    });\n\n                    hub.dexihDatajobs.forEach(datajob => {\n                        datajob['currentStatus'].next(this.getTransformWriterResult(datajob.key,  agentStatus.activeDatajobs));\n                        datajob['previousStatus'].next(this.getTransformWriterResult(datajob.key,  agentStatus.previousDatajobs));\n                    });\n\n                    hub.dexihDatalinkTests.forEach(test => {\n                        test['currentStatus'].next(this.getTransformWriterResult(test.key,  agentStatus.activeDatalinkTests));\n                        test['previousStatus'].next(\n                            this.getTransformWriterResult(test.key,  agentStatus.previousDatalinkTests));\n                    });\n\n                    resolve(true);\n\n                }).catch(reason => {\n                    // this.addHubMessage(reason, true, 'Refreshing Remote Agent');\n                    reject(reason);\n                });\n            }\n        });\n    }\n\n    private getTransformWriterResult(referentKey: number, tasks: ManagedTask[]): TransformWriterResult {\n        let task = tasks.find(c => c.data && c.data.referenceKey === referentKey);\n        if (!task) { return null; }\n        return task.data;\n    }\n\n    private getTransformWriterTable(tableKey, tasks: ManagedTask[]): TransformWriterResult {\n        for (let task of tasks) {\n            let datalinkResult = <TransformWriterResult> task.data;\n            if (datalinkResult == null) { return null; }\n            let writerResult = this.SearchForTable(tableKey, datalinkResult);\n            if (writerResult) { return writerResult; }\n        }\n\n        return null;\n    }\n\n    private SearchForTable(tableKey: number, writerResult: TransformWriterResult) {\n        if (writerResult.targetTableKey === tableKey) { return writerResult; }\n\n        if (writerResult && writerResult.childResults) {\n            for (let child of writerResult.childResults) {\n                return this.SearchForTable(tableKey, child);\n            }\n        }\n\n        return null;\n    }\n\n        // updates all the information on the remoteAgent.\n    getHubUsers(): Promise<HubUser[]> {\n        return this.hubPost<HubUser[]>('/api/Hub/HubUsers', {}, 'Getting hub users...');\n    }\n\n    setUserPermissions(emails: string[], permission: ePermission, sendInvites: boolean): Promise<any> {\n        return this.hubPost('/api/Hub/SetUsersPermission', {\n            emails: emails, permission: permission, sendInvites: sendInvites\n        }, 'Setting user permissions...');\n    }\n\n    setUserAlerts(userIds: string[], alertEmails, sendInvites: boolean): Promise<any> {\n        return this.hubPost('/api/Hub/SetUsersAlerts', {\n            userIds: userIds, alertEmails: alertEmails, sendInvites: sendInvites\n        }, 'Setting user permissions...');\n    }\n\n    removeUsers(emails: string[]): Promise<any> {\n        return this.hubPost('/api/Hub/RemoveUsers', {emails: emails }, 'Removing hub users...');\n    }\n\n    exportHub(hub: DexihHub, filename: string) {\n        const content = JSON.stringify(hub, (key, value) => {\n            // don't bother saving the null values.\n            if (value === null ) { return undefined; }\n\n            switch (key) {\n                case 'currentStatus':\n                case 'entityStatus':\n                case 'previousStatus':\n                case 'runTime':\n                    return undefined;\n            }\n            return value;\n        } );\n\n        let blob = new Blob([content], { type: 'application/json;charset=utf-8;' });\n        if (navigator.msSaveBlob) { // IE 10+\n            navigator.msSaveBlob(blob, filename);\n        } else {\n            let link = document.createElement('a');\n            if (typeof link.download !== undefined) { // feature detection\n                // Browsers that support HTML5 download attribute\n                let url = URL.createObjectURL(blob);\n                link.setAttribute('href', url);\n                link.setAttribute('download', filename);\n                link.style.visibility = 'hidden';\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n            }\n        }\n    }\n\n    importPackage(importPackage: Import): Promise<any> {\n        return this.hubPost<any>('/api/Hub/ImportPackage', importPackage, 'Importing package...' );\n    }\n\n    deleteConnections(connections: Array<DexihConnection>): Promise<boolean> {\n        let connectionNames = connections.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteConnections', {\n            itemKeys: connections.map(c => c.key)}, 'Deleting connections...',\n            'This action will delete the following connections:<p></p>' + connectionNames + '<p></p> Are you sure?');\n    }\n\n    // tests the connection and refreshes the databases.\n    refreshConnection(connection: DexihConnection, cancelToken: CancelToken): PromiseWithCancel<Array<string>> {\n        return this.hubPostRemote<Array<string>>('/api/Hub/RefreshConnection',\n            {value: connection}, 'Refreshing connection...', cancelToken);\n    }\n\n    // tests the connection and refreshes the databases.\n    createDatabase(connection: DexihConnection, cancelToken: CancelToken): PromiseWithCancel<any> {\n        return this.hubPostRemote<Array<string>>('/api/Hub/CreateDatabase', {value: connection}, 'Creating new database...', cancelToken);\n    }\n\n    // decrypted a value in the hub.\n    async encrypt(value: string, cancelToken: CancelToken): Promise<string> {\n        let key = await this.authService.postRemoteGetKey('/api/Hub/Encrypt', {hubKey: this._hubKey},\n            this.getRemoteAgentCurrent(), cancelToken);\n        await this.getRemoteResponse<string>(key, cancelToken, 'setRaw', value);\n        let result = await this.getRemoteResponse<string>(key, cancelToken, 'download');\n        return result;\n    }\n\n    // decrypted a value in the hub.\n    decrypt(value: string, cancelToken: CancelToken): PromiseWithCancel<string> {\n        return this.hubPostRemote<string>('/api/Hub/Decrypt', {value: value}, 'Decrypting...', cancelToken);\n    }\n\n    // gets a list of table names in a remote database\n    getDatabaseTableNames(connection: DexihConnection, cancelToken: CancelToken): PromiseWithCancel<Array<DexihTable>> {\n        return this.hubPostRemote<Array<DexihTable>>('/api/Hub/DatabaseTableNames',\n            {value: connection}, 'Getting database table names...', cancelToken);\n    }\n\n    // import a list of specified tables in a remote database\n    importTables(tables: Array<DexihTable>, save: boolean, cancelToken: CancelToken): Promise<Array<DexihTable>> {\n        // if there are any table that are already imported, then warn the over of an overwrite.\n        let importedTables = tables.filter(c => c.key > 0);\n\n        if (importedTables.length > 0) {\n            return new Promise<Array<DexihTable>>((resolve, reject) => {\n            this.authService.confirmDialog('Re-Import Tables',\n            'This action will re-import the following tables, which will reset column customizations ' +\n            ' (such as descriptions, column validations, delta types etc.) and may invalidate some datalink mappings. <p></p>' +\n                    importedTables.map(c => c.name).join(',') +\n                    '  <p></p><p></p>Are you sure you want to continue?').then(confirm => {\n                        if (confirm) {\n                            this.doImport(tables, save, cancelToken).then(result => {\n                                resolve(result);\n                            }).catch(reason => reject(reason));\n                        } else {\n                            resolve(null);\n                        }\n                    }).catch(reason => {\n                        reject(reason);\n                    });\n                });\n        } else {\n            return this.doImport(tables, save, cancelToken);\n        }\n    }\n\n    public doImport(tables: Array<DexihTable>, save: boolean, cancelToken: CancelToken): Promise<Array<DexihTable>> {\n        return new Promise<Array<DexihTable>>((resolve, reject) => {\n            this.hubPostRemote<DexihTable[]>('/api/Hub/ImportTables', {\n            tables: tables,\n        }, 'Importing tables...', cancelToken).then(importedTables => {\n            if (save) {\n                resolve(this.saveTables(importedTables));\n            } else {\n                let hub = this.getHubCache();\n                importedTables.forEach(t => {\n                    t.dexihTableColumns.forEach(c => {\n                        if (c.key === 0) {\n                            c.key = hub.getNextSequence();\n                        }\n                    });\n                });\n                resolve(importedTables);\n            }\n        }).catch(reason => reject(reason));\n    });\n    }\n\n        // import a list of specified tables in a remote database\n    reImportTables(tableKeys: Array<number>, save: boolean, cancelToken: CancelToken): Promise<Array<DexihTable>> {\n        return new Promise<Array<DexihTable>>((resolve, reject) => {\n            const cache = this._hubCache.value;\n\n            let tables: Array<DexihTable> = [];\n            tableKeys.forEach(tableKey => {\n                const table = cache.getTable(tableKey);\n                if (!table) {\n                    const message = `Error: The re-import failed, as the table with the key ${tableKey} could not be found.`;\n                    this.addHubErrorMessage(message);\n                    this.logger.LogC(() => message, eLogLevel.Error);\n                    reject(message);\n                }\n                tables.push(table);\n            });\n\n            this.authService.confirmDialog('Re-Import Tables',\n            'This action will re-import the following tables, which will reset column customizations ' +\n            ' (such as descriptions, column validations, delta types etc.) and may invalidate some datalink mappings. <p></p>' +\n                    tables.map(c => c.name).join(',') +\n                    '  <p></p><p></p>Are you sure you want to continue?').then(confirm => {\n\n                        if (confirm) {\n                        this.doImport(tables, save, cancelToken)\n                            .then(result => {\n                                resolve(result);\n                            }).catch(reason => {\n                                reject(reason);\n                            });\n                        } else {\n                            resolve(null);\n                        }\n                    }).catch(() => {\n                        resolve(null);\n                    });\n        });\n    }\n\n    clearTables(tableKeys: Array<number>, cancelToken: CancelToken): Promise<boolean> {\n        const cache = this._hubCache.value;\n\n        let tables: Array<DexihTable> = [];\n        tableKeys.forEach(tableKey => {\n            const table = cache.getTable(tableKey);\n            if (!table) {\n                const message = `Error: The clear tables failed, as the table with the key ${tableKey} could not be found.`;\n                this.addHubErrorMessage(message);\n                this.logger.LogC(() => message, eLogLevel.Error);\n                return Promise.reject(message);\n            }\n            tables.push(table);\n        });\n\n        return this.hubPostRemoteConfirm<boolean>('/api/Hub/ClearTables', {\n            tables: tables,\n        }, 'Clearing tables...',\n        'This action will remove <b>ALL DATA</b> from the following tables.  This action cannot be reversed.' +\n        tables.map(c => c.name).join(',') +\n        '  <p></p><p></p>Are you sure you want to continue?', cancelToken);\n    }\n\n    createTables(tables: Array<DexihTable>, cancelToken: CancelToken): Promise<boolean> {\n        return this.hubPostRemoteConfirm<boolean>('/api/Hub/CreateTables', {\n            tables: tables,\n            dropTables: true\n        }, 'Clearing tables...',\n        // tslint:disable-next-line:max-line-length\n        'This action will drop and re-create the following tables, removing <b>ALL DATA</b>.  This action cannot be reversed.<p></p><p></p>' +\n        tables.map(c => c.name).join(',') +\n        '  <p></p><p></p>Are you sure you want to continue?', cancelToken);\n    }\n\n    // remove imported tables\n    deleteTables(tables: Array<DexihTable>): Promise<boolean> {\n        const names = tables.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm('/api/Hub/DeleteTables', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(false),\n            itemKeys: tables.map(t => t.key)\n        }, 'Deleting tables...',\n        'This action will delete the selected tables from the repository metadata ' +\n        '(note, this action \\\"does not\\\" delete tables from the underlying database).<p></p>' +\n        names +\n        ' <p></p><p></p>Are you sure you want to continue?'\n        );\n    }\n\n    // save an updated table\n    saveTables(tables: DexihTable[]): Promise<DexihTable[]> {\n        return this.hubPost('/api/Hub/SaveTables', {value: tables}, 'Saving tables..');\n    }\n\n    // get dbml string\n    getDbml(tables: Array<DexihTable>) {\n        this.authService.downloadFile('/api/Hub/DBML', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(false),\n            itemKeys: tables.map(t => t.key)\n        }, 'Getting DBML...', 'text/plain');\n    }\n\n    // create datalinks\n    createDatalinks(sourceTableKeys: Array<number>, name: string, datalinkType: eDatalinkType,\n        targetConnectionKey: number, targetTableKey: number,\n        targetTableName: string, auditConnectionKey: number,\n        addSourceColumns: boolean, auditColumns: Array<eDeltaType>): Promise<Array<DexihDatalink>> {\n            return this.hubPost<Array<DexihDatalink>>('/api/Hub/CreateDatalinks', {\n                hubKey: this._hubKey,\n                remoteAgentId: this.getCurrentRemoteAgentId(),\n                sourceTableKeys: sourceTableKeys,\n                datalinkName: name,\n                datalinkType: datalinkType,\n                targetConnectionKey: targetConnectionKey,\n                targetTableKey: targetTableKey,\n                targetTableName: targetTableName,\n                auditConnectionKey: auditConnectionKey,\n                addSourceColumns,\n                auditColumns\n            }, 'Creating datalinks...')\n    }\n\n        // remove datalinks\n    deleteDatalinks(datalinks: Array<DexihDatalink>): Promise<boolean> {\n        const datalinkNames = datalinks.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteDatalinks', {\n            itemKeys: datalinks.map(d => d.key)\n        }, 'Deleting datalinks...',\n        'This action will delete the following datalinks and underlying transforms from the repository metadata.<p></p>' +\n        datalinkNames +\n        '<p></p><p></p>Are you sure you want to continue?');\n    }\n\n    shareItems(keys: Array<number>, objectType: eDataObjectType, isShared: boolean): Promise<boolean> {\n        return this.hubPost<boolean>('/api/Hub/ShareItems', {\n            keys: keys,\n            objectType: objectType,\n            isShared: isShared\n        }, 'Sharing items...')\n    }\n\n    runDatalinks(datalinkKeys: Array<number>, truncateTarget: boolean,\n        resetIncremental: boolean, resetIncrementalValue: string, inputColumns: InputColumn[],\n        inputParameters: InputParameter[], cancelToken: CancelToken): Promise<boolean> {\n\n        let data = {\n            connectionId: this.authService.getWebSocketConnectionId(),\n            datalinkKeys: datalinkKeys,\n            truncateTarget: truncateTarget,\n            resetIncremental: resetIncremental,\n            resetIncrementalValue: resetIncrementalValue,\n            inputColumns: inputColumns,\n            inputParameters: inputParameters\n        };\n\n        if (truncateTarget) {\n            return this.hubPostRemoteConfirm('/api/Hub/RunDatalinks', data, 'Running datalinks...',\n            'This action will truncate all data in the target tables in the selected datalinks and reload from source.  ' +\n            '<p></p><p></p>Are you sure you want to continue?', cancelToken);\n        } else {\n            return this.hubPostRemote('/api/Hub/RunDatalinks', data, 'Running datalinks...', cancelToken);\n        }\n    }\n\n\n    public runDatalinkTests(datalinkTestKeys: Array<number>, cancelToken: CancelToken): Promise<boolean> {\n        return this.hubPostRemote<boolean>('/api/Hub/RunDatalinkTests', {\n            connectionId: this.authService.getWebSocketConnectionId(),\n            datalinkTestKeys: datalinkTestKeys\n        }, 'Running datalink tests...', cancelToken);\n    }\n\n    cancelDatalinkTests(datalinkTestKeys: Array<number>, cancelToken: CancelToken): Promise<boolean> {\n        return this.hubPostRemote<boolean>('/api/Hub/CancelDatalinkTests', {\n            itemKeys: datalinkTestKeys\n        }, 'Cancelling datalink tests...', cancelToken)\n    }\n\n    cancelDatalinks(datalinkKeys: Array<number>, cancelToken: CancelToken): Promise<boolean> {\n        return this.hubPostRemote<boolean>('/api/Hub/CancelDatalinks', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(),\n            itemKeys: datalinkKeys\n        }, 'Cancelling datalinks...', cancelToken)\n    }\n\n    getAuditResults(auditType: string, connectionKeys: Array<number>, referenceKeys: Array<number>,\n        childItems: boolean, rows: number, cancelToken: CancelToken): Promise<Array<TransformWriterResult>> {\n             return this.hubPostRemote<Array<TransformWriterResult>>('/api/Hub/PreviewAuditResults', {\n                connectionKeys,\n                referenceKeys: referenceKeys,\n                auditType: auditType,\n                childItems: childItems,\n                rows: rows,\n                }, 'Previewing audit results...', cancelToken);\n    }\n\n    getResultDetail(auditConnectionKey: number, auditKey: number, cancelToken: CancelToken): Promise<TransformWriterResult[]> {\n        return this.hubPostRemote<TransformWriterResult[]>('/api/Hub/PreviewAuditResults', {\n            connectionKeys: [auditConnectionKey],\n            referenceKeys: [],\n            auditKey: auditKey,\n            childItems: true,\n            rows: 1\n            }, 'Previewing audit results...', cancelToken);\n    }\n\n    deleteDatajobs(datajobs: Array<DexihDatajob>): Promise<boolean> {\n        let names = datajobs.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>(\n            '/api/Hub/DeleteDatajobs', {\n                hubKey: this._hubKey,\n                itemKeys: datajobs.map(t => t.key)\n            }, 'Deleting datajob(s)...',\n            'This action will delete the following data jobs, and any schedules and dependencies ' +\n            '(Note, this will NOT delete the datalinks): <p></p> ' + names  + '<p></p>  Are you sure?'\n        );\n    }\n\n    runDatajobs(datajobs: Array<DexihDatajob>, truncateTarget: boolean,\n        resetIncremental: boolean, resetIncrementalValue: string, inputParameters: InputParameter[],\n        cancelToken: CancelToken): Promise<boolean> {\n\n            var data = {\n                connectionId: this.authService.getWebSocketConnectionId(),\n                datajobKeys: datajobs.map(d => d.key),\n                truncateTarget: truncateTarget,\n                resetIncremental: resetIncremental,\n                resetIncrementalValue: resetIncrementalValue,\n                inputParameters: inputParameters\n            };\n\n            if (truncateTarget) {\n                return this.hubPostRemoteConfirm('/api/Hub/RunDatajobs', data, 'Running datajobs...',\n                'This action will truncate all data in the target tables for datalinks in this job.  ' +\n                '<p></p><p></p>Are you sure you want to continue?', cancelToken);\n            } else {\n                return this.hubPostRemote('/api/Hub/RunDatajobs', data, 'Running datajobs...', cancelToken);\n            }\n    }\n\n    deactivateDatajobs(datajobKeys: Array<number>, cancelToken: CancelToken): Promise<boolean> {\n        return this.hubPostRemote<boolean>('/api/Hub/DeactivateDatajobs', {\n                connectionId: this.authService.getWebSocketConnectionId(),\n                datajobKeys: datajobKeys\n            }, 'Deactivating datajob(s)...', cancelToken\n        );\n    }\n\n    activateDatajobs(datajobs: Array<DexihDatajob>, inputParameters: InputParameter[], cancelToken: CancelToken): Promise<boolean> {\n        return this.hubPostRemote<boolean>('/api/Hub/ActivateDatajobs', {\n            connectionId: this.authService.getWebSocketConnectionId(),\n            datajobKeys: datajobs.map(d => d.key),\n            inputParameters: inputParameters\n        }, 'Activating datajob(s)...', cancelToken);\n    }\n\n    saveView(view: DexihView): Promise<DexihView> {\n        return this.hubPost<DexihView>('/api/Hub/SaveView', {\n            value: view\n        }, 'Saving view...');\n    }\n\n    deleteViews(views: Array<DexihView>): Promise<boolean> {\n        let viewNames = views.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteViews', {\n            itemKeys: views.map(c => c.key)\n        }, 'Deleting views(s)...',\n        'This action will delete the following views, from the hub and cannot be reversed.<p></p>' +\n        viewNames + '<p></p>Are you sure?');\n    }\n\n    saveDashboard(dashboard: DexihDashboard): Promise<DexihDashboard> {\n        return this.hubPost<DexihDashboard>('/api/Hub/SaveDashboard', {\n            value: dashboard\n        }, 'Saving Dashboard...');\n    }\n\n    deleteDashboards(dashboards: Array<DexihDashboard>): Promise<boolean> {\n        let names = dashboards.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteDashboards', {\n            itemKeys: dashboards.map(c => c.key)\n        }, 'Deleting Dashboard(s)...',\n        'This action will delete the following dashboards, from the hub and cannot be reversed.<p></p>' +\n                names + '<p></p>Are you sure?');\n    }\n\n    saveListOfValues(lov: DexihListOfValues): Promise<DexihListOfValues> {\n        return this.hubPost<DexihListOfValues>('/api/Hub/SaveListOfValues', {\n            value: lov\n        }, 'Saving list of values...');\n    }\n\n    deleteListOfValues(lov: Array<DexihListOfValues>): Promise<boolean> {\n        let names = lov.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteListOfValues', {\n            itemKeys: lov.map(c => c.key)\n        }, 'Deleting list of value(s)...',\n        'This action will delete the following list of values, from the hub and cannot be reversed.<p></p>' +\n        names + '<p></p>Are you sure?');\n    }\n\n    saveTag(tag: DexihTag): Promise<DexihTag> {\n        return this.hubPost<DexihTag>('/api/Hub/SaveTags', {\n            value: tag\n        }, 'Saving tag...');\n    }\n\n    deleteTags(tags: Array<DexihTag>): Promise<boolean> {\n        let names = tags.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteTags', {\n            itemKeys: tags.map(c => c.key)\n        }, 'Deleting tags(s)...',\n        'This action will delete the following tags, from the hub and cannot be reversed.<p></p>' +\n        names + '<p></p>Are you sure?');\n    }\n\n    saveTagObjects(tagKey: number, isChecked: boolean, objectKeys: Array<{objectType: eSharedObjectType, objectKey: number}>) {\n        return this.hubPost('/api/Hub/SaveTagObjects', {\n            tagKey,\n            isChecked,\n            objectKeys\n        }, 'Saving tags...');\n    }\n\n    deleteTagObjects(objectKeys: Array<{objectType: eSharedObjectType, objectKey: number}>) {\n        return this.hubPost('/api/Hub/DeleteTagObjects', {\n            objectKeys\n        }, 'Deleting tags...');\n    }\n\n\n    saveApi(api: DexihApi): Promise<DexihApi> {\n        return this.hubPost<DexihApi>('/api/Hub/SaveApi', {\n            value: api\n        }, 'Saving api...');\n    }\n\n    deleteApis(apis: Array<DexihApi>): Promise<boolean> {\n        let apiNames = apis.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm('/api/Hub/DeleteApis', {\n            itemKeys: apis.map(c => c.key)\n        }, 'Deleting api(s)...',\n            // tslint:disable-next-line:max-line-length\n            'This action will delete the following apis, from the hub and cannot be reversed.  Note, this action will NOT deactivate currently active Api\\'s.<p></p>.' +\n            apiNames + '<p></p>Are you sure?'\n        );\n\n    }\n\n    activateApis(apis: Array<DexihApi>, cancelToken: CancelToken): Promise<boolean> {\n        return this.hubPostRemote<boolean>('/api/Hub/ActivateApis', {\n            connectionId: this.authService.getWebSocketConnectionId(),\n            apiKeys: apis.map(d => d.key),\n        }, 'Activating Api(s)...', cancelToken);\n\n    }\n\n    deactivateApis(apiKeys: Array<number>, cancelToken: CancelToken): Promise<boolean> {\n        return this.hubPostRemote<boolean>('/api/Hub/DeactivateApis', {\n            connectionId: this.authService.getWebSocketConnectionId(),\n            apiKeys: apiKeys\n        }, 'Deactivating Api(s)...', cancelToken);\n    }\n\n    previewTableData(table: DexihTable, showRejectedData, selectQuery: SelectQuery, inputColumns: InputColumn[],\n        parameters: DexihInputParameter[], cancelToken: CancelToken): PromiseWithCancel<PreviewResults> {\n        let hub = this.createHub(this._hubKey, 'cache');\n        this._hubCache.value.cacheAddConnection(table.connectionKey, hub);\n\n        return this.previewTableDataQuery(table, showRejectedData, selectQuery, inputColumns, parameters, cancelToken);\n    }\n\n\n\n    getData(url: string, data: any, waitMessage: string, cancelToken): PromiseWithCancel<PreviewResults> {\n        return new PromiseWithCancel<PreviewResults>((resolve, reject) => {\n            this.hubPostRemote<PreviewResults>(url, data, waitMessage, cancelToken).then(previewData => {\n                let columns = this.authService.constructDataTableColumns(previewData.columns);\n                resolve({\n                    name: previewData.name,\n                    columns: columns,\n                    data: previewData.data,\n                    transformProperties: previewData.transformProperties,\n                    status: previewData.status,\n                    viewConfig: previewData.viewConfig\n                });\n            }).catch(reason => {\n                this.addHubMessage(reason, true, 'Preview Data');\n                reject(reason);\n            });\n        });\n    }\n\n    previewTableDataQuery(table: DexihTable, showRejectedData, selectQuery: SelectQuery, inputColumns: InputColumn[],\n        inputParameters: DexihInputParameter[], cancelToken: CancelToken):\n        PromiseWithCancel<PreviewResults> {\n            return this.getData('/api/Hub/PreviewTableQuery', {\n                hubKey: this._hubKey,\n                remoteAgentId: this.getCurrentRemoteAgentId(),\n                table: table,\n                showRejectedData: showRejectedData,\n                selectQuery: selectQuery,\n                inputColumns: inputColumns,\n                inputParameters: inputParameters,\n            }, 'Retrieving table data...', cancelToken);\n    }\n\n    previewTableKeyData(tableKey: number, showRejectedData, selectQuery: SelectQuery, inputColumns: InputColumn[],\n        inputParameters: DexihInputParameter[], cancelToken: CancelToken):\n        PromiseWithCancel<PreviewResults> {\n            return this.getData('/api/Hub/PreviewTable', {\n                tableKey: tableKey,\n                showRejectedData: showRejectedData,\n                selectQuery: selectQuery,\n                inputColumns: inputColumns,\n                inputParameters: inputParameters,\n            }, 'Retrieving table data...', cancelToken);\n    }\n\n    previewDatalinkKeyData(datalinkKey: number, previewUpdates: boolean, selectQuery: SelectQuery, inputColumns: InputColumn[],\n        inputParameters: DexihInputParameter[], cancelToken: CancelToken):\n    PromiseWithCancel<PreviewResults> {\n\n        return this.getData('/api/Hub/PreviewDatalink', {\n            datalinkKey: datalinkKey,\n            previewUpdates: previewUpdates,\n            selectQuery: selectQuery,\n            inputColumns: inputColumns,\n            inputParameters: inputParameters,\n        }, 'Retrieving datalink data..', cancelToken);\n    }\n\n    previewTransformData(datalink: DexihDatalink, datalinkTransformKey: number, selectQuery: SelectQuery, inputColumns: InputColumn[],\n        inputParameters: DexihInputParameter[], cancelToken: CancelToken):\n        PromiseWithCancel<PreviewResults> {\n            // remove status as they will not parse into json.\n            datalink['currentStatus'] = null;\n            datalink.entityStatus = null;\n            datalink['previousStatus'] = null;\n\n            return this.getData('/api/Hub/PreviewTransform', {\n                datalink: datalink,\n                selectQuery,\n                inputColumns,\n                inputParameters: inputParameters,\n                datalinkTransformKey: datalinkTransformKey,\n            }, 'Retrieving transform data...', cancelToken)\n    }\n\n    previewView(view: DexihView, inputColumns: InputColumn[],\n        inputParameters: DexihInputParameter[], cancelToken: CancelToken): PromiseWithCancel<PreviewResults> {\n\n        return this.getData('/api/Hub/PreviewView', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(),\n            view: view,\n            inputColumns: inputColumns,\n            inputParameters: inputParameters,\n        }, 'Retrieving view data...', cancelToken);\n    }\n\n    previewViewKey(viewKey: number, inputColumns: InputColumn[], parentParameters: InputParameter[],\n        inputParameters: DexihInputParameter[], cancelToken: CancelToken): PromiseWithCancel<PreviewResults> {\n\n        return this.getData('/api/Hub/PreviewViewKey', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(),\n            viewKey: viewKey,\n            inputColumns: inputColumns,\n            inputParameters: inputParameters,\n            parentParameters: parentParameters\n        }, 'Retrieving view data...', cancelToken);\n    }\n\n    previewDashboard(dashboard: DexihDashboard, inputParameters: DexihInputParameter[], cancelToken: CancelToken):\n    Promise<{dashboardItemKey: string, dataKey: string}[]> {\n\n        let remoteAgent = this.getRemoteAgentCurrent();\n\n        if (!remoteAgent) {\n            let message = new Message(false, 'No active remote agent.', null, null);\n            this.addHubMessage(message);\n            return Promise.reject(message);\n        }\n\n        return new PromiseWithCancel<{dashboardItemKey: string, dataKey: string}[]>((resolve, reject) => {\n            this.authService.getBestDownloadUrl(remoteAgent, 0).then(url => {\n                this.hubPost<{dashboardItemKey: string, dataKey: string}[]>('/api/Hub/PreviewDashboard', {\n                    hubKey: this._hubKey,\n                    remoteAgentId: this.getCurrentRemoteAgentId(),\n                    downloadUrl: url,\n                    dashboard: dashboard,\n                    inputParameters: inputParameters,\n                }, 'Retrieving dashboard data...').then(urls => {\n                    resolve(urls);\n                }).catch(reason => reject(reason));\n            }).catch(reason => reject(reason));\n        });\n    }\n\n    previewListOfValues(listOfValues: DexihListOfValues, resetCache: boolean, cancelToken: CancelToken):\n        PromiseWithCancel<ListOfValuesItem[]> {\n        if (listOfValues.sourceType === eLOVObjectType.Static) {\n            return new PromiseWithCancel<ListOfValuesItem[]>((resolve) => {\n                resolve(listOfValues.staticData);\n            });\n        }\n\n        return this.hubPostRemote<ListOfValuesItem[]>('/api/Hub/PreviewListOfValues', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(),\n            listOfValues: listOfValues,\n            resetCache: resetCache\n        }, 'Getting list of values...', cancelToken);\n    }\n\n    previewListOfValuesKey(listOfValuesKey: number, resetCache: boolean, cancelToken: CancelToken): PromiseWithCancel<ListOfValuesItem[]> {\n        let hub: DexihHub = this._hubCache.value.hub;\n        let listOfValues = hub.dexihListOfValues.find(c => c.key === listOfValuesKey);\n\n        if (listOfValues.sourceType === eLOVObjectType.Static) {\n            return new PromiseWithCancel<ListOfValuesItem[]>((resolve) => {\n                resolve(listOfValues.staticData);\n            });\n        }\n\n        return this.hubPostRemote<ListOfValuesItem[]>('/api/Hub/PreviewListOfValuesKey', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(),\n            listOfValuesKey: listOfValuesKey,\n            resetCache: resetCache\n        }, 'Getting list of values...', cancelToken);\n    }\n\n    // downloads a dataset from the provided url\n    downloadUrlData(url: string, cancelToken: CancelToken): PromiseWithCancel<PreviewResults> {\n        let promise = new PromiseWithCancel<PreviewResults>((resolve, reject) => {\n                let httpPromise = this.authService.getFromExternal<PreviewResults>(url, null, cancelToken);\n                httpPromise.then(data => {\n                    if (data['success'] === false) {\n                        this.addHubMessage(data);\n                        reject(data['message']);\n                    } else {\n                        let columns = this.authService.constructDataTableColumns(data.columns);\n                        resolve({\n                            name: data.name,\n                            columns: columns,\n                            data: data.data,\n                            transformProperties: data.transformProperties,\n                            status: data.status,\n                            viewConfig: data.viewConfig\n                        });\n                        return;\n                    }\n                }).catch(reason => {\n                    this.addHubMessage(reason.error);\n                    reject(reason.error);\n                });\n            }, cancelToken);\n\n        return promise;\n    }\n\n    datalinkProperties(datalinkKey: number, selectQuery: SelectQuery, inputColumns: InputColumn[], cancelToken: CancelToken):\n    Promise<TransformProperties> {\n        return this.hubPostRemote<TransformProperties>('/api/Hub/DatalinkProperties', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(),\n            datalinkKey: datalinkKey,\n            selectQuery: selectQuery,\n            inputColumns: inputColumns,\n        }, 'Getting datalinks properties...', cancelToken);\n\n    }\n\n    previewProfileData(writerResult: TransformWriterResult, summaryOnly: boolean, cancelToken: CancelToken):\n        PromiseWithCancel<{ columns: Array<any>, data: Array<any> }> {\n\n        if (!writerResult.profileTableName) {\n            let message = new Message(false, 'This result does not contain profile data.', null, null);\n            this.addHubMessage(message);\n            Promise.reject(message);\n        }\n\n        const hub = this._hubCache.value.hub;\n        let connection = hub.dexihConnections.find(c => c.key === writerResult.auditConnectionKey);\n\n        return this.getData('/api/Hub/PreviewProfile', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(),\n            auditKey: writerResult.auditKey,\n            profileTableName: writerResult.profileTableName,\n            connection: connection,\n            summaryOnly: summaryOnly,\n        }, 'Retrieving profile data...', cancelToken);\n    }\n\n    downloadData(downloadObjects: Array<DownloadObject>, zipFiles: boolean, downloadFormat: eDownloadFormat, cancelToken: CancelToken):\n        Promise<boolean> {\n\n        return new Promise<boolean>((resolve, reject) => {\n            this.hubPostRemote<ManagedTask>('/api/Hub/DownloadSharedData', {\n                connectionId: this.authService.getWebSocketConnectionId(),\n                downloadFormat: downloadFormat,\n                zipFiles: zipFiles,\n                downloadObjects: downloadObjects,\n            }, 'Downloading shared data...', cancelToken).then(task => {\n                this.authService.addUpdateTask(task);\n                this.addHubSuccessMessage('The download task has started.');\n                resolve(true);\n            });\n        });\n    }\n\n    downloadTableData(table: DexihTable, showRejectedData, selectQuery: SelectQuery, inputColumns: InputColumn[],\n        zipFiles: boolean, downloadFormat: eDownloadFormat, cancelToken: CancelToken):\n        Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            this.hubPostRemote<ManagedTask>('/api/Hub/DownloadTableData', {\n                hubKey: this._hubKey,\n                remoteAgentId: this.getCurrentRemoteAgentId(),\n                connectionId: this.authService.getWebSocketConnectionId(),\n                table: table,\n                showRejectedData: showRejectedData,\n                selectQuery: selectQuery,\n                inputColumns: inputColumns,\n                downloadFormat: downloadFormat,\n                zipFiles: zipFiles,\n                }, 'Downloading table data...', cancelToken).then(task => {\n                    this.authService.addUpdateTask(task);\n                    this.addHubSuccessMessage('The download task has started.');\n                    resolve(true);\n                });\n            });\n    }\n\n    downloadDatalinkData(datalink: DexihDatalink, datalinkTransformKey: number, selectQuery: SelectQuery, inputColumns: InputColumn[],\n        zipFiles: boolean, downloadFormat: eDownloadFormat, cancelToken: CancelToken):\n    Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            this.hubPostRemote<ManagedTask>('/api/Hub/DownloadDatalinkData', {\n                hubKey: this._hubKey,\n                remoteAgentId: this.getCurrentRemoteAgentId(),\n                connectionId: this.authService.getWebSocketConnectionId(),\n                datalink: datalink,\n                datalinkTransformKey: datalinkTransformKey,\n                selectQuery: selectQuery,\n                inputColumns: inputColumns,\n                downloadFormat: downloadFormat,\n                zipFiles: zipFiles,\n                }, 'Downloading table data...', cancelToken).then(task => {\n                    this.authService.addUpdateTask(task);\n                    this.addHubSuccessMessage('The download task has started.');\n                    resolve(true);\n                });\n            });\n    }\n\n    downloadProfileData(writerResult: TransformWriterResult, cancelToken: CancelToken): Promise<boolean> {\n        let table = this._hubCache.value.getProfileTable(writerResult.profileTableName, writerResult.auditConnectionKey);\n        return this.downloadTableData(table, false, null, null, false, eDownloadFormat.Csv, cancelToken);\n    }\n\n    deleteColumnValidations(validations: Array<DexihColumnValidation>): Promise<boolean> {\n        let validationNames = validations.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteColumnValidations', {\n            hubKey: this._hubKey,\n            itemKeys: validations.map(c => c.key)\n        }, 'Deleting column validation...', 'This action will delete the following validations, from the hub and cannot be reversed.<p></p>'\n        + validationNames + '<p></p> Are you sure?');\n    }\n\n    // saves the current validation.\n    saveColumnValidation(validation: DexihColumnValidation): Promise<DexihColumnValidation> {\n        return this.hubPost<DexihColumnValidation>('/api/Hub/SaveColumnValidation', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(),\n            validation: validation\n        }, 'Saving column validation...');\n    }\n\n    deleteCustomFunctions(customFunctions: Array<DexihCustomFunction>): Promise<boolean> {\n        let functionNames = customFunctions.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteCustomFunctions', {\n            hubKey: this._hubKey,\n            itemKeys: customFunctions.map(c => c.key)\n        }, 'Deleting custom function(s)...',\n        'This action will delete the following custom functions, from the hub and cannot be reversed.<p></p>'\n                + functionNames + '<p></p> Are you sure?');\n    }\n\n            // tests the connection and refreshes the databases.\n    testCustomFunction(datalinkTransformItem: DexihDatalinkTransformItem,\n        testValues: Array<any>, cancelToken: CancelToken): PromiseWithCancel<Array<any>> {\n        return this.hubPostRemote<Array<any>>('/api/Hub/TestCustomFunction',\n                {value: datalinkTransformItem, testValues: testValues}, 'Testing custom function...', cancelToken);\n    }\n\n        // tests the connection and refreshes the databases.\n    downloadCustomFunction(datalinkTransformItem: DexihDatalinkTransformItem, testValues: Array<any>): Promise<Array<any>> {\n        return new Promise<Array<any>>((resolve, reject) => {\n            const cache = this._hubCache.value;\n\n            this.authService.downloadFile('/api/Hub/DownloadFunctionCode',\n                { hubKey: cache.hub.hubKey, datalinkTransformItem, testValues}, 'CustomFunction.zip', 'application/zip').then(() => {\n                    this.addHubSuccessMessage('The custom function code has been downloaded.');\n                }).catch(reason => {\n                    this.addHubMessage(reason);\n                    reject(reason);\n                });\n\n        });\n    }\n\n    deleteFileFormats(validations: Array<DexihFileFormat>): Promise<boolean> {\n        let fileFormatNames = validations.map(c => c.name).join('<br>>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteFileFormats', {\n            hubKey: this._hubKey,\n            itemKeys: validations.map(c => c.key)\n        }, 'Deleting file format(s)...',\n        'This action will delete the following file formats, from the hub and cannot be reversed.<p></p>' +\n                fileFormatNames + '<p></p>Are you sure?');\n    }\n\n\n            // tests the connection and refreshes the databases.\n    testColumnValidation(columnValidation: DexihColumnValidation, testValue: string, cancelToken: CancelToken):\n        PromiseWithCancel<{success: boolean, cleanedValue: string, rejectReason: string}> {\n            return this.hubPostRemote<{success: boolean, cleanedValue: string, rejectReason: string}>('/api/Hub/TestColumnValidation',\n                {value: columnValidation, testValue: testValue}, 'Testing column validation...', cancelToken);\n    }\n\n\n    deleteHubVariables(variables: Array<DexihHubVariable>): Promise<boolean> {\n        let variableNames = variables.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteHubVariables', {\n            hubKey: this._hubKey,\n            itemKeys: variables.map(c => c.key)\n        }, 'Deleting hub variable(s)...',\n        'This action will delete the following variables, from the hub and cannot be reversed.<p></p>' +\n            variableNames + '<p></p>Are you sure?');\n    }\n\n    deleteDatalinkTests(items: Array<DexihDatalinkTest>): Promise<boolean> {\n        let itemNames = items.map(c => c.name).join('<br>');\n\n        return this.hubPostConfirm<boolean>('/api/Hub/DeleteDatalinkTests', {\n            hubKey: this._hubKey,\n            itemKeys: items.map(c => c.key)\n        }, 'Deleting datalink test(s)...',\n        'This action will delete the following datalink tests, from the hub and cannot be reversed.<p></p>' +\n        itemNames + '<p></p>Are you sure?');\n    }\n\n    newDatalinkTest(name: string, datalinkKeys: Array<number>, auditConnectionKey: number, targetConnectionKey: number,\n        sourceConnectionKey: number): Promise<DexihDatalinkTest> {\n\n            return this.hubPost<DexihDatalinkTest>('/api/Hub/NewDatalinkTest', {\n                hubKey: this._hubKey,\n                remoteAgentId: this.getCurrentRemoteAgentId(),\n                connectionId: this.authService.getWebSocketConnectionId(),\n                name,\n                datalinkKeys,\n                auditConnectionKey,\n                targetConnectionKey,\n                sourceConnectionKey,\n            }, 'New Datalink test...');\n    }\n\n    runDatalinkTestSnapshot(items: Array<DexihDatalinkTest>, cancelToken: CancelToken): Promise<boolean> {\n        let itemNames = items.map(c => c.name).join('<br>');\n\n        return this.hubPostRemoteConfirm('/api/Hub/RunDatalinkTestSnapshot', {\n            hubKey: this._hubKey,\n            remoteAgentId: this.getCurrentRemoteAgentId(),\n            connectionId: this.authService.getWebSocketConnectionId(),\n            datalinkTestKeys: items.map(c => c.key)\n        }, 'Running datalink test snapshot...',\n        // tslint:disable-next-line:max-line-length\n        'This action will delete all data in the test tables, and refresh them with the actual data in the datalink source/target tables.  This cannot be reversed.<p></p>' +\n        itemNames + '<p></p>Are you sure?', cancelToken);\n    }\n\n    setNewDatajob(datalinks: Array<DexihDatalink>) {\n        const datajob = this.createDefaultDatajob();\n        datajob.key = 0;\n\n        let stepKey = -1;\n        datalinks.forEach(datalink => {\n            const step = new DexihDatalinkStep();\n            step.name = datalink.name;\n            step.key = stepKey--;\n            step.datalinkKey = datalink.key;\n            step.isValid = true;\n\n            datajob.dexihDatalinkSteps.push(step);\n        });\n\n        this.newDatajob = datajob;\n    }\n\n    createDefaultDatajob(): DexihDatajob {\n        const datajob = new DexihDatajob();\n        let hub: DexihHub = this._hubCache.value.hub;\n\n        let managedConnections = hub.dexihConnections.filter(c => c.purpose === eConnectionPurpose.Managed)\n\n        if (managedConnections.length > 0) {\n            datajob.auditConnectionKey = managedConnections[0].key;\n        }\n\n        return datajob;\n    }\n\n    getLocalPath(table: DexihTable, flatFilePath: eFlatFilePath): string {\n        let connection = this._hubCache.value.getConnection(table.connectionKey)\n\n        let subdirectory: string;\n\n        if (table.useCustomFilePaths) {\n            switch (flatFilePath) {\n                case eFlatFilePath.Incoming:\n                    subdirectory = table.fileIncomingPath;\n                    break;\n                case eFlatFilePath.Processed:\n                    subdirectory = table.fileProcessedPath;\n                    break;\n                case eFlatFilePath.Rejected:\n                    subdirectory = table.fileRejectedPath;\n                    break;\n                case eFlatFilePath.Outgoing:\n                    subdirectory = table.fileOutgoingPath;\n                break;\n            }\n        } else {\n            subdirectory = flatFilePath.toString();\n        }\n\n        return this.fixTrailingSlash(connection.server) +\n            this.fixTrailingSlash(connection.defaultDatabase) +\n            this.fixTrailingSlash(table.fileRootPath) +\n            this.fixTrailingSlash(subdirectory);\n    }\n\n    private fixTrailingSlash(value: string) {\n        if (!value) {\n            return '';\n        } else if (value.endsWith('/')) {\n            return value;\n        } else {\n            return value + '/';\n        }\n    }\n\n    createPaths(table: DexihTable, cancelToken: CancelToken): PromiseWithCancel<boolean> {\n        return this.hubPostRemote<boolean>('/api/Hub/CreateFilePaths', {value: table}, 'Creating files paths..', cancelToken);\n    }\n\n    getFileList(table: DexihTable, flatFilePath: eFlatFilePath, cancelToken: CancelToken): PromiseWithCancel<Array<FileProperties>> {\n        return this.hubPostRemote<Array<FileProperties>>('/api/Hub/GetFileList', {value: table, path: flatFilePath}, 'Getting files list...'\n        , cancelToken);\n    }\n\n    deleteFiles(table: DexihTable, flatFilePath: eFlatFilePath, files: Array<string>, cancelToken: CancelToken):\n    PromiseWithCancel<boolean> {\n        let fileNames = '<p>' + files.map(c => c).join('</p><p>') + '</p>';\n\n        return this.hubPostRemoteConfirm<boolean>('/api/Hub/DeleteFiles',\n        {value: table, path: flatFilePath, files: files}, 'Deleting files...',\n        'This action will delete the following files, from the connection and cannot be reversed.<p></p>' +\n            fileNames + '<p></p>Are you sure?',\n                    cancelToken);\n    }\n\n    moveFiles(table: DexihTable, fromFilePath: eFlatFilePath, toFilePath: eFlatFilePath, files: Array<string>, cancelToken: CancelToken):\n        PromiseWithCancel<boolean> {\n        return this.hubPostRemote<boolean>('/api/Hub/MoveFiles', {\n            value: table, fromPath: fromFilePath,\n            toPath: toFilePath,\n            files: files}, 'Moving files...', cancelToken);\n    }\n\n    downloadFiles(table: DexihTable, flatFilePath: eFlatFilePath, files: Array<string>, cancelToken: CancelToken):\n    Promise<boolean> {\n\n        return new Promise<boolean>((resolve, reject) => {\n            this.hubPostRemote<ManagedTask>('/api/Hub/DownloadFiles', {\n                hubKey: this._hubKey,\n                connectionId: this.authService.getWebSocketConnectionId(),\n                remoteAgentId: this.getCurrentRemoteAgentId(),\n                tableKey: table.key,\n                path: flatFilePath,\n                files: files,\n            }, 'Downloading files...', cancelToken).then(task => {\n                this.authService.addUpdateTask(task);\n                resolve(true);\n            }).catch(reason => reject(reason));\n        });\n    }\n\n    uploadFile(table: DexihTable, filePath: eFlatFilePath, updateStrategy: eUpdateStrategy, fileName: string, cancelToken: CancelToken):\n    Promise<string> {\n        return new Promise<string>((resolve, reject) => {\n            let remoteAgent = this.getRemoteAgentCurrent();\n            this.authService.postRemoteUpload('/api/Hub/UploadFile', {\n                hubKey: this._hubKey,\n                remoteAgentId: remoteAgent.instanceId,\n                connectionId: this.authService.getWebSocketConnectionId(),\n                tableKey: table.key,\n                path: filePath,\n                updateStrategy: updateStrategy,\n                fileName: fileName,\n            }, remoteAgent, 'Uploading file...', cancelToken).then(url => {\n                resolve(url.url + '/file/' + fileName);\n            });\n        });\n    }\n\n    bulkUploadFiles(connectionKey: number, fileFormatKey: number, formatType: eTypeCode,\n        loadData: boolean, includeFileName: boolean, includeFileDate: boolean, includeFileRowNumber: boolean,\n        fileName: string, cancelToken: CancelToken):\n    Promise<{url: string, reference: string}> {\n        return new Promise<{url: string, reference: string}>((resolve, reject) => {\n            let remoteAgent = this.getRemoteAgentCurrent();\n            this.authService.postRemoteUpload('/api/Hub/BulkUploadFile', {\n                hubKey: this._hubKey,\n                remoteAgentId: remoteAgent.instanceId,\n                connectionId: this.authService.getWebSocketConnectionId(),\n                connectionKey: connectionKey,\n                fileFormatKey: fileFormatKey,\n                formatType: formatType,\n                loadData: loadData,\n                includeFileName,\n                includeFileDate,\n                includeFileRowNumber,\n                fileName: fileName,\n            }, remoteAgent, 'Uploading file...', cancelToken).then(url => {\n                resolve({reference: url.key, url: url.url + '/file/' + fileName});\n            }).catch(reason => reject(reason));\n        });\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ButtonsModule} from './buttons/buttons.module';\nimport { WidgetsModule} from './widgets/widgets.module';\nimport { TablePreviewDataComponent } from './table/table-preview-data/table-preview-data.component';\nimport { FileFormatEditComponent } from './fileFormat';\nimport { ViewEditComponent } from './view';\n\n@NgModule({\n    imports: [\n        SharedModule,\n        ReactiveFormsModule,\n        ButtonsModule,\n        WidgetsModule\n    ],\n    declarations: [\n        TablePreviewDataComponent,\n        FileFormatEditComponent,\n        ViewEditComponent\n    ],\n    exports: [\n        ButtonsModule,\n        WidgetsModule\n    ]\n})\nexport class HubSharedModule {\n\n}\n","export { HubService } from './hub.service';\nexport { HubModule } from './hub.module';\nexport { HubComponent } from './hub.component';\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable, combineLatest} from 'rxjs';\n\nexport interface CanComponentDeactivate {\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\n}\n\n@Injectable()\nexport class ItemEditGuard implements CanDeactivate<CanComponentDeactivate> {\n\n  canDeactivate(component: CanComponentDeactivate) {\n    return component && component.canDeactivate ? component.canDeactivate() : true;\n  }\n\n}\n","export * from './summary.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubCache, sharedObjectProperties, eCacheStatus } from '../hub.models';\nimport { HubService } from '../hub.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { logoSmallUrl } from '../../+auth/auth.models';\nimport { DexihActiveAgent, eConnectionPurpose } from '../../shared/shared.models';\nimport { AuthService } from '../../+auth/auth.service';\n\n@Component({\n  selector: 'dexih-summary',\n  templateUrl: './summary.component.html',\n})\nexport class SummaryComponent implements OnInit, OnDestroy {\n  private _subscription: Subscription;\n  public hubCache: HubCache;\n\n  public datalinkFilterString;\n  public connectionFilterString;\n  public columnValidationFilterString;\n  public fileFormatFilterString;\n  public datajobFilterString;\n  public tableFilterString;\n\n  public remoteAgent: DexihActiveAgent;\n\n  logoSmallUrl = logoSmallUrl;\n  sharedObjectProperties = sharedObjectProperties;\n\n  eCacheStatus = eCacheStatus;\n  \n  public noManagedConnection = false;\n  constructor(public hubService: HubService, public authService: AuthService) { }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.hubService.getHubCacheObservable(),\n        this.hubService.getRemoteAgentObservable(),\n      ).subscribe(result => {\n        this.hubCache = result[0];\n        this.remoteAgent = result[1];\n\n        if (this.hubCache.isLoaded()) {\n          if (this.hubCache.hub.dexihConnections.findIndex(c => c.purpose === eConnectionPurpose.Managed) >= 0) {\n            this.noManagedConnection = false;\n          } else {\n            this.noManagedConnection = true;\n          }\n        }\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Summary');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n  }\n\n  onDatalinkFilterString(filterString: string) {\n    this.datalinkFilterString = filterString;\n  }\n  onConnectionFilterString(filterString: string) {\n    this.connectionFilterString = filterString;\n  }\n  onColumnValidationFilterString(filterString: string) {\n    this.columnValidationFilterString = filterString;\n  }\n  onFileFormatFilterString(filterString: string) {\n    this.fileFormatFilterString = filterString;\n  }\n  onDatajobFilterString(filterString: string) {\n    this.datajobFilterString = filterString;\n  }\n  onTableFilterString(filterString: string) {\n    this.tableFilterString = filterString;\n  }\n}\n","<div class=\"container-fluid\" *ngIf=\"hubCache?.hub && hubCache.status === eCacheStatus.Loaded\">\n    <div class=\"d-flex align-items-center p-3 my-3 text-white-50 bg-primary rounded\">\n        <div class=\"lh-100\">\n            <h3 class=\"mb-0 text-white lh-100\">{{hubCache.hub.name}}</h3>\n            <h5 *ngIf=\"hubCache.hub.description\" class=\"mb-0 text-white lh-100\">\n                <markdown [data]=\"hubCache.hub.description\" (click)=\"authService.getRoute($event)\"></markdown>\n            </h5>\n        </div>\n    </div>\n\n    <div class=\"alert alert-warning\" *ngIf=\"noManagedConnection && hubCache.canWrite\">\n        Warning: <b>No Managed connection!</b> A managed connection for auditing data and\n        staging tables. To run any datalink you must\n        have a least one managed connection. Note, if you do not have access to a database use the Sqlite connection to\n        create\n        a local database file.\n        <hr>\n        <d-button-new buttonClass=\"btn btn-primary text-white\" [routerLink]=\"['connection-new', '2']\"\n            text=\"New Managed Connection\"></d-button-new>\n    </div>\n\n    <div class=\"card-deck\">\n        <div class=\"card mb-3\" style=\"min-width: 18rem;\">\n            <div class=\"card-header text-white bg-success\"><i class=\"fa fa-lg fa-fw fa-life-saver\"></i>Common Actions\n            </div>\n            <div class=\"card-body p-0\">\n                <ul class=\"list-group\">\n                        <a routerLink=\"search\" class=\"list-group-item list-group-item-action rounded-0\">\n                            <div class=\"d-flex justify-content-between align-items-center\">\n                                <div>\n                                    <i class=\"fa fa-lg fa-fw fa-search\"></i>\n                                    Search\n                                </div>\n                            </div>\n                            <div class=\"small\">Search for objects within the hub.</div>\n                        </a>\n                        <a routerLink=\"sharedData\" class=\"list-group-item list-group-item-action rounded-0\">\n                            <div class=\"d-flex justify-content-between align-items-center\">\n                                <div>\n                                    <i class=\"fa fa-lg fa-fw fa-newspaper-o\"></i>\n                                    Shared Data\n                                </div>\n                            </div>\n                            <div class=\"small\">Tables and datalinks in the hub which have been shared.</div>\n                        </a>\n                        <a routerLink=\"datalinks/results\" class=\"list-group-item  list-group-item-action rounded-0\">\n                            <div class=\"d-flex justify-content-between align-items-center\">\n                                <div>\n                                    <i class=\"fa fa-lg fa-fw fa-tasks\"></i>\n                                    Datalink/Datajob results\n                                </div>\n                            </div>\n                            <div class=\"small\">Recent execution summaries from datalink and datajobs.</div>\n                        </a>\n                        <a *ngIf=\"hubCache.canAdministrate\" routerLink=\"manage/manage-users\" class=\"list-group-item  list-group-item-action rounded-0\">\n                            <div class=\"d-flex justify-content-between align-items-center\">\n                                <div>\n                                    <i class=\"fa fa-lg fa-fw fa-birthday-cake\"></i>\n                                    Manage Hub Users\n                                </div>\n                            </div>\n                            <div class=\"small\">Invite users and manage user permissions for this hub.</div>\n                        </a>\n                        <a *ngIf=\"hubCache.canAdministrate\" routerLink=\"agents\" class=\"list-group-item  list-group-item-action rounded-0\">\n                            <div class=\"d-flex justify-content-between align-items-center\">\n                                <div>\n                                    <i class=\"fa fa-lg fa-fw fa-wifi\"></i>\n                                    Manage Remote Agents\n                                </div>\n                            </div>\n                            <div class=\"small\">Add and remove remote agents access to this hub.</div>\n                        </a>\n                    <a routerLink=\"files/manage\" class=\"list-group-item  list-group-item-action rounded-0\">\n                        <div class=\"d-flex justify-content-between align-items-center\">\n                            <div>\n                                <i class=\"fa fa-lg fa-fw fa-upload\"></i>\n                                Manage Files\n                            </div>\n                        </div>\n                        <div class=\"small\">Upload and download files in an existing table definition</div>\n                    </a>\n                    <a routerLink=\"files/bulk-load\" class=\"list-group-item  list-group-item-action rounded-0\">\n                        <div class=\"d-flex justify-content-between align-items-center\">\n                            <div>\n                                <i class=\"fa fa-lg fa-fw fa-files-o\"></i>\n                                Bulk Load Files\n                            </div>\n                        </div>\n                        <div class=\"small\">Upload multiple file to create automatic table definitions.</div>\n                    </a>\n                    <a routerLink=\"import\" class=\"list-group-item  list-group-item-action rounded-0\">\n                        <div class=\"d-flex justify-content-between align-items-center\">\n                            <div>\n                                <i class=\"fa fa-lg fa-fw fa-level-down\"></i>\n                                Import\n                            </div>\n                        </div>\n                        <div class=\"small\">Import items into the current hub from an export file.</div>\n                    </a>\n                    <a routerLink=\"export\" class=\"list-group-item  list-group-item-action rounded-0\">\n                        <div class=\"d-flex justify-content-between align-items-center\">\n                            <div>\n                                <i class=\"fa fa-lg fa-fw fa-level-up\"></i>\n                                Export\n                            </div>\n                        </div>\n                        <div class=\"small\">Export items from the current hub to an external file.</div>\n                    </a>\n                    <a routerLink=\"agents\" class=\"list-group-item  list-group-item-action rounded-0\">\n                        <div class=\"d-flex justify-content-between align-items-center\">\n                            <div>\n                                <i class=\"fa fa-lg fa-fw fa-wrench\"></i>\n                                Remote Agents\n                            </div>\n                        </div>\n                        <div class=\"small\">Manage which remote agents are authorized to access the hub.</div>\n                    </a>\n                </ul>\n            </div>\n        </div>\n        <div class=\"card mb-3\" style=\"min-width: 18rem;\">\n            <div class=\"card-header text-white bg-danger\"><i class=\"fa fa-lg fa-fw fa-user\"></i>Hub Objects</div>\n            <div class=\"card-body p-0\">\n                <ul class=\"list-group\">\n                    <a *ngFor=\"let sharedObject of sharedObjectProperties\" [routerLink]=\"sharedObject.routerLink\" class=\"list-group-item  list-group-item-action rounded-0\">\n                        <div class=\"d-flex justify-content-between align-items-center\">\n                            <div>\n                                <i class=\"fa fa-lg fa-fw {{sharedObject.icon}}\"></i>\n                                {{sharedObject.displayName}}\n                            </div>\n                            <span\n                                class=\"badge badge-primary badge-pill\">{{(hubCache.hub[sharedObject.cacheProperty] | equalFilter :'isValid':true ).length}}\n                            </span>\n                        </div>\n                        <div class=\"small\">{{sharedObject.description}}</div>\n                    </a>\n                </ul>\n            </div>\n        </div>\n    </div>\n \n\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { eDataObjectType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'table-preview-data',\n    templateUrl: './table-preview-data.component.html'\n})\nexport class TablePreviewDataComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n\n    public key: number;\n\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    public eDataObjectType = eDataObjectType;\n\n    public title = 'Preview Table';\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.params,\n                this.hubService.getHubCacheObservable(true),\n            ).subscribe(result => {\n                let params = result[0];\n                let hubCache = result[1];\n                this.key = +params['tableKey'];\n\n                let table = hubCache.getTable(this.key);\n                if (table) {\n                    this.title = 'Preview Table - ' + table.logicalName;\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Table Preview Data');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n}\n","<div class=\"container-fluid\">\n    <d-widget [title]=\"title\" iconClass=\"fa fa-lg fa-fw fa-exchange\" [showCloseButton]=\"true\"\n        (close)=\"close()\">\n        <preview-data [key]='key' [viewSource]='eDataObjectType.Table'></preview-data>\n    </d-widget>\n</div>","export * from './view-index/view-index.component';\nexport * from './view-edit/view-edit.component';\n","import { Component, OnInit, OnDestroy, HostListener } from '@angular/core';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\nimport { HubService } from '../../hub.service';\nimport { Subscription, combineLatest, merge, Subject } from 'rxjs';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { InputOutputColumns } from '../../hub.lineage.models';\nimport { CancelToken } from '../../../+auth/auth.models';\nimport { HubCache, ConnectionTables, eCacheStatus } from '../../hub.models';\nimport { eViewType, DexihDatalink, InputColumn, DexihColumnBase, SelectQuery,\n  DexihView, DownloadObject, eDataObjectType, ChartConfig, InputParameterBase, DexihActiveAgent, AnimateConfig } from '../../../shared/shared.models';\nimport { FormArray, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'dexih-view-edit-form',\n  templateUrl: './view-edit.component.html',\n  providers: [HubFormsService]\n})\nexport class ViewEditComponent implements OnInit, OnDestroy {\n  public viewKey: number;\n\n  public hubCache: HubCache;\n  public action: string; // new or edit\n  public pageTitle: string;\n  public params: Params;\n  public remoteAgent: DexihActiveAgent;\n\n  public showEdit = false;\n  public hasEdited = false;\n\n  private _subscription: Subscription;\n  private _formChangeSubscription: Subscription;\n  private _changesSubscription: Subscription;\n\n  private refreshDataSubject: Subject<void> = new Subject<void>();\n  public refreshDataObservable = this.refreshDataSubject.asObservable();\n  \n  sourceTypes = [\n    { key: eDataObjectType.Datalink, name: 'Datalink' },\n    { key: eDataObjectType.Table, name: 'Table' }\n  ];\n\n  eViewType = eViewType;\n  eDataObjectType = eDataObjectType;\n\n  public connectionTables: ConnectionTables[] = [];\n  public datalinks: DexihDatalink[] = [];\n\n  public showChart = false;\n  public inputColumns: InputColumn[];\n  public tableColumns: DexihColumnBase[];\n\n  private isLoaded = false;\n\n  private firstLoad = true;\n  private dialogOpen = false;\n\n  columns: Array<any>;\n  public baseData: Array<any>;\n  public data: Array<any>;\n\n  public animationValues = [];\n  public animationValue;\n  public animationTimer;\n  public animationColumnIndex: number;\n  public animationRowIndex: number;\n  public animationPaused = false;\n\n  private cancelToken = new CancelToken();\n\n  get animateConfig(): AnimateConfig {\n    return this.formsService?.currentForm?.controls.animateConfig.value;\n  }\n  set animateConfig(value: AnimateConfig) {\n    this.formsService?.currentForm?.controls.animateConfig.setValue(value);\n  }\n\n  get selectQuery(): SelectQuery {\n    return this.formsService?.currentForm?.controls.selectQuery.value;\n  }\n  set selectQuery(value: SelectQuery) {\n    this.formsService?.currentForm?.controls.selectQuery.setValue(value);\n  }\n\n  constructor(\n    private hubService: HubService,\n    private authService: AuthService,\n    public formsService: HubFormsService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n        this.hubService.getRemoteAgentObservable()\n      ).subscribe(result => {\n        let data = result[0];\n        this.params = result[1];\n        this.hubCache = result[2];\n        this.remoteAgent = result[3];\n\n        this.action = data['action'];\n        this.pageTitle = data['pageTitle'];\n\n        if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded ) { return; }\n\n        if (this.isLoaded && this.action === 'new') { return; }\n\n        if (this.isLoaded && this.formsService.hasChanged) {\n            this.authService.confirmDialog('Synchronization warning',\n            'The hub was disconnected, meaning this edit could have been changed by another session.  Would you like to discard the current changes, and reload the latest version?')\n            .then(confirm => {\n                if (confirm) {\n                    this.load();\n                }\n            }).catch(() => {\n                return;\n            });\n        } else {\n            this.load();\n        }\n\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'View Edit');\n    }\n  }\n\n  load() {\n    this.isLoaded = true;\n\n    if (this.hubCache && this.hubCache.isLoaded()) {\n      this.connectionTables = this.hubCache.getConnectionTables();\n      this.datalinks = this.hubCache.hub.dexihDatalinks;\n    }\n\n    if (this.action === 'edit') {\n      // get the hub key from the route data, and update the service.\n      this.viewKey = + this.params['viewKey'];\n\n      if (!this.viewKey) {\n        this.hubService.addHubErrorMessage('There was no view specified to edit.');\n      } else {\n        if (!this.hubCache.hub || !this.hubCache.hub.dexihColumnValidations) {\n          this.hubService.addHubErrorMessage('The hub cache is not loaded.');\n        } else {\n\n          let view = this.hubCache.hub.dexihViews.find(c => c.key === this.viewKey);\n\n          // create a copy of the view to avoid changes to the hub cache.\n          view = JSON.parse(JSON.stringify(view));\n          if (view.selectQuery == null) {\n            view.selectQuery = new SelectQuery();\n          }\n\n          if (view.animateConfig == null) {\n            view.animateConfig = new AnimateConfig()\n          }\n          this.inputColumns = view.inputValues;\n          this.showChart = view.viewType === eViewType.Chart;\n\n          this.formsService.view(view);\n\n          this.watchChanges();\n\n          this.getColumns();\n        }\n      }\n    }\n\n    if (this.action === 'new') {\n      let view = new DexihView();\n      view.selectQuery = new SelectQuery();\n      view.animateConfig = new AnimateConfig();\n      this.formsService.view(view);\n      this.watchChanges();\n      this.showEdit = true;\n\n      // update the url with the saved key\n      this._formChangeSubscription = this.formsService.getCurrentFormObservable().subscribe(form => {\n        let key = form.controls.key.value;\n        if (key) {\n          if (history.pushState) {\n            let newUrl = window.location.pathname.replace('/view-new', `/view-edit/${key}`)\n            this.router.navigateByUrl(newUrl);\n            this._formChangeSubscription.unsubscribe();\n          }\n        }\n      });\n    }\n\n  if (this.remoteAgent) {\n    if (!this.firstLoad) {\n      if (!this.dialogOpen) {\n        this.dialogOpen = true;\n        this.authService.confirmDialog('Remote Agent Available',\n          'A remote agent is available, would you like to refresh the data?').then(confirm => {\n            if (confirm) {\n              this.refresh();\n            }\n            this.dialogOpen = false;\n          });\n      }\n    } else {\n      if (this.formsService.currentForm.controls.autoRefresh.value) {\n        this.refresh();\n      }\n    }\n  }\n  }\n\n  watchChanges() {\n    if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n    this._changesSubscription = merge(\n      this.formsService.currentForm.controls.sourceDatalinkKey.valueChanges,\n      this.formsService.currentForm.controls.sourceTableKey.valueChanges\n    ).subscribe(() => {\n      this.reset();\n      this.selectQuery = new SelectQuery();\n      this.animateConfig = new AnimateConfig();\n      this.getColumns();\n      this.refreshDatalink();\n      this.refresh();\n    });\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._formChangeSubscription) { this._formChangeSubscription.unsubscribe(); }\n    if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n    this.cancelToken.cancel();\n  }\n\n  close() {\n    this.authService.navigateUp();\n  }\n\n  toggleChart() {\n    if (this.showChart) {\n      this.showChart = false;\n      this.formsService.currentForm.controls.viewType.setValue(eViewType.Table);\n    } else {\n      this.showChart = true;\n      if (this.formsService.currentForm.controls.chartConfig.value == null) {\n        this.formsService.currentForm.controls.chartConfig.setValue(new ChartConfig());\n      }\n      this.formsService.currentForm.controls.viewType.setValue(eViewType.Chart);\n    }\n  }\n\n  getColumns() {\n\n    let viewForm = this.formsService.currentForm;\n    let viewInputs = <InputColumn[]>viewForm.controls.inputValues.value;\n\n    if (viewForm.controls.sourceType.value === eDataObjectType.Table && viewForm.controls.sourceTableKey.value > 0) {\n      let table = this.hubCache.getTable(viewForm.controls.sourceTableKey.value);\n      if (table) {\n        this.inputColumns = table.dexihTableColumns.filter(c => c.isInput).map(c => {\n          let input = viewInputs.find(i => i.name === c.name);\n          if (input) {\n          } else {\n          }\n          return {\n            datalinkKey: 0, datalinkName: '',\n            name: c.name, logicalName: c.logicalName, dataType: c.dataType, rank: c.rank,\n            value: c.defaultValue, defaultValue: c.defaultValue\n          };\n        }\n        );\n        this.tableColumns = table.dexihTableColumns;\n        return;\n      } else {\n        this.reset();\n      }\n    } else {\n      this.reset();\n    }\n\n    if (viewForm.controls.sourceType.value === eDataObjectType.Datalink && viewForm.controls.sourceDatalinkKey.value > 0) {\n      let datalink = this.datalinks.find(c => c.key === viewForm.controls.sourceDatalinkKey.value);\n      if (datalink) {\n        const ioColumns = new InputOutputColumns();\n        ioColumns.buildInputOutput(datalink);\n        this.tableColumns = ioColumns.getDatalinkOutputColumns(datalink);\n\n        this.inputColumns = datalink.sourceDatalinkTable.dexihDatalinkColumns.filter(c => c.isInput).map(c => {\n          let input = viewInputs.find(i => i.name === c.name);\n          let value = null;\n          if (input) {\n            value = input.value;\n          } else {\n            value = c.defaultValue;\n          }\n          return {\n            datalinkKey: datalink.key, datalinkName: datalink.name,\n            name: c.name, logicalName: c.logicalName, dataType: c.dataType, rank: c.rank, value: value, defaultValue: c.defaultValue\n          };\n        });\n\n      } else {\n        this.reset();\n      }\n    } else {\n      this.reset();\n    }\n  }\n\n  reset() {\n    this.tableColumns = [];\n    this.inputColumns = [];\n    this.columns = null;\n    this.data = null;\n    this.baseData = null;\n  }\n\n  refreshDatalink() {\n    let viewForm = this.formsService.currentForm;\n\n    // clear current datalink parameters.\n    let viewParameters =  <FormArray> this.formsService.currentForm.controls.parameters;\n    for (let i = viewParameters.controls.length - 1; i >= 0; i--) {\n      if (viewParameters.controls[i].value.datalinkParameterKey) {\n        viewParameters.removeAt(i);\n      }\n    }\n\n    if (viewForm.controls.sourceType.value === eDataObjectType.Datalink && viewForm.controls.sourceDatalinkKey.value > 0) {\n      let datalink = this.datalinks.find(c => c.key === viewForm.controls.sourceDatalinkKey.value);\n      if (datalink) {\n        let datalinkParameters = datalink.parameters;\n\n        // add the datalink parameter back again.\n        for (let datalinkParameter of datalinkParameters) {\n          let parameter = Object.assign({}, datalinkParameter);\n          parameter['datalinkParameterKey'] = datalinkParameter.key;\n          parameter.key = this.hubCache.getNextSequence();\n          let parameterForm = this.formsService.parameter(parameter);\n          viewParameters.push(parameterForm);\n        }\n      }\n    }\n  }\n\n  refresh() {\n    let viewForm = this.formsService.currentForm;\n    let parameters: InputParameterBase[] = [];\n\n    let viewParameters =  (<FormGroup> this.formsService.currentForm.controls.parameters).getRawValue();\n\n    if (viewParameters) {\n      parameters = parameters.concat(viewParameters);\n    }\n\n    let view = <DexihView>viewForm.value;\n    view.selectQuery = viewForm.controls.selectQuery.value;\n    view.animateConfig = viewForm.controls.animateConfig.value;\n\n    if ((view.sourceType === eDataObjectType.Table && view.sourceTableKey > 0) ||\n      (view.sourceType === eDataObjectType.Datalink && view.sourceDatalinkKey > 0)) {\n\n      this.hubService.previewView(view, this.inputColumns, parameters, this.cancelToken).then((result) => {\n        this.refreshDataSubject.next();\n        this.columns = result.columns;\n        this.baseData = result.data;\n\n        if (!this.animateConfig.seriesColumn) {\n        //   this.initializeAnimation();\n        // } else {\n          this.data = this.baseData;\n        }\n      }).catch(() => {\n      });\n    }\n  }\n\n  download(format) {\n    let view = <DexihView>this.formsService.currentForm.value;\n    let downloadObject = new DownloadObject();\n    if (view.sourceType === eDataObjectType.Datalink) {\n      downloadObject.objectKey = view.sourceDatalinkKey;\n      downloadObject.objectType = eDataObjectType.Datalink;\n    }\n    if (view.sourceType === eDataObjectType.Table) {\n      downloadObject.objectKey = view.sourceTableKey;\n      downloadObject.objectType = eDataObjectType.Table;\n    }\n\n    downloadObject.query = this.selectQuery;\n    this.hubService.downloadData([downloadObject], false, format, this.cancelToken)\n  }\n\n  hasChanged() {\n    this.formsService.markAsChanged();\n  }\n\n  parameterChange() {\n    if (this.formsService.currentForm.controls.autoRefresh.value) {\n      this.refresh();\n    }\n  }\n\n  toggleEdit() {\n    this.showEdit = !this.showEdit;\n    this.hasEdited = true;\n  }\n\n  public canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>((resolve) => {\n      if (this.hasEdited && this.formsService.hasChanged) {\n        this.authService.confirmDialog('The view has not been saved',\n          'The view changes have not been saved.  Do you want to discard the changes and exit?')\n          .then((confirm) => {\n            resolve(confirm);\n          }).catch(() => {\n            resolve(false);\n          });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  // @HostListener allows is to guard against browser refresh, close, etc.\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.hasEdited && this.formsService.hasChanged) {\n      $event.returnValue = 'The view changes have not been saved.  Do you want to discard the changes and exit?';\n    }\n  }\n}\n","<div class=\"container\" *ngIf=\"formsService\">\n\t<d-widget title=\"Edit View\" iconClass=\"fa fa-lg fa-fw fa-bar-chart\" [showCloseButton]=\"true\" [padding]=\"false\"\n\t (close)=\"close()\">\n\t\t<ng-template #header>\n\t\t\t<dexih-invalid-form-details [control]=\"formsService.currentForm\" (click)=\"formsService.showErrors()\" class=\"mr-1\"></dexih-invalid-form-details>\n\t\t\t<d-button-refresh class=\"mr-1\" (click)=\"refresh()\" text=\"Reload\"></d-button-refresh>\n\t\t\t<download-button class=\"mr-1\" (download)=\"download($event)\"></download-button>\n\t\t\t\n\t\t\t<div class=\"btn-group btn-group-toggle mr-1\" data-toggle=\"buttons\" title=\"Table\">\n\t\t\t\t<label class=\"btn btn-primary\" [ngClass]=\"{active: showChart===false}\">\n\t\t\t\t\t<input type=\"radio\" name=\"options\" value=\"table\" autocomplete=\"off\" (click)=\"toggleChart()\">\n\t\t\t\t\t<i class=\"fa fa-table\"></i>\n\t\t\t\t</label>\n\t\t\t\t<label class=\"btn btn-primary\" [ngClass]=\"{active: showChart===true}\" title=\"Chart\">\n\t\t\t\t\t<input type=\"radio\" name=\"options\" value=\"chart\" autocomplete=\"off\" (click)=\"toggleChart()\">\n\t\t\t\t\t<i class=\"fa fa-bar-chart\"></i>\n\t\t\t\t</label>\n\t\t\t</div>\n\n\t\t\t<save-button *ngIf=\"hubCache.canWrite\" [formsService]=\"formsService\" class=\"mr-1\"></save-button>\n\t\t\t<d-button-edit class=\"mr-1\" (click)=\"toggleEdit()\" [text]=\"showEdit ? 'Hide Edit' : 'Edit'\"></d-button-edit>\n\t\t\t<cancel-button [formsService]=\"formsService\"></cancel-button>\n\t\t</ng-template>\n\n\t\t<d-widget-section *ngIf=\"formsService.currentForm && (showEdit || formsService.currentForm?.controls.parameters.length > 0)\" title=\"Properties\" [showExpandButton]=\"true\">\n\t\t<form *ngIf=\"showEdit\" [formGroup]=\"formsService.currentForm\">\n\t\t\t<fieldset>\n\t\t\t\t<section>\n\t\t\t\t\t<form-input label=\"View Name\" formControlName=\"name\" placeholder=\"Enter the view name.\" [autocapitalize]=\"true\" iconClass=\"fa fa-list\"\n\t\t\t\t\t [errors]=\"formsService.formErrors['name']\">\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<form-textarea label=\"Description\" [showPreview]=\"true\" [isHidden]=\"true\" formControlName=\"description\" placeholder=\"Enter the description.\">\n\t\t\t\t\t</form-textarea>\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t<form-select label=\"Data Source Type\" formControlName=\"sourceType\" [items]=\"sourceTypes\" itemKey=\"key\" itemName=\"name\"\n\t\t\t\t\t\t\t iconClass=\"fa fa-database\" note='Specify the source type for this view' [enableFilter]=\"false\">\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<section class=\"form-group col-md-6\" *ngIf=\"formsService.currentForm.value.sourceType == eDataObjectType.Table\">\n\t\t\t\t\t\t\t<form-select label=\"Source Table\" formControlName=\"sourceTableKey\" [errors]=\"formsService.formErrors?.sourceTableKey\" [items]=\"connectionTables\"\n\t\t\t\t\t\t\t parentName=\"name\" childItems=\"dexihTables\" itemKey=\"key\" itemName=\"logicalName\" note=\"Select the source table\">\n\t\t\t\t\t\t\t <table-edit-button [key]=\"formsService.currentForm.controls.sourceTableKey.value\"></table-edit-button>\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<section class=\"form-group col-md-6\" *ngIf=\"formsService.currentForm.value.sourceType == eDataObjectType.Datalink\">\n\t\t\t\t\t\t\t<form-select label=\"Source Datalink\" formControlName=\"sourceDatalinkKey\" [errors]=\"formsService.formErrors?.sourceDatalinkKey\"\n\t\t\t\t\t\t\t [items]=\"datalinks\" itemKey=\"key\" itemName=\"name\" note='Select the source datalink'>\n\t\t\t\t\t\t\t <datalink-edit-button [key]=\"formsService.currentForm.controls.sourceDatalinkKey.value\"></datalink-edit-button>\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t\t<d-button-refresh (click)=\"refreshDatalink()\" text=\"Refresh Parameters\"></d-button-refresh>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<form-checkbox formControlName=\"autoRefresh\" label=\"Automatically refresh data when view is opened\"></form-checkbox>\n\t\t\t\t\t<form-checkbox label=\"View is shared in the catalog to users with read access.\" formControlName=\"isShared\">\n\t\t\t\t\t</form-checkbox>\n\t\n\t\t\t\t</section>\n\n\t\t\t</fieldset>\n\t\t</form>\n\n\t\t<input-parameters [showEdit]=\"showEdit\" [parameters]=\"formsService.currentForm?.controls.parameters\" [formsService]=\"formsService\" [refreshEvent]=\"refreshDataObservable\" (onRefreshData)=\"refresh()\" (onChange)=\"parameterChange()\"></input-parameters>\n\n\t\t<div class=\"mt-3\"  *ngIf=\"!data || data.length === 0\">\n\t\t\t<d-button-refresh  class=\"mr-1\" (click)=\"refresh()\" text=\"Reload\" [autoCompact]=\"false\"></d-button-refresh>\n\t\t</div>\n\n\t\t</d-widget-section>\n\n\t\t<d-widget-section  *ngIf=\"inputColumns && inputColumns.length > 0\" title=\"InputColumns\" [showExpandButton]=\"true\">\n\t\t\t<span *ngFor=\"let column of inputColumns; let i = index\" class=\"input-group\">\n\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t<div class=\"input-group-text\">\n\t\t\t\t\t\t{{column.logicalName}}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<form-input name=\"column{{i}}\" class=\"form-control p-0\" [placeholder]=\"'Enter ' + column.logicalName\" [(ngModel)]=\"column.value\"></form-input>\n\t\t\t</span>\n\t\t</d-widget-section>\n\n\t\t<series-animate [showEdit]=\"showEdit\" [animateConfig]=\"animateConfig\" [columns]=\"columns\" (hasChanged)=\"hasChanged()\" [baseData]=\"baseData\" [(data)]=\"data\"></series-animate>\n\n\t\t<d-widget-section  *ngIf=\"showEdit\" title=\"Query Configuration\" [showExpandButton]=\"true\">\n\t\t\t<query-builder  [selectQuery]=\"formsService.currentForm.controls.selectQuery.value\" [columns]=\"tableColumns\" [inputColumns]=\"inputColumns\" [parameters]=\"formsService.currentForm.controls.parameters.value\" (hasChanged)=\"hasChanged()\" [refreshEvent]=\"refreshDataObservable\" (onRefreshData)=\"refresh()\"></query-builder>\n\t\t</d-widget-section>\n\n\t\t<ng-template [ngIf]=\"columns?.length > 0 && data?.length > 0\">\n\t\t\t<d-table *ngIf=\"!showChart\" [enableMultiSelect]=\"false\" [enableSaveCsv]=\"true\" [columns]=\"columns\" [data]=\"data\" [hideTable]=\"showChart\">\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<d-button-refresh class=\"mr-1\" (click)=\"refresh()\" text=\"Reload\"></d-button-refresh>\n\t\t\t\t</ng-template>\n\t\t\t</d-table>\n\n\t\t\t<div *ngIf=\"showChart\">\n\t\t\t<chart-builder \n\t\t\t\t[title]=\"formsService.currentForm.controls.name.value\" \n\t\t\t\t[columns]=\"columns\" \n\t\t\t\t[data]=\"data\" \n\t\t\t\t[config]=\"formsService.currentForm.controls.chartConfig.value\"\n\t\t\t\t[showEdit]=\"showEdit\"\n\t\t\t\t(hasChanged)=\"hasChanged()\">\n\t\t\t</chart-builder>\n\t\t</div>\n\t\t</ng-template>\n\n\n\t</d-widget>\n\n\t<dexih-help class=\"m-3\" title=\"Views\" path=\"/assets/help/reference/view.md\"></dexih-help>\n\n</div>","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { HubCache } from '../../hub.models';\nimport { DexihView, DexihHub, eSharedObjectType, eViewTypeItems, eDataObjectType, eViewType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'views',\n    templateUrl: './view-index.component.html',\n    styles: []\n})\nexport class ViewIndexComponent implements OnInit, OnDestroy {\n    @Input() public hubKey: number;\n\n    private _subscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n\n    hubCache: HubCache;\n\n    views: Array<DexihView>;\n    public eSharedObjectType = eSharedObjectType;\n\n    columns = [\n        { name: 'name', title: 'Name', footer: 'description', format: 'Md', tags: 'tags' },\n        { iconClass: 'sharedIcon', tooltip: 'sharedToolTip', width: '1%', align: 'center' },\n        { name: 'viewType', title: 'Chart/Table' },\n        { name: 'sourceName', title: 'Source'},\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        // watch for any changes in the validations.\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n\n                this.updateViews();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'View Index');\n        }\n\n\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    deleteViews(views: Array<DexihView>) {\n        this.hubService.deleteViews(views);\n    }\n\n    updateViews() {\n        if (this.hubCache && this.hubCache.isLoaded()) {\n            let views: Array<DexihView>;\n            views = this.hubCache.hub.dexihViews.filter(c => c.isValid);\n            let tableData = views.map(view => {\n                let sourceName = '';\n\n                switch (view.sourceType) {\n                    case eDataObjectType.Table:\n                        let sourceTable = this.hubCache.getTable(view.sourceTableKey);\n                        sourceName = sourceTable ? sourceTable.logicalName : 'Error, not found';\n                        break;\n                    case eDataObjectType.Datalink:\n                        let sourceDatalink = this.hubCache.hub.dexihDatalinks\n                            .find(c => c.key === view.sourceDatalinkKey);\n                        sourceName = sourceDatalink ? 'Datalink: ' + sourceDatalink.name : 'Error, not found';\n                        break;\n                }\n\n                return {\n                    key: view.key,\n                    name: view.name,\n                    tags: this.hubCache.getObjectTags(eSharedObjectType.View, view.key),\n                    viewType: eViewType[view.viewType],\n                    sourceName: sourceName,\n                    updateDate: view.updateDate,\n                    sharedIcon: view.isShared ? 'fa fa-group' : 'fa fa-user-secret',\n                    sharedToolTip: view.isShared ? 'Table is shared' : 'Table is private'\n                };\n            });\n            this._tableData.next(tableData);\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    editView(view: DexihView) {\n        this.router.navigate(['view-edit', view.key], { relativeTo: this.route });\n    }\n\n    export(items: Array<DexihView>) {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(cache.hub.hubKey, '');\n        items.forEach(item => { cache.cacheAddView(item.key, hub); });\n\n        let filename = items.length === 1 ? 'View - ' + items[0].name + '.json' : 'views.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    watchChanges() {\n        // watch the current validation in case it is changed in another session.\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n            if (hubCacheChange.changeClass === eSharedObjectType.View || hubCacheChange.changeClass === eSharedObjectType.TagObjects) {\n                this.updateViews();\n            }\n        });\n    }\n}\n","<div class=\"container-fluid\">\n    <d-widget title=\"Views\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-bar-chart\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\t>\n\t\t\t<d-table \n\t\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t\t[columns]=\"columns\"\n\t\t\t\t[dataObservable]=\"tableData\"\n\t\t\t\t(rowClick)=\"editView($event)\"\n\t\t\t\t[tags]=\"this.hubCache.hub.dexihTags\"\n\t\t\t\t>\n\t\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t\t<tags-update-button class=\"ml-1\" [objectType]=\"eSharedObjectType.View\" [objects]=\"items\" ></tags-update-button>\n\t\t\t\t\t</ng-template>\n\n\t\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n\t\t\t\t\t\t<dependent-items-button class=\"ml-1\" [key]=\"item.key\" [objectType]='eSharedObjectType.View'></dependent-items-button>\n\t\t\t\t\t</ng-template>\n\t\n\t\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t\t<actions-view-button [views]=\"items\"></actions-view-button>\n\t\t\t\t\t</ng-template>\n\n\t\t\t</d-table>\n\n\t</d-widget>\n\t\n\t<dexih-help class=\"m-3\" title=\"Views\" path=\"/assets/help/reference/view.md\"></dexih-help>\n\n</div>\n\n\n","import { Component, Input, OnInit, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { DexihApi, ApiData, eApiStatus, eDownloadUrlType } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n    selector: 'api-status',\n    templateUrl: './api-status.component.html'\n})\nexport class ApiStatusComponent implements OnInit, OnDestroy {\n    @Input() public apiKey: number;\n    @Output() public progressClick = new EventEmitter();\n\n    private _subscription: Subscription;\n    private _currentStatusSubscription: Subscription;\n    public cancelToken: CancelToken = new CancelToken();\n\n    private api: DexihApi;\n    public apiData: ApiData;\n\n    eApiStatus = eApiStatus;\n\n    public showCancel = false;\n\n    public statusClass: string;\n    public statusIcon: string;\n    public urls: any[];\n\n    public proxyUrl;\n\n    constructor(private hubService: HubService) {\n    }\n\n    ngOnInit() {\n        this._subscription = combineLatest(\n            this.hubService.getHubCacheObservable(),\n            this.hubService.getRemoteAgentObservable()\n        ).subscribe(result => {\n            let cache = result[0];\n            let remoteAgent = result[1];\n\n            if (this.apiKey) {\n                this.api = cache.hub.dexihApis.find(c => c.key === this.apiKey);\n                if (this.api) {\n                    this._currentStatusSubscription = this.api['currentStatus'].subscribe(apiData => {\n\n                        this.apiData = apiData;\n\n                        if (apiData) {\n\n                            if (apiData.apiStatus === eApiStatus.Activated && remoteAgent) {\n                                this.urls = remoteAgent.downloadUrls.filter(c => c.downloadUrlType !== eDownloadUrlType.Proxy).map(url => {\n                                    return {\n                                        downloadType: url.downloadUrlType,\n                                        downloadUrl: url.url + '/api/' + apiData.securityKey,\n                                        testUrl: url.url + '/api/' + apiData.securityKey + '/ping'\n                                    };\n                                });\n\n                                let proxy = remoteAgent.downloadUrls.find(c => c.downloadUrlType === eDownloadUrlType.Proxy);\n                                if (proxy) {\n                                    this.urls.push({\n                                        downloadType: 'Proxy',\n                                        downloadUrl: window.location.origin + '/api/remote/api/'\n                                            + remoteAgent.instanceId + '/' + apiData.securityKey,\n                                        testUrl: proxy.url + '/ping'\n                                    });\n                                }\n\n                                if (apiData.errorCount === 0 ) {\n                                    this.statusClass = 'success';\n                                    this.statusIcon = 'bolt';\n                                } else {\n                                    this.statusClass = 'warning';\n                                    this.statusIcon = 'exclamation-circle';\n                                }\n                            } else {\n                                this.statusClass = 'danger';\n                                this.statusIcon = 'chain-broken';\n                                this.urls = [];\n                            }\n                        } else {\n                            this.statusClass = 'danger';\n                            this.statusIcon = 'chain-broken';\n                            this.urls = [];                        }\n                    });\n                }\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._currentStatusSubscription) { this._currentStatusSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    deactivate() {\n        if (this.apiKey) {\n            this.hubService.deactivateApis([this.apiKey], this.cancelToken);\n        }\n    }\n\n    activate() {\n        if (this.apiKey) {\n            this.hubService.activateApis([this.api], this.cancelToken);\n        }\n    }\n\n    onProgressClick($event: any) {\n        this.progressClick.emit($event);\n    }\n\n    copyToClipboard(val: string) {\n        let selBox = document.createElement('textarea');\n        selBox.style.position = 'fixed';\n        selBox.style.left = '0';\n        selBox.style.top = '0';\n        selBox.style.opacity = '0';\n        selBox.value = val;\n        document.body.appendChild(selBox);\n        selBox.focus();\n        selBox.select();\n        document.execCommand('copy');\n        document.body.removeChild(selBox);\n      }\n\n}\n\n","<div class=\"list-group\">\n        <div class=\"list-group-item list-group-item-{{statusClass}}\" *ngIf=\"apiData\" >\n                <i class=\"fa fa-{{statusIcon}}\"></i>\n            <div class=\"d-inline\">{{apiData.apiStatus}} endpoint:</div>\n            <div class=\"d-inline\">{{apiData.successCount}} success, {{apiData.errorCount}} errors.</div>\n            <a *ngIf=\"apiData.apiStatus === eApiStatus.Activated\" class=\"btn btn-sm btn-danger float-right\" title=\"Deactivate the Api\" (click)=\"deactivate()\">\n                <i class=\"fa fa-ban\"></i>\n            </a>\n            <a  *ngIf=\"apiData.apiStatus !== eApiStatus.Activated\" class=\"btn btn-sm btn-success float-right\" title=\"Activate the Api\" (click)=\"activate()\">\n                <i class=\"fa fa-check\"></i>\n            </a>\n        </div>\n        <div class=\"list-group-item list-group-item-danger\" *ngIf=\"!apiData\" >\n            <i class=\"fa fa-chain-broken\"></i>\n            <div class=\"d-inline\">Deactivated </div>\n            <a class=\"btn btn-sm btn-success float-right\" title=\"Activate the Api\" (click)=\"activate()\">\n                <i class=\"fa fa-check\"></i>\n            </a>\n        </div>\n            \n    <div class=\"list-group-item\" *ngFor=\"let url of urls\">\n        <form-textarea [label]=\"url.downloadType + ' endpoint'\" [showCopy]=\"true\" [isHidden]=\"true\" [showPreview]=\"false\" [disabled]=\"true\" [rows]=\"3\" [value]=\"url.downloadUrl\" >\n            <a class=\"btn btn-sm btn-outline-primary float-right ml-1\" [href]=\"url.testUrl\" target=\"_blank\">test</a>\n        </form-textarea>\n        \n    </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihApi, eSourceType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'api-view',\n    templateUrl: './api-view.component.html'\n})\n\nexport class ApiViewComponent implements OnInit {\n    @Input() api: DexihApi;\n\n    eSourceType = eSourceType;\n    \n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div [routerLink]=\"['api-edit', api.key]\" queryParamsHandling=\"merge\">\n    <h5>{{api.name}}</h5>\n    <div *ngIf=\"api.description\">\n        <markdown [data]=\"api.description\"></markdown>\n    </div>\n    <div class=\"note\">{{eSourceType[api.sourceType]}} / Updated: {{api.updateDate | calendar }} </div>\n</div>\n\n<api-status [apiKey]='api?.key'></api-status>","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihColumnValidation } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'columnValidation-view',\n    templateUrl: './columnValidation-view.component.html'\n})\n\nexport class ColumnValidationViewComponent implements OnInit {\n    @Input() columnValidation: DexihColumnValidation;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div class=\"float-right\">\n    <actions-columnValidation-button [columnValidation]=\"columnValidation\" [pullRight]=\"true\"></actions-columnValidation-button>\n</div>\n<h5>{{columnValidation.name}}</h5>\n<div *ngIf=\"columnValidation.description\">\n    <markdown [data]=\"columnValidation.description\"></markdown>\n</div>\n<div class=\"note\">Updated: {{columnValidation.updateDate | calendar }} </div>","<div [routerLink]=\"['connection-edit', connection.key]\" queryParamsHandling=\"merge\">\n    <h5>{{connection.name}}</h5>\n    <div *ngIf=\"connection.description\">\n        <markdown [data]=\"connection.description\"></markdown>\n    </div>\n    <div class=\"note\">{{connectionReference?.name}} / {{eConnectionPurpose[connection.purpose]}} / Updated: {{connection.updateDate | calendar }} </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { DexihConnection, ConnectionReference, eConnectionPurpose } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'connection-view',\n    templateUrl: './connection-view.component.html'\n})\n\nexport class ConnectionViewComponent implements OnInit {\n    @Input() connection: DexihConnection;\n\n    connectionReference: ConnectionReference;\n    eConnectionPurpose = eConnectionPurpose;\n\n    constructor(private hubService: HubService) {\n\n    }\n\n    ngOnInit() {\n        this.hubService.getRemoteLibrariesObservable().subscribe(async remoteLibraries => {\n            if ( remoteLibraries ) {\n                this.connectionReference = await this.hubService.GetConnectionReference(this.connection);\n            }\n        })\n    }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihDashboard } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'dashboard-view',\n    templateUrl: './dashboard-view.component.html'\n})\n\nexport class DashboardViewComponent implements OnInit {\n    @Input() dashboard: DexihDashboard;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div [routerLink]=\"['dashboard-edit', dashboard.key]\" queryParamsHandling=\"merge\">\n    <h5>{{dashboard.name}}</h5>\n    <div *ngIf=\"dashboard.description\">\n        <markdown [data]=\"dashboard.description\"></markdown>\n    </div>\n    <div class=\"note\">Updated: {{dashboard.updateDate | calendar }} </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihDatajob } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'datajob-view',\n    templateUrl: './datajob-view.component.html'\n})\n\nexport class DatajobViewComponent implements OnInit {\n    @Input() datajob: DexihDatajob;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div [routerLink]=\"['datajob-edit', datajob.key]\" queryParamsHandling=\"merge\">\n    <h5>{{datajob.name}}</h5>\n    <div *ngIf=\"datajob.description\">\n        <markdown [data]=\"datajob.description\"></markdown>\n    </div>\n    <datalink-status [datajobKey]=\"datajob.key\"></datalink-status>\n    <div class=\"note\">Updated: {{datajob.updateDate | calendar }} </div>\n</div>\n","import { Component, Input, OnInit, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { Subscription} from 'rxjs';\nimport { CancelToken } from '../../../+auth/auth.models';\nimport { Functions } from '../../../shared/utils/functions';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { TransformWriterResult, eRunStatus } from '../../../shared/shared.models';\nimport { runStatus } from '../../hub.models';\n\nclass StatusInfo {\n    public writerResult: TransformWriterResult;\n    public percentage;\n    public message;\n    public statusType;\n    public error;\n    public iconClass;\n}\n\n@Component({\n    selector: 'datalink-status',\n    templateUrl: './datalink-status.component.html'\n})\nexport class DatalinkStatusComponent implements OnInit, OnDestroy {\n    @Input() public datalinkKey: number;\n    @Input() public datalinkTestKey: number;\n    @Input() public datajobKey: number;\n    @Input() public tableKey: number;\n    @Input() public writerResult: TransformWriterResult;\n\n    @Output() public progressClick = new EventEmitter();\n\n    private _hubCacheSubscription: Subscription;\n    private _currentStatusSubscription: Subscription;\n    private _previousStatusSubscription: Subscription;\n    private cancelToken: CancelToken = new CancelToken();\n\n    private dataObject: any;\n\n    eRunStatus = eRunStatus;\n    runStatus = runStatus;\n\n    public currentWriterResult: TransformWriterResult;\n    public currentStatus: StatusInfo;\n    public previousStatus: StatusInfo;\n\n    public showCancel = false;\n\n    constructor(private hubService: HubService, private authService: AuthService) {\n    }\n\n    ngOnInit() {\n        if (this.writerResult) {\n            this.previousStatus = this.getStatus(this.writerResult);\n        } else {\n            this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n                if (!cache.isLoaded()) { return; }\n\n                if (this.datalinkKey) {\n                    this.dataObject = cache.hub.dexihDatalinks.find(c => c.key === this.datalinkKey);\n                } else if (this.datajobKey) {\n                    this.dataObject = cache.hub.dexihDatajobs.find(c => c.key === this.datajobKey);\n                } else if (this.datalinkTestKey) {\n                    this.dataObject = cache.hub.dexihDatalinkTests.find(c => c.key === this.datalinkTestKey);\n                } else if (this.tableKey) {\n                    this.dataObject = cache.getTable(this.tableKey);\n                }\n\n                if (this.dataObject) {\n                    if (this._currentStatusSubscription) { this._currentStatusSubscription.unsubscribe(); }\n                    this._currentStatusSubscription = this.dataObject.currentStatus.subscribe(writerResult => {\n                        this.currentWriterResult = writerResult;\n                        if (writerResult) {\n                            this.currentStatus = this.getStatus(writerResult);\n                        } else {\n                            this.currentStatus = null;\n                        }\n\n                    });\n                    if (this._previousStatusSubscription) { this._previousStatusSubscription.unsubscribe(); }\n                    this._previousStatusSubscription = this.dataObject.previousStatus.subscribe(previousStatus => {\n                        if (previousStatus) {\n                            this.previousStatus = this.getStatus(previousStatus);\n                        } else {\n                            this.previousStatus = null;\n                        }\n                    });\n                }\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n        if (this._currentStatusSubscription) { this._currentStatusSubscription.unsubscribe(); }\n        if (this._previousStatusSubscription) { this._previousStatusSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    getStatus(writerResult: TransformWriterResult): StatusInfo {\n        const statusInfo = new StatusInfo();\n\n        if (! writerResult) {\n            statusInfo.message = 'not running';\n            statusInfo.percentage = 0;\n            statusInfo.statusType = 'info';\n            statusInfo.error = '';\n        } else {\n            statusInfo.writerResult = writerResult;\n\n            // calculate the percentage complete.\n            let value: number;\n            switch (writerResult.runStatus) {\n                case eRunStatus.Running:\n                case eRunStatus.RunningErrors:\n                    // use last row count to calculate percentage\n                    if (writerResult.lastRowTotal > 0) {\n                        value = 100 * (writerResult.rowsTotal / writerResult.lastRowTotal);\n                        if (value >= 100) {\n                            value = 99; // if it exceeds 100 leave it on 99%\n                        }\n                    } else {\n                        value = 50; // no last rows count, then use 50%.\n                    }\n                    this.showCancel = true;\n                    break;\n                case eRunStatus.Abended:\n                case eRunStatus.Cancelled:\n                case eRunStatus.Finished:\n                case eRunStatus.FinishedErrors:\n                case eRunStatus.Passed:\n                case eRunStatus.Failed:\n                    value = 100;\n                    this.showCancel = false;\n                    break;\n                case eRunStatus.NotRunning:\n                    value = 0;\n                    this.showCancel = false;\n                    break;\n                case eRunStatus.Initialised:\n                case eRunStatus.Scheduled:\n                case eRunStatus.Started:\n                    value = 0;\n                    this.showCancel = true;\n                    break;\n            }\n\n            statusInfo.percentage = value;\n\n            // update the type, which is used for the colour of the progress\n            switch (writerResult.runStatus) {\n                case eRunStatus.Abended:\n                case eRunStatus.Cancelled:\n                case eRunStatus.FinishedErrors:\n                case eRunStatus.RunningErrors:\n                case eRunStatus.Failed:\n                    statusInfo.statusType = 'danger';\n                    break;\n                case eRunStatus.Initialised:\n                case eRunStatus.NotRunning:\n                case eRunStatus.Running:\n                case eRunStatus.Scheduled:\n                case eRunStatus.Started:\n                    statusInfo.statusType = 'primary';\n                    break;\n                case eRunStatus.Finished:\n                case eRunStatus.Passed:\n                    statusInfo.statusType = 'success';\n                    break;\n            }\n\n            // update the type, which is used for the colour of the progress\n            switch (writerResult.runStatus) {\n                case eRunStatus.Abended:\n                case eRunStatus.Failed:\n                case eRunStatus.FinishedErrors:\n                    statusInfo.iconClass = 'fa fa-ban text-danger'\n                    break;\n                case eRunStatus.Cancelled:\n                    statusInfo.iconClass = 'fa fa-ban text-warning'\n                    break;\n                case eRunStatus.RunningErrors:\n                    statusInfo.iconClass = 'fa fa-cogs text-danger'\n                    break;\n                case eRunStatus.Initialised:\n                    statusInfo.iconClass = 'fa fa-circle text-success'\n                    break;\n                case eRunStatus.NotRunning:\n                    statusInfo.iconClass = 'fa fa-square'\n                    break;\n                case eRunStatus.Running:\n                    statusInfo.iconClass = 'fa fa-cogs text-success'\n                    break;\n                case eRunStatus.Scheduled:\n                    statusInfo.iconClass = 'fa fa-calendar text-success'\n                    break;\n                case eRunStatus.Started:\n                    statusInfo.iconClass = 'fa fa-cog text-success'\n                    break;\n                case eRunStatus.Finished:\n                case eRunStatus.Passed:\n                    statusInfo.iconClass = 'fa fa-square text-success'\n                    break;\n            }\n\n            // update the message and error\n            const status = this.runStatus.find(c => c.key === writerResult.runStatus).name;\n            // tslint:disable-next-line:max-line-length\n            statusInfo.message = `(read: ${Functions.numberWithCommas(writerResult.rowsReadPrimary)}, written: ${Functions.numberWithCommas(writerResult.rowsTotal)}) ${status}`;\n\n            statusInfo.error = writerResult.message;\n        }\n        return statusInfo;\n    }\n\n    cancelled() {\n        if (this.datalinkKey) {\n            this.hubService.cancelDatalinks([this.datalinkKey], this.cancelToken);\n        } else if (this.datajobKey) {\n            this.hubService.deactivateDatajobs([this.datajobKey], this.cancelToken);\n        } else if (this.datalinkTestKey) {\n            this.hubService.cancelDatalinkTests([this.datalinkTestKey], this.cancelToken);\n        }\n}\n\n    onProgressClick($event: any) {\n        if (this.writerResult && !this.writerResult.auditConnectionKey) {\n            this.authService.informationDialog('No audit connection',\n            'The selected audit item is attached to a datalink/datajob that does not have an Audit Connection specified. ' +\n            'To view detailed results, specify a audit connection.')\n        }\n        this.progressClick.emit($event);\n    }\n\n}\n\n\n","<div *ngIf=\"previousStatus?.writerResult?.auditKey\" class=\"mb-1\" style=\"width: 300px;\">\n    <d-progressbar  \n    [showCancel]=\"false\" \n    [value]=\"previousStatus.percentage\"\n    [type]=\"previousStatus.statusType\" \n    [routerLink]=\"['result-view', previousStatus.writerResult?.auditConnectionKey, previousStatus.writerResult?.auditKey]\" queryParamsHandling=\"merge\"\n    height=\"30px\" >\n        (Previous) {{previousStatus.message}}\n    </d-progressbar>\n</div>\n\n<div *ngIf=\"currentStatus?.writerResult\" class=\"mb-1\" style=\"width: 300px;\">\n    <d-progressbar *ngIf=\"currentStatus.writerResult.runStatus == eRunStatus.Scheduled\"  \n        [showCancel]=\"true\" \n        (cancelled)=\"cancelled()\" \n        [value]=\"100\" \n        [type]=\"currentStatus.statusType\"\n        height=\"30px\" style=\"width: 300px;\">\n        <i class=\"fa fa-clock-o\"></i>Next - {{currentStatus.writerResult.scheduledTime | calendar}} (in <countdown [end]=\"currentStatus.writerResult.scheduledTime\" ></countdown>)     \n    </d-progressbar>    \n</div>\n\n<div *ngIf=\"currentStatus?.writerResult && currentStatus.writerResult.runStatus != eRunStatus.Scheduled\"   style=\"width: 300px;\">\n    <d-progressbar \n        [showCancel]=\"showCancel\" \n        (cancelled)=\"cancelled()\" \n        (progressClick)=\"onProgressClick()\"\n        [routerLink]=\"['result-view', currentStatus.writerResult?.auditConnectionKey, currentStatus.writerResult?.auditKey]\" queryParamsHandling=\"merge\" \n        [value]=\"currentStatus.percentage\" \n        [type]=\"currentStatus.statusType\"\n        height=\"30px\" style=\"width: 300px;\">\n        {{currentStatus.message}}\n    </d-progressbar>    \n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihDatalink, eDatalinkType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'datalink-view',\n    templateUrl: './datalink-view.component.html'\n})\n\nexport class DatalinkViewComponent implements OnInit {\n    @Input() datalink: DexihDatalink;\n\n    eDatalinkType = eDatalinkType;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div [routerLink]=\"['datalink-edit', 'edit', datalink.key]\" queryParamsHandling=\"merge\">\n    <h5>{{datalink.name}}</h5>\n    <div *ngIf=\"datalink.description\">\n        <markdown [data]=\"datalink.description\"></markdown>\n    </div>\n    <div class=\"note\">{{eDatalinkType[datalink.datalinkType]}} / Updated: {{datalink.updateDate | calendar }} </div>\n    <datalink-status [datalinkKey]=\"datalink.key\"></datalink-status>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihDatalink, DexihDatalinkTest } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'datalinkTest-view',\n    templateUrl: './datalinkTest-view.component.html'\n})\n\nexport class DatalinkTestViewComponent implements OnInit {\n    @Input() datalinkTest: DexihDatalinkTest;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div [routerLink]=\"['datalinkTest-edit', datalinkTest.key]\" queryParamsHandling=\"merge\">\n    <h5>{{datalinkTest.name}}</h5>\n    <div *ngIf=\"datalinkTest.description\">\n        <markdown [data]=\"datalinkTest.description\"></markdown>\n    </div>\n    <div class=\"note\">Updated: {{datalinkTest.updateDate | calendar }} </div>\n    <datalink-status [datalinkTestKey]=\"datalinkTest.key\"></datalink-status>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihFileFormat } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'fileFormat-view',\n    templateUrl: './fileFormat-view.component.html'\n})\n\nexport class FileFormatViewComponent implements OnInit {\n    @Input() fileFormat: DexihFileFormat;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div class=\"float-right\">\n    <actions-fileFormat-button [fileFormat]=\"fileFormat\" [pullRight]=\"true\"></actions-fileFormat-button>\n</div>\n<div>\n    <h5>{{fileFormat.name}}</h5>\n    <div *ngIf=\"fileFormat.description\">\n        <markdown [data]=\"fileFormat.description\"></markdown>\n    </div>\n    <div class=\"note\">Updated: {{fileFormat.updateDate | calendar }} </div>\n</div>\n","import { Component, OnInit, Input, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { DexihListOfValues, InputParameterBase, ListOfValuesItem } from '../../../shared/shared.models';\nimport { HubService } from '../../hub.service';\nimport { Subscription, Observable } from 'rxjs';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n    selector: 'input-parameters-view',\n    templateUrl: 'input-parameters-view.component.html'\n})\n\nexport class InputParametersViewComponent implements OnInit, OnDestroy {\n    @Input() parameters: InputParameterBase[];\n    @Input() refreshEvent: Observable<void>;\n\n    @Output() onChange = new EventEmitter();\n    @Output() onRefreshData = new EventEmitter();\n\n    private _hubSubscription: Subscription;\n    private _refreshSubscription: Subscription;\n\n    public parentParams: string[] = [];\n    public values: ListOfValuesItem[] = [];\n    public listOfValues: Array<DexihListOfValues>;\n\n    public userParameters: InputParameterBase[];\n\n    public requiresRefresh = false;\n\n    public cancelToken: CancelToken = new CancelToken();\n\n    constructor(private hubService: HubService) { }\n\n    ngOnInit() {\n        this._hubSubscription = this.hubService.getHubCacheObservable(true).subscribe(cache => {\n            this.listOfValues = cache.hub.dexihListOfValues;\n\n            this.userParameters = [];\n\n            this.parameters.filter(c => c.isValid && c.allowUserSelect).forEach((parameter: InputParameterBase) => {\n                parameter['runTime'] = {showRefresh: parameter.listOfValuesKey > 0, isRefreshing: false, items: []};\n                if (parameter.value) {\n                    parameter['runTime'].items = [{key: parameter.value, name: parameter.valueDesc}];\n                }\n                this.userParameters.push(parameter);\n            });\n\n        });\n\n        this._refreshSubscription = this.refreshEvent.subscribe(() => {\n            this.requiresRefresh = false;\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._hubSubscription) { this._hubSubscription.unsubscribe(); }\n        if (this._refreshSubscription) { this._refreshSubscription.unsubscribe(); }\n    }\n\n    refreshLOV(parameter: InputParameterBase) {\n        if (!parameter.listOfValuesKey) { return; }\n        parameter['runTime'].isRefreshing = true;\n        this.hubService.previewListOfValuesKey(parameter.listOfValuesKey, false, this.cancelToken).then(result => {\n            parameter['runTime'].items = result;\n            parameter['runTime'].showRefresh = false;\n        }).finally(() => {\n            parameter['runTime'].isRefreshing = false;\n        });\n    }\n\n    refreshData() {\n        this.onRefreshData.emit();\n    }\n\n    change(parameter: InputParameterBase, $event) {\n        if (parameter.listOfValuesKey > 0) {\n            this.onChange.emit();\n        } else {\n            this.requiresRefresh = true;\n        }\n    }\n}\n","<div *ngIf=\"parameters\" class=\"d-flex\">\n    <span *ngFor=\"let parameter of userParameters\" class=\"pr-1\">\n        <!-- <form-input [disabled]=\"true\" [labelLeft]=\"parameter.name\" [(ngModel)]=\"parameter.name\">\n        </form-input> -->\n        <form-select *ngIf=\"(parameter.listOfValuesKey > 0)\"\n            [labelLeft]=\"parameter.name\" [(ngModel)]=\"parameter.value\" itemKey=\"key\" itemName=\"name\"\n            [items]=\"parameter['runTime'].items\" [enableTextEntry]=\"! (parameter.listOfValuesKey > 0)\"\n            [textEntryItems]=\"parentParams\" textEntryItemsTitle=\"Linked Parameters\"\n            (ngModelChange)=\"change(parameter, $event)\" [showRefresh]=\"parameter['runTime'].showRefresh\"\n            [isRefreshing]=\"parameter['runTime'].isRefreshing\" (onRefresh)=\"refreshLOV(parameter)\"\n            [multiSelect]=\"parameter.rank === 1\">\n        </form-select>\n        <form-input *ngIf=\"! (parameter.listOfValuesKey > 0)\"\n            [labelLeft]=\"parameter.name\" [(ngModel)]=\"parameter.value\"\n            (ngModelChange)=\"change(parameter, $event)\"></form-input>\n    </span>\n    <div *ngIf=\"requiresRefresh\" class=\"alert alert-warning mt-2\">\n        <a href=\"javascript:void(0)\" class=\"alert-link\" (click)=\"refreshData()\">The parameters have changed. Click to\n            refresh.</a>\n    </div>\n</div>","import { Component, OnInit, Input, OnChanges, SimpleChanges, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { FormArray, FormGroup } from '@angular/forms';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { DexihConnection, DexihListOfValues, InputParameterBase, ListOfValuesItem, eLOVObjectType } from '../../../shared/shared.models';\nimport { HubService } from '../../hub.service';\nimport { Subscription, merge, Subject, Observable } from 'rxjs';\nimport { CancelToken } from '../../../+auth/auth.models';\nimport { ILogger } from '@microsoft/signalr';\nimport { eLogLevel, LogFactory } from '../../../../logging';\n\n@Component({\n    selector: 'input-parameters',\n    templateUrl: 'input-parameters.component.html'\n})\n\nexport class InputParametersComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() formsService: HubFormsService\n    @Input() parameters: FormArray;\n    @Input() showEdit = false;\n    @Input() parentParameters: InputParameterBase[];\n    @Input() refreshEvent: Observable<void>;\n    @Input() allowAddRemove = true;\n\n    @Output() onChange = new EventEmitter();\n    @Output() onRefreshData = new EventEmitter();\n\n    private _hubSubscription: Subscription;\n    private _refreshSubscription: Subscription;\n\n    public parentParams: string[] = [];\n    public listOfValues: Array<DexihListOfValues>;\n\n    public cancelToken: CancelToken = new CancelToken();\n\n    public showRefresh = false;\n    public isRefreshing = false;\n\n    public requiresRefresh = false;\n\n    public maxKey = 0;\n\n    constructor(private hubService: HubService) { }\n\n    ngOnInit() {\n        this._hubSubscription = this.hubService.getHubCacheObservable(true).subscribe(cache => {\n            this.listOfValues = cache.hub.dexihListOfValues;\n\n            this.parameters.controls.forEach((parameterForm: FormGroup) => {\n                let parameter = <InputParameterBase>parameterForm.value;\n                if (parameter.listOfValuesKey > 0) {\n                    let lov = this.listOfValues.find(c => c.key === parameter.listOfValuesKey && c.isValid);\n                    if (lov && lov.sourceType === eLOVObjectType.Static) {\n                        this.refreshLOV(parameterForm);\n                    }\n                }\n            });\n        });\n\n        if (this.refreshEvent) {\n            this._refreshSubscription = this.refreshEvent.subscribe(() => {\n                this.requiresRefresh = false;\n            });\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (this.parentParameters) {\n            this.parentParams = this.parentParameters.map(c => '{' + c.name + '}');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._hubSubscription) { this._hubSubscription.unsubscribe(); }\n        if (this._refreshSubscription) { this._refreshSubscription.unsubscribe(); }\n    }\n\n    add(index) {\n        let parameter = new InputParameterBase();\n        parameter.key = --this.maxKey;\n        let parameterForm = this.formsService.parameter(parameter);\n        this.parameters.insert(index + 1, parameterForm);\n    }\n\n    delete(index) {\n        this.parameters.removeAt(index);\n    }\n\n    refreshLOV(parameterForm: FormGroup) {\n        let parameter = <InputParameterBase>parameterForm.value;\n        if (!parameter.listOfValuesKey) { return; }\n\n        let runTime = parameterForm.controls.runTime.value;\n        runTime.isRefreshing = true;\n        this.hubService.previewListOfValuesKey(parameter.listOfValuesKey, false, this.cancelToken).then(result => {\n            // runTime.items = result;\n            // runTime.showRefresh = false;\n\n            // update any other parameters with same list of values.\n            for (let p of this.parameters.controls\n                .filter( (c: FormGroup) => c.controls.listOfValuesKey.value === parameter.listOfValuesKey)) {\n                runTime = (<FormGroup>p).controls.runTime.value;\n                runTime.items = result;\n                runTime.showRefresh = false;\n            }\n        }).finally(() => {\n            runTime.isRefreshing = false;\n        });\n    }\n\n    refreshData() {\n        this.onRefreshData.emit();\n    }\n\n    textValueChange(parameterForm: FormGroup, $event) {\n        // parameterForm.controls.value.setValue($event);\n        if (parameterForm.controls.rank.value === 0) {\n            parameterForm.controls.valueDesc.setValue($event);\n        } else {\n            parameterForm.controls.valueDesc.setValue(null);\n        }\n    }\n\n    change(parameterForm: FormGroup, $event) {\n        this.requiresRefresh = true;\n        if (parameterForm.controls.listOfValuesKey.value > 0) {\n            if (parameterForm.controls.rank.value === 0) {\n                parameterForm.controls.valueDesc.setValue($event);\n            } else {\n                parameterForm.controls.valueDesc.setValue(null);\n            }\n            this.onChange.emit();\n        }\n    }\n}\n","<div *ngIf=\"parameters\" [ngClass]=\"{'d-flex': !showEdit}\">\n    <d-button-new *ngIf=\"showEdit && allowAddRemove && parameters.controls.length === 0\" (click)=\"add()\"\n        text=\"Add Parameter\" [autoCompact]=\"false\"></d-button-new>\n    <div *ngFor=\"let parameter of parameters.controls; let i = index\" class=\"pb-1 pr-1\">\n        <form [formGroup]=\"parameter\"\n            *ngIf=\"parameter.controls.isValid.value && (showEdit || parameter.controls.allowUserSelect.value)\">\n\n            <div class=\"d-flex align-items-stretch flex-wrap\" *ngIf=\"showEdit\">\n                <form-input labelLeft=\"Name\" class=\"p-0\" formControlName=\"name\">\n                </form-input>\n                <form-select labelLeft=\"LOV\" class=\"p-0 flex-grow-1\"  formControlName=\"listOfValuesKey\"\n                    [items]=\"listOfValues\" itemKey=\"key\" itemName=\"name\" [allowNullSelect]=\"true\">\n                </form-select>\n\n                <form-checkbox [border]=\"true\" formControlName=\"allowUserSelect\">Selectable</form-checkbox>\n                <form-checkbox [border]=\"true\" formControlName=\"rank\" [checkedValue]=\"1\" [unCheckedValue]=\"0\">Array\n                </form-checkbox>\n\n                <div *ngIf=\"allowAddRemove\" class=\"input-group-append\">\n\n                    <div class=\"input-group-text p-0\">\n                        <button type=\"button\" (click)=\"add(i)\" class=\"btn btn-sm border-0 rounded-0 bg-transparent\"\n                            value=\"Add\">\n                            <i class=\"fa fa-plus-square-o\"></i>\n                        </button>\n                    </div>\n                    <div class=\"input-group-text p-0\">\n                        <button type=\"button\" (click)=\"delete(i)\" class=\"btn btn-sm border-0 rounded-0 bg-transparent\"\n                            value=\"Remove\">\n                            <i class=\"fa fa-minus-square-o\"></i>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            \n            <form-select *ngIf=\"parameter.controls.listOfValuesKey.value > 0\"\n                class=\"p-0\" formControlName=\"value\" \n                [labelLeft]=\"showEdit ? null : parameter.controls.name.value\" itemKey=\"key\" itemName=\"name\"\n                [items]=\"parameter.controls.runTime?.value?.items\"\n                [enableTextEntry]=\"false\"\n                [textEntryItems]=\"(parameter.controls.listOfValuesKey.value > 0) ? null : parentParams\"\n                textEntryItemsTitle=\"Linked Parameters\" (ngModelChange)=\"change(parameter, $event)\"\n                (textValueChange)=\"textValueChange(parameter, $event)\"\n                [showRefresh]=\"parameter.controls.runTime?.value?.showRefresh\"\n                [isRefreshing]=\"parameter.controls.runTime?.value?.isRefreshing\" (onRefresh)=\"refreshLOV(parameter)\"\n                [multiSelect]=\"parameter.controls.rank.value === 1\">\n            </form-select>\n\n            <form-select *ngIf=\"! (parameter.controls.listOfValuesKey.value > 0)\" [items]=\"[]\"\n                class=\"p-0\" formControlName=\"value\" \n                [enableTextEntry]=\"true\"\n                [labelLeft]=\"showEdit ? null : parameter.controls.name.value\"\n                [textEntryItems]=\"parentParams\" textEntryItemsTitle=\"Linked Parameters\" \n            >\n            </form-select>\n        </form>\n    </div>\n\n    <div *ngIf=\"requiresRefresh\" class=\"alert alert-warning mt-2\">\n        <a href=\"javascript:void(0)\" class=\"alert-link\" (click)=\"refreshData()\">The parameters have changed. Click to\n            refresh.</a>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihListOfValues } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'listOfValues-view',\n    templateUrl: './listOfValues-view.component.html'\n})\n\nexport class ListOfValuesViewComponent implements OnInit {\n    @Input() listOfValues: DexihListOfValues;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div class=\"float-right\">\n    <actions-listOfValues-button [listOfValues]=\"listOfValues\" [pullRight]=\"true\"></actions-listOfValues-button>\n</div>\n<h5>{{listOfValues.name}}</h5>\n<div *ngIf=\"listOfValues.description\">\n    <markdown [data]=\"listOfValues.description\"></markdown>\n</div>\n<div class=\"note\">Updated: {{listOfValues.updateDate | calendar }} </div>","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { HubCache, PreviewResults, DexihInputParameter } from '../../hub.models';\nimport { combineLatest, Subscription, Subject } from 'rxjs';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubService } from '../../hub.service';\nimport { InputOutputColumns } from '../../hub.lineage.models';\nimport { PromiseWithCancel, CancelToken } from '../../../+auth/auth.models';\nimport { eSourceType, DexihTable, DexihDatalink, ChartConfig, InputColumn, DexihColumnBase, SelectQuery,\n    eDownloadFormat, DownloadObject, DexihView, eViewType, eDataObjectType, DexihViewParameter } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'preview-data',\n    templateUrl: 'preview-data.component.html'\n})\n\nexport class PreviewDataComponent implements OnInit, OnDestroy {\n    @Input() viewSource: eDataObjectType;\n    @Input() key: number;\n    @Input() table: DexihTable;\n    @Input() datalink: DexihDatalink;\n    @Input() datalinkTransformKey: number;\n    @Input() previewUpdates = false;\n\n    private _subscription: Subscription;\n\n    private hubCache: HubCache;\n\n    private refreshDataSubject: Subject<void> = new Subject<void>();\n    public refreshDataObservable = this.refreshDataSubject.asObservable();\n\n    private requiresRefreshDataSubject: Subject<void> = new Subject<void>();\n    public requiresRefreshDataObservable = this.requiresRefreshDataSubject.asObservable();\n    \n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    public chartConfig = new ChartConfig();\n    public view = 'table';\n    public transformProperties = null;\n\n    public inputColumns: InputColumn[];\n    public parameters: DexihInputParameter[];\n    public tableColumns: DexihColumnBase[];\n    selectQuery: SelectQuery = new SelectQuery();\n\n    public title: string;\n\n    public csvFileName: string;\n\n    columns: Array<any>;\n    public data: Array<any>;\n\n    public isRefreshing = false;\n    private firstLoad = true;\n    private dialogOpen = false;\n\n    public allowViewSave = false;\n\n    public previewQuery: PromiseWithCancel<PreviewResults>;\n    public cancelToken: CancelToken = new CancelToken();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        ) {\n            this.selectQuery.rows = 100;\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.hubService.getRemoteAgentObservable()\n            ).subscribe(result => {\n                this.hubCache = result[0];\n                let remoteAgent = result[1];\n\n                if (this.hubCache.isLoaded()) {\n                    // get the hub key from the route data, and update the service.\n\n                    switch (this.viewSource) {\n                        case eDataObjectType.Datalink:\n                            let datalink: DexihDatalink;\n                            if ( this.key ) {\n                                datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === this.key);\n                            } else {\n                                datalink = this.datalink;\n                            }\n\n                            if (!datalink) { return; }\n                            // this.key = datalink.key;\n\n                            // only allows view creation on saved datalink\n                            this.allowViewSave = datalink.key && !this.datalinkTransformKey ? true : false;\n\n                            this.title = 'Datalink - ' + datalink.name;\n\n                            // get the outputs from the last transform in the datalink\n                            const ioColumns = new InputOutputColumns();\n                            ioColumns.buildInputOutput(datalink);\n                            if (this.datalinkTransformKey) {\n                                let transform = datalink.dexihDatalinkTransforms.find(c => c.key === this.datalinkTransformKey);\n                                this.tableColumns = transform['runTime']['outputColumns'];\n                            } else {\n                                this.tableColumns = ioColumns.getDatalinkOutputColumns(datalink);\n                            }\n\n                            this.inputColumns = datalink.sourceDatalinkTable.dexihDatalinkColumns.filter(c => c.isInput).map(c => {\n                                return  {datalinkKey: this.key, datalinkName: datalink.name,\n                                    name: c.name, logicalName: c.logicalName, dataType: c.dataType,\n                                    rank: c.rank, value: c.defaultValue, defaultValue: c.defaultValue};\n                            });\n\n                            this.parameters = datalink.parameters;\n                            break;\n\n                        case eDataObjectType.Table:\n                            let table: DexihTable;\n                            if ( this.key ) {\n                                table = this.hubCache.getTable(this.key);\n                            } else {\n                                table = this.table;\n                            }\n\n                            if (!table) { return; }\n                            // this.key = table.key;\n\n                            // only allows view creation on saved table\n                            this.allowViewSave = table.key ? true : false;\n\n                            this.title = 'Table - ' + table.name;\n\n                            this.tableColumns = table.dexihTableColumns;\n                            this.inputColumns = table.dexihTableColumns.filter(c => c.isInput).map(c => {\n                                return  {datalinkKey: 0, datalinkName: null,\n                                    name: c.name, logicalName: c.logicalName, dataType: c.dataType,\n                                    rank: c.rank, value: c.defaultValue, defaultValue: c.defaultValue};\n                                }\n                            );\n                    }\n                }\n\n                if (remoteAgent) {\n                    if (!this.firstLoad) {\n                        if (!this.dialogOpen) {\n                            this.dialogOpen = true;\n                            this.authService.confirmDialog('Remote Agent Available',\n                                'A remote agent is available, would you like to refresh the data?').then(confirm => {\n                                    if (confirm) {\n                                        this.refresh();\n                                    }\n                                    this.dialogOpen = false;\n                                });\n                        }\n                    } else {\n                        this.refresh();\n                    }\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Preview');\n        }\n\n    }\n\n    ngOnDestroy(): void {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    parameterChange() {\n        this.requiresRefreshDataSubject.next();\n    }\n\n    refresh() {\n        if (!this.isRefreshing) {\n            this.isRefreshing = true;\n\n            // cancel any existing query.\n            if (this.previewQuery) { this.previewQuery.cancel(); }\n\n            let previewQuery: PromiseWithCancel<PreviewResults>;\n\n            switch (this.viewSource) {\n                case eDataObjectType.Datalink:\n                    if (this.key) {\n                        previewQuery = this.hubService.previewDatalinkKeyData(this.key, this.previewUpdates, this.selectQuery,\n                            this.inputColumns, this.parameters, this.cancelToken);\n                    } else {\n                        if (this.datalink) {\n                            previewQuery = this.hubService.previewTransformData(this.datalink, this.datalinkTransformKey,\n                                this.selectQuery, this.inputColumns, this.parameters, this.cancelToken);\n                        }\n                    }\n                    break;\n                case eDataObjectType.Table:\n                    if (this.key) {\n                        previewQuery = this.hubService.previewTableKeyData(this.key, false, this.selectQuery,\n                            this.inputColumns, this.parameters, this.cancelToken);\n                    } else {\n                        if (this.table) {\n                            previewQuery = this.hubService.previewTableData(this.table, false, this.selectQuery,\n                                this.inputColumns, this.parameters, this.cancelToken);\n                        }\n                    }\n                    break;\n            }\n\n            if (previewQuery) {\n                previewQuery.then((result) => {\n                    this.refreshDataSubject.next();\n                    this.columns = result.columns;\n                    this.data = result.data;\n                    this.transformProperties = result.transformProperties;\n                    this.isRefreshing = false;\n\n                    if (result.status) {\n                        this.hubService.addHubMessage(result.status, false, 'Preview Data');\n                    }\n                }).catch(() => {\n                    this.data = [];\n                    this.isRefreshing = false;\n                });\n            }\n\n        }\n    }\n\n    download(format: eDownloadFormat = eDownloadFormat.Csv) {\n        if (this.key) {\n            let downloadObject = new DownloadObject();\n            downloadObject.objectKey = this.key;\n            downloadObject.objectType = this.viewSource;\n            let query = Object.assign({}, this.selectQuery);\n            query.rows = null;\n            downloadObject.query = query;\n            this.hubService.downloadData([downloadObject], false, format, this.cancelToken)\n        } else {\n            switch (this.viewSource) {\n                case eDataObjectType.Datalink:\n                    this.hubService.downloadDatalinkData(this.datalink, this.datalinkTransformKey,\n                        this.selectQuery, this.inputColumns, false, format, this.cancelToken);\n                    break;\n                case eDataObjectType.Table:\n                    this.hubService.downloadTableData(this.table, false, this.selectQuery, this.inputColumns,\n                        false, format, this.cancelToken);\n                    break;\n            }\n        }\n    }\n\n    save() {\n        if (this.view === 'properties') {\n            this.authService.informationDialog('Cannot save', 'Select a chart or table view to save.');\n            return;\n        }\n\n        this.authService.promptDialog('View Name', 'Enter a name for the view.').then(name => {\n            let view = new DexihView();\n            view.name = name;\n            view.sourceType = this.viewSource;\n            switch (this.viewSource) {\n                case eDataObjectType.Datalink:\n                    view.sourceDatalinkKey = this.key;\n                    for (let datalinkParameter of this.parameters) {\n                        let parameter = <DexihViewParameter> Object.assign({}, datalinkParameter);\n                        parameter['datalinkParameterKey'] = datalinkParameter.key;\n                        parameter.key = this.hubCache.getNextSequence();\n                        view.parameters.push(parameter);\n                      }\n                    break;\n                case eDataObjectType.Table:\n                    view.sourceTableKey = this.key;\n                    break;\n            }\n            view.viewType = this.view === 'chart' ? eViewType.Chart : eViewType.Table;\n            view.selectQuery = this.selectQuery;\n            view.chartConfig = this.chartConfig;\n            view.inputValues = this.inputColumns;\n\n            this.hubService.saveView(view).then(() => {\n                this.hubService.addHubSuccessMessage(`The view ${view.name} was successfully saved.`);\n            }).catch(() => {\n                this.data = null;\n            });\n        });\n    }\n}\n","\n<d-table [enableMultiSelect]=\"false\" [enableSaveCsv]=\"true\" [csvFileName]=\"csvFileName\" [columns]=\"columns\"\n    [data]=\"data\" [hideTable]=\"view !== 'table'\">\n\n    <ng-template #actions let-items=\"items\">\n        <d-button-refresh class=\"mr-1\" (click)=\"refresh()\" text=\"Reload\"></d-button-refresh>\n        <download-button class=\"ml-1\" (download)=\"download($event)\"></download-button>\n\n        <div class=\"btn-group btn-group-toggle ml-1\" data-toggle=\"buttons\" title=\"Table\">\n            <label class=\"btn btn-primary\" [ngClass]=\"{active: view==='table'}\">\n                <input type=\"radio\" name=\"options\" value=\"table\" autocomplete=\"off\" [(ngModel)]=\"view\">\n                <i class=\"fa fa-table\"></i>\n            </label>\n            <label class=\"btn btn-primary\" [ngClass]=\"{active: view==='chart'}\" title=\"Chart\">\n                <input type=\"radio\" name=\"options\" value=\"chart\" autocomplete=\"off\" [(ngModel)]=\"view\">\n                <i class=\"fa fa-bar-chart\"></i>\n            </label>\n            <label class=\"btn btn-primary\" [ngClass]=\"{active: view==='properties'}\" title=\"Query plan details\">\n                <input type=\"radio\" name=\"options\" value=\"properties\" autocomplete=\"off\" [(ngModel)]=\"view\">\n                <i class=\"fa fa-info\"></i>\n            </label>\n        </div>\n\n        <d-button-save *ngIf=\"allowViewSave\" class=\"ml-1\" (click)=\"save()\"></d-button-save>\n    </ng-template>\n\n    <ng-template #tableHeader>\n        <div class=\"mt-1\">\n        <div *ngIf=\"parameters?.length > 0\" class=\"mb-3\">\n            Parameters\n            <input-parameters-view [parameters]=\"parameters\" [refreshEvent]=\"refreshDataObservable\" (onRefreshData)=\"refresh()\" (onChange)=\"parameterChange()\"></input-parameters-view>\n        </div>\n                \n        <query-builder [selectQuery]=\"selectQuery\" [columns]=\"tableColumns\" [inputColumns]=\"inputColumns\" [parameters]=\"parameters\" [refreshEvent]=\"refreshDataObservable\" (onRefreshData)=\"refresh()\" [requiresRefreshEvent]=\"requiresRefreshDataObservable\">\n        </query-builder>\n    </div>\n    </ng-template>\n\n</d-table>\n\n<div [ngStyle]=\"{'display': view === 'chart' ? 'block' : 'none' }\" class=\"mt-1\">\n    <chart-builder [columns]=\"columns\" [data]=\"data\" [config]=\"chartConfig\"></chart-builder>\n</div>\n<div [ngStyle]=\"{'display': view === 'properties' ? 'block' : 'none' }\" class=\"mt-1\">\n    <transform-properties [transformProperties]='transformProperties'></transform-properties>\n</div>\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { HubService } from '../../hub.service';\nimport { DexihRemoteAgentHub } from '../../../shared/shared.models';\n\n\n@Component({\n    selector: 'remoteAgent-view',\n    templateUrl: './remoteAgent-view.component.html'\n})\n\nexport class RemoteAgentViewComponent implements OnInit, OnDestroy {\n    @Input() remoteAgent: DexihRemoteAgentHub;\n\n    _subscription: Subscription;\n\n    public name: string;\n    public isAuthorized: boolean;\n    public isEncrypted: boolean;\n    public lastLoginDateTime: Date;\n    public isConnected: boolean;\n    public isSelected: boolean;\n\n    constructor(private hubService: HubService, private authService: AuthService) { }\n\n    ngOnInit() {\n        this._subscription = combineLatest(\n            this.authService.getRemoteAgentsObservable(),\n            this.hubService.getRemoteAgentObservable(),\n        ).subscribe(result => {\n            let remoteAgents = result[0];\n            let selectedAgent = result[1];\n\n            if (!remoteAgents) { return; }\n\n            let remoteAgent = remoteAgents.find(c => c.remoteAgentKey === this.remoteAgent.remoteAgentKey);\n            let activeAgent = remoteAgent && remoteAgent['activeAgents'] && remoteAgent['activeAgents'].length > 0\n                ? remoteAgent['activeAgents'][0] : null;\n\n            this.isAuthorized = this.remoteAgent.isAuthorized;\n            this.isConnected = activeAgent ? true : false;\n\n            if (remoteAgent) {\n                if (selectedAgent && remoteAgent.remoteAgentKey === selectedAgent.remoteAgentKey) {\n                    this.isSelected = true;\n                } else {\n                    this.isSelected = false;\n                }\n                this.name = activeAgent ? activeAgent.name : ( remoteAgent ? remoteAgent.name : 'Unknown');\n                this.isEncrypted = activeAgent ? activeAgent.isEncrypted : false;\n                this.lastLoginDateTime = remoteAgent ? remoteAgent.lastLoginDateTime : null;\n            } else {\n                this.name = 'Unknown';\n                this.isEncrypted = false;\n                this.lastLoginDateTime = null;\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n}\n","<div [routerLink]=\"['agent-edit', remoteAgent.remoteAgentKey, remoteAgent.remoteAgentHubKey]\" queryParamsHandling=\"merge\">\n    <h5>\n        <i class=\"fa fa-circle mr-1\" [ngClass]=\"{'text-success': isConnected, 'text-danger': !isConnected}\"></i>\n        <encryption-status-icon class=\"mr-1\" [isEncrypted]=\"isEncrypted\"></encryption-status-icon>\n        {{name}} {{isSelected ? '(selected)' : ''}}\n    </h5>\n    <div class=\"note\">{{isAuthorized ? 'Authorized' : 'Not Authorized'}} / Last Login: {{isConnected ? 'Current' : ( lastLoginDateTime | calendar ) }} </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihTable, DexihTableColumn } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'table-column-view',\n    templateUrl: './table-column-view.component.html'\n})\n\nexport class TableColumnViewComponent implements OnInit {\n    @Input() table: DexihTable;\n    @Input() column: DexihTableColumn;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div class=\"float-right\">\n    <d-button iconClass=\"fa fa-list\" class=\"mr-1\" [routerLink]=\"['table-edit', table.key]\" queryParamsHandling=\"merge\" text=\"Edit Table\" title=\"Edit table\" ></d-button>\n    <d-button-edit [routerLink]=\"['table-edit', table.key, 'column', column.key]\" queryParamsHandling=\"merge\" text=\"Edit Column\" title=\"Edit column\" ></d-button-edit>\n</div>\n<div>\n    <h5>{{column.name}}</h5>\n    <div *ngIf=\"column.description\">\n        <markdown [data]=\"column.description\"></markdown>\n    </div>\n    <div class=\"note\">Table: {{table.name}}, Updated: {{column.updateDate | calendar }} </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihConnection, DexihTable } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'table-view',\n    templateUrl: './table-view.component.html'\n})\n\nexport class TableViewComponent implements OnInit {\n    @Input() connection: DexihConnection;\n    @Input() table: DexihTable;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div class=\"float-right\">\n    <actions-table-button [tables]=\"[table]\" [pullRight]=\"true\"></actions-table-button>\n</div>\n<div>\n    <h5>{{table.name}}</h5>\n    <div *ngIf=\"table.description\">\n        <markdown [data]=\"table.description\"></markdown>\n    </div>\n    <div class=\"note\">Connection: {{connection.name}} / Updated: {{connection.updateDate | calendar }} </div>\n</div>","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { transformTypes } from '../../hub.remote.models';\nimport { TransformProperties } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'transform-properties-item',\n    templateUrl: 'transform-properties-item.component.html'\n})\n\nexport class TransformPropertiesItemComponent implements OnInit, OnChanges {\n    @Input() transformProperties: TransformProperties;\n\n    transformTypes = transformTypes;\n\n    public icon: string;\n    public propertyKeys: string[];\n\n\n\n    constructor() { }\n\n    ngOnInit(): void {\n        this.refresh();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this.refresh();\n    }\n\n    refresh() {\n        this.icon = null;\n        this.propertyKeys = null;\n\n        if (!this.transformProperties) { return; }\n        let transform = this.transformTypes.find(c => c.key === this.transformProperties.transformType);\n        if (transform) {\n            this.icon = transform.icon;\n        }\n\n        if (this.transformProperties.properties) {\n            this.propertyKeys = Object.keys(this.transformProperties.properties);\n        }\n    }\n\n}\n","<li class=\"list-group-item p-1\">\n    <div class=\"d-flex justify-content-between align-items-center\">\n        <div>\n            <i [class]=\"icon\"></i>\n            {{transformProperties.transformName}}\n            <span *ngIf=\"transformProperties.name && transformProperties.name !== transformProperties.transformName\">\n                ( {{transformProperties.name}} )\n            </span>\n        </div>\n    </div>\n\n    <ul class=\"list-group mt-3\">\n        <li class=\"list-group-item list-group-item-primary\">\n            Rows: {{transformProperties.rows}}, \n            Seconds: {{transformProperties.seconds | number: '1.2-2'}}, \n            Rows/Second: {{transformProperties.seconds ? (( transformProperties.rows/transformProperties.seconds) | number: '1.2-2') : 'N/A'}}</li>\n    </ul>\n\n    <ul *ngIf=\"propertyKeys?.length > 0\" class=\"list-group mt-3\">\n        <li class=\"list-group-item list-group-item-primary\">Properties</li>\n        <li *ngFor=\"let key of propertyKeys\" class=\"list-group-item\"><b>{{key}}:</b> {{transformProperties.properties[key]}}</li>\n    </ul>\n    \n\n    <ul *ngIf=\"transformProperties.referenceProperties\" class=\"list-group mt-3\">\n        <li class=\"list-group-item list-group-item-primary\">Linked Transform</li>\n        <transform-properties [transformProperties]=\"transformProperties.referenceProperties\"></transform-properties>\n    </ul>\n</li>\n\n<transform-properties-item *ngIf=\"transformProperties.primaryProperties\" [transformProperties]=\"transformProperties.primaryProperties\">\n</transform-properties-item>\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { TransformProperties } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'transform-properties',\n    templateUrl: 'transform-properties.component.html'\n})\n\nexport class TransformPropertiesComponent implements OnInit {\n    @Input() transformProperties: TransformProperties;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<d-widget-section *ngIf=\"transformProperties\" title=\"Query Details\" [showExpandButton]=\"true\">\n<ul  class=\"list-group\">\n    <transform-properties-item [transformProperties]=\"transformProperties\" ></transform-properties-item>\n</ul>\n</d-widget-section>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DexihView } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'view-view',\n    templateUrl: './view-view.component.html'\n})\n\nexport class ViewViewComponent implements OnInit {\n    @Input() view: DexihView;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<div [routerLink]=\"['view-edit', view.key]\" queryParamsHandling=\"merge\">\n    <h5>{{view.name}}</h5>\n    <div *ngIf=\"view.description\">\n        <markdown [data]=\"view.description\"></markdown>\n    </div>\n    <div class=\"note\">{{view.viewType}} / Updated: {{view.updateDate | calendar }} </div>\n</div>","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../shared/shared.module';\nimport { ButtonsModule} from '../buttons/buttons.module';\nimport { DatalinkStatusComponent } from './datalink-status/datalink-status.component';\nimport { ColumnValidationViewComponent } from './columnValidation-view/columnValidation-view.component';\nimport { ConnectionViewComponent } from './connection-view/connection-view.component';\nimport { DatajobViewComponent } from './datajob-view/datajob-view.component';\nimport { DatalinkViewComponent } from './datalink-view/datalink-view.component';\nimport { FileFormatViewComponent } from './fileFormat-view/fileFormat-view.component';\nimport { TableViewComponent } from './table-view/table-view.component';\nimport { TableColumnViewComponent } from './table-column-view/table-column-view.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ViewViewComponent } from './view-view/view-view.component';\nimport { ApiViewComponent } from './api-view/api-view.component';\nimport { ApiStatusComponent } from './api-status/api-status.component'\nimport { RemoteAgentViewComponent } from './remoteAgent-view/remoteAgent-view.component';\nimport { TransformPropertiesComponent } from './transform-properties/transform-properties.component';\nimport { TransformPropertiesItemComponent } from './transform-properties/transform-properties-item.component';\nimport { PreviewDataComponent } from './preview-data/preview-data.component';\nimport { InputParametersComponent } from './input-parameters/input-parameters.component'\nimport { InputParametersViewComponent } from './input-parameters-view/input-parameters-view.component'\nimport { DashboardViewComponent } from './dashboard-view/dashboard-view.component';\nimport { ListOfValuesViewComponent } from './listOfValues-view/listOfValues-view.component';\nimport { DatalinkTestViewComponent } from './datalinkTest-view/datalinkTest-view.component';\n\n@NgModule({\n    imports: [\n        SharedModule,\n        ButtonsModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    exports: [\n        DatalinkStatusComponent,\n        ColumnValidationViewComponent,\n        ConnectionViewComponent,\n        ColumnValidationViewComponent,\n        DatalinkViewComponent,\n        DatajobViewComponent,\n        FileFormatViewComponent,\n        TableViewComponent,\n        TableColumnViewComponent,\n        ViewViewComponent,\n        ApiViewComponent,\n        ApiStatusComponent,\n        DashboardViewComponent,\n        RemoteAgentViewComponent,\n        TransformPropertiesComponent, TransformPropertiesItemComponent,\n        PreviewDataComponent,\n        InputParametersComponent,\n        InputParametersViewComponent,\n        ListOfValuesViewComponent,\n        DatalinkTestViewComponent,\n    ],\n    declarations: [\n        DatalinkStatusComponent,\n        ColumnValidationViewComponent,\n        ConnectionViewComponent,\n        DatalinkViewComponent,\n        DatajobViewComponent,\n        FileFormatViewComponent,\n        TableViewComponent,\n        TableColumnViewComponent,\n        ViewViewComponent,\n        ApiViewComponent,\n        ApiStatusComponent,\n        DashboardViewComponent,\n        RemoteAgentViewComponent,\n        TransformPropertiesComponent, TransformPropertiesItemComponent,\n        PreviewDataComponent,\n        InputParametersComponent,\n        InputParametersViewComponent,\n        ListOfValuesViewComponent,\n        DatalinkTestViewComponent,\n    ],\n    providers: [],\n})\nexport class WidgetsModule { }\n","import { Message, CancelToken } from '../+auth/auth.models';\nimport { eLogLevel, LogFactory } from '../../logging';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { AuthService } from '../+auth/auth.service';\nimport { BehaviorSubject, Observable} from 'rxjs';\nimport { DexihActiveAgent, DexihRemoteAgent, logLevel, eEnvironment, RemoteAgentSettings,\n    RemoteAgentSettingsSubset, ManagedTask } from '../shared/shared.models';\n\n@Injectable()\nexport class HubsService implements OnDestroy {\n\n    private logger = new LogFactory('hubs.service');\n    private _hubMessages = new BehaviorSubject<Array<Message>>([]);\n\n    constructor(\n        private authService: AuthService\n        ) {\n    }\n\n    ngOnDestroy() {\n    }\n\n    getHubMessagesObservable(): Observable<Array<Message>> {\n        return this._hubMessages.asObservable();\n    }\n\n    getHubMessages(): Array<Message> {\n        return this._hubMessages.value;\n    }\n\n    addHubMessage(message: Message) {\n        this.authService.addUpdateNotification(message, false);\n        let messages = this.getHubMessages();\n        messages.push(message);\n        this._hubMessages.next(messages);\n    }\n\n    addHubErrorMessage(message: string) {\n        let newMessage = new Message(false, message, null, null);\n        this.addHubMessage(newMessage);\n    }\n\n    addHubClientErrorMessage(error: Error, context: string) {\n        let message = context + '.  The following error occurred on the client: ' + error.message;\n        let newMessage = new Message(false, message, error.stack, null);\n        this.addHubMessage(newMessage);\n    }\n\n    addHubSuccessMessage(message: string) {\n        let newMessage = new Message(true, message, null, null);\n        this.addHubMessage(newMessage);\n    }\n\n    remoteAgents(): Promise<Array<DexihRemoteAgent>> {\n        return this.authService.post<Array<DexihRemoteAgent>>('/api/Account/GetUserRemoteAgents', { }, 'Getting user remote agents...');\n    }\n\n    cancelTasks(tasks: Array<ManagedTask>): Promise<boolean> {\n        return this.authService.post<boolean>('/api/Account/CancelTasks', tasks, 'Cancelling task(s)...');\n    }\n\n    restartAgent(activeAgent: DexihActiveAgent, force: boolean, cancelToken: CancelToken): Promise<boolean> {\n        return this.authService.postRemote<boolean>('/api/Account/RestartAgent',\n        { instanceId: activeAgent.instanceId, force}, activeAgent, 'Restarting agent...', cancelToken);\n    }\n\n    public downloadRemoteAgent(embedUserName: boolean, environment: eEnvironment, ll: logLevel, settings: RemoteAgentSettingsSubset):\n    Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            let remoteAgentSettings = new RemoteAgentSettings();\n            remoteAgentSettings.embedUserName = embedUserName;\n            remoteAgentSettings.environment = environment;\n            remoteAgentSettings.logLevel = ll;\n            remoteAgentSettings.remoteApplicationSettings = settings;\n\n            this.authService.downloadFile('/api/Remote/DownloadZip', {\n                embedUserName,\n                environment,\n                ll,\n                RemoteApplicationSettings: settings\n            }, 'dexih.remote.zip', 'application/zip').then(() => {\n                resolve(true);\n            }).catch(reason => {\n                this.logger.LogC(() => `downloadRemoteAgent, error: ${reason.message}.`, eLogLevel.Error);\n                this.addHubMessage(reason);\n                reject(reason);\n            });\n        });\n    }\n\n    public downloadRemoteSettings(embedUserName: boolean, environment: eEnvironment, ll: logLevel,\n        settings: RemoteAgentSettingsSubset): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            let remoteAgentSettings = new RemoteAgentSettings();\n            remoteAgentSettings.embedUserName = embedUserName;\n            remoteAgentSettings.environment = environment;\n            remoteAgentSettings.logLevel = ll;\n            remoteAgentSettings.remoteApplicationSettings = settings;\n\n            this.authService.downloadFile('/api/Remote/DownloadAppSettings', {\n                embedUserName,\n                environment,\n                ll,\n                RemoteApplicationSettings: settings\n            }, 'appsettings.json', 'application/json').then(() => {\n                    resolve(true);\n            }).catch(reason => {\n                this.logger.LogC(() => `downloadRemoteSettings, error: ${reason.message}.`, eLogLevel.Error);\n                this.addHubMessage(reason);\n                reject(reason);\n            });\n        });\n    }\n\n}\n\n\n\n\n","import { Component, ViewContainerRef, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { AuthService } from './+auth/auth.service';\nimport { Subscription } from 'rxjs';\nimport { Router, RouteConfigLoadStart, RouteConfigLoadEnd } from '@angular/router';\nimport { DModalComponent } from 'ngx-d-components';\nimport { WaitMessage } from './+auth/auth.models';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  @ViewChild('modal', { static: true }) modal: DModalComponent;\n\n  private _waitMessagesSubscription: Subscription;\n  private _routeEventsSubscription: Subscription;\n  public waitMessages: WaitMessage[];\n\n  private loadingRouteKey: string;\n\n  public constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.authService.setDialogDefaultContainer(this.modal);\n    let waitMessagesObservable = this.authService.getWaitMessagesObservable();\n\n    this._waitMessagesSubscription = waitMessagesObservable.subscribe(waitMessages => {\n      // setTimeout forces micro-task to stop ExpressionChangedAfterItHasBeenCheckedError\n      setTimeout(() => {\n        this.waitMessages = Array.from(waitMessages.values());\n      });\n    });\n\n    this._routeEventsSubscription = this.router.events.subscribe(event => {\n      if (event instanceof RouteConfigLoadStart) {\n        if (this.loadingRouteKey) {\n          this.authService.removeWaitMessage(this.loadingRouteKey);\n        }\n        this.loadingRouteKey = this.authService.addWaitMessage('Loading scripts...')\n      } else if (event instanceof RouteConfigLoadEnd) {\n        this.authService.removeWaitMessage(this.loadingRouteKey);\n        this.loadingRouteKey = null;\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this._waitMessagesSubscription) { this._waitMessagesSubscription.unsubscribe(); }\n    if (this._routeEventsSubscription) { this._routeEventsSubscription.unsubscribe(); }\n  }\n}\n","<div *ngIf=\"waitMessages?.length > 0\" class=\"loading\">\n    <div class=\"list-group\">\n        <li class=\"list-group-item\">\n            <div class=\"dexih-loader\"></div> &nbsp; &nbsp; Please wait ...\n        </li>\n        <li class=\"list-group-item\" *ngFor=\"let waitMessage of waitMessages\">\n            {{waitMessage.message}}\n            <d-button-cancel [autoCompact]=\"false\" *ngIf=\"waitMessage.cancelToken\" (click)=\"waitMessage.cancelToken.cancel()\" class=\"float-right\" text=\"\"></d-button-cancel>\n        </li>\n    </div>\n</div>\n<d-modal #modal></d-modal>\n<router-outlet></router-outlet>","import {NgModule, ErrorHandler} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {FormsModule}   from '@angular/forms';\n\nimport {SharedModule} from './shared/shared.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport {routing} from './app.routing';\n// import {HubService} from './+hub/hub.service';\nimport {AuthService} from './+auth/auth.service';\nimport {LayoutGuard} from './shared/layout/layout.guard';\nimport {HubsService } from './+hubs/hubs.service';\nimport { GlobalErrorHandler } from './global.error.handler';\nimport { LayoutModule } from './shared/layout/layout.module';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AddCsrfHeaderInterceptorService } from './+auth/token.interceptor.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    routing,\n    LayoutModule,\n    SharedModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [\n    {provide: ErrorHandler, useClass: GlobalErrorHandler},\n    // HubService,\n      HubsService,\n      AuthService,\n      LayoutGuard,\n        { provide: HTTP_INTERCEPTORS,\n          useClass: AddCsrfHeaderInterceptorService,\n          multi: true\n        }\n  ],\n  // entryComponents: [AppComponent],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {\n\n}\n","import {Routes, RouterModule} from '@angular/router';\nimport {MainLayoutComponent} from './shared/layout/app-layouts/main-layout.component';\nimport {AuthLayoutComponent} from './shared/layout/app-layouts/auth-layout.component';\nimport { LayoutGuard } from './shared/layout/layout.guard';\n\nexport const routes: Routes = [\n    { path: '', redirectTo: 'hubs', pathMatch: 'full' },\n    { path: 'admin',  canActivate: [LayoutGuard],\n        component: MainLayoutComponent, loadChildren:  () => import('./+admin/admin.module').then(m => m.AdminModule), data: { pageTitle: '' } },\n    { path: 'hubs',  canActivate: [LayoutGuard],\n        component: MainLayoutComponent, loadChildren:  () => import('./+hubs/hubs.module').then(m => m.HubsModule), data: { pageTitle: '' } },\n    { path: 'hub/:hubKey', canActivate: [LayoutGuard],\n        component: MainLayoutComponent, loadChildren: () => import('./+hub/hub.module').then(m => m.HubModule), data: { pageTitle: 'Hub' } },\n    { path: 'auth', component: AuthLayoutComponent, loadChildren: () => import('./+auth/auth.module').then(m => m.AuthModule) },\n    { path: 'public', loadChildren:  () => import('./+public/public.module').then(m => m.PublicModule), data: { pageTitle: '' } },\n    { path: 'terms', redirectTo: '/auth/terms', pathMatch: 'full'},\n    { path: 'privacy', redirectTo: '/help?path=policies%2Fprivacy.md', pathMatch: 'full'},\n    { path: 'unsubscribe', redirectTo: '/hubs/index/manage', pathMatch: 'full' },\n\n    { path: '**', redirectTo: 'hubs' }\n];\n\nexport const routing = RouterModule.forRoot(routes);\n","import { ErrorHandler, Injectable, Injector } from '@angular/core';\nimport { AuthService } from './+auth/auth.service';\nimport { Message } from './+auth/auth.models';\nimport { LogFactory, eLogLevel } from '../logging';\n\n@Injectable()\nexport class GlobalErrorHandler implements ErrorHandler {\n\n    private logger: LogFactory;\n\n    constructor(public injector: Injector) {\n        this.logger = new LogFactory('Global');\n    }\n\n    handleError(error: any) {\n        const authService = this.injector.get(AuthService);\n        let message: Message;\n        if (error.rejection ) {\n            message = error.rejection;\n        } else {\n            let details = ''\n            if (error.stack) {\n                details = 'Client debug information: ' + error.stack\n            }\n\n            if (error.exceptionDetails) {\n                details = 'Server debug information: ' + error.exceptionDetails;\n            }\n\n            message = new Message(false, `Error: ${error.message}`,\n            details, null);\n        }\n        authService.addUpdateNotification(message, true);\n    }\n}\n","import { Component, OnInit, Input, OnDestroy, ElementRef, ViewChild, EventEmitter, Output, OnChanges } from '@angular/core';\nimport { AuthService } from '../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { Router, Route } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport {Location} from '@angular/common';\n\n@Component({\n    selector: 'dexih-help',\n    templateUrl: './dexih-help.component.html',\n    styleUrls: ['./dexih-help.component.scss']\n})\n\nexport class DexihHelpComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() title: string;\n    @Input() path: string;\n    @Input() display = false;\n    @Input() hubKey: string;\n\n    @Output() linkClick: EventEmitter<string> = new EventEmitter();\n\n    @ViewChild('scrollTo') scrollTo: ElementRef;\n\n    public data: string;\n\n    private _displayHelpSubscription: Subscription;\n\n    displayHelp: boolean;\n    constructor(\n        private authService: AuthService,\n        private router: Router,\n        private http: HttpClient,\n        private location: Location\n    ) { }\n\n    ngOnInit() {\n        this._displayHelpSubscription = this.authService.getDisplayHelp().subscribe(displayHelp => {\n            this.displayHelp = displayHelp;\n        });\n    }\n\n    ngOnChanges() {\n        if (this.path) {\n            const url = this.location.prepareExternalUrl(this.path);\n\n            this.http.get(url, { responseType: 'text' }).subscribe(result => {\n\n                let matches = new RegExp('{{SERVER}}|{{HUBKEY}}', 'gi');\n                this.data = result.replace(matches, match => {\n                    switch (match) {\n                        case '{{SERVER}}':\n                            // return this.location.prepareExternalUrl('./');\n                            return window.location.origin;\n                        case '{{HUBKEY}}':\n                            return this.hubKey;\n                    }\n                });\n\n                // data = this.replaceAll(data, '{{HUBKEY}}', this.hubKey)\n                // this.data = data;\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._displayHelpSubscription) { this._displayHelpSubscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.setDisplayHelp(false);\n    }\n\n    getRoute(event) {\n        let element = event.target;\n        while (element) {\n            let link: string = element.getAttribute('href');\n\n            if (link) {\n                if (link.endsWith('.md') && !link.startsWith('http')) {\n                    this.linkClick.emit(link);\n                } else if (link.startsWith('route:')) {\n                    let route = link.substr(6);\n                    this.router.navigate([route]);\n                } else if (link.startsWith('unsafe:route:')) {\n                    let route = link.substr(13);\n                    this.router.navigate([route]);\n                } else if (link.startsWith('#')) {\n                    this.router.navigate(['.', link]);\n                } else {\n                    window.open(link);\n                }\n                event.preventDefault();\n            }\n\n            element = element.parentElement;\n        }\n    }\n\n    replaceAll(str: string, find: string, replace: string): string {\n        return str.replace(new RegExp(find, 'g'), replace);\n    }\n}\n","\n    <d-widget *ngIf=\"displayHelp || display\" [title]=\"title\" iconClass=\"fa fa-lg fa-fw fa-question\" [showCloseButton]=\"true\" [padding]=\"true\" (close)=\"close()\">\n        <ng-template #header>\n            <d-button class=\"mr-1\" [routerLink]=\"['/hubs/index/help']\" [queryParams]=\"{path: '/intro/getting_started.md'}\">Getting Started</d-button>\n            <d-button [routerLink]=\"['/hubs/index/help']\" [queryParams]=\"{path: '/reference/references.md'}\">Reference</d-button>\n        </ng-template>\n        \n        <markdown [data]=\"data\" (click)=\"getRoute($event)\"></markdown>\n    </d-widget>\n","import {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DexihHelpComponent } from './dexih-help.component';\nimport { DComponentsModule} from 'ngx-d-components';\nimport { DMarkdownModule } from 'ngx-d-markdown';\nimport { RouterModule } from '@angular/router';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    DComponentsModule,\n   DMarkdownModule\n  ],\n  declarations: [DexihHelpComponent],\n  exports: [DexihHelpComponent],\n})\nexport class DexihHelpModule {\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.scss']\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div id=\"auth-page\">\n    <router-outlet></router-outlet>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-empty-layout',\n  templateUrl: './empty-layout.component.html',\n  styles: []\n})\nexport class EmptyLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { LayoutService } from '../layout.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main-layout.component.html',\n  styleUrls: ['./main-layout.component.scss'],\n  // animation moves sidebar -250 left, and main -250 left, whilst increasing the main margin by 250\n  // to keep everything aligned.\n  animations: [\n    trigger('sidebar', [\n      state('in', style({\n        transform: 'translate(-250px, 0)'\n      })),\n      state('out', style({\n        transform: 'translate(0, 0)'\n      })),\n      transition('in => out', animate('200ms ease-in-out')),\n      transition('out => in', animate('200ms ease-in-out'))\n    ]),\n    trigger('main', [\n      state('in', style({\n        transform: 'translate(0px, 0)'\n      })),\n      state('out', style({\n        transform: 'translate(250px, 0)', 'margin-right': '250px'\n      })),\n      transition('in => out', animate('200ms ease-in-out')),\n      transition('out => in', animate('200ms ease-in-out'))\n    ]),\n  ]\n})\nexport class MainLayoutComponent implements OnInit, OnDestroy {\n  _layoutSubscription: Subscription;\n\n  collapsed = false;\n  mobileViewActivated = false;\n  sidebarState = 'out';\n  mainState = 'out';\n\n  constructor(private layoutService: LayoutService) {\n  }\n\n  ngOnInit() {\n    this._layoutSubscription = this.layoutService.subscribe(store => {\n      this.collapsed = store.menuCollapsed;\n      this.mobileViewActivated = store.mobileViewActivated;\n\n      if (this.collapsed) {\n        this.sidebarState = 'in';\n        this.mainState = 'in';\n      } else {\n        this.sidebarState = 'out';\n        this.mainState = this.mobileViewActivated ? 'in' : 'out';\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this._layoutSubscription) { this._layoutSubscription.unsubscribe(); }\n  }\n\n}\n","<dexih-header class=\"header\"></dexih-header>\n\n<div class=\"mobile content\">\n    <dexih-navigation class=\"sidebar\"  [@sidebar]='sidebarState' ></dexih-navigation>\n    <div class=\"main\" [@main]='mainState'>\n      <dexih-ribbon></dexih-ribbon>\n      <router-outlet></router-outlet>\n    </div>\n</div>\n\n<div class=\"footer\">\n  <dexih-footer></dexih-footer>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'dexih-footer',\n  templateUrl: './footer.component.html'\n})\nexport class FooterComponent implements OnInit, OnDestroy {\n  buildDate: string;\n  buildVersion: string;\n  year: number;\n\n  _globalCacheSubscription: Subscription;\n\n  constructor(private authService: AuthService) {\n     this._globalCacheSubscription = authService.getGlobalCacheObservable().subscribe(cache => {\n       if (cache) {\n        let date = new Date(cache.buildDate);\n        this.year = date.getFullYear();\n        this.buildDate = date.toLocaleDateString(); // cache.buildDate;\n        this.buildVersion = cache.buildVersion;\n       }\n     });\n  }\n\n  ngOnInit() {}\n\n  ngOnDestroy() {\n    if (this._globalCacheSubscription) { this._globalCacheSubscription.unsubscribe(); }\n  }\n\n}\n","<div class=\"text-white bg-primary d-flex flex-row align-middle\" style=\"height: 30px;\">\n        <div class=\"pl-2\"><a class=\"text-white\" href=\"https://dataexpertsgroup.com\"> Data Experts Group © {{year}}</a></div>\n        <div class=\"d-none d-sm-inline ml-auto pr-2\">Version: {{buildVersion}}, Date: {{buildDate}}</div>\n</div>\n","import {Component, OnInit, OnDestroy, ViewChild} from '@angular/core';\nimport {Router} from '@angular/router';\nimport { HubService } from '../../../+hub/hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubCache, eCacheStatus } from '../../../+hub/hub.models';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { LayoutService } from '../layout.service';\nimport { DToastComponent, ToastMessage } from 'ngx-d-components';\nimport { Message } from '../../../+auth/auth.models';\n\n@Component({\n  selector: 'dexih-header',\n  templateUrl: './header.component.html',\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n      @ViewChild('toasts', { static: true }) public toasts: DToastComponent;\n\n\n  _hubCacheSubscription: Subscription;\n  _displayHelpSubscription: Subscription;\n  _layoutSubscription: Subscription;\n  _notificationSubscription: Subscription;\n\n  searchString;\n\n  displayHelp: boolean;\n\n  collapsed = false;\n  mobileViewActivated = false;\n\n\n  hubCache: HubCache;\n  public waitMessage: string;\n\n  constructor(private router: Router,\n    private hubService: HubService,\n    private authService: AuthService,\n    private layoutService: LayoutService) {\n  }\n\n\n  ngOnInit() {\n    this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n      if (cache.status === eCacheStatus.Loaded) {\n        this.hubCache = cache;\n      }\n    });\n\n    this._layoutSubscription = this.layoutService.subscribe(store => {\n      this.collapsed = store.menuCollapsed;\n      this.mobileViewActivated = store.mobileViewActivated;\n    });\n\n    this._displayHelpSubscription = this.authService.getDisplayHelp().subscribe(displayHelp => this.displayHelp = displayHelp);\n\n    this._notificationSubscription = this.authService.getNotificationObservable().subscribe(message => {\n      if (message) {\n        let toastMessage: ToastMessage = {\n          content: message.message,\n          type: message.success ? 'success' : 'error',\n          buttonName: 'details',\n          reference: message.reference,\n          delay: 6000,\n          title: 'Message',\n          onButtonClick: (m) => this.toastClick(message)\n        }\n        this.toasts.add(toastMessage);\n      }\n\n    });\n  }\n\n  ngOnDestroy() {\n    if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n    if (this._displayHelpSubscription) { this._displayHelpSubscription.unsubscribe(); }\n    if (this._layoutSubscription) { this._layoutSubscription.unsubscribe(); }\n    if (this._notificationSubscription) { this._notificationSubscription.unsubscribe(); }\n  }\n\n  onSubmit() {\n    if (this.hubCache) {\n      this.router.navigate(['/hub', this.hubCache.hub.hubKey, 'search', 'All', this.searchString ], { });\n    }\n  }\n\n  onHelpToggle() {\n    this.authService.setDisplayHelp(!this.displayHelp);\n  }\n\n  toastClick(message: Message) {\n    this.authService.informationDialog('Error Notification',\n      message.message, '<pre>' + message.exceptionDetails + '</pre>');\n  }\n\n  onFullScreenToggle() {\n    const documentMethods = {\n      enter: ['requestFullscreen', 'mozRequestFullScreen', 'webkitRequestFullscreen', 'msRequestFullscreen'],\n      exit: ['cancelFullScreen', 'mozCancelFullScreen', 'webkitCancelFullScreen', 'msCancelFullScreen']\n    };\n\n    if (!document.body.classList.contains('full-screen')) {\n      document.body.classList.add('full-screen');\n      document.documentElement[documentMethods.enter.filter((method) => {\n        return document.documentElement[method]\n      })[0]]()\n    } else {\n      document.body.classList.remove('full-screen');\n      document[documentMethods.exit.filter((method) => {\n        return document[method]\n      })[0]]()\n    }\n  }\n\n  onMenuToggle() {\n    this.layoutService.onCollapseMenu();\n  }\n\n  logOut() {\n    this.authService.logout().then(result => {\n    });\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\n    <a class=\"btn btn-outline-secondary text-white ml-1\" (click)=\"onMenuToggle()\" title=\"Collapse Menu\">\n        <i class=\"fa fa-reorder\"></i>\n    </a>\n\n    <img src=\"assets/img/dexih/dex_logo_wide_raw.png\" height=\"30\" class=\"d-none d-lg-inline-block align-top pl-1\" alt=\"Data Experts Group\">\n\n    <!-- <messages></messages> -->\n\n    <div class=\"ml-auto\"></div>\n\n    <!-- input: search field -->\n    <form *ngIf=\"this.hubCache\" #searchForm=\"ngForm\" (ngSubmit)=\"onSubmit()\" class=\"d-none d-md-inline form-inline\">\n        <div class=\"input-group\">\n            <input [(ngModel)]=\"searchString\" class=\"form-control\" type=\"text\" name=\"param\" required placeholder=\"Search metadata...\">\n            <div class=\"input-group-append\">\n                <button class=\"btn btn-outline-secondary text-white\" type=\"submit\">\n                    <i class=\"fa fa-search\"></i>\n                </button>\n            </div>\n        </div>\n    </form>\n    <!-- end input: search field -->\n\n    <a *ngIf=\"displayHelp\" class=\"btn btn-outline-danger text-white ml-1\" (click)=\"onHelpToggle()\" title=\"Toggle help off\" data-toggle=\"button\">\n        <i class=\"fa fa-question\"></i>\n    </a>\n\n    <a *ngIf=\"!displayHelp\" class=\"btn btn-outline-success text-white ml-1\" (click)=\"onHelpToggle()\" title=\"Toggle help on\" data-toggle=\"button\">\n        <i class=\"fa fa-question\"></i>\n    </a>\n\n    <a class=\"btn btn-outline-secondary text-white ml-1\" (click)=\"onFullScreenToggle()\" title=\"Full Screen\">\n        <i class=\"fa fa-arrows-alt\"></i>\n    </a>\n\n    <a class=\"btn btn-outline-secondary text-white ml-1\" (click)=\"logOut()\" title=\"Sign Out\" data-action=\"userLogout\" data-logout-msg=\"You can improve your security further after logging out by closing this opened browser\">\n        <i class=\"fa fa-sign-out\"></i>\n    </a>\n\n    <dexih-tasks class=\"pl-1\"></dexih-tasks>\n\n    <d-toast #toasts></d-toast>\n</nav>\n","\n\nimport {NgModule} from '@angular/core';\n\nimport {CommonModule} from '@angular/common';\nimport {RouterModule } from '@angular/router';\nimport {FormsModule} from '@angular/forms';\nimport { SharedModule } from '../../shared.module';\n\nimport {HeaderComponent} from './header.component';\n// import {MessagesComponent} from './messages/messages.component';\nimport {TasksComponent} from './tasks/tasks.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    SharedModule\n  ],\n  declarations: [\n    TasksComponent,\n    HeaderComponent,\n//    MessagesComponent\n  ],\n  exports: [\n    HeaderComponent,\n  ]\n})\nexport class HeaderModule {}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { Observable, Subscription} from 'rxjs';\nimport { Router } from '@angular/router';\nimport { ManagedTask, eManagedTaskStatus, eManagedTaskStatusItems } from '../../../shared.models';\n\n@Component({\n    selector: 'dexih-tasks',\n    templateUrl: './tasks.component.html',\n    styleUrls: ['./tasks.component.scss']\n})\nexport class TasksComponent implements OnInit, OnDestroy {\n    private _tasksSubscription: Subscription;\n\n    count: number;\n    lastUpdate: any;\n    active: boolean;\n    activities: any;\n    loading: boolean;\n    tasksRunning = false;\n\n    eManagedTaskStatus = eManagedTaskStatus;\n    eManagedTaskStatusItems = eManagedTaskStatusItems\n\n    tasks: Observable<Array<ManagedTask>>;\n\n    constructor(\n        private authService: AuthService,\n        private router: Router\n    ) {\n        this.active = false;\n        this.loading = false;\n        this.activities = [];\n        this.count = 0;\n        this.lastUpdate = new Date();\n    }\n\n    ngOnInit() {\n        this.tasks = this.authService.getTasksObservable();\n\n        this._tasksSubscription = this.tasks.subscribe(tasks => {\n            this.count = tasks.length;\n            this.tasksRunning = tasks.findIndex(c => c.status === eManagedTaskStatus.Created\n                || c.status === eManagedTaskStatus.Queued\n                || c.status === eManagedTaskStatus.Running) >= 0;\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._tasksSubscription) { this._tasksSubscription.unsubscribe(); }\n        if (this._tasksSubscription) { this._tasksSubscription.unsubscribe(); }\n    }\n\n    update() {\n        this.loading = true;\n        setTimeout(() => {\n            this.lastUpdate = new Date()\n            this.loading = false\n        }, 1000)\n    }\n\n    showTask(item: ManagedTask) {\n        this.router.navigate(['/hubs/tasks/view', item.taskId])\n      }\n\n    cancelTask() {\n        // TBC\n        alert('cancel task not completed.');\n    }\n\n}\n","<d-button-dropdown buttonClass=\"btn btn-outline-secondary text-white\" iconClass=\"fa fa-tasks\" [pullRight]=\"true\" [badge]=\"count\" badgeClass=\"badge-light\" [hideCarrot]=\"true\" title=\"Tasks\">\n    <div *ngIf=\"count==0\">\n        <h5 class=\"p-3\">No tasks</h5>\n    </div>\n    <div class=\"m-0 list-group\" class=\"tasks\">\n        <ng-template ngFor let-item [ngForOf]=\"tasks | async | fieldSortDesc : 'lastUpdate'\">\n            <a (click)=\"showTask(item)\" class=\"list-group-item list-group-item-action flex-column align-items-start\">\n                <div class=\"d-flex w-100 justify-content-between\">\n                    <h5 class=\"mb-1\">{{item.name}}</h5>\n                    <small>{{eManagedTaskStatus[item.status]}} {{item.percentage}}%</small>\n                </div>\n                <small *ngIf=\"item.stepName && !item.isCompleted\">Step: {{item.stepName}}</small>\n                <div class=\"mb-1\">\n                    <div class=\"progress\" style=\"width: 100%\">\n                        <div class=\"progress-bar \" [ngClass]=\"{'bg-success': item.status == eManagedTaskStatus.Completed, 'bg-info': item.status == eManagedTaskStatus.Created || item.status == eManagedTaskStatus.Running || item.status == eManagedTaskStatus.Scheduled, 'bg-danger':  item.status == eManagedTaskStatus.Error || item.status == eManagedTaskStatus.Cancelled }\"\n                            role=\"progressbar\" [style.width]=\"item.percentage + '%'\" [attr.aria-valuenow]=\"item.percentage\" aria-valuemin=\"0\"\n                            aria-valuemax=\"100\">\n                            &nbsp;\n                        </div>\n                    </div>\n                </div>\n                <d-button-cancel *ngIf=\"!item.isCompleted\" [compact]=\"true\" (click)=\"cancel(item)\"></d-button-cancel>\n                <small>Updated: {{item.lastUpdate | calendar }}</small>\n            </a>\n\n        </ng-template>\n    </div>\n\n</d-button-dropdown>","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\nimport { User } from '../../+auth/auth.models';\nimport { AuthService } from '../../+auth/auth.service';\nimport { HubService } from '../../+hub/hub.service';\n\n@Injectable()\nexport class LayoutGuard implements CanActivate {\n    constructor(private authService: AuthService, private router: Router, private route: ActivatedRoute) { \n        this.authService.initialize();\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            this.authService.isLoggedIn().then(result => {\n                if (!result) {\n                    this.authService.redirectUrl = state.url;\n                    this.router.navigate(['/auth/login']);\n                    resolve(false);\n                } else {\n                    let user: User = result;\n                    resolve(true);\n                }\n            }).catch(reason => {\n                this.authService.redirectUrl = state.url;\n                this.router.navigate(['/auth/login']);\n            });\n        });\n    }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport { RouterModule} from '@angular/router';\nimport { RibbonModule } from './ribbon';\nimport { SharedModule} from '../shared.module';\n\nimport {HeaderModule} from './header/header.module';\n\nimport {FooterComponent} from './footer/footer.component';\nimport {NavigationModule} from './navigation/navigation.module';\nimport { MainLayoutComponent } from './app-layouts/main-layout.component';\nimport { EmptyLayoutComponent } from './app-layouts/empty-layout.component';\nimport { AuthLayoutComponent } from './app-layouts/auth-layout.component';\nimport { HubService } from '../../+hub';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n\n    SharedModule,\n    HeaderModule,\n    NavigationModule,\n    RibbonModule,\n  ],\n  declarations: [\n    FooterComponent,\n    MainLayoutComponent,\n    EmptyLayoutComponent,\n    AuthLayoutComponent,\n  ],\n  exports: [\n    // HeaderModule,\n    // NavigationModule,\n    // FooterComponent,\n    // RibbonComponent,\n  ],\n  providers: [\n    HubService\n  ]\n})\nexport class LayoutModule {\n  static forRoot(): ModuleWithProviders<LayoutModule> {\n    return {\n        ngModule: LayoutModule,\n        providers: [HubService]\n    };\n}\n}\n","import {Component, OnInit, Injectable, HostListener} from '@angular/core';\nimport {AuthService} from '../../+auth/auth.service';\nimport {Observable, Subscription, BehaviorSubject, combineLatest, fromEvent} from 'rxjs';\nimport {map, debounceTime} from 'rxjs/operators';\n\n\nconst store = {\n  shortcutOpen: false,\n  isMobile: \t(/iphone|ipad|ipod|android|blackberry|mini|windows\\sce|palm/i.test(navigator.userAgent.toLowerCase())),\n  device: '',\n  mobileViewActivated: false,\n  menuCollapsed: false,\n  menuIsOpen: false\n};\n\n@Injectable()\nexport class LayoutService {\n\n  isActivated: boolean;\n  store: any;\n  private subject: BehaviorSubject<any>;\n\n  trigger() {\n    this.subject.next(this.store)\n  }\n\n  subscribe(next, err?, complete?): Subscription {\n    return this.subject.subscribe(next, err, complete)\n  }\n\n  constructor(\n    private authService: AuthService\n  ) {\n    this.subject = new BehaviorSubject<any>(store);\n    this.store = store;\n    this.resizeUpdate();\n\n    fromEvent(window, 'resize').pipe(debounceTime(100), map(() => {\n      this.resizeUpdate();\n      this.trigger();\n    })).subscribe();\n  }\n\n  resizeUpdate() {\n    this.store.mobileViewActivated = window.innerWidth < 992;\n    this.store.menuCollapsed = window.innerWidth < 1200;\n  }\n\n  hideMenu() {\n    this.store.menuIsOpen = false;\n    if (this.store.mobileViewActivated) {\n      this.store.menuCollapsed = true;\n    }\n    this.trigger();\n  }\n\n  onShowMenu() {\n    this.store.menuIsOpen = true;\n    this.trigger();\n  }\n\n  onCollapseMenu() {\n    this.store.menuCollapsed = !this.store.menuCollapsed;\n    this.trigger();\n  }\n\n  menuCollapsed(): boolean {\n    return this.store.menuCollapsed;\n  }\n\n  onShortcutToggle(condition?: any) {\n    if (!condition) {\n      this.store.shortcutOpen = !this.store.shortcutOpen;\n    } else {\n      this.store.shortcutOpen = !!condition;\n    }\n\n    this.trigger();\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubService } from '../../../../+hub/hub.service';\nimport { DexihHubAuth, User, eHubAccess } from '../../../../+auth/auth.models';\nimport { Observable, Subscription, combineLatest} from 'rxjs';\nimport { eCacheStatus } from '../../../../+hub/hub.models';\nimport { HubsService } from '../../../../+hubs/hubs.service';\n\n@Component({\n    selector: 'dexih-hubs',\n    templateUrl: './hubs.component.html'\n})\nexport class HubsComponent implements OnInit, OnDestroy {\n\n    hubs: Observable<Array<DexihHubAuth>>;\n    hubCacheStatusSubscription: Subscription;\n    hubStatusMessage: string;\n    user: User;\n\n    eHubAccess = eHubAccess;\n\n    textClass = '';\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private router: Router) {\n    }\n\n    ngOnInit() {\n        this.hubs = this.authService.getHubsObservable();\n        this.authService.getUserObservable().subscribe(u => { this.user = u; });\n\n        this.hubStatusMessage = 'No Hub Selected';\n\n        this.hubCacheStatusSubscription = this.hubService.getHubCacheObservable().subscribe(hubCache => {\n            switch (hubCache.status) {\n                case eCacheStatus.Loading:\n                    this.textClass = 'text-info';\n                    this.hubStatusMessage = hubCache.hub.name + '(Loading...)';\n                    break;\n                case eCacheStatus.Loaded:\n                    this.textClass = 'text-success';\n                    this.hubStatusMessage = hubCache.hub.name;\n                    break;\n                case eCacheStatus.NotLoaded:\n                    this.textClass = 'text-danger';\n                    this.hubStatusMessage = 'Cache Not loaded';\n                    break;\n                case eCacheStatus.NoHub:\n                    this.textClass = 'text-danger';\n                    this.hubStatusMessage = 'No Hub Selected';\n                    break;\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.hubCacheStatusSubscription.unsubscribe();\n    }\n\n\n    openHub(hub: DexihHubAuth) {\n        this.router.navigate(['/hub/' + hub.hubKey + '/summary']);\n    }\n\n\n    manageHubs() {\n        this.router.navigate(['/hubs/hubs-view']);\n    }\n}\n","<menu-parent [name]=\"hubStatusMessage\" title=\"Available Hubs\" iconClass=\"fa fa-lg fa-fw fa-life-saver\" [textClass]=\"textClass\">\n    <li *ngFor=\"let hub of hubs | async\" class=\"nav-item\" [title]=\"hub.name\" >\n        <a class=\"nav-link\" (click)=\"openHub(hub)\">\n            <i *ngIf=\"user.isAdmin || hub.sharedAccess == eHubAccess.User\" class=\"fa fa-fw fa-user-secret\" title=\"Full Access\"></i>\n            <i *ngIf=\"!user.isAdmin  && hub.sharedAccess == eHubAccess.ReadOnly\" class=\"fa fa-fw fa-book\"  title=\"Read only Access\"></i>\n            <i *ngIf=\"!user.isAdmin  && hub.sharedAccess == eHubAccess.Public\" class=\"fa fa-fw fa-users\"  title=\"Public Hub\"></i>\n            {{hub.name}}</a>\n    </li>\n    <div class=\"dropdown-divider\"></div>\n    <li class=\"nav-item\" >\n        <a class=\"nav-link\" (click)=\"manageHubs()\"><i class=\"fa fa-fw fa-power-off\"></i> Manage Hubs</a>\n    </li>\n</menu-parent>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { Router } from '@angular/router';\nimport { User } from '../../../../+auth/auth.models';\nimport { Subscription, combineLatest} from 'rxjs';\n\n@Component({\n\n    selector: 'dexih-login-info',\n    templateUrl: './login-info.component.html'\n})\nexport class LoginInfoComponent implements OnInit, OnDestroy {\n    user: User;\n    userSubcription: Subscription;\n\n    constructor(\n        private authService: AuthService,\n        private router: Router\n        ) {\n        this.userSubcription = this.authService.getUserObservable().subscribe(user => this.user = user);\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnDestroy() {\n        if (this.userSubcription) { this.userSubcription.unsubscribe(); }\n    }\n\n    manageUser() {\n        this.router.navigate(['/hubs/manage']);\n    }\n\n    logout() {\n        this.authService.logout().then(result => {\n            if (result === true) {\n                this.login();\n            }\n        });\n    }\n\n    login() {\n        this.authService.redirectUrl = this.router.url;\n        this.router.navigate(['/auth/login']);\n    }\n}\n","<!-- <d-button-dropdown *ngIf=\"user\" \n    iconClass=\"fa fa-lg fa-fw fa-user\" \n    buttonClass=\"nav-button text-success\" \n    [text]=\"user.userName\"\n    [autoCompact]=\"false\"\n    >\n    <a class=\"dropdown-item\" (click)=\"manageUser()\"><i class=\"fa fa-user\"></i> Update Details</a>\n    <a class=\"dropdown-item\" (click)=\"logout()\"><i class=\"fa fa-sign-out\"></i> Logout</a>\n</d-button-dropdown>\n<d-button *ngIf=\"!user\"\n    (click)=\"login()\"\n    iconClass=\"fa fa-lg fa-fw fa-user\" \n    buttonClass=\"nav-button text-danger\" \n>\nLogin\n</d-button> -->\n\n<menu-parent *ngIf=\"user\"  [name]=\"user.userName\" title=\"User Options\" iconClass=\"fa fa-lg fa-fw fa-user\" textClass=\"text-success\">\n    <li class=\"nav-item\">\n        <a class=\"nav-link\" (click)=\"manageUser()\"><i class=\"fa fa-user\"></i> Update Details</a>\n    </li>\n    <li class=\"nav-item\">\n        <a class=\"nav-link\" (click)=\"logout()\"><i class=\"fa fa-sign-out\"></i> Logout</a>\n    </li>\n</menu-parent>\n<d-button *ngIf=\"!user\"\n    (click)=\"login()\"\n    iconClass=\"fa fa-lg fa-fw fa-user\" \n    buttonClass=\"nav-button text-danger\" \n>\nLogin\n</d-button>\n","export {MenuItemComponent} from './menu-item.component';\nexport {MenuParentComponent} from './menu-parent.component';\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n    selector: 'menu-item',\n    templateUrl: './menu-item.component.html'\n})\n\nexport class MenuItemComponent implements OnInit {\n    @Input() name: string;\n    @Input() title: string;\n    @Input() routerLink: string;\n    @Input() iconClass: string;\n\n    constructor() { }\n\n    ngOnInit() { }\n}\n","<li class=\"nav-item feather\" routerLinkActive=\"active\">\n    <a class=\"nav-link feather\" [routerLink]=\"routerLink\" [title]=\"title\">\n        <i [ngClass]=\"iconClass\"></i> <span class=\"menu-item-parent\">{{name}}</span>\n    </a>\n</li>","import { Component, OnInit, Input, ContentChild, TemplateRef } from '@angular/core';\nimport { LayoutService } from '../../layout.service';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\n\n@Component({\n    selector: 'menu-parent',\n    templateUrl: './menu-parent.component.html',\n    animations: [\n    // trigger name for attaching this animation to an element using the [@triggerName] syntax\n    trigger('slideDown', [\n        state('collapsed', style({ height: 0 })),\n        state('expanded', style({ height: '*' })),\n        transition('expanded <=> collapsed', animate('300ms ease-in')),\n    ])\n    ]\n})\n\nexport class MenuParentComponent implements OnInit {\n    @Input() name: string;\n    @Input() title: string;\n    @Input() iconClass: string;\n    @Input() textClass: string;\n\n    @ContentChild('item') itemTemplate: TemplateRef<any>;\n\n    public expanded = false;\n    public state = 'collapsed';\n\n    constructor(private layoutService: LayoutService) { }\n\n    ngOnInit() { }\n\n    public toggle() {\n        this.expanded = !this.expanded;\n        this.state = this.expanded ? 'expanded' : 'collapsed';\n  }\n}\n","<li class=\"nav-item\" [ngClass]=\"{'active open' : expanded}\">\n    <a class=\"nav-link d-flex\" [title]=\"title\" (click)=\"toggle()\" [title]=\"name\">\n        <span class=\"{{textClass}}\" >\n            <ng-template [ngTemplateOutlet]=\"itemTemplate\">\n            </ng-template>\n            <i [class]=\"iconClass\"></i>\n        </span>\n        <span class=\"menu-item-parent\">{{name}}</span>\n        <b class=\"ml-auto\">\n            <em *ngIf=\"expanded\" class='fa fa-minus-square-o'></em>\n            <em *ngIf=\"!expanded\" class='fa fa-plus-square-o'></em>\n        </b>\n    </a>\n    <ul class=\"nav-item\" [@slideDown]='state' style=\"overflow: hidden; display: block\">\n        <ng-content></ng-content>\n    </ul>\n</li>","import { Subscription, combineLatest} from 'rxjs';\nimport { Component, OnDestroy, OnInit, HostListener, ViewChild } from '@angular/core';\nimport { HubService } from '../../../+hub/hub.service';\nimport { AuthService, } from '../../../+auth/auth.service';\nimport { DexihHubAuth, User } from '../../../+auth/auth.models';\nimport { LayoutService } from '../layout.service';\nimport { HubCache, sharedObjectProperties } from '../../../+hub/hub.models';\nimport { DexihRemoteAgentHub, ePermission } from '../../shared.models';\n\n@Component({\n\n  selector: 'dexih-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n})\nexport class NavigationComponent implements OnInit, OnDestroy {\n  @ViewChild('sidebar', { static: true }) sidebarElement: any;\n\n  hubKey: number;\n\n  _layoutSubscription: Subscription;\n  _subscription: Subscription;\n  _hubCacheObserve: Subscription;\n\n  hubCache: HubCache;\n  message: string;\n\n  hubCacheLoaded = false;\n\n  public expanded = false;\n  public state = 'collapsed';\n\n  user: User;\n  hubs: Array<DexihHubAuth>;\n  remoteAgents: Array<DexihRemoteAgentHub>;\n  ePermission = ePermission;\n  sharedObjectProperties = sharedObjectProperties;\n  objectCounts = [];\n  ignoreClick = false;\n\n  mobileViewActivated = false;\n\n  activeAgentCount = 0;\n\n\n  constructor(\n    private hubService: HubService,\n    private authService: AuthService,\n    private layoutService: LayoutService) {\n  }\n\n  ngOnInit() {\n    this._subscription = combineLatest(\n      this.hubService.getHubCacheObservable(),\n      this.authService.getUserObservable(),\n      this.authService.getHubsObservable(),\n      this.authService.getRemoteAgentsObservable()\n    ).subscribe(result => {\n      this.hubCache = result[0];\n      this.user = result[1];\n      this.hubs = result[2];\n      let activeAgents = result[3];\n\n\n      if (activeAgents) {\n        this.activeAgentCount = activeAgents.length;\n      } else {\n        this.activeAgentCount = 0;\n      }\n\n      if (this.hubCache && this.hubCache.isLoaded()) {\n        this.remoteAgents = this.hubCache.hub.dexihRemoteAgentHubs;\n\n        this.sharedObjectProperties.forEach(c => {\n          if (!this.hubCache.hub[c.cacheProperty]) {\n            this.objectCounts[c.type] = 0;\n          } else {\n            this.objectCounts[c.type] = this.hubCache.hub[c.cacheProperty].filter(d => d.isValid).length;\n          }\n\n        });\n\n        this.hubCacheLoaded = true;\n        this.watchChanges();\n    } else {\n        this.hubCacheLoaded = false;\n    }\n    });\n\n    if (this._layoutSubscription) { this._layoutSubscription.unsubscribe(); }\n      this._layoutSubscription = this.layoutService.subscribe(store => {\n        this.mobileViewActivated = store.mobileViewActivated;\n        if (store.menuCollapsed) {\n          this.expanded = false;\n          this.state = 'collapsed';\n        } else {\n          this.ignoreClick = true;\n          this.expanded = true;\n          this.state = 'expanded';\n        }\n      });\n\n  }\n\n  hideMenu() {\n    this.layoutService.hideMenu();\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._layoutSubscription) { this._layoutSubscription.unsubscribe(); }\n    if (this._hubCacheObserve) { this._hubCacheObserve.unsubscribe(); }\n  }\n\n  watchChanges() {\n    // watch the current connection in case it is changed in another session.\n    if (this._hubCacheObserve) { this._hubCacheObserve.unsubscribe(); }\n    this._hubCacheObserve = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n      let hubCache = this.hubCache;\n      this.hubCache = hubCache;\n\n      let property = this.sharedObjectProperties.find(c => c.type === hubCacheChange.changeClass);\n      if (property) {\n        this.objectCounts[hubCacheChange.changeClass] = this.hubCache.hub[property.cacheProperty].filter(d => d.isValid).length;\n      }\n\n    });\n  }\n\n  // detect a click outside the control, and hide the sidebar\n  @HostListener('document:click', ['$event.target'])\n  public onClick(targetElement: any) {\n        const clickedInside = this.sidebarElement.nativeElement.contains(targetElement);\n        if (!clickedInside && !this.ignoreClick && this.mobileViewActivated && this.expanded) {\n            this.layoutService.hideMenu();\n        }\n    }\n\n}\n","\n<nav #sidebar id=\"dexih-sidebar\" >            \n        <ul class=\"flex-column\">\n            <dexih-login-info></dexih-login-info>\n\n            <menu-parent name=\"Configure\" title=\"Management functions\" iconClass=\"fa fa-lg fa-fw fa-wrench\">\n                    <li class=\"nav-item\" *ngIf=\"user?.isAdmin\">\n                        <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\"  routerLink=\"/admin/users\">\n                            <i class=\"fa fa-lg fa-fw fa-users\"></i>\n                            \n                            <span class=\"menu-item-parent\">{{'Users' }}</span>\n                        </a>\n                    </li>\n                    <li class=\"nav-item\" >\n                        <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hubs/index/hubs-view\">\n                            <i class=\"fa fa-lg fa-fw fa-life-saver\"></i>\n                            <span class=\"menu-item-parent\">{{'Hubs'}}</span>\n                        </a>\n                    </li>\n    \n                    <li class=\"nav-item\"  *ngIf=\"hubCacheLoaded && hubCache.canAdministrate\">\n                        <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary/manage/manage-users\" title=\"Manage Hub User Permissions\">\n                            <i class=\"fa fa-lg fa-fw fa-user-plus\"></i> <span class=\"menu-item-parent\">{{'Hub Users'}}</span>\n                        </a>\n                    </li>\n\n                    <li class=\"nav-item\"  *ngIf=\"hubCacheLoaded && hubCache.canAdministrate\">\n                        <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hubs/index/hubs-view/hub-edit/{{hubCache.hub.hubKey}}\" title=\"Edit Hub Details\">\n                            <i class=\"fa fa-lg fa-fw fa-edit\"></i> <span class=\"menu-item-parent\">{{'Hub Edit'}}</span>\n                        </a>\n                    </li>\n\n                    <li class=\"nav-item\">\n                        <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hubs/agents\" title=\"Manage Remote Agents\">\n                            <i class=\"fa fa-lg fa-fw fa-wifi\"></i> <span class=\"menu-item-parent\">{{'Remote Agents'}}</span>\n                        </a>\n                    </li>\n\n                    <li class=\"nav-item\"  *ngIf=\"hubCacheLoaded && hubCache.canAdministrate\">\n                        <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary/agents\" title=\"Manage Remote Agents\">\n                            <i class=\"fa fa-lg fa-fw fa-wrench\"></i> <span class=\"menu-item-parent\">{{'Hub Agents'}}</span>\n                        </a>\n                    </li>\n        \n            </menu-parent>\n            \n            <div class=\"dropdown-divider\"></div>\n\n            <li class=\"nav-item\">\n                <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\"  [routerLinkActiveOptions]=\"{exact: true}\" routerLink=\"/hubs/index\"  title=\"Home\">\n                    <span data-feather=\"Hubs\"><i class=\"fa fa-lg fa-fw fa-home\"></i></span>\n                     {{'Overview'}}\n                </a>\n            </li>\n\n            <li class=\"nav-item\" >\n                <a (click)=\"hideMenu()\" class=\"nav-link text-primary\"  routerLinkActive=\"active\" routerLink=\"/hubs/index/help\">\n                    <span data-feather=\"Getting Started\"><i class=\"fa fa-lg fa-fw fa-question-circle\"></i></span>\n                    {{'Getting Started' }}\n                </a>\n            </li>\n   \n            <li class=\"nav-item\" >\n                 <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hubs/index/sharedData\">\n                    <span data-feather=\"Shared Data\"><i class=\"fa fa-lg fa-fw fa-newspaper-o\"></i></span>\n                    {{'Shared Data' }}\n                </a>\n            </li>\n\n            <li class=\"nav-item\" >\n                <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hubs/index/notifications\">\n                    <span data-feather=\"Notifications\"><i class=\"fa fa-lg fa-fw fa-envelope-o\"></i></span>\n                    {{'Notifications'}}\n                </a>\n            </li>\n\n            <li class=\"nav-item\" >\n                <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hubs/index/tasks\">\n                    <span data-feather=\"Notifications\"><i class=\"fa fa-lg fa-fw fa-tasks\"></i></span>\n                    {{'Remote Tasks'}}\n                </a>\n            </li>\n\n            <li class=\"nav-item\" >\n                <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hubs/index/support\">\n                    <span data-feather=\"Support\"><i class=\"fa fa-lg fa-fw fa-comment-o\"></i></span>\n                    {{'Support'}}\n                </a>\n            </li>\n\n            <div class=\"dropdown-divider\"></div>\n            <dexih-hubs></dexih-hubs>\n\n            <ng-template [ngIf]=\"hubCacheLoaded\">\n                <dexih-remote-agent></dexih-remote-agent>\n                \n                <li class=\"nav-item\"  >\n                    <a (click)=\"hideMenu()\" class=\"nav-link\" (click)=\"hideMenu()\"  routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary\"  title=\"Hub Summary\">\n                        <i class=\"fa fa-lg fa-fw fa-dashboard\"></i> <span class=\"menu-item-parent\">{{'Summary'}}</span>\n                    </a>\n                </li>\n\n                <li class=\"nav-item\" >\n                    <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/search\" title=\"Search\">\n                        <i class=\"fa fa-lg fa-fw fa-search\"></i> <span class=\"menu-item-parent\">{{'Search'}}</span>\n                    </a>\n                </li>\n    \n                <li *ngFor=\"let sharedObject of sharedObjectProperties\" class=\"nav-item\">\n                    <a class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary/{{sharedObject.routerLink}}\" title=\"{{sharedObject.description}}\">\n                        <i class=\"fa fa-lg fa-fw {{sharedObject.icon}}\"></i> <span class=\"menu-item-parent\">{{sharedObject.displayName}}</span>\n                        <span class=\"badge badge-primary float-right\">{{objectCounts[sharedObject.type]}}</span>\n                    </a>\n                </li>\n\n                <li class=\"nav-item\" >\n                    <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"sharedData\">\n                       <span data-feather=\"Shared Data\"><i class=\"fa fa-lg fa-fw fa-newspaper-o\"></i></span>\n                       {{'Shared Data' }}\n                   </a>\n               </li>\n\n                <li class=\"nav-item\">\n                    <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary/files/manage\" title=\"Manage Flat Files within an existing table definition\">\n                        <i class=\"fa fa-lg fa-fw fa-upload\"></i> <span class=\"menu-item-parent\">{{'Manage Files'}}</span>\n                    </a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary/files/bulk-load\" title=\"Bulk upload files to create auto create table definitions.\">\n                        <i class=\"fa fa-lg fa-fw fa-files-o\"></i> <span class=\"menu-item-parent\">{{'Bulk Load Files'}}</span>\n                    </a>\n                </li>\n    \n                <li class=\"nav-item\">\n                    <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary/datalinks/results\" title=\"Recent execution summaries from datalink and datajobs.\">\n                        <i class=\"fa fa-lg fa-fw fa-tasks\"></i> <span class=\"menu-item-parent\">{{'Job Results'}}</span>\n                    </a>\n                </li>\n\n                <li class=\"nav-item\" *ngIf=\"hubCache.canWrite\">\n                    <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary/import\" title=\"Import Objects\">\n                        <i class=\"fa fa-lg fa-fw fa-level-down\"></i> <span class=\"menu-item-parent\">{{'Import'}}</span><span class=\"badge badge-primary float-right\"></span>\n                    </a>\n                </li>\n\n                <li class=\"nav-item\" *ngIf=\"hubCache.canWrite\">\n                    <a (click)=\"hideMenu()\" class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/summary/export\" title=\"Export Objects\">\n                        <i class=\"fa fa-lg fa-fw fa-level-up\"></i> <span class=\"menu-item-parent\">{{'Export'}}</span><span class=\"badge badge-primary float-right\"></span>\n                    </a>\n                </li>\n            </ng-template>\n\n        </ul>\n    </nav>\n\n\n\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NavigationComponent} from './navigation.component';\nimport {AuthModule} from '../../../+auth/auth.module';\nimport {RouterModule} from '@angular/router';\nimport {LoginInfoComponent} from './login-info/login-info.component';\nimport {MenuParentComponent, MenuItemComponent } from './menu';\nimport {RemoteAgentComponent} from './remote-agent/remote-agent.component';\nimport {HubsComponent} from './hubs/hubs.component';\nimport { DComponentsModule } from 'ngx-d-components';\nimport { DexihIconsModule} from '../../ui/icons/icons.module'\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    DComponentsModule,\n    DexihIconsModule,\n  ],\n  declarations: [\n    NavigationComponent,\n    LoginInfoComponent,\n    MenuParentComponent, MenuItemComponent,\n    RemoteAgentComponent,\n    HubsComponent,\n  ],\n  exports: [\n    NavigationComponent\n  ]\n})\nexport class NavigationModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { HubService } from '../../../../+hub/hub.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubCache } from '../../../../+hub/hub.models';\nimport { DexihActiveAgent, eDataPrivacyStatus } from '../../../shared.models';\n\n@Component({\n\n    selector: 'dexih-remote-agent',\n    templateUrl: './remote-agent.component.html'\n})\nexport class RemoteAgentComponent implements OnInit, OnDestroy {\n    hubCache: HubCache;\n\n    activeHubAgents: Array<DexihActiveAgent>;\n\n    selectedRemoteAgent: DexihActiveAgent;\n\n    hubKey: number;\n\n    _subscription: Subscription;\n\n    eDataPrivacyStatus = eDataPrivacyStatus;\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private router: Router\n        ) {\n    }\n\n    ngOnInit() {\n        this._subscription = combineLatest(\n            this.hubService.getHubCacheObservable(),\n            this.hubService.getRemoteAgentObservable(),\n            this.authService.getRemoteAgentsObservable(),\n        ).subscribe(result => {\n            this.hubCache = result[0];\n            let remoteAgents = result[2];\n\n            if (!remoteAgents) {\n                this.selectedRemoteAgent = null;\n                this.activeHubAgents = null;\n                return;\n            }\n\n            if (this.hubCache.isLoaded()) {\n                 this.hubKey = this.hubCache.hub.hubKey;\n                 let remoteAgentHubs = this.hubCache.hub.dexihRemoteAgentHubs.filter(c => c.isAuthorized);\n                 this.activeHubAgents = [];\n                 remoteAgentHubs.forEach(r => {\n                    let remoteAgent = remoteAgents.find(c => c.remoteAgentKey === r.remoteAgentKey);\n                    if (remoteAgent) {\n                        this.activeHubAgents = this.activeHubAgents.concat(remoteAgent['activeAgents']);\n                    }\n                 });\n\n                 if (this.activeHubAgents.length > 0 ) {\n                     console.log('Remote Agents updated, count = ' + this.activeHubAgents.length);\n                    this.selectedRemoteAgent = result[1];\n                 } else {\n                     this.selectedRemoteAgent = null;\n                 }\n            } else {\n                this.hubKey = null;\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    editRemoteAgent(activeAgent: DexihActiveAgent) {\n        let remoteAgentHub = this.hubCache.hub.dexihRemoteAgentHubs\n            .find(c => c.isAuthorized && c.remoteAgentKey === activeAgent.remoteAgentKey);\n\n        this.router.navigate(['/hub', this.hubKey, 'agents', 'agent-edit', activeAgent.remoteAgentKey, remoteAgentHub.remoteAgentHubKey]);\n    }\n\n    setRemoteAgent(activeAgent: DexihActiveAgent) {\n        this.hubService.setCurrentRemoteAgent(activeAgent);\n    }\n\n    refresh() {\n        this.authService.pingRemoteAgents();\n    }\n}\n","<menu-parent [name]=\"selectedRemoteAgent ? selectedRemoteAgent.name : 'No Active Agent'\">\n    <ng-template #item>\n        <encryption-status-icon *ngIf=\"selectedRemoteAgent\" [isEncrypted]=\"selectedRemoteAgent?.isEncrypted\"></encryption-status-icon>\n        <span *ngIf='!selectedRemoteAgent' class=\"text-danger\">\n            <i class=\"fa fa-fw fa-lg fa-exclamation-circle\" title=\"No remote agent is available for this hub.\"></i>\n        </span>\n    </ng-template>\n    <ng-template [ngIf]=\"activeHubAgents\">\n        <li class=\"nav-item\" *ngFor=\"let activeAgent of activeHubAgents\">\n            <a class=\"nav-link\" (click)=\"setRemoteAgent(activeAgent)\">\n                <encryption-status-icon class=\"mr-1\" [isEncrypted]=\"activeAgent.isEncrypted\"></encryption-status-icon>\n                {{activeAgent.name}}\n                <a (click)=\"editRemoteAgent(activeAgent)\" class=\"btn btn-xs btn-primary float-right text-white\"><i class=\"fa fa-edit\"></i></a>\n            </a>\n        </li>\n        <div class=\"dropdown-divider\"></div>\n        <li *ngIf=\"hubCache.canWrite\" class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/hub/{{hubKey}}/agents\">\n                <i class=\"fa fa-wrench\"></i> Manage Agents</a>\n        </li>\n        <li *ngIf=\"hubCache.canWrite\" class=\"nav-item\">\n            <a class=\"nav-link\" (click)=\"refresh()\">\n                <i class=\"fa fa-refresh\"></i> Refresh Agents</a>\n        </li>\n    </ng-template>\n</menu-parent>","export { RibbonComponent } from './ribbon.component';\nexport { RibbonModule } from './ribbon.module';\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'dexih-ribbon',\n  templateUrl: './ribbon.component.html'\n})\nexport class RibbonComponent implements OnInit {\n\n  constructor() {}\n\n  ngOnInit() {\n  }\n\n}\n","<!-- RIBBON -->\n<div class=\"mt-0\">\n  <!-- breadcrumb -->\n  <dexih-route-breadcrumbs></dexih-route-breadcrumbs>\n</div>","import { NgModule } from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {RouteBreadcrumbsComponent} from './route-breadcrumbs/route-breadcrumbs.component'\nimport {RibbonComponent} from './ribbon.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n    ],\n    exports: [\n        RibbonComponent,\n        RouteBreadcrumbsComponent,\n    ],\n    declarations: [\n        RibbonComponent,\n        RouteBreadcrumbsComponent,\n        ],\n    providers: [],\n})\nexport class RibbonModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationEnd }    from '@angular/router';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { filter} from 'rxjs/operators';\n\n@Component({\n    selector: 'dexih-route-breadcrumbs',\n    templateUrl: './route-breadcrumbs.component.html',\n    styleUrls: ['./route-breadcrumbs.component.scss']\n})\nexport class RouteBreadcrumbsComponent implements OnInit, OnDestroy {\n    breadcrumbs: Array<Breadcrumb>;\n\n    private _eventSubscription: Subscription;\n\n    constructor(private router: Router, private route: ActivatedRoute) {}\n\n    ngOnInit(): void {\n\n        this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\n            let breadcrumbs = [];\n            let currentRoute = this.route.root,\n            url = '';\n            do {\n                let childrenRoutes = currentRoute.children;\n                currentRoute = null;\n                childrenRoutes.forEach(route => {\n                    if (route.outlet === 'primary') {\n                        let routeSnapshot = route.snapshot;\n                        url += '/' + routeSnapshot.url.map(segment => segment.path).join('/');\n                        let pageTitle = routeSnapshot.data['pageTitle'];\n                        if (pageTitle &&\n                            breadcrumbs.findIndex((value) => value.pageTitle === pageTitle) === -1 ) {\n                            breadcrumbs.push({\n                                pageTitle: pageTitle,\n                                url: url\n                            });\n                        }\n                        currentRoute = route;\n                    }\n                });\n            } while (currentRoute);\n            this.breadcrumbs = breadcrumbs;\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._eventSubscription) { this._eventSubscription.unsubscribe(); }\n    }\n}\n\nexport class Breadcrumb {\n  constructor(\n    public url: string,\n    public pageTitle: string) { }\n}\n","<nav class=\"py-0\" aria-label=\"breadcrumb\">\n    <ol class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\">\n                <a routerLink=\"/home\" >\n                <i class=\"fa-fw fa fa-home\"></i>Home</a>\n            </li>\n\n            <li *ngFor=\"let breadcrumb of breadcrumbs; let last = last\" class=\"breadcrumb-item\" [ngClass]=\"{active: last}\">\n                <a *ngIf=\"!last\"  [routerLink]=\"breadcrumb.url\" queryParamsHandling=\"merge\">{{breadcrumb.pageTitle}}</a>\n                <span *ngIf=\"last\">{{breadcrumb.pageTitle}} (current)</span>\n            </li>\n    </ol>\n</nav>","// Auto generated shared classes.\n// Regenerate at http://localhost:5000/api/Dev/JSModels.\n\n// tslint:disable: no-inferrable-types no-use-before-declare\n\n// auto generated classes\n\nexport class AnimateConfig {\n    public seriesColumn: string = null;\n    public automatic: boolean = true;\n    public delay: number = 500;\n   }\n   \n   export class ApiData {\n    public apiStatus: eApiStatus = null;\n    public hubKey: number = 0;\n    public apiKey: number = 0;\n    public selectQuery: SelectQuery = null;\n    public securityKey: string = null;\n    public successCount: number = 0;\n    public errorCount: number = 0;\n   }\n   \n   export class ApplicationUser {\n    public id: string = '2ced0c27-df80-4c6e-b90e-abf8e518c638';\n    public email: string = null;\n    public concurrencyStamp: string = null;\n    public emailConfirmed: boolean = false;\n    public lockoutEnabled: boolean = false;\n    public lockoutEnd: any = null;\n    public normalizedEmail: string = null;\n    public passwordHash: string = null;\n    public phoneNumber: string = null;\n    public securityStamp: string = '0be96604-8495-4604-b3d7-43b1e47a52ac';\n    public userName: string = null;\n    public accessFailedCount: number = 0;\n    public normalizedUserName: string = null;\n    public phoneNumberConfirmed: boolean = false;\n    public twoFactorEnabled: boolean = false;\n    public isInvited: boolean = false;\n    public isRegistered: boolean = false;\n    public isEnabled: boolean = false;\n    public firstName: string = null;\n    public lastName: string = null;\n    public terms: boolean = false;\n    public subscription: boolean = false;\n    public inviteQuota: number = 0;\n    public hubQuota: number = 0;\n    public privateKey: string = null;\n    public certificateChain: string = null;\n    public certificateExpiry: Date = null;\n    public notifyPrivateMessage: boolean = false;\n    public notifySupportMessage: boolean = false;\n   }\n   \n   export class AppSettingsSection {\n    public userPrompt: boolean = true;\n    public remoteAgentId: string = null;\n    public user: string = null;\n    public userToken: string = null;\n    public encryptionKey: string = null;\n    public webServer: string = 'https://dexih.com';\n    public name: string = null;\n    public autoUpgrade: boolean = false;\n    public allowPreReleases: boolean = false;\n    public autoStartPath: string = null;\n   }\n   \n   export class CacheManager {\n    public hub: DexihHub = null;\n    public buildVersion: string = null;\n    public buildDate: Date = null;\n    public googleClientId: string = null;\n    public microsoftClientId: string = null;\n    public googleMapsAPIKey: string = null;\n    public defaultRemoteLibraries: RemoteLibraries = null;\n    public hubKey: number = 0;\n    public cacheEncryptionKey: string = null;\n   }\n   \n   export class ChartConfig {\n    public labelColumn: string = null;\n    public seriesColumn: string = null;\n    public pivotColumn: string = null;\n    public seriesColumns: string[] = [];\n    public xColumn: string = null;\n    public yColumn: string = null;\n    public minColumn: string = null;\n    public maxColumn: string = null;\n    public radiusColumn: string = null;\n    public latitudeColumn: string = null;\n    public longitudeColumn: string = null;\n    public chartType: eChartType = eChartType.BarVertical;\n    public colorScheme: string = 'natural';\n    public showGradient: boolean = false;\n    public showXAxis: boolean = true;\n    public showYAxis: boolean = true;\n    public showLegend: boolean = false;\n    public legendPosition: string = 'below';\n    public showXAxisLabel: boolean = true;\n    public showYAxisLabel: boolean = true;\n    public showGridLines: boolean = false;\n    public xAxisLabel: string = null;\n    public yAxisLabel: string = null;\n    public xScaleMax: number = null;\n    public xScaleMin: number = null;\n    public yScaleMax: number = null;\n    public yScaleMin: number = null;\n    public autoScale: boolean = true;\n    public explodeSlices: boolean = false;\n    public doughnut: boolean = false;\n    public separateAxis: boolean = false;\n    public barPadding: number = 3;\n    public roundEdges: boolean = false;\n    public showDataLabel: boolean = false;\n    public singleBarColor: boolean = true;\n    public multiGridColumn: string = null;\n    public yAxisLabelRight: string = null;\n   }\n   \n   export class ClientMessage {\n    public command: eClientCommand = eClientCommand.Connect;\n    public value: any = null;\n    public success: boolean = false;\n    public message: string = null;\n    public exceptionDetails: string = null;\n   }\n   \n   export class ConnectionAttribute {\n    public connectionCategory: eConnectionCategory = null;\n    public name: string = null;\n    public description: string = null;\n    public databaseDescription: string = null;\n    public serverDescription: string = null;\n    public allowsConnectionString: boolean = false;\n    public allowsSql: boolean = false;\n    public allowsFlatFiles: boolean = false;\n    public allowsManagedConnection: boolean = false;\n    public allowsSourceConnection: boolean = false;\n    public allowsTargetConnection: boolean = false;\n    public allowsUserPassword: boolean = false;\n    public allowsWindowsAuth: boolean = false;\n    public requiresDatabase: boolean = false;\n    public requiresLocalStorage: boolean = false;\n    public serverHelp: string = null;\n    public allowsToken: boolean = false;\n    public defaultSchema: string = null;\n   }\n   \n   export class ConnectionReference {\n    public connectionAssemblyName: string = null;\n    public connectionClassName: string = null;\n    public connectionCategory: eConnectionCategory = null;\n    public name: string = null;\n    public description: string = null;\n    public databaseDescription: string = null;\n    public serverDescription: string = null;\n    public serverHelp: string = null;\n    public allowsConnectionString: boolean = false;\n    public allowsSql: boolean = false;\n    public allowsFlatFiles: boolean = false;\n    public allowsManagedConnection: boolean = false;\n    public allowsSourceConnection: boolean = false;\n    public allowsTargetConnection: boolean = false;\n    public allowsUserPassword: boolean = false;\n    public allowsToken: boolean = false;\n    public allowsWindowsAuth: boolean = false;\n    public requiresDatabase: boolean = false;\n    public requiresLocalStorage: boolean = false;\n    public defaultSchema: string = null;\n   }\n   \n   export class DatalinkProgress {\n    public instanceId: string = null;\n    public securityToken: string = null;\n    public command: eMessageCommand = eMessageCommand.Connect;\n    public results: ManagedTask[] = [];\n   }\n   \n   export class DataPack {\n    public name: string = null;\n    public columns: DataPackColumn[] = [];\n    public data: any[] = [];\n    public transformProperties: TransformProperties = null;\n   }\n   \n   export class DataPackColumn {\n    public name: string = null;\n    public logicalName: string = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n   }\n   \n   export class DeleteQuery {\n    public table: string = null;\n    public filters: Filter[] = [];\n   }\n   \n   export class DexihActiveAgent {\n    public remoteAgentKey: number = 0;\n    public instanceId: string = null;\n    public user: string = null;\n    public name: string = null;\n    public isRunning: boolean = false;\n    public ipAddress: string = null;\n    public isEncrypted: boolean = false;\n    public dataPrivacyStatus: eDataPrivacyStatus = null;\n    public downloadUrls: DownloadUrl[] = [];\n    public upgradeAvailable: boolean = false;\n    public version: string = null;\n    public latestVersion: string = null;\n    public latestDownloadUrl: string = null;\n    public namingStandards: string[] = [];\n   }\n   \n   export class DexihApi {\n    public sourceType: eSourceType = null;\n    public sourceTableKey: number = null;\n    public sourceDatalinkKey: number = null;\n    public autoStart: boolean = false;\n    public cacheQueries: boolean = false;\n    public cacheResetInterval: any = null;\n    public logDirectory: string = null;\n    public selectQuery: SelectQuery = null;\n    public parameters: DexihApiParameter[] = [];\n    public isShared: boolean = false;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihApiParameter {\n    public apiKey: number = 0;\n    public api: DexihApi = null;\n    public value: any = null;\n    public listOfValuesKey: number = null;\n    public allowUserSelect: boolean = true;\n    public valueDesc: any = null;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihBaseEntity {\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihColumnBase {\n    public position: number = 0;\n    public logicalName: string = null;\n    public columnGroup: string = null;\n    public dataType: eTypeCode = eTypeCode.String;\n    public maxLength: number = null;\n    public precision: number = null;\n    public isUnicode: boolean = null;\n    public scale: number = null;\n    public allowDbNull: boolean = false;\n    public deltaType: eDeltaType = eDeltaType.TrackingField;\n    public defaultValue: string = null;\n    public isUnique: boolean = false;\n    public isMandatory: boolean = false;\n    public isIncrementalUpdate: boolean = false;\n    public isInput: boolean = false;\n    public rank: number = 0;\n    public securityFlag: eSecurityFlag = eSecurityFlag.None;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihColumnValidation {\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public minLength: number = null;\n    public maxLength: number = null;\n    public allowDbNull: boolean = false;\n    public minValue: number = null;\n    public maxValue: number = null;\n    public patternMatch: string = null;\n    public regexMatch: string = null;\n    public listOfValues: string[] = [];\n    public listOfNotValues: string[] = [];\n    public lookupColumnKey: number = null;\n    public lookupIsValid: boolean = false;\n    public lookupMultipleRecords: boolean = false;\n    public invalidAction: eInvalidAction = null;\n    public cleanAction: eCleanAction = null;\n    public cleanValue: string = null;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihConnection {\n    public connectionAssemblyName: string = null;\n    public connectionClassName: string = null;\n    public purpose: eConnectionPurpose = null;\n    public server: string = null;\n    public useWindowsAuth: boolean = false;\n    public username: string = null;\n    public password: string = null;\n    public usePasswordVariable: boolean = false;\n    public defaultDatabase: string = null;\n    public filename: string = null;\n    public useConnectionString: boolean = false;\n    public connectionString: string = null;\n    public useConnectionStringVariable: boolean = false;\n    public embedTableKey: boolean = false;\n    public connectionTimeout: number = 30;\n    public commandTimeout: number = 60;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihCustomFunction {\n    public methodCode: string = null;\n    public resultCode: string = null;\n    public returnType: eTypeCode = null;\n    public functionType: eFunctionType = null;\n    public isGeneric: boolean = false;\n    public genericTypeDefault: eTypeCode = eTypeCode.Unknown;\n    public dexihCustomFunctionParameters: DexihCustomFunctionParameter[] = [];\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihCustomFunctionParameter {\n    public customFunctionKey: number = 0;\n    public position: number = 0;\n    public direction: eParameterDirection = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public allowNull: boolean = false;\n    public isGeneric: boolean = false;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDashboard {\n    public isShared: boolean = false;\n    public minRows: number = 0;\n    public minCols: number = 0;\n    public maxRows: number = 0;\n    public maxCols: number = 0;\n    public autoRefresh: boolean = false;\n    public dexihDashboardItems: DexihDashboardItem[] = [];\n    public parameters: DexihDashboardParameter[] = [];\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDashboardItem {\n    public cols: number = 0;\n    public rows: number = 0;\n    public x: number = 0;\n    public y: number = 0;\n    public header: boolean = false;\n    public scrollable: boolean = false;\n    public viewKey: number = 0;\n    public dashboardKey: number = 0;\n    public parameters: DexihDashboardItemParameter[] = [];\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDashboardItemParameter {\n    public dashboardItemKey: number = 0;\n    public value: any = null;\n    public listOfValuesKey: number = null;\n    public allowUserSelect: boolean = true;\n    public valueDesc: any = null;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDashboardParameter {\n    public dashboardKey: number = 0;\n    public value: any = null;\n    public listOfValuesKey: number = null;\n    public allowUserSelect: boolean = true;\n    public valueDesc: any = null;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatajob {\n    public failAction: eFailAction = eFailAction.Abend;\n    public auditConnectionKey: number = null;\n    public fileWatch: boolean = false;\n    public autoStart: boolean = false;\n    public dexihDatalinkSteps: DexihDatalinkStep[] = [];\n    public dexihTriggers: DexihTrigger[] = [];\n    public parameters: DexihDatajobParameter[] = [];\n    public alertLevel: eAlertLevel = eAlertLevel.None;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatajobParameter {\n    public datajobKey: number = 0;\n    public value: any = null;\n    public listOfValuesKey: number = null;\n    public allowUserSelect: boolean = true;\n    public valueDesc: any = null;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalink {\n    public sourceDatalinkTableKey: number = 0;\n    public auditConnectionKey: number = null;\n    public updateStrategy: eUpdateStrategy = eUpdateStrategy.Reload;\n    public loadStrategy: eTransformWriterMethod = eTransformWriterMethod.Bulk;\n    public datalinkType: eDatalinkType = null;\n    public rowsPerCommit: number = 1000;\n    public rowsPerProgress: number = 1000;\n    public rollbackOnFail: boolean = false;\n    public isQuery: boolean = false;\n    public maxRows: number = 0;\n    public addDefaultRow: boolean = false;\n    public profileTableName: string = null;\n    public isShared: boolean = false;\n    public entityStatus: EntityStatus = new EntityStatus();\n    public dexihDatalinkProfiles: DexihDatalinkProfile[] = [];\n    public dexihDatalinkTransforms: DexihDatalinkTransform[] = [];\n    public dexihDatalinkTargets: DexihDatalinkTarget[] = [];\n    public parameters: DexihDatalinkParameter[] = [];\n    public sourceDatalinkTable: DexihDatalinkTable = null;\n    public alertLevel: eAlertLevel = eAlertLevel.None;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkColumn {\n    public key: number = 0;\n    public datalinkTableKey: number = null;\n    public childColumns: DexihDatalinkColumn[] = [];\n    public position: number = 0;\n    public logicalName: string = null;\n    public columnGroup: string = null;\n    public dataType: eTypeCode = eTypeCode.String;\n    public maxLength: number = null;\n    public precision: number = null;\n    public isUnicode: boolean = null;\n    public scale: number = null;\n    public allowDbNull: boolean = false;\n    public deltaType: eDeltaType = eDeltaType.TrackingField;\n    public defaultValue: string = null;\n    public isUnique: boolean = false;\n    public isMandatory: boolean = false;\n    public isIncrementalUpdate: boolean = false;\n    public isInput: boolean = false;\n    public rank: number = 0;\n    public securityFlag: eSecurityFlag = eSecurityFlag.None;\n    public name: string = null;\n    public description: string = null;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkDependency {\n    public datalinkStepKey: number = 0;\n    public dependentDatalinkStepKey: number = 0;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkParameter {\n    public datalinkKey: number = 0;\n    public value: any = null;\n    public listOfValuesKey: number = null;\n    public allowUserSelect: boolean = true;\n    public valueDesc: any = null;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkProfile {\n    public datalinkKey: number = 0;\n    public functionClassName: string = null;\n    public functionAssemblyName: string = null;\n    public functionMethodName: string = null;\n    public detailedResults: boolean = false;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkStep {\n    public datajobKey: number = 0;\n    public datalinkKey: number = null;\n    public position: number = 0;\n    public dexihDatalinkStepColumns: DexihDatalinkStepColumn[] = [];\n    public dexihDatalinkDependencies: DexihDatalinkDependency[] = [];\n    public parameters: DexihDatalinkStepParameter[] = [];\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkStepColumn {\n    public datalinkStepKey: number = 0;\n    public position: number = 0;\n    public logicalName: string = null;\n    public columnGroup: string = null;\n    public dataType: eTypeCode = eTypeCode.String;\n    public maxLength: number = null;\n    public precision: number = null;\n    public isUnicode: boolean = null;\n    public scale: number = null;\n    public allowDbNull: boolean = false;\n    public deltaType: eDeltaType = eDeltaType.TrackingField;\n    public defaultValue: string = null;\n    public isUnique: boolean = false;\n    public isMandatory: boolean = false;\n    public isIncrementalUpdate: boolean = false;\n    public isInput: boolean = false;\n    public rank: number = 0;\n    public securityFlag: eSecurityFlag = eSecurityFlag.None;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkStepParameter {\n    public datalinkStepKey: number = 0;\n    public value: any = null;\n    public listOfValuesKey: number = null;\n    public allowUserSelect: boolean = true;\n    public valueDesc: any = null;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkTable {\n    public sourceTableKey: number = null;\n    public sourceDatalinkKey: number = null;\n    public rowsStartAt: number = 1;\n    public rowsEndAt: number = 1;\n    public rowsIncrement: number = 1;\n    public sourceType: eSourceType = eSourceType.Table;\n    public disableVersioning: boolean = true;\n    public disablePushDown: boolean = false;\n    public dexihDatalinkColumns: DexihDatalinkColumn[] = [];\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkTarget {\n    public datalinkKey: number = 0;\n    public nodeDatalinkColumnKey: number = null;\n    public nodeDatalinkColumn: DexihDatalinkColumn = null;\n    public position: number = 0;\n    public tableKey: number = 0;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkTest {\n    public auditConnectionKey: number = null;\n    public dexihDatalinkTestSteps: DexihDatalinkTestStep[] = [];\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkTestStep {\n    public position: number = 0;\n    public datalinkTestKey: number = 0;\n    public datalinkKey: number = 0;\n    public targetConnectionKey: number = 0;\n    public targetTableName: string = null;\n    public targetSchema: string = null;\n    public expectedConnectionKey: number = 0;\n    public expectedTableName: string = null;\n    public expectedSchema: string = null;\n    public errorConnectionKey: number = 0;\n    public errorTableName: string = null;\n    public errorSchema: string = null;\n    public dexihDatalinkTestTables: DexihDatalinkTestTable[] = [];\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkTestTable {\n    public datalinkTestStepKey: number = 0;\n    public action: eTestTableAction = null;\n    public tableKey: number = 0;\n    public sourceConnectionKey: number = 0;\n    public sourceSchema: string = null;\n    public sourceTableName: string = null;\n    public testConnectionKey: number = 0;\n    public testSchema: string = null;\n    public testTableName: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkTransform {\n    public datalinkKey: number = 0;\n    public position: number = 0;\n    public passThroughColumns: boolean = false;\n    public joinDatalinkTableKey: number = null;\n    public joinSortDatalinkColumnKey: number = null;\n    public nodeDatalinkColumnKey: number = null;\n    public transformType: eTransformType = null;\n    public transformClassName: string = null;\n    public transformAssemblyName: string = null;\n    public joinStrategy: eJoinStrategy = eJoinStrategy.Auto;\n    public joinDuplicateStrategy: eDuplicateStrategy = eDuplicateStrategy.All;\n    public joinNotFoundStrategy: eJoinNotFoundStrategy = eJoinNotFoundStrategy.Filter;\n    public entityStatus: EntityStatus = null;\n    public dexihDatalinkTransformItems: DexihDatalinkTransformItem[] = [];\n    public joinDatalinkTable: DexihDatalinkTable = null;\n    public joinSortDatalinkColumn: DexihDatalinkColumn = null;\n    public nodeDatalinkColumn: DexihDatalinkColumn = null;\n    public maxInputRows: number = 0;\n    public maxOutputRows: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihDatalinkTransformItem {\n    public datalinkTransformKey: number = 0;\n    public position: number = 0;\n    public transformItemType: eTransformItemType = null;\n    public targetDatalinkColumnKey: number = null;\n    public sourceDatalinkColumnKey: number = null;\n    public joinDatalinkColumnKey: number = null;\n    public filterDatalinkColumnKey: number = null;\n    public sourceValue: string = null;\n    public joinValue: string = null;\n    public filterValue: string = null;\n    public functionClassName: string = null;\n    public functionAssemblyName: string = null;\n    public functionMethodName: string = null;\n    public isGeneric: boolean = false;\n    public genericTypeCode: eTypeCode = null;\n    public functionCaching: eFunctionCaching = eFunctionCaching.NoCache;\n    public customFunctionKey: number = null;\n    public sortDirection: eSortDirection = null;\n    public filterCompare: eCompare = null;\n    public aggregate: eAggregate = null;\n    public seriesGrain: eSeriesGrain = null;\n    public seriesFill: boolean = false;\n    public seriesStart: string = null;\n    public seriesFinish: string = null;\n    public functionCode: string = null;\n    public functionResultCode: string = null;\n    public onError: eErrorAction = eErrorAction.Abend;\n    public onNull: eErrorAction = eErrorAction.Execute;\n    public notCondition: boolean = false;\n    public invalidAction: eInvalidAction = eInvalidAction.Abend;\n    public entityStatus: EntityStatus = null;\n    public dexihFunctionParameters: DexihFunctionParameter[] = [];\n    public sourceDatalinkColumn: DexihDatalinkColumn = null;\n    public targetDatalinkColumn: DexihDatalinkColumn = null;\n    public joinDatalinkColumn: DexihDatalinkColumn = null;\n    public filterDatalinkColumn: DexihDatalinkColumn = null;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihFileFormat {\n    public isDefault: boolean = false;\n    public matchHeaderRecord: boolean = true;\n    public skipHeaderRows: number = 0;\n    public allowComments: boolean = false;\n    public bufferSize: number = 2048;\n    public comment: string = '#';\n    public delimiter: string = ',';\n    public detectColumnCountChanges: boolean = false;\n    public hasHeaderRecord: boolean = true;\n    public ignoreHeaderWhiteSpace: boolean = false;\n    public ignoreReadingExceptions: boolean = false;\n    public ignoreQuotes: boolean = false;\n    public quote: string = '\"';\n    public quoteAllFields: boolean = false;\n    public quoteNoFields: boolean = false;\n    public skipEmptyRecords: boolean = false;\n    public trimFields: boolean = false;\n    public trimHeaders: boolean = false;\n    public willThrowOnMissingField: boolean = true;\n    public setWhiteSpaceCellsToNull: boolean = true;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihFunctionArrayParameter {\n    public functionParameterKey: number = 0;\n    public datalinkColumnKey: number = null;\n    public value: string = null;\n    public listOfValues: string[] = [];\n    public entityStatus: EntityStatus = null;\n    public datalinkColumn: DexihDatalinkColumn = null;\n    public position: number = 0;\n    public direction: eParameterDirection = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public allowNull: boolean = false;\n    public isGeneric: boolean = false;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihFunctionParameter {\n    public datalinkTransformItemKey: number = 0;\n    public arrayParameters: DexihFunctionArrayParameter[] = [];\n    public datalinkColumnKey: number = null;\n    public value: string = null;\n    public listOfValues: string[] = [];\n    public entityStatus: EntityStatus = null;\n    public datalinkColumn: DexihDatalinkColumn = null;\n    public position: number = 0;\n    public direction: eParameterDirection = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public allowNull: boolean = false;\n    public isGeneric: boolean = false;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihFunctionParameterBase {\n    public datalinkColumnKey: number = null;\n    public value: string = null;\n    public listOfValues: string[] = [];\n    public entityStatus: EntityStatus = null;\n    public datalinkColumn: DexihDatalinkColumn = null;\n    public position: number = 0;\n    public direction: eParameterDirection = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public allowNull: boolean = false;\n    public isGeneric: boolean = false;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihHub {\n    public hubKey: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public encryptionKey: string = null;\n    public sharedAccess: eSharedAccess = eSharedAccess.Public;\n    public dexihConnections: DexihConnection[] = [];\n    public dexihTables: DexihTable[] = [];\n    public dexihDatajobs: DexihDatajob[] = [];\n    public dexihDatalinks: DexihDatalink[] = [];\n    public dexihHubUsers: DexihHubUser[] = [];\n    public dexihFileFormats: DexihFileFormat[] = [];\n    public dexihHubVariables: DexihHubVariable[] = [];\n    public dexihDatalinkTests: DexihDatalinkTest[] = [];\n    public dexihViews: DexihView[] = [];\n    public dexihDashboards: DexihDashboard[] = [];\n    public dexihApis: DexihApi[] = [];\n    public dexihColumnValidations: DexihColumnValidation[] = [];\n    public dexihCustomFunctions: DexihCustomFunction[] = [];\n    public dexihRemoteAgentHubs: DexihRemoteAgentHub[] = [];\n    public dexihListOfValues: DexihListOfValues[] = [];\n    public dexihTags: DexihTag[] = [];\n    public dexihTagObjects: DexihTagObject[] = [];\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihHubEntity {\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihHubKeyEntity {\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihHubNamedEntity {\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihHubUser {\n    public hubKey: number = 0;\n    public userId: string = null;\n    public permission: ePermission = ePermission.None;\n    public receiveAlerts: boolean = false;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihHubVariable {\n    public valueRaw: string = null;\n    public value: string = null;\n    public isEncrypted: boolean = false;\n    public isEnvironmentVariable: boolean = false;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihIssue {\n    public type: eIssueType = eIssueType.Other;\n    public category: eIssueCategory = eIssueCategory.Other;\n    public severity: eIssueSeverity = eIssueSeverity.Critical;\n    public link: string = null;\n    public data: string = null;\n    public gitHubLink: string = null;\n    public isPrivate: boolean = true;\n    public userId: string = null;\n    public issueStatus: eIssueStatus = eIssueStatus.Open;\n    public dexihIssueComments: DexihIssueComment[] = [];\n    public userName: string = null;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihIssueComment {\n    public issueKey: number = 0;\n    public key: number = 0;\n    public comment: string = null;\n    public userId: string = null;\n    public userName: string = null;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihListOfValues {\n    public sourceType: eLOVObjectType = null;\n    public sourceTableKey: number = null;\n    public sourceDatalinkKey: number = null;\n    public selectQuery: SelectQuery = null;\n    public keyColumn: string = null;\n    public nameColumn: string = null;\n    public descriptionColumn: string = null;\n    public staticData: ListOfValuesItem[] = [];\n    public cache: boolean = false;\n    public cacheSeconds: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihParameterBase {\n    public position: number = 0;\n    public direction: eParameterDirection = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public allowNull: boolean = false;\n    public isGeneric: boolean = false;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihRemoteAgent {\n    public remoteAgentKey: number = 0;\n    public name: string = null;\n    public userId: string = null;\n    public restrictIp: boolean = false;\n    public allowExternalConnect: boolean = false;\n    public ipAddresses: string[] = [];\n    public remoteAgentId: string = null;\n    public hashedToken: string = null;\n    public lastLoginIpAddress: string = null;\n    public lastLoginDateTime: Date = null;\n    public dexihRemoteAgentHubs: DexihRemoteAgentHub[] = [];\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihRemoteAgentHub {\n    public remoteAgentHubKey: number = 0;\n    public remoteAgentKey: number = 0;\n    public isDefault: boolean = false;\n    public isAuthorized: boolean = false;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihTable {\n    public connectionKey: number = 0;\n    public schema: string = null;\n    public baseTableName: string = null;\n    public logicalName: string = null;\n    public tableType: eTableType = eTableType.Table;\n    public sourceConnectionName: string = null;\n    public fileFormatKey: number = null;\n    public rejectedTableName: string = null;\n    public queryString: string = null;\n    public rowPath: string = null;\n    public formatType: eTypeCode = eTypeCode.Json;\n    public sortColumnKeys: number[] = [];\n    public autoManageFiles: boolean = false;\n    public useCustomFilePaths: boolean = false;\n    public fileRootPath: string = null;\n    public fileIncomingPath: string = null;\n    public fileOutgoingPath: string = null;\n    public fileProcessedPath: string = null;\n    public fileRejectedPath: string = null;\n    public fileMatchPattern: string = null;\n    public restfulUri: string = null;\n    public maxImportLevels: number = 0;\n    public isVersioned: boolean = false;\n    public isShared: boolean = false;\n    public entityStatus: EntityStatus = new EntityStatus();\n    public fileSample: string = null;\n    public dexihTableColumns: DexihTableColumn[] = [];\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihTableColumn {\n    public tableKey: number = null;\n    public childColumns: DexihTableColumn[] = [];\n    public columnValidationKey: number = null;\n    public entityStatus: EntityStatus = null;\n    public position: number = 0;\n    public logicalName: string = null;\n    public columnGroup: string = null;\n    public dataType: eTypeCode = eTypeCode.String;\n    public maxLength: number = null;\n    public precision: number = null;\n    public isUnicode: boolean = null;\n    public scale: number = null;\n    public allowDbNull: boolean = false;\n    public deltaType: eDeltaType = eDeltaType.TrackingField;\n    public defaultValue: string = null;\n    public isUnique: boolean = false;\n    public isMandatory: boolean = false;\n    public isIncrementalUpdate: boolean = false;\n    public isInput: boolean = false;\n    public rank: number = 0;\n    public securityFlag: eSecurityFlag = eSecurityFlag.None;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihTag {\n    public color: string = null;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihTagObject {\n    public tagKey: number = 0;\n    public objectKey: number = 0;\n    public objectType: eSharedObjectType = null;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihTrigger {\n    public datajobKey: number = 0;\n    public startDate: Date = null;\n    public intervalTime: any = null;\n    public position: number = 0;\n    public daysOfWeek: eDayOfWeek[] = [];\n    public startTime: any = null;\n    public endTime: any = null;\n    public cronExpression: string = null;\n    public maxRecurs: number = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihView {\n    public viewType: eViewType = eViewType.Table;\n    public sourceTableKey: number = null;\n    public sourceDatalinkKey: number = null;\n    public sourceType: eDataObjectType = null;\n    public autoRefresh: boolean = true;\n    public inputValues: InputColumn[] = [];\n    public selectQuery: SelectQuery = null;\n    public chartConfig: ChartConfig = null;\n    public animateConfig: AnimateConfig = null;\n    public isShared: boolean = false;\n    public parameters: DexihViewParameter[] = [];\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DexihViewParameter {\n    public viewKey: number = 0;\n    public datalinkParameterKey: number = 0;\n    public value: any = null;\n    public listOfValuesKey: number = null;\n    public allowUserSelect: boolean = true;\n    public valueDesc: any = null;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class DownloadData {\n    public transformSettings: TransformSettings = null;\n    public cache: CacheManager = null;\n    public downloadObjects: DownloadObject[] = [];\n    public downloadFormat: eDownloadFormat = null;\n    public zipFiles: boolean = false;\n   }\n   \n   export class DownloadObject {\n    public objectType: eDataObjectType = null;\n    public objectKey: number = 0;\n    public query: SelectQuery = null;\n    public inputParameters: InputParameter[] = [];\n    public inputColumns: InputColumn[] = [];\n    public datalinkTransformKey: number = null;\n   }\n   \n   export class DownloadReadyBase {\n    public instanceId: string = null;\n    public securityToken: string = null;\n    public connectionId: string = null;\n    public reference: string = null;\n    public hubKey: number = 0;\n   }\n   \n   export class DownloadReadyMessage {\n    public url: string = null;\n    public instanceId: string = null;\n    public securityToken: string = null;\n    public connectionId: string = null;\n    public reference: string = null;\n    public hubKey: number = 0;\n   }\n   \n   export class DownloadUrl {\n    public url: string = null;\n    public downloadUrlType: eDownloadUrlType = null;\n    public isEncrypted: boolean = false;\n   }\n   \n   export class EntityStatus {\n    public lastStatus: eStatus = eStatus.None;\n    public message: string = '';\n    public isBusy: boolean = false;\n   }\n   \n   export class FileConfiguration {\n    public matchHeaderRecord: boolean = true;\n    public skipHeaderRows: number = 0;\n    public setWhiteSpaceCellsToNull: boolean = true;\n   }\n   \n   export class Filter {\n    public column1: TableColumn = null;\n    public value1: any = null;\n    public compareDataType: eTypeCode = eTypeCode.Unknown;\n    public column2: TableColumn = null;\n    public value2: any = null;\n    public operator: eCompare = eCompare.IsEqual;\n    public andOr: eAndOr = eAndOr.And;\n    public allowNull: boolean = false;\n   }\n   \n   export class FlatFile {\n    public autoManageFiles: boolean = false;\n    public useCustomFilePaths: boolean = false;\n    public fileRootPath: string = null;\n    public fileIncomingPath: string = '';\n    public fileOutgoingPath: string = '';\n    public fileProcessedPath: string = '';\n    public fileRejectedPath: string = '';\n    public fileMatchPattern: string = null;\n    public formatType: eTypeCode = eTypeCode.Unknown;\n    public fileConfiguration: FileConfiguration = new FileConfiguration();\n    public fileSample: string = null;\n    public rowPath: string = null;\n    public name: string = null;\n    public schema: string = null;\n    public sourceConnectionName: string = null;\n    public logicalName: string = null;\n    public description: string = null;\n    public baseTableName: string = null;\n    public tableType: eTableType = eTableType.Table;\n    public isVersioned: boolean = false;\n    public queryString: string = null;\n    public outputSortFields: Sort[] = [];\n    public columns: TableColumn[] = [];\n    public maxImportLevels: number = 10;\n   }\n   \n   export class FunctionParameter {\n    public parameterName: string = null;\n    public name: string = null;\n    public description: string = null;\n    public isGeneric: boolean = false;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public allowNull: boolean = false;\n    public rank: number = 0;\n    public isIndex: boolean = false;\n    public linkedName: string = null;\n    public linkedDescription: string = null;\n    public isLabel: boolean = false;\n    public listOfValues: string[] = [];\n    public defaultValue: string = null;\n    public isPassword: boolean = false;\n   }\n   \n   export class FunctionReference {\n    public functionType: eFunctionType = null;\n    public category: string = null;\n    public name: string = null;\n    public description: string = null;\n    public functionAssemblyName: string = null;\n    public functionClassName: string = null;\n    public functionMethodName: string = null;\n    public resultMethodName: string = null;\n    public resetMethodName: string = null;\n    public importMethodName: string = null;\n    public genericType: eGenericType = null;\n    public genericTypeDefault: eTypeCode = eTypeCode.Unknown;\n    public compare: eCompare = eCompare.IsEqual;\n    public isStandardFunction: boolean = false;\n    public returnParameters: FunctionParameter[] = [];\n    public inputParameters: FunctionParameter[] = [];\n    public outputParameters: FunctionParameter[] = [];\n    public resultReturnParameters: FunctionParameter[] = [];\n    public resultInputParameters: FunctionParameter[] = [];\n    public resultOutputParameters: FunctionParameter[] = [];\n   }\n   \n   export class HubUser {\n    public firstName: string = null;\n    public lastName: string = null;\n    public userName: string = null;\n    public id: string = null;\n    public permission: ePermission = ePermission.None;\n    public receiveAlerts: boolean = false;\n   }\n   \n   export class Import {\n    public hubKey: number = 0;\n    public hubVariables: ImportObject<DexihHubVariable>[] = [];\n    public datajobs: ImportObject<DexihDatajob>[] = [];\n    public datalinks: ImportObject<DexihDatalink>[] = [];\n    public connections: ImportObject<DexihConnection>[] = [];\n    public tables: ImportObject<DexihTable>[] = [];\n    public columnValidations: ImportObject<DexihColumnValidation>[] = [];\n    public fileFormats: ImportObject<DexihFileFormat>[] = [];\n    public customFunctions: ImportObject<DexihCustomFunction>[] = [];\n    public remoteAgentHubs: ImportObject<DexihRemoteAgentHub>[] = [];\n    public datalinkTests: ImportObject<DexihDatalinkTest>[] = [];\n    public views: ImportObject<DexihView>[] = [];\n    public apis: ImportObject<DexihApi>[] = [];\n    public dashboards: ImportObject<DexihDashboard>[] = [];\n    public listOfValues: ImportObject<DexihListOfValues>[] = [];\n    public tags: ImportObject<DexihTag>[] = [];\n    public tagObjects: ImportObject<DexihTagObject>[] = [];\n    public warnings: string[] = [];\n   }\n   \n   export class ImportAction {\n    public objectType: eSharedObjectType = null;\n    public action: eImportAction = null;\n   }\n   \n   export class ImportObject<T> {\n    public item: T = null;\n    public importAction: eImportAction = null;\n   }\n   \n   export class InputColumn {\n    public datalinkKey: number = 0;\n    public datalinkName: string = null;\n    public name: string = null;\n    public logicalName: string = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public rank: number = 0;\n    public value: any = null;\n    public defaultValue: any = null;\n   }\n   \n   export class InputParameter {\n    public name: string = null;\n    public value: any = null;\n    public rank: number = 0;\n   }\n   \n   export class InputParameterBase {\n    public value: any = null;\n    public listOfValuesKey: number = null;\n    public allowUserSelect: boolean = true;\n    public valueDesc: any = null;\n    public rank: number = 0;\n    public name: string = null;\n    public description: string = null;\n    public key: number = 0;\n    public hubKey: number = 0;\n    public createDate: Date = null;\n    public updateDate: Date = null;\n    public isValid: boolean = true;\n   }\n   \n   export class InputParameters {\n   }\n   \n   export class InsertQuery {\n    public insertColumns: QueryColumn[] = [];\n   }\n   \n   export class ListOfValuesItem {\n    public key: string = null;\n    public name: string = null;\n    public description: string = null;\n   }\n   \n   export class LoggingSection {\n    public includeScopes: boolean = false;\n    public logLevel: LogLevelSection = new LogLevelSection();\n    public logFilePath: string = null;\n   }\n   \n   export class LoginModel {\n   }\n   \n   export class LogLevelSection {\n    public default: logLevel = logLevel.Information;\n    public system: logLevel = logLevel.Information;\n    public microsoft: logLevel = logLevel.Information;\n   }\n   \n   export class ManagedTask {\n    public success: boolean = false;\n    public message: string = null;\n    public taskId: string = null;\n    public originatorId: string = null;\n    public name: string = null;\n    public description: string = null;\n    public lastUpdate: Date = null;\n    public status: eManagedTaskStatus = eManagedTaskStatus.Created;\n    public category: string = null;\n    public categoryKey: number = 0;\n    public referenceKey: number = 0;\n    public referenceId: string = null;\n    public percentage: number = 0;\n    public counter: number = 0;\n    public concurrentTaskAction: eConcurrentTaskAction = eConcurrentTaskAction.Abend;\n    public stepName: string = null;\n    public startTime: Date = null;\n    public endTime: Date = null;\n    public triggers: ManagedTaskTrigger[] = [];\n    public fileWatchers: ManagedTaskFileWatcher[] = [];\n    public nextTriggerTime: Date = null;\n    public runCount: number = 0;\n    public dependentTaskIds: string[] = [];\n    public dependenciesMet: boolean = true;\n    public data: any = null;\n    public exceptionDetails: string = '';\n   }\n   \n   export class ManagedTaskFileWatcher {\n    public path: string = null;\n    public filter: string = null;\n    public isStarted: boolean = false;\n   }\n   \n   export class ManagedTaskProgressItem {\n    public stepName: string = null;\n    public percentage: number = 0;\n    public counter: number = 0;\n   }\n   \n   export class ManagedTaskTrigger {\n    public startDate: Date = null;\n    public endDate: Date = null;\n    public intervalType: eIntervalType = eIntervalType.Interval;\n    public intervalTime: any = null;\n    public daysOfWeek: eDayOfWeek[] = [];\n    public daysOfMonth: number[] = [];\n    public weeksOfMonth: eWeekOfMonth[] = [];\n    public skipDates: Date[] = [];\n    public startTime: any = null;\n    public endTime: any = null;\n    public maxRecurs: number = 1;\n    public details: string = 'Error: Interval specified, however no interval time set.\\n';\n   }\n   \n   export class NamingStandards {\n   }\n   \n   export class NetworkSection {\n    public externalDownloadUrl: string = null;\n    public localIpAddress: string = null;\n    public localPort: number = null;\n    public proxyUrl: string = null;\n    public downloadPort: number = 33944;\n    public enforceHttps: boolean = true;\n    public autoGenerateCertificate: boolean = true;\n    public dynamicDomain: string = 'dexih.com';\n    public certificateFilename: string = null;\n    public certificatePassword: string = null;\n    public enableUPnP: boolean = true;\n   }\n   \n   export class ParameterArray {\n    public name: string = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public rank: number = 0;\n   }\n   \n   export class ParameterColumn {\n    public name: string = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public rank: number = 0;\n    public value: any = null;\n   }\n   \n   export class ParameterJoinColumn {\n    public name: string = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public rank: number = 0;\n    public value: any = null;\n   }\n   \n   export class ParameterOutputColumn {\n    public name: string = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public rank: number = 0;\n    public value: any = null;\n   }\n   \n   export class Parameters {\n   }\n   \n   export class ParameterValue {\n    public name: string = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public rank: number = 0;\n    public value: any = null;\n   }\n   \n   export class PermissionsSection {\n    public allowLocalFiles: boolean = true;\n    public allowAllPaths: boolean = false;\n    public allowedPaths: string[] = [];\n    public allowAllHubs: boolean = true;\n    public allowedHubs: number[] = [];\n   }\n   \n   export class PluginsSection {\n    public mLNet: boolean = false;\n    public excel: boolean = false;\n    public oracle: boolean = false;\n    public dB2: boolean = false;\n    public mongo: boolean = false;\n   }\n   \n   export class PrivacySection {\n    public allowDataDownload: boolean = true;\n    public allowDataUpload: boolean = true;\n    public allowLanAccess: boolean = true;\n    public allowExternalAccess: boolean = true;\n    public allowProxy: boolean = true;\n   }\n   \n   export class QueryColumn {\n    public column: TableColumn = null;\n    public value: any = null;\n   }\n   \n   export class RegisterModel {\n    public provider: eLoginProvider = eLoginProvider.Dexih;\n    public userName: string = null;\n    public email: string = null;\n    public code: string = null;\n    public password: string = null;\n    public firstname: string = null;\n    public lastname: string = null;\n    public subscription: boolean = false;\n    public terms: boolean = false;\n    public authenticationToken: string = null;\n   }\n   \n   export class RemoteAgentProperties {\n    public name: string = null;\n    public ipAddress: string = null;\n    public securityToken: string = null;\n    public remoteAgentKey: number = 0;\n    public encryptionKey: string = null;\n    public userId: string = null;\n    public connectionId: string = null;\n    public namingStandards: string[] = [];\n    public downloadUrls: DownloadUrl[] = [];\n   }\n   \n   export class RemoteAgentSettings {\n    public embedUserName: boolean = false;\n    public environment: eEnvironment = null;\n    public logLevel: logLevel = logLevel.Trace;\n    public remoteApplicationSettings: RemoteAgentSettingsSubset = null;\n   }\n   \n   export class RemoteAgentSettingsSubset {\n    public allowedHubs: number[] = [];\n    public allowedPaths: string[] = [];\n    public allowAllHubs: boolean = true;\n    public allowAllPaths: boolean = true;\n    public allowDownload: boolean = true;\n    public allowExternalAccess: boolean = true;\n    public allowLanAccess: boolean = true;\n    public allowLocalFiles: boolean = true;\n    public allowProxy: boolean = true;\n    public allowUpload: boolean = true;\n    public autoGenerateCertificate: boolean = true;\n    public autoSchedule: boolean = true;\n    public autoUpgrade: boolean = true;\n    public downloadPort: number = 33944;\n    public enableUPnP: boolean = true;\n    public encryptionKey: string = null;\n    public enforceHttps: boolean = true;\n    public externalDownloadUrl: string = null;\n    public firstRun: boolean = false;\n    public name: string = null;\n    public preRelease: boolean = false;\n    public remoteAgentId: string = null;\n    public user: string = null;\n    public userToken: string = null;\n    public webServer: string = null;\n    public mLNet: boolean = false;\n    public excel: boolean = false;\n    public oracle: boolean = false;\n    public dB2: boolean = false;\n    public mongo: boolean = false;\n    public smtpServer: string = null;\n    public smtpUserName: string = null;\n    public smtpPassword: string = null;\n    public smtpPort: number = 25;\n    public enableSsl: boolean = true;\n    public fromEmail: string = null;\n    public adminEmails: string[] = [];\n    public alertOnShutdown: boolean = false;\n    public alertOnCritical: boolean = false;\n   }\n   \n   export class RemoteAgentStatus {\n    public activeApis: ApiData[] = [];\n    public activeDatajobs: ManagedTask[] = [];\n    public activeDatalinks: ManagedTask[] = [];\n    public activeDatalinkTests: ManagedTask[] = [];\n    public previousDatajobs: ManagedTask[] = [];\n    public previousDatalinks: ManagedTask[] = [];\n    public previousDatalinkTests: ManagedTask[] = [];\n    public remoteLibraries: RemoteLibraries = null;\n    public requiresUpgrade: boolean = false;\n   }\n   \n   export class RemoteLibraries {\n    public functions: FunctionReference[] = [];\n    public connections: ConnectionReference[] = [];\n    public transforms: TransformReference[] = [];\n   }\n   \n   export class RemoteMessage {\n    public messageId: string = null;\n    public securityToken: string = null;\n    public method: string = null;\n    public hubKey: number = 0;\n    public timeOut: number = null;\n    public hubVariables: DexihHubVariable[] = [];\n    public clientConnectionId: string = null;\n    public downloadUrl: DownloadUrl = null;\n    public value: any[] = [];\n    public success: boolean = true;\n    public message: string = null;\n    public exceptionDetails: string = null;\n   }\n   \n   export class RemoteSettings {\n    public appSettings: AppSettingsSection = new AppSettingsSection();\n    public systemSettings: SystemSettingsSection = new SystemSettingsSection();\n    public logging: LoggingSection = new LoggingSection();\n    public runtime: RuntimeSection = new RuntimeSection();\n    public network: NetworkSection = new NetworkSection();\n    public privacy: PrivacySection = new PrivacySection();\n    public permissions: PermissionsSection = new PermissionsSection();\n    public namingStandards: string[] = [];\n    public plugins: PluginsSection = new PluginsSection();\n    public alerts: any = null;\n   }\n   \n   export class RenewSslCertificateModel {\n    public domain: string = null;\n    public password: string = null;\n   }\n   \n   export class ResponseMessage {\n    public messageId: string = null;\n    public securityToken: string = null;\n    public success: boolean = false;\n    public message: string = null;\n    public exceptionDetails: string = null;\n   }\n   \n   export class RuntimeSection {\n    public configDirectory: string = null;\n    public appSettingsPath: string = null;\n    public password: string = null;\n    public localIpAddress: string = null;\n    public externalIpAddress: string = null;\n    public defaultProxyUrl: string = null;\n    public remoteAgentKey: number = 0;\n    public userHash: string = null;\n    public version: string = null;\n    public latestVersion: string = null;\n    public latestDownloadUrl: string = null;\n    public generateUserToken: boolean = false;\n    public saveSettings: boolean = false;\n    public doUpgrade: boolean = false;\n   }\n   \n   export class SelectColumn {\n    public column: TableColumn = null;\n    public aggregate: eAggregate = eAggregate.None;\n    public outputColumn: TableColumn = null;\n   }\n   \n   export class SelectQuery {\n    public columns: SelectColumn[] = [];\n    public tableName: string = null;\n    public filters: Filter[] = [];\n    public sorts: Sort[] = [];\n    public groups: TableColumn[] = [];\n    public groupFilters: Filter[] = [];\n    public joins: any[] = [];\n    public rows: number = -1;\n    public inputColumns: TableColumn[] = [];\n    public fileName: string = null;\n    public path: eFlatFilePath = eFlatFilePath.None;\n    public alias: string = null;\n   }\n   \n   export class SharedData {\n    public hubKey: number = 0;\n    public hubName: string = null;\n    public objectType: eDataObjectType = null;\n    public objectKey: number = 0;\n    public name: string = null;\n    public logicalName: string = null;\n    public description: string = null;\n    public updateDate: Date = null;\n    public inputColumns: InputColumn[] = [];\n    public parameters: InputParameterBase[] = [];\n    public parentParameters: InputParameter[] = [];\n    public query: SelectQuery = null;\n    public outputColumns: DexihColumnBase[] = [];\n    public tags: DexihTag[] = [];\n   }\n   \n   export class Sort {\n    public column: TableColumn = null;\n    public direction: eSortDirection = null;\n   }\n   \n   export class Sorts {\n   }\n   \n   export class SystemSettingsSection {\n    public maxAcknowledgeWait: number = 5000;\n    public responseTimeout: number = 1000000;\n    public cancelDelay: number = 1000;\n    public encryptionIterations: number = 1000;\n    public maxPreviewDuration: number = 10000;\n    public maxConcurrentTasks: number = 50;\n    public maxUploadSize: number = 1000000000;\n    public socketTransportType: string = 'WebSockets';\n    public defaultPreviewRows: number = 100;\n    public maxPreviewRows: number = 5000;\n   }\n   \n   export class Table {\n    public name: string = null;\n    public schema: string = null;\n    public sourceConnectionName: string = null;\n    public logicalName: string = null;\n    public description: string = null;\n    public baseTableName: string = null;\n    public tableType: eTableType = eTableType.Table;\n    public isVersioned: boolean = false;\n    public queryString: string = null;\n    public outputSortFields: Sort[] = [];\n    public columns: TableColumn[] = [];\n    public maxImportLevels: number = 10;\n   }\n   \n   export class TableColumn {\n    public referenceTable: string = null;\n    public name: string = null;\n    public logicalName: string = null;\n    public description: string = null;\n    public dataType: eTypeCode = eTypeCode.Unknown;\n    public maxLength: number = null;\n    public columnGroup: string = null;\n    public rank: number = 0;\n    public precision: number = null;\n    public scale: number = null;\n    public allowDbNull: boolean = false;\n    public deltaType: eDeltaType = null;\n    public isUnicode: boolean = null;\n    public defaultValue: any = null;\n    public isUnique: boolean = false;\n    public isMandatory: boolean = false;\n    public securityFlag: eSecurityFlag = eSecurityFlag.None;\n    public isInput: boolean = false;\n    public isIncrementalUpdate: boolean = false;\n    public isParent: boolean = false;\n    public childColumns: TableColumn[] = [];\n   }\n   \n   export class TableColumns {\n   }\n   \n   export class TransformAttribute {\n    public name: string = null;\n    public description: string = null;\n    public transformType: eTransformType = null;\n   }\n   \n   export class TransformPerformance {\n    public transformName: string = null;\n    public action: string = null;\n    public rows: number = 0;\n    public seconds: number = 0;\n    public children: TransformPerformance[] = [];\n   }\n   \n   export class TransformProperties {\n    public name: string = null;\n    public transformType: eTransformType = null;\n    public transformName: string = null;\n    public selectQuery: SelectQuery = null;\n    public properties: any[] = [];\n    public rows: number = 0;\n    public seconds: number = 0;\n    public primaryProperties: TransformProperties = null;\n    public referenceProperties: TransformProperties = null;\n   }\n   \n   export class TransformReference {\n    public transformClassName: string = null;\n    public transformAssemblyName: string = null;\n    public transformType: eTransformType = null;\n    public name: string = null;\n    public description: string = null;\n   }\n   \n   export class TransformSettings {\n    public hubVariables: DexihHubVariable[] = [];\n    public inputParameters: InputParameterBase[] = [];\n    public remoteSettings: RemoteSettings = null;\n   }\n   \n   export class TransformWriterOptions {\n   }\n   \n   export class TransformWriterResult {\n    public auditKey: number = 0;\n    public auditType: string = null;\n    public referenceKey: number = 0;\n    public parentAuditKey: number = 0;\n    public referenceName: string = null;\n    public sourceTableKey: number = 0;\n    public sourceTableName: string = null;\n    public targetTableKey: number = 0;\n    public targetTableName: string = null;\n    public hubKey: number = 0;\n    public auditConnectionKey: number = 0;\n    public lastRowTotal: number = 0;\n    public lastMaxIncrementalValue: any = null;\n    public rowsPerProgressEvent: number = 1000;\n    public rowsTotal: number = 0;\n    public rowsCreated: number = 0;\n    public rowsUpdated: number = 0;\n    public rowsDeleted: number = 0;\n    public rowsPreserved: number = 0;\n    public rowsIgnored: number = 0;\n    public rowsRejected: number = 0;\n    public rowsFiltered: number = 0;\n    public rowsSorted: number = 0;\n    public rowsReadPrimary: number = 0;\n    public rowsReadReference: number = 0;\n    public passed: number = 0;\n    public failed: number = 0;\n    public readTicks: number = 0;\n    public writeTicks: number = 0;\n    public processingTicks: number = 0;\n    public maxIncrementalValue: any = null;\n    public maxSurrogateKey: number = 0;\n    public message: string = null;\n    public exceptionDetails: string = null;\n    public initializeTime: Date = null;\n    public scheduledTime: Date = null;\n    public startTime: Date = null;\n    public endTime: Date = null;\n    public lastUpdateTime: Date = null;\n    public triggerMethod: eTriggerMethod = eTriggerMethod.Manual;\n    public triggerInfo: string = null;\n    public performanceSummary: TransformPerformance[] = [];\n    public profileTableName: string = null;\n    public rejectTableName: string = null;\n    public isCurrent: boolean = true;\n    public isPrevious: boolean = false;\n    public isPreviousSuccess: boolean = false;\n    public childResults: TransformWriterResult[] = [];\n    public runStatus: eRunStatus = eRunStatus.Initialised;\n    public isRunning: boolean = true;\n    public isFinished: boolean = false;\n    public isScheduled: boolean = false;\n    public percentageComplete: number = 0;\n   }\n   \n   export class UpdateQuery {\n    public updateColumns: QueryColumn[] = [];\n    public filters: Filter[] = [];\n   }\n   \n   export class UserModel {\n    public email: string = null;\n    public userName: string = null;\n    public emailConfirmed: boolean = false;\n    public accessFailedCount: number = 0;\n    public id: string = null;\n    public lockoutEnabled: boolean = false;\n    public lockoutEnd: any = null;\n    public logins: any[] = [];\n    public roles: string[] = [];\n    public claims: any[] = [];\n    public twoFactorEnabled: boolean = false;\n    public phoneNumber: string = null;\n    public phoneNumberConfirmed: boolean = false;\n    public firstName: string = null;\n    public lastName: string = null;\n    public terms: boolean = false;\n    public subscription: boolean = false;\n    public inviteQuota: number = 0;\n    public hubQuota: number = 0;\n    public isRegistered: boolean = false;\n    public isInvited: boolean = false;\n    public isEnabled: boolean = false;\n   }\n   \n   export class ViewConfig {\n    public viewType: eViewType = null;\n    public chartConfig: ChartConfig = null;\n    public animateConfig: AnimateConfig = null;\n   }\n   \n   export class WebService {\n    public restfulUri: string = null;\n    public rowPath: string = null;\n    public formatType: eTypeCode = eTypeCode.Json;\n    public fileConfiguration: FileConfiguration = new FileConfiguration();\n    public name: string = null;\n    public schema: string = null;\n    public sourceConnectionName: string = null;\n    public logicalName: string = null;\n    public description: string = null;\n    public baseTableName: string = null;\n    public tableType: eTableType = eTableType.Table;\n    public isVersioned: boolean = false;\n    public queryString: string = null;\n    public outputSortFields: Sort[] = [];\n    public columns: TableColumn[] = [];\n    public maxImportLevels: number = 10;\n   }\n   \n   // auto generated enums\n   \n   export enum eAggregate {\n    None = 0,\n    Sum = 1,\n    Average = 2,\n    Min = 3,\n    Max = 4,\n    Count = 5,\n    First = 6,\n    Last = 7,\n   }\n   \n   export const eAggregateItems = [\n    {key: eAggregate.None, name: 'None'},\n    {key: eAggregate.Sum, name: 'Sum'},\n    {key: eAggregate.Average, name: 'Average'},\n    {key: eAggregate.Min, name: 'Min'},\n    {key: eAggregate.Max, name: 'Max'},\n    {key: eAggregate.Count, name: 'Count'},\n    {key: eAggregate.First, name: 'First'},\n    {key: eAggregate.Last, name: 'Last'},\n   ]\n   \n   export enum eAlertLevel {\n    None = 0,\n    Critical = 1,\n    Errors = 2,\n    All = 3,\n   }\n   \n   export const eAlertLevelItems = [\n    {key: eAlertLevel.None, name: 'None', description: 'No alerting.'},\n    {key: eAlertLevel.Critical, name: 'Critical', description: 'Alert on critical failures only.'},\n    {key: eAlertLevel.Errors, name: 'Errors', description: 'Alert on any errors.'},\n    {key: eAlertLevel.All, name: 'All', description: 'Alert on start/stop and errors'},\n   ]\n   \n   export enum eAndOr {\n    And = 1,\n    Or = 2,\n   }\n   \n   export const eAndOrItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eAndOr.And, name: 'And'},\n    {key: eAndOr.Or, name: 'Or'},\n   ]\n   \n   export enum eApiStatus {\n    Activated = 1,\n    Deactivated = 2,\n   }\n   \n   export const eApiStatusItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eApiStatus.Activated, name: 'Activated'},\n    {key: eApiStatus.Deactivated, name: 'Deactivated'},\n   ]\n   \n   export enum eChartType {\n    BarVertical = 1,\n    BarHorizontal = 2,\n    BarVertical2D = 3,\n    BarHorizontal2D = 4,\n    BarVerticalStacked = 5,\n    BarHorizontalStacked = 6,\n    BarVerticalNormalized = 7,\n    BarHorizontalNormalized = 8,\n    Pie = 9,\n    PieAdvanced = 10,\n    PieGrid = 11,\n    Line = 12,\n    Area = 13,\n    Polar = 14,\n    AreaStacked = 15,\n    AreaNormalized = 16,\n    Scatter = 17,\n    Error = 18,\n    Bubble = 19,\n    ForceDirected = 20,\n    HeatMap = 21,\n    TreeMap = 22,\n    Cards = 23,\n    Gauge = 24,\n    LinearGauge = 25,\n    Map = 26,\n    BarLineCombo = 27,\n   }\n   \n   export const eChartTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eChartType.BarVertical, name: 'BarVertical'},\n    {key: eChartType.BarHorizontal, name: 'BarHorizontal'},\n    {key: eChartType.BarVertical2D, name: 'BarVertical2D'},\n    {key: eChartType.BarHorizontal2D, name: 'BarHorizontal2D'},\n    {key: eChartType.BarVerticalStacked, name: 'BarVerticalStacked'},\n    {key: eChartType.BarHorizontalStacked, name: 'BarHorizontalStacked'},\n    {key: eChartType.BarVerticalNormalized, name: 'BarVerticalNormalized'},\n    {key: eChartType.BarHorizontalNormalized, name: 'BarHorizontalNormalized'},\n    {key: eChartType.Pie, name: 'Pie'},\n    {key: eChartType.PieAdvanced, name: 'PieAdvanced'},\n    {key: eChartType.PieGrid, name: 'PieGrid'},\n    {key: eChartType.Line, name: 'Line'},\n    {key: eChartType.Area, name: 'Area'},\n    {key: eChartType.Polar, name: 'Polar'},\n    {key: eChartType.AreaStacked, name: 'AreaStacked'},\n    {key: eChartType.AreaNormalized, name: 'AreaNormalized'},\n    {key: eChartType.Scatter, name: 'Scatter'},\n    {key: eChartType.Error, name: 'Error'},\n    {key: eChartType.Bubble, name: 'Bubble'},\n    {key: eChartType.ForceDirected, name: 'ForceDirected'},\n    {key: eChartType.HeatMap, name: 'HeatMap'},\n    {key: eChartType.TreeMap, name: 'TreeMap'},\n    {key: eChartType.Cards, name: 'Cards'},\n    {key: eChartType.Gauge, name: 'Gauge'},\n    {key: eChartType.LinearGauge, name: 'LinearGauge'},\n    {key: eChartType.Map, name: 'Map'},\n    {key: eChartType.BarLineCombo, name: 'BarLineCombo'},\n   ]\n   \n   export enum eCleanAction {\n    DefaultValue = 1,\n    Truncate = 2,\n    Blank = 3,\n    Null = 4,\n    OriginalValue = 5,\n    CleanValue = 6,\n   }\n   \n   export const eCleanActionItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eCleanAction.DefaultValue, name: 'DefaultValue'},\n    {key: eCleanAction.Truncate, name: 'Truncate'},\n    {key: eCleanAction.Blank, name: 'Blank'},\n    {key: eCleanAction.Null, name: 'Null'},\n    {key: eCleanAction.OriginalValue, name: 'OriginalValue'},\n    {key: eCleanAction.CleanValue, name: 'CleanValue'},\n   ]\n   \n   export enum eClientCommand {\n    Connect = 0,\n    Disconnect = 1,\n    Message = 2,\n    ActiveAgentUpdate = 3,\n    RemoteAgentUpdateKey = 4,\n    RemoteAgentDelete = 5,\n    RemoteAgentDeleteKey = 6,\n    HubUpdate = 7,\n    HubDelete = 8,\n    Task = 9,\n    FileDownload = 10,\n    DownloadReady = 11,\n    HubChange = 12,\n    HubError = 13,\n    DatalinkProgress = 14,\n    DatalinkStatus = 15,\n    DatajobProgress = 16,\n    DatajobStatus = 17,\n    DatalinkTestProgress = 18,\n    TableProgress = 19,\n    ApiStatus = 20,\n    ApiQuery = 21,\n    FlatFilesReady = 22,\n    Command = 23,\n   }\n   \n   export const eClientCommandItems = [\n    {key: eClientCommand.Connect, name: 'Connect'},\n    {key: eClientCommand.Disconnect, name: 'Disconnect'},\n    {key: eClientCommand.Message, name: 'Message'},\n    {key: eClientCommand.ActiveAgentUpdate, name: 'ActiveAgentUpdate'},\n    {key: eClientCommand.RemoteAgentUpdateKey, name: 'RemoteAgentUpdateKey'},\n    {key: eClientCommand.RemoteAgentDelete, name: 'RemoteAgentDelete'},\n    {key: eClientCommand.RemoteAgentDeleteKey, name: 'RemoteAgentDeleteKey'},\n    {key: eClientCommand.HubUpdate, name: 'HubUpdate'},\n    {key: eClientCommand.HubDelete, name: 'HubDelete'},\n    {key: eClientCommand.Task, name: 'Task'},\n    {key: eClientCommand.FileDownload, name: 'FileDownload'},\n    {key: eClientCommand.DownloadReady, name: 'DownloadReady'},\n    {key: eClientCommand.HubChange, name: 'HubChange'},\n    {key: eClientCommand.HubError, name: 'HubError'},\n    {key: eClientCommand.DatalinkProgress, name: 'DatalinkProgress'},\n    {key: eClientCommand.DatalinkStatus, name: 'DatalinkStatus'},\n    {key: eClientCommand.DatajobProgress, name: 'DatajobProgress'},\n    {key: eClientCommand.DatajobStatus, name: 'DatajobStatus'},\n    {key: eClientCommand.DatalinkTestProgress, name: 'DatalinkTestProgress'},\n    {key: eClientCommand.TableProgress, name: 'TableProgress'},\n    {key: eClientCommand.ApiStatus, name: 'ApiStatus'},\n    {key: eClientCommand.ApiQuery, name: 'ApiQuery'},\n    {key: eClientCommand.FlatFilesReady, name: 'FlatFilesReady'},\n    {key: eClientCommand.Command, name: 'Command'},\n   ]\n   \n   export enum eCompare {\n    IsEqual = 0,\n    GreaterThan = 1,\n    GreaterThanEqual = 2,\n    LessThan = 3,\n    LessThanEqual = 4,\n    NotEqual = 5,\n    IsIn = 6,\n    IsNull = 7,\n    IsNotNull = 8,\n    Like = 9,\n    IsNotIn = 10,\n   }\n   \n   export const eCompareItems = [\n    {key: eCompare.IsEqual, name: 'IsEqual'},\n    {key: eCompare.GreaterThan, name: 'GreaterThan'},\n    {key: eCompare.GreaterThanEqual, name: 'GreaterThanEqual'},\n    {key: eCompare.LessThan, name: 'LessThan'},\n    {key: eCompare.LessThanEqual, name: 'LessThanEqual'},\n    {key: eCompare.NotEqual, name: 'NotEqual'},\n    {key: eCompare.IsIn, name: 'IsIn'},\n    {key: eCompare.IsNull, name: 'IsNull'},\n    {key: eCompare.IsNotNull, name: 'IsNotNull'},\n    {key: eCompare.Like, name: 'Like'},\n    {key: eCompare.IsNotIn, name: 'IsNotIn'},\n   ]\n   \n   export enum eConcurrentTaskAction {\n    Parallel = 1,\n    Abend = 2,\n    Sequence = 3,\n   }\n   \n   export const eConcurrentTaskActionItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eConcurrentTaskAction.Parallel, name: 'Parallel'},\n    {key: eConcurrentTaskAction.Abend, name: 'Abend'},\n    {key: eConcurrentTaskAction.Sequence, name: 'Sequence'},\n   ]\n   \n   export enum eConnectionCategory {\n    SqlDatabase = 1,\n    NoSqlDatabase = 2,\n    DatabaseFile = 3,\n    File = 4,\n    WebService = 5,\n    Hub = 6,\n   }\n   \n   export const eConnectionCategoryItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eConnectionCategory.SqlDatabase, name: 'SqlDatabase'},\n    {key: eConnectionCategory.NoSqlDatabase, name: 'NoSqlDatabase'},\n    {key: eConnectionCategory.DatabaseFile, name: 'DatabaseFile'},\n    {key: eConnectionCategory.File, name: 'File'},\n    {key: eConnectionCategory.WebService, name: 'WebService'},\n    {key: eConnectionCategory.Hub, name: 'Hub'},\n   ]\n   \n   export enum eConnectionPurpose {\n    Source = 1,\n    Managed = 2,\n    Target = 3,\n   }\n   \n   export const eConnectionPurposeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eConnectionPurpose.Source, name: 'Source'},\n    {key: eConnectionPurpose.Managed, name: 'Managed'},\n    {key: eConnectionPurpose.Target, name: 'Target'},\n   ]\n   \n   export enum eDatalinkType {\n    General = 1,\n    Stage = 2,\n    Validate = 3,\n    Transform = 4,\n    Deliver = 5,\n    Publish = 6,\n    Share = 7,\n    Query = 8,\n   }\n   \n   export const eDatalinkTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eDatalinkType.General, name: 'General', description: 'Non-categorized general purpose datalink'},\n    {key: eDatalinkType.Stage, name: 'Stage', description: 'Staging - loads data into a central/interim database'},\n    {key: eDatalinkType.Validate, name: 'Validate', description: 'Validate - performs data validation and cleaning'},\n    {key: eDatalinkType.Transform, name: 'Transform', description: 'Transform - reshapes, aggregates data'},\n    {key: eDatalinkType.Deliver, name: 'Deliver', description: 'Deliver - prepares data for delivering to a system/database'},\n    {key: eDatalinkType.Publish, name: 'Publish', description: 'Publish - sends data to a target system/database'},\n    {key: eDatalinkType.Share, name: 'Share', description: 'Share - datalink designed to be shared with other users'},\n    {key: eDatalinkType.Query, name: 'Query', description: 'Query - datalink query used for data extracts or as a source for other datalinks'},\n   ]\n   \n   export enum eDataObjectType {\n    Table = 1,\n    Datalink = 2,\n    View = 3,\n    Dashboard = 4,\n    DashboardItem = 5,\n    Api = 6,\n   }\n   \n   export const eDataObjectTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eDataObjectType.Table, name: 'Table'},\n    {key: eDataObjectType.Datalink, name: 'Datalink'},\n    {key: eDataObjectType.View, name: 'View'},\n    {key: eDataObjectType.Dashboard, name: 'Dashboard'},\n    {key: eDataObjectType.DashboardItem, name: 'DashboardItem'},\n    {key: eDataObjectType.Api, name: 'Api'},\n   ]\n   \n   export enum eDataPrivacyStatus {\n    NotAllowed = 1,\n    Proxy = 2,\n    Lan = 3,\n    Internet = 4,\n   }\n   \n   export const eDataPrivacyStatusItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eDataPrivacyStatus.NotAllowed, name: 'NotAllowed'},\n    {key: eDataPrivacyStatus.Proxy, name: 'Proxy'},\n    {key: eDataPrivacyStatus.Lan, name: 'Lan'},\n    {key: eDataPrivacyStatus.Internet, name: 'Internet'},\n   ]\n   \n   export enum eDayOfWeek {\n    Sunday = 1,\n    Monday = 2,\n    Tuesday = 3,\n    Wednesday = 4,\n    Thursday = 5,\n    Friday = 6,\n    Saturday = 7,\n   }\n   \n   export const eDayOfWeekItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eDayOfWeek.Sunday, name: 'Sunday'},\n    {key: eDayOfWeek.Monday, name: 'Monday'},\n    {key: eDayOfWeek.Tuesday, name: 'Tuesday'},\n    {key: eDayOfWeek.Wednesday, name: 'Wednesday'},\n    {key: eDayOfWeek.Thursday, name: 'Thursday'},\n    {key: eDayOfWeek.Friday, name: 'Friday'},\n    {key: eDayOfWeek.Saturday, name: 'Saturday'},\n   ]\n   \n   export enum eDeltaType {\n    AutoIncrement = 1,\n    DbAutoIncrement = 2,\n    SourceSurrogateKey = 3,\n    ValidFromDate = 4,\n    ValidToDate = 5,\n    CreateDate = 6,\n    UpdateDate = 7,\n    CreateAuditKey = 8,\n    UpdateAuditKey = 9,\n    IsCurrentField = 10,\n    Version = 11,\n    NaturalKey = 12,\n    TrackingField = 13,\n    NonTrackingField = 14,\n    IgnoreField = 15,\n    ValidationStatus = 16,\n    RejectedReason = 17,\n    FileName = 18,\n    FileRowNumber = 19,\n    RowKey = 20,\n    PartitionKey = 21,\n    TimeStamp = 22,\n    DatabaseOperation = 23,\n    ResponseSuccess = 24,\n    ResponseData = 25,\n    ResponseStatus = 26,\n    ResponseSegment = 27,\n    Error = 28,\n    Url = 29,\n    UpdateReason = 30,\n    FileDate = 31,\n   }\n   \n   export const eDeltaTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eDeltaType.AutoIncrement, name: 'AutoIncrement'},\n    {key: eDeltaType.DbAutoIncrement, name: 'DbAutoIncrement'},\n    {key: eDeltaType.SourceSurrogateKey, name: 'SourceSurrogateKey'},\n    {key: eDeltaType.ValidFromDate, name: 'ValidFromDate'},\n    {key: eDeltaType.ValidToDate, name: 'ValidToDate'},\n    {key: eDeltaType.CreateDate, name: 'CreateDate'},\n    {key: eDeltaType.UpdateDate, name: 'UpdateDate'},\n    {key: eDeltaType.CreateAuditKey, name: 'CreateAuditKey'},\n    {key: eDeltaType.UpdateAuditKey, name: 'UpdateAuditKey'},\n    {key: eDeltaType.IsCurrentField, name: 'IsCurrentField'},\n    {key: eDeltaType.Version, name: 'Version'},\n    {key: eDeltaType.NaturalKey, name: 'NaturalKey'},\n    {key: eDeltaType.TrackingField, name: 'TrackingField'},\n    {key: eDeltaType.NonTrackingField, name: 'NonTrackingField'},\n    {key: eDeltaType.IgnoreField, name: 'IgnoreField'},\n    {key: eDeltaType.ValidationStatus, name: 'ValidationStatus'},\n    {key: eDeltaType.RejectedReason, name: 'RejectedReason'},\n    {key: eDeltaType.FileName, name: 'FileName'},\n    {key: eDeltaType.FileRowNumber, name: 'FileRowNumber'},\n    {key: eDeltaType.RowKey, name: 'RowKey'},\n    {key: eDeltaType.PartitionKey, name: 'PartitionKey'},\n    {key: eDeltaType.TimeStamp, name: 'TimeStamp'},\n    {key: eDeltaType.DatabaseOperation, name: 'DatabaseOperation'},\n    {key: eDeltaType.ResponseSuccess, name: 'ResponseSuccess'},\n    {key: eDeltaType.ResponseData, name: 'ResponseData'},\n    {key: eDeltaType.ResponseStatus, name: 'ResponseStatus'},\n    {key: eDeltaType.ResponseSegment, name: 'ResponseSegment'},\n    {key: eDeltaType.Error, name: 'Error'},\n    {key: eDeltaType.Url, name: 'Url'},\n    {key: eDeltaType.UpdateReason, name: 'UpdateReason'},\n    {key: eDeltaType.FileDate, name: 'FileDate'},\n   ]\n   \n   export enum eDownloadFormat {\n    Csv = 1,\n    Json = 2,\n    JsonCompact = 3,\n   }\n   \n   export const eDownloadFormatItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eDownloadFormat.Csv, name: 'Csv'},\n    {key: eDownloadFormat.Json, name: 'Json'},\n    {key: eDownloadFormat.JsonCompact, name: 'JsonCompact'},\n   ]\n   \n   export enum eDownloadUrlType {\n    Proxy = 1,\n    Direct = 2,\n   }\n   \n   export const eDownloadUrlTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eDownloadUrlType.Proxy, name: 'Proxy'},\n    {key: eDownloadUrlType.Direct, name: 'Direct'},\n   ]\n   \n   export enum eDuplicateStrategy {\n    Abend = 0,\n    First = 1,\n    Last = 2,\n    All = 3,\n    MergeValidDates = 4,\n   }\n   \n   export const eDuplicateStrategyItems = [\n    {key: eDuplicateStrategy.Abend, name: 'Abend', description: 'Abend Datalink'},\n    {key: eDuplicateStrategy.First, name: 'First', description: 'First Row'},\n    {key: eDuplicateStrategy.Last, name: 'Last', description: 'Last Row'},\n    {key: eDuplicateStrategy.All, name: 'All', description: 'All Rows'},\n    {key: eDuplicateStrategy.MergeValidDates, name: 'MergeValidDates', description: 'Merge Valid To/From'},\n   ]\n   \n   export enum eEnvironment {\n    Windows = 1,\n    Osx = 2,\n    Linux = 3,\n   }\n   \n   export const eEnvironmentItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eEnvironment.Windows, name: 'Windows', description: 'Windows 7/8/8.1/10'},\n    {key: eEnvironment.Osx, name: 'Osx', description: 'Mac OSX'},\n    {key: eEnvironment.Linux, name: 'Linux', description: 'Linux'},\n   ]\n   \n   export enum eErrorAction {\n    Abend = 1,\n    Null = 2,\n    Ignore = 3,\n    Execute = 4,\n   }\n   \n   export const eErrorActionItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eErrorAction.Abend, name: 'Abend'},\n    {key: eErrorAction.Null, name: 'Null'},\n    {key: eErrorAction.Ignore, name: 'Ignore'},\n    {key: eErrorAction.Execute, name: 'Execute'},\n   ]\n   \n   export enum eFailAction {\n    Continue = 1,\n    ContinueNonDependent = 2,\n    Abend = 3,\n   }\n   \n   export const eFailActionItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eFailAction.Continue, name: 'Continue'},\n    {key: eFailAction.ContinueNonDependent, name: 'ContinueNonDependent'},\n    {key: eFailAction.Abend, name: 'Abend'},\n   ]\n   \n   export enum eFlatFilePath {\n    None = 0,\n    Incoming = 1,\n    Outgoing = 2,\n    Processed = 3,\n    Rejected = 4,\n   }\n   \n   export const eFlatFilePathItems = [\n    {key: eFlatFilePath.None, name: 'None'},\n    {key: eFlatFilePath.Incoming, name: 'Incoming'},\n    {key: eFlatFilePath.Outgoing, name: 'Outgoing'},\n    {key: eFlatFilePath.Processed, name: 'Processed'},\n    {key: eFlatFilePath.Rejected, name: 'Rejected'},\n   ]\n   \n   export enum eFunctionCaching {\n    NoCache = 0,\n    EnableCache = 1,\n    CallOnce = 2,\n   }\n   \n   export const eFunctionCachingItems = [\n    {key: eFunctionCaching.NoCache, name: 'NoCache'},\n    {key: eFunctionCaching.EnableCache, name: 'EnableCache'},\n    {key: eFunctionCaching.CallOnce, name: 'CallOnce'},\n   ]\n   \n   export enum eFunctionType {\n    Map = 1,\n    Condition = 2,\n    Aggregate = 3,\n    Series = 4,\n    Rows = 5,\n    Validate = 6,\n    Profile = 7,\n    Sort = 8,\n    JoinCondition = 9,\n   }\n   \n   export const eFunctionTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eFunctionType.Map, name: 'Map'},\n    {key: eFunctionType.Condition, name: 'Condition'},\n    {key: eFunctionType.Aggregate, name: 'Aggregate'},\n    {key: eFunctionType.Series, name: 'Series'},\n    {key: eFunctionType.Rows, name: 'Rows'},\n    {key: eFunctionType.Validate, name: 'Validate'},\n    {key: eFunctionType.Profile, name: 'Profile'},\n    {key: eFunctionType.Sort, name: 'Sort'},\n    {key: eFunctionType.JoinCondition, name: 'JoinCondition'},\n   ]\n   \n   export enum eGenericType {\n    None = 1,\n    Numeric = 2,\n    All = 3,\n    String = 4,\n   }\n   \n   export const eGenericTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eGenericType.None, name: 'None'},\n    {key: eGenericType.Numeric, name: 'Numeric'},\n    {key: eGenericType.All, name: 'All'},\n    {key: eGenericType.String, name: 'String'},\n   ]\n   \n   export enum eImportAction {\n    Replace = 1,\n    New = 2,\n    Leave = 3,\n    Skip = 4,\n    Delete = 5,\n   }\n   \n   export const eImportActionItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eImportAction.Replace, name: 'Replace'},\n    {key: eImportAction.New, name: 'New'},\n    {key: eImportAction.Leave, name: 'Leave'},\n    {key: eImportAction.Skip, name: 'Skip'},\n    {key: eImportAction.Delete, name: 'Delete'},\n   ]\n   \n   export enum eIntervalType {\n    None = 0,\n    Once = 1,\n    Interval = 2,\n    Daily = 3,\n    Monthly = 4,\n   }\n   \n   export const eIntervalTypeItems = [\n    {key: eIntervalType.None, name: 'None'},\n    {key: eIntervalType.Once, name: 'Once'},\n    {key: eIntervalType.Interval, name: 'Interval'},\n    {key: eIntervalType.Daily, name: 'Daily'},\n    {key: eIntervalType.Monthly, name: 'Monthly'},\n   ]\n   \n   export enum eInvalidAction {\n    Pass = 1,\n    Clean = 2,\n    RejectClean = 3,\n    Reject = 4,\n    Discard = 5,\n    Abend = 6,\n   }\n   \n   export const eInvalidActionItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eInvalidAction.Pass, name: 'Pass'},\n    {key: eInvalidAction.Clean, name: 'Clean'},\n    {key: eInvalidAction.RejectClean, name: 'RejectClean'},\n    {key: eInvalidAction.Reject, name: 'Reject'},\n    {key: eInvalidAction.Discard, name: 'Discard'},\n    {key: eInvalidAction.Abend, name: 'Abend'},\n   ]\n   \n   export enum eIssueCategory {\n    Other = 0,\n    Web = 1,\n    Saving = 2,\n    RemoteAgent = 3,\n    Datalink = 4,\n    Datajob = 5,\n    Api = 6,\n    View = 7,\n    Dashboard = 8,\n    Security = 9,\n   }\n   \n   export const eIssueCategoryItems = [\n    {key: eIssueCategory.Other, name: 'Other', description: 'Other'},\n    {key: eIssueCategory.Web, name: 'Web', description: 'Web Interface'},\n    {key: eIssueCategory.Saving, name: 'Saving', description: 'Saving / loading / importing / exporting items'},\n    {key: eIssueCategory.RemoteAgent, name: 'RemoteAgent', description: 'Remote Agent Configuration / Connections'},\n    {key: eIssueCategory.Datalink, name: 'Datalink', description: 'Running / previewing datalink'},\n    {key: eIssueCategory.Datajob, name: 'Datajob', description: 'Scheduling / running datajob'},\n    {key: eIssueCategory.Api, name: 'Api', description: 'Using the API'},\n    {key: eIssueCategory.View, name: 'View', description: 'Using a View'},\n    {key: eIssueCategory.Dashboard, name: 'Dashboard', description: 'Using a Dashboard'},\n    {key: eIssueCategory.Security, name: 'Security', description: 'Login, permissions, and other security issues'},\n   ]\n   \n   export enum eIssueSeverity {\n    Critical = 0,\n    Major = 1,\n    Minor = 2,\n    Trivial = 3,\n   }\n   \n   export const eIssueSeverityItems = [\n    {key: eIssueSeverity.Critical, name: 'Critical', description: 'Critical (currently unusable)'},\n    {key: eIssueSeverity.Major, name: 'Major', description: 'Major (temporary workarounds exist)'},\n    {key: eIssueSeverity.Minor, name: 'Minor', description: 'Minor (productivity imporovments)'},\n    {key: eIssueSeverity.Trivial, name: 'Trivial', description: 'Trivial (Nice to Have)'},\n   ]\n   \n   export enum eIssueStatus {\n    Open = 0,\n    UnderReview = 1,\n    InProgress = 2,\n    Complete = 3,\n    Closed = 4,\n   }\n   \n   export const eIssueStatusItems = [\n    {key: eIssueStatus.Open, name: 'Open', description: 'Open - Issue has been opened.'},\n    {key: eIssueStatus.UnderReview, name: 'UnderReview', description: 'Under Review - Issue is under review by support team.'},\n    {key: eIssueStatus.InProgress, name: 'InProgress', description: 'In Progress - Issue is currently being worked on.'},\n    {key: eIssueStatus.Complete, name: 'Complete', description: 'Complete - Issue has been completed.'},\n    {key: eIssueStatus.Closed, name: 'Closed', description: 'Closed'},\n   ]\n   \n   export enum eIssueType {\n    Other = 0,\n    Bug = 1,\n    Request = 2,\n    Question = 3,\n    Feedback = 4,\n   }\n   \n   export const eIssueTypeItems = [\n    {key: eIssueType.Other, name: 'Other', description: 'Other'},\n    {key: eIssueType.Bug, name: 'Bug', description: 'Bug'},\n    {key: eIssueType.Request, name: 'Request', description: 'Feature Request'},\n    {key: eIssueType.Question, name: 'Question', description: 'Question'},\n    {key: eIssueType.Feedback, name: 'Feedback', description: 'General Feedback'},\n   ]\n   \n   export enum eJoinNotFoundStrategy {\n    Abend = 0,\n    NullJoin = 1,\n    Filter = 2,\n   }\n   \n   export const eJoinNotFoundStrategyItems = [\n    {key: eJoinNotFoundStrategy.Abend, name: 'Abend', description: 'Abend Datalink'},\n    {key: eJoinNotFoundStrategy.NullJoin, name: 'NullJoin', description: 'Add Null Join'},\n    {key: eJoinNotFoundStrategy.Filter, name: 'Filter', description: 'Filter Row'},\n   ]\n   \n   export enum eJoinStrategy {\n    Auto = 0,\n    Sorted = 1,\n    Hash = 2,\n    Database = 3,\n   }\n   \n   export const eJoinStrategyItems = [\n    {key: eJoinStrategy.Auto, name: 'Auto', description: 'Automatic'},\n    {key: eJoinStrategy.Sorted, name: 'Sorted', description: 'Pre-Sorted Join'},\n    {key: eJoinStrategy.Hash, name: 'Hash', description: 'In Memory (hash) join'},\n    {key: eJoinStrategy.Database, name: 'Database', description: 'Database Join'},\n   ]\n   \n   export enum eLoginProvider {\n    Dexih = 1,\n    Google = 2,\n    Microsoft = 3,\n   }\n   \n   export const eLoginProviderItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eLoginProvider.Dexih, name: 'Dexih'},\n    {key: eLoginProvider.Google, name: 'Google'},\n    {key: eLoginProvider.Microsoft, name: 'Microsoft'},\n   ]\n   \n   export enum eLOVObjectType {\n    Table = 1,\n    Datalink = 2,\n    Static = 3,\n   }\n   \n   export const eLOVObjectTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eLOVObjectType.Table, name: 'Table'},\n    {key: eLOVObjectType.Datalink, name: 'Datalink'},\n    {key: eLOVObjectType.Static, name: 'Static'},\n   ]\n   \n   export enum eManagedTaskStatus {\n    Created = 1,\n    FileWatching = 2,\n    Scheduled = 3,\n    Queued = 4,\n    Running = 5,\n    Cancelled = 6,\n    Error = 7,\n    Completed = 8,\n   }\n   \n   export const eManagedTaskStatusItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eManagedTaskStatus.Created, name: 'Created'},\n    {key: eManagedTaskStatus.FileWatching, name: 'FileWatching'},\n    {key: eManagedTaskStatus.Scheduled, name: 'Scheduled'},\n    {key: eManagedTaskStatus.Queued, name: 'Queued'},\n    {key: eManagedTaskStatus.Running, name: 'Running'},\n    {key: eManagedTaskStatus.Cancelled, name: 'Cancelled'},\n    {key: eManagedTaskStatus.Error, name: 'Error'},\n    {key: eManagedTaskStatus.Completed, name: 'Completed'},\n   ]\n   \n   export enum eMessageCommand {\n    Connect = 0,\n    Disconnect = 1,\n    MessageResponse = 2,\n    RemoteAgentUpdate = 3,\n    RemoteAgentDelete = 4,\n    RemoteAgentDeleteKey = 5,\n    HubUpdate = 6,\n    HubDelete = 7,\n    Task = 8,\n    FileDownload = 9,\n    DownloadReady = 10,\n    HubChange = 11,\n    HubError = 12,\n    DatalinkProgress = 13,\n    DatalinkStatus = 14,\n    DatajobProgress = 15,\n    DatajobStatus = 16,\n    DatalinkTestProgress = 17,\n    TableProgress = 18,\n    ApiStatus = 19,\n    ApiQuery = 20,\n    FlatFilesReady = 21,\n    RemoteMethod = 22,\n   }\n   \n   export const eMessageCommandItems = [\n    {key: eMessageCommand.Connect, name: 'Connect'},\n    {key: eMessageCommand.Disconnect, name: 'Disconnect'},\n    {key: eMessageCommand.MessageResponse, name: 'MessageResponse'},\n    {key: eMessageCommand.RemoteAgentUpdate, name: 'RemoteAgentUpdate'},\n    {key: eMessageCommand.RemoteAgentDelete, name: 'RemoteAgentDelete'},\n    {key: eMessageCommand.RemoteAgentDeleteKey, name: 'RemoteAgentDeleteKey'},\n    {key: eMessageCommand.HubUpdate, name: 'HubUpdate'},\n    {key: eMessageCommand.HubDelete, name: 'HubDelete'},\n    {key: eMessageCommand.Task, name: 'Task'},\n    {key: eMessageCommand.FileDownload, name: 'FileDownload'},\n    {key: eMessageCommand.DownloadReady, name: 'DownloadReady'},\n    {key: eMessageCommand.HubChange, name: 'HubChange'},\n    {key: eMessageCommand.HubError, name: 'HubError'},\n    {key: eMessageCommand.DatalinkProgress, name: 'DatalinkProgress'},\n    {key: eMessageCommand.DatalinkStatus, name: 'DatalinkStatus'},\n    {key: eMessageCommand.DatajobProgress, name: 'DatajobProgress'},\n    {key: eMessageCommand.DatajobStatus, name: 'DatajobStatus'},\n    {key: eMessageCommand.DatalinkTestProgress, name: 'DatalinkTestProgress'},\n    {key: eMessageCommand.TableProgress, name: 'TableProgress'},\n    {key: eMessageCommand.ApiStatus, name: 'ApiStatus'},\n    {key: eMessageCommand.ApiQuery, name: 'ApiQuery'},\n    {key: eMessageCommand.FlatFilesReady, name: 'FlatFilesReady'},\n    {key: eMessageCommand.RemoteMethod, name: 'RemoteMethod'},\n   ]\n   \n   export enum eParameterDirection {\n    Input = 1,\n    Output = 2,\n    ResultInput = 3,\n    ResultOutput = 4,\n    ReturnValue = 5,\n    ResultReturnValue = 6,\n    Join = 7,\n   }\n   \n   export const eParameterDirectionItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eParameterDirection.Input, name: 'Input'},\n    {key: eParameterDirection.Output, name: 'Output'},\n    {key: eParameterDirection.ResultInput, name: 'ResultInput'},\n    {key: eParameterDirection.ResultOutput, name: 'ResultOutput'},\n    {key: eParameterDirection.ReturnValue, name: 'ReturnValue'},\n    {key: eParameterDirection.ResultReturnValue, name: 'ResultReturnValue'},\n    {key: eParameterDirection.Join, name: 'Join'},\n   ]\n   \n   export enum ePermission {\n    None = 0,\n    Suspended = 1,\n    PublishReader = 2,\n    FullReader = 3,\n    User = 4,\n    Owner = 5,\n   }\n   \n   export const ePermissionItems = [\n    {key: ePermission.None, name: 'None', description: 'No access.'},\n    {key: ePermission.Suspended, name: 'Suspended', description: 'Suspended (banned from hub)'},\n    {key: ePermission.PublishReader, name: 'PublishReader', description: 'Publish Reader (only access shared)'},\n    {key: ePermission.FullReader, name: 'FullReader', description: 'Reader (read only access)'},\n    {key: ePermission.User, name: 'User', description: 'User (add/modify permission)'},\n    {key: ePermission.Owner, name: 'Owner', description: 'Owner (full permissions)'},\n   ]\n   \n   export enum eRunStatus {\n    Initialised = 1,\n    Scheduled = 2,\n    Started = 3,\n    Running = 4,\n    RunningErrors = 5,\n    Finished = 6,\n    FinishedErrors = 7,\n    Abended = 8,\n    Cancelled = 9,\n    NotRunning = 10,\n    Passed = 11,\n    Failed = 12,\n   }\n   \n   export const eRunStatusItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eRunStatus.Initialised, name: 'Initialised'},\n    {key: eRunStatus.Scheduled, name: 'Scheduled'},\n    {key: eRunStatus.Started, name: 'Started'},\n    {key: eRunStatus.Running, name: 'Running'},\n    {key: eRunStatus.RunningErrors, name: 'RunningErrors'},\n    {key: eRunStatus.Finished, name: 'Finished'},\n    {key: eRunStatus.FinishedErrors, name: 'FinishedErrors'},\n    {key: eRunStatus.Abended, name: 'Abended'},\n    {key: eRunStatus.Cancelled, name: 'Cancelled'},\n    {key: eRunStatus.NotRunning, name: 'NotRunning'},\n    {key: eRunStatus.Passed, name: 'Passed'},\n    {key: eRunStatus.Failed, name: 'Failed'},\n   ]\n   \n   export enum eSecurityFlag {\n    None = 0,\n    FastEncrypt = 1,\n    FastDecrypt = 2,\n    FastEncrypted = 3,\n    StrongEncrypt = 4,\n    StrongDecrypt = 5,\n    StrongEncrypted = 6,\n    OneWayHash = 7,\n    OneWayHashed = 8,\n    Hide = 9,\n   }\n   \n   export const eSecurityFlagItems = [\n    {key: eSecurityFlag.None, name: 'None'},\n    {key: eSecurityFlag.FastEncrypt, name: 'FastEncrypt'},\n    {key: eSecurityFlag.FastDecrypt, name: 'FastDecrypt'},\n    {key: eSecurityFlag.FastEncrypted, name: 'FastEncrypted'},\n    {key: eSecurityFlag.StrongEncrypt, name: 'StrongEncrypt'},\n    {key: eSecurityFlag.StrongDecrypt, name: 'StrongDecrypt'},\n    {key: eSecurityFlag.StrongEncrypted, name: 'StrongEncrypted'},\n    {key: eSecurityFlag.OneWayHash, name: 'OneWayHash'},\n    {key: eSecurityFlag.OneWayHashed, name: 'OneWayHashed'},\n    {key: eSecurityFlag.Hide, name: 'Hide'},\n   ]\n   \n   export enum eSeriesGrain {\n    Second = 1,\n    Minute = 2,\n    Hour = 3,\n    Day = 4,\n    Week = 5,\n    Month = 6,\n    Year = 7,\n    Number = 8,\n   }\n   \n   export const eSeriesGrainItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eSeriesGrain.Second, name: 'Second'},\n    {key: eSeriesGrain.Minute, name: 'Minute'},\n    {key: eSeriesGrain.Hour, name: 'Hour'},\n    {key: eSeriesGrain.Day, name: 'Day'},\n    {key: eSeriesGrain.Week, name: 'Week'},\n    {key: eSeriesGrain.Month, name: 'Month'},\n    {key: eSeriesGrain.Year, name: 'Year'},\n    {key: eSeriesGrain.Number, name: 'Number'},\n   ]\n   \n   export enum eSharedAccess {\n    Public = 1,\n    Registered = 2,\n    Reader = 3,\n   }\n   \n   export const eSharedAccessItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eSharedAccess.Public, name: 'Public', description: 'Shared data can be accessed by the public.'},\n    {key: eSharedAccess.Registered, name: 'Registered', description: 'Shared data can be accessed any registered user.'},\n    {key: eSharedAccess.Reader, name: 'Reader', description: 'Shared data can be accessed only by users with \"PublishReader\" permission.'},\n   ]\n   \n   export enum eSharedObjectType {\n    Connection = 1,\n    Table = 2,\n    FileFormat = 3,\n    Datalink = 4,\n    Datajob = 5,\n    RemoteAgent = 6,\n    ColumnValidation = 7,\n    HubVariable = 8,\n    CustomFunction = 9,\n    DatalinkTest = 10,\n    View = 11,\n    Api = 12,\n    Dashboard = 13,\n    ListOfValues = 14,\n    Tags = 15,\n    TagObjects = 16,\n   }\n   \n   export const eSharedObjectTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eSharedObjectType.Connection, name: 'Connection'},\n    {key: eSharedObjectType.Table, name: 'Table'},\n    {key: eSharedObjectType.FileFormat, name: 'FileFormat'},\n    {key: eSharedObjectType.Datalink, name: 'Datalink'},\n    {key: eSharedObjectType.Datajob, name: 'Datajob'},\n    {key: eSharedObjectType.RemoteAgent, name: 'RemoteAgent'},\n    {key: eSharedObjectType.ColumnValidation, name: 'ColumnValidation'},\n    {key: eSharedObjectType.HubVariable, name: 'HubVariable'},\n    {key: eSharedObjectType.CustomFunction, name: 'CustomFunction'},\n    {key: eSharedObjectType.DatalinkTest, name: 'DatalinkTest'},\n    {key: eSharedObjectType.View, name: 'View'},\n    {key: eSharedObjectType.Api, name: 'Api'},\n    {key: eSharedObjectType.Dashboard, name: 'Dashboard'},\n    {key: eSharedObjectType.ListOfValues, name: 'ListOfValues'},\n    {key: eSharedObjectType.Tags, name: 'Tags'},\n    {key: eSharedObjectType.TagObjects, name: 'TagObjects'},\n   ]\n   \n   export enum eSortDirection {\n    Ascending = 1,\n    Descending = 2,\n   }\n   \n   export const eSortDirectionItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eSortDirection.Ascending, name: 'Ascending'},\n    {key: eSortDirection.Descending, name: 'Descending'},\n   ]\n   \n   export enum eSourceType {\n    Datalink = 1,\n    Table = 2,\n    Rows = 3,\n    Function = 4,\n   }\n   \n   export const eSourceTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eSourceType.Datalink, name: 'Datalink'},\n    {key: eSourceType.Table, name: 'Table'},\n    {key: eSourceType.Rows, name: 'Rows'},\n    {key: eSourceType.Function, name: 'Function'},\n   ]\n   \n   export enum eStatus {\n    None = 1,\n    Ready = 2,\n    Imported = 3,\n    Updated = 4,\n    Added = 5,\n    Error = 6,\n   }\n   \n   export const eStatusItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eStatus.None, name: 'None'},\n    {key: eStatus.Ready, name: 'Ready'},\n    {key: eStatus.Imported, name: 'Imported'},\n    {key: eStatus.Updated, name: 'Updated'},\n    {key: eStatus.Added, name: 'Added'},\n    {key: eStatus.Error, name: 'Error'},\n   ]\n   \n   export enum eTableType {\n    Table = 1,\n    View = 2,\n    Query = 3,\n   }\n   \n   export const eTableTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eTableType.Table, name: 'Table'},\n    {key: eTableType.View, name: 'View'},\n    {key: eTableType.Query, name: 'Query'},\n   ]\n   \n   export enum eTestTableAction {\n    None = 1,\n    Truncate = 2,\n    DropCreate = 3,\n    TruncateCopy = 4,\n    DropCreateCopy = 5,\n   }\n   \n   export const eTestTableActionItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eTestTableAction.None, name: 'None'},\n    {key: eTestTableAction.Truncate, name: 'Truncate'},\n    {key: eTestTableAction.DropCreate, name: 'DropCreate'},\n    {key: eTestTableAction.TruncateCopy, name: 'TruncateCopy'},\n    {key: eTestTableAction.DropCreateCopy, name: 'DropCreateCopy'},\n   ]\n   \n   export enum eTransformItemType {\n    BuiltInFunction = 1,\n    CustomFunction = 2,\n    ColumnPair = 3,\n    JoinPair = 4,\n    Sort = 5,\n    Column = 6,\n    FilterPair = 7,\n    AggregatePair = 8,\n    Series = 9,\n    JoinNode = 10,\n    GroupNode = 11,\n    Node = 12,\n    UnGroup = 13,\n   }\n   \n   export const eTransformItemTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eTransformItemType.BuiltInFunction, name: 'BuiltInFunction'},\n    {key: eTransformItemType.CustomFunction, name: 'CustomFunction'},\n    {key: eTransformItemType.ColumnPair, name: 'ColumnPair'},\n    {key: eTransformItemType.JoinPair, name: 'JoinPair'},\n    {key: eTransformItemType.Sort, name: 'Sort'},\n    {key: eTransformItemType.Column, name: 'Column'},\n    {key: eTransformItemType.FilterPair, name: 'FilterPair'},\n    {key: eTransformItemType.AggregatePair, name: 'AggregatePair'},\n    {key: eTransformItemType.Series, name: 'Series'},\n    {key: eTransformItemType.JoinNode, name: 'JoinNode'},\n    {key: eTransformItemType.GroupNode, name: 'GroupNode'},\n    {key: eTransformItemType.Node, name: 'Node'},\n    {key: eTransformItemType.UnGroup, name: 'UnGroup'},\n   ]\n   \n   export enum eTransformType {\n    Mapping = 1,\n    Filter = 2,\n    Sort = 3,\n    Group = 4,\n    Aggregate = 5,\n    Series = 6,\n    Join = 7,\n    Rows = 8,\n    Lookup = 9,\n    Validation = 10,\n    Delta = 11,\n    Concatenate = 12,\n    Profile = 13,\n    Internal = 14,\n   }\n   \n   export const eTransformTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eTransformType.Mapping, name: 'Mapping'},\n    {key: eTransformType.Filter, name: 'Filter'},\n    {key: eTransformType.Sort, name: 'Sort'},\n    {key: eTransformType.Group, name: 'Group'},\n    {key: eTransformType.Aggregate, name: 'Aggregate'},\n    {key: eTransformType.Series, name: 'Series'},\n    {key: eTransformType.Join, name: 'Join'},\n    {key: eTransformType.Rows, name: 'Rows'},\n    {key: eTransformType.Lookup, name: 'Lookup'},\n    {key: eTransformType.Validation, name: 'Validation'},\n    {key: eTransformType.Delta, name: 'Delta'},\n    {key: eTransformType.Concatenate, name: 'Concatenate'},\n    {key: eTransformType.Profile, name: 'Profile'},\n    {key: eTransformType.Internal, name: 'Internal'},\n   ]\n   \n   export enum eTransformWriterMethod {\n    Bulk = 1,\n    Transaction = 2,\n   }\n   \n   export const eTransformWriterMethodItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eTransformWriterMethod.Bulk, name: 'Bulk'},\n    {key: eTransformWriterMethod.Transaction, name: 'Transaction'},\n   ]\n   \n   export enum eTriggerMethod {\n    NotTriggered = 1,\n    Manual = 2,\n    Schedule = 3,\n    FileWatcher = 4,\n    External = 5,\n    Datajob = 6,\n   }\n   \n   export const eTriggerMethodItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eTriggerMethod.NotTriggered, name: 'NotTriggered'},\n    {key: eTriggerMethod.Manual, name: 'Manual'},\n    {key: eTriggerMethod.Schedule, name: 'Schedule'},\n    {key: eTriggerMethod.FileWatcher, name: 'FileWatcher'},\n    {key: eTriggerMethod.External, name: 'External'},\n    {key: eTriggerMethod.Datajob, name: 'Datajob'},\n   ]\n   \n   export enum eTypeCode {\n    Unknown = 0,\n    Binary = 1,\n    Byte = 2,\n    Char = 3,\n    SByte = 4,\n    UInt16 = 5,\n    UInt32 = 6,\n    UInt64 = 7,\n    Int16 = 8,\n    Int32 = 9,\n    Int64 = 10,\n    Decimal = 11,\n    Double = 12,\n    Single = 13,\n    String = 14,\n    Text = 15,\n    Boolean = 16,\n    DateTime = 17,\n    Time = 18,\n    Guid = 19,\n    Json = 20,\n    Xml = 21,\n    Enum = 22,\n    CharArray = 23,\n    Object = 24,\n    Node = 25,\n    Geometry = 26,\n    Date = 27,\n   }\n   \n   export const eTypeCodeItems = [\n    {key: eTypeCode.Unknown, name: 'Unknown'},\n    {key: eTypeCode.Binary, name: 'Binary'},\n    {key: eTypeCode.Byte, name: 'Byte'},\n    {key: eTypeCode.Char, name: 'Char'},\n    {key: eTypeCode.SByte, name: 'SByte'},\n    {key: eTypeCode.UInt16, name: 'UInt16'},\n    {key: eTypeCode.UInt32, name: 'UInt32'},\n    {key: eTypeCode.UInt64, name: 'UInt64'},\n    {key: eTypeCode.Int16, name: 'Int16'},\n    {key: eTypeCode.Int32, name: 'Int32'},\n    {key: eTypeCode.Int64, name: 'Int64'},\n    {key: eTypeCode.Decimal, name: 'Decimal'},\n    {key: eTypeCode.Double, name: 'Double'},\n    {key: eTypeCode.Single, name: 'Single'},\n    {key: eTypeCode.String, name: 'String'},\n    {key: eTypeCode.Text, name: 'Text'},\n    {key: eTypeCode.Boolean, name: 'Boolean'},\n    {key: eTypeCode.DateTime, name: 'DateTime'},\n    {key: eTypeCode.Time, name: 'Time'},\n    {key: eTypeCode.Guid, name: 'Guid'},\n    {key: eTypeCode.Json, name: 'Json'},\n    {key: eTypeCode.Xml, name: 'Xml'},\n    {key: eTypeCode.Enum, name: 'Enum'},\n    {key: eTypeCode.CharArray, name: 'CharArray'},\n    {key: eTypeCode.Object, name: 'Object'},\n    {key: eTypeCode.Node, name: 'Node'},\n    {key: eTypeCode.Geometry, name: 'Geometry'},\n    {key: eTypeCode.Date, name: 'Date'},\n   ]\n   \n   export enum eUpdateStrategy {\n    Reload = 1,\n    Append = 2,\n    AppendUpdate = 3,\n    AppendUpdateDelete = 4,\n    AppendUpdatePreserve = 5,\n    AppendUpdateDeletePreserve = 6,\n   }\n   \n   export const eUpdateStrategyItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eUpdateStrategy.Reload, name: 'Reload'},\n    {key: eUpdateStrategy.Append, name: 'Append'},\n    {key: eUpdateStrategy.AppendUpdate, name: 'AppendUpdate'},\n    {key: eUpdateStrategy.AppendUpdateDelete, name: 'AppendUpdateDelete'},\n    {key: eUpdateStrategy.AppendUpdatePreserve, name: 'AppendUpdatePreserve'},\n    {key: eUpdateStrategy.AppendUpdateDeletePreserve, name: 'AppendUpdateDeletePreserve'},\n   ]\n   \n   export enum eViewType {\n    Table = 1,\n    Chart = 2,\n   }\n   \n   export const eViewTypeItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eViewType.Table, name: 'Table'},\n    {key: eViewType.Chart, name: 'Chart'},\n   ]\n   \n   export enum eWeekOfMonth {\n    First = 1,\n    Second = 2,\n    Third = 3,\n    Fourth = 4,\n    Last = 5,\n   }\n   \n   export const eWeekOfMonthItems = [\n    {key: 0, name: 'Unknown'},\n    {key: eWeekOfMonth.First, name: 'First'},\n    {key: eWeekOfMonth.Second, name: 'Second'},\n    {key: eWeekOfMonth.Third, name: 'Third'},\n    {key: eWeekOfMonth.Fourth, name: 'Fourth'},\n    {key: eWeekOfMonth.Last, name: 'Last'},\n   ]\n   \n   export enum logLevel {\n    Trace = 0,\n    Debug = 1,\n    Information = 2,\n    Warning = 3,\n    Error = 4,\n    Critical = 5,\n    None = 6,\n   }\n   \n   export const logLevelItems = [\n    {key: logLevel.Trace, name: 'Trace'},\n    {key: logLevel.Debug, name: 'Debug'},\n    {key: logLevel.Information, name: 'Information'},\n    {key: logLevel.Warning, name: 'Warning'},\n    {key: logLevel.Error, name: 'Error'},\n    {key: logLevel.Critical, name: 'Critical'},\n    {key: logLevel.None, name: 'None'},\n   ]\n   \n   ","import { NgModule, ModuleWithProviders} from '@angular/core';\nimport { CommonModule} from '@angular/common';\nimport { FormsModule} from '@angular/forms';\nimport { RouterModule} from '@angular/router';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { DTableModule} from 'ngx-d-table';\nimport { DComponentsModule } from 'ngx-d-components';\nimport { DMarkdownModule } from 'ngx-d-markdown';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { GridsterModule} from 'angular-gridster2';\n\nimport { LayoutService} from './layout/layout.service';\nimport { UtilsModule} from './utils/utils.module';\nimport { DexihMessageModule } from './ui/dexihMessage';\nimport { DexihFormControlsModule } from './ui/dexihFormControls';\nimport { DexihHelpModule } from './help/dexih-help.module';\nimport { DexihIconsModule } from './ui/icons'\nimport { QueryBuilderModule } from './ui/queryBuilder/query-builder.module';\nimport { ChartBuilderModule } from './ui/charts/charts.module';\nimport { DexihSupportOptionsModule } from './ui/supportOptions/support-options.module'\nimport { SharedDataModule} from './ui/sharedData/shared-data.module';\nimport { SeriesAnimateModule } from './ui/seriesAnimate/series-animate.module';\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, RouterModule, HttpClientModule,\n\n    DragDropModule,\n\n    DMarkdownModule,\n    DComponentsModule,\n    DTableModule,\n    NgxChartsModule,\n    GridsterModule,\n\n    DexihMessageModule,\n    DexihFormControlsModule,\n    DexihHelpModule,\n    DexihIconsModule,\n    QueryBuilderModule,\n    ChartBuilderModule,\n    DexihSupportOptionsModule,\n    SharedDataModule,\n    SeriesAnimateModule\n  ],\n  declarations: [\n  ],\n  exports: [\n    CommonModule, FormsModule, RouterModule, DragDropModule,\n\n    // DMarkdownModule,\n    DComponentsModule,\n    DTableModule,\n    NgxChartsModule,\n    GridsterModule,\n\n    UtilsModule,\n    DexihMessageModule,\n    DexihFormControlsModule,\n    DexihHelpModule,\n    DexihIconsModule,\n    QueryBuilderModule,\n    ChartBuilderModule,\n    DexihSupportOptionsModule,\n    SeriesAnimateModule\n  ],\n  providers: [\n    LayoutService,\n    HttpClientModule\n  ]\n\n})\nexport class SharedModule {\n\n  static forRoot(): ModuleWithProviders<SharedModule> {\n    return {\n      ngModule: SharedModule,\n      providers: [\n        LayoutService\n      ]\n    };\n  }\n}\n","// Generate more colorsets at https://medialab.github.io/iwanthue/\n\nexport let colorSets = [\n    {\n        name: 'bright',\n        selectable: true,\n        group: 'Ordinal',\n        domain: [\n            '#00d352',\n            '#c300dc',\n            '#00bd00',\n            '#000371',\n            '#56ff75',\n            '#e944c1',\n            '#67c436',\n            '#005fd8',\n            '#c2cc33',\n            '#548eff',\n            '#da9d00',\n            '#0093ff',\n            '#ff871a',\n            '#16c1ff',\n            '#b80006',\n            '#00eea2',\n            '#ff6bba',\n            '#23b54f',\n            '#95003e',\n            '#58f7ba',\n            '#330328',\n            '#ffc649',\n            '#002f5f',\n            '#459c3a',\n            '#9375c3',\n            '#004e00',\n            '#6d1c4d',\n            '#7aa84b',\n            '#0097d6',\n            '#905e00',\n            '#00aed4',\n            '#415e00',\n            '#008aa0',\n            '#464500',\n            '#00af8b',\n            '#003400',\n            '#796d39',\n            '#00724f',\n            '#003500',\n            '#003700'\n        ]\n    },\n    {\n        name: 'pastel',\n        selectable: true,\n        group: 'Ordinal',\n        domain: ['#7cd7d5',\n            '#ecabb7',\n            '#5ecee9',\n            '#eab494',\n            '#98c2ec',\n            '#b5d08d',\n            '#e1b0dd',\n            '#9ab474',\n            '#bcb8ec',\n            '#c6eeb6',\n            '#80b6aa',\n            '#ece6af',\n            '#9bd1c6',\n            '#adaf74',\n            '#acefd7',\n            '#d3c195',\n            '#92ca9c',\n            '#c2c387',\n            '#98c3a6',\n            '#c2cba1']\n    },\n    {\n        name: 'dark',\n        selectable: true,\n        group: 'Ordinal',\n        domain:\n            ['#361a31',\n                '#2d562b',\n                '#5f345c',\n                '#1b3516',\n                '#393c6b',\n                '#4f4b23',\n                '#405167',\n                '#704125',\n                '#192f3e',\n                '#6b2f38',\n                '#2d564d',\n                '#4f2f2a',\n                '#091f1b',\n                '#51503f',\n                '#091f1b',\n                '#332412',\n                '#091f1b',\n                '#273421',\n                '#1e3430',\n                '#131f0b']\n    },\n    {\n        name: 'fluorescent',\n        selectable: true,\n        group: 'Ordinal',\n        domain:\n            ['#97eb43',\n                '#ed7781',\n                '#4dd747',\n                '#ee7d45',\n                '#59e388',\n                '#dc9e51',\n                '#65e9c1',\n                '#e5c434',\n                '#43b78b',\n                '#dbed3b',\n                '#7db986',\n                '#77b624',\n                '#e2de80',\n                '#56b569',\n                '#b2a446',\n                '#ade872',\n                '#8daf63',\n                '#b1c43c',\n                '#b6e89e',\n                '#6bb44a']\n    },\n    {\n        name: 'roses',\n        selectable: true,\n        group: 'Ordinal',\n        domain:\n            ['#9e7681',\n                '#d339b7',\n                '#e6bbcd',\n                '#bb297b',\n                '#845865',\n                '#e954af',\n                '#8b6582',\n                '#e73d74',\n                '#c691b1',\n                '#b82f51',\n                '#e288cb',\n                '#904251',\n                '#ee84b0',\n                '#8d476f',\n                '#de8e9b',\n                '#af5090',\n                '#a96370',\n                '#9d3862',\n                '#b56993',\n                '#cf637e']\n    },\n    {\n        name: 'ocean',\n        selectable: true,\n        group: 'Ordinal',\n        domain:\n            ['#6d9fde',\n                '#274c56',\n                '#427ee2',\n                '#274c56',\n                '#576eb0',\n                '#43a8ba',\n                '#3a4e86',\n                '#2b777f',\n                '#2e6ea9',\n                '#274c56',\n                '#84a2b8',\n                '#154975',\n                '#5e7d94',\n                '#3e4756',\n                '#4283b0',\n                '#555f6e',\n                '#2e5b88',\n                '#3f646e',\n                '#3c5472',\n                '#1c5872']\n    },\n    {\n        name: 'fire',\n        selectable: true,\n        group: 'Ordinal',\n        domain:\n            ['#983151',\n                '#e27e8e',\n                '#dd3e66',\n                '#ac595b',\n                '#a3302b',\n                '#7d3f36',\n                '#de4f37',\n                '#e38a6b',\n                '#c15f2a',\n                '#ab7254',\n                '#84421c',\n                '#e38d30',\n                '#a66f2b',\n                '#755121',\n                '#e5b782',\n                '#b19359',\n                '#b7902e',\n                '#e5b946',\n                '#7c671a',\n                '#6d5d2c']\n    },\n    {\n        name: 'green',\n        selectable: true,\n        group: 'Ordinal',\n        domain:\n            ['#415a1f',\n                '#6c8548',\n                '#669a36',\n                '#97ce64',\n                '#66be3b',\n                '#326e20',\n                '#3c5a31',\n                '#66865a',\n                '#98c38a',\n                '#599954',\n                '#34983a',\n                '#245b28',\n                '#51d672',\n                '#5fcb87',\n                '#3d8d5f',\n                '#27755d',\n                '#57d9b6',\n                '#50ae94',\n                '#63dad7',\n                '#42afc1']\n    },\n    {\n        name: 'nightshade',\n        selectable: true,\n        group: 'Ordinal',\n        domain:\n            ['#23337c',\n                '#121331',\n                '#433d9f',\n                '#33285d',\n                '#4838c0',\n                '#150e3f',\n                '#574e6a',\n                '#2d206f',\n                '#342c46',\n                '#594588',\n                '#15064d',\n                '#3d1584',\n                '#771fba',\n                '#1d1224',\n                '#220c31',\n                '#3f264e',\n                '#46155c',\n                '#782d89',\n                '#673d6c',\n                '#401142']\n    },\n    {\n        name: 'vibrant',\n        selectable: true,\n        group: 'Ordinal',\n        domain:\n        ['#7ad78b',\n        '#763ecb',\n        '#70d64c',\n        '#d345c5',\n        '#c9d642',\n        '#686fd7',\n        '#d59c33',\n        '#4d468c',\n        '#cec87a',\n        '#8b3476',\n        '#4d8039',\n        '#c87dd1',\n        '#59caba',\n        '#d84930',\n        '#709bd6',\n        '#ce7c54',\n        '#d94475',\n        '#7b6729',\n        '#d483a4',\n        '#8c3636']\n    },\n];\n","import { eChartType } from '../../shared.models';\n\nexport enum eInputFormat {\n    SingleSeries,\n    MultiSeries,\n    ComboSeries,\n    InverseSeries,\n    Xy,\n    XyMinMax,\n    XyBubble,\n    GeoCoordinates\n}\n\nexport const inputFormats = [\n{key: eInputFormat.SingleSeries, allowLabel: true, maxSeries: 1, allowYSeries: false,\n    allowMinMax: false, allowBubble: false, inverse: false },\n{key: eInputFormat.MultiSeries, allowLabel: true, maxSeries: 10, allowYSeries: false,\n    allowMinMax: false, allowBubble: false, inverse: false },\n{key: eInputFormat.ComboSeries, allowLabel: true, maxSeries: 10, allowYSeries: false,\n    allowMinMax: false, allowBubble: false, inverse: false },\n{key: eInputFormat.InverseSeries, allowLabel: true, maxSeries: 10, allowYSeries: false,\n    allowMinMax: false, allowBubble: false, inverse: true },\n{key: eInputFormat.Xy, allowLabel: false, maxSeries: 1, allowYSeries: true,\n    allowMinMax: false, allowBubble: false, inverse: false },\n{key: eInputFormat.XyMinMax, allowLabel: false, maxSeries: 1, allowYSeries: true,\n    allowMinMax: true, allowBubble: false, inverse: false },\n{key: eInputFormat.XyBubble, allowLabel: false, maxSeries: 1, allowYSeries: true,\n    allowMinMax: false, allowBubble: true, inverse: false },\n]\n\nexport const ChartTypes = [\n    {\n        name: 'Bar Charts',\n        charts: [\n            {\n                key: eChartType.BarVertical, name: 'Vertical Bar Chart',\n                inputFormat: eInputFormat.SingleSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: true,\n                allowYScaleMax: true,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: true\n            },\n            {\n                key: eChartType.BarHorizontal, name: 'Horizontal Bar Chart',\n                inputFormat: eInputFormat.SingleSeries,\n                isHorizontal: true,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: true,\n                allowXScaleMax: true,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: true\n            },\n            {\n                key: eChartType.BarVertical2D, name: 'Vertical Bar Chart (MultiSeries)',\n                inputFormat: eInputFormat.MultiSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: false,\n                allowYScaleMax: true,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: true\n            },\n            {\n                key: eChartType.BarHorizontal2D, name: 'Horizontal Bar Chart (MultiSeries)',\n                inputFormat: eInputFormat.MultiSeries,\n                isHorizontal: true,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: false,\n                allowXScaleMax: true,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: true\n            },\n            {\n                key: eChartType.BarVerticalStacked, name: 'Vertical Stacked Bar Chart',\n                inputFormat: eInputFormat.MultiSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: false,\n                allowYScaleMax: true,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: true\n            },\n            {\n                key: eChartType.BarHorizontalStacked, name: 'Horizontal Stacked Bar Chart',\n                inputFormat: eInputFormat.MultiSeries,\n                isHorizontal: true,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: false,\n                allowXScaleMax: true,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: true\n            },\n            {\n                key: eChartType.BarVerticalNormalized, name: 'Vertical Normalized Bar Chart',\n                inputFormat: eInputFormat.MultiSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: true\n            },\n            {\n                key: eChartType.BarHorizontalNormalized, name: 'Horizontal Normalized Bar Chart',\n                inputFormat: eInputFormat.MultiSeries,\n                isHorizontal: true,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: true\n            },\n        ]\n    },\n    {\n        name: 'Pie Charts',\n        charts: [\n            {\n                key: eChartType.Pie, name: 'Pie Chart',\n                inputFormat: eInputFormat.SingleSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: false,\n                allowYAxis: false,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: true,\n                allowExplodeSlices: true,\n                allowDoughnut: true,\n                allowGridLines: false,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: false\n            },\n            {\n                key: eChartType.PieAdvanced, name: 'Pie Chart (Advanced)',\n                inputFormat: eInputFormat.SingleSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: false,\n                allowXAxis: false,\n                allowYAxis: false,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: false,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: false\n            },\n            {\n                key: eChartType.PieGrid, name: 'Pie Chart (Grid)',\n                inputFormat: eInputFormat.SingleSeries,\n                isHorizontal: false,\n                allowGradient: false,\n                allowLegend: false,\n                allowXAxis: false,\n                allowYAxis: false,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: false,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: false\n            },\n        ]\n    },\n    {\n        name: 'Line/Area Charts',\n        charts: [\n            {\n                key: eChartType.Line, name: 'Line Chart',\n                inputFormat: eInputFormat.InverseSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: true,\n                allowYScaleMax: true,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: false\n            },\n            {\n                key: eChartType.Area, name: 'Area Chart',\n                inputFormat: eInputFormat.InverseSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: true,\n                allowYScaleMax: true,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: false\n            },\n            {\n                key: eChartType.Polar, name: 'Polar Chart',\n                inputFormat: eInputFormat.InverseSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: false\n            },\n            {\n                key: eChartType.AreaStacked, name: 'Area Stacked Chart',\n                inputFormat: eInputFormat.InverseSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: true,\n                allowXScaleMax: true,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: false\n            },\n            {\n                key: eChartType.AreaNormalized, name: 'Area Normalized Chart',\n                inputFormat: eInputFormat.InverseSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: false\n            },\n        ]\n    },\n    {\n        name: 'X-Y Charts',\n        charts: [\n            {\n                key: eChartType.Scatter, name: 'X-Y Scatter Chart',\n                inputFormat: eInputFormat.Xy,\n                isHorizontal: false,\n                allowGradient: false,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: true,\n                allowXScaleMax: true,\n                allowYScaleMin: true,\n                allowYScaleMax: true,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: false\n            },\n            {\n                key: eChartType.Error, name: 'X-Y Error Chart',\n                inputFormat: eInputFormat.XyMinMax,\n                isHorizontal: false,\n                allowGradient: false,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: true,\n                allowXScaleMax: true,\n                allowYScaleMin: true,\n                allowYScaleMax: true,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: false\n            },\n            {\n                key: eChartType.Bubble, name: 'X-Y Bubble Chart',\n                inputFormat: eInputFormat.XyBubble,\n                isHorizontal: false,\n                allowGradient: false,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: true,\n                allowXScaleMax: true,\n                allowYScaleMin: true,\n                allowYScaleMax: true,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: false\n            },\n        ]\n    },\n    {\n        name: 'Other Charts',\n        charts: [\n            {\n                key: eChartType.BarLineCombo, name: 'Bar/Line Combo Chart',\n                inputFormat: eInputFormat.ComboSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: true\n            },\n            {\n                key: eChartType.HeatMap, name: 'Heat Map',\n                inputFormat: eInputFormat.MultiSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: true,\n                allowXScaleMin: true,\n                allowXScaleMax: true,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: false,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: false,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'flame',\n                defaultShowLegend: true,\n                isBar: false\n            },\n            {\n                key: eChartType.TreeMap, name: 'Tree Map',\n                inputFormat: eInputFormat.SingleSeries,\n                isHorizontal: false,\n                allowGradient: true,\n                allowLegend: false,\n                allowXAxis: false,\n                allowYAxis: false,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: true,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: false\n            },\n            {\n                key: eChartType.Cards, name: 'Number Cards',\n                inputFormat: eInputFormat.SingleSeries,\n                isHorizontal: false,\n                allowGradient: false,\n                allowLegend: false,\n                allowXAxis: false,\n                allowYAxis: false,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: false,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: false\n            },\n            {\n                key: eChartType.Gauge, name: 'Gauge',\n                inputFormat: eInputFormat.SingleSeries,\n                isHorizontal: false,\n                allowGradient: false,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: false,\n                allowXScaleMin: true,\n                allowXScaleMax: true,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: false,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: true,\n                isBar: false\n            },\n            {\n                key: eChartType.LinearGauge, name: 'Linear Gauge',\n                inputFormat: eInputFormat.SingleSeries,\n                isHorizontal: false,\n                allowGradient: false,\n                allowLegend: true,\n                allowXAxis: true,\n                allowYAxis: false,\n                allowXScaleMin: true,\n                allowXScaleMax: true,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: false,\n                defaultShowXAxisLabel: true,\n                defaultShowYAxisLabel: true,\n                defaultShowXAxis: true,\n                defaultShowYAxis: true,\n                defaultShowGridLines: true,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: true,\n                isBar: false\n            },\n            {\n                key: eChartType.Map, name: 'Google Map',\n                inputFormat: eInputFormat.GeoCoordinates,\n                isHorizontal: false,\n                allowGradient: false,\n                allowLegend: false,\n                allowXAxis: false,\n                allowYAxis: false,\n                allowXScaleMin: false,\n                allowXScaleMax: false,\n                allowYScaleMin: false,\n                allowYScaleMax: false,\n                allowLabels: false,\n                allowExplodeSlices: false,\n                allowDoughnut: false,\n                allowGridLines: false,\n                defaultShowXAxisLabel: false,\n                defaultShowYAxisLabel: false,\n                defaultShowXAxis: false,\n                defaultShowYAxis: false,\n                defaultShowGridLines: false,\n                defaultColorScheme: 'natural',\n                defaultShowLegend: false,\n                isBar: false\n            },\n\n        ]\n    }\n]\n","import { Component, OnInit, Input, OnChanges, EventEmitter, Output, ContentChild } from '@angular/core';\nimport { ChartTypes, eInputFormat } from '../chart-groups';\nimport { colorSets } from '../chart-colors';\nimport * as html2canvas from 'html2canvas';\nimport { Subject } from 'rxjs';\nimport { ChartConfig, eChartType } from '../../../shared.models';\n\n@Component({\n    selector: 'chart-builder',\n    templateUrl: 'chart-builder.component.html'\n})\n\nexport class ChartBuilderComponent implements OnInit, OnChanges {\n    @Input() title = '';\n    @Input() config: ChartConfig;\n    @Input() columns: any[];\n    @Input() data: Array<any>;\n    @Input() showEdit = true;\n    @Output() hasChanged = new EventEmitter();\n\n    // public labelColumnIndex: any = null;\n    // public seriesColumnIndex: any = null;\n    // public seriesColumnsIndex = [];\n    // public xColumnIndex: any = null;\n    // public yColumnIndex: any = null;\n    // public minColumnIndex: any = null;\n    // public maxColumnIndex: any = null;\n    // public radiusColumnIndex: any = null;\n    // public latitudeColumnIndex: any = null;\n    // public longitudeColumnIndex: any = null;\n\n    eChartType = eChartType;\n    eInputFormat = eInputFormat;\n    chartTypes = ChartTypes;\n\n    results: any[];\n\n    chartType: any;\n    colorSets = colorSets;\n\n    public updateChartSubject: Subject<void> = new Subject<void>();\n\n    constructor() { }\n\n    ngOnInit() {\n        if (!this.config) {\n            this.config = new ChartConfig();\n        }\n    }\n\n    ngOnChanges() {\n        this.chartType = null;\n        if (this.columns) {\n            ChartTypes.forEach(chartGroup => {\n                if (!this.chartType) {\n                    this.chartType = chartGroup.charts.find(c => c.key === this.config.chartType);\n                }\n            });\n        }\n    }\n\n    changeChart() {\n        this.config.showXAxisLabel = this.chartType.defaultShowXAxisLabel;\n        this.config.showYAxisLabel = this.chartType.defaultShowYAxisLabel;\n        this.config.showXAxis = this.chartType.defaultShowXAxis;\n        this.config.showYAxis = this.chartType.defaultShowYAxis;\n        this.config.showGridLines = this.chartType.defaultShowGridLines;\n        this.config.colorScheme = this.chartType.defaultColorScheme;\n        this.config.showLegend = this.chartType.defaultShowLegend;\n        this.hasChanged.emit();\n        this.ngOnChanges();\n    }\n\n    updateChart() {\n        // trigger a change event in the chart\n        // this.config = Object.assign({}, this.config);\n        this.hasChanged.emit();\n        this.updateChartSubject.next();\n        this.ngOnChanges();\n\n    }\n\n    onChanged() {\n        this.hasChanged.emit();\n    }\n\n    export() {\n        const chart = document.getElementById('chart');\n        if (chart == null) {\n            return;\n        }\n\n        let svgElem = chart.getElementsByTagName('svg');\n        for (const node of Array.from(svgElem)) {\n            node.setAttribute('font-family', window.getComputedStyle(node, null).getPropertyValue('font-family'));\n            node.replaceWith(node);\n        }\n\n        html2canvas.default(chart, <html2canvas.Options> {\n            height: chart.clientHeight,\n            width: chart.clientWidth,\n            scale: 3,\n            // backgroundColor: null,\n            logging: false,\n            // onclone: (document) => {\n            //     document.getElementById('chart').style.visibility = 'visible';\n            // }\n        }).then((canvas) => {\n            // // Get chart data so we can append to the pdf\n            // const chartData = canvas.toDataURL();\n            // // Prepare pdf structure\n            // const docDefinition = {\n            //     content: [],\n            //     styles: {\n            //         subheader: {\n            //             fontSize: 16,\n            //             bold: true,\n            //             margin: [0, 10, 0, 5],\n            //             alignment: 'left'\n            //         },\n            //         subsubheader: {\n            //             fontSize: 12,\n            //             italics: true,\n            //             margin: [0, 10, 0, 25],\n            //             alignment: 'left'\n            //         }\n            //     },\n            //     defaultStyle: {\n            //         // alignment: 'justify'\n            //     }\n            // };\n\n            canvas.toBlob((blob) => {\n                saveAs(blob, 'chart.png');\n            }, 'image/png');\n        });\n    }\n}\n","<d-widget-section *ngIf=\"columns && showEdit\" title=\"Chart Properties\" [showExpandButton]=\"true\">\n    <div class=\"d-flex flex-wrap\">\n        <div class=\"flex-fill\">\n            <form-select [(ngModel)]=\"config.chartType\" (ngModelChange)=\"updateChart($event)\" labelLeft=\"Chart\"\n                [items]=\"chartTypes\" parentName='name' childItems='charts' itemKey='key' itemName='name'>\n            </form-select>\n        </div>\n\n        <div class=\"flex-fill pl-1\">\n            <form-select [(ngModel)]=\"config.colorScheme\" (ngModelChange)=\"updateChart($event)\" labelLeft=\"Color\" [items]=\"colorSets\" itemName='name'\n                itemKey='name'>\n            </form-select>\n        </div>\n\n        <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowGradient\">\n            <form-checkbox label=\"Color Gradient\" [(ngModel)]=\"config.showGradient\" (ngModelChange)=\"onChanged()\"\n                [border]=\"true\"></form-checkbox>\n        </div>\n\n        <div class=\"flex-fill\">\n            <form-select [(ngModel)]=\"config.multiGridColumn\" (ngModelChange)=\"updateChart($event)\" labelLeft=\"Grid Column\"\n                [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n            </form-select>\n        </div>\n    </div>\n\n    <div class=\"d-flex flex-wrap pt-1\"\n        *ngIf=\"chartType.inputFormat === eInputFormat.SingleSeries || chartType.inputFormat === eInputFormat.GeoCoordinates\">\n        <div class=\"flex-fill\">\n            <form-select [(ngModel)]=\"config.labelColumn\" (ngModelChange)=\"updateChart($event)\" labelLeft=\"Labels\"\n                [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n            </form-select>\n        </div>\n\n        <div class=\"flex-fill pl-1\">\n            <form-select [(ngModel)]=\"config.seriesColumn\" (ngModelChange)=\"updateChart($event)\"\n                labelLeft=\"Series Column\" [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n            </form-select>\n        </div>\n    </div>\n\n    <div class=\"d-flex flex-wrap pt-1\" *ngIf=\"chartType.inputFormat === eInputFormat.GeoCoordinates\">\n        <div class=\"flex-fill\">\n            <form-select [(ngModel)]=\"config.latitudeColumn\" (ngModelChange)=\"updateChart($event)\" labelLeft=\"Latitude\"\n                [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n            </form-select>\n        </div>\n\n        <div class=\"flex-fill pl-1\">\n            <form-select [(ngModel)]=\"config.longitudeColumn\" (ngModelChange)=\"updateChart($event)\"\n                labelLeft=\"Longitude\" [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n            </form-select>\n        </div>\n    </div>\n\n    <div class=\"d-flex flex-wrap pt-1\"\n        *ngIf=\"chartType.inputFormat === eInputFormat.MultiSeries || chartType.inputFormat === eInputFormat.InverseSeries\">\n        <div class=\"flex-fill\">\n            <form-select [(ngModel)]=\"config.labelColumn\" (ngModelChange)=\"updateChart($event)\" labelLeft=\"Labels\"\n                [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n            </form-select>\n        </div>\n        <div class=\"flex-fill pl-1\">\n            <form-select [(ngModel)]=\"config.pivotColumn\" (ngModelChange)=\"updateChart($event)\"\n            [allowNullSelect]=\"true\" selectNullMessage=\"(No pivot column)\"\n            labelLeft=\"Series Pivot\" [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n            </form-select>\n        </div>\n        <div class=\"flex-fill pl-1\">\n            <form-tags-dropdown [(ngModel)]=\"config.seriesColumns\" (ngModelChange)=\"updateChart($event)\"\n                labelLeft=\"Series Columns\" [items]=\"columns\" itemKey=\"title\" itemName=\"title\" [enableAddAll]=\"true\">\n            </form-tags-dropdown>\n        </div>\n    </div>\n\n    <div class=\"d-flex flex-wrap pt-1\"\n    *ngIf=\"chartType.inputFormat === eInputFormat.ComboSeries\">\n        <div class=\"flex-fill\">\n            <form-select [(ngModel)]=\"config.labelColumn\" (ngModelChange)=\"updateChart($event)\" labelLeft=\"Labels\"\n                [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n            </form-select>\n        </div>\n        <div class=\"flex-fill pl-1\">\n            <form-select [(ngModel)]=\"config.seriesColumn\" (ngModelChange)=\"updateChart($event)\"\n                labelLeft=\"Bar Column\" [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n            </form-select>\n        </div>\n        <div class=\"flex-fill pl-1\">\n            <form-tags-dropdown [(ngModel)]=\"config.seriesColumns\" (ngModelChange)=\"updateChart($event)\"\n                labelLeft=\"Line Series\" [items]=\"columns\" itemKey=\"title\" itemName=\"title\" [enableAddAll]=\"true\">\n            </form-tags-dropdown>\n        </div>\n        <div class=\"flex-fill pl-1\" >\n            <form-checkbox label=\"Separate x-Axis\" [(ngModel)]=\"config.separateAxis\" (ngModelChange)=\"onChanged()\"\n                [border]=\"true\"></form-checkbox>\n        </div>\n        <div class=\"flex-fill pl-1\" >\n            <form-checkbox label=\"Single Color\" [(ngModel)]=\"config.singleBarColor\" (ngModelChange)=\"updateChart($event)\"\n                [border]=\"true\"></form-checkbox>\n        </div>\n    </div>\n\n    <div class=\"d-flex flex-wrap pt-1\" *ngIf=\" chartType.inputFormat===eInputFormat.Xy || chartType.inputFormat===eInputFormat.XyMinMax\n            || chartType.inputFormat===eInputFormat.XyBubble\">\n        <div class=\"flex-fill\">\n            <form-select [(ngModel)]=\"config.labelColumn\" (ngModelChange)=\"updateChart($event)\" labelLeft=\"Labels\"\n                [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n            </form-select>\n        </div>\n\n        <div class=\"flex-fill pl-1\">\n            <form-select [(ngModel)]=\"config.xColumn\" (ngModelChange)=\"updateChart($event)\" labelLeft=\"X-Column\"\n                [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n            </form-select>\n        </div>\n\n        <div class=\"flex-fill pl-1\">\n            <form-select [(ngModel)]=\"config.yColumn\" (ngModelChange)=\"updateChart($event)\" labelLeft=\"Y-Column\"\n                [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n            </form-select>\n        </div>\n\n        <ng-template [ngIf]=\"chartType.inputFormat === eInputFormat.XyMinMax\">\n            <div class=\"flex-fill pl-1\">\n                <form-select [(ngModel)]=\"config.minColumn\" (ngModelChange)=\"updateChart($event)\"\n                    labelLeft=\"Error Min Column\" [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n                </form-select>\n            </div>\n\n            <div class=\"flex-fill pl-1\">\n                <form-select [(ngModel)]=\"config.maxColumn\" (ngModelChange)=\"updateChart($event)\"\n                    labelLeft=\"Error Max Column\" [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n                </form-select>\n            </div>\n        </ng-template>\n\n        <ng-template [ngIf]=\"chartType.inputFormat === eInputFormat.XyBubble\">\n            <div class=\"flex-fill pl-1\">\n                <form-select [(ngModel)]=\"config.radiusColumn\" (ngModelChange)=\"updateChart($event)\"\n                    labelLeft=\"Bubble Radius\" [items]=\"columns\" itemKey=\"title\" itemName=\"title\">\n                </form-select>\n            </div>\n        </ng-template>\n\n    </div>\n\n    <div class=\"d-flex flex-wrap pt-1\">\n        <div class=\"flex-fill \">\n            <div class=\"input-group-text\">\n                Formatting\n            </div>\n        </div>\n\n        <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowLabels\">\n            <form-checkbox label=\"Labels\" [(ngModel)]=\"config.showXAxis\" (ngModelChange)=\"onChanged()\" [border]=\"true\">\n            </form-checkbox>\n        </div>\n        <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowXAxis\">\n            <form-checkbox label=\"X-Axis Title\" [(ngModel)]=\"config.showXAxisLabel\" (ngModelChange)=\"onChanged()\"\n                [border]=\"true\"></form-checkbox>\n        </div>\n        <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowXAxis\">\n            <form-checkbox label=\"X-Axis Labels\" [(ngModel)]=\"config.showXAxis\" (ngModelChange)=\"onChanged()\"\n                [border]=\"true\"></form-checkbox>\n        </div>\n        <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowYAxis\">\n            <form-checkbox label=\"Y-Axis Title\" [(ngModel)]=\"config.showYAxisLabel\" (ngModelChange)=\"onChanged()\"\n                [border]=\"true\"></form-checkbox>\n        </div>\n        <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowYAxis\">\n            <form-checkbox label=\"Y-Axis Labels\" [(ngModel)]=\"config.showYAxis\" (ngModelChange)=\"onChanged()\"\n                [border]=\"true\"></form-checkbox>\n        </div>\n        <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowGridLines\">\n            <form-checkbox label=\"Grid Lines\" [(ngModel)]=\"config.showGridLines\" (ngModelChange)=\"onChanged()\"\n                [border]=\"true\"></form-checkbox>\n        </div>\n        <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowLegend\">\n            <form-checkbox label=\"Legend\" [(ngModel)]=\"config.showLegend\" (ngModelChange)=\"onChanged()\" [border]=\"true\">\n            </form-checkbox>\n        </div>\n        <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowLegend && config.showLegend\">\n            <form-select [(ngModel)]=\"config.legendPosition\" (ngModelChange)=\"onChanged()\" labelLeft=\"Legend Position\"\n                [items]=\"['right', 'below']\">\n            </form-select>\n        </div>\n\n        <ng-template [ngIf]=\"chartType.isBar\">\n            <div class=\"flex-fill pl-1\" >\n                <form-checkbox label=\"Single Color\" [(ngModel)]=\"config.singleBarColor\" (ngModelChange)=\"updateChart($event)\"\n                    [border]=\"true\"></form-checkbox>\n            </div>\n            <div class=\"flex-fill  pl-1\">\n                <form-input type=\"number\" labelLeft=\"Bar Padding\" [(ngModel)]=\"config.barPadding\" (ngModelChange)=\"onChanged()\"></form-input>\n            </div>\n            <div class=\"flex-fill pl-1\" >\n                <form-checkbox label=\"Round Edges\" [(ngModel)]=\"config.roundEdges\" (ngModelChange)=\"updateChart($event)\"\n                    [border]=\"true\"></form-checkbox>\n            </div>\n            <div class=\"flex-fill pl-1\" >\n                <form-checkbox label=\"Data Label\" [(ngModel)]=\"config.showDataLabel\" (ngModelChange)=\"updateChart($event)\"\n                    [border]=\"true\"></form-checkbox>\n            </div>\n        </ng-template>\n\n        <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowExplodeSlices\">\n            <form-checkbox label=\"Explode Slices\" [(ngModel)]=\"config.explodeSlices\" (ngModelChange)=\"onChanged()\"\n                [border]=\"true\"></form-checkbox>\n        </div>\n        <div class=\"flex-fill pl-1\" *ngIf=\"chartType.allowDoughnut\">\n            <form-checkbox label=\"Doughnut\" [(ngModel)]=\"config.doughnut\" (ngModelChange)=\"onChanged()\" [border]=\"true\">\n            </form-checkbox>\n        </div>\n    </div>\n\n    <div class=\"d-flex flex-wrap pt-1\"\n        *ngIf=\"chartType.allowYScaleMin || chartType.allowYScaleMax ||chartType.allowXScaleMin ||chartType.allowXScaleMax\">\n        <div class=\"flex-fill \">\n            <div class=\"input-group-text\">\n                Axis Scales\n            </div>\n        </div>\n\n        <div class=\"flex-fill  pl-1\">\n            <form-checkbox label=\"Auto scale\" [(ngModel)]=\"config.autoScale\" (ngModelChange)=\"onChanged()\"\n                [border]=\"true\"></form-checkbox>\n        </div>\n\n        <ng-template [ngIf]=\"!config.autoScale\">\n            <div class=\"flex-fill  pl-1\" *ngIf=\"chartType.allowXScaleMin\">\n                <form-input labelLeft=\"X-Min\" [(ngModel)]=\"config.xScaleMin\" (ngModelChange)=\"onChanged()\"></form-input>\n            </div>\n            <div class=\"flex-fill  pl-1\" *ngIf=\"chartType.allowXScaleMax\">\n                <form-input labelLeft=\"X-Max\" [(ngModel)]=\"config.xScaleMax\" (ngModelChange)=\"onChanged()\"></form-input>\n            </div>\n            <div class=\"flex-fill  pl-1\" *ngIf=\"chartType.allowYScaleMin\">\n                <form-input labelLeft=\"Y-Min\" [(ngModel)]=\"config.yScaleMin\" (ngModelChange)=\"onChanged()\"></form-input>\n            </div>\n            <div class=\"flex-fill  pl-1\" *ngIf=\"chartType.allowYScaleMax\">\n                <form-input labelLeft=\"Y-Max\" [(ngModel)]=\"config.yScaleMax\" (ngModelChange)=\"onChanged()\"></form-input>\n            </div>\n        </ng-template>\n    </div>\n\n</d-widget-section>\n\n<d-widget-section [title]=\"title\" [showExpandButton]=\"true\" [padding]=\"false\">\n    <ng-template #header>\n        <d-button buttonClass=\"btn-sm btn-primary m-1\" iconClass=\"fa fa-download\" (click)=\"export()\" text=\"export\"></d-button>\n    </ng-template>\n\n    <chart-view [responsive]=\"false\" #chartView [config]=\"config\" [columns]=\"columns\" [data]=\"data\" [updateChartEvent]=\"updateChartSubject\">\n    </chart-view>\n\n</d-widget-section>\n","import { Component, OnInit, Input, OnChanges, OnDestroy, AfterViewInit, SimpleChanges, ViewChild, ElementRef } from '@angular/core';\nimport { eInputFormat, ChartTypes } from '../chart-groups';\nimport { colorSets } from '../chart-colors';\nimport { Subscription, Observable } from 'rxjs';\nimport { ResizedEvent } from 'angular-resize-event';\nimport { ChartConfig, eChartType } from '../../../shared.models';\nimport { Functions } from '../../../utils/functions';\n\n@Component({\n    selector: 'chart-view',\n    templateUrl: 'chart-view.component.html',\n    styleUrls: ['./chart-view.component.scss']\n})\n\nexport class ChartViewComponent implements OnInit, OnDestroy, OnChanges {\n    @Input() config: ChartConfig;\n    @Input() columns: any[];\n    @Input() data: Array<any>;\n    @Input() updateChartEvent: Observable<void>;\n    @Input() responsive = false;\n\n    // @ViewChild('wrapper', { static: true }) public wrapper: ElementRef;\n\n    private _updateChartSubscription: Subscription;\n\n    public gridColumnIndex: any = null;\n    public labelColumnIndex: any = null;\n    public seriesColumnIndex: any = null;\n    public seriesPivotIndex: any = null;\n    public seriesColumnsIndex = [];\n    public xColumnIndex: any = null;\n    public yColumnIndex: any = null;\n    public minColumnIndex: any = null;\n    public maxColumnIndex: any = null;\n    public radiusColumnIndex: any = null;\n    public latitudeColumnIndex: any = null;\n    public longitudeColumnIndex: any = null;\n\n\n    eChartType = eChartType;\n    eInputFormat = eInputFormat;\n    chartTypes = ChartTypes;\n\n    resultArray: any[];\n\n    chartType: any;\n    colorSets = colorSets;\n\n    customColors = [];\n    colorIndex = 0;\n\n    view: any;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n        if (!this.config) {\n            this.config = new ChartConfig();\n        }\n        this.getChartType();\n\n        if (this.updateChartEvent) {\n            this._updateChartSubscription = this.updateChartEvent.subscribe(() => {\n                this.ngOnChanges(null);\n            });\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this._updateChartSubscription) { this._updateChartSubscription.unsubscribe(); }\n    }\n\n    ngOnChanges(simpleChanges: SimpleChanges) {\n        if (this.columns) {\n            this.gridColumnIndex = this.getColumnIndex(this.config.multiGridColumn);\n            this.labelColumnIndex = this.getColumnIndex(this.config.labelColumn);\n            this.seriesColumnIndex = this.getColumnIndex(this.config.seriesColumn);\n            this.seriesPivotIndex = this.getColumnIndex(this.config.pivotColumn);\n            this.xColumnIndex = this.getColumnIndex(this.config.xColumn);\n            this.yColumnIndex = this.getColumnIndex(this.config.yColumn);\n            this.minColumnIndex = this.getColumnIndex(this.config.minColumn);\n            this.maxColumnIndex = this.getColumnIndex(this.config.maxColumn);\n            this.radiusColumnIndex = this.getColumnIndex(this.config.radiusColumn);\n            this.latitudeColumnIndex = this.getColumnIndex(this.config.latitudeColumn);\n            this.longitudeColumnIndex = this.getColumnIndex(this.config.longitudeColumn);\n\n            if (simpleChanges !== null) {\n                let keys = Object.keys(simpleChanges);\n                if (keys.length === 1 && keys[0] === 'data') {\n                    // do nothing\n                } else {\n                    this.customColors = [];\n                }\n            } else {\n                this.customColors = [];\n            }\n\n            if (this.config.seriesColumns) {\n                this.seriesColumnsIndex = [];\n                for (let i = 0; i < this.config.seriesColumns.length; i++) {\n                    let col = this.columns.find(c => c.title === this.config.seriesColumns[i]);\n                    if (col) {\n                        this.seriesColumnsIndex.push(col);\n                    }\n                }\n            }\n\n            this.getChartType();\n            this.updateChart();\n            // this.view = [this.wrapper.nativeElement.clientWidth, this.wrapper.nativeElement.clientHeight];\n        }\n    }\n\n    trackChartChange(index: number, data: any) {\n        if (data) {\n            return data[index].name;\n        }\n      }\n\n    // onResize() {\n    //     this.createView();\n    // }\n\n    onResized(event) {\n        // legend needs to be padded as ngx-charts not calculating size correctly.\n        // https://github.com/swimlane/ngx-charts/issues/1248\n        if (this.config.showLegend && this.config.legendPosition === 'below') {\n            this.view = [event.newWidth, event.newHeight - 60];\n        } else {\n            this.view = [event.newWidth, event.newHeight];\n        }\n    }\n\n    getChartType() {\n        this.chartType = null;\n        ChartTypes.forEach(chartGroup => {\n            if (!this.chartType) {\n                this.chartType = chartGroup.charts.find(c => c.key === this.config.chartType);\n            }\n        });\n    }\n\n    getColumnTitle(index: number): string {\n        if (index >= 0) {\n            let col = this.columns[index];\n            if (col) {\n                return col.title;\n            }\n        }\n        return null;\n    }\n\n    getColumnIndex(title: string): number {\n        if (title) {\n            let index = this.columns.findIndex(c => c.title === title);\n            return index;\n        }\n        return null;\n    }\n\n    // sets the label to either x-series or y-series depending on whether horizontal/vertical chart.\n    setLabel(label: string) {\n        if (this.chartType.isHorizontal) {\n            this.config.yAxisLabel = label;\n        } else {\n            this.config.xAxisLabel = label;\n        }\n    }\n\n    setSeriesLabel(seriesLabel: string) {\n        if (this.chartType.isHorizontal) {\n            this.config.xAxisLabel = seriesLabel;\n        } else {\n            this.config.yAxisLabel = seriesLabel;\n        }\n    }\n\n    addCustomColor(label: string, changeColor = true) {\n        if ( this.customColors.findIndex(c => c.name === label) < 0) {\n            let colorSet;\n\n            if (this.config.colorScheme) {\n                colorSet = colorSets.find(c => c.name === this.config.colorScheme);\n            }\n            if (!colorSet) {\n                colorSet = colorSets[0];\n            }\n\n            let colors = colorSet.domain;\n\n            if (this.colorIndex >= colors.length) {\n                this.colorIndex = 0;\n            }\n\n            this.customColors.push({name: label, value: colors[this.colorIndex] });\n\n            if (changeColor) {\n                this.colorIndex++;\n            }\n        }\n    }\n\n    updateChart() {\n        if (this.chartType && this.data) {\n\n            this.getChartType();\n\n            if (this.seriesColumnsIndex) {\n                this.config.seriesColumns = new Array(this.seriesColumnsIndex.length);\n                for (let i = 0; i < this.seriesColumnsIndex.length; i++) {\n                    this.config.seriesColumns[i] = this.seriesColumnsIndex[i].title;\n                }\n            }\n\n            if (this.labelColumnIndex !== null) {\n                this.setLabel(this.columns[this.labelColumnIndex].title);\n            }\n\n            let values: Array<any>;\n            let chartItems: Array<any> = [];\n\n            if (this.gridColumnIndex != null && this.gridColumnIndex >= 0) {\n                values = this.gridSeriesValues(this.data);\n            } else {\n                values = [null];\n            }\n\n            let singleColor = this.chartType.isBar && this.config.singleBarColor ? true : false;\n\n\n            for (let value of values) {\n                let chartItem: Array<any>;\n                let data;\n                if (this.gridColumnIndex != null && this.gridColumnIndex >= 0 ) {\n                    data = this.data.filter(c => c[this.gridColumnIndex] === value.value);\n                } else {\n                    data = this.data;\n                }\n\n                switch (this.chartType.inputFormat) {\n                    case eInputFormat.SingleSeries:\n                        chartItem = this.singleSeries(data);\n                        break;\n\n                    case eInputFormat.MultiSeries:\n                        chartItem = this.multiSeries(data);\n                        break;\n\n                    case eInputFormat.InverseSeries:\n                        chartItem = this.inverseSeries(data);\n                        break;\n\n                    case eInputFormat.ComboSeries:\n                        chartItem = this.singleSeries(data);\n                        if (chartItem) {\n                            let yAxisLabel = this.config.yAxisLabel;\n                            chartItem['lineChartSeries'] = this.inverseSeries(data);\n                            this.config.yAxisLabelRight = this.config.yAxisLabel;\n                            this.config.yAxisLabel = yAxisLabel;\n                        }\n                        break;\n                    case eInputFormat.Xy:\n                        if (this.yColumnIndex != null && this.xColumnIndex != null) {\n                            chartItem = new Array(data.length);\n                            for (let i = 0; i < data.length; i++) {\n                                chartItem[i] = {\n                                    name: this.formatValue(data, this.labelColumnIndex, i),\n                                    series: [{\n                                        name: this.formatValue(data, this.labelColumnIndex, i),\n                                        x: this.formatValue(data, this.xColumnIndex, i),\n                                        y: this.formatValue(data, this.yColumnIndex, i),\n                                        r: 10\n                                    }]\n                                };\n                            }\n                            this.config.yAxisLabel = this.columns[this.yColumnIndex].title;\n                            this.config.xAxisLabel = this.columns[this.xColumnIndex].title;\n                        }\n                        break;\n\n                    case eInputFormat.XyMinMax:\n                        if (this.yColumnIndex != null && this.xColumnIndex != null) {\n                            chartItem = new Array(data.length);\n                            for (let i = 0; i < data.length; i++) {\n                                chartItem[i] = {\n                                    name: this.formatValue(data, this.labelColumnIndex, i),\n                                    series: [{\n                                        name: this.formatValue(data, this.labelColumnIndex, i),\n                                        x: this.formatValue(data, this.xColumnIndex, i),\n                                        y: this.formatValue(data, this.yColumnIndex, i),\n                                        min: this.formatValue(data, this.minColumnIndex, i),\n                                        max: this.formatValue(data, this.maxColumnIndex, i)\n                                    }]\n                                };\n                            }\n                            this.config.yAxisLabel = this.columns[this.yColumnIndex].title;\n                            this.config.xAxisLabel = this.columns[this.xColumnIndex].title;\n                        }\n                        break;\n\n\n                    case eInputFormat.XyBubble:\n                        if (this.yColumnIndex != null && this.xColumnIndex != null) {\n\n                            chartItem = new Array(data.length);\n                            for (let i = 0; i < data.length; i++) {\n                                chartItem[i] = {\n                                    name: this.formatValue(data, this.labelColumnIndex, i),\n                                    series: [{\n                                        name: this.formatValue(data, this.labelColumnIndex, i),\n                                        x: this.formatValue(data, this.xColumnIndex, i),\n                                        y: this.formatValue(data, this.yColumnIndex, i),\n                                        r: this.formatValue(data, this.radiusColumnIndex, i)\n                                    }]\n                                };\n                            }\n                            this.config.yAxisLabel = this.columns[this.yColumnIndex].title;\n                            this.config.xAxisLabel = this.columns[this.xColumnIndex].title;\n                        }\n                        break;\n\n                    case eInputFormat.GeoCoordinates:\n                        if (this.latitudeColumnIndex != null && this.longitudeColumnIndex != null) {\n                            chartItem = new Array(data.length);\n                            for (let i = 0; i < data.length; i++) {\n                                chartItem[i] = {\n                                    name: this.formatValue(data, this.labelColumnIndex, i),\n                                    value: this.formatValue(data, this.seriesColumnIndex, i),\n                                    latitude: this.formatValue(data, this.latitudeColumnIndex, i),\n                                    longitude: this.formatValue(data, this.longitudeColumnIndex, i),\n                                };\n                            }\n                        }\n                        break;\n                }\n\n                if (chartItem) {\n                    if (value) {\n                        chartItem['name'] = value.name;\n                    }\n                    chartItem.forEach(item => {\n                        this.addCustomColor(item.name, !singleColor);\n                    });\n\n                    if (chartItem['lineChartSeries']) {\n                        if (singleColor) {\n                            this.addCustomColor(this.columns[this.seriesColumnIndex].title, false);\n                            this.colorIndex++;\n                        }\n\n                        chartItem['lineChartSeries'].forEach(item => {\n                            this.addCustomColor(item.name, true);\n                        });\n                    }\n                }\n\n\n                chartItems.push(chartItem);\n            }\n\n            this.resultArray = chartItems;\n\n        }\n\n    }\n\n    gridSeriesValues(data: any[]): any {\n        const format = this.columns[this.gridColumnIndex].format;\n        const values = Array.from(new Set(data.map(c => c[this.gridColumnIndex]))).sort((a, b) => {\n            if (a > b) {\n                return 1;\n            }\n            if (a < b) {\n                return -1;\n            }\n            return 0;\n        });\n        let gridValues = values.map(c => {\n            return {\n                name: Functions.formatValue(c, format),\n                value: c\n            }\n        });\n\n        return gridValues;\n    }\n\n    singleSeries(data): Array<any> {\n        let chartData: Array<any>;\n\n        if (this.labelColumnIndex !== null && this.seriesColumnIndex != null) {\n            chartData = new Array(data.length);\n            for (let i = 0; i < data.length; i++) {\n                chartData[i] = {\n                    name: this.formatValue(data, this.labelColumnIndex, i),\n                    value: this.formatValue(data, this.seriesColumnIndex, i)\n                };\n            }\n            this.setSeriesLabel(this.columns[this.seriesColumnIndex].title);\n        }\n\n        return chartData;\n    }\n\n    multiSeries(data): Array<any> {\n        let chartData: Array<any>;\n\n        if (this.labelColumnIndex != null && this.seriesColumnsIndex.length > 0) {\n            if (this.seriesPivotIndex != null) {\n                let pivotValues: any[] = this.uniqueValues(data, this.seriesPivotIndex);\n                let seriesCount = pivotValues.length * this.seriesColumnsIndex.length;\n                let pivotData = {};\n\n                for (let pivotIndex = 0; pivotIndex < pivotValues.length; pivotIndex++) {\n                    let pivotValue = pivotValues[pivotIndex];\n                    let seriesData = data.filter(c => c[this.seriesPivotIndex] === pivotValue.value);\n\n                    for (let i = 0; i < seriesData.length; i++) {\n\n                        const label = seriesData[i][this.labelColumnIndex];\n                        let row = pivotData[label];\n                        if (!row) {\n                            row = new Array(seriesCount);\n                            pivotData[label] = row;\n                        }\n\n                        for (let j = 0; j < this.seriesColumnsIndex.length; j++) {\n                            if (this.seriesColumnsIndex[j]) {\n                                row[((j + 1) * (pivotIndex + 1)) - 1 ] = {\n                                    name: pivotValue.name + '/' + this.seriesColumnsIndex[j].title,\n                                    value: this.formatValue(seriesData, this.seriesColumnsIndex[j].name, i)\n                                };\n                            }\n                        }\n                    }\n                }\n\n                let labels = Object.keys(pivotData);\n                chartData = new Array(labels.length);\n                let labelColumn = this.columns[this.labelColumnIndex];\n\n                for (let i  = 0; i < labels.length; i++) {\n                    chartData[i] = {\n                        name: Functions.formatValue(labels[i], labelColumn.format),\n                        series: pivotData[labels[i]].filter(c => c)\n                    }\n                }\n\n                this.setSeriesLabel(this.seriesColumnsIndex.map(c => c.title).join(' / '));\n            } else {\n                chartData = new Array(data.length);\n                for (let i = 0; i < data.length; i++) {\n                    let series = new Array(this.seriesColumnsIndex.length);\n                    for (let j = 0; j < this.seriesColumnsIndex.length; j++) {\n                        if (this.seriesColumnsIndex[j]) {\n                            series[j] = {\n                                name: this.seriesColumnsIndex[j].title,\n                                value: this.formatValue(data, this.seriesColumnsIndex[j].name, i)\n                            };\n                        }\n                    }\n                    chartData[i] = {\n                        name: this.formatValue(data, this.labelColumnIndex, i),\n                        series: series\n                    };\n                }\n                this.setSeriesLabel(this.seriesColumnsIndex.map(c => c.title).join(' / '));\n            }\n        }\n\n        return chartData;\n    }\n\n    inverseSeries(data): Array<any> {\n        let chartData: Array<any>;\n\n        if (this.labelColumnIndex != null && this.seriesColumnsIndex.length > 0) {\n            if (this.seriesPivotIndex != null) {\n                let labelValues: any[] = this.uniqueValues(data, this.labelColumnIndex);\n                let seriesCount = labelValues.length * this.seriesColumnsIndex.length;\n                let pivotData = {};\n\n                for (let seriesIndex = 0; seriesIndex < labelValues.length; seriesIndex++) {\n                    let seriesValue = labelValues[seriesIndex];\n                    let seriesData = data.filter(c => c[this.labelColumnIndex] === seriesValue.value);\n\n                    for (let i = 0; i < seriesData.length; i++) {\n                        for (let j = 0; j < this.seriesColumnsIndex.length; j++) {\n                            let pivotItem = seriesData[i][this.seriesPivotIndex];\n                            if (this.seriesColumnsIndex.length > 1 ) {\n                                pivotItem += ' / ' + this.seriesColumnsIndex[j].title;\n                            }\n\n                            let row = pivotData[pivotItem];\n                            if (!row) {\n                                row = new Array(seriesCount);\n                                pivotData[pivotItem] = row;\n                            }\n\n                            if (this.seriesColumnsIndex[j]) {\n                                let name = this.formatValue(seriesData, this.labelColumnIndex, j);\n                                row[((j + 1) * (seriesIndex + 1)) - 1 ] = {\n                                    name: name,\n                                    value: this.formatValue(seriesData, this.seriesColumnsIndex[j].name, i)\n                                };\n                            }\n                        }\n                    }\n                }\n\n                let labels = Object.keys(pivotData);\n                chartData = new Array(labels.length);\n                let seriesColumn = this.columns[this.seriesPivotIndex];\n\n                for (let i  = 0; i < labels.length; i++) {\n                    chartData[i] = {\n                        name: Functions.formatValue(labels[i], seriesColumn.format),\n                        series: pivotData[labels[i]].filter(c => c)\n                    }\n                }\n                this.setSeriesLabel(this.seriesColumnsIndex.map(c => c.title).join(' / '));\n            } else {\n                chartData = new Array(this.seriesColumnsIndex.length);\n                for (let i = 0; i < this.seriesColumnsIndex.length; i++) {\n                    let series = new Array(data.length);\n                    for (let j = 0; j < data.length; j++) {\n                        series[j] = {\n                            name: this.formatValue(data, this.labelColumnIndex, j),\n                            value: this.formatValue(data, this.seriesColumnsIndex[i].name, j)\n                        };\n                    }\n                    series = series.filter(c => c.value !== '');\n                    chartData[i] = { name: this.seriesColumnsIndex[i].title, series: series };\n                }\n                this.setSeriesLabel(this.seriesColumnsIndex.map(c => c.title).join(' / '));\n            }\n        }\n\n        return chartData;\n    }\n\n    uniqueValues(data, index: number): any[] {\n        const format = this.columns[index].format;\n        const values = Array.from(new Set(data.map(c => c[index]))).sort((a, b) => {\n            if (a > b) {\n                return 1;\n            }\n            if (a < b) {\n                return -1;\n            }\n            return 0;\n        });\n\n        const valuesSet = values.map(c => {\n            return {\n                name: Functions.formatValue(c, format),\n                value: c\n            }\n        });\n        return valuesSet;\n    }\n\n    formatValue(data, columnIndex: number, row: number) {\n        if (columnIndex === null) {\n            return row;\n        }\n\n        let value = data[row][columnIndex];\n        let column = this.columns[columnIndex];\n\n        return Functions.formatValue(value, column.format);\n    }\n\n}\n","<div class=\"m-3\" *ngIf=\"!resultArray || resultArray?.length === 0 || !chartType\">\n    <div class=\"alert alert-warning\">\n        Chart not displayed.  Check the chart type, labels and series have been set.\n    </div>\n</div>\n<div #wrapper class=\"chart-parent border\" *ngFor=\"let results of resultArray; trackBy:trackChartChange\" >\n   <div class=\"w-100 text-center \"><div class=\"badge badge-secondary\">{{results?.name}}</div></div> \n<div (resized)=\"onResized($event)\" *ngIf=\"results && chartType\" id=\"chart\" [ngClass]=\"{'responsive-chart' : responsive, 'fixed-chart': !responsive}\" >\n    <ngx-charts-bar-vertical *ngIf=\"chartType.key === eChartType.BarVertical\" [view]=\"view\" \n        [results]=\"results\" [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\" [yAxis]=\"config.showYAxis\"\n        [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\" [showXAxisLabel]=\"config.showXAxisLabel\"\n        [showYAxisLabel]=\"config.showYAxisLabel\" [xAxisLabel]=\"config.xAxisLabel\" [yScaleMin]=\"config.yScaleMin\" \n        [yScaleMax]=\"config.yScaleMax\" [yAxisLabel]=\"config.yAxisLabel\" [customColors]=\"customColors\"\n        [barPadding]=\"config.barPadding ? config.barPadding : 3\" [roundEdges]=\"config.roundEdges\" [showDataLabel]=\"config.showDataLabel\">\n    </ngx-charts-bar-vertical>\n\n    <ngx-charts-bar-horizontal *ngIf=\"chartType.key === eChartType.BarHorizontal\" [view]=\"view\" \n        [results]=\"results\" [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\" [yAxis]=\"config.showYAxis\"\n        [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\" [showXAxisLabel]=\"config.showXAxisLabel\"\n        [showYAxisLabel]=\"config.showYAxisLabel\" [xAxisLabel]=\"config.xAxisLabel\" [xScaleMin]=\"config.xScaleMin\"\n        [xScaleMax]=\"config.xScaleMax\" [yAxisLabel]=\"config.yAxisLabel\" [customColors]=\"customColors\"\n        [barPadding]=\"config.barPadding ? config.barPadding : 3\" [roundEdges]=\"config.roundEdges\" [showDataLabel]=\"config.showDataLabel\">\n    </ngx-charts-bar-horizontal>\n\n    <ngx-charts-bar-vertical-2d *ngIf=\"chartType.key === eChartType.BarVertical2D\" [view]=\"view\" [customColors]=\"customColors\"\n        [results]=\"results\" [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\" [yAxis]=\"config.showYAxis\"\n        [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\" [showXAxisLabel]=\"config.showXAxisLabel\"\n        [showYAxisLabel]=\"config.showYAxisLabel\" [xAxisLabel]=\"config.xAxisLabel\" [yScaleMax]=\"config.yScaleMax\"\n        [yAxisLabel]=\"config.yAxisLabel\" [barPadding]=\"config.barPadding ? config.barPadding : 3\" [roundEdges]=\"config.roundEdges\" [showDataLabel]=\"config.showDataLabel\">\n    </ngx-charts-bar-vertical-2d>\n\n    <ngx-charts-bar-horizontal-2d *ngIf=\"chartType.key === eChartType.BarHorizontal2D\" [view]=\"view\" [customColors]=\"customColors\"\n        [results]=\"results\" [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\" [yAxis]=\"config.showYAxis\"\n        [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\" [showXAxisLabel]=\"config.showXAxisLabel\"\n        [showYAxisLabel]=\"config.showYAxisLabel\" [xAxisLabel]=\"config.xAxisLabel\" [xScaleMax]=\"config.xScaleMax\"\n        [yAxisLabel]=\"config.yAxisLabel\" [barPadding]=\"config.barPadding ? config.barPadding : 3\" [roundEdges]=\"config.roundEdges\" [showDataLabel]=\"config.showDataLabel\">\n    </ngx-charts-bar-horizontal-2d>\n\n    <ngx-charts-bar-vertical-stacked *ngIf=\"chartType.key === eChartType.BarVerticalStacked\"\n        [view]=\"view\" [customColors]=\"customColors\" [results]=\"results\" [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\"\n        [yAxis]=\"config.showYAxis\" [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\"\n        [showXAxisLabel]=\"config.showXAxisLabel\" [showYAxisLabel]=\"config.showYAxisLabel\"\n        [xAxisLabel]=\"config.xAxisLabel\" [yScaleMax]=\"config.yScaleMax\" [yAxisLabel]=\"config.yAxisLabel\" \n        [barPadding]=\"config.barPadding ? config.barPadding : 3\" [showDataLabel]=\"config.showDataLabel\">\n    </ngx-charts-bar-vertical-stacked>\n\n    <ngx-charts-bar-horizontal-stacked *ngIf=\"chartType.key === eChartType.BarHorizontalStacked\"\n        [view]=\"view\" [customColors]=\"customColors\" [results]=\"results\" [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\"\n        [yAxis]=\"config.showYAxis\" [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\"\n        [showXAxisLabel]=\"config.showXAxisLabel\" [showYAxisLabel]=\"config.showYAxisLabel\"\n        [xAxisLabel]=\"config.xAxisLabel\" [xScaleMax]=\"config.xScaleMax\" [yAxisLabel]=\"config.yAxisLabel\"\n        [barPadding]=\"config.barPadding ? config.barPadding : 3\" [showDataLabel]=\"config.showDataLabel\">\n    </ngx-charts-bar-horizontal-stacked>\n\n    <ngx-charts-bar-vertical-normalized *ngIf=\"chartType.key === eChartType.BarVerticalNormalized\"\n        [view]=\"view\" [customColors]=\"customColors\" [results]=\"results\" [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\"\n        [yAxis]=\"config.showYAxis\" [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\"\n        [showXAxisLabel]=\"config.showXAxisLabel\" [showYAxisLabel]=\"config.showYAxisLabel\"\n        [xAxisLabel]=\"config.xAxisLabel\" [yAxisLabel]=\"config.yAxisLabel\"\n        [barPadding]=\"config.barPadding ? config.barPadding : 3\">\n    </ngx-charts-bar-vertical-normalized>\n\n    <ngx-charts-bar-horizontal-normalized *ngIf=\"chartType.key === eChartType.BarHorizontalNormalized\"\n        [view]=\"view\" [customColors]=\"customColors\" [results]=\"results\" [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\"\n        [yAxis]=\"config.showYAxis\" [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\"\n        [showXAxisLabel]=\"config.showXAxisLabel\" [showYAxisLabel]=\"config.showYAxisLabel\"\n        [xAxisLabel]=\"config.xAxisLabel\" [yAxisLabel]=\"config.yAxisLabel\"\n        [barPadding]=\"config.barPadding ? config.barPadding : 3\">\n    </ngx-charts-bar-horizontal-normalized>\n\n    <ngx-charts-pie-chart *ngIf=\"chartType.key === eChartType.Pie\" [view]=\"view\" [customColors]=\"customColors\" [results]=\"results\"\n        [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [labels]=\"config.showXAxis\" [explodeSlices]=\"config.explodeSlices\"\n        [doughnut]=\"config.doughnut\" [gradient]=\"config.showGradient\" [legend]=\"false\" [labels]=\"true\" >\n    </ngx-charts-pie-chart>\n\n    <ngx-charts-advanced-pie-chart *ngIf=\"chartType.key === eChartType.PieAdvanced\" [view]=\"view\" [customColors]=\"customColors\"\n        [results]=\"results\" [gradient]=\"config.showGradient\">\n    </ngx-charts-advanced-pie-chart>\n\n    <ngx-charts-pie-grid *ngIf=\"chartType.key === eChartType.PieGrid\" [view]=\"view\" [customColors]=\"customColors\" [results]=\"results\">\n    </ngx-charts-pie-grid>\n\n    <ngx-charts-line-chart *ngIf=\"chartType.key === eChartType.Line\" [view]=\"view\" [customColors]=\"customColors\" [results]=\"results\"\n        [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\" [yAxis]=\"config.showYAxis\"\n        [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\" [showXAxisLabel]=\"config.showXAxisLabel\"\n        [showYAxisLabel]=\"config.showYAxisLabel\" [xAxisLabel]=\"config.xAxisLabel\" [autoScale]=\"config.autoScale\" [yScaleMin]=\"config.yScaleMin\"\n        [yScaleMax]=\"config.yScaleMax\" [yAxisLabel]=\"config.yAxisLabel\">\n    </ngx-charts-line-chart>\n\n    <ngx-charts-polar-chart *ngIf=\"chartType.key === eChartType.Polar\" [view]=\"view\" [customColors]=\"customColors\" [results]=\"results\"\n        [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\" [yAxis]=\"config.showYAxis\"\n        [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\" [showXAxisLabel]=\"config.showXAxisLabel\"\n        [showYAxisLabel]=\"config.showYAxisLabel\" [xAxisLabel]=\"config.xAxisLabel\" [yAxisLabel]=\"config.yAxisLabel\">\n    </ngx-charts-polar-chart>\n\n    <ngx-charts-area-chart *ngIf=\"chartType.key === eChartType.Area\" [view]=\"view\" [customColors]=\"customColors\" [results]=\"results\"\n        [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\" [yAxis]=\"config.showYAxis\"\n        [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\" [showXAxisLabel]=\"config.showXAxisLabel\"\n        [showYAxisLabel]=\"config.showYAxisLabel\" [xAxisLabel]=\"config.xAxisLabel\" [yScaleMax]=\"config.yScaleMax\"\n        [yAxisLabel]=\"config.yAxisLabel\">\n    </ngx-charts-area-chart>\n\n    <ngx-charts-area-chart-stacked *ngIf=\"chartType.key === eChartType.AreaStacked\" [view]=\"view\" [customColors]=\"customColors\"\n        [results]=\"results\" [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\" [yAxis]=\"config.showYAxis\"\n        [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\" [showXAxisLabel]=\"config.showXAxisLabel\"\n        [showYAxisLabel]=\"config.showYAxisLabel\" [xAxisLabel]=\"config.xAxisLabel\" [yScaleMin]=\"config.yScaleMin\"\n        [yScaleMax]=\"config.yScaleMax\" [yAxisLabel]=\"config.yAxisLabel\">\n    </ngx-charts-area-chart-stacked>\n\n    <ngx-charts-area-chart-normalized *ngIf=\"chartType.key === eChartType.AreaNormalized\" [view]=\"view\" [customColors]=\"customColors\"\n        [results]=\"results\" [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\" [yAxis]=\"config.showYAxis\"\n        [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\" [showXAxisLabel]=\"config.showXAxisLabel\"\n        [showYAxisLabel]=\"config.showYAxisLabel\" [xAxisLabel]=\"config.xAxisLabel\" [yAxisLabel]=\"config.yAxisLabel\">\n    </ngx-charts-area-chart-normalized>\n\n    <combo-chart-component *ngIf=\"chartType.key === eChartType.BarLineCombo\" [view]=\"view\" [customColors]=\"customColors\"\n        [results]=\"results\" [lineChart]=\"results?.lineChartSeries\" [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\" [yAxis]=\"config.showYAxis\"\n        [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\" [showXAxisLabel]=\"config.showXAxisLabel\"\n        [showYAxisLabel]=\"config.showYAxisLabel\" [showRightYAxisLabel]=\"config.showYAxisLabel\" [xAxisLabel]=\"config.xAxisLabel\" [yScaleMax]=\"config.yScaleMax\"\n        [yAxisLabel]=\"config.yAxisLabel\" [yAxisLabelRight]=\"config.yAxisLabelRight\" [separateAxis]=\"config.separateAxis\"\n        [barPadding]=\"config.barPadding ? config.barPadding : 3\" [roundEdges]=\"config.roundEdges\" [showDataLabel]=\"config.showDataLabel\">\n    </combo-chart-component>\n\n    <ngx-charts-bubble-chart\n        *ngIf=\"chartType.key === eChartType.Bubble || chartType.key === eChartType.Error || chartType.key === eChartType.Scatter\"\n        [view]=\"view\" [customColors]=\"customColors\" [results]=\"results\" [xAxis]=\"config.showXAxis\" [yAxis]=\"config.showYAxis\"\n        [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showGridLines]=\"config.showGridLines\" [showXAxisLabel]=\"config.showXAxisLabel\"\n        [showYAxisLabel]=\"config.showYAxisLabel\" [xAxisLabel]=\"config.xAxisLabel\" [autoScale]=\"config.autoScale\" [xScaleMin]=\"config.xScaleMin\"\n        [xScaleMax]=\"config.xScaleMax\" [yScaleMin]=\"config.yScaleMin\" \n        [yAxisLabel]=\"config.yAxisLabel\">\n    </ngx-charts-bubble-chart>\n\n    <ngx-charts-heat-map *ngIf=\"chartType.key === eChartType.HeatMap\" [view]=\"view\" [customColors]=\"customColors\"\n        [gradient]=\"config.showGradient\" [results]=\"results\" [gradient]=\"config.showGradient\" [xAxis]=\"config.showXAxis\"\n        [yAxis]=\"config.showYAxis\" [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showXAxisLabel]=\"config.showXAxisLabel\"\n        [showYAxisLabel]=\"config.showYAxisLabel\" [xAxisLabel]=\"config.xAxisLabel\" [max]=\"config.xScaleMax\"\n        [min]=\"config.xScaleMin\" [yAxisLabel]=\"config.yAxisLabel\">\n    </ngx-charts-heat-map>\n\n    <ngx-charts-tree-map *ngIf=\"chartType.key === eChartType.TreeMap\" [view]=\"view\" [customColors]=\"customColors\"\n        [gradient]=\"config.showGradient\" [results]=\"results\" [gradient]=\"config.showGradient\">\n    </ngx-charts-tree-map>\n\n    <ngx-charts-number-card *ngIf=\"chartType.key === eChartType.Cards\" [view]=\"view\" [customColors]=\"customColors\"\n        [results]=\"results\">\n    </ngx-charts-number-card>\n\n    <ngx-charts-gauge *ngIf=\"chartType.key === eChartType.Gauge\" [view]=\"view\" [customColors]=\"customColors\" [results]=\"results\"\n        [showAxis]=\"config.showXAxis\" [legend]=\"config.showLegend\" [legendPosition]=\"config.legendPosition\" [showAxis]=\"config.showXAxisLabel\"\n        [textValue]=\"config.xAxisLabel\" [min]=\"config.xScaleMin\" [max]=\"config.xScaleMax\" [units]=\"config.yAxisLabel\">\n    </ngx-charts-gauge>\n\n    <ngx-charts-linear-gauge *ngIf=\"chartType.key === eChartType.LinearGauge\" [view]=\"view\" [customColors]=\"customColors\"\n        [results]=\"results\" [min]=\"config.xScaleMin\" [max]=\"config.xScaleMax\" [units]=\"config.yAxisLabel\">\n    </ngx-charts-linear-gauge>\n\n    <google-map *ngIf=\"chartType.key === eChartType.Map\" [results]=\"results\"></google-map>\n</div>\n</div>","import {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ChartBuilderComponent } from './chartBuilder/chart-builder.component';\nimport { DComponentsModule } from 'ngx-d-components';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { GoogleMapComponent } from './googleMap/google-map.component';\nimport { ChartViewComponent } from './chartView/chart-view.component';\nimport { ComboChartComponent, ComboSeriesVerticalComponent } from './comboChart';\nimport { AngularResizedEventModule } from 'angular-resize-event';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    DComponentsModule,\n    NgxChartsModule,\n    AngularResizedEventModule,\n  ],\n  declarations: [\n    ChartBuilderComponent,\n    ChartViewComponent,\n    GoogleMapComponent,\n    ComboChartComponent, ComboSeriesVerticalComponent\n  ],\n  exports: [ChartBuilderComponent, ChartViewComponent, GoogleMapComponent, ComboChartComponent],\n})\nexport class ChartBuilderModule {\n\n}\n","import {\n    Component,\n    Input,\n    ViewEncapsulation,\n    Output,\n    EventEmitter,\n    ViewChild,\n    HostListener,\n    ContentChild,\n    TemplateRef\n  } from '@angular/core';\n  \n  import { curveLinear } from 'd3-shape';\n  import { scaleBand, scaleLinear, scalePoint, scaleTime } from 'd3-scale';\n  import {\n    BaseChartComponent,\n    LineSeriesComponent,\n    ViewDimensions,\n    ColorHelper,\n    calculateViewDimensions\n  } from '@swimlane/ngx-charts';\n  \n  @Component({\n    // tslint:disable-next-line: component-selector\n    selector: 'combo-chart-component',\n    templateUrl: './combo-chart.component.html',\n    styleUrls: ['./combo-chart.component.scss'],\n    encapsulation: ViewEncapsulation.None\n  })\n  export class ComboChartComponent extends BaseChartComponent {\n    @Input() curve: any = curveLinear;\n    @Input() legend = false;\n    @Input() legendTitle: string = 'Legend';\n    @Input() legendPosition: string = 'right';\n    @Input() xAxis;\n    @Input() yAxis;\n    @Input() showXAxisLabel;\n    @Input() showYAxisLabel;\n    @Input() showRightYAxisLabel;\n    @Input() xAxisLabel;\n    @Input() yAxisLabel;\n    @Input() yAxisLabelRight;\n    @Input() yScaleMax;\n    @Input() tooltipDisabled: boolean = false;\n    @Input() gradient: boolean;\n    @Input() showGridLines: boolean = true;\n    @Input() activeEntries: any[] = [];\n    @Input() schemeType: string;\n    @Input() xAxisTickFormatting: any;\n    @Input() yAxisTickFormatting: any;\n    @Input() yRightAxisTickFormatting: any;\n    @Input() roundDomains: boolean = false;\n    @Input() colorSchemeLine = 'fire';\n    @Input() autoScale;\n    @Input() lineChart: any;\n    @Input() yLeftAxisScaleFactor: any;\n    @Input() yRightAxisScaleFactor: any;\n    @Input() rangeFillOpacity: number;\n    @Input() animations: boolean = true;\n    @Input() noBarWhenZero: boolean = true;\n    @Input() roundEdges: boolean = false;\n    @Input() barPadding = 3;\n    @Input() separateAxis = false; // seprate axis for bar/series\n    @Input() showDataLabel = false;\n    @Input() dataLabelFormatting;\n  \n    @Output() activate: EventEmitter<any> = new EventEmitter();\n    @Output() deactivate: EventEmitter<any> = new EventEmitter();\n  \n    @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n    @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<any>;\n  \n    @ViewChild(LineSeriesComponent) lineSeriesComponent: LineSeriesComponent;\n  \n    dims: ViewDimensions;\n    xScale: any;\n    yScale: any;\n    xDomain: any;\n    yDomain: any;\n    transform: string;\n    colors: ColorHelper;\n    colorsLine: ColorHelper;\n    margin: any[] = [10, 20, 10, 20];\n    xAxisHeight: number = 0;\n    yAxisWidth: number = 0;\n    legendOptions: any;\n    scaleType = 'linear';\n    xScaleLine;\n    yScaleLine;\n    xDomainLine;\n    yDomainLine;\n    seriesDomain;\n    scaledAxis;\n    combinedSeries;\n    xSet;\n    filteredDomain;\n    hoveredVertical;\n    yOrientLeft = 'left';\n    yOrientRight = 'right';\n    legendSpacing = 0;\n    bandwidth;\n    // barPadding = 8;\n  \n    trackBy(index, item): string {\n      return item.name;\n    }\n  \n    update(): void {\n      super.update();\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n  \n      if (!this.yAxis) {\n        // this.legendSpacing = 0;\n      } else if (this.showYAxisLabel && this.separateAxis && this.yAxis) {\n        // this.legendSpacing = 100;\n        this.dims.width -= 70;\n      } else {\n        // this.legendSpacing = 40;\n        this.dims.width -= 40;\n      }\n      this.xScale = this.getXScale();\n      this.yScale = this.getYScale();\n  \n      if (this.lineChart) {\n        // line chart\n        this.xDomainLine = this.getXDomainLine();\n        if (this.filteredDomain) {\n          this.xDomainLine = this.filteredDomain;\n        }\n    \n        this.yDomainLine = this.getYDomainLine();\n        this.scaleLines();\n      }\n\n      this.seriesDomain = this.getSeriesDomain();\n\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n  \n      this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n  \n    deactivateAll() {\n      this.activeEntries = [...this.activeEntries];\n      for (const entry of this.activeEntries) {\n        this.deactivate.emit({ value: entry, entries: [] });\n      }\n      this.activeEntries = [];\n    }\n  \n    @HostListener('mouseleave')\n    hideCircles(): void {\n      this.hoveredVertical = null;\n      this.deactivateAll();\n    }\n  \n    updateHoveredVertical(item): void {\n      this.hoveredVertical = item.value;\n      this.deactivateAll();\n    }\n  \n    updateDomain(domain): void {\n      this.filteredDomain = domain;\n      this.xDomainLine = this.filteredDomain;\n      this.xScaleLine = this.getXScaleLine(this.xDomainLine, this.dims.width);\n    }\n  \n    scaleLines() {\n      if (!this.lineChart) { return; }\n\n      if (this.separateAxis) {\n        this.xScaleLine = this.getXScaleLine(this.xDomainLine, this.dims.width);\n        this.yScaleLine = this.getYScaleLine(this.yDomainLine, this.dims.height);\n      } else {\n        this.xScaleLine = this.xScale;\n        this.yScaleLine = this.yScale;\n      }\n    }\n  \n    getSeriesDomain(): any[] {\n      if (this.lineChart) {\n        this.combinedSeries = this.lineChart.slice(0);\n      } else {\n        this.combinedSeries = [];\n      }\n      \n      this.combinedSeries.push({\n        name: this.yAxisLabel,\n        series: this.results\n      });\n      return this.combinedSeries.map(d => d.name);\n    }\n  \n    isDate(value): boolean {\n      if (value instanceof Date) {\n        return true;\n      }\n  \n      return false;\n    }\n  \n    getScaleType(values): string {\n      let date = true;\n      let num = true;\n  \n      for (const value of values) {\n        if (!this.isDate(value)) {\n          date = false;\n        }\n  \n        if (typeof value !== 'number') {\n          num = false;\n        }\n      }\n  \n      if (date) return 'time';\n      if (num) return 'linear';\n      return 'ordinal';\n    }\n  \n    getXDomainLine(): any[] {\n      let values = [];\n\n      for (const results of this.lineChart) {\n        for (const d of results.series) {\n          if (!values.includes(d.name)) {\n            values.push(d.name);\n          }\n        }\n      }\n  \n      this.scaleType = this.getScaleType(values);\n      let domain = [];\n  \n      if (this.scaleType === 'time') {\n        const min = Math.min(...values);\n        const max = Math.max(...values);\n        domain = [min, max];\n      } else if (this.scaleType === 'linear') {\n        values = values.map(v => Number(v));\n        const min = Math.min(...values);\n        const max = Math.max(...values);\n        domain = [min, max];\n      } else {\n        domain = values;\n      }\n  \n      this.xSet = values;\n      return domain;\n    }\n  \n    getYDomainLine(): any[] {\n      const domain = [];\n  \n      for (const results of this.lineChart) {\n        for (const d of results.series) {\n          if (domain.indexOf(d.value) < 0) {\n            domain.push(d.value);\n          }\n          if (d.min !== undefined) {\n            if (domain.indexOf(d.min) < 0) {\n              domain.push(d.min);\n            }\n          }\n          if (d.max !== undefined) {\n            if (domain.indexOf(d.max) < 0) {\n              domain.push(d.max);\n            }\n          }\n        }\n      }\n  \n      let min = Math.min(...domain);\n      const max = Math.max(...domain);\n      if (this.yRightAxisScaleFactor) {\n        const minMax = this.yRightAxisScaleFactor(min, max);\n        return [Math.min(0, minMax.min), minMax.max];\n      } else {\n        min = Math.min(0, min);\n        return [min, max];\n      }\n    }\n  \n    getXScaleLine(domain, width): any {\n      let scale;\n      if (this.bandwidth === undefined) {\n        this.bandwidth = width - this.barPadding;\n      }\n      const offset = Math.floor((width + this.barPadding - (this.bandwidth + this.barPadding) * domain.length) / 2);\n  \n      if (this.scaleType === 'time') {\n        scale = scaleTime().range([0, width]).domain(domain);\n      } else if (this.scaleType === 'linear') {\n        scale = scaleLinear().range([0, width]).domain(domain);\n  \n        if (this.roundDomains) {\n          scale = scale.nice();\n        }\n      } else if (this.scaleType === 'ordinal') {\n        scale = scalePoint()\n          .range([offset + this.bandwidth / 2, width - offset - this.bandwidth / 2])\n          .domain(domain);\n      }\n  \n      return scale;\n    }\n  \n    getYScaleLine(domain, height): any {\n      const scale = scaleLinear().range([height, 0]).domain(domain);\n  \n      return this.roundDomains ? scale.nice() : scale;\n    }\n  \n    getXScale(): any {\n      this.xDomain = this.getXDomain();\n      const spacing = this.xDomain.length / (this.dims.width / this.barPadding + 1);\n      return scaleBand().range([0, this.dims.width]).paddingInner(spacing).domain(this.xDomain);\n    }\n  \n    getYScale(): any {\n      this.yDomain = this.getYDomain();\n      if ( this.yScaleMax ) {\n        this.yDomain[1] = this.yScaleMax;\n      }\n      const scale = scaleLinear().range([this.dims.height, 0]).domain(this.yDomain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n  \n    getXDomain(): any[] {\n      return this.results.map(d => d.name);\n    }\n  \n    getYDomain() {\n      const values = this.results.map(d => d.value);\n      let min = Math.min(0, ...values);\n      let max = Math.max(...values);\n\n      // if we are not using a separate axis for series, check the series values for min/max\n      if (!this.separateAxis && this.lineChart) {\n        let yDomainLine = this.getYDomainLine();\n        if (min > yDomainLine[0]) { min = yDomainLine[0]; }\n        if (max < yDomainLine[1]) { max = yDomainLine[1]; }\n      }\n\n      if (this.yLeftAxisScaleFactor) {\n        const minMax = this.yLeftAxisScaleFactor(min, max);\n        return [Math.min(0, minMax.min), minMax.max];\n      } else {\n        return [min, max];\n      }\n    }\n  \n    onClick(data) {\n      this.select.emit(data);\n    }\n  \n    setColors(): void {\n      let domain;\n      if (this.schemeType === 'ordinal') {\n        domain = this.xDomain;\n      } else {\n        domain = this.yDomain;\n      }\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n\n      if (this.seriesDomain) {\n        this.colorsLine = new ColorHelper(this.colorSchemeLine, this.schemeType, this.seriesDomain, this.customColors);\n      }\n    }\n  \n    getLegendOptions() {\n      const opts = {\n        scaleType: this.schemeType,\n        colors: undefined,\n        domain: [],\n        title: undefined,\n        position: this.legendPosition\n      };\n      if (opts.scaleType === 'ordinal') {\n        opts.domain = this.seriesDomain;\n        opts.colors = this.colorsLine;\n        opts.title = this.legendTitle;\n      } else {\n        opts.domain = this.seriesDomain;\n        opts.colors = this.colors.scale;\n      }\n      return opts;\n    }\n  \n    updateLineWidth(width): void {\n      this.bandwidth = width;\n      this.scaleLines();\n    }\n  \n    updateYAxisWidth({ width }): void {\n      this.yAxisWidth = width + 20;\n      this.update();\n    }\n  \n    updateXAxisHeight({ height }): void {\n      this.xAxisHeight = height;\n      this.update();\n    }\n  \n    onActivate(item) {\n      const idx = this.activeEntries.findIndex(d => {\n        return d.name === item.name && d.value === item.value && d.series === item.series;\n      });\n      if (idx > -1) {\n        return;\n      }\n  \n      this.activeEntries = [item, ...this.activeEntries];\n      this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n  \n    onDeactivate(item) {\n      const idx = this.activeEntries.findIndex(d => {\n        return d.name === item.name && d.value === item.value && d.series === item.series;\n      });\n  \n      this.activeEntries.splice(idx, 1);\n      this.activeEntries = [...this.activeEntries];\n  \n      this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n  }\n  ","<ngx-charts-chart\n  [view]=\"[width + legendSpacing, height]\"\n  [showLegend]=\"legend\"\n  [legendOptions]=\"legendOptions\"\n  [activeEntries]=\"activeEntries\"\n  [animations]=\"animations\"\n  (legendLabelClick)=\"onClick($event)\"\n  (legendLabelActivate)=\"onActivate($event)\"\n  (legendLabelDeactivate)=\"onDeactivate($event)\"\n>\n  <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n    <svg:g\n      ngx-charts-x-axis\n      *ngIf=\"xAxis\"\n      [xScale]=\"xScale\"\n      [dims]=\"dims\"\n      [showLabel]=\"showXAxisLabel\"\n      [labelText]=\"xAxisLabel\"\n      [tickFormatting]=\"xAxisTickFormatting\"\n      (dimensionsChanged)=\"updateXAxisHeight($event)\"\n    ></svg:g>\n    <svg:g\n      ngx-charts-y-axis\n      *ngIf=\"yAxis\"\n      [yScale]=\"yScale\"\n      [dims]=\"dims\"\n      [yOrient]=\"yOrientLeft\"\n      [showGridLines]=\"showGridLines\"\n      [showLabel]=\"showYAxisLabel\"\n      [labelText]=\"yAxisLabel\"\n      [tickFormatting]=\"yAxisTickFormatting\"\n      (dimensionsChanged)=\"updateYAxisWidth($event)\"\n    ></svg:g>\n    <svg:g *ngIf=\"lineChart && yAxis && separateAxis\"\n      ngx-charts-y-axis\n      [yScale]=\"yScaleLine\"\n      [dims]=\"dims\"\n      [yOrient]=\"yOrientRight\"\n      [showGridLines]=\"false\"\n      [showLabel]=\"showRightYAxisLabel\"\n      [labelText]=\"yAxisLabelRight\"\n      [tickFormatting]=\"yRightAxisTickFormatting\"\n      (dimensionsChanged)=\"updateYAxisWidth($event)\"\n    ></svg:g>\n    <svg:g \n      ngx-combo-charts-series-vertical\n      [xScale]=\"xScale\"\n      [yScale]=\"yScale\"\n      [colors]=\"colors\"\n      [series]=\"results\"\n      [seriesLine]=\"lineChart\"\n      [dims]=\"dims\"\n      [gradient]=\"gradient\"\n      tooltipDisabled=\"true\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      [noBarWhenZero]=\"noBarWhenZero\"\n      [roundEdges]=\"roundEdges\"\n      [barPadding]=\"barPadding\"\n      [showDataLabel]=\"showDataLabel\"\n      [dataLabelFormatting]=\"dataLabelFormatting\"\n      (activate)=\"onActivate($event)\"\n      (deactivate)=\"onDeactivate($event)\"\n      (bandwidth)=\"updateLineWidth($event)\"\n      (select)=\"onClick($event)\"\n    ></svg:g>\n  </svg:g>\n  <svg:g *ngIf=\"lineChart\" [attr.transform]=\"transform\" class=\"line-chart chart\">\n    <svg:g>\n      <svg:g *ngFor=\"let series of lineChart; trackBy: trackBy\">\n        <svg:g\n          ngx-charts-line-series\n          [xScale]=\"xScaleLine\"\n          [yScale]=\"yScaleLine\"\n          [colors]=\"colorsLine\"\n          [data]=\"series\"\n          [activeEntries]=\"activeEntries\"\n          [scaleType]=\"scaleType\"\n          [curve]=\"curve\"\n          [rangeFillOpacity]=\"rangeFillOpacity\"\n          [animations]=\"animations\"\n        />\n      </svg:g>\n\n      <svg:g\n        ngx-charts-tooltip-area\n        *ngIf=\"!tooltipDisabled\"\n        [dims]=\"dims\"\n        [xSet]=\"xSet\"\n        [xScale]=\"xScaleLine\"\n        [yScale]=\"yScaleLine\"\n        [results]=\"combinedSeries\"\n        [colors]=\"colorsLine\"\n        [tooltipDisabled]=\"tooltipDisabled\"\n        (hover)=\"updateHoveredVertical($event)\"\n      />\n\n      <svg:g *ngFor=\"let series of lineChart\">\n        <svg:g\n          ngx-charts-circle-series\n          [xScale]=\"xScaleLine\"\n          [yScale]=\"yScaleLine\"\n          [colors]=\"colorsLine\"\n          [data]=\"series\"\n          [scaleType]=\"scaleType\"\n          [visibleValue]=\"hoveredVertical\"\n          [activeEntries]=\"activeEntries\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n        />\n      </svg:g>\n    </svg:g>\n  </svg:g>\n</ngx-charts-chart>\n","import { Component, Input, Output, EventEmitter, OnChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { formatLabel, escapeLabel } from '@swimlane/ngx-charts';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'g[ngx-combo-charts-series-vertical]',\n  template: `\n    <svg:g\n      ngx-charts-bar\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\n      [@animationState]=\"'active'\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"'vertical'\"\n      [roundEdges]=\"bar.roundEdges\"\n      [gradient]=\"gradient\"\n      [isActive]=\"isActive(bar.data)\"\n      [animations]=\"animations\"\n      [noBarWhenZero]=\"noBarWhenZero\"\n      (select)=\"onClick($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"'top'\"\n      [tooltipType]=\"'tooltip'\"\n      [tooltipTitle]=\"bar.tooltipText\"\n    ></svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n    <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"'vertical'\"\n      />\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition('* => void', [\n        style({\n          opacity: 1,\n          transform: '*'\n        }),\n        animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n      ])\n    ])\n  ]\n})\nexport class ComboSeriesVerticalComponent implements OnChanges {\n  @Input() dims;\n  @Input() type = 'standard';\n  @Input() series;\n  @Input() seriesLine;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() colors;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() gradient: boolean;\n  @Input() activeEntries: any[];\n  @Input() seriesName: string;\n  @Input() animations: boolean = true;\n  @Input() noBarWhenZero: boolean = true;\n  @Input() showDataLabel: boolean = false;\n  @Input() dataLabelFormatting: any;\n  @Input() roundEdges: boolean = false;\n  @Input() barPadding = 3;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n  @Output() bandwidth = new EventEmitter();\n  @Output() dataLabelHeightChanged = new EventEmitter();\n\n  bars: any;\n  barsForDataLabels: Array<{ x: number; y: number; width: number; height: number; total: number; series: string }> = [];\n  x: any;\n  y: any;\n\n  ngOnChanges(changes): void {\n    this.update();\n  }\n\n  update(): void {\n    let width;\n    if (this.series.length) {\n      width = this.xScale.bandwidth();\n      this.bandwidth.emit(width);\n    }\n\n    let d0 = 0;\n    let total;\n    if (this.type === 'normalized') {\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n    }\n\n    this.bars = this.series.map((d, index) => {\n      let value = d.value;\n      const label = d.name;\n      const formattedLabel = formatLabel(label);\n      const roundEdges = this.type === 'standard' && this.roundEdges;\n\n      const bar: any = {\n        value,\n        label,\n        roundEdges,\n        data: d,\n        width,\n        formattedLabel,\n        height: 0,\n        x: 0,\n        y: 0,\n      };\n\n      if (this.type === 'standard') {\n        bar.height = Math.abs(this.yScale(value) - this.yScale(0));\n        bar.x = this.xScale(label);\n\n        if (value < 0) {\n          bar.y = this.yScale(0);\n        } else {\n          bar.y = this.yScale(value);\n        }\n      } else if (this.type === 'stacked') {\n        const offset0 = d0;\n        const offset1 = offset0 + value;\n        d0 += value;\n\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\n        bar.x = 0;\n        bar.y = this.yScale(offset1);\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n      } else if (this.type === 'normalized') {\n        let offset0 = d0;\n        let offset1 = offset0 + value;\n        d0 += value;\n\n        if (total > 0) {\n          offset0 = (offset0 * 100) / total;\n          offset1 = (offset1 * 100) / total;\n        } else {\n          offset0 = 0;\n          offset1 = 0;\n        }\n\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\n        bar.x = 0;\n        bar.y = this.yScale(offset1);\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n        value = (offset1 - offset0).toFixed(2) + '%';\n      }\n\n      if (this.colors.scaleType === 'ordinal') {\n        bar.color = this.colors.getColor(label);\n      } else {\n        if (this.type === 'standard') {\n          bar.color = this.colors.getColor(value);\n          bar.gradientStops = this.colors.getLinearGradientStops(value);\n        } else {\n          bar.color = this.colors.getColor(bar.offset1);\n          bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n        }\n      }\n\n     let tooltipLabel = formattedLabel;\n      bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n      if (this.seriesName) {\n        tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n        bar.data.series = this.seriesName;\n        bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n      }\n\n      bar.tooltipText = this.tooltipDisabled\n        ? undefined\n        : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${\n          this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()\n        }</span>\n      `;\n\n      return bar;\n    });\n\n    this.updateDataLabels();\n  }\n\n  updateDataLabels() {\n    if (this.type === 'stacked') {\n      this.barsForDataLabels = [];\n      const section: any = {};\n      section.series = this.seriesName;\n      const totalPositive = this.series.map(d => d.value).reduce((sum, d) => (d > 0 ? sum + d : sum), 0);\n      const totalNegative = this.series.map(d => d.value).reduce((sum, d) => (d < 0 ? sum + d : sum), 0);\n      section.total = totalPositive + totalNegative;\n      section.x = 0;\n      section.y = 0;\n      if (section.total > 0) {\n        section.height = this.yScale(totalPositive);\n      } else {\n        section.height = this.yScale(totalNegative);\n      }\n      section.width = this.xScale.bandwidth();\n      this.barsForDataLabels.push(section);\n    } else {\n      this.barsForDataLabels = this.series.map(d => {\n        const section: any = {};\n        section.series = this.seriesName ? this.seriesName : d.name;\n        section.total = d.value;\n        section.x = this.xScale(d.name);\n        section.y = this.yScale(0);\n        section.height = this.yScale(section.total) - this.yScale(0);\n        section.width = this.xScale.bandwidth();\n        return section;\n      });\n    }\n  }\n  \n  isActive(entry): boolean {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  trackBy(index, bar): string {\n    return bar.label;\n  }\n}\n","export * from './combo-chart.component';\nexport * from './combo-series-vertical.component';\n","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { ResultsIndexComponent } from '../../../../+hub/results';\n\ndeclare var google: any;\n\n@Component({\n    selector: 'google-map',\n    templateUrl: 'google-map.component.html'\n})\nexport class GoogleMapComponent implements OnInit, OnChanges {\n    @Input() results: any[];\n\n    public googleMapsAPIKey: string;\n    public isLoaded = false;\n\n    constructor(private authService: AuthService) { }\n\n    ngOnInit() {\n        this.authService.getGlobalCachePromise().then(cache => {\n            this.googleMapsAPIKey = cache.googleMapsAPIKey;\n\n            this.addMapsScript();\n        });\n    }\n\n    ngOnChanges() {\n        if (this.isLoaded) {\n            this.loadMapsData();\n        }\n    }\n\n    addMapsScript() {\n        let googleMapsUrl = `https://maps.googleapis.com/maps/api/js?key=${this.googleMapsAPIKey}`;\n        if (!document.querySelectorAll(`[src=\"${googleMapsUrl}\"]`).length) {\n            document.body.appendChild(Object.assign(\n                document.createElement('script'), {\n                    type: 'text/javascript',\n                    src: googleMapsUrl,\n                    onload: () => {\n                        this.loadMapsData();\n                        this.isLoaded = true;\n                    }\n                }));\n        } else {\n            this.loadMapsData();\n            this.isLoaded = true;\n        }\n    }\n\n    loadMapsData() {\n        if (this.results && this.results.length > 0) {\n            let mapProp = {\n                center: new google.maps.LatLng(this.results[0].latitude, this.results[0].longitude),\n                zoom: 5,\n                mapTypeId: google.maps.MapTypeId.ROADMAP\n            };\n\n            let map = new google.maps.Map(document.getElementById('map'), mapProp);\n            let bounds = new google.maps.LatLngBounds();\n            this.results.forEach(result => {\n                let latLong = { lat: result.latitude, lng: result.longitude };\n                let marker = new google.maps.Marker({\n                    position: latLong,\n                    label: result.name + ' / ' + result.value,\n                    animation: google.maps.Animation.DROP,\n                    map: map\n                });\n\n                bounds.extend(latLong);\n            });\n            map.fitBounds(bounds);\n        }\n    }\n\n}\n","<div id=\"map\" style=\"width:100%;height:500px;\">Please wait for map to load...</div>\n","import {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { DexihInvalidFormIconComponent } from './dexih-invalid-form-icon/dexih-invalid-form-icon.component';\nimport { DexihInvalidFormDetailsComponent } from './dexih-invalid-form-details/dexih-invalid-form-details.component';\nimport { DComponentsModule } from 'ngx-d-components';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    DComponentsModule\n  ],\n  declarations: [\n    DexihInvalidFormIconComponent,\n    DexihInvalidFormDetailsComponent\n  ],\n  exports: [\n    DexihInvalidFormIconComponent,\n    DexihInvalidFormDetailsComponent\n  ],\n})\nexport class DexihFormControlsModule {\n\n}\n","import { AbstractControl, FormGroup, FormArray } from '@angular/forms';\n\nexport class DexihFormErrorsModule {\n\n    public static createErrorMessage(key: string, control: AbstractControl): string {\n        let message = '';\n        switch (key) {\n            case 'minlength':\n                message = 'Value is ' +\n                    control.errors.minlength.actualLength +\n                    ' characters long, required minimum length is '\n                    + control.errors.minlength.requiredLength + ' characters.';\n                break;\n            case 'maxlength':\n                message = 'Value is ' +\n                    control.errors.maxlength.actualLength +\n                    ' characters long, required maximum length is '\n                    + control.errors.maxlength.requiredLength + ' characters.';\n                break;\n            case 'maxvalue':\n                message = 'Value is ' +\n                    control.value +\n                    ' required maximum is '\n                    + control.errors.maxvalue.requiredValue + '.';\n                break;\n            case 'minvalue':\n                message = 'Value is ' +\n                    control.value +\n                    ' required minimum is '\n                    + control.errors.minvalue.requiredValue + '.';\n                break;\n            case 'required':\n                message = 'A value is required.';\n                break;\n            case 'dataType':\n                message = 'There is a datatype mismatch.';\n                break;\n            default:\n                message = 'Field error: ' + key;\n        }\n        return message;\n    }\n    \n}","import { Component, OnInit, OnChanges, OnDestroy, Input } from '@angular/core';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { AbstractControl, FormGroup, FormArray, FormControl } from '@angular/forms';\nimport { map } from 'rxjs/operators';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DexihDatalinkTransformItem, eTransformItemType, DexihDatalinkTransform, eFunctionType, eTransformType } from '../../../shared.models';\nimport { DexihFormErrorsModule} from '../dexih-form-errors.module';\n\nclass ControlError {\n    public field: string;\n    public name: string;\n    public position: number;\n    public errors: string[];\n    public link: string[];\n\n    public childControlErrors: ControlError[];\n\n    constructor() {\n        this.childControlErrors = new Array<ControlError>();\n        this.errors = [];\n    }\n}\n\n@Component({\n    selector: 'dexih-invalid-form-details',\n    templateUrl: './dexih-invalid-form-details.component.html',\n})\nexport class DexihInvalidFormDetailsComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() control: AbstractControl;\n    @Input() baseLink: string;\n\n    public showErrors = false;\n\n    private _changesSubscription: Subscription;\n\n    valid = true;\n    public controlErrors = [];\n\n    constructor(public router: Router, public route: ActivatedRoute) { }\n\n    ngOnInit() { }\n\n    ngOnChanges() {\n        if (!this.control) {\n            this.valid = true;\n            this.controlErrors = [];\n            return;\n        }\n\n        this.refresh();\n\n        if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n        this._changesSubscription = this.control.statusChanges.subscribe(() => {\n            this.refresh();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n    }\n\n    refresh() {\n        if (this.control && this.control.invalid) {\n            this.valid = false;\n            this.controlErrors = this.getFormErrors();\n        } else {\n            this.valid = true;\n            this.controlErrors = [];\n        }\n    }\n\n    public getFormErrors(): ControlError[] {\n        return this.getFormErrorsRecursive(<FormGroup>this.control, 0, null);\n    }\n\n\n    private getFormErrorsRecursive(form: FormGroup, depth: number, parentControlError: ControlError): ControlError[] {\n        let controlErrors = [];\n\n        if (form && form.invalid && form.controls) {\n            for (const field of Object.keys(form.controls)) {\n                const control = form.get(field);\n\n                // if the control is dirty or flag is set to show all errors.\n                if (control && control.invalid) {\n\n                    if (control instanceof FormArray) {\n                        const formArray = <FormArray>control;\n                        let controls = formArray.controls.sort((a: FormGroup, b: FormGroup) => {\n                            if (a.controls.position) {\n                                return a.controls.position.value - b.controls.position.value;\n                            }\n                            return 1;\n                        });\n\n                        controls.forEach((cont, formIndex) => {\n                            if (cont.invalid) {\n                            let controlError = new ControlError();\n\n                            if (cont.value && cont.value.name) {\n                                controlError.name = cont.value.name;\n                            }\n\n                            this.setError(field, cont, controlError, form, parentControlError);\n                            controlError.position = formIndex + 1;\n                            controlError.childControlErrors = this.getFormErrorsRecursive(<FormGroup>cont, depth + 1,\n                                    controlError);\n                            controlErrors.push(controlError);\n                        }\n                        });\n                    } else if (control instanceof FormGroup) {\n                        let controlError = new ControlError();\n\n                        if (control.value && control.value.name) {\n                            controlError.name = control.value.name;\n                        }\n\n                        this.setError(field, control, controlError, form, parentControlError);\n                        controlError.position = null;\n                        controlError.childControlErrors = this.getFormErrorsRecursive(<FormGroup>control, depth + 1, controlError);\n                        controlErrors.push(controlError);\n\n                    } else {\n                        let controlError = new ControlError();\n                        this.setError(field, control, controlError, form, parentControlError);\n                        controlError.position = null;\n                        for (const key of Object.keys(control.errors)) {\n                                let message = DexihFormErrorsModule.createErrorMessage(key, control);\n                                controlError.errors.push(message);\n                            }\n                            controlErrors.push(controlError);\n                        }\n                }\n            }\n        }\n\n        return controlErrors;\n    }\n\n    private setError(field: string, control: AbstractControl, controlError: ControlError,\n            parentControl: AbstractControl, parentControlError: ControlError) {\n        let link: any[];\n\n        switch (field) {\n            case 'dexihDatalinkTransforms':\n                let transform = <DexihDatalinkTransform>control.value;\n                if (transform.name) {\n                    controlError.field = 'Transform ' + transform.name;\n                } else {\n                    controlError.field = 'Transform ' + eTransformType[transform.transformType];\n                }\n\n                link = ['transforms', 'transform', control.value.key];\n                break;\n            case 'dexihDatalinkTransformItems':\n                let item = <DexihDatalinkTransformItem>control.value;\n                const functionType = this.getFunctionType(parentControl.value);\n\n                switch (item.transformItemType) {\n                    case eTransformItemType.BuiltInFunction:\n                        controlError.field = item.functionMethodName;\n                        link = ['standard-function-edit', functionType, item.key];\n                        break;\n                    case eTransformItemType.CustomFunction:\n                        controlError.field = 'Custom Function';\n                        link = ['custom-function-edit', functionType, item.key];\n                        break;\n                    case eTransformItemType.Column:\n                    case eTransformItemType.JoinNode:\n                    case eTransformItemType.GroupNode:\n                    case eTransformItemType.ColumnPair:\n                    case eTransformItemType.Sort:\n                    case eTransformItemType.JoinPair:\n                    case eTransformItemType.FilterPair:\n                    case eTransformItemType.AggregatePair:\n                    case eTransformItemType.Series:\n                        controlError.field = eTransformItemType[item.transformItemType] + ' mapping';\n                        link = ['mapping-edit', item.transformItemType, item.key];\n                        break;\n                    case eTransformItemType.UnGroup:\n                        controlError.field = 'UnGroup';\n                        link = ['unGroup-edit', item.key];\n                        break;\n                }\n                controlError.link = [];\n                break;\n            case 'dexihFunctionParameters':\n                controlError.field = 'Parameter';\n                controlError.link = [];\n                break;\n            case 'arrayParameters':\n                controlError.field = 'Array Item';\n                controlError.link = [];\n                break;\n            case 'functionMethodName':\n                controlError.field = 'Standard Function';\n                controlError.link = [];\n                break;\n            default:\n                controlError.field = field;\n                controlError.link = [];\n        }\n\n        if (link) {\n            if (parentControlError && parentControlError.link) {\n                controlError.link = parentControlError.link.concat(link);\n            } else {\n                controlError.link = link;\n            }\n        } else {\n            if (parentControlError && parentControlError.link) {\n                controlError.link = parentControlError.link\n            }\n        }\n    }\n\n    public getFunctionType(datalinkTransform: DexihDatalinkTransform): eFunctionType {\n        let functionType: eFunctionType;\n        switch (datalinkTransform.transformType) {\n            case eTransformType.Filter:\n                functionType = eFunctionType.Condition;\n                break;\n            case eTransformType.Mapping:\n                functionType = eFunctionType.Map;\n                break;\n            case eTransformType.Join:\n                functionType = eFunctionType.JoinCondition;\n                break;\n            case eTransformType.Group:\n            case eTransformType.Aggregate:\n                functionType = eFunctionType.Aggregate;\n                break;\n            case eTransformType.Series:\n                functionType = eFunctionType.Series;\n                break;\n            case eTransformType.Sort:\n                functionType = eFunctionType.Sort;\n                break;\n            case eTransformType.Validation:\n                functionType = eFunctionType.Validate;\n                break;\n            case eTransformType.Rows:\n                functionType = eFunctionType.Rows;\n                break;\n            case eTransformType.Lookup:\n                functionType = eFunctionType.JoinCondition;\n                break;\n            case eTransformType.Delta:\n                break;\n        }\n\n        return functionType;\n    }\n}\n","<d-button-dropdown \n[iconClass]=\"valid ? 'fa fa-check' : 'fa fa-exclamation-circle'\"\n[buttonClass]=\"valid ? 'btn btn-success' : 'btn btn-danger'\"\n[text]= \"valid ? 'Valid' : 'Warnings'\" \ntitle=\"Potential errors and warnings.\"\n[pullRight]=\"true\"\n>\n\n<ng-template [ngIf]=\"valid\">\n    <h5 class=\"dropdown-header\">The current form is valid.</h5>\n</ng-template>\n\n<!-- Recurs through the errors -->\n<ng-template #recursiveList let-list>\n    \n    <li *ngFor=\"let item of list\">\n        <span *ngIf=\"item.childControlErrors.length > 0\">\n            <a class=\"dropdown-item\" [routerLink]=\"item.link\">{{item.field}} {{item.name}}</a>\n            <ul>\n                <ng-container *ngTemplateOutlet=\"recursiveList; context:{ $implicit: item.childControlErrors }\">\n                </ng-container>\n            </ul>\n        </span>\n        <a *ngFor=\"let error of item.errors\" class=\"dropdown-item\" [routerLink]=\"item.link\">{{item.field}} - {{error}}</a>\n    </li>\n</ng-template>\n\n<!-- Recurs through the errors -->\n<ng-container *ngTemplateOutlet=\"recursiveList; context:{ $implicit: controlErrors }\">\n</ng-container>\n\n</d-button-dropdown>\n","import { Component, OnInit, OnChanges, OnDestroy, Input, AfterViewInit } from '@angular/core';\nimport { Subscription} from 'rxjs';\nimport { AbstractControl, FormGroup, FormArray } from '@angular/forms';\nimport { DexihFormErrorsModule } from '../dexih-form-errors.module';\n\n@Component({\n    selector: 'dexih-invalid-form-icon',\n    templateUrl: './dexih-invalid-form-icon.component.html'\n})\n\nexport class DexihInvalidFormIconComponent implements AfterViewInit  {\n    @Input() control: AbstractControl;\n\n    public pageLoaded = false;\n\n    constructor() { }\n\n\n    // workaround to stop ExpressionChangedAfterItHasBeenCheckedError\n    ngAfterViewInit() {\n        this.pageLoaded = true;\n    }\n\n    isFormValid(): boolean {\n        if (this.pageLoaded) {\n            return this.control.valid;\n        } else {\n            return false;\n        }\n    }\n\n}\n","<span *ngIf=\"!isFormValid\">&nbsp;<i title='There are errors with this control' class=\"fa fa-exclamation-circle text-danger\"></i></span>","export * from './dexih-form-controls.module';\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from '../../../+auth/auth.models';\n\n@Component({\n    selector: 'dexih-message',\n    templateUrl: './dexih-message.component.html',\n})\n\nexport class DexihMessageComponent implements OnInit {\n    @Input() message: Message;\n\n    isHidden = true;\n\n    ngOnInit() {\n    }\n\n    public addMessage(message: Message) {\n        this.message = message;\n    }\n\n    public addErrorMessage(messageString: string) {\n        this.addMessage(new Message(false, messageString, null, null));\n    }\n\n    public addSuccessMessage(messageString: string) {\n        this.addMessage(new Message(true, messageString, null, null));\n    }\n\n    public reset() {\n        this.message = null;\n    }\n}\n","<section *ngIf=\"message\">\n    <div class=\"alert alert-dismissible\" [class.alert-danger]=\"message.success == false\" [class.alert-success]=\"message.success == true\">\n        <div style=\"white-space: pre-wrap;\">{{message.message}}</div>\n        <button type=\"button\" class=\"close\" (click)=\"reset()\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <div *ngIf=\"message.exceptionDetails && message.message != message.exceptionDetails\">\n            <hr>\n            <a class=\"btn btn-sm btn-primary text-white\" (click)='isHidden = !isHidden'>Details</a>\n            <div *ngIf=\"!isHidden && message.exceptionDetails && message.message != message.exceptionDetails\">\n                <hr>\n                <pre style=\"word-wrap: break-word;\">{{message.exceptionDetails}}</pre>\n            </div>\n        </div>\n    </div>\n</section>","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DexihMessageComponent } from './dexih-message.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n  ],\n  declarations: [\n    DexihMessageComponent,\n  ],\n  exports: [\n    DexihMessageComponent\n  ],\n})\nexport class DexihMessageModule {\n}\n","export * from './dexih-message.component';\nexport * from './dexih-message.module';\n\n","import { Component, OnDestroy, OnInit, EventEmitter, Output, Input } from '@angular/core';\nimport { downloadFormats } from '../../../../+hub/hub.query.models';\nimport { eDownloadFormat } from '../../../shared.models';\n\n@Component({\n    selector: 'download-button',\n    templateUrl: './download-button.component.html'\n})\n\nexport class DownloadButtonComponent implements OnInit, OnDestroy {\n    @Input() autoCompact = true;\n    @Output() download = new EventEmitter<eDownloadFormat>();\n\n    eDownloadFormat = eDownloadFormat;\n    downloadFormats = downloadFormats;\n\n    constructor() { }\n\n    ngOnInit() {\n\n    }\n\n    ngOnDestroy() {\n     }\n\n     doDownload(format: eDownloadFormat) {\n         this.download.emit(format);\n     }\n\n\n\n}\n","<d-button-dropdown text=\"Download (all rows)\" iconClass=\"fa fa-download\" [autoCompact]=\"autoCompact\">\n    <a *ngFor=\"let downloadFormat of downloadFormats\" class=\"dropdown-item\" (click)=\"doDownload(downloadFormat.key)\">{{downloadFormat.name}}</a>\n</d-button-dropdown>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'encryption-status-icon',\n    templateUrl: './encryption-status.component.html'\n})\n\nexport class EncryptionStatusIconComponent implements OnInit {\n    @Input() isEncrypted = false;\n\n    @Output() click = new EventEmitter();\n\n    constructor() { }\n\n    ngOnInit() { }\n\n    doClick() {\n        this.click.emit(true);\n    }\n}\n","<span *ngIf='isEncrypted' class=\"text-success\"> <i class=\"fa fa-lg fa-fw fa-lock text-success'\" title=\"This agent is secure and sends/receives data with encryption.\"></i></span>\n<span *ngIf='!isEncrypted' class=\"text-danger\"><i class=\"fa fa-lg fa-fw fa-info-circle text-warning'\" title=\"Warning: This agent sends/receives data without encryption.\" ></i></span>\n","import {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { EncryptionStatusIconComponent } from './encryption-status/encryption-status.component';\nimport { PrivacyStatusButtonComponent } from './privacy-status/privacy-status.component';\nimport { DownloadButtonComponent } from './download-button/download-button.component';\nimport { DComponentsModule } from 'ngx-d-components';\nimport { PrintButtonComponent} from './print/print-button.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    DComponentsModule\n  ],\n  declarations: [\n    EncryptionStatusIconComponent,\n    PrivacyStatusButtonComponent,\n    DownloadButtonComponent,\n    PrintButtonComponent\n  ],\n  exports: [\n    EncryptionStatusIconComponent,\n    PrivacyStatusButtonComponent,\n    DownloadButtonComponent,\n    PrintButtonComponent\n  ],\n})\nexport class DexihIconsModule {\n\n}\n","export * from './icons.module';\n","import { Component, OnDestroy, OnInit, EventEmitter, Output, Input } from '@angular/core';\n\n@Component({\n    selector: 'print-button',\n    templateUrl: './print-button.component.html'\n})\n\nexport class PrintButtonComponent implements OnInit, OnDestroy {\n    @Input() autoCompact = true;\n    @Input() element = 'print-body';\n\n    constructor() { }\n\n    ngOnInit() {\n\n    }\n\n    ngOnDestroy() {\n     }\n\n     print(): void {\n        let printContents, popupWin;\n        printContents = document.getElementById(this.element).innerHTML;\n        popupWin = window.open('', '_blank', 'top=0,left=0,height=100%,width=auto');\n        popupWin.document.open();\n        popupWin.document.write(`\n          <html>\n            <head>\n              <title>Print tab</title>\n              <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\n              <style>\n              </style>\n            </head>\n        <body onload=\"window.print();window.close()\">${printContents}</body>\n          </html>`\n        );\n        popupWin.document.close();\n    }\n\n}\n","<d-button iconClass=\"fa fa-print\" (click)=\"print()\" id=\"print\">Print</d-button>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { eDataPrivacyStatus } from '../../../shared.models';\n\n@Component({\n    selector: 'privacy-status-icon',\n    templateUrl: './privacy-status.component.html'\n})\n\nexport class PrivacyStatusButtonComponent implements OnInit {\n    @Input() privacyStatus: eDataPrivacyStatus;\n\n    eDataPrivacyStatus = eDataPrivacyStatus;\n\n    @Output() click = new EventEmitter();\n\n    constructor() { }\n\n    ngOnInit() {  }\n\n    doClick() {\n        this.click.emit(true);\n    }\n}\n","<span *ngIf='privacyStatus == eDataPrivacyStatus.Internet' class=\"text-primary\"><i  class=\"fa fa-lg fa-globe\" title=\"This item sends data across the internet.\"></i></span>\n<span *ngIf='privacyStatus == eDataPrivacyStatus.Lan' class=\"text-success\"><i class=\"fa fa-lg fa-shield\" title=\"This item sends data to the local network.\" ></i></span>\n<span *ngIf='privacyStatus == eDataPrivacyStatus.Proxy' class=\"text-warning\"><i class=\"fa fa-lg fa-info-circle\" title=\"This item sends data through a proxy server.\" ></i></span>\n<span *ngIf='privacyStatus == eDataPrivacyStatus.NotAllowed' class=\"text-warning\"><i class=\"fa fa-lg fa-stop-circle-o\" title=\"This item is not allowed to send data.\" ></i></span>\n","import { Component, OnInit, Input, OnChanges, Output, EventEmitter, OnDestroy, SimpleChanges } from '@angular/core';\nimport { SelectQuery, InputColumn, TableColumn, SelectColumn, eSortDirection, Filter, eTypeCode, eCompare } from '../../shared.models';\nimport { DexihInputParameter } from '../../../+hub/hub.models';\nimport { compare } from '../../../+hub/hub.query.models';\nimport { TypeCodes } from '../../../+hub/hub.remote.models';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n    selector: 'query-builder',\n    templateUrl: 'query-builder.component.html',\n    styleUrls: ['./query-builder.component.scss']\n})\n\nexport class QueryBuilderComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() selectQuery: SelectQuery;\n    @Input() columns: TableColumn[];\n    @Input() inputColumns: InputColumn[];\n    @Input() parameters: DexihInputParameter[];\n    @Input() refreshEvent: Observable<void>;\n    @Input() requiresRefreshEvent: Observable<void>;\n\n    @Output() hasChanged = new EventEmitter();\n    @Output() onRefreshData = new EventEmitter();\n\n    private _refreshSubscription: Subscription;\n    private _requiresRefreshSubscription: Subscription;\n    \n    selectColumns: SelectColumn[];\n    sortColumns: any[];\n\n    compare = compare;\n\n    allRows = false;\n    savedRowCount: number;\n    typeCodes = TypeCodes;\n    eCompare = eCompare;\n\n    requiresRefresh = false;\n\n    variables: string[];\n\n    constructor() { }\n\n    ngOnInit() {\n        if (!this.selectQuery) {\n            this.selectQuery = new SelectQuery();\n            this.selectQuery.rows = 100;\n        }\n\n        if (this.selectQuery.sorts) {\n            this.selectQuery.sorts.forEach(sort => {\n                sort.column['runTime'] = sort.column.name + sort.direction;\n            });\n        }\n\n        if (this.refreshEvent) {\n            this._refreshSubscription = this.refreshEvent.subscribe(() => {\n                this.requiresRefresh = false;\n            });\n        }\n\n        if (this.requiresRefreshEvent) {\n            this._requiresRefreshSubscription = this.requiresRefreshEvent.subscribe(() => {\n                this.requiresRefresh = true;\n            });\n        }\n\n        this.allRows = this.selectQuery.rows < 0 ? true : false;\n    }\n\n    ngOnDestroy() {\n        if (this._refreshSubscription) { this._refreshSubscription.unsubscribe(); }\n        if (this._requiresRefreshSubscription) { this._requiresRefreshSubscription.unsubscribe(); }\n    }\n\n    ngOnChanges(changed: SimpleChanges) {\n        if (this.parameters) {\n            this.variables = this.parameters.map(c => '{' + c.name + '}');\n        }\n        if (this.columns) {\n            this.selectColumns = new Array(this.columns.length);\n            this.sortColumns = new Array(this.columns.length * 2);\n\n            for (let i = 0; i < this.columns.length; i++) {\n                this.selectColumns[i] = { column: this.columns[i], aggregate: null, outputColumn: null };\n\n                let column1 = Object.assign({}, this.columns[i]);\n                column1['details'] = column1.logicalName + ' asc';\n                column1['runTime'] = column1.name + eSortDirection.Ascending;\n                this.sortColumns[i * 2] = { key: column1['details'], column: column1, direction: eSortDirection.Ascending };\n\n                let column2 = Object.assign({}, this.columns[i]);\n                column2['details'] = column2.logicalName + ' desc';\n                column2['runTime'] = column2.name + eSortDirection.Descending;\n                this.sortColumns[i * 2 + 1] = { key: column2['details'], column: column2, direction: eSortDirection.Descending };\n            }\n        }\n    }\n\n    addFilter(index: number) {\n        let filter = new Filter();\n        filter.compareDataType = eTypeCode.String;\n        this.selectQuery.filters.splice(index, 0, filter);\n        this.onChanged();\n    }\n\n    removeFilter(index: number) {\n        this.selectQuery.filters.splice(index, 1);\n        this.onChanged();\n    }\n\n    selectAllRows() {\n        if (this.allRows) {\n            this.selectQuery.rows = this.savedRowCount > 0 ? this.savedRowCount : 100;\n        } else {\n            this.savedRowCount = this.selectQuery.rows;\n            this.selectQuery.rows = -1;\n        }\n        this.onChanged();\n    }\n\n    refreshData() {\n        this.onRefreshData.emit();\n    }\n\n    onChanged() {\n        this.hasChanged.emit();\n        this.requiresRefresh = true;\n    }\n}\n","<div *ngIf=\"selectQuery\">\n    <div class=\"d-flex flex-wrap\" *ngIf=\"selectColumns || sortColumns\">\n        <div class=\"flex-fill\" *ngIf=\"selectColumns\">\n            <form-tags-dropdown floatingLabel=\"Display Columns\" [(ngModel)]=\"selectQuery.columns\" (ngModelChange)=\"onChanged()\" [items]=\"selectColumns\"\n                itemKey=\"column.name\" itemName=\"column.logicalName\" textEntryNote=\"Specify the columns to select.\"\n                [enableAddAll]=\"true\" [returnKeys]=\"false\">\n            </form-tags-dropdown>\n        </div>\n    \n        <div class=\"flex-fill ml-1\" *ngIf=\"sortColumns\">\n            <form-tags-dropdown floatingLabel=\"Sort Columns\" [(ngModel)]=\"selectQuery.sorts\"  (ngModelChange)=\"onChanged()\" [items]=\"sortColumns\" \n            itemKey=\"column.runTime\" itemName=\"column.details\" textEntryNote=\"Specify the columns to sort.\" [enableAddAll]=\"false\" [returnKeys]=\"false\">\n            </form-tags-dropdown>\n        </div>\n    </div>\n\n    <div class=\"d-flex flex-wrap pt-1\" *ngIf=\"inputColumns && inputColumns.length > 0\" >\n        <div class=\"input-group-text\">\n            Default Input Values\n        </div>\n\n        <span *ngFor=\"let column of inputColumns; let i = index\" class=\"input-group pt-1\">\n            <div class=\"input-group-prepend\">\n                <div class=\"input-group-text\">\n                    {{column.logicalName}}\n                </div>\n            </div>\n            <form-input name=\"column{{i}}\" class=\"form-control p-0\" [placeholder]=\"column.logicalName\" [(ngModel)]=\"column.value\" (ngModelChange)=\"onChanged()\"></form-input>\n        </span>\n    </div>\n\n    <div class=\"d-flex flex-wrap pt-1\">\n        <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">\n                Filters\n            </div>\n        </div>\n\n        <form-checkbox class=\"flex-fill pl-1\" label=\"All Rows\" [(ngModel)]=\"allRows\" (ngModelChange)=\"onChanged()\" (click)=\"selectAllRows()\" [border]=\"true\"></form-checkbox>\n        <form-input type=\"number\" class=\"flex-fill pl-1\" *ngIf=\"!allRows\" labelLeft=\"Max Rows\" placeholder=\"Maximum rows...\" title=\"Specify the maximum rows to return\" [(ngModel)]=\"selectQuery.rows\" (ngModelChange)=\"onChanged()\"></form-input>\n        <d-button *ngIf=\"selectColumns\" class=\"flex-fill pl-1\" buttonClass=\"btn-outline-primary\" (ngModelChange)=\"onChanged()\" (click)=\"addFilter(0)\">Add Filter</d-button>\n    </div>\n\n    <div class=\"d-flex flex-wrap pt-1\" *ngFor=\"let filter of selectQuery.filters; let i = index\">\n        <div class=\"d-flex w-100\">\n            <form-select [(ngModel)]=\"filter.compareDataType\" (ngModelChange)=\"onChanged()\" [border]=\"true\" class=\"flex-fill flex-form pl-1\" [items]=\"typeCodes\" itemName=\"name\" itemKey=\"key\"\n                [enableTextEntry]=\"false\">\n            </form-select>\n\n            <form-select [(ngModel)]=\"filter.column1\" (ngModelChange)=\"onChanged()\" [border]=\"true\" class=\"flex-fill flex-form  pl-1\" [items]=\"columns\" itemKey=\"key\" itemName=\"logicalName\" [enableKeySelect]=\"false\"\n                [(textValue)]=\"filter.value1\" [enableTextEntry]=\"true\"  [setTextEntryToValue]=\"false\" [enableTextEntryMatch]=\"false\" textEntryNote=\"Enter a static value or select a column.\">\n            </form-select>\n\n            <form-select [(ngModel)]=\"filter.operator\" (ngModelChange)=\"onChanged()\" [items]=\"compare\" itemKey=\"key\" itemName=\"name\" [border]=\"true\" class=\"flex-fill  pl-1\">\n            </form-select>\n\n            <form-select *ngIf=\"filter.operator !== eCompare.IsIn && filter.operator !== eCompare.IsNotIn\" [(ngModel)]=\"filter.column2\" [setTextEntryToValue]=\"false\" (ngModelChange)=\"onChanged()\" [border]=\"true\" class=\"flex-fill flex-form  pl-1\" [items]=\"columns\" itemKey=\"key\" itemName=\"logicalName\" [enableKeySelect]=\"false\"\n                [(textValue)]=\"filter.value2\" [enableTextEntry]=\"true\" [enableTextEntryMatch]=\"false\" textEntryNote=\"Enter a static value or select a column.\"\n                [textEntryItems]=\"variables\" textEntryItemsTitle=\"Variables\">\n            </form-select>\n\n            <form-tags *ngIf=\"filter.operator === eCompare.IsIn || filter.operator === eCompare.IsNotIn\" [(ngModel)]=\"filter.value2\" (ngModelChange)=\"onChanged()\" [border]=\"true\" class=\"flex-fill flex-form  pl-1\" >\n            </form-tags>\n\n            <div class=\"input-group-append\">\n                <div class=\"input-group-text p-0\">\n                    <button type=\"button\" (click)=\"addFilter(i)\" class=\"btn btn-sm border-0 rounded-0 bg-transparent\" value=\"Add\">\n                        <i class=\"fa fa-plus-square-o\"></i>\n                    </button>\n                </div>\n                <div class=\"input-group-text p-0\">\n                    <button type=\"button\" (click)=\"removeFilter(i)\" class=\"btn btn-sm border-0 rounded-0 bg-transparent\" value=\"Remove\">\n                        <i class=\"fa fa-minus-square-o\"></i>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div *ngIf=\"requiresRefresh\" class=\"alert alert-warning mt-2\">\n        <a href=\"javascript:void(0)\" class=\"alert-link\" (click)=\"refreshData()\">The query has changed.  Click to refresh.</a>\n    </div>\n</div>","import {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { QueryBuilderComponent } from './query-builder.component';\nimport { DComponentsModule } from 'ngx-d-components';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    DComponentsModule\n  ],\n  declarations: [\n    QueryBuilderComponent,\n  ],\n  exports: [QueryBuilderComponent],\n})\nexport class QueryBuilderModule {\n\n}\n","import { Component, OnInit, Input, OnChanges, Output, EventEmitter, OnDestroy, SimpleChanges } from '@angular/core';\nimport { AnimateConfig } from '../../shared.models';\nimport { Functions } from '../../../shared/utils/functions';\n\n@Component({\n    selector: 'series-animate',\n    templateUrl: 'series-animate.component.html'\n})\n\nexport class SeriesAnimateComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() showEdit = false;\n    @Input() animateConfig: AnimateConfig;\n    @Input() columns: Array<any>;\n    @Input() baseData: Array<any>;\n    @Input() showFrame = true;\n\n    @Input() data: Array<any>;\n    @Output() dataChange = new EventEmitter<Array<any>>();\n\n    @Output() hasChanged = new EventEmitter();\n\n\n    public animationValues = [];\n    public animationValue;\n    public animationTimer;\n    public animationColumnIndex: number;\n    public animationRowIndex: number;\n    public animationPaused = false;\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n    ngOnDestroy() {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.baseData || changes.columns || changes.animateConfig) {\n            setTimeout(() => {\n                this.initializeAnimation();\n            });\n\n        }\n    }\n\n    onChanged() {\n        this.hasChanged.emit();\n    }\n\n    seriesChanged() {\n        this.initializeAnimation();\n        this.hasChanged.emit();\n    }\n\n    initializeAnimation() {\n        if (this.baseData && this.columns && this.animateConfig && this.animateConfig.seriesColumn) {\n\n            this.animationStop();\n            this.animationSeriesValues();\n            this.animationRowIndex = 0;\n\n            if (this.animateConfig.automatic) {\n                this.animationPlay();\n            } else {\n                this.animationFilter();\n            }\n        } else {\n            this.dataChange.emit(this.baseData);\n        }\n    }\n\n    animationSeriesValues() {\n        this.animationColumnIndex = this.columns.findIndex(c => c.title === this.animateConfig.seriesColumn);\n        const format = this.columns[this.animationColumnIndex].format;\n        const values = Array.from(new Set(this.baseData.map(c => c[this.animationColumnIndex]))).sort((a, b) => {\n            if (a > b) {\n                return 1;\n            }\n            if (a < b) {\n                return -1;\n            }\n            return 0;\n        });\n        this.animationValues = values.map(c => {\n            return {\n                name: Functions.formatValue(c, format),\n                value: c\n            }\n        });\n    }\n\n    animationFilter() {\n        const value = this.animationValues[this.animationRowIndex].value;\n        this.animationValue = value;\n        const data = this.baseData.filter(c => c[this.animationColumnIndex] === value);\n        this.dataChange.emit(data);\n    }\n\n    animationPlay() {\n\n        if (this.animationColumnIndex >= 0) {\n            if (!this.animationPaused) {\n                this.animationRowIndex = 0;\n            }\n            this.animationStop();\n\n            let first = true;\n\n            this.animationTimer = setInterval(() => {\n                if (first) {\n                    first = false;\n                } else {\n                    this.animationRowIndex++;\n                }\n\n                if (this.animationRowIndex + 1 >= this.animationValues.length) {\n                    clearInterval(this.animationTimer);\n                } else {\n                    this.animationFilter();\n\n                    // at last item, then stop.\n                    if (this.animationRowIndex + 1 >= this.animationValues.length) {\n                        clearInterval();\n                    }\n                }\n            }, this.animateConfig.delay);\n\n        } else {\n            //   this.hubService.addHubErrorMessage('The animation did not start as a series column is not set.');\n        }\n    }\n\n    animationPause() {\n        if (this.animationTimer) {\n            this.animationPaused = true;\n            clearInterval(this.animationTimer);\n        }\n    }\n\n    animationStepForward() {\n        if (this.animationRowIndex + 1 < this.animationValues.length) {\n            this.animationRowIndex++;\n            this.animationFilter();\n        }\n    }\n\n    animationStepBackward() {\n        if (this.animationRowIndex > 0) {\n            this.animationRowIndex--;\n            this.animationFilter();\n        }\n    }\n\n    animationLast() {\n        if (this.animationRowIndex + 1 < this.animationValues.length) {\n            this.animationRowIndex = this.animationValues.length - 1;\n            this.animationFilter();\n        }\n    }\n\n    animationFirst() {\n        if (this.animationRowIndex > 0) {\n            this.animationRowIndex = 0;\n            this.animationFilter();\n        }\n    }\n\n    animationChange($event) {\n        this.animationRowIndex = this.animationValues.findIndex(c => c.value === $event);\n        this.animationFilter();\n    }\n\n    animationStop() {\n        this.animationPaused = false;\n        if (this.animationTimer) {\n            clearInterval(this.animationTimer);\n        }\n    }\n}\n","<div *ngIf=\"animateConfig && (showEdit || animateConfig.seriesColumn)\">\n<d-widget-section *ngIf=\"showFrame\"  title=\"Series Animation\" [showExpandButton]=\"true\">\n    <ng-template [ngTemplateOutlet]=\"animate\"></ng-template>\n</d-widget-section>\n\n<div *ngIf=\"!showFrame\">\n    <ng-template [ngTemplateOutlet]=\"animate\"></ng-template>\n</div>\n\n</div>\n\n<ng-template #animate>\n    <div  *ngIf=\"showEdit\" class=\"d-flex flex-wrap\">\n        <div class=\"flex-fill\">\n            <form-select [(ngModel)]=\"animateConfig.seriesColumn\" labelLeft=\"Series\" [allowNullSelect]=\"true\" selectNullMessage=\"Turn off animation\"\n                [items]=\"columns\" itemKey=\"title\" itemName=\"title\" (ngModelChange)=\"seriesChanged()\">\n            </form-select>\n        </div>\n\n        <div class=\"flex-fill pl-1\">\n            <form-checkbox label=\"Automatic Start\" [(ngModel)]=\"animateConfig.automatic\" [border]=\"true\" (ngModelChange)=\"onChanged()\"></form-checkbox>\n        </div>\n\n        <div class=\"flex-fill pl-1\" >\n            <form-input type=\"number\" [(ngModel)]=\"animateConfig.delay\" (ngModelChange)=\"onChanged()\" labelLeft=\"Delay (ms)\"></form-input>\n        </div>\n    </div>\n\n    <div *ngIf=\"animateConfig.seriesColumn\" class=\"d-flex flex-wrap mt-1\">\n        <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"animationFirst()\"><i class=\"fa fa-fast-backward\"></i></button>\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"animationStepBackward()\"><i class=\"fa fa-step-backward\"></i></button>\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"animationPause()\"><i class=\"fa fa-pause\"></i></button>\n            <!-- <button type=\"button\" class=\"btn btn-secondary\" (click)=\"animationStop()\"><i class=\"fa fa-stop\"></i></button> -->\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"animationPlay()\"><i class=\"fa fa-play\"></i></button>\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"animationStepForward()\"><i class=\"fa fa-step-forward\"></i></button>\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"animationLast()\"><i class=\"fa fa-fast-forward\"></i></button>\n            <form-select class=\"ml-1\" [items]=\"animationValues\" [(ngModel)]=\"animationValue\" (ngModelChange)=\"animationChange($event)\" itemKey=\"value\" itemName=\"name\" >\n            </form-select>\n        </div>\n    </div>\n</ng-template>","import {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SeriesAnimateComponent } from './series-animate.component';\nimport { DComponentsModule } from 'ngx-d-components';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    DComponentsModule\n  ],\n  declarations: [\n    SeriesAnimateComponent,\n  ],\n  exports: [SeriesAnimateComponent],\n})\nexport class SeriesAnimateModule {\n\n}\n","export { SharedDataComponent } from './sharedData.component';\nexport { PreviewDataComponent } from './preview-data/preview-data.component';\nexport { PreviewDashboardComponent} from './preview-dashboard/preview-dashboard.component';\nexport { PreviewDashboardItemComponent } from './preview-dashboard/preview-dashboard-item.component';\nexport { PreviewComponent } from './preview/preview.component';\nexport { InputParametersViewComponent } from './input-parameters-view/input-parameters-view.component';","import { Component, OnInit, Input, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { DexihListOfValues, InputParameterBase, eDataObjectType, ListOfValuesItem } from '../../../shared.models';\nimport { Subscription, Observable } from 'rxjs';\nimport { CancelToken } from '../../../../+auth/auth.models';\nimport { AuthService } from '../../../../+auth/auth.service';\n\n@Component({\n    selector: 'input-parameters-view',\n    templateUrl: 'input-parameters-view.component.html'\n})\nexport class InputParametersViewComponent implements OnInit, OnDestroy {\n    @Input() hubKey: number;\n    @Input() objectType: eDataObjectType;\n    @Input() objectKey: number;\n    @Input() parameters: InputParameterBase[];\n    @Input() refreshEvent: Observable<void>;\n    @Output() onChange = new EventEmitter();\n    @Output() onRefreshData = new EventEmitter();\n\n    private _hubSubscription: Subscription;\n    private _refreshSubscription: Subscription;\n\n    public parentParams: string[] = [];\n    public values: ListOfValuesItem[] = [];\n    public listOfValues: Array<DexihListOfValues>;\n\n    public cancelToken: CancelToken = new CancelToken();\n\n    public userParameters: InputParameterBase[];\n\n    public requiresRefresh = false;\n\n    public showRefresh = false;\n    public isRefreshing = false;\n\n    constructor(private authService: AuthService) { }\n\n    ngOnInit() {\n        this.userParameters = [];\n        this.parameters.filter(c => c.isValid && c.allowUserSelect).forEach((parameter: InputParameterBase) => {\n            parameter['runTime'] = {showRefresh: parameter.listOfValuesKey > 0, isRefreshing: false, items: []};\n            if (parameter.value && parameter.listOfValuesKey && parameter.rank === 0) {\n                parameter['runTime'].items = [{key: parameter.value, name: parameter.valueDesc}];\n            }\n\n            this.userParameters.push(parameter);\n        });\n\n        this._refreshSubscription = this.refreshEvent.subscribe(() => {\n            this.requiresRefresh = false;\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._hubSubscription) { this._hubSubscription.unsubscribe(); }\n        if (this._refreshSubscription) { this._refreshSubscription.unsubscribe(); }\n    }\n\n    refresh(parameter: InputParameterBase) {\n        if (!parameter.listOfValuesKey) { return; }\n        parameter['runTime'].isRefreshing = true;\n        this.authService.previewListOfValues(this.hubKey, this.objectKey, this.objectType,\n            parameter.name, false, this.cancelToken).then(result => {\n            parameter['runTime'].items = result;\n            parameter['runTime'].showRefresh = false;\n        }).catch(reason => {\n            this.authService.addUpdateNotification(reason, false);\n        }).finally(() => {\n            parameter['runTime'].isRefreshing = false;\n        });\n    }\n\n    refreshData() {\n        this.onRefreshData.emit();\n    }\n\n    change(parameter: InputParameterBase) {\n        if (parameter.listOfValuesKey > 0) {\n            this.onChange.emit();\n        } else {\n            this.requiresRefresh = true;\n        }\n    }\n}\n","<div *ngIf=\"parameters\" class=\"d-flex flex-wrap\">\n    <div *ngFor=\"let parameter of userParameters; let i = index\" class=\"pr-1\">\n        <form-select *ngIf=\"parameter.listOfValuesKey > 0\" [labelLeft]=\"parameter.name\" [(ngModel)]=\"parameter.value\"\n            itemKey=\"key\" itemName=\"name\" [items]=\"parameter['runTime'].items\"\n            [enableTextEntry]=\"! (parameter.listOfValuesKey > 0)\" [textEntryItems]=\"parentParams\"\n            textEntryItemsTitle=\"Linked Parameters\" (ngModelChange)=\"change(parameter)\"\n            [showRefresh]=\"parameter['runTime'].showRefresh\" [isRefreshing]=\"parameter['runTime'].isRefreshing\"\n            (onRefresh)=\"refresh(parameter)\" [multiSelect]=\"parameter.rank === 1\">\n        </form-select>\n        <form-input *ngIf=\"!( parameter.listOfValuesKey > 0)\" [labelLeft]=\"parameter.name\" [(ngModel)]=\"parameter.value\"\n            (ngModelChange)=\"change(parameter)\">\n        </form-input>\n    </div>\n</div>\n<div *ngIf=\"requiresRefresh\" class=\"alert alert-warning mt-2\">\n    <a href=\"javascript:void(0)\" class=\"alert-link\" (click)=\"refreshData()\">The parameters have changed. Click to\n        refresh.</a>\n</div>\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { DexihDashboardItem, eDataObjectType, InputParameter, InputParameterBase } from '../../../shared.models';\n\n@Component({\n    selector: 'preview-dashboard-item',\n    templateUrl: 'preview-dashboard-item.component.html',\n    styleUrls: ['./preview-dashboard-item.component.scss']\n\n})\n\nexport class PreviewDashboardItemComponent implements OnInit {\n    @Input() hubKey: number;\n    @Input() item: DexihDashboardItem;\n    @Input() refreshData: EventEmitter<string>;\n    @Input() isMaximized = false;\n    @Input() parentParameters: InputParameterBase[];\n    @Output() onMaximize = new EventEmitter<boolean>();\n\n    eDataObjectType = eDataObjectType;\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n\n    // public refresh() {\n    //     let data = <DataCache> this.item['data'];\n    //     let view = this.hubCache.hub.dexihViews.find(c => c.key === this.item.controls.viewKey.value);\n    //     view = Object.assign({}, view);\n    //     view.parameters = this.item.controls.parameters.value;\n    //     if (view) {\n    //         let preview = this.hubService.previewView(view, view.inputValues,\n    //                 this.formsService.currentForm.controls.parameters.value, this.cancelToken);\n    //         data.refresh(preview);\n    //     }\n    // }\n\n    public maximize($event) {\n        this.onMaximize.emit($event);\n    }\n}\n","<div class=\"box\">\n\n    <div *ngIf=\"item.header\" class=\"box-header\">\n        <div class=\"p-3 bg-secondary text-white\">\n            <b>{{item.name}}</b>\n        </div>\n    </div>\n\n    <div *ngIf=\"item.description\" class=\"box-header\">\n        <div class=\"m-1\">\n            <markdown [data]=\"item.description\"></markdown>\n        </div>\n    </div>\n\n    <dexih-message #DexihMessage></dexih-message>\n\n    <div class=\"box-content\">\n        <preview-data [hubKey]=\"hubKey\" [parentParameters]=\"parentParameters\"\n            [objectType]=\"eDataObjectType.DashboardItem\" [objectKey]=\"item.key\" [showToolbar]=\"true\"\n            (onMaximize)=\"maximize($event)\"></preview-data>\n    </div>\n</div>","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { Subscription, combineLatest, Subject} from 'rxjs';\nimport { DexihMessageComponent } from '../../../../shared/ui/dexihMessage/index';\nimport { CancelToken } from '../../../../+auth/auth.models';\nimport { InputColumn, DexihColumnBase, DexihDashboard,\n    DexihActiveAgent, InputParameterBase, eDataObjectType } from '../../../shared.models';\nimport { GridsterConfig, GridType, CompactType, DisplayGrid, GridsterItem, GridsterItemComponent } from 'angular-gridster2';\n\n@Component({\n\n    selector: 'preview-dashboard',\n    templateUrl: './preview-dashboard.component.html',\n    styleUrls: ['./preview-dashboard.component.scss']\n})\nexport class PreviewDashboardComponent implements OnInit, OnDestroy {\n    @ViewChild('DexihMessage', { static: true }) public dexihMessage: DexihMessageComponent;\n\n    private _subscription: Subscription;\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    private refreshDataSubject: Subject<void> = new Subject<void>();\n    public refreshDataObservable = this.refreshDataSubject.asObservable();\n    \n    public inputColumns: InputColumn[];\n    public tableColumns: DexihColumnBase[];\n\n    public name = 'loading...';\n\n    dashboardKey: number;\n    hubKey: number;\n    eDataObjectType = eDataObjectType;\n\n    dashboard: DexihDashboard = null;\n    activeAgent: DexihActiveAgent;\n    maximizedIndex: number;\n\n    public options: GridsterConfig;\n    public parameters: InputParameterBase[];\n\n    private cancelToken = new CancelToken();\n\n    constructor(\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.params,\n                this.authService.getSharedDataIndex('', [], 50, false)\n            ).subscribe(result => {\n                let params = result[0];\n\n                this.hubKey = +params['hubKey'];\n                this.dashboardKey = +params['dashboardKey'];\n\n                this.refresh();\n            });\n        } catch (e) {\n            this.dexihMessage.addMessage(e);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    parameterChange() {\n        this.refresh();\n    }\n\n    refresh() {\n        this.authService.getDashboard(this.hubKey, this.dashboardKey).then((dashboard) => {\n            this.refreshDataSubject.next();\n\n            this.setOptions(dashboard);\n            this.dashboard = dashboard;\n            this.name = dashboard.name;\n            if (!this.parameters) {\n                this.parameters = dashboard.parameters;\n            }\n\n        }).catch(reason => {\n            this.dexihMessage.addMessage(reason);\n            this.dashboard = null;\n        });\n    }\n\n    private setOptions(dashboard: DexihDashboard) {\n        this.options = {\n            gridType: GridType.ScrollVertical,\n            compactType: CompactType.None,\n            margin: 5,\n            outerMargin: true,\n            outerMarginTop: null,\n            outerMarginRight: null,\n            outerMarginBottom: null,\n            outerMarginLeft: null,\n            useTransformPositioning: true,\n            mobileBreakpoint: 640,\n            minCols: dashboard.minCols,\n            maxCols: dashboard.maxCols,\n            minRows: dashboard.minRows,\n            maxRows: dashboard.maxRows,\n            maxItemCols: 100,\n            minItemCols: 1,\n            maxItemRows: 100,\n            minItemRows: 1,\n            maxItemArea: 2500,\n            minItemArea: 1,\n            defaultItemCols: 2,\n            defaultItemRows: 2,\n            fixedColWidth: 105,\n            fixedRowHeight: 105,\n            keepFixedHeightInMobile: false,\n            keepFixedWidthInMobile: false,\n            scrollSensitivity: 10,\n            scrollSpeed: 20,\n            enableEmptyCellClick: false,\n            enableEmptyCellContextMenu: false,\n            enableEmptyCellDrop: false,\n            enableEmptyCellDrag: false,\n            emptyCellDragMaxCols: 50,\n            emptyCellDragMaxRows: 50,\n            ignoreMarginInRow: false,\n            // setGridSize: true,\n            draggable: {\n              enabled: false,\n            },\n            resizable: {\n              enabled: false,\n            },\n            swap: false,\n            pushItems: true,\n            disablePushOnDrag: false,\n            disablePushOnResize: false,\n            pushDirections: {north: true, east: true, south: true, west: true},\n            pushResizeItems: false,\n            displayGrid: DisplayGrid.None,\n            disableWindowResize: false,\n            disableWarnings: false,\n            scrollToNewItems: false,\n            itemChangeCallback: (item, itemComponent: GridsterItemComponent) => {\n            this.itemResize(item, itemComponent);\n            },\n            itemResizeCallback: (item, itemComponent: GridsterItemComponent) => {\n            this.itemResize(item, itemComponent);\n            },\n            itemInitCallback: (item, itemComponent: GridsterItemComponent) => {\n            this.itemResize(item, itemComponent);\n            },\n          };\n    }\n\n    maximize(isMaximized: boolean, index: number) {\n        if (isMaximized) {\n            this.maximizedIndex = index;\n        } else {\n            this.maximizedIndex = -1;\n        }\n      }\n\n      public itemResize(item: GridsterItem, itemComponent: GridsterItemComponent) {\n        // console.debug(`top: ${itemComponent.el.clientTop}, left: ${itemComponent.el.clientLeft},\n        // width: ${itemComponent.el.clientWidth}, height: ${itemComponent.el.clientHeight}`)\n      }\n\n    // downloadData(format: eDownloadFormat) {\n    //     let sharedData = new SharedData();\n    //     sharedData.objectKey = this.dashboardKey;\n    //     sharedData.objectType = this.objectType;\n    //     sharedData.hubKey = this.hubKey;\n    //     sharedData.inputColumns = this.inputColumns;\n    //     sharedData.query = this.selectQuery;\n\n    //     this.hubsService.downloadData([sharedData], true, format, this.cancelToken).then(() => {\n    //         this.dexihMessage.addSuccessMessage('The download task has started.');\n    //     }).catch(reason => {\n    //         this.dexihMessage.addMessage(reason);\n    //     });\n    // }\n\n    edit() {\n        this.router.navigate(['hub', this.hubKey, 'dashboards', 'dashboard-edit', this.dashboardKey]);\n    }\n}\n","<div class=\"container-fluid\">\n    <dexih-message #DexihMessage></dexih-message>\n\n    <d-widget [title]=\"'Preview ' + name\" iconClass=\"fa fa-lg fa-fw fa-table\" [showCloseButton]=\"true\"\n        (close)=\"close()\">\n\n        <ng-template #header>\n            <d-button-refresh (click)=\"refresh()\" text=\"Reload\"></d-button-refresh>\n            <d-button-edit class=\"ml-1\"  (click)=\"edit()\"></d-button-edit>\n        </ng-template>\n\n        <div *ngIf=\"parameters\" class=\"m-3\">\n            <input-parameters-view [hubKey]=\"hubKey\" [objectType]=\"eDataObjectType.Dashboard\" [objectKey]=\"dashboardKey\" [parameters]=\"parameters\" [refreshEvent]=\"refreshDataObservable\" (onRefreshData)=\"refresh()\" (onChange)=\"parameterChange()\"></input-parameters-view>\n        </div>\n        \n        <div>\n            <div style=\"height:800px\">\n                <ng-template [ngIf]=\"dashboard\">\n                    <gridster [options]=\"options\" #gridster>\n                        <gridster-item [item]=\"{x: item.x, y: item.y, cols: item.cols, rows: item.rows, control: item}\"\n                            *ngFor=\"let item of dashboard.dexihDashboardItems; let i = index;\" \n                            [ngClass]=\"{'maximize': i === maximizedIndex}\" [hidden]=\"maximizedIndex >= 0 && i !== maximizedIndex\">\n                            <preview-dashboard-item [hubKey]=\"hubKey\" [item]=\"item\" [parentParameters]=\"parameters\" (onMaximize)=\"maximize($event, i)\" >\n                            </preview-dashboard-item>\n                        </gridster-item>\n                    </gridster>\n                </ng-template>\n            </div>\n        </div>\n    </d-widget>\n</div>","import { Component, OnDestroy, OnInit, ViewChild, Input, Output, EventEmitter } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { Subscription, combineLatest, Subject} from 'rxjs';\nimport { DexihMessageComponent } from '../../../../shared/ui/dexihMessage/index';\nimport { CancelToken, Message } from '../../../../+auth/auth.models';\nimport { InputColumn, DexihColumnBase, SelectQuery, eDownloadFormat, SharedData, eDataObjectType,\n    ViewConfig, InputParameterBase, eViewType } from '../../../shared.models';\n\n@Component({\n\n    selector: 'preview-data',\n    templateUrl: './preview-data.component.html',\n})\nexport class PreviewDataComponent implements OnInit, OnDestroy {\n    @Input() public objectType: eDataObjectType;\n    @Input() public objectKey: number;\n    @Input() public hubKey: number;\n    @Input() public parentParameters: InputParameterBase[]; // parameters passed from parent\n    @Input() public showToolbar = false;\n    @Input() public updateQueryParameters = true;\n    @Input() isMaximized = false;\n    @Output() onMaximize = new EventEmitter<boolean>();\n\n    private _subscription: Subscription;\n\n    private refreshDataSubject: Subject<void> = new Subject<void>();\n    public refreshDataObservable = this.refreshDataSubject.asObservable();\n    \n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    public inputColumns: InputColumn[];\n    public tableColumns: DexihColumnBase[];\n    public userParameters: InputParameterBase[]; // parameters that can be edited by user\n    public parameters: InputParameterBase[]; // combined parameters\n\n    public name = 'loading...';\n\n    columns: Array<any>;\n    selectQuery: SelectQuery = new SelectQuery();\n\n    public baseData: Array<any>;\n    public data: Array<any>;\n    public viewConfig: ViewConfig;\n    public showChart = false;\n\n    public eViewType = eViewType;\n\n    private cancelToken = new CancelToken();\n\n    constructor(\n        private authService: AuthService,\n        private route: ActivatedRoute ) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.authService.getSharedDataObject(this.hubKey, this.objectType, this.objectKey),\n                this.route.queryParams\n            ).subscribe(result => {\n                let object = result[0];\n                let queryParams = result[1];\n\n                if (object != null) {\n                    this.inputColumns = object.inputColumns;\n                    this.tableColumns = object.outputColumns;\n                    this.parameters = object.parameters;\n                    this.userParameters = this.parameters;\n\n                    let p = queryParams['p'];\n                    if (p) {\n                        let paramValues = JSON.parse(p);\n\n                        for (let parameter of this.userParameters) {\n                            let value = paramValues[parameter.name];\n                            if (value !== undefined) {\n                                parameter.value = value;\n                                if (parameter.rank === 0) {\n                                    parameter.valueDesc = value;\n                                }\n                            }\n                        }\n                    }\n                } else {\n                    this.parameters = [];\n                }\n\n                this.refresh();\n            });\n        } catch (e) {\n            this.authService.addUpdateNotification(e, false);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    public parameterChange() {\n            // update the query parameters so page refresh will be the same.\n        if (this.updateQueryParameters && this.userParameters.length > 0) {\n            let parameters = {};\n            for (let parameter of this.userParameters) {\n                parameters[parameter.name] = parameter.value;\n            }\n\n            if ('URLSearchParams' in window) {\n                let searchParams = new URLSearchParams(window.location.search)\n                searchParams.set('p', JSON.stringify(parameters));\n                let newRelativePathQuery = window.location.pathname + '?' + searchParams.toString();\n                history.pushState(null, '', newRelativePathQuery);\n            }\n        }\n\n        this.refresh();\n    }\n\n    public refresh() {\n        this.authService.previewData(this.hubKey, this.objectKey, this.objectType, this.inputColumns, this.selectQuery,\n            this.parameters, this.parentParameters, this.cancelToken).then((result) => {\n                this.refreshDataSubject.next();\n                this.columns = result.columns;\n                this.baseData = result.data;\n                this.name = result.name;\n                this.viewConfig = result.viewConfig;\n                if (!this.viewConfig) {\n                    this.data = this.baseData;\n                }\n                if (this.viewConfig && this.viewConfig.viewType === eViewType.Chart) {\n                    this.showChart = true;\n                } else {\n                    this.showChart = false;\n                }\n\n                if (result.status) {\n                    // this.dexihMessage.addMessage(result.status);\n                    this.authService.addUpdateNotification(result.status, false);\n                }\n            }).catch(reason => {\n                this.authService.addUpdateNotification(reason, false);\n                this.baseData = [];\n                this.data = [];\n                this.name = 'failed';\n            });\n    }\n\n    public downloadData(format: eDownloadFormat) {\n        let sharedData = new SharedData();\n        sharedData.objectKey = this.objectKey;\n        sharedData.objectType = this.objectType;\n        sharedData.hubKey = this.hubKey;\n        sharedData.inputColumns = this.inputColumns;\n        sharedData.parameters = this.parameters;\n        sharedData.parentParameters = this.parentParameters;\n        sharedData.query = this.selectQuery;\n\n        this.authService.downloadData([sharedData], true, format, this.cancelToken).then(() => {\n            let message = new Message(true, 'The download task has started.', null, null);\n            this.authService.addUpdateNotification(message, false);\n        }).catch(reason => {\n            this.authService.addUpdateNotification(reason, false);\n        });\n    }\n\n    public maximize() {\n        this.isMaximized = true;\n        this.onMaximize.emit(true);\n    }\n\n    public minimize() {\n        this.isMaximized = false;\n        this.onMaximize.emit(false);\n    }\n\n}\n","<div *ngIf=\"showToolbar\" class=\"side-menu\">\n    <div class=\"side-menu-content\">\n        <div class=\"spin-icon\">\n            <i class=\"fa fa-cog fa-spin\"></i>\n        </div>\n        <div class=\"side-menu-box\">\n            <div class=\"bg-light rounded p-1\">\n                <div>\n                    <download-button (download)=\"downloadData($event)\"></download-button>\n\n                    <div *ngIf=\"viewConfig?.viewType === eViewType.Chart\" class=\"btn-group btn-group-toggle ml-1\"\n                        data-toggle=\"buttons\" title=\"Table\">\n                        <label class=\"btn btn-primary\" [ngClass]=\"{active: showChart===false}\">\n                            <input type=\"radio\" name=\"options\" value=\"table\" autocomplete=\"off\"\n                                (click)=\"showChart = false\">\n                            <i class=\"fa fa-table\"></i>\n                        </label>\n                        <label class=\"btn btn-primary\" [ngClass]=\"{active: showChart===true}\" title=\"Chart\">\n                            <input type=\"radio\" name=\"options\" value=\"chart\" autocomplete=\"off\"\n                                (click)=\"showChart = true\">\n                            <i class=\"fa fa-bar-chart\"></i>\n                        </label>\n                    </div>\n                    <d-button-refresh class=\"ml-1\" [compact]=\"true\" (click)=\"refresh()\"></d-button-refresh>\n                    <d-button *ngIf=\"!isMaximized\" class=\"ml-1\" buttonClass=\"btn btn-primary\"\n                        iconClass=\"fa fa-window-maximize text-white\" (click)=\"maximize()\" tooltip=\"Maximize window\">\n                    </d-button>\n                    <d-button *ngIf=\"isMaximized\" class=\"ml-1\" buttonClass=\"btn btn-primary\"\n                        iconClass=\"fa fa-window-minimize text-white\" (click)=\"minimize()\" tooltip=\"Minimize window\">\n                    </d-button>\n                </div>\n\n                <div *ngIf=\"userParameters && userParameters.length > 0\" class=\"m-1\">\n                    <input-parameters-view [hubKey]=\"hubKey\" [objectType]=\"objectType\" [objectKey]=\"objectKey\"\n                        [parameters]=\"userParameters\" [refreshEvent]=\"refreshDataObservable\"\n                        (onRefreshData)=\"refresh()\" (onChange)=\"parameterChange()\"></input-parameters-view>\n                </div>\n\n                <div *ngIf=\"viewConfig && baseData\" class=\"m-1\">\n                    <series-animate [showEdit]=\"false\" [showFrame]=\"false\" [animateConfig]=\"viewConfig.animateConfig\"\n                        [columns]=\"columns\" [baseData]=\"baseData\" [(data)]=\"data\">\n                    </series-animate>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<div *ngIf=\"!data\" class=\"m-3\">\n    <div class=\"dexih-loader\"></div> &nbsp; &nbsp; Loading ...\n</div>\n\n<div *ngIf=\"!showToolbar && baseData\" class=\"d-flex\">\n    <div *ngIf=\"viewConfig?.chartConfig\" class=\"align-self-start btn-group btn-sm btn-group-toggle\" data-toggle=\"buttons\" title=\"Table\">\n        <label class=\"btn btn-primary\" [ngClass]=\"{active: showChart===false}\">\n            <input type=\"radio\" name=\"options\" value=\"table\" autocomplete=\"off\" (click)=\"showChart = false\">\n            <i class=\"fa fa-table\"></i>\n        </label>\n        <label class=\"btn btn-primary\" [ngClass]=\"{active: showChart===true}\" title=\"Chart\">\n            <input type=\"radio\" name=\"options\" value=\"chart\" autocomplete=\"off\" (click)=\"showChart = true\">\n            <i class=\"fa fa-bar-chart\"></i>\n        </label>\n    </div>\n\n    <div *ngIf=\"userParameters && userParameters.length > 0\" class=\"mt-1\">\n        <input-parameters-view [hubKey]=\"hubKey\" [objectType]=\"objectType\" [objectKey]=\"objectKey\"\n            [parameters]=\"userParameters\" [refreshEvent]=\"refreshDataObservable\" (onRefreshData)=\"refresh()\"\n            (onChange)=\"parameterChange()\">\n        </input-parameters-view>\n    </div>\n\n    <div *ngIf=\"viewConfig && baseData\">\n        <series-animate [showEdit]=\"false\" [showFrame]=\"false\" [animateConfig]=\"viewConfig.animateConfig\"\n            [columns]=\"columns\" [baseData]=\"baseData\" [(data)]=\"data\">\n        </series-animate>\n    </div>\n</div>\n\n<div class=\"h-100 box\" *ngIf=\"data\">\n    <div class=\"box-content\" style=\"height: 90vh;\">\n\n        <d-table *ngIf=\"!showChart\" [enableMultiSelect]=\"false\" [enableSaveCsv]=\"true\" [csvFileName]=\"name\"\n            [enableFilter]=\"false\" [columns]=\"columns\" [data]=\"data\">\n\n            <ng-template #actions let-items=\"items\">\n            </ng-template>\n\n            <ng-template #tableHeader>\n            </ng-template>\n\n        </d-table>\n\n        <chart-view *ngIf=\"showChart\" [responsive]=\"true\" [columns]=\"columns\" [data]=\"data\"\n            [config]=\"viewConfig.chartConfig\">\n        </chart-view>\n    </div>\n</div>","import { Component, OnDestroy, OnInit, ViewChild, Input, AfterViewChecked, OnChanges, AfterContentChecked } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { DexihMessageComponent } from '../../../ui/dexihMessage/index';\nimport { eDataObjectType } from '../../../shared.models';\nimport { PreviewDataComponent} from '../preview-data/preview-data.component';\n\n@Component({\n\n    selector: 'preview',\n    templateUrl: './preview.component.html'\n})\nexport class PreviewComponent implements OnInit, OnDestroy, AfterContentChecked {\n    @ViewChild('DexihMessage', { static: true }) public dexihMessage: DexihMessageComponent;\n    @ViewChild('PreviewData', { static: false }) public previewData: PreviewDataComponent;\n\n    private _subscription: Subscription;\n\n\n    objectKey: number;\n    objectType: eDataObjectType;\n    hubKey: number;\n    embed = false; // removes frames from data.\n\n    title = '';\n\n    constructor(\n        private authService: AuthService,\n        private route: ActivatedRoute,\n        private router: Router) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.params,\n                this.route.queryParams\n            ).subscribe(result => {\n                let params = result[0];\n                let queryParams = result[1];\n\n                this.hubKey = +params['hubKey'];\n                this.objectType = +params['objectType'];\n                this.objectKey = +params['objectKey'];\n\n                if (queryParams['embed'] === 'true') {\n                    this.embed = true;\n                }\n            });\n        } catch (e) {\n            this.dexihMessage.addMessage(e);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    // use aftercontentchecked to stop\n    ngAfterContentChecked(): void {\n        if (this.previewData) {\n            this.title = this.previewData.name;\n        }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    edit() {\n        switch (this.objectType) {\n            case eDataObjectType.Datalink:\n                this.router.navigate(['hub', this.hubKey, 'datalinks', 'datalink-edit', 'edit', this.objectKey]);\n                break;\n            case eDataObjectType.Table:\n                this.router.navigate(['hub', this.hubKey, 'tables', 'table-edit', this.objectKey]);\n                break;\n            case eDataObjectType.View:\n                this.router.navigate(['hub', this.hubKey, 'views', 'view-edit', this.objectKey]);\n                break;\n        }\n    }\n\n}\n","<div *ngIf=\"!embed\" class=\"container-fluid\">\n    <d-widget [title]=\"'Preview ' + title\" iconClass=\"fa fa-lg fa-fw fa-table\" [showCloseButton]=\"true\"\n        [padding]=\"false\" (close)=\"close()\">\n\n        <ng-template #header>\n            <d-button-refresh class=\"mr-1\" (click)=\"previewData.refresh()\" text=\"Reload\"></d-button-refresh>\n            <download-button class=\"ml-1\" (download)=\"previewData.downloadData($event)\"></download-button>\n            <d-button-edit class=\"ml-1\" (click)=\"edit()\"></d-button-edit>\n\n\n        </ng-template>\n\n            <preview-data #PreviewData [hubKey]=\"hubKey\" [objectType]=\"objectType\" [objectKey]=\"objectKey\" [updateQueryParameters]=\"true\">\n            </preview-data>\n    </d-widget>\n</div>\n\n<div *ngIf=\"embed\">\n    <preview-data [hubKey]=\"hubKey\" [objectType]=\"objectType\" [objectKey]=\"objectKey\" [updateQueryParameters]=\"false\"></preview-data>\n</div>","import {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { DComponentsModule } from 'ngx-d-components';\nimport { DTableModule} from 'ngx-d-table';\nimport { DMarkdownModule } from 'ngx-d-markdown';\nimport { GridsterModule} from 'angular-gridster2';\n\nimport { SharedDataComponent, PreviewDataComponent, PreviewDashboardComponent, PreviewDashboardItemComponent,\n  PreviewComponent, InputParametersViewComponent} from './';\nimport { ChartBuilderModule } from '../charts/charts.module';\nimport { DexihMessageModule } from '../dexihMessage';\nimport { DexihIconsModule } from '../icons';\nimport { SeriesAnimateModule} from '../seriesAnimate/series-animate.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n   DComponentsModule,\n   DTableModule,\n    DMarkdownModule,\n    ChartBuilderModule,\n    GridsterModule,\n    DexihMessageModule,\n    DexihIconsModule,\n    SeriesAnimateModule,\n  ],\n  declarations: [\n    SharedDataComponent, PreviewDataComponent, PreviewDashboardComponent, PreviewDashboardItemComponent, PreviewComponent,\n    InputParametersViewComponent\n  ],\n  exports: [],\n})\nexport class SharedDataModule {\n\n}\n","import { FormGroup, FormBuilder } from '@angular/forms';\nimport { DexihMessageComponent } from '../dexihMessage';\nimport { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { DexihHubAuth, CancelToken } from '../../../+auth/auth.models';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { eDownloadFormat, SharedData, eSharedObjectType, eDataObjectType, DexihTag } from '../../shared.models';\n\n@Component({\n    selector: 'sharedData',\n    templateUrl: './sharedData.component.html',\n})\nexport class SharedDataComponent implements OnInit, OnDestroy {\n    @ViewChild('DexihMessage', { static: true }) public dexihMessage: DexihMessageComponent;\n\n    public _subscription: Subscription;\n    public _searchSubscription: Subscription;\n    public searchForm: FormGroup;\n    private cancelToken = new CancelToken();\n\n    eDownloadFormat = eDownloadFormat;\n\n    embedLink: string;\n    embedFrame: string;\n\n    hubs: DexihHubAuth[];\n    hubKeys: number[];\n    tags: DexihTag[];\n\n    columns = [\n        { name: 'logicalName', title: 'Details', header: 'hubName', footer: 'description', format: 'Md', tags: 'tags' },\n        { name: 'objectType', title: 'Type', format: 'Enum', enum: eDataObjectType},\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    public dataIndex: SharedData[] = null;\n\n    constructor(private authService: AuthService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private fb: FormBuilder) { }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.params,\n                this.authService.getHubsObservable()\n            ).subscribe(result => {\n                let params = result[0];\n                this.hubs = result[1];\n\n                if (this.hubs) {\n                    this.hubKeys = this.hubs.map(c => c.hubKey);\n                }\n\n                this.searchForm = this.fb.group({\n                    'searchString': ['', [\n                    ]],\n                    'hubKeys': [[], [\n                    ]],\n                });\n\n                this.updateSearch();\n\n                if (this._searchSubscription) { this._searchSubscription.unsubscribe(); }\n                this._searchSubscription = this.searchForm.valueChanges\n                    .pipe(debounceTime(500))\n                    .subscribe(() => {\n                        this.updateSearch();\n                    });\n            });\n        } catch (e) {\n            this.dexihMessage.addErrorMessage(e.message);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    updateSearch() {\n        let hubKeys = <number[]>this.searchForm.value.hubKeys;\n        this.authService.getSharedDataIndex(this.searchForm.value.searchString, hubKeys, 50, true).then(result => {\n\n            this.dataIndex = result.filter(c => c.objectType !== eDataObjectType.DashboardItem);\n\n            this.tags = [];\n            this.dataIndex.forEach(item => {\n                if (item.tags && item.tags.length > 0) {\n                    item.tags.forEach(tag => {\n                        if (this.tags.findIndex(c => c.name === tag.name) < 0) {\n                            this.tags.push(tag);\n                        }\n                    });\n                }\n            });\n\n        }).catch(reason => this.dexihMessage.addMessage(reason));\n    }\n\n    previewData(item: SharedData) {\n        if (item.objectType === eDataObjectType.Dashboard) {\n            this.router.navigate(['previewDashboard', item.hubKey, item.objectKey], { relativeTo: this.route.parent });\n        } else {\n            this.router.navigate(['preview', item.hubKey, item.objectType, item.objectKey], { relativeTo: this.route.parent });\n        }\n    }\n\n    embed(item: SharedData) {\n        let embed: string;\n        if (item.objectType === eDataObjectType.Dashboard) {\n            this.embedLink =\n            `${window.location.origin}/public/index/previewDashboard/${item.hubKey}/${item.objectType}/${item.objectKey}?embed=true`;\n        } else {\n            this.embedLink =\n            `${window.location.origin}/public/index/preview/${item.hubKey}/${item.objectType}/${item.objectKey}?embed=true`;\n        }\n\n        this.embedFrame = `<iframe width=\"560\" height=\"315\" src=\"${this.embedLink}\" frameborder=\"0\" ></iframe>`\n\n        document.body.scrollTop = 0; // For Safari\n        document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\n    }\n\n    downloadData(sharedItems: Array<SharedData>, zipFiles: boolean, downloadFormat: eDownloadFormat) {\n        this.authService.downloadData(sharedItems, zipFiles, downloadFormat, this.cancelToken).then(() => {\n            this.dexihMessage.addSuccessMessage('The download task has started.');\n        }).catch(reason => {\n            this.dexihMessage.addMessage(reason);\n        });\n    }\n\n    edit(item: SharedData) {\n        switch (item.objectType) {\n            case eDataObjectType.Datalink:\n                this.router.navigate(['hub', item.hubKey, 'datalinks', 'datalink-edit', 'edit', item.objectKey]);\n                break;\n            case eDataObjectType.Table:\n                this.router.navigate(['hub', item.hubKey, 'tables', 'table-edit', item.objectKey]);\n                break;\n            case eDataObjectType.View:\n                this.router.navigate(['hub', item.hubKey, 'views', 'view-edit', item.objectKey]);\n                break;\n            case eDataObjectType.Dashboard:\n                this.router.navigate(['hub', item.hubKey, 'dashboards', 'dashboard-edit', item.objectKey]);\n                break;\n            }\n    }\n}\n\n","<div class=\"container-fluid\">\n    <div class=\"m-1\">\n        <dexih-message #DexihMessage></dexih-message>\n    </div>\n\n    <d-widget title=\"Shared Data\" iconClass=\"fa fa-lg fa-fw fa-life-saver\">\n        <d-widget-section *ngIf=\"embedLink\" title=\"Embedded html\" [showExpandButton]=\"false\">\n            <ng-template #header>\n                <button type=\"button\" class=\"close ml-2\" (click)=\"embedLink = null\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </ng-template>\n            <section>\n                <form-textarea label=\"Link\" [showCopy]=\"true\" [showPreview]=\"false\" [hideToggle]=\"true\" [disabled]=\"true\"\n                    rows=\"1\" [(ngModel)]=\"embedLink\">\n                    <a [href]=\"embedLink\" target=\"_blank\" class=\"ml-1\">(Open)</a>\n                </form-textarea>\n            </section>\n            <section>\n                <form-textarea label=\"Embedded IFrame\" [showCopy]=\"true\" [showPreview]=\"false\" [hideToggle]=\"true\"\n                    [disabled]=\"true\" rows=\"1\" [(ngModel)]=\"embedFrame\"></form-textarea>\n            </section>\n        </d-widget-section>\n\n        <d-table \n            [enableMultiSelect]=\"true\" \n            [enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n            [enableFilter]=\"false\" \n            [columns]=\"columns\" \n            [data]=\"dataIndex\"\n            (rowClick)=\"previewData($event)\" \n            [tags]=\"tags\">\n\n            <ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n                <d-button-preview [routerLink]=\"['preview', item.hubKey, item.objectType, item.objectKey]\">\n                </d-button-preview>\n                <d-button-edit *ngIf=\"hubKeys?.indexOf(item.hubKey)>=0\" class=\"ml-1\" \n                    (click)=\"edit(item)\"></d-button-edit>\n                <d-button class=\"ml-1\" iconClass=\"fa fa-code\" title=\"Get embedded version\" (click)=\"embed(item)\" text=\"Embedded\"></d-button>\n\n            </ng-template>\n\n            <ng-template #filter select=\"filter\" let-items=\"items\">\n                <form [formGroup]=\"searchForm\" class=\"row\">\n                    <div *ngIf=\"hubs\" class=\"col-xs-12 col-sm mr-1\">\n                        <form-tags-dropdown labelLeft=\"Hubs\" formControlName=\"hubKeys\" [items]=\"hubs\" itemKey=\"hubKey\"\n                            itemName=\"name\" [enableAddAll]=\"true\">\n                        </form-tags-dropdown>\n                    </div>\n                    <div class=\"col-xs-12 col-sm mr-1 input-expand\">\n                        <form-input formControlName=\"searchString\" placeholder=\"Search...\" iconClass=\"fa fa-search\">\n                        </form-input>\n                    </div>\n                </form>\n            </ng-template>\n\n            <ng-template #actions let-items=\"items\">\n            </ng-template>\n\n            <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n                <download-button class=\"ml-1\" (download)=\"downloadData(items, true, $event)\"></download-button>\n            </ng-template>\n\n            <!-- <ng-template #rowAction let-item=\"item\">\n                <div *ngFor=\"let column of item.inputColumns; let i = index\" class=\"input-group\">\n                    <div class=\"input-group-prepend\">\n                        <div class=\"input-group-text\">\n                            {{column.logicalName}}\n                        </div>\n                    </div>\n                    <form-input name=\"column{{i}}\" class=\"form-control p-0\" [placeholder]=\"column.logicalName\"\n                        [(ngModel)]=\"column.defaultValue\" [border]=\"false\"></form-input>\n                </div>\n            </ng-template> -->\n\n        </d-table>\n    </d-widget>\n</div>","import { Component, Input } from '@angular/core';\n\n@Component({\n\n  selector: 'support-options',\n  templateUrl: './support-options.component.html'\n})\nexport class SupportOptionsComponent {\n  @Input() isExpanded = false;\n\n  supportOptions = [\n    {name: 'Features / Issues', icon: 'fa fa-github', link: 'https://github.com/DataExperts/Dexih.App.UI/issues', description: 'We are an open source platform.  Raise feature requests and bugs on our github pages.'},\n    {name: 'Forums', icon: 'fa fa-smile-o', link: 'https://dexih.mn.co/feed', description: 'Use the community forums for questions and other integration hub discussion.'},\n    {name: 'Twitter', icon: 'fa fa-twitter', link: 'https://twitter.com/dataexperts', description: 'Send messages to our twitter for quick short queries and comments.'},\n    {name: 'YouTube', icon: 'fa fa-youtube', link: 'https://www.youtube.com/channel/UCUQQ_sVuFti-xYvKtfLJNkg', description: 'Refer to our youtube channel for video tutorials.'},\n  ];\n\n\n  constructor() {\n  }\n\n}\n","<d-widget-section iconClass=\"fa fa-question-circle\" title=\"Support Channels\" [padding]=\"true\"\n\t[showExpandButton]=\"true\" [isExpanded]=\"isExpanded\">\n\t<div class=\"card-deck\">\n\t\t<div *ngFor=\"let supportOption of supportOptions\" class=\"card\">\n\t\t\t<div class=\"card-header\">\n\t\t\t\t<div class=\"d-flex flex-row p-0\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<i [class]=\"supportOption.icon\"></i>\n\t\t\t\t\t\t{{supportOption.name}}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"card-body\">\n\t\t\t\t<p class=\"card-text\">{{supportOption.description}}</p>\n\t\t\t</div>\n\t\t\t<div class=\"card-footer\">\n\t\t\t\t<a [href]=\"supportOption.link\" target=\"_blank\" class=\"btn btn-button btn-info\">\n\t\t\t\t\t<i class=\"fa fa-folder-open\"></i>\n\t\t\t\t\tOpen\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</d-widget-section>","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SupportOptionsComponent } from './support-options.component';\nimport { DComponentsModule } from 'ngx-d-components';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    DComponentsModule,\n  ],\n  declarations: [\n    SupportOptionsComponent,\n  ],\n  exports: [\n    SupportOptionsComponent\n  ],\n})\nexport class DexihSupportOptionsModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'allFilter',\n})\nexport class AllFilterPipe implements PipeTransform {\n\n  transform(items: any[], value: string): any[] {\n    if (!items) { return []; }\n    if (!value) { return items; }\n\n    const filterValue = value.toLowerCase();\n    return items.filter(item => {\n      const keys = Object.keys(item);\n      let found = false;\n      keys.forEach(key => {\n        if (!found) {\n          if ((typeof item[key] === 'string' || item[key] instanceof String)) {\n            if (item[key].toLowerCase().indexOf(value.toLowerCase()) > -1) {\n              found = true;\n            }\n          }\n        }\n      });\n      return found;\n    });\n  }\n}\n\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n@Pipe({\n  name: 'calendar'\n})\nexport class CalendarPipe implements PipeTransform {\n  transform(value: Date): any {\n    return moment(value).calendar();\n  }\n}","import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'countdown',\n  template: '{{ displayTime }}',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CountdownComponent implements OnDestroy {\n  private _time: number;\n  private _timing = 1000;\n  private _interval;\n\n  @Input() public set end(value: string) {\n    let endDate = new Date(value);\n    this._time = endDate.getTime();\n    this._startTimer();\n}\n\n  @Input()\n  public set time(value: string | number) {\n    this._time = parseInt(value as string, 10);\n    this._startTimer();\n  }\n\n  @Input()\n  public set timing(value: string | number) {\n    this._timing = parseInt(value as string, 10);\n    this._startTimer();\n  }\n\n  public get delta() {\n    let date = new Date();\n    return Math.max(0, Math.floor((this._time - date.getTime()) / 1000));\n  }\n\n  public get displayTime() {\n    let days, hours, minutes, seconds, delta = this.delta;\n\n    let time = '';\n\n    days = Math.floor(delta / 86400);\n    delta -= days * 86400;\n    hours = Math.floor(delta  / 3600) % 24;\n    delta -= hours * 3600;\n    minutes = Math.floor(delta  / 60) % 60;\n    delta -= minutes * 60;\n    seconds = delta % 60;\n\n    // create the display string\n    time += days > 0 ? days + ' days ' : '';\n    time += hours > 0 ? hours + ' hours ' : '';\n    time += minutes > 0 && days === 0 ? minutes + ' minutes ' : '';\n    time += days === 0 && hours === 0 ? seconds + ' seconds ' : '';\n\n    return time;\n  }\n\n  constructor(private _changeDetector: ChangeDetectorRef) { }\n\n  ngOnDestroy() {\n    this._stopTimer();\n  }\n\n  private _startTimer() {\n    if (this.delta <= 0) { return; }\n    this._stopTimer();\n    this._interval = setInterval(() => {\n      this._changeDetector.detectChanges();\n      if (this.delta <= 0) { this._stopTimer(); }\n    }, this._timing);\n  }\n\n  private _stopTimer() {\n    clearInterval(this._interval);\n    this._interval = undefined;\n  }\n}\n","import { Directive, HostListener, Input, Output, EventEmitter, ElementRef, HostBinding } from '@angular/core';\n\n@Directive({ selector: '[dragZone]' })\nexport class DragZoneDirective {\n    @Input() zone: string;\n    @Input() data: any;\n    @Output() dragStart: EventEmitter<any> = new EventEmitter();\n\n    constructor(public element: ElementRef) { }\n\n    @HostBinding('draggable')\n    get draggable() {\n      return true;\n    }\n\n    @HostListener('dragstart', ['$event']) public onDragStart(event) {\n        // event.preventDefault();\n        // event.stopPropagation();\n\n        event.dataTransfer.setData('zone:' + this.zone, '');\n        event.dataTransfer.setData('data', JSON.stringify(this.data));\n        this.dragStart.emit(this.data);\n    }\n\n    // @HostListener('drop', ['$event']) public onDrop(event) {\n    //     event.preventDefault();\n    //     event.stopPropagation();\n\n    //     event.dataTransfer.setData('zone', this.zone);\n    //     event.dataTransfer.setData('data', JSON.stringify(this.data));\n    //     this.drop.emit();\n    // }\n}\n","import { Directive, HostListener, Input, Output, EventEmitter, HostBinding } from '@angular/core';\n\n@Directive({ selector: '[dropZone]' })\nexport class DropZoneDirective {\n    @Input() requireFiles = false;\n    @Input() zones: string[];\n    @Input() zone: string;\n    @Input() dropAllowedClass = '';\n    @Input() dropNotAllowedClass = '';\n    @Output() dropFiles: EventEmitter<File> = new EventEmitter<File>();\n    @Output() dragFilesOver: EventEmitter<any> = new EventEmitter();\n    @Output() dragLeave: EventEmitter<any> = new EventEmitter();\n    @Output() dragInvalid: EventEmitter<any> = new EventEmitter();\n    @Output() dropData: EventEmitter<any> = new EventEmitter();\n\n    private isMouseOver = false;\n    private isDropAllowed = false;\n\n    private _elementClass: string\n\n    @Input('class')\n    @HostBinding('class')\n    get elementClass(): string {\n        let dragClass = this.isMouseOver ?\n        (this.isDropAllowed ? this.dropAllowedClass : this.dropNotAllowedClass) : '';\n\n        return this._elementClass + ' ' + dragClass;\n    }\n    set elementClass(val: string) {\n        this._elementClass = val;\n    }\n\n    constructor() { }\n\n    @HostListener('dragover', ['$event']) public onDragOver(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.isMouseOver = true;\n\n        if (this.dropAllowed(event)) {\n            event.dataTransfer.dropEffect = 'copy';\n            this.isDropAllowed = true;\n            this.dragFilesOver.emit();\n            return;\n        }\n\n        this.isDropAllowed = false;\n        event.dataTransfer.dropEffect = 'none';\n        this.dragInvalid.emit();\n    }\n\n    dropAllowed(event): boolean {\n        if (this.requireFiles) {\n            if (event.dataTransfer.types) {\n                for (let i = 0; i < event.dataTransfer.types.length; i++) {\n                    if (event.dataTransfer.types[i] === 'Files') {\n                        return true;\n                    }\n                }\n            }\n        } else {\n            let zone = this.getZone(event);\n            if (!zone && !this.zone && !this.zones) {\n                return true;\n            }\n            if (this.zone && this.zone === zone) {\n                return true;\n            }\n            if (this.zones && Array.isArray(this.zones) && this.zones.findIndex(z => z === zone) >= 0) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    getZone(event): string {\n        if (event.dataTransfer.types) {\n            for (let i = 0; i < event.dataTransfer.types.length; i++) {\n                let type = <string> event.dataTransfer.types[i];\n                if (type && type.substr(0, 5) === 'zone:') {\n                    return type.substr(5);\n                }\n            }\n        }\n    }\n\n    @HostListener('dragleave', ['$event']) public onDragLeave(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.isMouseOver = false;\n        this.isDropAllowed = false;\n        this.dragLeave.emit();\n    }\n\n    @HostListener('drop', ['$event']) public onDrop(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.isMouseOver = false;\n        this.isDropAllowed = false;\n\n        if (this.dropAllowed(event)) {\n            let files = event.dataTransfer.files;\n            if (files.length > 0) {\n                this.dropFiles.emit(files);\n            }\n\n            let data = event.dataTransfer.getData('data');\n            if (data) {\n                this.dropData.emit(JSON.parse(data));\n            }\n        }\n\n        this.dragLeave.emit();\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'equalFilter',\n})\nexport class EqualFilterPipe implements PipeTransform {\n\n  transform(items: any[], field: string, value = true): any[] {\n    if (!items) {\n        return [];\n    }\n    return items.filter(it => it[field] === value);\n  }\n}\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'fieldFilter',\n})\nexport class FieldFilterPipe implements PipeTransform {\n\n  transform(items: any[], field: string, value: string): any[] {\n    if (!items) { return [] };\n    if (!value) { return items };\n    return items.filter(it => it[field].toLowerCase().indexOf(value.toLowerCase()) > -1);\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n@NgModule()\nexport class Functions {\n\n    static numberWithCommas = (x) => {\n        let parts = x.toString().split('.');\n        parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n        return parts.join('.');\n    }\n\n    static getLanguage() {\n        let language;\n        if (window.navigator.languages) {\n            language = window.navigator.languages[0];\n        } else {\n            language = window.navigator.language;\n        }\n\n        return language;\n    }\n\n    static formatValue(value: any, format: string): string {\n        moment.locale(this.getLanguage());\n\n        if (!value && value !== false && value !== 0) {\n            return '';\n        } else if (Object.keys(value).length === 0 && value.constructor === Object) {\n            return '(null)';\n        } else {\n            switch (format) {\n                case 'Calendar':\n                    return moment(value).calendar();\n                case 'Date':\n                    return moment(value).format('L');\n                case 'Time':\n                    return moment(value).format('LTS');\n                case 'DateTime':\n                    return moment(value).format('L') + ' ' + moment(value).format('LTS');\n                case 'CharArray':\n                    return [].concat(value).join('');\n                case 'CharArray':\n                    return [].concat(value).join('');\n                default:\n                    return value;\n            }\n        }\n    }\n\n        /*\n    * General utils for managing cookies in Typescript.\n    */\n   static setCookie(name: string, val: string) {\n        const date = new Date();\n        const value = val;\n\n        // Set it expire in 7 days\n        date.setTime(date.getTime() + (7 * 24 * 60 * 60 * 1000));\n\n        if (location.protocol === 'https:') {\n\n        }\n\n        const sameSite = location.protocol === 'https:' ? 'SameSite=None;secure' : 'SameSite=Lax'\n\n        // Set it\n        document.cookie = `${name}=${value};expires=${date.toUTCString()};path=/;${sameSite}`;\n    }\n\n    static getCookie(name: string) {\n        const value = `; ${document.cookie}`;\n        const parts = value.split(`; ${name}=`);\n\n        if (!parts) { return null; }\n\n        if (parts.length === 2) {\n            return parts.pop().split(';').shift();\n        }\n    }\n\n    static deleteCookie(name: string) {\n        const date = new Date();\n\n        // Set it expire in -1 days\n        date.setTime(date.getTime() + (-1 * 24 * 60 * 60 * 1000));\n\n        // Set it\n        document.cookie = `${name}=;expires=${date.toUTCString()};path=/`;\n    }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'gtFilter',\n})\nexport class GtFilterPipe implements PipeTransform {\n\n  transform(items: any[], field: string, value: number): any[] {\n    if (!items) {\n        return [];\n    }\n    return items.filter(it => it[field] > value);\n  }\n}\n\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Pipe({\n    name: 'isValidFilter'\n})\n@Injectable()\nexport class IsValidFilterPipe implements PipeTransform {\n    transform(items: any[], field: string): any {\n        if (!items) {\n            return [];\n        } else {\n            if (items[0] instanceof FormGroup) {\n                return items.filter(c => c.controls.isValid.value);\n            } else {\n                return items.filter(c => c.isValid);\n            }\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'maxItems',\n})\nexport class MaxItemsFilterPipe implements PipeTransform {\n\n  transform(items: any[], value: number): any[] {\n    if (!items) { return []; }\n    if (!value) { return items; }\n\n    return items.slice(0, value);\n\n  }\n}\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'fieldSortDesc',\n})\nexport class SortDescPipe implements PipeTransform {\n\n  transform(items: any[], field: string): any[] {\n    if (!items) { return []; }\n    return items.sort((b, a) => {\n      if (a[field] > b[field]) {\n        return 1;\n    }\n\n    if (a[field] < b[field]) {\n        return -1;\n    }\n\n    return 0;\n    });\n  }\n}\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'fieldSort',\n})\nexport class SortPipe implements PipeTransform {\n\n  transform(items: any[], field: string): any[] {\n    if (!items) { return []; }\n    return items.sort((a, b) => {\n      if (a[field] > b[field]) {\n        return 1;\n      }\n\n      if (a[field] < b[field]) {\n        return -1;\n      }\n\n      return 0;\n\n    });\n  }\n}\n\n","import { Directive } from '@angular/core';\n@Directive({ selector: 'time'})\nexport class TimeDirective {}\n","import {NgModule} from '@angular/core';\nimport {TimeDirective} from './time.directive';\nimport { FieldFilterPipe } from './field-filter.pipe';\nimport { EqualFilterPipe } from './equal-filter.pipe';\nimport { GtFilterPipe } from './gt-filter.pipe';\nimport { IsValidFilterPipe } from './isValid-filter.pipe';\nimport { AllFilterPipe } from './all-filter.pipe';\nimport { SortPipe } from './sort.pipe';\nimport { SortDescPipe } from './sort.desc.pipe';\nimport { CountdownComponent } from './countdown.component';\nimport { MaxItemsFilterPipe } from './max-items-filter';\nimport { DropZoneDirective } from './dropzone';\nimport { DragZoneDirective } from './dragzone';\nimport { CalendarPipe } from './calendar.pipe'\n@NgModule({\n  declarations: [\n    TimeDirective,\n    FieldFilterPipe,\n    EqualFilterPipe,\n    GtFilterPipe,\n    IsValidFilterPipe,\n    AllFilterPipe,\n    SortPipe,\n    SortDescPipe,\n    CountdownComponent,\n    MaxItemsFilterPipe,\n    DropZoneDirective,\n    DragZoneDirective,\n    CalendarPipe\n    ],\n  imports: [\n    ],\n  exports: [\n    TimeDirective,\n    FieldFilterPipe,\n    EqualFilterPipe,\n    GtFilterPipe,\n    IsValidFilterPipe,\n    AllFilterPipe,\n    SortPipe,\n    SortDescPipe,\n    CountdownComponent,\n    MaxItemsFilterPipe,\n    DropZoneDirective,\n    DragZoneDirective,\n    CalendarPipe\n    ]\n})\nexport class UtilsModule {\n\n}\n","export const environment = {\n  production: true,\n  apiUrl: 'https://dexih.dataexpertsgroup.com'\n};\n","import { environment } from './environments/environment';\nimport { Message } from './app/+auth/auth.models';\n\nexport enum eLogLevel {\n    Trace,\n    Debug,\n    Warning,\n    Error,\n    Information\n}\n\nexport class LogFactory {\n    constructor(private category: string) {\n\n    }\n\n    private formatMessage(message): string {\n        return this.category + '::' + (new Date()).toISOString() + '::' + message;\n    }\n\n    public Log(message: string, logLevel: eLogLevel) {\n        if (!environment.production) {\n            switch (logLevel) {\n                case eLogLevel.Trace:\n                   // tslint:disable-next-line:no-console\n                   console.debug(this.formatMessage(message));\n                    break;\n                case eLogLevel.Debug:\n                    // tslint:disable-next-line:no-console\n                    console.debug(this.formatMessage(message));\n                    break;\n                case eLogLevel.Warning:\n                    console.warn(this.formatMessage(message));\n                    break;\n                case eLogLevel.Error:\n                    console.error(this.formatMessage(message));\n                    break;\n                case eLogLevel.Information:\n                    // tslint:disable-next-line:no-console\n                    console.info(this.formatMessage(message));\n                    break;\n            }\n        }\n    }\n\n    public LogC(message: () => string, logLevel: eLogLevel) {\n        if (!environment.production) {\n            this.Log(message(), logLevel);\n        }\n    }\n\n    public LogMessage(message: Message) {\n        if (message.success) {\n            this.Log(message.message, eLogLevel.Information);\n        } else {\n            this.Log(message.message + '/n' + message.exceptionDetails, eLogLevel.Error);\n        }\n    }\n\n}\n","import './polyfills';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n","// This file includes polyfills needed by Angular 2 and is loaded before\n// the app. You can add your own extra polyfills to this file.\n// import 'core-js/es/symbol';\n// import 'core-js/es/object';\n// import 'core-js/es/function';\n// import 'core-js/es/parse-int';\n// import 'core-js/es/parse-float';\n// import 'core-js/es/number';\n// import 'core-js/es/math';\n// import 'core-js/es/string';\n// import 'core-js/es/date';\n// import 'core-js/es/array';\n// import 'core-js/es/regexp';\n// import 'core-js/es/map';\n// import 'core-js/es/set';\n// import 'core-js/es/reflect';\n\n// import 'core-js/es/reflect';\nimport 'zone.js/dist/zone';\n\n"]}