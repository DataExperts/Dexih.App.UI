{"version":3,"sources":["webpack:///src/app/+hubs/hubs.component.html","webpack:///src/app/+hubs/hubs.component.ts","webpack:///src/app/+hubs/hub-index/hub-index.component.html","webpack:///src/app/+hubs/hub-index/hub-index.component.ts","webpack:///src/app/+hubs/hub-edit/hub-edit.component.html","webpack:///src/app/+hubs/hub-edit/hub-edit.component.ts","webpack:///src/app/+hubs/hubs-summary/hubs-summary.component.html","webpack:///src/app/+hubs/hubs-summary/hubs-summary.component.ts","webpack:///src/app/+hubs/manage/manage.component.html","webpack:///src/app/+hubs/manage/manage.component.ts","webpack:///src/app/+hubs/tasks/task-status/task-status.component.html","webpack:///src/app/+hubs/tasks/task-status/task-status.component.ts","webpack:///src/app/+hubs/tasks/tasks-index/tasks-index.component.html","webpack:///src/app/+hubs/tasks/tasks-index/tasks-index.component.ts","webpack:///src/app/+hubs/tasks/task-view/task-view.component.html","webpack:///src/app/+hubs/tasks/task-view/task-view.component.ts","webpack:///src/app/+hubs/notifications/notification-index/notification-index.component.html","webpack:///src/app/+hubs/notifications/notification-index/notification-index.component.ts","webpack:///src/app/+hubs/notifications/notification-view/notification-view.component.html","webpack:///src/app/+hubs/notifications/notification-view/notification-view.component.ts","webpack:///src/app/+hubs/remoteAgents/remote-agents/remote-agents.component.html","webpack:///src/app/+hubs/remoteAgents/remote-agents/remote-agents.component.ts","webpack:///src/app/+hubs/help/help.component.ts","webpack:///src/app/+hubs/help/help.component.html","webpack:///src/app/+hubs/remoteAgents/remoteAgent-download/remoteAgent-download.component.html","webpack:///src/app/+hubs/remoteAgents/remoteAgent-download/remoteAgent-download.component.ts","webpack:///src/app/+hubs/remoteAgents/remoteAgent-edit/remoteAgent-edit.component.html","webpack:///src/app/+hubs/remoteAgents/remoteAgent-edit/remoteAgent-edit.component.ts","webpack:///src/app/+hubs/remoteAgents/remote-agent-token/remote-agent-token.component.html","webpack:///src/app/+hubs/remoteAgents/remote-agent-token/remote-agent-token.component.ts","webpack:///src/app/+hubs/support/edit/issue-edit.component.html","webpack:///src/app/+hubs/support/edit/issue-edit.component.ts","webpack:///src/app/+hubs/support/index/issue-index.component.html","webpack:///src/app/+hubs/hubs.routing.ts","webpack:///src/app/+hubs/support/index/issue-index.component.ts","webpack:///src/app/+hubs/hubs.module.ts"],"names":["HubsComponent","authService","hubsService","openDelay","initialize","this","_hubsMessageSubscription","getHubMessagesObservable","subscribe","messages","length","dexihMessage","addMessage","reset","_webSocketStatusSubscription","getWebSocketStatusObservable","status","webSocketStatus","setTimeout","unsubscribe","HubIndexComponent","hubService","router","route","isLoaded","columns","name","title","format","_tableData","BehaviorSubject","tableData","asObservable","hubsObserve","getHubsObservable","hubs","next","deleteHubs","reason","addHubMessage","hub","navigate","hubKey","relativeTo","navigateUp","close","edit","HubEditComponent","location","fb","SharedAccessItems","filter","c","key","generatingKey","savingHub","hasChanged","showAllErrors","formErrors","validationMessages","_subscription","combineLatest","data","params","getRemoteAgentsObservable","result","action","pageTitle","buildForm","find","e","addErrorMessage","message","_valueChangesSubscription","getRandomEncryptionKey","then","mainForm","controls","setValue","markAsDirty","valid","encryptionKey","value","confirmDialog","confirm","doSaveHub","onValueChanged","Object","assign","saveHub","cancel","group","required","minLength","maxLength","duplicateHubNameValidator","description","sharedAccess","expiryDate","valueChanges","control","hubNameExists","form","keys","field","get","dirty","errors","HubsSummaryComponent","logoSmallUrl","eSharedAccess","ePermission","eHubAccess","view","User","hubAccess","ManageComponent","formsService","updatingPassword","passwordMatchError","passwordStrengthError","googleMessage","microsoftMessage","_userSubscription","getUserObservable","user","createDefault","updateLogins","currentForm","email","disable","passwordForm","pattern","duplicatePasswordValidator","getLoginProviders","logins","confirmPassword","newPassword","changePassword","password","addSuccessMessage","updateUserDetails","forceLogin","googleSignIn","addExternalLogin","Google","providerKey","authenticationToken","loginResult","microsoftSignIn","Microsoft","login","removeExternalLogin","loginProvider","TaskStatusComponent","currentStatus","getStatus","task","statusInfo","StatusInfo","percentage","Error","Cancelled","statusType","canCancel","Created","Running","Scheduled","Queued","Completed","iconClass","error","cancelTasks","TasksIndexComponent","showPage","showPageMessage","enum","getTasksObservable","forEach","referenceKey","push","taskId","showTask","TaskViewComponent","eManagedTaskStatus","exceptionHidden","watchChanges","tasks","reference","NotificationsIndexComponent","notifications","getNotifications","showMessage","NotificationViewComponent","getNotification","RemoteAgentsComponent","HelpComponent","footer","class","tooltip","eDownloadUrlType","cancelToken","remoteAgents","refreshData","remoteAgent","activeAgent","remoteAgentKey","connected","dataPrivacyStatus","isEncrypted","ipAddress","restrictIp","ipAddresses","lastLoginIpAddress","lastLoginDateTime","remoteAgentId","downloadUrls","instanceId","version","latestVersion","versionTooltip","upgradeAvailable","versionClass","items","item","downloadUrl","index","getFromExternal","url","removeUserTokens","map","addHubClientErrorMessage","activeAgents","restartAgent","addHubErrorMessage","pingRemoteAgents","queryParams","path","_hubCacheSubscription","getHubCacheObservable","cache","link","linkClick","RemoteAgentDownloadComponent","downloading","refreshingEncryptionKey","refreshingUserToken","logLevelItems","eEnvironmentItems","embedUserName","logLevel","Information","environment","Windows","getHubs","remoteApplicationSettings","remoteAgentSettings","downloadRemoteAgent","addHubSuccessMessage","showErrors","downloadRemoteSettings","getUserToken","userToken","remoteAgentForm","addMissing","clearFormSubscriptions","startForm","RemoteAgentEditComponent","saveRemoteAgent","ipAddressesControl","findIndex","RemoteAgentTokenComponent","createRemoteAgent","refreshRemoteAgentToken","remoteToken","updateAppSettings","promise","appSettings","IssueEditComponent","moment","eIssueTypeItems","eIssueSeverityItems","eIssueStatusItems","eIssueCategoryItems","saving","isNew","supportOptions","icon","issue","D","getIssue","subTitle","userName","updateDate","calendar","getUser","isAdmin","saveIssue","addIssueComment","newComment","disabled","type","category","severity","isPrivate","issueStatus","gitHubLink","array","dexihIssueComments","comment","IssueIndexComponent","HubsModule","hubsView","component","baseRoutes","children","getIssues","i","issues","Routing","forChild","redirectTo","ngModule","providers"],"mappings":"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","file":"x","sourcesContent":["<div id=\"content\">\n\n    <section *ngIf=\"openDelay && webSocketStatus != 'Connected'\">\n        <div class=\"alert alert-danger m-3\">\n            {{webSocketStatus}}\n        </div>\n    </section>\n\n    <div class=\"m-3\">\n        <dexih-message #DexihMessage></dexih-message>\n    </div>\n\n    <router-outlet></router-outlet>\n</div>","import { Component, OnInit, ViewChild, OnDestroy, HostListener } from '@angular/core';\nimport { HubsService } from './hubs.service';\nimport { Subscription} from 'rxjs';\nimport { DexihMessageComponent } from '../shared/ui/dexihMessage';\nimport { AuthService } from '../+auth/auth.service';\n\n@Component({\n    selector: 'dexih-hubs',\n    templateUrl: './hubs.component.html'\n})\nexport class HubsComponent implements OnInit, OnDestroy {\n    @ViewChild('DexihMessage', { static: true }) public dexihMessage: DexihMessageComponent;\n\n    _hubsMessageSubscription: Subscription;\n    _webSocketStatusSubscription: Subscription;\n    webSocketStatus: string;\n    openDelay = false; // used to pause the websocket error message displaying whilst a connect attempt occurs.\n\n    constructor(private authService: AuthService, private hubsService: HubsService) {\n        authService.initialize();\n    }\n\n    ngOnInit() {\n\n        this._hubsMessageSubscription = this.hubsService.getHubMessagesObservable().subscribe(messages => {\n            if (!messages || messages.length === 0) {\n                this.dexihMessage.reset();\n            } else {\n                this.dexihMessage.addMessage(messages[messages.length - 1]);\n            }\n        });\n\n        this._webSocketStatusSubscription = this.authService.getWebSocketStatusObservable().subscribe(status => {\n            this.webSocketStatus = status;\n        });\n\n        setTimeout(() => {\n            this.openDelay = true;\n        }, 5000);\n\n    }\n\n    ngOnDestroy() {\n        if (this._hubsMessageSubscription) { this._hubsMessageSubscription.unsubscribe(); }\n        if (this._webSocketStatusSubscription) { this._webSocketStatusSubscription.unsubscribe(); }\n    }\n\n    @HostListener('window:focus', ['$event'])\n    onFocus(): void {\n        this.openDelay = false;\n        setTimeout(() => {\n            this.openDelay = true;\n        }, 5000);\n    }\n}\n","<div class=\"container-fluid\">\n    <dexih-widget title=\"Available Hubs\" \n        iconClass=\"fa fa-lg fa-fw fa-life-saver\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n    >\n\n\t\t<dexih-table \n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[dataObservable]=\"tableData\"\n\t\t\t(rowClick)=\"edit($event)\"\n\t\t\t>\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-hub=\"item\">\n\t\t\t\t\t<dexih-button-edit class=\"mr-1\" [routerLink]=\"['hub-edit', hub.hubKey]\" queryParamsHandling preserveFragment class=\"mr-1\"></dexih-button-edit>\n\t\t\t\t\t<dexih-button-open class=\"mr-1\" [routerLink]=\"['/hub', hub.hubKey]\" queryParamsHandling preserveFragment></dexih-button-open>\n\t\t\t\t\t<dexih-button [routerLink]=\"['/hub', hub.hubKey, 'manage', 'manage-users']\" iconClass=\"fa fa-lock\" queryParamsHandling preserveFragment text=\"Permissions\" class=\"mr-1\"></dexih-button>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t<dexih-button-delete (click)=\"deleteHubs(items)\" class=\"mr-1\"></dexih-button-delete>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<dexih-button-new [routerLink]=\"['hub-new']\" class=\"mr-1\"></dexih-button-new>\n\t\t\t\t</ng-template>\n\t\t</dexih-table>\n    </dexih-widget>\n</div>\n\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubsService } from '../hubs.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable, BehaviorSubject, Subscription} from 'rxjs';\nimport { AuthService } from '../../+auth/auth.service';\nimport { DexihHubAuth } from '../../+auth/auth.models';\n\n@Component({\n  selector: 'hubs',\n  templateUrl: './hub-index.component.html',\n  styles: []\n})\nexport class HubIndexComponent implements OnInit, OnDestroy {\n\n    hubsObserve: Subscription;\n    hubs: Array<DexihHubAuth>;\n    hubCacheStatus: Subscription;\n    hubName: string;\n    hubStatusMessage: string;\n    isLoaded = false;\n\n    columns = [\n        { name: 'name', title: 'Name', format: ''},\n        { name: 'description', title: 'Description', format: ''},\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar'},\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubsService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.hubsObserve = this.authService.getHubsObservable().subscribe(hubs => {\n            if (hubs) { this.isLoaded = true; }\n            this._tableData.next(hubs);\n        } );\n    }\n\n    ngOnDestroy() {\n       if (this.hubsObserve) {this.hubsObserve.unsubscribe(); }\n    }\n\n    deleteHubs(hubs: DexihHubAuth[]) {\n        this.authService.deleteHubs(hubs).catch(reason => {\n            this.hubService.addHubMessage(reason);\n        });\n    }\n\n    edit(hub: DexihHubAuth) {\n        this.router.navigate(['hub-edit', hub.hubKey], {relativeTo: this.route});\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n}\n","<div class=\"container\">\n\t<dexih-message #DexihMessage></dexih-message>\n\n    <dexih-widget *ngIf=\"mainForm\"\n\t\ttitle=\"Edit Hub\" \n\t\tsubTitle=\"Complete the details to create/edit a new hub\"\n        iconClass=\"fa fa-lg fa-fw fa-life-saver\" \n\t\t[showCloseButton]=\"true\"\n\t\t[padding]=\"true\"\n\t\t(close)=\"cancel()\"\n    >\n        <ng-template #header>\n\t\t\t<dexih-button-save class=\"mr-1\" (click)=\"!savingHub && !mainForm.pristine && saveHub()\" [disabled]=\"savingHub || mainForm.pristine\" [busy]=\"savingHub\"></dexih-button-save>\n\t\t\t<dexih-button-cancel (click)=\"!savingHub && cancel()\" [disabled]=\"savingHub\"></dexih-button-cancel>\n        </ng-template>\n\n\t\t<form  id=\"hub-edit-form\" [formGroup]=\"mainForm\" >\n\t\t\t<fieldset>\n\t\t\t\t<section>\n\t\t\t\t\t<form-input label=\"Hub Name\" formControlName=\"name\" placeholder=\"Enter a name for the hub\" [autocapitalize]=\"on\" iconClass=\"fa fa-life-ring\" [errors]=\"formErrors.name\">\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-textarea label=\"Description\" formControlName=\"description\" placeholder=\"Enter a description for the hub\">\n\t\t\t\t\t</form-textarea>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-input label=\"Encryption Key\" formControlName=\"encryptionKey\" placeholder=\"Enter an encryption key\" iconClass=\"fa fa-key\" [errors]=\"formErrors.encryptionKey\" note=\"The encryption key will be used to encrypt table columns flagged as secure.  Ensure this key is kept securely as without it encrypted data will be lost.\" style=\"z-index: 10000\">\n\t\t\t\t\t\t(<dexih-button buttonClass=\"btn btn-link mb-1 p-0\" iconClass=\"fa fa-refresh\" [busy]=\"generatingKey\" (click)=\"generateKey()\">Generate a new key</dexih-button>)\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-select label=\"Shared Data Access\" formControlName=\"sharedAccess\" [items]=\"SharedAccessItems\" itemKey=\"key\" itemName=\"description\"\n\t\t\t\t\t\ticonClass=\"fa fa-lock\" [errors]=\"formErrors.sharedAccess\"  note='The level of access required for users to access shared data in this hub.' [enableFilter]=\"false\">\n\t\t\t\t\t</form-select>\n\t\t\t\t</section>\n\n\t\t\t</fieldset>\n\t\t</form>\n    </dexih-widget>\n</div>","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Observable, Subscription, combineLatest} from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { AuthService } from '../../+auth/auth.service';\nimport { DexihHubAuth } from '../../+auth/auth.models';\nimport { Location } from '@angular/common';\nimport { DexihMessageComponent } from '../../shared/ui/dexihMessage';\nimport { eSharedAccessItems, DexihRemoteAgent } from '../../shared/shared.models';\n\n@Component({\n\n  selector: 'dexih-hub-edit-form',\n  templateUrl: './hub-edit.component.html'\n})\nexport class HubEditComponent implements OnInit, OnDestroy {\n  @ViewChild('DexihMessage', { static: true }) public dexihMessage: DexihMessageComponent;\n\n  private _subscription: Subscription;\n  private _valueChangesSubscription: Subscription;\n\n  action: string;\n  pageTitle: string;\n\n  hub: DexihHubAuth;\n\n  SharedAccessItems = eSharedAccessItems.filter(c => c.key > 0);\n\n  generatingKey = false;\n  savingHub = false;\n  hasChanged = false;\n  showAllErrors = false;\n\n  mainForm: FormGroup;\n\n  formErrors = {\n    'name': '',\n    'encryptionKey': '',\n    'sharedAccess': '',\n    'expiryDate': ''\n  };\n\n  validationMessages = {\n    'name': {\n      'required': 'Name is required.',\n      'minlength': 'Name must be at least 4 characters long.',\n      'maxlength': 'Name cannot be more than 50 characters long.',\n      'duplicateHubName': 'Name cannot be the same as an existing hub name.'\n    },\n    'encryptionKey': {\n      'required': 'Encryption Key is required.',\n      'minlength': 'Encryption Key must be at least 10 characters long.',\n      'maxlength': 'Encryption Key cannot be more than 250 characters long.'\n    },\n    'sharedAccess': {\n      'required': 'Specify the type of required access.'\n    },\n    'expiryDate': {\n      'validateDate': 'The expiry date is invalid.'\n    }\n  };\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private location: Location,\n    private fb: FormBuilder\n  ) {\n  }\n\n  ngOnInit() {\n\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.authService.getHubsObservable(),\n        this.authService.getRemoteAgentsObservable(),\n      ).subscribe(result => {\n        let data = result[0];\n        let params = result[1];\n        let hubs = result[2];\n\n        this.action = data['action'];\n        this.pageTitle = data['pageTitle'];\n\n        if (this.action === 'New') {\n          this.hub = new DexihHubAuth();\n          this.buildForm();\n        } else {\n          if (hubs) {\n            let hubKey = + params['hubKey'];\n            this.hub = hubs.find(c => c.hubKey === hubKey);\n            this.buildForm();\n          }\n        }\n\n      });\n    } catch (e) {\n      this.dexihMessage.addErrorMessage(e.message);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._valueChangesSubscription) { this._valueChangesSubscription.unsubscribe(); }\n  }\n\n  generateKey() {\n    this.generatingKey = true;\n    this.authService.getRandomEncryptionKey().then(result => {\n      this.mainForm.controls['encryptionKey'].setValue(result);\n      this.mainForm.markAsDirty();\n      this.generatingKey = false;\n    }).catch(reason => {\n      this.dexihMessage.addMessage(reason);\n      this.generatingKey = false;\n    });\n  }\n\n  saveHub() {\n    if (this.mainForm.valid && this.hasChanged) {\n\n      if (this.hub.hubKey > 0 && this.hub.encryptionKey !== this.mainForm.value.encryptionKey) {\n        this.authService.confirmDialog(\n          'Warning: Encryption Key Changed',\n          // tslint:disable-next-line:max-line-length\n          'The encryption key has changed.  This will require all connection password & connection strings in the hub to be updated.  Would you like to continue?'\n        ).then(confirm => {\n          if (confirm) {\n            this.doSaveHub();\n          }\n        });\n      } else {\n        this.doSaveHub();\n      }\n    } else {\n      this.showAllErrors = true;\n      this.onValueChanged();\n    }\n  }\n\n  private doSaveHub() {\n    this.dexihMessage.reset();\n    this.savingHub = true;\n    Object.assign(this.hub, this.mainForm.value);\n    this.authService.saveHub(this.hub)\n      .then(result => {\n        this.savingHub = false;\n        this.cancel();\n\n        this.router.navigate(['/hub', result.hubKey, 'summary', 'agents']);\n        return;\n\n      }).catch(reason => {\n        this.dexihMessage.addMessage(reason);\n        this.savingHub = false;\n      });\n  }\n\n  cancel() {\n    this.authService.navigateUp();\n  }\n\n  buildForm(): void {\n    this.mainForm = this.fb.group({\n      'name': [this.hub.name, [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(50),\n        this.duplicateHubNameValidator()\n      ]\n      ],\n      'description': [this.hub.description, [] ],\n      'encryptionKey': [this.hub.encryptionKey, [\n      ]],\n      'sharedAccess': [this.hub.sharedAccess, [\n        Validators.required,\n      ]],\n      'expiryDate': [this.hub.expiryDate, []],\n    });\n\n    if (this._valueChangesSubscription) { this._valueChangesSubscription.unsubscribe(); }\n    this._valueChangesSubscription = this.mainForm.valueChanges.subscribe(data => this.onValueChanged(data));\n    this.onValueChanged(); // (re)set validation messages now\n\n    this.hasChanged = false;\n  }\n\n  duplicateHubNameValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      const name = control.value;\n      const no = this.authService.hubNameExists(this.hub.hubKey, name);\n      return no ? { 'duplicateHubName': { name } } : null;\n    };\n  }\n\n  onValueChanged(data?: any) {\n    if (!this.mainForm) { return; }\n    const form = this.mainForm;\n\n    this.hasChanged = true;\n\n    for (const field of Object.keys(this.formErrors)) {\n      // clear previous error message (if any)\n      this.formErrors[field] = '';\n      const control = form.get(field);\n\n      if (control && (control.dirty || this.showAllErrors) && !control.valid) {\n        const messages = this.validationMessages[field];\n        for (const key of Object.keys(control.errors)) {\n          this.formErrors[field] += messages[key] + ' ';\n        }\n      }\n    }\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"d-flex align-items-center p-3 my-3 text-white-50 bg-info rounded\">\n        <img class=\"mr-3\" [src]='logoSmallUrl' alt=\"\" width=\"48\" height=\"48\">\n        <div class=\"lh-100\">\n            <h3 class=\"mb-0 text-white lh-100\">Data Experts Integration Hub</h3>\n        </div>\n    </div>\n        \n    <div *ngIf=\"(hubs | async)?.length == 0\" class=\"alert alert-warning\">\n        <div class=\"float-right\">\n            <dexih-button-new routerLink=\"hub-new\" title=\"Create a new Hub\" text=\"New Hub\"></dexih-button-new>\n        </div>\n        <h3>Let's get started.</h3>\n        <h5>You do not have any hubs currently available to you.</h5>\n        <h5>To get started, either create a new hub, or request another user provide access.</h5>\n    </div>\n\n    <div class=\"card-deck\">\n        <div class=\"card mb-3\" style=\"min-width: 18rem;\">\n            <div class=\"card-header text-white bg-success\"><i class=\"fa fa-lg fa-fw fa-life-saver\"></i>Hub Management</div>\n            <div class=\"card-body\">\n                <p class=\"card-text\">Hub's are used to store definitions for tables and data processing rules, and are\n                    used to run, schedule and publish data.</p>\n            </div>\n            <div class=\"card-footer\">\n                <dexih-button class=\"ml-1\" iconClass=\"fa fa-life-saver\" routerLink=\"hubs-view\">Manage</dexih-button>\n                <dexih-button-new  class=\"ml-1\" routerLink=\"hub-new\" title=\"Create a new hub\"></dexih-button-new>\n            </div>\n        </div>\n        <div class=\"card mb-3\" style=\"min-width: 18rem;\">\n            <div class=\"card-header text-white bg-primary\"><i class=\"fa fa-lg fa-fw fa-user\"></i>Account Management</div>\n            <div class=\"card-body\">\n                <p class=\"card-text\">Edit your account details, password, and login providers.</p>\n            </div>\n            <div class=\"card-footer\">\n                <dexih-button class=\"ml-1\" iconClass=\"fa fa-user\" routerLink=\"manage\">Account</dexih-button>\n            </div>\n        </div>\n        <div class=\"card mb-3\" style=\"min-width: 18rem;\">\n            <div class=\"card-header text-white bg-warning\"><i class=\"fa fa-lg fa-fw fa-wifi\"></i>Remote Agents</div>\n            <div class=\"card-body\">\n                <p class=\"card-text\">Remote agents provide connectivity to data sources and are used run and publish\n                    data.</p>\n            </div>\n            <div class=\"card-footer\">\n                <dexih-button class=\"mr-1\" iconClass=\"fa fa-wifi\" routerLink=\"agents\">Agents</dexih-button>\n                <dexih-button iconClass=\"fa fa-tasks\" routerLink=\"tasks\">Tasks</dexih-button>\n            </div>\n        </div>\n        <div class=\"card mb-3\" style=\"min-width: 18rem;\">\n            <div class=\"card-header text-white bg-danger\"><i class=\"fa fa-lg fa-fw fa-newspaper-o\"></i>Shared Data</div>\n            <div class=\"card-body\">\n                <p class=\"card-text\">View all datasets which have been shared.</p>\n            </div>\n            <div class=\"card-footer\">\n                <dexih-button-view routerLink=\"sharedData\"></dexih-button-view>\n            </div>\n        </div>\n    </div>\n\n    <dexih-widget title=\"Hubs\" \n        iconClass=\"fa fa-lg fa-fw fa-life-saver\" \n        [showCloseButton]=\"false\"\n        [padding]=\"true\"\n        [showFilter]=\"true\"\n        (filterString)=\"filterString = $event\"\n    >\n        <ng-template #header>\n            <div class=\"btn-group btn-group-toggle ml-1\" data-toggle=\"buttons\" >\n                <label class=\"btn btn-primary\" [ngClass]=\"{active: view === eHubAccess.All}\" title=\"All Hubs.\">\n                    <input type=\"radio\" name=\"options\" [value]=\"eHubAccess.All\" autocomplete=\"off\" [(ngModel)]=\"view\">\n                    <i class=\"fa fa-globe\"></i>\n                </label>\n                <label class=\"btn btn-primary\" [ngClass]=\"{active: view === eHubAccess.User}\" title=\"User owned hubs\">\n                    <input type=\"radio\" name=\"options\" [value]=\"eHubAccess.User\" autocomplete=\"off\" [(ngModel)]=\"view\">\n                    <i class=\"fa fa-user-secret\"></i>\n                </label>\n                <label class=\"btn btn-primary\" [ngClass]=\"{active: view === eHubAccess.ReadOnly}\" title=\"Readonly hubs\">\n                    <input type=\"radio\" name=\"options\" [value]=\"eHubAccess.ReadOnly\"  autocomplete=\"off\" [(ngModel)]=\"view\">\n                    <i class=\"fa fa-book\"></i>\n                </label>\n                <label class=\"btn btn-primary\" [ngClass]=\"{active: view === eHubAccess.Public}\" title=\"Public Hubs\">\n                    <input type=\"radio\" name=\"options\" [value]=\"eHubAccess.Public\"  autocomplete=\"off\" [(ngModel)]=\"view\">\n                    <i class=\"fa fa-users\"></i>\n                </label>\n            </div>\n        </ng-template>\n\n        <div class=\"card-columns\">\n            <ng-template ngFor let-hub [ngForOf]=\"hubs | async\">\n                <div *ngIf=\"(view === eHubAccess.All || hub.hubAccess === view) && (!filterString || hub.name.toUpperCase().includes(filterString.toUpperCase()))\" class=\"card\">\n                    <div>\n                        <div class=\"card-header\">\n                            <div class=\"d-flex flex-row p-0\">\n                                <div>\n                                    {{hub.name}}\n                                    <div class=\"small\">({{eHubAccess[hub.hubAccess]}})</div>\n                                </div>\n                                <div class=\"d-flex ml-auto\">\n                                    <dexih-button-open routerLink=\"/hub/{{hub.hubKey}}/summary\"></dexih-button-open>\n                                    <dexih-button-edit class=\"ml-1\" routerLink=\"hub-edit/{{hub.hubKey}}\">\n                                    </dexih-button-edit>\n                                </div>\n                            </div>        \n                        </div>\n                        <div *ngIf=\"hub.description\" class=\"card-body\">\n                            <p class=\"card-text\">{{hub.description}}</p>\n                        </div>\n                    </div>\n                </div>\n            </ng-template>\n        </div>\n    </dexih-widget>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../+auth/auth.service';\nimport { Observable, Observer, Subscription, BehaviorSubject, combineLatest} from 'rxjs';\nimport {DexihHubAuth, logoSmallUrl, eHubAccess} from '../../+auth/auth.models';\nimport { Router } from '@angular/router';\nimport { eSharedAccess, ePermission, DexihHub } from '../../shared/shared.models';\n\n@Component({\n  selector: 'hubs-summary',\n  templateUrl: './hubs-summary.component.html',\n})\nexport class HubsSummaryComponent implements OnInit {\n\n  public hubs: Observable<DexihHubAuth[]>;\n\n  public filterString: string;\n\n  logoSmallUrl = logoSmallUrl;\n  eSharedAccess = eSharedAccess;\n  ePermission = ePermission;\n  eHubAccess = eHubAccess;\n\n  public view = eHubAccess.User;\n  public hubAccess = {};\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n    this.hubs = this.authService.getHubsObservable();\n  }\n}\n\n\n","\n<div class=\"container\">\n\t<dexih-message #DexihMessage></dexih-message>\n\n\t<dexih-widget-vertical>\n    <dexih-widget title=\"User Details\" iconClass=\"fa fa-lg fa-fw fa-user\" [padding]=\"true\">\n        <ng-template #header>\n\t\t\t\t<dexih-button-save class=\"mr-1\" (click)=\"save()\" [busy]=\"formsService.formSaving\" [disabled]=\"formsService.formSaving || !formsService.hasChanged\"></dexih-button-save>\t\t\t\n\t\t\t\t<dexih-button-cancel (click)=\"cancel()\"></dexih-button-cancel>\t\t\t\n        </ng-template>\n\n\t\t<form *ngIf=\"formsService.currentForm\"  [formGroup]=\"formsService.currentForm\">\n\t\t\t<fieldset>\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"col-md-6\">\n\t\t\t\t\t\t<form-input label=\"User Name\" formControlName=\"userName\" placeholder=\"Enter the user name.\" iconClass=\"fa fa-list\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Email Address\" formControlName=\"email\" placeholder=\"Enter the email.\" iconClass=\"fa fa-list\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"First Name\" formControlName=\"firstName\" placeholder=\"First Name\">\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Last Name\" formControlName=\"lastName\" placeholder=\"Last Name\">\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-checkbox label=\"I want to receive news and special offers\" formControlName=\"subscription\" >\n\t\t\t\t\t</form-checkbox>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-checkbox label=\"I want to receive private notifications from other users.\" formControlName=\"notifyPrivateMessage\" >\n\t\t\t\t\t</form-checkbox>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-checkbox label=\"I want to receive critical support and issue updates.\" formControlName=\"notifySupportMessage\" >\n\t\t\t\t\t</form-checkbox>\n\t\t\t\t</section>\n\n\t\t\t</fieldset>\n\t\t</form>\n \n    </dexih-widget>\n    <dexih-widget title=\"Reset Password\" iconClass=\"fa fa-lg fa-fw fa-lock\" [padding]=\"true\" >\n        <ng-template #header>\n\t\t\t<dexih-button class=\"mr-1\" iconClass=\"fa fa-key\" btnClass=\"btn btn-danger\" routerLink='/auth/forgot-password'>Forgot Password</dexih-button>\n\t\t\t<dexih-button-save [disabled]=\"!passwordForm.valid\" (click)=\"updatePassword()\" [busy]=\"updatingPassword\">Update Password</dexih-button-save>\n        </ng-template>\n\n\t\t<form *ngIf=\"passwordForm\"  [formGroup]=\"passwordForm\">\n\t\t\t<fieldset>\n\t\t\t\t<section>\n\t\t\t\t\t<form-input label=\"Current Password\" formControlName=\"password\" type=\"password\">\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-input label=\"New Password\" formControlName=\"newPassword\" type=\"password\">\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-input label=\"Confirm New Password\" formControlName=\"confirmPassword\" type=\"password\" [errors]=\"passwordMatchError\" >\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\n\t\t\t</fieldset>\n\t\t</form>\n \n\t</dexih-widget>\n\t\n\t<dexih-widget title=\"Logins\" subTitle=\"The following login providers are available\" iconClass=\"fa fa-lg fa-fw fa-life-saver\"  [padding]=\"true\">\n\t\t<ng-template #subHeader>\n\t\t\t\t<dexih-button class=\"mr-1\" (click)=\"microsoftLogin(true)\" buttonClass=\"btn btn-primary\" iconClass=\"fa fa-windows\">Add Microsoft</dexih-button>\n\t\t\t\t<dexih-button (click)=\"googleLogin(true)\" buttonClass=\"btn btn-danger\" iconClass=\"fa fa-google\">Add Google</dexih-button>\n\t\t</ng-template>\n\n\t\t<ul class=\"list-group\">\n\t\t\t<li *ngFor=\"let login of logins\" class=\"list-group-item\">\n\t\t\t\t<div class=\"float-right\">\n\t\t\t\t\t<dexih-button-delete (click)=\"deleteLogin(login)\" title=\"Remove the following login\"></dexih-button-delete>\n\t\t\t\t</div>\n\t\t\t\t<h3>{{login.providerDisplayName}}</h3>\n\t\t\t</li>\n\t\t</ul>\n\n\t\t<section *ngIf=\"googleMessage\">\n            <div class=\"alert alert-danger\">\n              Google could not automatically sign-in due to \"{{googleMessage}}\".  \n              Click login button to open new window to login to your google account.\n              <dexih-button buttonClass=\"btn btn-danger\" iconClass=\"fa fa-google\" text=\"Google Login\" (click)=\"googleLogin(true)\"></dexih-button>\n            </div>\n          </section>\n\n          <section *ngIf=\"microsoftMessage\">\n              <div class=\"alert alert-danger\">\n                Microsoft could not automatically sign-in due to \"{{microsoftMessage}}\".  \n                Click login button to open new window to login to your microsoft account.\n                <dexih-button buttonClass=\"btn btn-primary\" iconClass=\"fa fa-microsoft\" text=\"Microsoft Login\" (click)=\"microsoftLogin(true)\"></dexih-button>\n              </div>\n\t\t</section>\n\t</dexih-widget>\n</dexih-widget-vertical>\n</div>","import { AbstractControl, FormBuilder, FormControl, ValidatorFn, Validators, FormGroup } from '@angular/forms';\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { Location } from '@angular/common';\nimport { FormsService } from '../../shared/forms/forms.service';\nimport { User, UserLoginInfo } from '../../+auth/auth.models';\nimport { DexihMessageComponent } from '../../shared/ui/dexihMessage';\nimport { eLoginProvider } from '../../shared/shared.models';\n\n@Component({\n  selector: 'manage-form',\n  templateUrl: './manage.component.html',\n  providers: [FormsService]\n})\nexport class ManageComponent implements OnInit, OnDestroy {\n  @ViewChild('DexihMessage', { static: true }) public dexihMessage: DexihMessageComponent;\n\n  private _userSubscription: Subscription;\n  private action: string;\n\n  public logins: UserLoginInfo[];\n\n  public passwordForm: FormGroup;\n  public updatingPassword = false;\n  public passwordMatchError = '';\n  public passwordStrengthError = '';\n\n  public googleMessage = false;\n  public microsoftMessage = false;\n\n  constructor(\n    private authService: AuthService,\n    public formsService: FormsService,\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location) {\n  }\n\n  ngOnInit() {\n    this._userSubscription = this.authService.getUserObservable().subscribe(user => {\n      this.formsService.createDefault(user, new User());\n      this.updateLogins();\n      this.formsService.currentForm.controls.email.disable();\n      // this.formsService.currentForm.controls.userName.disable();\n\n      this.passwordForm = this.fb.group({\n        'password': ['', [\n        ]],\n        'newPassword': ['', [\n          Validators.required,\n          Validators.minLength(8),\n          Validators.maxLength(20),\n          Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$^+=!*()@%&]).{8,}$')\n        ]],\n        'confirmPassword': ['', [\n          this.duplicatePasswordValidator()\n        ]],\n      });\n\n    })\n  }\n\n  ngOnDestroy() {\n    if (this._userSubscription) { this._userSubscription.unsubscribe(); }\n  }\n\n  updateLogins() {\n    this.authService.getLoginProviders().then(result => {\n      this.logins = result;\n    });\n  }\n\n  private duplicatePasswordValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (this.passwordForm) {\n        let form = this.passwordForm;\n        if (form.controls.confirmPassword.dirty && form.controls.newPassword.value !== form.controls.confirmPassword.value) {\n          this.passwordMatchError = 'The passwords do not match';\n          return { 'passwordMatch': {} };\n        } else {\n          this.passwordMatchError = '';\n          return null;\n        }\n      }\n    };\n  }\n\n  public updatePassword() {\n    this.updatingPassword = true;\n    this.authService.changePassword(this.passwordForm.controls.password.value, this.passwordForm.controls.newPassword.value)\n      .then(result => {\n        this.updatingPassword = false;\n        this.dexihMessage.addSuccessMessage('The password change was successful.');\n    }).catch(reason => {\n      this.dexihMessage.addMessage(reason);\n      this.updatingPassword = false;\n    });\n  }\n\n  save() {\n    const user: User = this.formsService.currentForm.value;\n\n    this.authService.updateUserDetails(user).then(c => {\n      if (c) {\n        this.dexihMessage.addSuccessMessage('Details updated successfully');\n      } else {\n      }\n\n    }).catch(reason => {\n      this.dexihMessage.addMessage(reason);\n    })\n  }\n\n  cancel() {\n    this.authService.navigateUp();\n  }\n\n  googleLogin(forceLogin: boolean) {\n    this.dexihMessage.reset();\n\n      this.authService.googleSignIn(forceLogin).then(result => {\n          this.authService.addExternalLogin(eLoginProvider.Google, result.providerKey, result.authenticationToken).then(\n            loginResult => {\n              this.updateLogins();\n            }).catch(\n            reason => {\n              this.dexihMessage.addMessage(reason);\n            });\n        }).catch(\n          reason => {\n            this.googleMessage = reason;\n            this.dexihMessage.addErrorMessage(reason);\n          });\n  }\n\n  microsoftLogin(forceLogin: boolean)  {\n    this.dexihMessage.reset();\n\n      this.authService.microsoftSignIn(forceLogin).then(result => {\n          this.authService.addExternalLogin(eLoginProvider.Microsoft, result.providerKey, result.authenticationToken).then(\n            loginResult => {\n              this.updateLogins();\n            }).catch(\n            reason => {\n              this.dexihMessage.addMessage(reason);\n            });\n        }).catch(\n          reason => {\n            this.microsoftMessage = reason;\n            this.dexihMessage.addErrorMessage(reason);\n          });\n  }\n\n  deleteLogin(login: UserLoginInfo) {\n    this.authService.removeExternalLogin(login.loginProvider, login.providerKey);\n  }\n}\n","<div *ngIf=\"currentStatus\" style=\"width:100%\"  >\n    <dexih-progressbar [animate]=\"true\" [showCancel]=\"currentStatus.canCancel\" (cancelled)=\"cancelled()\" (click)=\"clicked()\" [value]=\"currentStatus.percentage\" [type]=\"currentStatus.statusType\">\n        {{currentStatus.message}}\n    </dexih-progressbar>    \n</div>\n","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { HubsService } from '../../hubs.service';\nimport { ManagedTask, eManagedTaskStatus } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'task-status',\n    templateUrl: './task-status.component.html'\n})\nexport class TaskStatusComponent implements OnInit, OnDestroy {\n    @Input() public task: ManagedTask;\n\n    public currentStatus: StatusInfo;\n\n    constructor(private hubsService: HubsService) {\n    }\n\n    ngOnInit() {\n        this.currentStatus = this.getStatus(this.task);\n    }\n\n    ngOnDestroy() {\n    }\n\n    getStatus(task: ManagedTask): StatusInfo {\n        const statusInfo = new StatusInfo();\n\n        if (!task) {\n            statusInfo.message = 'not running';\n            statusInfo.percentage = 0;\n            statusInfo.statusType = 'info';\n            statusInfo.error = '';\n        } else {\n            statusInfo.percentage = task.percentage;\n\n            // update the type, which is used for the colour of the progress\n            switch (task.status) {\n                case eManagedTaskStatus.Error:\n                case eManagedTaskStatus.Cancelled:\n                    statusInfo.statusType = 'danger';\n                    statusInfo.canCancel = false;\n                    break;\n                case eManagedTaskStatus.Created:\n                case eManagedTaskStatus.Running:\n                case eManagedTaskStatus.Scheduled:\n                case eManagedTaskStatus.Queued:\n                    statusInfo.statusType = 'primary';\n                    statusInfo.canCancel = true;\n                    break;\n                case eManagedTaskStatus.Completed:\n                    statusInfo.statusType = 'success';\n                    statusInfo.canCancel = false;\n                    break;\n            }\n\n            // update the type, which is used for the colour of the progress\n            switch (task.status) {\n                case eManagedTaskStatus.Error:\n                    statusInfo.iconClass = 'fa fa-ban text-danger'\n                    break;\n                case eManagedTaskStatus.Cancelled:\n                    statusInfo.iconClass = 'fa fa-ban text-warning'\n                    break;\n                case eManagedTaskStatus.Created:\n                    statusInfo.iconClass = 'fa fa-circle text-success'\n                    break;\n                case eManagedTaskStatus.Queued:\n                    statusInfo.iconClass = 'fa fa-square'\n                    break;\n                case eManagedTaskStatus.Running:\n                    statusInfo.iconClass = 'fa fa-cogs text-success'\n                    break;\n                case eManagedTaskStatus.Scheduled:\n                    statusInfo.iconClass = 'fa fa-calendar text-success'\n                    break;\n                case eManagedTaskStatus.Created:\n                    statusInfo.iconClass = 'fa fa-cog text-success'\n                    break;\n                case eManagedTaskStatus.Completed:\n                    statusInfo.iconClass = 'fa fa-square text-success'\n                    break;\n            }\n\n            // update the message and error\n            statusInfo.message = task.message;\n            statusInfo.error = task.message;\n        }\n        return statusInfo;\n    }\n\n    cancelled() {\n        if (this.task) {\n            this.hubsService.cancelTasks([this.task]);\n        }\n    }\n}\n\nclass StatusInfo {\n    public percentage;\n    public message;\n    public statusType;\n    public error;\n    public iconClass;\n    public canCancel: boolean;\n}\n","<div class=\"container-fluid\">\n    <dexih-widget title=\"Tasks\" \n        iconClass=\"fa fa-lg fa-fw fa-exchange\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\n    >\n\n\t\t<dexih-table \n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[dataObservable]=\"tableData\"\n\t\t\t(rowClick)=\"showTask($event.task)\"\n\t\t\t>\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n\t\t\t\t\t<dexih-button-view (click)=\"showTask(item.task)\" text=\"View Task\"></dexih-button-view>\n\t\t\t\t\t<dexih-button-view class=\"ml-1\" *ngIf=\"item.task.category=='Datalink'\" [routerLink]=\"['/hub', item.task.referenceKey, 'summary', 'datalinks', 'result-view', item.task.data.auditConnectionKey, item.task.data.auditKey]\" text=\"Datalink Result\"></dexih-button-view>\n\t\t\t\t\t<dexih-button-view class=\"ml-1\" *ngIf=\"item.task.category=='Datajob'\" [routerLink]=\"['/hub', item.task.referenceKey, 'summary', 'datalinks', 'result-view', item.task.data.auditConnectionKey, item.task.data.auditKey]\" text=\"Datajob Result\"></dexih-button-view>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #rowStatus select=\"rowStatus\" let-item=\"item\">\n\t\t\t\t\t<task-status [task]=\"item.task\"></task-status>\n\t\t\t\t</ng-template>\n\n\t\t</dexih-table>\n    </dexih-widget>\n</div>\n\n\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable, BehaviorSubject, Subscription, combineLatest} from 'rxjs';\nimport { ManagedTask, eManagedTaskStatus } from '../../../shared/shared.models';\n\n@Component({\n  selector: 'tasks-index',\n  templateUrl: './tasks-index.component.html',\n  styles: []\n})\nexport class TasksIndexComponent implements OnInit, OnDestroy {\n\n    private _subscription: Subscription;\n\n    showPage = false;\n    showPageMessage = 'Loading...';\n\n    columns = [\n        { name: 'hub', title: 'Hub', format: ''},\n        { name: 'task.category', title: 'Category', format: ''},\n        { name: 'task.status', title: 'Status', format: 'Enum', enum: eManagedTaskStatus},\n        { name: 'task.stepName', title: 'Current Step', format: ''},\n        { name: 'task.name', title: 'Name', format: ''},\n        { name: 'task.lastUpdate', title: 'Last Modified', format: 'Calendar'},\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(private authService: AuthService, private router: Router, private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this._subscription = combineLatest(\n            this.route.data,\n            this.route.params,\n            this.authService.getHubsObservable(),\n            this.authService.getTasksObservable()\n        ).subscribe(result => {\n            let hubs = result[2];\n            let tasks = result[3];\n\n            let data = [];\n\n            tasks.forEach(task => {\n                let hub = hubs.find(c => c.hubKey === task.referenceKey);\n                data.push({\n                    hub: hub ? hub.name : 'Unknown hub',\n                    task: task\n                })\n            })\n            this._tableData.next(data);\n\n        });\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n\n    showTask(task: ManagedTask) {\n        this.router.navigate(['view', task.taskId], {relativeTo: this.route})\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n}\n\n\n","<div class=\"container-fluid\">\n\t<dexih-widget *ngIf=\"task\" [title]=\"'Task - ' + task?.name\" iconClass=\"fa fa-lg fa-fw fa-trophy\" [showCloseButton]=\"true\" (close)=\"close()\">\n\t\t<div class=\"content\" [ngSwitch]=\"view\">\n\t\t\t<ul class=\"list-group\">\n\t\t\t\t<li class=\"list-group-item list-group-item-danger\" *ngIf=\"task?.status == eManagedTaskStatus.Error\">\n\t\t\t\t\t<h5>Error encountered!</h5>\n\t\t\t\t\t<h6>{{task.message}}\n\t\t\t\t\t<div class=\"float-right\">\n\t\t\t\t\t\t<dexih-button *ngIf=\"task.exceptionDetails\" (click)='exceptionHidden = !exceptionHidden'>Toggle Details</dexih-button>\n\t\t\t\t\t</div>\n\t\t\t\t\t</h6>\n\t\t\t\t\t<div>\n\t\t\t\t\t<pre *ngIf=\"!exceptionHidden && task.exceptionDetails\" >{{task.exceptionDetails}}</pre>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t\t<li class=\"list-group-item list-group-item-info\">\n\t\t\t\t\t<h5>Details</h5>\n\t\t\t\t</li>\n\t\t\t\t<li class=\"list-group-item \">\n\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t<div class=\"row rounded text-white bg-secondary\">\n\t\t\t\t\t\t\t<div class=\"col border border-white\">Status</div>\n\t\t\t\t\t\t\t<div class=\"col border border-white\">{{eManagedTaskStatus[task.status]}}</div>\n\t\t\t\t\t\t\t<div class=\"w-100\"></div>                    \n\t\t\t\t\t\t\t<div class=\"col border border-white\">Last Updated</div>\n\t\t\t\t\t\t\t<div class=\"col border border-white\">{{task.lastUpdate | calendar}}</div>\n\t\t\t\t\t\t\t<div class=\"w-100\"></div>\n\t\t\t\t\t\t\t<div class=\"col border border-white\">Name</div>\n\t\t\t\t\t\t\t<div class=\"col border border-white\">{{task.name }}</div>\n\t\t\t\t\t\t\t<div class=\"w-100\"></div>\n\t\t\t\t\t\t\t<div class=\"col border border-white\">Category</div>\n\t\t\t\t\t\t\t<div class=\"col border border-white\">{{task.category }}</div>\n\t\t\t\t\t\t\t<div class=\"w-100\"></div>\n\t\t\t\t\t\t\t<div class=\"col border border-white\">Description</div>\n\t\t\t\t\t\t\t<div class=\"col border border-white\">{{task.description }}</div>\n\t\t\t\t\t\t\t<div class=\"w-100\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<h6 *ngIf=\"task.category === 'Datalink'\">\n\t\t\t\t\t\t\t<dexih-button-view [routerLink]=\"['/hub', task.referenceKey, 'summary', 'datalinks', 'result-view', task.data.auditConnectionKey, task.data.auditKey]\" text=\"Datalink Result\"></dexih-button-view>\n\t\t\t\t\t\t</h6>\n\t\t\t\t\t\t<h6 *ngIf=\"task.category === 'Datajob'\">\n\t\t\t\t\t\t\t<dexih-button-view [routerLink]=\"['/hub', task.referenceKey, 'summary', 'datalinks', 'result-view', task.data.auditConnectionKey, task.data.auditKey]\" text=\"Datajob Result\"></dexih-button-view>\n\t\t\t\t\t\t</h6>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t</dexih-widget>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable, Subscription, combineLatest} from 'rxjs';\nimport { eManagedTaskStatus, ManagedTask } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'task-view',\n    templateUrl: './task-view.component.html',\n    styles: []\n})\nexport class TaskViewComponent implements OnInit, OnDestroy {\n\n    private _subscription: Subscription;\n\n    public task: ManagedTask;\n\n    showPage = false;\n    showPageMessage = 'Loading...';\n    view: string;\n\n    eManagedTaskStatus = eManagedTaskStatus;\n\n    public exceptionHidden = true;\n\n    resultChartData: Array<any>;\n\n    constructor(\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.authService.getTasksObservable(),\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                let tasks = result[2];\n\n                let reference = params['reference'];\n\n                this.showPage = false;\n                this.showPageMessage = 'Loading...';\n\n                this.task = tasks.find(c => c.taskId === reference);\n\n                if (!this.task) {\n                    this.authService.navigateUp();\n                }\n\n            });\n        } catch (e) {\n        }\n\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    watchChanges() {\n    }\n\n}\n\n\n","<div class=\"container-fluid\">\n    <dexih-widget title=\"Notifications\" \n        iconClass=\"fa fa-lg fa-fw fa-exchange\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\n    >\n\n\t\t<dexih-table \n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[data]=\"notifications\"\n\t\t\t(rowClick)=\"showMessage($event)\"\n\t\t\t>\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-task=\"item\">\n\t\t\t\t\t<dexih-button-view (click)=\"showMessage(task)\"></dexih-button-view>\n\t\t\t\t</ng-template>\n\t\t\t\t\n\t\t</dexih-table>\n    </dexih-widget>\n</div>\n\n\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Message } from '../../../+auth/auth.models';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable, BehaviorSubject, Subscription, combineLatest} from 'rxjs';\n\n@Component({\n  selector: 'notification-index',\n  templateUrl: './notification-index.component.html',\n  styles: []\n})\nexport class NotificationsIndexComponent implements OnInit, OnDestroy {\n\n    public notifications: Message[];\n\n    showPage = false;\n    showPageMessage = 'Loading...';\n\n    columns = [\n        { name: 'success', title: 'Success', format: ''},\n        { name: 'message', title: 'Message', format: ''},\n        { name: 'value', title: 'Value', format: ''},\n    ];\n\n    private _tableData = new BehaviorSubject<Array<Message>>(null);\n    tableData: Observable<Array<Message>> = this._tableData.asObservable();\n\n    constructor(private authService: AuthService, private router: Router, private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.notifications = this.authService.getNotifications();\n    }\n\n    ngOnDestroy() {\n    }\n\n    showMessage(message: Message) {\n        this.router.navigate(['view', message.reference], {relativeTo: this.route})\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n}\n\n\n","<div class=\"container-fluid\">\n\t<dexih-widget *ngIf=\"message\" title=\"Notification\" iconClass=\"fa fa-lg fa-fw fa-bell\" [showCloseButton]=\"true\" (close)=\"close()\" [padding]=\"true\" >\n\t\t<section *ngIf=\"message\">\n\t\t\t\t<div class=\"alert  clearfix\" [class.alert-danger]=\"message.success == false\" [class.alert-success]=\"message.success == true\">\n\t\t\t\t\t{{message.message}}\n\t\t\t\t\t<div *ngIf=\"message.exceptionDetails && message.message != message.exceptionDetails\">\n\t\t\t\t\t\t<hr>\n\t\t\t\t\t\t<pre>{{message.exceptionDetails}}</pre>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\t</dexih-widget>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Message } from '../../../+auth/auth.models';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable, Subscription, combineLatest} from 'rxjs';\n\n@Component({\n    selector: 'notification-view',\n    templateUrl: './notification-view.component.html',\n    styles: []\n})\nexport class NotificationViewComponent implements OnInit, OnDestroy {\n\n    private _subscription: Subscription;\n\n    public message: Message;\n\n    showPage = false;\n    showPageMessage = 'Loading...';\n    view: string;\n\n    public exceptionHidden = true;\n\n    resultChartData: Array<any>;\n\n    constructor(\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest(\n                this.route.params,\n            ).subscribe(result => {\n                let params = result[0];\n\n                let reference = params['reference'];\n\n                this.showPage = false;\n                this.showPageMessage = 'Loading...';\n\n                this.message = this.authService.getNotification(reference);\n\n                if (!this.message) {\n                    this.authService.navigateUp();\n                }\n\n            });\n        } catch (e) {\n        }\n\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    watchChanges() {\n    }\n\n}\n\n\n","<div class=\"container-fluid\">\n    <dexih-widget title=\"Connected Agents\" \n        iconClass=\"fa fa-lg fa-fw fa-life-saver\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n    >\n\t\t<dexih-table \n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[dataObservable]=\"tableData\"\n\t\t\trowStatusHeading=\"Direct Data Connections\"\n\t\t\t(rowClick)=\"edit($event)\"\n\t\t\t>\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<dexih-button-dropdown *ngIf=\"items && items.length >= 0\" buttonClass=\"btn-primary\" iconClass=\"fa fa-table\"\n\t\t\t\t\t\t[text]=\"items.length > 1 ? 'Agents' : 'Agent'\" [pullRight]=\"pullRight\">\n\t\t\t\t\t\t<li><a class=\"dropdown-item\" [routerLink]=\"['token-new']\"\n\t\t\t\t\t\t\t\ttitle=\"Create a new remote agent token.\"><i class=\"fa fa-file-o\"></i> New Token</a></li>\n\t\t\t\t\t\t<li><a class=\"dropdown-item\" [routerLink]=\"['download']\" title=\"Configure and download a new remote agent\"><i\n\t\t\t\t\t\t\t\t\tclass=\"fa fa-download\"></i> New Agent</a></li>\n\t\t\t\t\t\t<ng-template [ngIf]=\"items.length == 1\">\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a class=\"dropdown-item\" [routerLink]=\"['edit', items[0].remoteAgentKey]\"><i class=\"fa fa-edit\"></i>\n\t\t\t\t\t\t\t\t\tEdit</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a class=\"dropdown-item\" [routerLink]=\"['token-renew', items[0].remoteAgentKey]\"><i\n\t\t\t\t\t\t\t\t\t\tclass=\"fa fa-refresh\"></i> Refresh Token</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ng-template>\n\t\t\t\t\t\t<ng-template [ngIf]=\"items.length > 0\">\n\t\t\t\t\t\t\t<li><a class=\"dropdown-item\" (click)=\"test(items)\" title=\"Test the connectivity of the remote agents.\"><i\n\t\t\t\t\t\t\t\t\t\tclass=\"fa fa-thumbs-o-up\"></i> Test</a></li>\n\t\t\t\t\t\t\t<li><a class=\"dropdown-item\" (click)=\"restartAgents(items)\" title=\"Restart the selected agents\"><i\n\t\t\t\t\t\t\t\t\t\tclass=\"fa fa-refresh\"></i> Restart</a></li>\n\t\t\t\t\t\t\t<li><a class=\"dropdown-item\" (click)=\"removeUserTokens(items)\" title=\"Revoke the selected tokens\"><span\n\t\t\t\t\t\t\t\t\t\tclass=\"text-danger\"><i class=\"fa fa-ban\"></i> Revoke Tokens</span></a></li>\n\t\t\t\t\n\t\t\t\t\t\t</ng-template>\n\t\t\t\t\t</dexih-button-dropdown>\n\t\t\t\t\n\t\t\t\t\t<dexih-button-refresh class=\"ml-1\" (click)=\"refresh()\" text=\"Refresh Agents\" title=\"Refresh the active agents\">\n\t\t\t\t\t</dexih-button-refresh>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #rowStatus select=\"rowStatus\" let-item=\"item\">\n\t\t\t\t\t\t<button *ngIf=\"item.downloadUrls?.length > 0\" class=\"btn btn-primary btn-sm\" (click)=\"test([item])\">test</button>\n\t\t\t\t\t\t<div class=\"list-group mt-1\">\n\t\t\t\t\t\t\t\t<div class=\"list-group-item\" *ngFor=\"let url of item.downloadUrls\">\n\t\t\t\t\t\t\t\t\t{{eDownloadUrlType[url.downloadUrlType]}}: <a [href]=\"url.url + '/ping'\" target=\"_blank\">Open</a>\n\t\t\t\t\t\t\t\t\t<button *ngIf=\"url.testStatus == 'error'\" class=\"btn btn-danger btn-sm float-right\" [title]=\"url.testMessage\">Failed</button>\n\t\t\t\t\t\t\t\t\t<button *ngIf=\"url.testStatus == 'success'\" class=\"btn btn-success btn-sm float-right\" [title]=\"url.testMessage\">Success</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\t\n\t\t\t\t</ng-template>\n\t\t</dexih-table>\n\t</dexih-widget>\n\t\n\t<dexih-help class=\"m-3\" title=\"Remote Agent Installation\" path=\"/assets/help/intro/remote_agent.md\"></dexih-help>\n</div>\n\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubsService } from '../../hubs.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { DexihActiveAgent, DexihRemoteAgent, eDownloadUrlType } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n  selector: 'remoteAgents',\n  templateUrl: './remote-agents.component.html',\n  styles: []\n})\nexport class RemoteAgentsComponent implements OnInit, OnDestroy {\n\n    columns = [\n        { name: 'name', title: 'Name', format: '' },\n        { name: 'connected', title: 'Status', format: 'Text', footer: 'ipAddress'},\n        // { name: 'remoteAgentId', title: 'Remote Agent Id', format: ''},\n        { name: 'user', title: 'Owner', format: ''},\n        { name: 'version', footer: 'latestVersion', title: 'Version', format: 'Md', class: 'versionClass', tooltip: 'versionTooltip'},\n        // { name: 'lastLoginIpAddress', title: 'Last Ip', format: ''},\n        { name: 'lastLoginDateTime', title: 'Last Login', format: 'Calendar'},\n    ];\n\n    private activeAgents: DexihActiveAgent[];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n    eDownloadUrlType = eDownloadUrlType;\n\n    remoteAgents: DexihRemoteAgent[];\n\n    public cancelToken: CancelToken = new CancelToken();\n\n    private _subscription: Subscription;\n\n    constructor(\n        private hubsService: HubsService,\n        private authService: AuthService,\n        private hubService: HubsService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n            this._subscription = this.authService.getRemoteAgentsObservable().subscribe(remoteAgents => {\n                if (remoteAgents) {\n                    this.remoteAgents = remoteAgents;\n                    this.refreshData();\n                }\n            });\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) {this._subscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    refreshData() {\n        let data = [];\n        this.remoteAgents.forEach(remoteAgent => {\n            let activeAgent = remoteAgent['activeAgents'] && remoteAgent['activeAgents'].length > 0 ? remoteAgent['activeAgents'][0] : null;\n\n            if (activeAgent) {\n                data.push({\n                    remoteAgentKey: remoteAgent.remoteAgentKey,\n                    connected: 'active',\n                    name: activeAgent ? activeAgent.name : ( remoteAgent ? remoteAgent.name : 'Unknown') ,\n                    user: activeAgent.user,\n                    dataPrivacyStatus: activeAgent.dataPrivacyStatus,\n                    isEncrypted: activeAgent.dataPrivacyStatus,\n                    ipAddress: activeAgent.ipAddress,\n                    restrictIp: remoteAgent.restrictIp,\n                    ipAddresses: remoteAgent.ipAddresses,\n                    lastLoginIpAddress: remoteAgent.lastLoginIpAddress,\n                    lastLoginDateTime: remoteAgent.lastLoginDateTime,\n                    remoteAgentId: remoteAgent.remoteAgentId,\n                    downloadUrls: activeAgent.downloadUrls,\n                    instanceId: activeAgent.instanceId,\n                    version: activeAgent.version,\n                    latestVersion: 'Latest(' + activeAgent.latestVersion + ')',\n                    versionTooltip: (activeAgent.upgradeAvailable ? 'Upgrade is available.' : 'Agent is up to date.'),\n                    versionClass: (activeAgent.upgradeAvailable ? 'dexih-error-text' : ''),\n                    activeAgent: activeAgent\n                });\n            } else {\n                data.push({\n                    remoteAgentKey: remoteAgent.remoteAgentKey,\n                    connected: 'not connected',\n                    name: remoteAgent.name,\n                    user: '',\n                    dataPrivacyStatus: '',\n                    isEncrypted: '',\n                    ipAddress: '',\n                    restrictIp: remoteAgent.restrictIp,\n                    ipAddresses: remoteAgent.ipAddresses,\n                    lastLoginIpAddress: remoteAgent.lastLoginIpAddress,\n                    lastLoginDateTime: remoteAgent.lastLoginDateTime,\n                    remoteAgentId: remoteAgent.remoteAgentId,\n                    downloadUrls: [],\n                    instanceId: null,\n                    version: '',\n                    latestVersion: '',\n                    versionTooltip: '',\n                    versionClass: '',\n                    activeAgent: null\n                });\n            }\n        });\n\n        this._tableData.next(data);\n    }\n\n    test(items: DexihActiveAgent[], cancelToken: CancelToken) {\n        items.forEach(item => {\n            let agent = <DexihActiveAgent>item;\n            agent.downloadUrls.forEach((downloadUrl, index) => {\n                let url = downloadUrl.url + '/ping';\n\n                this.authService.getFromExternal<any>(url, 'Testing remote agent connectivity...', cancelToken).then(result => {\n                    if (result && result.status === 'alive') {\n                        downloadUrl['testStatus'] = 'success';\n                    } else {\n                        downloadUrl['testStatus'] = 'error';\n                        downloadUrl['testMessage'] = 'Server returned invalid message.';\n                    }\n                }).catch(reason => {\n                    downloadUrl['testStatus'] = 'error';\n                    downloadUrl['testMessage'] = reason.message;\n                });\n            })\n        });\n    }\n\n    removeUserTokens(items) {\n        this.authService.removeUserTokens(items.map(c => c.remoteAgentKey))\n        .then( result => this.refreshData())\n        .catch(reason => this.hubsService.addHubClientErrorMessage(reason, 'Remove tokens'));\n    }\n\n    refreshUserToken(item) {\n        // this.authService.refreshRemoteAgentToken(item.remoteAgentKey).then( result => this.refreshData());\n        this.router.navigate(['token-renew', item.remoteAgentKey], {relativeTo: this.route});\n    }\n\n    edit(item) {\n        this.router.navigate(['edit', item.remoteAgentKey], {relativeTo: this.route});\n    }\n\n    restartAgents(items) {\n        let activeAgents = items.filter(c => c.activeAgent).map(c => c.activeAgent);\n\n        if ( activeAgents.length === 0) {\n            this.hubService.addHubErrorMessage('No active agents were selected.')\n            return;\n        }\n\n        activeAgents.forEach(activeAgent => {\n            this.hubsService.restartAgent(activeAgent, false, this.cancelToken);\n        });\n    }\n\n    refresh() {\n        this.authService.pingRemoteAgents();\n    }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubsService } from '../hubs.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject} from 'rxjs';\nimport { AuthService } from '../../+auth/auth.service';\nimport { DexihHubAuth } from '../../+auth/auth.models';\nimport { HubService } from '../../+hub';\n\n@Component({\n  selector: 'help',\n  templateUrl: './help.component.html',\n  styles: []\n})\nexport class HelpComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n    private _hubCacheSubscription: Subscription;\n\n    public path: string;\n    public hubKey: number;\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this._subscription = this.route.queryParams.subscribe(params => {\n            let path = params['path'];\n            if (path) {\n                this.path = '/assets/help/' + path;\n            } else {\n                this.path = '/assets/help/intro/getting_started.md'\n            }\n        });\n\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n            if (cache && cache.hub) {\n                this.hubKey = cache.hub.hubKey;\n            } else {\n                this.hubKey = null;\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    linkClick(link: string) {\n        this.router.navigate([], { relativeTo: this.route, queryParams: {'path': link} });\n    }\n\n}\n","<div class=\"container-fluid\">\n\t<dexih-help title=\"Help\" [path]=\"path\" [display]=\"true\" [hubKey]=\"hubKey\" (linkClick)=\"linkClick($event)\">\n\t\t\n\t</dexih-help>\n</div>\n","<div class=\"container\">\n\t<dexih-widget title=\"Download Agent\" iconClass=\"fa fa-lg fa-fw fa-download\" [showCloseButton]=\"true\"\n\t\t(close)=\"cancel()\" [padding]=\"true\">\n\t\t<ng-template #header>\n\t\t\t<dexih-button-download class=\"mr-1\" [busy]=\"downloading\" (click)=\"!downloading && download()\"\n\t\t\t\ttext=\"Download\"></dexih-button-download>\n\t\t\t<dexih-button iconClass=\"fa fa-wrench\" class=\"mr-1\" [busy]=\"downloading\"\n\t\t\t\t(click)=\"!downloading && downloadRemoteSettings()\" text=\"Settings File\"></dexih-button>\n\t\t\t<dexih-button-cancel (click)=\"!downloading && cancel()\"></dexih-button-cancel>\n\t\t</ng-template>\n\n\t\t<form *ngIf=\"formsService.currentForm\" [formGroup]=\"formsService.currentForm\">\n\t\t\t<fieldset>\n\t\t\t\t<section>\n\t\t\t\t\t<form-input label=\"Remote Agent Name\" formControlName=\"name\" placeholder=\"Enter the name.\"\n\t\t\t\t\t\ticonClass=\"fa fa-list\" [errors]=\"formsService.formErrors.name\">\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-select label=\"Operating System\" [(ngModel)]=\"environment\"\n\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" [items]=\"eEnvironmentItems\" itemKey=\"key\" itemName=\"name\"\n\t\t\t\t\t\t[enableFilter]=\"false\" note='The operating system that remote agent will be executed on.'>\n\t\t\t\t\t</form-select>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-input label=\"Encryption Key\" formControlName=\"encryptionKey\"\n\t\t\t\t\t\tplaceholder=\"Encryption key (blank will auto-generate)\" [autocapitalize]=\"on\" iconClass=\"fa fa-key\"\n\t\t\t\t\t\t[errors]=\"formsService.formErrors.encryptionKey\"\n\t\t\t\t\t\tnote=\"Encryption key is used to encrypt secure fields and connection passwords.  Note: this key is not retained by the integration hub, and if lost encrypted data can not be restored.\">\n\t\t\t\t\t\t( <a href=\"javascript:void(0)\" *ngIf=\"refreshingEncryptionKey == false\"\n\t\t\t\t\t\t\t(click)=\"generateEncryptionKey()\"> <i class=\"fa fa-refresh\"></i> Generate Random Key </a>\n\t\t\t\t\t\t<span *ngIf=\"refreshingEncryptionKey == true\"> <i class=\"fa fa-spin fa-refresh\"></i>\n\t\t\t\t\t\t\tRefreshing... please wait </span>\n\t\t\t\t\t\t)\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Auto-login using current user.\" [(ngModel)]=\"embedUserName\"\n\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Auto-upgrade when new versions of the remote agent become available.\"\n\t\t\t\t\t\t\tformControlName=\"autoUpgrade\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Allow beta and pre-releases.\" formControlName=\"preRelease\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Allow data and files to be uploaded to the remote agent.\"\n\t\t\t\t\t\t\tformControlName=\"allowUpload\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox\n\t\t\t\t\t\t\tlabel=\"Allow data and files to be downloaded (including data previews) from the remote agent.\"\n\t\t\t\t\t\t\tformControlName=\"allowDownload\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-select label=\"Logging Level\" [(ngModel)]=\"logLevel\" [ngModelOptions]=\"{standalone: true}\"\n\t\t\t\t\t\t[items]=\"logLevelItems\" itemKey=\"key\" itemName=\"name\" [enableFilter]=\"false\"\n\t\t\t\t\t\tnote='The level of detail to be included in the diagnostic logs.'>\n\t\t\t\t\t</form-select>\n\t\t\t\t</section>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Local Upload/Download Port\" formControlName=\"downloadPort\"\n\t\t\t\t\t\t\tplaceholder=\"Enter the upload/download port\"\n\t\t\t\t\t\t\tnote='The local port for the remote agent to use for upload/download operations.'>\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"External Upload/Download Url\" formControlName=\"externalDownloadUrl\"\n\t\t\t\t\t\t\tnote='The url which can be used to access the upload/download operations on the remote agent.  e.g. https://10.10.10.10:33944.'>\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Include plugin for Oracle databases (~4MB download)\" formControlName=\"oracle\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Include plugin for DB2 databases (~30MB download)\" formControlName=\"dB2\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Include plugin for Mongo databases  (~4MB download)\" formControlName=\"mongo\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Include plugin for Excel files (~3MB download)\" formControlName=\"excel\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Include plugin for Machine Learning Functions (~32-40MB download)\" formControlName=\"mLNet\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Allow data access through the Local Area Network (LAN).\"\n\t\t\t\t\t\t\tformControlName=\"allowLanAccess\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Allow data access through the Internet.\"\n\t\t\t\t\t\t\tformControlName=\"allowExternalAccess\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Allow data access through an internet based Proxy Server.\"\n\t\t\t\t\t\t\tformControlName=\"allowProxy\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Enforce Https (SSL encrypted connections).\"\n\t\t\t\t\t\t\tformControlName=\"enforceHttps\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Automatically attempt to create an SSL certificate (used for encryption).\"\n\t\t\t\t\t\t\tformControlName=\"autoGenerateCertificate\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Allow files to be managed on local file system.\"\n\t\t\t\t\t\t\tformControlName=\"allowLocalFiles\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox *ngIf=\"formsService.currentForm.controls.allowLocalFiles.value\"\n\t\t\t\t\t\t\tlabel=\"Allow all remote agent paths to be available.\" formControlName=\"allowAllPaths\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<section\n\t\t\t\t\t*ngIf=\"formsService.currentForm.controls.allowLocalFiles.value && !formsService.currentForm.controls.allowAllPaths.value\">\n\t\t\t\t\t<form-tags label=\"Allowed root paths for local file management.\" formControlName=\"allowedPaths\"\n\t\t\t\t\t\ticonClass=\"fa fa-list\" [errors]=\"formsService.formErrors.allowedPaths\"\n\t\t\t\t\t\tnote=\"The root directories which can be accessed when managing flat files.   All directories below the specified root directories will be available.\">\n\t\t\t\t\t</form-tags>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-checkbox label=\"Allow all hubs to be available.\" formControlName=\"allowAllHubs\">\n\t\t\t\t\t</form-checkbox>\n\t\t\t\t</section>\n\n\t\t\t\t<section *ngIf=\"!formsService.currentForm.controls.allowAllHubs.value\">\n\t\t\t\t\t<form-tags-dropdown label=\"Hubs allowed by the remote agent.\" formControlName=\"allowedHubs\"\n\t\t\t\t\t\t[items]=\"hubs\" itemKey=\"hubKey\" itemName=\"name\" iconClass=\"fa fa-list\"\n\t\t\t\t\t\t[errors]=\"formsService.formErrors.allowedHubs\" [returnKeys]=\"true\">\n\t\t\t\t\t</form-tags-dropdown>\n\t\t\t\t</section>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Alerts Smtp Server\" formControlName=\"smtpServer\"\n\t\t\t\t\t\t\tplaceholder=\"Alerts Smtp Server\"\n\t\t\t\t\t\t\tnote='Enter the Smtp Server name to use to send alert emails.'>\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input type=\"number\" label=\"Smtp Port Number\" formControlName=\"smtpPort\"\n\t\t\t\t\t\t\tnote='The port number to for tme Smtp Server'>\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Alerts Smtp UserName\" formControlName=\"smtpUserName\"\n\t\t\t\t\t\t\tplaceholder=\"Alerts Smtp Server\"\n\t\t\t\t\t\t\tnote='Enter the Smtp user name to use to send alert emails.'>\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Smtp Password\" formControlName=\"smtpPassword\"\n\t\t\t\t\t\t\tnote='The Smtp password'>\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Alerts From Email\"\n\t\t\t\t\t\t\tformControlName=\"fromEmail\" note='Email address listed \"From\" when sending alerts.'>\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox\n\t\t\t\t\t\t\tlabel=\"Smpt Server Requires SSL encryption.\" formControlName=\"enableSsl\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Send alert on startup and shutdown.\"\n\t\t\t\t\t\t\tformControlName=\"alertOnShutdown\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox\n\t\t\t\t\t\t\tlabel=\"Send alert on critical remote agent errors.\" formControlName=\"alertOnCritical\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<section>\n\t\t\t\t<form-tags label=\"Email addresses to send the bcc alerts to.\" formControlName=\"adminEmails\"\n\t\t\t\t\ticonClass=\"fa fa-email\" \n\t\t\t\t\tnote=\"A set of emails that any alerts will be bcc'd to.\">\n\t\t\t\t</form-tags>\n\t\t\t</section>\n\t\t\t\t\n\t\t\t</fieldset>\n\t\t</form>\n\t</dexih-widget>\n\n\t<dexih-help class=\"m-3\" title=\"Remote Agent Installation\" path=\"/assets/help/intro/remote_agent.md\"></dexih-help>\n\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { DexihHubAuth } from '../../../+auth/auth.models';\nimport { HubsService } from '../../hubs.service';\nimport { FormsService } from '../../../shared/forms/forms.service';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { logLevel, eEnvironment, RemoteAgentSettings, logLevelItems, RemoteAgentSettingsSubset, eEnvironmentItems } from '../../../shared/shared.models';\n\n@Component({\n  selector: 'dexih-remoteAgent-download-form',\n  templateUrl: './remoteAgent-download.component.html',\n  providers: [FormsService]\n})\nexport class RemoteAgentDownloadComponent implements OnInit, OnDestroy {\n  public pageTitle: string;\n\n  public downloading = false;\n  public refreshingEncryptionKey = false;\n  public refreshingUserToken = false;\n\n  public logLevelItems = logLevelItems;\n  public eEnvironmentItems = eEnvironmentItems.filter(c => c.key > 0);\n\n  public embedUserName = true;\n  public logLevel: logLevel = logLevel.Information;\n  public environment: eEnvironment = eEnvironment.Windows;\n  public hubs: DexihHubAuth[]\n\n  constructor(\n    private hubsService: HubsService,\n    private authService: AuthService,\n    public formsService: FormsService,\n    private fb: FormBuilder,\n    ) {\n   }\n\n  ngOnInit() {\n        this.hubs = this.authService.getHubs()\n        let remoteApplicationSettings = new RemoteAgentSettingsSubset();\n        this.remoteAgentSettings(remoteApplicationSettings);\n        this.logLevel = logLevel.Information;\n  }\n\n  ngOnDestroy() {\n  }\n\n  cancel() {\n    this.authService.navigateUp();\n  }\n\n  download() {\n    if (this.formsService.currentForm.valid) {\n      this.downloading = true;\n      this.hubsService.downloadRemoteAgent(this.embedUserName, this.environment, this.logLevel,\n          this.formsService.currentForm.value).then(result => {\n          this.downloading = false;\n          this.hubsService.addHubSuccessMessage('Download successful.');\n      }).catch(reason => {\n          this.downloading = false;\n          this.hubsService.addHubMessage(reason);\n      });\n    } else {\n      this.formsService.showErrors();\n    }\n  }\n\n  downloadRemoteSettings() {\n    if (this.formsService.currentForm.valid) {\n      this.downloading = true;\n      this.hubsService.downloadRemoteSettings(this.embedUserName, this.environment, this.logLevel,\n          this.formsService.currentForm.value).then(result => {\n          this.downloading = false;\n          this.hubsService.addHubSuccessMessage('Download successful.');\n      }).catch(reason => {\n          this.downloading = false;\n          // this.hubsService.addHubErrorMessage(reason);\n      });\n    } else {\n      this.formsService.showErrors();\n    }\n  }\n\n  generateEncryptionKey() {\n    this.refreshingEncryptionKey = true;\n\n    this.authService.getRandomEncryptionKey().then(result => {\n      this.formsService.currentForm.controls.encryptionKey.setValue(result);\n      this.refreshingEncryptionKey = false;\n    }).catch(reason => {\n      this.hubsService.addHubErrorMessage(reason);\n      this.refreshingEncryptionKey = false;\n    });\n  }\n\n  generateUserToken() {\n    this.refreshingUserToken = true;\n\n    this.authService.getUserToken().then(result => {\n      this.formsService.currentForm.controls.userToken.setValue(result.userToken);\n      this.formsService.currentForm.controls.remoteAgentId.setValue(result.remoteAgentId);\n      this.refreshingUserToken = false;\n    }).catch(reason => {\n      this.hubsService.addHubErrorMessage(reason);\n      this.refreshingUserToken = false;\n    });\n  }\n\n  public remoteAgentSettings(remoteAgent: RemoteAgentSettingsSubset) {\n    const remoteAgentForm = this.fb.group({\n      'name': [remoteAgent.name, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n      ]],\n      'encryptionKey': [remoteAgent.encryptionKey, [\n        Validators.required,\n      ]]\n    }\n    );\n\n    this.formsService.addMissing(remoteAgent, remoteAgentForm, new RemoteAgentSettingsSubset());\n    this.formsService.clearFormSubscriptions();\n    this.formsService.startForm(remoteAgentForm);\n  }\n\n\n}\n","<dexih-message #DexihMessage></dexih-message>\n\n<div class=\"container\">\n    <dexih-widget \n\t\ttitle=\"Edit Agent\" \n        iconClass=\"fa fa-lg fa-fw fa-database\" \n        [padding]=\"true\"\n        [showCloseButton]=\"true\"\n        (close)=\"close()\"\n    >\n        <ng-template #header>\n            <dexih-button-save class=\"mr-1\" (click)=\"save()\"></dexih-button-save>\n            <dexih-button-cancel (click)=\"close()\"></dexih-button-cancel>\n        </ng-template>\n\n        <form *ngIf=\"formsService.currentForm\"  [formGroup]=\"formsService.currentForm\">\n            <fieldset>\n                    <section >\n                        <form-input label=\"Agent name\" note=\"This can only be changed on the remote agent settings file.\" formControlName=\"name\" iconClass=\"fa fa-comment\"></form-input>\n                    </section>\n                    <section >\n                        <form-input label=\"Remote Agent Id\" note=\"This can only be changed on the remote agent settings file.\" formControlName=\"remoteAgentId\" iconClass=\"fa fa-comment\"></form-input>\n                    </section>\n    \n                <section>\n\t\t\t\t\t<form-checkbox label=\"Allow data sharing through the agent via other hubs or through the API.\" formControlName=\"allowExternalConnect\" >\n\t\t\t\t\t</form-checkbox>\n                </section>\n\n                <section>\n\t\t\t\t\t<form-checkbox label=\"Restrict remote agent ip addresses.\" formControlName=\"restrictIp\" >\n\t\t\t\t\t</form-checkbox>\n                </section>\n\n                <section *ngIf=\"formsService.currentForm.controls.restrictIp.value\">\n                    <form-tags label=\"Restricted IP Addresses\" formControlName=\"ipAddresses\" placeholder=\"Enter the IP Address.\"\n                        note=\"List of Ip Addresses.  The remote agent only be authorized for this hub if originating from one of the listed ip addresses.\">\n                        <span *ngIf=\"ipAddress\">\n                        ( <a href=\"javascript:void(0)\" (click)=\"addCurrentIp()\"> <i class=\"fa fa-refresh\"></i> Add Current ({{ipAddress}}) </a>)\n                    </span>\n\t\t\t\t    </form-tags>\n                </section>\n            </fieldset>\n        </form>\n\n    </dexih-widget>\n</div>\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { FormsService } from '../../../shared/forms/forms.service';\nimport { HubsService } from '../../hubs.service';\nimport { FormBuilder } from '@angular/forms';\nimport { DexihRemoteAgent } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'remote-agents',\n    templateUrl: './remoteAgent-edit.component.html',\n    providers: [FormsService]\n})\nexport class RemoteAgentEditComponent implements OnInit, OnDestroy {\n    @Input() public hubKey: number;\n\n    private _subscription: Subscription;\n\n    private remoteAgentKey: number;\n    private remoteAgentHubKey: number;\n\n    remoteAgents: DexihRemoteAgent[];\n\n    ipAddress: string;\n\n    constructor(\n        private authService: AuthService,\n        private hubsService: HubsService,\n        public formsService: FormsService,\n        private fb: FormBuilder,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.authService.getRemoteAgentsObservable(),\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.remoteAgents = result[2];\n\n                if (!this.remoteAgents) {\n                    return;\n                }\n\n                this.remoteAgentKey = +params['remoteAgentKey'];\n\n                this.hubsService.remoteAgents().then(remoteAgents => {\n                    let remoteAgent = this.remoteAgents.find(c => c.remoteAgentKey === this.remoteAgentKey);\n\n                    const remoteAgentForm = this.fb.group({});\n                    this.formsService.addMissing(remoteAgent, remoteAgentForm, new DexihRemoteAgent());\n                    remoteAgentForm.controls.name.disable();\n                    remoteAgentForm.controls.remoteAgentId.disable();\n                    this.formsService.clearFormSubscriptions();\n                    this.formsService.startForm(remoteAgentForm);\n                });\n            });\n        } catch (e) {\n            this.hubsService.addHubClientErrorMessage(e, 'Remote Agent Edit');\n        }\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    save() {\n        let form = this.formsService.currentForm;\n        let remoteAgent = form.value;\n        remoteAgent.name = form.controls.name.value;\n        remoteAgent.remoteAgentId = form.controls.remoteAgentId.value;\n        this.authService.saveRemoteAgent(this.formsService.currentForm.value).then(result => {\n            this.hubsService.addHubSuccessMessage('The remote agent was updated successfully.');\n            this.authService.pingRemoteAgents();\n        });\n    }\n\n    addCurrentIp() {\n        if (this.ipAddress) {\n            let form = this.formsService.currentForm;\n            let ipAddressesControl = form.controls.ipAddresses;\n            let ipAddresses = <string[]> ipAddressesControl.value;\n\n            if (ipAddresses.findIndex(c => c === this.ipAddress) < 0) {\n                ipAddresses.push(this.ipAddress);\n                ipAddressesControl.setValue(ipAddresses);\n            }\n        }\n\n    }\n}\n","<dexih-message #DexihMessage></dexih-message>\n\n<div *ngIf=\"remoteToken\" class=\"container\">\n    <dexih-widget \n\t\ttitle=\"New Agent Token\" \n        iconClass=\"fa fa-lg fa-fw fa-wifi\" \n        [padding]=\"true\"\n        [showCloseButton]=\"true\"\n        (close)=\"close()\"\n    >\n\n\n<ng-template #subHeader>\n    <label *ngIf=\"action == 'New'\" class=\"label\">A new remote agent token has been generated.  </label>\n    <label *ngIf=\"action == 'ReNew'\" class=\"label\">The token for this user/remote id has been renewed.  </label>\n    <div class=\"alert alert-info\">\n        Ensure this token is kept safe and secure.  It cannot be viewed again.  If it is lost or compromised, a new token should be created.\n    </div>\n\n</ng-template>\n\n        <section >\n            <form-textarea [showCopy]=\"true\" [showPreview]=\"false\" [hideToggle]=\"true\" [disabled]=\"true\" rows=\"1\" label=\"User\" [(ngModel)]=\"remoteToken.user\"></form-textarea>\n        </section>\n\n        <section >\n            <form-textarea [showCopy]=\"true\" [showPreview]=\"false\" [hideToggle]=\"true\" [disabled]=\"true\" rows=\"1\" label=\"RemoteAgentId\" [(ngModel)]=\"remoteToken.remoteAgentId\"></form-textarea>\n        </section>\n\n        <section >\n            <form-textarea [showCopy]=\"true\" [showPreview]=\"false\" [hideToggle]=\"true\" [disabled]=\"true\" rows=\"4\" label=\"UserToken\" [(ngModel)]=\"remoteToken.userToken\"></form-textarea>\n        </section>\n\n        <section >\n            <form-textarea [showCopy]=\"true\" [showPreview]=\"false\" [hideToggle]=\"true\" [disabled]=\"true\" rows=\"4\" label=\"AppSettings Content\" [(ngModel)]=\"appSettings\"\n            note='Copy this section over the existing items in the AppSettings section of the appsettings.json configuration file for your remote agent.'></form-textarea>\n        </section>\n        \n\n    </dexih-widget>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { RemoteToken } from '../../../+auth/auth.models';\nimport { FormsService } from '../../../shared/forms/forms.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { HubsService } from '../../hubs.service';\n\n@Component({\n    selector: 'remote-agent-token',\n    templateUrl: './remote-agent-token.component.html',\n    providers: [FormsService]\n})\nexport class RemoteAgentTokenComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n\n    public remoteToken: RemoteToken;\n    public appSettings: string;\n    public action: string;\n\n    constructor(\n        private route: ActivatedRoute,\n        private hubsService: HubsService,\n        private authService: AuthService) {\n    }\n\n    ngOnInit() {\n        this._subscription = combineLatest(\n            this.route.data,\n            this.route.params,\n          ).subscribe(async result => {\n            let data = result[0];\n            let params = result[1];\n            this.action = data.action;\n\n            let promise: Promise<RemoteToken>;\n\n            if (data.action === 'New') {\n                promise = this.authService.createRemoteAgent();\n            } else {\n                const remoteAgentKey = +params['remoteAgentKey'];\n                promise = this.authService.refreshRemoteAgentToken(remoteAgentKey);\n            }\n\n            promise.then(remoteToken => {\n                this.remoteToken = remoteToken;\n                this.updateAppSettings();\n            }).catch(reason => {\n                this.hubsService.addHubMessage(reason);\n                this.authService.navigateUp();\n            });\n\n          });\n    }\n\n    updateAppSettings() {\n        this.appSettings = `\"RemoteAgentId\": \"${this.remoteToken.remoteAgentId}\",\n\"User\": \"${this.remoteToken.user}\",\n\"UserToken\": \"${this.remoteToken.userToken}\",\n`\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n      }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n}\n","<div class=\"container\">\n\t<dexih-message #DexihMessage></dexih-message>\n\n\t<dexih-widget *ngIf=\"mainForm\" iconClass=\"fa fa-ticket\" title=\"Support\">\n\t\t<support-options [isExpanded]=\"false\"></support-options>\n\n\t\t<dexih-widget-section \n\t\t\ttitle=\"Raise Issue\" \n\t\t\t[subTitle]=\"subTitle\"\n\t\t\t[showExpandButton]=\"true\"\n\t\t\ticonClass=\"fa fa-lg fa-fw fa-comments\" [padding]=\"true\">\n\t\t\t<ng-template #header>\n\t\t\t\t<dexih-button-save class=\"mr-1\" (click)=\"!saving && !mainForm.pristine && save()\"\n\t\t\t\t\t[disabled]=\"saving || mainForm.pristine\" [busy]=\"saving\"></dexih-button-save>\n\t\t\t\t<dexih-button-cancel (click)=\"!saving && cancel()\" [disabled]=\"saving\"></dexih-button-cancel>\n\t\t\t</ng-template>\n\n\t\t\t<form id=\"edit-form\" [formGroup]=\"mainForm\">\n\t\t\t\t<fieldset>\n\t\t\t\t\t\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<form-input label=\"Title\" formControlName=\"name\" placeholder=\"Title\" iconClass=\"fa fa-life-ring\"\n\t\t\t\t\t\t\t[errors]=\"formErrors.name\">\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t<form-select label=\"Type\" formControlName=\"type\" iconClass=\"fa fa-life-ring\"\n\t\t\t\t\t\t\t\t[items]=\"eIssueTypeItems\" itemKey=\"key\" itemName=\"description\">\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t<form-select label=\"Severity\" formControlName=\"severity\" iconClass=\"fa fa-life-ring\"\n\t\t\t\t\t\t\t\t[items]=\"eIssueSeverityItems\" itemKey=\"key\" itemName=\"description\">\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t<form-select label=\"Category\" formControlName=\"category\" iconClass=\"fa fa-life-ring\"\n\t\t\t\t\t\t\t\t[items]=\"eIssueCategoryItems\" itemKey=\"key\" itemName=\"description\">\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t<form-select label=\"Status\" formControlName=\"issueStatus\" iconClass=\"fa fa-circle-notch\"\n\t\t\t\t\t\t\t\t[items]=\"eIssueStatusItems\" itemKey=\"key\" itemName=\"description\">\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<section >\n\t\t\t\t\t\t<form-checkbox c label=\"Is Private (will not be published to public github issue)\" formControlName=\"isPrivate\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<form-textarea label=\"Description\" formControlName=\"description\"\n\t\t\t\t\t\t\tplaceholder=\"Details of the issue of feature request\" rows=\"20\" [hideToggle]=\"isNew\">\n\t\t\t\t\t\t</form-textarea>\n\t\t\t\t\t</section>\n\n\t\t\t\t</fieldset>\n\t\t\t</form>\n\t\t</dexih-widget-section>\n\n\t\t<dexih-widget-section *ngIf=\"mainForm.controls.dexihIssueComments.controls.length > 0\"\n\t\t\ttitle=\"Commentary\" [showExpandButton]=\"true\" iconClass=\"fa fa-lg fa-fw fa-comments\" [padding]=\"true\">\n\n\t\t\t<form id=\"comment-form\" *ngFor=\"let comment of mainForm.controls.dexihIssueComments.controls\"\n\t\t\t\t[formGroup]=\"comment\">\n\t\t\t\t<fieldset>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<form-textarea label=\"{{comment.controls.userName.value}} - {{comment.controls.updateDate.value | calendar }}\" formControlName=\"comment\" placeholder=\"Comment\" [disabled]=\"true\"\n\t\t\t\t\t\t\ticonClass=\"fa fa-comment\">\n\t\t\t\t\t\t</form-textarea>\n\t\t\t\t\t</section>\n\t\t\t\t</fieldset>\n\t\t\t</form>\n\t\t</dexih-widget-section>\n\n\t\t<dexih-widget-section *ngIf=\"mainForm.controls.key.value > 0 && mainForm.controls.isPrivate.value\" title=\"Add new comment\" [showExpandButton]=\"true\"\n\t\t\ticonClass=\"fa fa-lg fa-fw fa-comments\" [padding]=\"true\">\n\t\t\t<ng-template #header>\n\t\t\t\t<dexih-button-save class=\"mr-1\" (click)=\"!saving && newComment && saveComment()\"\n\t\t\t\t\t[disabled]=\"saving || !newComment\" [busy]=\"saving\"></dexih-button-save>\n\t\t\t\t<dexih-button-cancel (click)=\"!saving && cancel()\" [disabled]=\"saving\"></dexih-button-cancel>\n\t\t\t</ng-template>\n\n\t\t\t<form>\n\t\t\t\t<fieldset>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<form-textarea [(ngModel)]=\"newComment\" [ngModelOptions]=\"{standalone: true}\"\n\t\t\t\t\t\t\tplaceholder=\"Enter a new comment\" iconClass=\"fa fa-comment\" rows=\"20\" [hideToggle]=\"true\">\n\t\t\t\t\t\t</form-textarea>\n\t\t\t\t\t</section>\n\t\t\t\t</fieldset>\n\t\t\t</form>\n\t\t</dexih-widget-section>\n\n\t\t<dexih-widget-section *ngIf=\"mainForm.controls.key.value > 0 && !mainForm.controls.isPrivate.value\" title=\"Add new comment\" [showExpandButton]=\"true\"\n\t\t\ticonClass=\"fa fa-lg fa-fw fa-comments\" [padding]=\"true\">\n\n\t\t\t<p>This is a public issue and is managed through the GitHub issue below.</p>\n\t\t\t<a class=\"btn btn-primary\" [href]=\"mainForm.controls.gitHubLink?.value\" target=\"_blank\" ><i class=\"fa fa-github\"></i>GitHub Issue</a>\n\t\t</dexih-widget-section>\n\t\t\n\t</dexih-widget>\n</div>","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { CancelToken } from '../../../+auth/auth.models';\nimport { DexihMessageComponent } from '../../../shared/ui/dexihMessage';\nimport { eSharedAccessItems, DexihIssue, eIssueTypeItems, eIssueSeverityItems, eIssueStatusItems, eIssueCategoryItems } from '../../../shared/shared.models';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n@Component({\n\n  selector: 'issue-edit-form',\n  templateUrl: './issue-edit.component.html'\n})\nexport class IssueEditComponent implements OnInit, OnDestroy {\n  @ViewChild('DexihMessage', { static: true }) public dexihMessage: DexihMessageComponent;\n\n  private _subscription: Subscription;\n  private _valueChangesSubscription: Subscription;\n\n  action: string;\n  pageTitle: string;\n\n  issue: DexihIssue;\n\n  eIssueTypeItems = eIssueTypeItems;\n  eIssueSeverityItems = eIssueSeverityItems;\n  eIssueStatusItems = eIssueStatusItems;\n  eIssueCategoryItems = eIssueCategoryItems;\n\n  SharedAccessItems = eSharedAccessItems.filter(c => c.key > 0);\n\n  generatingKey = false;\n  saving = false;\n  hasChanged = false;\n  showAllErrors = false;\n\n  disable = false;\n\n  mainForm: FormGroup;\n  newComment: string;\n  subTitle: string;\n\n  isNew = true;\n\n  formErrors = {\n    'name': '',\n    'description': '',\n  };\n\n  validationMessages = {\n    'name': {\n      'required': 'Name is required.',\n      'minlength': 'Name must be at least 4 characters long.',\n      'maxlength': 'Name cannot be more than 50 characters long.',\n      'duplicateHubName': 'Name cannot be the same as an existing hub name.'\n    },\n    'description': {\n      'required': 'Description is required.',\n    },\n  };\n\n  supportOptions = [\n    {name: 'Forums', icon: 'fa fa-smile-o', link: 'https://dexih.mn.co/feed', description: 'Use the community forums for questions and other integration hub discussion.'},\n    {name: 'Twitter', icon: 'fa fa-twitter', link: 'https://twitter.com/dataexperts', description: 'Send messages to our twitter for quick short queries and comments.'},\n    {name: 'YouTube', icon: 'fa fa-youtube', link: 'https://www.youtube.com/channel/UCUQQ_sVuFti-xYvKtfLJNkg', description: 'Refer to our youtube channel for video tutorials.'},\n    {name: 'Features / Issues', icon: 'fa fa-github', link: 'https://github.com/DataExperts/Dexih.App.UI', description: 'We are an open source platform.  Raise feature requests and bugs on our github pages.'}\n  ];\n\n  private cancelToken = new CancelToken();\n\n  constructor(\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private fb: FormBuilder\n  ) {\n  }\n\n  ngOnInit() {\n\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n      ).subscribe(result => {\n        let data = result[0];\n        let params = result[1];\n\n        this.action = data['action'];\n        this.pageTitle = data['pageTitle'];\n\n        if (this.action === 'new') {\n          this.issue = new DexihIssue();\n          this.buildForm();\n          this.isNew = true;\n          this.disable = false;\n        } else if (this.action === 'edit') {\n          let key = + params['issueKey'];\n          this.isNew = false;\n          this.authService.getIssue(key, this.cancelToken).then(issue => {\n            this.issue = issue;\n            this.subTitle = 'Updated by ' + issue.userName + ' - ' + moment(issue.updateDate).calendar();\n            this.buildForm();\n\n            if (this.authService.getUser().isAdmin) {\n              this.disable = false;\n            } else {\n              this.disable = true;\n            }\n          });\n        }\n      });\n    } catch (e) {\n      this.dexihMessage.addErrorMessage(e.message);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._valueChangesSubscription) { this._valueChangesSubscription.unsubscribe(); }\n    this.cancelToken.cancel();\n  }\n\n  save() {\n    this.dexihMessage.reset();\n    this.saving = true;\n    Object.assign(this.issue, this.mainForm.value);\n    this.authService.saveIssue(this.issue)\n      .then(() => {\n        this.saving = false;\n        this.dexihMessage.addSuccessMessage('Issue created successfully.');\n        this.cancel();\n      }).catch(reason => {\n        this.dexihMessage.addMessage(reason);\n        this.saving = false;\n      });\n  }\n\n  saveComment() {\n    this.dexihMessage.reset();\n    this.saving = true;\n    this.authService.addIssueComment(this.issue.key, this.newComment)\n      .then(() => {\n        this.saving = false;\n        this.dexihMessage.addSuccessMessage('Issue comment added successfully.');\n        this.cancel();\n      }).catch(reason => {\n        this.dexihMessage.addMessage(reason);\n        this.saving = false;\n      });\n  }\n\n  cancel() {\n    this.authService.navigateUp();\n  }\n\n  buildForm(): void {\n    this.mainForm = this.fb.group({\n      'key': [{value: this.issue.key, disabled: this.disable}, []],\n      'name': [{value: this.issue.name, disabled: this.disable}, [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(50),\n      ]\n      ],\n      'description': [{value: this.issue.description, disabled: this.disable}, [\n        Validators.required,\n      ] ],\n      'type': [{value: this.issue.type, disabled: this.disable}, []],\n      'category': [{value: this.issue.category, disabled: this.disable}, []],\n      'severity': [{value: this.issue.severity, disabled: this.disable}, []],\n      'isPrivate': [{value: this.issue.isPrivate, disabled: this.disable}, []],\n      'updateDate': [{value: this.issue.updateDate, disabled: true}, []],\n      'userName': [{value: this.issue.userName, disabled: true}, []],\n      'issueStatus': [{value: this.issue.issueStatus, disabled: false}, []],\n      'gitHubLink': [{value: this.issue.gitHubLink, disabled: false}, []],\n      'dexihIssueComments': this.fb.array(this.issue.dexihIssueComments.map(c => {\n        return this.fb.group({\n          'comment': {value: c.comment, disabled: this.disable},\n          'userName': [{value: c.userName, disabled: true}, []],\n          'updateDate': {value: c.updateDate, disabled: true}\n        });\n      }))\n    });\n\n    if (this._valueChangesSubscription) { this._valueChangesSubscription.unsubscribe(); }\n    this._valueChangesSubscription = this.mainForm.valueChanges.subscribe(() => this.onValueChanged());\n    this.onValueChanged(); // (re)set validation messages now\n\n    this.hasChanged = false;\n  }\n\n  onValueChanged() {\n    if (!this.mainForm) { return; }\n    const form = this.mainForm;\n\n    this.hasChanged = true;\n\n    for (const field of Object.keys(this.formErrors)) {\n      // clear previous error message (if any)\n      this.formErrors[field] = '';\n      const control = form.get(field);\n\n      if (control && (control.dirty || this.showAllErrors) && !control.valid) {\n        const messages = this.validationMessages[field];\n        for (const key of Object.keys(control.errors)) {\n          this.formErrors[field] += messages[key] + ' ';\n        }\n      }\n    }\n  }\n}\n","<div class=\"container-fluid\">\n    <dexih-widget title=\"Raised Issues\" \n        iconClass=\"fa fa-lg fa-fw fa-life-saver\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n    >\n<support-options [isExpanded]=\"true\"></support-options>\n\n\n<dexih-widget-section title=\"Current Support Issues\" [padding]=\"false\">\n\t\t<dexih-table \n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[dataObservable]=\"tableData\"\n\t\t\t(rowClick)=\"edit($event)\"\n\t\t\t>\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n\t\t\t\t\t<dexih-button-edit class=\"mr-1\" [routerLink]=\"['edit', item.key]\" queryParamsHandling preserveFragment class=\"mr-1\"></dexih-button-edit>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t<dexih-button-delete (click)=\"delete(items)\"></dexih-button-delete>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<dexih-button-new class=\"mr-1\" [routerLink]=\"['new']\"></dexih-button-new>\n\t\t\t\t</ng-template>\n\t\t</dexih-table>\n\t</dexih-widget-section>\n    </dexih-widget>\n</div>\n\n","import { Routes, RouterModule } from '@angular/router';\nimport { HubsComponent } from './hubs.component';\nimport { HubIndexComponent } from './hub-index/hub-index.component';\nimport { HubEditComponent } from './hub-edit/hub-edit.component';\nimport { HubsSummaryComponent} from './hubs-summary/hubs-summary.component';\nimport { ManageComponent } from './manage/manage.component';\nimport { TasksIndexComponent } from './tasks/tasks-index';\nimport { TaskViewComponent } from './tasks/task-view';\nimport { NotificationsIndexComponent } from './notifications/notification-index';\nimport { NotificationViewComponent } from './notifications/notification-view';\nimport { SharedDataComponent, PreviewComponent, PreviewDashboardComponent} from '../shared/ui/sharedData';\nimport { RemoteAgentsComponent} from './remoteAgents/remote-agents/remote-agents.component';\nimport { HelpComponent } from './help';\nimport { RemoteAgentDownloadComponent } from './remoteAgents/remoteAgent-download';\nimport { RemoteAgentEditComponent } from './remoteAgents/remoteAgent-edit';\nimport { RemoteAgentTokenComponent } from './remoteAgents/remote-agent-token/remote-agent-token.component';\nimport { IssueEditComponent, IssueIndexComponent } from './support'\n\nconst hubsView: Routes = [\n    { path: '', component: HubIndexComponent, data: { pageTitle: 'Hubs View' } },\n    { path: 'hub-edit/:hubKey', component: HubEditComponent, data: { action: 'Edit', pageTitle: 'Edit Hub' } },\n    { path: 'hub-new', component: HubEditComponent, data: { action: 'New', pageTitle: 'New Hub' } },\n];\n\n// create a set of routes available from the \"hubs\" section.\nconst baseRoutes: Routes = [\n    { path: 'manage', component: ManageComponent, data: { pageTitle: 'Manage' } },\n    { path: 'sharedData', data: { pageTitle: 'Shared Data' }, children: [\n        { path: '', component: SharedDataComponent, data: { pageTitle: 'Shared Data' } },\n        { path: 'preview/:hubKey/:objectType/:objectKey', component: PreviewComponent, data: { pageTitle: 'Preview' } },\n        { path: 'previewDashboard/:hubKey/:dashboardKey', component: PreviewDashboardComponent, data: { pageTitle: 'Preview Dashboard' } },\n    ] },\n    { path: 'tasks', data: { pageTitle: 'Tasks' }, children: [\n        { path: '', component: TasksIndexComponent, data: { pageTitle: 'Tasks' } },\n        { path: 'view/:reference', component: TaskViewComponent, data: { pageTitle: 'Task' } },\n    ] },\n    { path: 'notifications', data: { pageTitle: 'Notifications' }, children: [\n        { path: '', component: NotificationsIndexComponent, data: { pageTitle: 'Notifications' } },\n        { path: 'view/:reference', component: NotificationViewComponent, data: { pageTitle: 'Notification' } },\n    ] },\n    { path: 'support', data: { pageTitle: 'Issues' }, children: [\n        { path: '', component: IssueIndexComponent, data: { pageTitle: 'Issues' } },\n        { path: 'new', component: IssueEditComponent, data: { action: 'new', pageTitle: 'Create' } },\n        { path: 'edit/:issueKey', component: IssueEditComponent, data: { action: 'edit', pageTitle: 'Edit' } },\n    ] },\n    { path: 'agents', data: { pageTitle: 'Remote Agents' }, children: [\n        { path: '', component: RemoteAgentsComponent, data: { pageTitle: 'Remote Agents' } },\n        { path: 'edit/:remoteAgentKey', component: RemoteAgentEditComponent, data: { pageTitle: 'Remote Edit' } },\n        { path: 'download', component: RemoteAgentDownloadComponent, data: {pageTitle: 'Download Agent'}},\n        { path: 'token-new', component: RemoteAgentTokenComponent, data: {action: 'New', pageTitle: 'New Token'}},\n        { path: 'token-renew/:remoteAgentKey', component: RemoteAgentTokenComponent, data: {action: 'Renew', pageTitle: 'Renew Token'}}\n    ] } ,\n    { path: 'help', component: HelpComponent, data: { pageTitle: 'Help' } },\n    { path: '', children: hubsView}\n];\n\n// insert the \"hubs\" routes once for the base, and once under the summary section to ensure the\n// breadcrumbs are accurate.\nexport const routes: Routes = [\n    {\n        path: '', component: HubsComponent,\n        children: [\n            { path: '', redirectTo: 'index' },\n            { path: 'index', data: { pageTitle: 'Hubs' }, children : [\n                { path: '', component: HubsSummaryComponent, data: { pageTitle: 'Hubs Summary' } },\n                { path: 'hubs-view', data: { pageTitle: 'Hubs View' }, children: hubsView },\n                { path: '', children: baseRoutes}\n            ] },\n            { path: '', children: baseRoutes}\n        ]\n    }\n];\n\nexport const Routing = RouterModule.forChild(routes);\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubsService } from '../../hubs.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable, BehaviorSubject, Subscription} from 'rxjs';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { DexihHubAuth, CancelToken } from '../../../+auth/auth.models';\nimport { eIssueType, eIssueCategory, eIssueSeverity, DexihIssue, eIssueStatus } from '../../../shared/shared.models';\n\n@Component({\n  selector: 'issue',\n  templateUrl: './issue-index.component.html',\n  styles: []\n})\nexport class IssueIndexComponent implements OnInit, OnDestroy {\n\n    subscription: Subscription;\n\n    columns = [\n        { name: 'name', title: 'Name', format: ''},\n        { name: 'description', title: 'Description', format: 'Md'},\n        { name: 'type', title: 'Type', format: 'Enum', enum: eIssueType},\n        { name: 'category', title: 'Category', format: 'Enum', enum: eIssueCategory},\n        { name: 'severity', title: 'Severity', format: 'Enum', enum: eIssueSeverity},\n        { name: 'issueStatus', title: 'Status', format: 'Enum', enum: eIssueStatus},\n        { name: 'gitHubLink', title: 'Github Issue', format: 'Md'},\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar'},\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    private cancelToken = new CancelToken();\n\n    constructor(\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.authService.getIssues(this.cancelToken).then(i => {\n            const issues = i.map( issue => {\n                return {\n                    key: issue.key,\n                    name: issue.name,\n                    description: issue.description,\n                    type: issue.type,\n                    category: issue.category,\n                    severity: issue.severity,\n                    issueStatus: issue.issueStatus,\n                    gitHubLink: issue.gitHubLink ? `[github](${issue.gitHubLink})` : null,\n                    updateDate: issue.updateDate,\n\n                }\n            });\n            this._tableData.next(issues);\n        });\n    }\n\n    ngOnDestroy() {\n       this.cancelToken.cancel();\n    }\n\n    edit(issue: DexihIssue) {\n        this.router.navigate(['edit', issue.key], {relativeTo: this.route});\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { Routing } from './hubs.routing';\nimport { SharedModule } from '../shared/shared.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { HubsService } from './hubs.service';\nimport { HubsComponent } from './hubs.component';\nimport { HubIndexComponent } from './hub-index/hub-index.component';\nimport { HubEditComponent } from './hub-edit/hub-edit.component';\nimport { HubsSummaryComponent} from './hubs-summary/hubs-summary.component';\nimport { ManageComponent } from './manage/manage.component';\nimport { TasksIndexComponent } from './tasks/tasks-index';\nimport { TaskStatusComponent } from './tasks/task-status';\nimport { TaskViewComponent } from './tasks/task-view';\nimport { NotificationsIndexComponent } from './notifications/notification-index';\nimport { NotificationViewComponent } from './notifications/notification-view';\nimport { RemoteAgentsComponent} from './remoteAgents/remote-agents/remote-agents.component';\nimport { HelpComponent } from './help'\nimport { RemoteAgentDownloadComponent } from './remoteAgents/remoteAgent-download';\nimport { RemoteAgentEditComponent } from './remoteAgents/remoteAgent-edit';\nimport { RemoteAgentTokenComponent} from './remoteAgents/remote-agent-token/remote-agent-token.component';\nimport { IssueEditComponent, IssueIndexComponent } from './support'\nimport { HubService } from '../+hub/hub.service';\n\n\n@NgModule({\n    imports: [\n        SharedModule,\n        Routing,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        HubsComponent,\n        HubIndexComponent,\n        HubEditComponent,\n        HubsSummaryComponent,\n        ManageComponent,\n        TasksIndexComponent,\n        TaskStatusComponent,\n        TaskViewComponent,\n        NotificationsIndexComponent,\n        NotificationViewComponent,\n        RemoteAgentsComponent,\n        RemoteAgentDownloadComponent,\n        RemoteAgentEditComponent,\n        HelpComponent,\n        RemoteAgentTokenComponent,\n        IssueEditComponent, IssueIndexComponent\n    ],\n    providers: [HubsService, HubService],\n    exports: []\n})\nexport class HubsModule {\n\n    static forRoot(): ModuleWithProviders<HubsModule> {\n        return {\n            ngModule: HubsModule,\n            providers: [HubsService, HubService]\n        };\n    }\n}\n"]}