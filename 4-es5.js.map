{"version":3,"sources":["webpack:///src/app/+hub/test/datalinkTest-edit/datalinkTest-edit.routing.ts","webpack:///src/app/+hub/test/datalinkTest-edit/datalinkTest-edit.module.ts","webpack:///src/app/+hub/test/datalinkTest-edit/datalinkTest-edit-guard.ts","webpack:///src/app/+hub/test/datalinkTest-edit/step-edit/datalinkTest-edit-step.component.ts","webpack:///src/app/+hub/test/datalinkTest-edit/step-edit/datalinkTest-edit-step.component.html","webpack:///src/app/+hub/test/datalinkTest-edit/properties/datalinkTest-properties.component.ts","webpack:///src/app/+hub/test/datalinkTest-edit/properties/datalinkTest-properties.component.html","webpack:///src/app/+hub/test/datalinkTest-edit/datalinkTest-edit.component.ts","webpack:///src/app/+hub/test/datalinkTest-edit/datalinkTest-edit.component.html"],"names":["editRoutes","path","redirectTo","data","navigateSkip","component","pageTitle","routes","canDeactivate","children","Routing","forChild","DatalinkTestEditModule","ngModule","providers","imports","declarations","exports","DatalinkTestEditGuard","DatalinkTestEditStepComponent","hubService","authService","formService","route","fb","showAllErrors","stepColumns","name","title","format","_stepTableData","stepTableData","asObservable","stepFormService","_subscription","params","getHubCacheObservable","getCurrentFormObservable","subscribe","result","hubCache","mainForm","datalinkTestStepKey","datalinkTestForm","step","value","dexihDatalinkTestSteps","find","c","key","navigateUp","minKey","forEach","t","isValid","updateTableNames","stepForm","datalinkTestStep","_formChanges","controls","datalinkKey","valueChanges","startForm","e","addHubClientErrorMessage","unsubscribe","inputTableNames","dexihDatalinkTestTables","map","tt","table","getTable","tableKey","targetTableName","datalink","hub","dexihDatalinks","dexihDatalinkTargets","length","join","currentForm","stepsArray","index","findIndex","push","removeAt","selector","templateUrl","DatalinkTestPropertiesComponent","formsService","router","hasChanged","updateSteps","stepData","steps","stepControl","updateDate","errors","valid","next","navigate","relativeTo","parent","editStep","DatalinkTestEditComponent","isLoaded","action","status","Loaded","confirmDialog","then","confirm","load","reason","_hubCacheChangeSubscription","_formChangeSubscription","ngOnDestroy","datalinkTestKey","addHubErrorMessage","dexihDatalinkTests","datalinkTest","form","history","pushState","newUrl","window","location","pathname","replace","navigateByUrl","Promise","resolve","$event","returnValue","unloadNotification"],"mappings":"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","file":"4-es5.js","sourcesContent":["import { Routes, RouterModule } from '@angular/router';\nimport { DatalinkTestEditComponent } from './datalinkTest-edit.component';\nimport { DatalinkTestPropertiesComponent } from './properties/datalinkTest-properties.component';\nimport { DatalinkTestEditStepComponent } from './step-edit/datalinkTest-edit-step.component';\nimport { DatalinkTestEditGuard} from './datalinkTest-edit-guard';\n\nexport const editRoutes = [\n        { path: '', redirectTo: 'properties',  data: { navigateSkip: true}},\n        { path: 'properties', component: DatalinkTestPropertiesComponent, data: { navigateSkip: true, pageTitle: 'Properties' } },\n        { path: 'step', component: DatalinkTestEditStepComponent, data: { pageTitle: 'New Step' }  },\n        { path: 'step/:datalinkTestStepKey', component: DatalinkTestEditStepComponent, data: { pageTitle: 'Edit Step' }  },\n];\n\nexport const routes: Routes = [\n        { path: '', component: DatalinkTestEditComponent, canDeactivate: [DatalinkTestEditGuard], children: editRoutes},\n];\n\nexport const Routing = RouterModule.forChild(routes);\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routing } from './datalinkTest-edit.routing';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { DatalinkTestEditComponent } from './datalinkTest-edit.component';\nimport { DatalinkTestPropertiesComponent } from './properties/datalinkTest-properties.component';\nimport { DatalinkTestEditStepComponent } from './step-edit/datalinkTest-edit-step.component';\n\nimport { HubFormsService } from '../../hub.forms.service';\nimport { DatalinkTestEditGuard } from './datalinkTest-edit-guard';\nimport { HubSharedModule } from '../../hub.shared.module';\n\n@NgModule({\n    imports: [\n        SharedModule,\n        CommonModule,\n        FormsModule,\n        Routing,\n        ReactiveFormsModule,\n        HubSharedModule\n    ],\n    declarations: [\n        DatalinkTestEditComponent,\n        DatalinkTestPropertiesComponent,\n        DatalinkTestEditStepComponent,\n    ],\n    providers: [ HubFormsService, DatalinkTestEditGuard ],\n    exports: []\n})\nexport class DatalinkTestEditModule {\n\n    static forRoot(): ModuleWithProviders<DatalinkTestEditModule> {\n        return {\n            ngModule: DatalinkTestEditModule,\n            providers: [ HubFormsService ]\n        };\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable, combineLatest} from 'rxjs';\n\nexport interface CanComponentDeactivate {\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\n}\n\n@Injectable()\nexport class DatalinkTestEditGuard implements CanDeactivate<CanComponentDeactivate> {\n\n  canDeactivate(component: CanComponentDeactivate) {\n    return component && component.canDeactivate ? component.canDeactivate() : true;\n  }\n\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HubService } from '../../../hub.service';\nimport { Observable, BehaviorSubject, Subscription, combineLatest} from 'rxjs';\nimport { FormGroup, FormArray, FormBuilder } from '@angular/forms';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubFormsService } from '../../../hub.forms.service';\nimport { HubCache } from '../../../hub.models';\nimport { DexihDatalinkTestStep } from '../../../../shared/shared.models';\n\n@Component({\n    selector: 'datalinkTest-edit-step',\n    templateUrl: './datalinkTest-edit-step.component.html'\n})\nexport class DatalinkTestEditStepComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n    private _formChanges: Subscription;\n\n    public hubCache: HubCache;\n\n    private datalinkTestStepKey: number;\n    datalinkTestKey: number;\n\n    datalinkTestForm: FormGroup;\n\n    targetTableName: string;\n    inputTableNames: string[];\n\n    stepFormService: HubFormsService;\n    showAllErrors = false;\n\n    stepColumns = [\n        { name: 'name', title: 'Name', format: '' },\n        { name: 'datalink', title: 'Datalink', format: '' },\n        { name: 'dependencies', title: 'Dependencies', format: '' },\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    private _stepTableData = new BehaviorSubject<Array<any>>(null);\n    stepTableData: Observable<Array<any>> = this._stepTableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private formService: HubFormsService,\n        private route: ActivatedRoute,\n        private fb: FormBuilder) {\n\n        // create a separate formService instance to manage the copied form\n        this.stepFormService = new HubFormsService(fb, hubService, authService);\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.formService.getCurrentFormObservable(),\n            ).subscribe(result => {\n                let params = result[1];\n                this.hubCache = result[2];\n                let mainForm = result[3];\n\n                this.datalinkTestStepKey = +params['datalinkTestStepKey'];\n\n                if (mainForm) {\n                    this.datalinkTestForm = mainForm;\n                    let step: DexihDatalinkTestStep;\n\n                    if (this.datalinkTestStepKey) {\n                        step = mainForm.value.dexihDatalinkTestSteps\n                            .find(c => c.key === this.datalinkTestStepKey);\n\n                        if (!step) {\n                            this.authService.navigateUp();\n                            return;\n                        }\n                    } else {\n                        step = new DexihDatalinkTestStep();\n                        // if new trigger, then set a temporary key of -1 or lower.\n                        let minKey = -1;\n                        this.datalinkTestForm.value.dexihDatalinkTestSteps.forEach(t => {\n                            if (t.key <= minKey) {\n                                minKey = t.key - 1;\n                            }\n                        });\n                        step.key = minKey;\n                        this.datalinkTestStepKey = minKey;\n                        step.isValid = true;\n                    }\n\n                    this.updateTableNames(step);\n\n                    const stepForm = this.stepFormService.datalinkTestStep(step);\n                    this._formChanges = stepForm.controls.datalinkKey.valueChanges.subscribe(datalinkKey => {\n                        this.updateTableNames(stepForm.value);\n                    });\n\n                    this.stepFormService.startForm(stepForm);\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'DatalinkTest Edit Step');\n        }\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    private updateTableNames(step: DexihDatalinkTestStep) {\n        this.inputTableNames = step.dexihDatalinkTestTables.map(tt => {\n            let table = this.hubCache.getTable(tt.tableKey);\n            if (table) {\n                return table.name;\n            } else {\n                return 'Table not found.';\n            }\n        });\n\n        this.targetTableName = 'No target defined.';\n        if (step.datalinkKey) {\n            let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key ===  step.datalinkKey);\n            if (datalink && datalink.dexihDatalinkTargets.length > 0) {\n                this.targetTableName = datalink.dexihDatalinkTargets.map(c => this.hubCache.getTable(c.tableKey).name).join(', ');\n            }\n        }\n    }\n\n    cancel() {\n        this.authService.navigateUp();\n    }\n\n    applyExit() {\n        const stepForm = this.stepFormService.currentForm;\n        const stepsArray = <FormArray>this.datalinkTestForm.controls.dexihDatalinkTestSteps;\n\n        const index = stepsArray.controls\n            .findIndex(c => c.value.key === this.datalinkTestStepKey && c.value.isValid);\n\n        if (index < 0) {\n            stepsArray.push(stepForm);\n        } else {\n            stepsArray.removeAt(index);\n            stepsArray.push(stepForm);\n        }\n\n        this.authService.navigateUp();\n    }\n}\n","<div *ngIf=\"stepFormService.currentForm\">\n<div class=\"list-group-item list-group-item-info rounded-0\">\n\t<div class=\"d-flex flex-row\">\n\t\t<h5>Step Properties</h5>\n\t\t<div class=\"ml-auto\">\n\t\t\t<d-button-apply class=\"mr-1\" [disabled]=\"!stepFormService.hasChanged\" (click)=\"applyExit()\"></d-button-apply>\n\t\t\t<d-button-cancel (click)=\"cancel()\"></d-button-cancel>\n\t\t</div>\n\t</div>\n</div>\n\n<div class=\"list-group-item\" >\n\t<form [formGroup]=\"stepFormService.currentForm\">\n\t\t<fieldset>\n\t\t\t<section>\n\t\t\t\t<form-input label=\"Data Step Name\" formControlName=\"name\" placeholder=\"Enter the step name.\" [autocapitalize]=\"true\" iconClass=\"fa fa-list\"\n\t\t\t\t [errors]=\"stepFormService.formErrors.name\" note=\"Enter a name for the data step, blank will use datalink name.\">\n\t\t\t\t</form-input>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<form-textarea label=\"Description\" formControlName=\"description\" [showPreview]=\"true\" [isHidden]=\"true\" placeholder=\"Enter a description\" iconClass=\"fa fa-comment\"\n\t\t\t\t [errors]=\"stepFormService.formErrors['description']\">\n\t\t\t\t</form-textarea>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<form-select label=\"Data Link\" formControlName=\"datalinkKey\" [items]=\"hubCache.hub.dexihDatalinks\" itemKey=\"key\"\n\t\t\t\t itemName=\"name\" [errors]=\"stepFormService.formErrors.datalinkKey\" iconClass=\"fa fa-database\">\n\t\t\t\t <datalink-edit-button [key]=\"stepFormService.currentForm.controls.datalinkKey?.value\"></datalink-edit-button>\n\t\t\t\t</form-select>\n\t\t\t</section>\n\t\t</fieldset>\n\t</form>\n</div>\n\n<div class=\"list-group-item list-group-item-info rounded-0\">\n\t<div class=\"d-flex flex-row\">\n\t\t<h5>Target Table: {{targetTableName}}</h5>\n\t\t<div class=\"ml-auto\">\n\t\t\t<d-button-apply class=\"mr-1\" [disabled]=\"!stepFormService.hasChanged\" (click)=\"applyExit()\"></d-button-apply>\n\t\t\t<d-button-cancel (click)=\"cancel()\"></d-button-cancel>\n\t\t</div>\n\t</div>\n</div>\n<div class=\"list-group-item\" *ngIf=\"stepFormService.currentForm\">\n\t<form [formGroup]=\"stepFormService.currentForm\">\n\t\t<fieldset>\n\t\t\t<section>\n\t\t\t\t<form-select label=\"Target Connection\" formControlName=\"targetConnectionKey\" [items]=\"hubCache.hub.dexihConnections\"\n\t\t\t\t itemKey=\"key\" itemName=\"name\" [errors]=\"stepFormService.formErrors.targetConnectionKey\" iconClass=\"fa fa-database\"\n\t\t\t\t note=\"Connection for the datalink target table\">\n\t\t\t\t <connection-edit-button [key]=\"stepFormService.currentForm.controls.targetConnectionKey?.value\"></connection-edit-button>\n\t\t\t\t</form-select>\n\t\t\t</section>\n\t\t\t<div class=\"form-row\">\n\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t<form-input label=\"Target Table Name\" formControlName=\"targetTableName\" placeholder=\"Enter the name.\" iconClass=\"fa fa-list\"\n\t\t\t\t\t [errors]=\"stepFormService.formErrors['targetTableName']\" note=\"Name of target table\">\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t<form-input label=\"Target Table Schema\" formControlName=\"targetSchema\" placeholder=\"Enter the name.\" iconClass=\"fa fa-list\"\n\t\t\t\t\t [errors]=\"stepFormService.formErrors['targetSchema']\">\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t\t<section>\n\t\t\t\t<form-select label=\"Expected Connection\" formControlName=\"expectedConnectionKey\" [items]=\"hubCache.hub.dexihConnections\"\n\t\t\t\t itemKey=\"key\" itemName=\"name\" [errors]=\"stepFormService.formErrors.expectedConnectionKey\" iconClass=\"fa fa-database\"\n\t\t\t\t note=\"Connection where the expected target data is.\">\n\t\t\t\t <connection-edit-button [key]=\"stepFormService.currentForm.controls.expectedConnectionKey?.value\"></connection-edit-button>\n\t\t\t\t</form-select>\n\t\t\t</section>\n\t\t\t<div class=\"form-row\">\n\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t<form-input label=\"Expected Table Name\" formControlName=\"expectedTableName\" placeholder=\"Enter the name.\"\n\t\t\t\t\t iconClass=\"fa fa-list\" [errors]=\"stepFormService.formErrors['expectedTableName']\">\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t<form-input label=\"Expected Table Schema\" formControlName=\"expectedSchema\" placeholder=\"Enter the name.\" iconClass=\"fa fa-list\"\n\t\t\t\t\t [errors]=\"stepFormService.formErrors['expectedSchema']\">\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t\t<section>\n\t\t\t\t<form-select label=\"Error Connection\" formControlName=\"errorConnectionKey\" [items]=\"hubCache.hub.dexihConnections\"\n\t\t\t\t itemKey=\"key\" itemName=\"name\" [errors]=\"stepFormService.formErrors.errorConnectionKey\" iconClass=\"fa fa-database\"\n\t\t\t\t note=\"Connection where the error data should be sent.\">\n\t\t\t\t <connection-edit-button [key]=\"stepFormService.currentForm.controls.errorConnectionKey?.value\"></connection-edit-button>\n\t\t\t\t</form-select>\n\t\t\t</section>\n\t\t\t<div class=\"form-row\">\n\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t<form-input label=\"Error Table Name\" formControlName=\"errorTableName\" placeholder=\"Enter the name.\"\n\t\t\t\t\t iconClass=\"fa fa-list\" [errors]=\"stepFormService.formErrors['errorTableName']\">\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t<form-input label=\"Error Table Schema\" formControlName=\"errorSchema\" placeholder=\"Enter the name.\" iconClass=\"fa fa-list\"\n\t\t\t\t\t [errors]=\"stepFormService.formErrors['errorSchema']\">\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t</fieldset>\n\t</form>\n</div>\n\n<div *ngFor=\"let testTable of stepFormService.currentForm.controls.dexihDatalinkTestTables.controls; let i = index;\">\n\t<div class=\"list-group-item list-group-item-info rounded-0\">\n\t\t<div class=\"d-flex flex-row\">\n\t\t\t<h5>Source Table: {{inputTableNames[i]}}</h5>\n\t\t\t<div class=\"ml-auto\">\n\t\t\t\t<d-button-apply class=\"mr-1\" [disabled]=\"!stepFormService.hasChanged\" (click)=\"applyExit()\"></d-button-apply>\n\t\t\t\t<d-button-cancel (click)=\"cancel()\"></d-button-cancel>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"list-group-item\" *ngIf=\"stepFormService.currentForm\">\n\t\t<form [formGroup]=\"testTable\">\n\t\t\t<fieldset>\n\t\t\t\t<section>\n\t\t\t\t\t<form-select label=\"Source Connection\" formControlName=\"sourceConnectionKey\" [items]=\"hubCache.hub.dexihConnections\"\n\t\t\t\t\t itemKey=\"key\" itemName=\"name\" [errors]=\"stepFormService.formErrors.sourceConnectionKey\" iconClass=\"fa fa-database\"\n\t\t\t\t\t note=\"Connection where the source test data is.\">\n\t\t\t\t\t <connection-edit-button [key]=\"stepFormService.currentForm.controls.sourceConnectionKey?.value\"></connection-edit-button>\n\t\t\t\t\t</form-select>\n\t\t\t\t</section>\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Source Table Name\" formControlName=\"sourceTableName\" placeholder=\"Enter the name.\" iconClass=\"fa fa-list\"\n\t\t\t\t\t\t [errors]=\"stepFormService.formErrors['sourceTableName']\">\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Source Table Schema\" formControlName=\"sourceSchema\" placeholder=\"Enter the name.\" iconClass=\"fa fa-list\"\n\t\t\t\t\t\t [errors]=\"stepFormService.formErrors['sourceSchema']\">\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t\t<section>\n\t\t\t\t\t<form-select label=\"Test Connection\" formControlName=\"testConnectionKey\" [items]=\"hubCache.hub.dexihConnections\"\n\t\t\t\t\t itemKey=\"key\" itemName=\"name\" [errors]=\"stepFormService.formErrors.testConnectionKey\" iconClass=\"fa fa-database\"\n\t\t\t\t\t note=\"Connection where the test data is.\">\n\t\t\t\t\t <connection-edit-button [key]=\"stepFormService.currentForm.controls.testConnectionKey?.value\"></connection-edit-button>\n\t\t\t\t\t</form-select>\n\t\t\t\t</section>\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Test Table Name\" formControlName=\"testTableName\" placeholder=\"Enter the name.\" iconClass=\"fa fa-list\"\n\t\t\t\t\t\t [errors]=\"stepFormService.formErrors['testTableName']\">\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Test Table Schema\" formControlName=\"testSchema\" placeholder=\"Enter the name.\" iconClass=\"fa fa-list\"\n\t\t\t\t\t\t [errors]=\"stepFormService.formErrors['testSchema']\">\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t</form>\n\t</div>\n</div>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HubService } from '../../../hub.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { Subscription, combineLatest, BehaviorSubject, Observable} from 'rxjs';\nimport { HubFormsService } from '../../../hub.forms.service';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { HubCache } from '../../../hub.models';\nimport { DexihDatalinkTestStep } from '../../../../shared/shared.models';\n\n@Component({\n\n  selector: 'datalinkTest-properties-form',\n  templateUrl: './datalinkTest-properties.component.html'\n})\nexport class DatalinkTestPropertiesComponent implements OnInit, OnDestroy {\n\n  private datalinkTestKey: number;\n\n  public hubCache: HubCache;\n  public action: string; // new or edit\n  public pageTitle: string;\n\n  private _subscription: Subscription;\n\n  public hasChanged = false;\n  public mainForm: FormGroup;\n\n  stepColumns = [\n    { name: 'name', title: 'Name', format: '' },\n    { name: 'datalink', title: 'Datalink', format: '' },\n    { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    { name: 'errors', title: 'Errors', format: '' },\n  ];\n\n  private _stepTableData = new BehaviorSubject<Array<any>>(null);\n  stepTableData: Observable<Array<any>> = this._stepTableData.asObservable();\n\n  constructor(private hubService: HubService,\n    private authService: AuthService,\n    public formsService: HubFormsService,\n    private route: ActivatedRoute,\n    private router: Router) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.hubService.getHubCacheObservable(),\n        this.formsService.getCurrentFormObservable(),\n      ).subscribe(result => {\n        this.hubCache = result[0];\n        this.mainForm = result[1];\n\n        this.updateSteps();\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Data Job Edit Properties');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n  }\n\n  updateSteps() {\n    let stepData = [];\n    if (this.mainForm) {\n      let steps = (<FormArray>this.mainForm.controls['dexihDatalinkTestSteps']);\n      steps.controls.forEach(stepControl => {\n        let step = <DexihDatalinkTestStep> stepControl.value;\n        let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === step.datalinkKey);\n        stepData.push({\n          key: step.key,\n          name: step.name,\n          datalink: datalink ? datalink.name : 'Not specified',\n          updateDate: step.updateDate,\n          errors: stepControl.valid ? 'No errors' : 'Errors'\n        });\n      });\n    }\n\n    this._stepTableData.next(stepData);\n  }\n\n  newStep() {\n    this.router.navigate(['step'], { relativeTo: this.route.parent });\n  }\n\n  editStep(step: DexihDatalinkTestStep) {\n    this.router.navigate(['step', step.key], { relativeTo: this.route.parent });\n  }\n\n\n  deleteSteps(steps: Array<DexihDatalinkTestStep>) {\n    let stepsArray = <FormArray>this.mainForm.controls.dexihDatalinkTestSteps;\n\n    steps.forEach(step => {\n      let index = stepsArray.controls.findIndex(c => c.value.datalinkTestStepKey === step.key);\n      stepsArray.removeAt(index);\n    });\n    this.updateSteps();\n  }\n\n  close() {\n    this.authService.navigateUp();\n  }\n\n}\n","<d-tabs title=\"Test Properties\" [padding]=\"false\">\n\t<d-tab title=\"Properties\">\n\n\t\t<form *ngIf=\"mainForm\" [formGroup]=\"mainForm\">\n\t\t\t<fieldset>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-input label=\"Test Name\" formControlName=\"name\" placeholder=\"Enter the name.\"\n\t\t\t\t\t\t[autocapitalize]=\"true\" iconClass=\"fa fa-list\" [errors]=\"formsService.formErrors['name']\">\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-textarea label=\"Description\" formControlName=\"description\" placeholder=\"Enter a description\"\n\t\t\t\t\t\ticonClass=\"fa fa-comment\" [errors]=\"formsService.formErrors['description']\">\n\t\t\t\t\t</form-textarea>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-select label=\"Audit Connection\" formControlName=\"auditConnectionKey\"\n\t\t\t\t\t\t[items]=\"hubCache.hub.dexihConnections\" itemKey=\"key\" itemName=\"name\"\n\t\t\t\t\t\t[errors]=\"formsService.formErrors.auditConnectionKey\" iconClass=\"fa fa-database\"\n\t\t\t\t\t\tnote=\"Connection where test results are stored.\">\n\t\t\t\t\t\t<connection-edit-button [key]=\"mainForm.controls.auditConnectionKey.value\">\n\t\t\t\t\t\t</connection-edit-button>\n\t\t\t\t\t</form-select>\n\t\t\t\t</section>\n\t\t\t</fieldset>\n\t\t</form>\n\t</d-tab>\n\n\t<d-tab title=\"Steps\" [padding]=\"false\">\n\t\t<d-table [enableMultiSelect]=\"true\" [enableManualSort]=\"true\" sortColumn=\"position\" [columns]=\"stepColumns\"\n\t\t\t[dataObservable]=\"stepTableData\" (rowClick)='editStep($event)'>\n\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t<d-button-delete (click)=\"deleteSteps(items)\"></d-button-delete>\n\t\t\t</ng-template>\n\n\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n\t\t\t\t<d-button-edit (click)=\"editStep(item)\"></d-button-edit>\n\t\t\t</ng-template>\n\n\t\t\t<ng-template #actions select=\"actionsTemplate\" let-items=\"items\">\n\t\t\t\t<d-button-new class=\"mr-1\" (click)=\"newStep()\" title=\"Create a new step\"></d-button-new>\n\t\t\t</ng-template>\n\t\t</d-table>\n\t</d-tab>\n</d-tabs>","import { HostListener, Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { HubCache, eCacheStatus } from '../../hub.models';\nimport { DexihDatalinkTest } from '../../../shared/shared.models';\n\n@Component({\n  selector: 'dexih-datalinkTest-edit-form',\n  templateUrl: './datalinkTest-edit.component.html'\n})\nexport class DatalinkTestEditComponent implements OnInit, OnDestroy {\n  public datalinkTestKey: number;\n\n  public hubCache: HubCache;\n  public action: string; // new or edit\n  public pageTitle: string;\n  public params: Params;\n\n  private _subscription: Subscription;\n  private _formChangeSubscription: Subscription;\n  private _hubCacheChangeSubscription: Subscription;\n  private isLoaded = false;\n\n  constructor(private hubService: HubService,\n    public formsService: HubFormsService,\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router: Router) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n      ).subscribe(result => {\n        let data = result[0];\n        this.params = result[1];\n        this.hubCache = result[2];\n\n        this.action = data['action'];\n        this.pageTitle = data['pageTitle'];\n\n        if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded ) { return; }\n\n        if (this.isLoaded && this.action === 'new') { return; }\n\n        if (this.isLoaded && this.formsService.hasChanged) {\n            this.authService.confirmDialog('Synchronization warning',\n            'The hub was disconnected, meaning this edit could have been changed by another session.  Would you like to discard the current changes, and reload the latest version?')\n            .then(confirm => {\n                if (confirm) {\n                    this.load();\n                }\n            }).catch(reason => {\n                return;\n            });\n        } else {\n            this.load();\n        }\n\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'DatalinkTest Edit');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._formChangeSubscription) { this._formChangeSubscription.unsubscribe(); }\n\n    this.formsService.ngOnDestroy();\n  }\n\n  load() {\n    this.isLoaded = true;\n\n    if (this.action === 'edit') {\n      // get the hub key from the route data, and update the service.\n      this.datalinkTestKey = + this.params['datalinkTestKey'];\n\n      if (!this.datalinkTestKey) {\n        this.hubService.addHubErrorMessage('There was no datalink test specified to edit.');\n      } else {\n        if (!this.hubCache.hub || !this.hubCache.hub.dexihDatalinkTests) {\n          this.hubService.addHubErrorMessage('The hub cache is not loaded.');\n        } else {\n\n          let datalinkTest = this.hubCache.hub.dexihDatalinkTests.find(c => c.key === this.datalinkTestKey);\n          if (!datalinkTest) {\n            this.hubService.addHubErrorMessage('The specified datalink test could not be found.');\n          } else {\n            this.formsService.datalinkTest(datalinkTest);\n          }\n        }\n      }\n    }\n\n    if (this.action === 'new') {\n        let  datalinkTest = new DexihDatalinkTest();\n        datalinkTest.key = 0;\n        this.formsService.datalinkTest(datalinkTest);\n\n        // update the url with the saved key\n        this._formChangeSubscription = this.formsService.getCurrentFormObservable().subscribe(form => {\n          let key = form.controls.key.value;\n          if (key) {\n            if (history.pushState) {\n              let newUrl = window.location.pathname.replace('/datalinkTest-new', `/datalinkTest-edit/${key}`)\n              this.router.navigateByUrl(newUrl);\n              this._formChangeSubscription.unsubscribe();\n            }\n          }\n        });\n    }\n  }\n\n  public canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>((resolve) => {\n      if (this.formsService.hasChanged) {\n        this.authService.confirmDialog('The data job has not been saved',\n          'The datalink test changes have not been saved.  Do you want to discard the changes and exit?')\n          .then((confirm) => {\n              resolve(confirm);\n            }).catch(() => {\n              resolve(false);\n            });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  // @HostListener allows is to guard against browser refresh, close, etc.\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.formsService.hasChanged) {\n      $event.returnValue = 'The datalink test changes have not been saved.  Do you want to discard the changes and exit?';\n    }\n  }\n}\n","<div class=\"container\">\n    <d-widget title=\"Edit Datalink Test\" iconClass=\"fa fa-lg fa-fw fa-cog\">\n\n    <ng-template #header>\n            <dexih-invalid-form-details class=\"mr-1\" [control]=\"formsService.currentForm\" (click)=\"formsService.showErrors()\"></dexih-invalid-form-details>\n            <save-button *ngIf=\"hubCache.canWrite\"  class=\"mr-1\" [formsService]=\"formsService\"></save-button>\n            <cancel-button  class=\"mr-1\" [formsService]=\"formsService\"></cancel-button>\n        </ng-template>\n\n        <router-outlet></router-outlet>\n    </d-widget>\n</div>  \n\n\n"]}