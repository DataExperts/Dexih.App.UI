{"version":3,"sources":["./src/app/+hub/dashboard/dashboard-edit/dashboard-edit.module.ts","./src/app/+hub/dashboard/dashboard-edit/dashboard-edit.routing.ts","./src/app/+hub/dashboard/dashboard-edit/properties/dashboard-properties.component.ts","./src/app/+hub/dashboard/dashboard-edit/properties/dashboard-properties.component.html"],"names":[],"mappings":"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","file":"2-es2015.js","sourcesContent":["import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { DashboardEditComponent } from './dashboard-edit.component';\nimport { DashboardItemComponent } from './item/dashboard-item.component';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { ItemEditGuard } from '../../item-edit.guard';\nimport { SharedModule } from '../../../shared';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routing } from './dashboard-edit.routing';\nimport { HubSharedModule } from '../../hub.shared.module';\nimport { DashboardPropertiesComponent } from './properties//dashboard-properties.component';\nimport { ViewEditComponent } from '../../view';\n\n@NgModule({\n    imports: [\n        SharedModule,\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        Routing,\n        HubSharedModule,\n    ],\n    exports: [],\n    declarations: [\n        DashboardEditComponent,\n        DashboardItemComponent,\n        DashboardPropertiesComponent,\n        ],\n    providers: [\n        HubFormsService,\n        ItemEditGuard\n    ],\n})\nexport class DashboardEditModule {\n    static forRoot(): ModuleWithProviders<DashboardEditModule> {\n        return {\n            ngModule: DashboardEditModule,\n            providers: [ HubFormsService ]\n        };\n    }\n}\n","import { DashboardEditComponent } from './dashboard-edit.component';\nimport { ViewEditComponent } from '../../view';\nimport { ItemEditGuard } from '../../item-edit.guard';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardPropertiesComponent } from './properties/dashboard-properties.component';\n\nexport const dashboardEditRoutes = [\n    { path: '', redirectTo: 'properties'},\n    { path: 'properties', component: DashboardPropertiesComponent,  data: { navigateSkip: true} },\n    { path: 'view-edit/:viewKey', component: ViewEditComponent,  data: { action: 'edit', pageTitle: 'Edit View'} },\n    { path: 'view-new', component: ViewEditComponent, data: { action: 'new', pageTitle: 'New View'}}\n];\n\nexport const routes: Routes = [\n    { path: '', component: DashboardEditComponent, canDeactivate: [ItemEditGuard], children: dashboardEditRoutes},\n];\n\nexport const Routing = RouterModule.forChild(routes);\n","import { Component, OnInit, OnDestroy, Input, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { HubService } from '../../..';\nimport { HubFormsService } from '../../../hub.forms.service';\nimport { FormArray, FormGroup, AbstractControl } from '@angular/forms';\nimport { HubCache, PreviewResults, DataCache } from '../../../hub.models';\nimport { Subscription, Subject } from 'rxjs';\nimport { GridsterConfig, GridType, CompactType, DisplayGrid, GridsterItem, GridsterItemComponentInterface,\n  GridsterComponent} from 'angular-gridster2';\nimport { eViewType, eSourceType, InputColumn } from '../../../../shared/shared.models';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { CancelToken } from '../../../../+auth/auth.models';\n\n@Component({\n    selector: 'dashboard-properties',\n    templateUrl: 'dashboard-properties.component.html',\n})\n\nexport class DashboardPropertiesComponent implements OnInit, OnDestroy {\n  @Input() showEdit = false;\n  @Input() lock = true;\n\n  @ViewChild('gridster', {static: true}) public gridster: GridsterComponent\n\n    private _formChangeSubscription: Subscription;\n    private _runTimeSubscription: Subscription;\n    private _hubCacheSubscription: Subscription;\n\n    private refreshDataSubject: Subject<void> = new Subject<void>();\n    public refreshDataObservable = this.refreshDataSubject.asObservable();\n    \n    eViewType = eViewType;\n    eSourceType = eSourceType;\n\n    public inputColumns: InputColumn[];\n\n    public maximizedItem: FormGroup;\n\n    columns: Array<any>;\n    public data: Array<any>;\n\n    public options: GridsterConfig;\n\n    currentForm: FormGroup;\n    dashboardItemControls: FormArray;\n    parameters: FormArray;\n\n    hubCache: HubCache;\n\n    private cancelToken = new CancelToken();\n\n    constructor(\n      private authService: AuthService,\n      private hubService: HubService,\n      public formsService: HubFormsService) { }\n\n    ngOnInit() {\n      this.options = {\n        gridType: GridType.ScrollVertical,\n        compactType: CompactType.None,\n        margin: 5,\n        outerMargin: true,\n        outerMarginTop: null,\n        outerMarginRight: null,\n        outerMarginBottom: null,\n        outerMarginLeft: null,\n        useTransformPositioning: true,\n        mobileBreakpoint: 640,\n        minCols: 12,\n        maxCols: 100,\n        minRows: 6,\n        maxRows: 100,\n        maxItemCols: 100,\n        minItemCols: 1,\n        maxItemRows: 100,\n        minItemRows: 1,\n        maxItemArea: 2500,\n        minItemArea: 1,\n        defaultItemCols: 2,\n        defaultItemRows: 2,\n        fixedColWidth: 105,\n        fixedRowHeight: 105,\n        keepFixedHeightInMobile: false,\n        keepFixedWidthInMobile: false,\n        scrollSensitivity: 10,\n        scrollSpeed: 20,\n        enableEmptyCellClick: false,\n        enableEmptyCellContextMenu: false,\n        enableEmptyCellDrop: false,\n        enableEmptyCellDrag: false,\n        emptyCellDragMaxCols: 50,\n        emptyCellDragMaxRows: 50,\n        ignoreMarginInRow: false,\n        // setGridSize: true,\n        draggable: {\n          enabled: false,\n        },\n        resizable: {\n          enabled: false,\n        },\n        swap: false,\n        pushItems: true,\n        disablePushOnDrag: false,\n        disablePushOnResize: false,\n        pushDirections: {north: true, east: true, south: true, west: true},\n        pushResizeItems: false,\n        displayGrid: DisplayGrid.None,\n        disableWindowResize: false,\n        disableWarnings: false,\n        scrollToNewItems: false,\n        itemChangeCallback: (item, itemComponent: GridsterItemComponentInterface) => {\n          this.itemResize(item, itemComponent);\n        },\n        itemResizeCallback: (item, itemComponent: GridsterItemComponentInterface) => {\n          this.itemResize(item, itemComponent);\n        },\n        itemInitCallback: (item, itemComponent: GridsterItemComponentInterface) => {\n          this.itemResize(item, itemComponent);\n        },\n      };\n\n      this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(hubCache => {\n          if (hubCache.isLoaded()) {\n            this.hubCache = hubCache;\n          }\n      });\n\n      this._formChangeSubscription = this.formsService.getCurrentFormObservable().subscribe(currentForm => {\n          this.currentForm = currentForm;\n          if (currentForm) {\n            this.dashboardItemControls = <FormArray> currentForm.controls.dexihDashboardItems;\n            this.parameters = <FormArray> currentForm.controls.parameters;\n\n            this.options.minCols = currentForm.controls.minCols.value;\n            this.options.maxCols = currentForm.controls.maxCols.value;\n            this.options.minRows = currentForm.controls.minRows.value;\n            this.options.maxRows = currentForm.controls.maxRows.value;\n\n            this.showEdit = currentForm.controls.runTime.value.showEdit;\n\n            if (this._runTimeSubscription) { this._runTimeSubscription.unsubscribe(); }\n            this._runTimeSubscription = currentForm.controls.runTime.valueChanges.subscribe(runTime => {\n              this.showEdit = runTime.showEdit;\n              this.lock = runTime.lock;\n\n              this.updateShowEdit();\n            });\n\n            this.updateShowEdit();\n          }\n      });\n    }\n\n    ngOnDestroy(): void {\n      if (this._formChangeSubscription) { this._formChangeSubscription.unsubscribe(); }\n      if (this._runTimeSubscription) { this._runTimeSubscription.unsubscribe(); }\n      if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n      this.cancelToken.cancel();\n    }\n\n    public getNextPossiblePosition(): GridsterItem {\n      let gridItem = {x: 0, y: 0, cols: 1, rows: 1, control: null};\n      let newItem = this.gridster.getFirstPossiblePosition(gridItem);\n      return newItem;\n    }\n\n    public updateShowEdit() {\n      if (this.showEdit || !this.lock ) {\n        this.options.displayGrid = DisplayGrid.Always;\n        this.options.draggable.enabled = true;\n        this.options.resizable.enabled = true;\n      } else {\n        this.options.displayGrid = DisplayGrid.None;\n          this.options.draggable.enabled = false;\n          this.options.resizable.enabled = false;\n      }\n      this.options = Object.assign({}, this.options);\n    }\n\n    public itemResize(item: GridsterItem, itemComponent: GridsterItemComponentInterface) {\n      function setWhenChanged(c: AbstractControl, value: Number) {\n          if (c.value !== value) {\n            c.setValue(value);\n          }\n      }\n\n      let control = <FormGroup>item.control;\n\n      setWhenChanged(control.controls.x, item.x);\n      setWhenChanged(control.controls.y, item.y);\n      setWhenChanged(control.controls.cols, item.cols);\n      setWhenChanged(control.controls.rows, item.rows);\n\n      let resizeEvent = item.control.controls.runTime.value.resizeEvent;\n      if (itemComponent.width) {\n        resizeEvent.emit([itemComponent.width, itemComponent.height]);\n      }\n    }\n\n      removeItem(index) {\n        let form = this.formsService.currentForm;\n        let items = <FormArray> form.controls.dexihDashboardItems;\n        items.removeAt(index);\n      }\n\n      updateGrid() {\n        let currentForm = this.formsService.currentForm;\n        this.options.minCols = currentForm.controls.minCols.value;\n        this.options.maxCols = currentForm.controls.maxCols.value;\n        this.options.minRows = currentForm.controls.minRows.value;\n        this.options.maxRows = currentForm.controls.maxRows.value;\n        this.options = Object.assign({}, this.options);\n      }\n\n      maximize(item) {\n        if (this.maximizedItem) {\n          this.maximizedItem = null;\n        } else {\n          this.maximizedItem = item;\n        }\n      }\n\n      parameterChange() {\n        if (this.formsService.currentForm.controls.autoRefresh.value) {\n          this.refresh();\n        }\n      }\n\n      refresh() {\n        this.hubService.previewDashboard(this.formsService.currentForm.value,\n          this.formsService.currentForm.value.parameters, this.cancelToken).then(keys => {\n            this.refreshDataSubject.next();\n          let items = <FormArray> this.formsService.currentForm.controls.dexihDashboardItems;\n\n          keys.forEach(url => {\n            let item = <FormGroup> items.controls.find((form: FormGroup) => form.controls.key.value === url.dashboardItemKey);\n            if (item) {\n              let data = <DataCache> item.controls.runTime.value.data;\n              this.hubService.getRemoteResponse<PreviewResults>(url.dataKey, this.cancelToken).then(result => {\n                result.columns = this.authService.constructDataTableColumns(result.columns);\n                if (result.status) {\n                  this.hubService.addHubMessage(result.status, false, result.name);\n                }\n                data.data.next(result);\n              }).catch();\n            }\n          });\n        });\n      }\n}\n","<div [ngClass]=\"{ 'd-none': maximizedItem}\">\n\n    <d-widget-section *ngIf=\"showEdit\" title=\"Properties\" [showExpandButton]=\"true\">\n        <form *ngIf=\"formsService.currentForm \" [formGroup]=\"formsService.currentForm\">\n            <fieldset>\n                <section>\n                    <form-input label=\"Dashboard Name\" formControlName=\"name\" placeholder=\"Enter the dashboard name.\"\n                        [autocapitalize]=\"on\" iconClass=\"fa fa-list\" [errors]=\"formsService.formErrors['name']\">\n                    </form-input>\n                </section>\n                <section>\n                    <form-textarea label=\"Description\" [showPreview]=\"true\" formControlName=\"description\"\n                        placeholder=\"Enter the description.\">\n                    </form-textarea>\n                </section>\n                <section>\n                    <div class=\"form-row\">\n                        <section class=\"form-group col-md-3\">\n                            <form-input type=\"number\" label=\"Minimum Columns\" formControlName=\"minCols\">\n                            </form-input>\n                        </section>\n                        <section class=\"form-group col-md-3\">\n                            <form-input type=\"number\" label=\"Maximum Columns\" formControlName=\"maxCols\">\n                            </form-input>\n                        </section>\n                        <section class=\"form-group col-md-3\">\n                            <form-input type=\"number\" label=\"Minimum Rows\" formControlName=\"minRows\">\n                            </form-input>\n                        </section>\n                        <section class=\"form-group col-md-3\">\n                            <form-input type=\"number\" label=\"Maximum Rows\" formControlName=\"maxRows\">\n                            </form-input>\n                        </section>\n                        <d-button-refresh (click)=\"updateGrid()\" text=\"Update Grid\"></d-button-refresh>\n                    </div>\n\n                </section>\n\n                <section>\n                    <form-checkbox formControlName=\"autoRefresh\" label=\"Automatically refresh data when view is opened\">\n                    </form-checkbox>\n                    <form-checkbox label=\"Table is shared in the catalog to users with read access.\" formControlName=\"isShared\">\n\t\t\t\t\t</form-checkbox>\n                </section>\n\n            </fieldset>\n        </form>\n    </d-widget-section>\n\n    <d-widget-section  title=\"Parameters\" *ngIf=\"showEdit || parameters?.length > 0\" [showExpandButton]=\"true\" (onChange)=\"parameterChange()\">\n        <input-parameters [showEdit]=\"showEdit\" [parameters]=\"parameters\"\n            [formsService]=\"formsService\" (onChange)=\"parameterChange()\" (onRefreshData)=\"refresh()\" [refreshEvent]=\"refreshDataObservable\" ></input-parameters>\n    </d-widget-section>\n\n    <d-widget-section *ngIf=\"inputColumns && inputColumns.length > 0\" title=\"InputColumns\"\n        [showExpandButton]=\"true\">\n        <span *ngFor=\"let column of inputColumns; let i = index\" class=\"input-group\">\n            <div class=\"input-group-prepend\">\n                <div class=\"input-group-text\">\n                    {{column.logicalName}}\n                </div>\n            </div>\n            <form-input name=\"column{{i}}\" class=\"form-control p-0\" [placeholder]=\"'Enter ' + column.logicalName\"\n                [(ngModel)]=\"column.value\"></form-input>\n        </span>\n    </d-widget-section>\n\n    <div style=\"height:800px\">\n        <gridster [options]=\"options\" #gridster>\n            <ng-template [ngIf]=\"dashboardItemControls\">\n                <gridster-item\n                    [item]=\"{x: item.controls.x.value, y: item.controls.y.value, cols: item.controls.cols.value, rows: item.controls.rows.value, control: item}\"\n                    *ngFor=\"let item of dashboardItemControls.controls; let i = index;\">\n                    <dashboard-item [item]=\"item\" [showEdit]=\"showEdit\" (onRemove)=\"removeItem(i)\"\n                        (onMaximize)=\"maximize($event)\" [refreshData]=\"item.controls.runTime.value.refreshData\">\n                    </dashboard-item>\n                </gridster-item>\n            </ng-template>\n        </gridster>\n    </div>\n</div>\n<div *ngIf=\"maximizedItem\" class=\"position-relative\" style=\"height:800px; overflow: hidden;\">\n    <dashboard-item [item]=\"maximizedItem\" [showEdit]=\"showEdit\" (onRemove)=\"removeItem(i)\"\n        (onMaximize)=\"maximize($event)\" [refreshData]=\"maximizedItem.controls.runTime.value.refreshData\"\n        [isMaximized]=\"true\">\n    </dashboard-item>\n</div>"],"sourceRoot":"webpack:///"}