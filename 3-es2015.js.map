{"version":3,"sources":["./src/app/+hub/datajob/datajob-edit/datajob-edit-guard.ts","./src/app/+hub/datajob/datajob-edit/datajob-edit.module.ts","./src/app/+hub/datajob/datajob-edit/datajob-edit.routing.ts","./src/app/+hub/datajob/datajob-edit/properties/datajob-edit-properties.component.ts","./src/app/+hub/datajob/datajob-edit/properties/datajob-edit-properties.component.html","./src/app/+hub/datajob/datajob-edit/step-edit/datajob-edit-step.component.ts","./src/app/+hub/datajob/datajob-edit/step-edit/datajob-edit-step.component.html","./src/app/+hub/datajob/datajob-edit/steps-add/datajob-add-steps.component.ts","./src/app/+hub/datajob/datajob-edit/steps-add/datajob-add-steps.component.html","./src/app/+hub/datajob/datajob-edit/trigger-edit/datajob-edit-trigger.component.ts","./src/app/+hub/datajob/datajob-edit/trigger-edit/datajob-edit-trigger.component.html","./src/app/+hub/datajob/datajob-edit/trigger-edit/dexih-form-daysofweek.component.ts","./src/app/+hub/datajob/datajob-edit/trigger-edit/dexih-form-daysofweek.component.html"],"names":[],"mappings":"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","file":"3-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable, combineLatest} from 'rxjs';\n\nexport interface CanComponentDeactivate {\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\n}\n\n@Injectable()\nexport class DatajobEditGuard implements CanDeactivate<CanComponentDeactivate> {\n\n  canDeactivate(component: CanComponentDeactivate) {\n    return component && component.canDeactivate ? component.canDeactivate() : true;\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routing } from './datajob-edit.routing';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { DatajobEditComponent } from './datajob-edit.component';\nimport { DatajobEditPropertiesComponent } from './properties/datajob-edit-properties.component';\nimport { DatajobEditTriggerComponent } from './trigger-edit/datajob-edit-trigger.component';\nimport { DatajobEditStepComponent } from './step-edit/datajob-edit-step.component';\nimport { DatajobAddStepsComponent } from './steps-add/datajob-add-steps.component';\n\nimport { DexihFormDaysOfWeekComponent } from './trigger-edit/dexih-form-daysofweek.component';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { DatajobEditGuard } from './datajob-edit-guard';\nimport { HubSharedModule } from '../../hub.shared.module';\n\n@NgModule({\n    imports: [\n        SharedModule,\n        CommonModule,\n        FormsModule,\n        Routing,\n        ReactiveFormsModule,\n        HubSharedModule\n    ],\n    declarations: [\n        DatajobEditComponent,\n        DatajobEditPropertiesComponent,\n        DatajobEditTriggerComponent,\n        DatajobEditStepComponent,\n        DatajobAddStepsComponent,\n        DexihFormDaysOfWeekComponent\n    ],\n    providers: [ HubFormsService, DatajobEditGuard ],\n    exports: []\n})\nexport class DatajobEditModule {\n\n    static forRoot(): ModuleWithProviders<DatajobEditModule> {\n        return {\n            ngModule: DatajobEditModule,\n            providers: [ HubFormsService ]\n        };\n    }\n}\n","import { Routes, RouterModule } from '@angular/router';\nimport { DatajobEditComponent } from './datajob-edit.component';\nimport { DatajobEditPropertiesComponent } from './properties/datajob-edit-properties.component';\nimport { DatajobEditTriggerComponent } from './trigger-edit/datajob-edit-trigger.component';\nimport { DatajobEditStepComponent } from './step-edit/datajob-edit-step.component';\nimport { DatajobAddStepsComponent } from './steps-add/datajob-add-steps.component';\nimport { DatajobEditGuard} from './datajob-edit-guard';\n\nexport const datajobEditRoutes = [\n        { path: '', redirectTo: 'properties',  data: { navigateSkip: true}},\n        { path: 'properties', component: DatajobEditPropertiesComponent, data: { navigateSkip: true, pageTitle: 'Properties' } },\n        { path: 'trigger', component: DatajobEditTriggerComponent, data: { pageTitle: 'New Trigger' } },\n        { path: 'trigger/:triggerKey', component: DatajobEditTriggerComponent, data: { pageTitle: 'Edit Trigger' }  },\n        { path: 'step', component: DatajobEditStepComponent, data: { pageTitle: 'New Step' }  },\n        { path: 'step/:datalinkStepKey', component: DatajobEditStepComponent, data: { pageTitle: 'Edit Step' }  },\n        { path: 'add-steps', component: DatajobAddStepsComponent, data: { pageTitle: 'Add Multiple Steps' }  }\n];\n\nexport const routes: Routes = [\n        { path: '', component: DatajobEditComponent, canDeactivate: [DatajobEditGuard], children: datajobEditRoutes},\n];\n\n\nexport const Routing = RouterModule.forChild(routes);\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubService } from '../../../hub.service';\nimport { HubFormsService } from '../../../hub.forms.service';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { HubCache } from '../../../hub.models';\nimport { DexihConnection, eFailAction, DexihDatalinkStep, DexihDatalinkDependency, DexihDatalinkStepColumn, DexihTrigger,\n  DexihDatalinkTable, eSourceType, eSharedObjectType, eAlertLevelItems, eAlertLevel } from '../../../../shared/shared.models';\n\n@Component({\n\n  selector: 'dexih-datajob-edit-form',\n  templateUrl: './datajob-edit-properties.component.html'\n})\nexport class DatajobEditPropertiesComponent implements OnInit, OnDestroy {\n  public hubCache: HubCache;\n\n  private _subscription: Subscription;\n\n  hasChangedObserve: Observable<boolean>;\n\n  public managedConnections: DexihConnection[];\n\n  hasChanged = false;\n  showAllErrors = false;\n\n  failActions = [\n    { key: eFailAction.Continue, name: 'Continue Execution' },\n    { key: eFailAction.ContinueNonDependent, name: 'Continue execution (non dependent datalinks only)' },\n    { key: eFailAction.Abend, name: 'Abend' },\n  ];\n\n  public datajobChanged = false;\n  public mainForm: FormGroup;\n\n  triggerColumns = [\n    { name: 'details', title: 'Details', format: 'Html' },\n    { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    { name: 'errors', title: 'Errors', format: '' },\n  ];\n\n  private _triggerTableData = new BehaviorSubject<Array<any>>(null);\n  triggerTableData: Observable<Array<any>> = this._triggerTableData.asObservable();\n\n  stepColumns = [\n    { name: 'name', title: 'Name', format: '' },\n    { name: 'datalink', title: 'Datalink', format: '', tags: 'tags' },\n    { name: 'dependencies', title: 'Dependencies', format: 'Html' },\n    { name: 'inputs', title: 'Inputs', format: 'Html'},\n    { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    { name: 'errors', title: 'Errors', format: '' },\n  ];\n\n  private _stepTableData = new BehaviorSubject<Array<any>>(null);\n  stepTableData: Observable<Array<any>> = this._stepTableData.asObservable();\n\n  eAlertLevelItems = eAlertLevelItems;\n  eAlertLevel = eAlertLevel;\n\n  constructor(private hubService: HubService,\n    public formService: HubFormsService,\n    private route: ActivatedRoute,\n    private router: Router) {\n  }\n\n  ngOnInit() {\n    let isFirst = true;\n\n    try {\n      this._subscription = combineLatest(\n        this.hubService.getHubCacheObservable(),\n        this.formService.getCurrentFormObservable(),\n      ).subscribe(result => {\n        this.hubCache = result[0];\n        this.mainForm = result[1];\n\n        if (!this.hubCache.isLoaded()) { return; }\n\n        this.managedConnections = this.hubCache.getManagedConnections();\n        this.updateTriggers();\n        this.updateSteps();\n\n        \n        // if this is first load of new form, then reset the dependencies.\n        if (this.mainForm.controls['key'].value <= 0 && isFirst) {\n          isFirst = false;\n          let steps = this.mainForm.controls['dexihDatalinkSteps'].value;\n          this.updateDependencies(steps);\n        }\n\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Data Job Edit Properties');\n    }\n\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n  }\n\n  updateTriggers() {\n    let triggerData = [];\n    if (this.mainForm) {\n      let triggers = (<FormArray>this.mainForm.controls['dexihTriggers']);\n      triggers.controls.forEach(triggerControl => {\n        let trigger = triggerControl.value;\n        triggerData.push({\n          key: trigger.key,\n          details: this.hubCache.getTriggerDetails(trigger),\n          updateDate: trigger.updateDate,\n          errors: triggerControl.valid ? 'No errors' : 'Errors'\n        });\n      });\n    }\n\n    this._triggerTableData.next(triggerData);\n  }\n\n  updateSteps() {\n    let stepData = [];\n    if (this.mainForm) {\n      let steps = (<FormArray>this.mainForm.controls['dexihDatalinkSteps']);\n      steps.controls.sort((a: FormGroup, b: FormGroup) => a.controls.position.value - b.controls.position.value)\n        .forEach(stepControl => {\n        let step = <DexihDatalinkStep> stepControl.value;\n        let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === step.datalinkKey);\n        stepData.push({\n          key: step.key,\n          name: step.name,\n          datalinkKey: datalink.key,\n          datalink: datalink ? datalink.name : 'Not specified',\n          tags: this.hubCache.getObjectTags(eSharedObjectType.Datalink, datalink.key),\n          dependencies: this.getDependencies(step.dexihDatalinkDependencies),\n          inputs: this.getInputs(step.dexihDatalinkStepColumns),\n          updateDate: step.updateDate,\n          errors: stepControl.valid ? 'No errors' : 'Errors'\n        });\n      });\n    }\n\n    this._stepTableData.next(stepData);\n  }\n\n  stepSortChanged(items: Array<DexihDatalinkStep>) {\n    let steps = (<FormArray>this.mainForm.controls['dexihDatalinkSteps']);\n    items.forEach((item, index) => {\n        let step = <FormGroup>steps.controls\n            .find(c => c.value.key === item.key);\n        if (step) {\n          step.controls.position.setValue(index);\n        }\n    });\n}\n\n  getDependencies(dependencies: Array<DexihDatalinkDependency>) {\n    let depString = '';\n\n    if (dependencies) {\n      dependencies.forEach(dep => {\n        let step = this.mainForm.value.dexihDatalinkSteps.find(c => c.key === dep.dependentDatalinkStepKey);\n        if (step) {\n          depString = depString + step.name + '<br>';\n        } else {\n          depString = depString + 'Error: step not found.<br>';\n        }\n      });\n    }\n    return depString;\n\n  }\n\n  getInputs(columns: Array<DexihDatalinkStepColumn>) {\n    let depString = '';\n\n    if (columns) {\n      columns.forEach(column => {\n        depString = depString + column.name + ' = ' + column.defaultValue + '<br>';\n      });\n    }\n    return depString;\n\n  }\n\n  newTrigger() {\n    this.router.navigate(['trigger'], { relativeTo: this.route.parent });\n  }\n\n  addDatalinkSteps() {\n    this.router.navigate(['add-steps'], { relativeTo: this.route.parent });\n  }\n\n  editTrigger(trigger: DexihTrigger) {\n    this.router.navigate(['trigger', trigger.key], { relativeTo: this.route.parent });\n  }\n\n  deleteTriggers(triggers: Array<DexihTrigger>) {\n    let triggersArray = <FormArray>this.mainForm.controls.dexihTriggers;\n\n    triggers.forEach(trigger => {\n      let index = triggersArray.controls.findIndex(c => c.value.key === trigger.key);\n      triggersArray.removeAt(index);\n    });\n    this.updateTriggers();\n  }\n\n  newDatalinkStep() {\n    this.router.navigate(['step'], { relativeTo: this.route.parent });\n  }\n\n  editDatalinkStep(step: DexihDatalinkStep) {\n    this.router.navigate(['step', step.key], { relativeTo: this.route.parent });\n  }\n\n  deleteDatalinkSteps(steps: Array<DexihDatalinkStep>) {\n    let stepsArray = <FormArray>this.mainForm.controls.dexihDatalinkSteps;\n\n    steps.forEach(step => {\n      let index = stepsArray.controls.findIndex(c => c.value.key === step.key);\n      stepsArray.removeAt(index);\n    });\n    this.updateSteps();\n  }\n\n  clearDependencies(steps: Array<DexihDatalinkStep>) {\n    let stepsArray = <FormArray>this.mainForm.controls.dexihDatalinkSteps;\n    steps.forEach(step => {\n      let stepControl = <FormGroup> stepsArray.controls.find(c => c.value.key === step.key);\n      let dependencies = <FormArray> stepControl.controls['dexihDatalinkDependencies'];\n      dependencies.clear();\n    });\n\n    this.updateSteps();\n  }\n\n  updateDependencies(steps: Array<DexihDatalinkStep>) {\n    let stepsArray = <FormArray>this.mainForm.controls.dexihDatalinkSteps;\n    let allSteps = stepsArray.value;\n\n    let stepTargets: Array<{key: number, tables: Array<number>}> = [];\n    let minKey = -1;\n\n    allSteps.forEach(step => {\n      stepTargets.push( {key: step.key, tables:this.getDatalinkTargetTables(step.datalinkKey)});\n    });\n\n    steps.forEach(step => {\n      let stepControl = <FormGroup> stepsArray.controls.find(c => c.value.key === step.key);\n      let dependencies = <FormArray> stepControl.controls['dexihDatalinkDependencies'];\n      dependencies.clear();\n\n      let sourceTables = this.getDatalinkSourceTables(step.datalinkKey);\n\n      stepTargets.forEach(stepTarget => {\n        for( let t of stepTarget.tables) {\n          if (sourceTables.indexOf(t) >= 0) {\n            let dep = new DexihDatalinkDependency();\n            dep.key = minKey;\n            dep.datalinkStepKey =step.key;\n            dep.dependentDatalinkStepKey = stepTarget.key;\n            dependencies.push(this.formService.datalinkDependencyFormGroup(dep));\n            minKey--;\n            break;\n          }\n        }\n      });\n\n    });\n\n    this.updateSteps();\n  }\n\n  getDatalinkTargetTables(datalinkKey: number): Array<number> {\n    let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === datalinkKey);\n    if (!datalink) { return []; }\n\n    return datalink.dexihDatalinkTargets.map(c => c.tableKey);\n  }\n\n  // gets any dependent source tables from the given datalink key.\n  getDatalinkSourceTables(datalinkKey: number): Array<number> {\n    let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === datalinkKey);\n    if (!datalink) { return []; }\n\n    let tables = this.getDatalinkTable(datalink.sourceDatalinkTable);\n\n    datalink.dexihDatalinkTransforms.forEach(transform => {\n      if (transform.joinDatalinkTable) {\n        let joinTables = this.getDatalinkTable(transform.joinDatalinkTable);\n        joinTables.forEach(t => {\n          if (tables.indexOf(t) < 0) {\n            tables.push(t);\n          }\n        });\n      }\n    });\n    \n    return tables;\n  }\n\n  getDatalinkTable(datalinkTable: DexihDatalinkTable) : Array<number> {\n    if (!datalinkTable) {\n      return [];\n    }\n\n    switch(datalinkTable.sourceType) {\n      case eSourceType.Table: {\n        return [datalinkTable.sourceTableKey];\n      }\n      case eSourceType.Datalink: {\n        return this.getDatalinkSourceTables(datalinkTable.sourceDatalinkKey);\n      }\n    }\n\n    return [];\n  }\n\n}\n","<d-widget-section title=\"Properties\" [showExpandButton]=\"true\">\n    <form *ngIf=\"mainForm\" [formGroup]=\"mainForm\">\n        <fieldset>\n            <section>\n                <form-input label=\"Data Job Name\" formControlName=\"name\" placeholder=\"Enter the job name.\"\n                    [autocapitalize]=\"true\" iconClass=\"fa fa-list\" [errors]=\"formService.formErrors.name\">\n                </form-input>\n            </section>\n\n            <section>\n                <form-textarea label=\"Description\" [showPreview]=\"true\" formControlName=\"description\"\n                    placeholder=\"Enter the description.\" [errors]=\"formService.formErrors.description\">\n                </form-textarea>\n            </section>\n\n            <section>\n                <form-select label=\"Datalink Fail Action\" formControlName=\"failAction\" [items]=\"failActions\"\n                    itemKey=\"key\" itemName=\"name\" iconClass=\"fa fa-database\"\n                    [errors]=\"formService.formErrors.failAction\" note=\"Action to take when a datalink execution fails.\"\n                    [enableFilter]=\"false\">\n                </form-select>\n            </section>\n\n            <section>\n                <form-select label=\"Alerting Level\" formControlName=\"alertLevel\" [items]=\"eAlertLevelItems\"\n                    itemKey=\"key\" itemName=\"description\" iconClass=\"fa fa-bell\"\n                    [errors]=\"formService.formErrors.alertLevel\" note=\"When alerts should be sent.\"\n                    [enableFilter]=\"false\">\n                </form-select>\n            </section>\n\n            <section>\n                <form-select label=\"Audit Connection\" formControlName=\"auditConnectionKey\" [items]=\"managedConnections\"\n                    itemKey=\"key\" itemName=\"name\" iconClass=\"fa fa-database\"\n                    [errors]=\"formService.formErrors.auditConnectionKey\"\n                    note='Specify the connection where audit data (such as job results) should be written to.'\n                    [errors]=\"formService.formErrors.auditConnectionKey\">\n                    <connection-edit-button [key]=\"mainForm.controls.auditConnectionKey.value\"></connection-edit-button>\n                </form-select>\n            </section>\n\n            <section class=\"col col-12\">\n                <form-checkbox label=\"Trigger datajob when new files arrive\" formControlName=\"fileWatch\">\n                </form-checkbox>\n            </section>\n\n            <section class=\"col col-12\">\n                <form-checkbox label=\"Auto Start\" formControlName=\"autoStart\"\n                    note=\"Re-activate the datajob when the remote agent is restarted.\">\n                </form-checkbox>\n            </section>\n        </fieldset>\n    </form>\n</d-widget-section>\n\n<d-widget-section title=\"Parameters\" [showExpandButton]=\"true\" [padding]=\"true\" [padding]=\"true\">\n    <input-parameters *ngIf=\"mainForm\" [showEdit]=\"true\" [parameters]=\"mainForm?.controls.parameters\" [formsService]=\"formService\">\n    </input-parameters>\n</d-widget-section>\n\n<d-widget-section title=\"Triggers\" [showExpandButton]=\"true\" [padding]=\"false\">\n    <d-table [enableMultiSelect]=\"true\" [enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\" [enableManualSort]=\"true\" sortColumn=\"position\" [columns]=\"triggerColumns\"\n        [dataObservable]=\"triggerTableData\" (rowClick)='editTrigger($event)'>\n        <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n            <d-button-delete (click)=\"deleteTriggers(items)\"></d-button-delete>\n        </ng-template>\n\n        <ng-template #selectedItemAction select=\"selectedItemAction\" let-trigger=\"item\">\n            <d-button-edit (click)=\"editTrigger(trigger)\"></d-button-edit>\n        </ng-template>\n\n        <ng-template #actions select=\"actionsTemplate\" let-items=\"items\">\n            <d-button-new (click)=\"newTrigger()\" title=\"New Trigger\"></d-button-new>\n        </ng-template>\n\n    </d-table>\n</d-widget-section>\n\n<d-widget-section title=\"Steps\" [showExpandButton]=\"true\" [padding]=\"false\">\n    <d-table [enableMultiSelect]=\"true\" [enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\" [enableManualSort]=\"true\" (onSortChanged)=\"stepSortChanged($event)\" sortColumn=\"position\" [columns]=\"stepColumns\" [tags]=\"this.hubCache.hub.dexihTags\"\n        [dataObservable]=\"stepTableData\" (rowClick)='editDatalinkStep($event)'>\n        <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n            <d-button  iconClass=\"fa fa-magic\" (click)=\"updateDependencies(items)\" text=\"AutoSet Dependencies\"></d-button>\n            <d-button class=\"ml-1\" iconClass=\"fa fa-eraser\" (click)=\"clearDependencies(items)\" text=\"Clear Dependencies\"></d-button>\n            <d-button-delete class=\"ml-1\" (click)=\"deleteDatalinkSteps(items)\"></d-button-delete>\n        </ng-template>\n\n        <ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n            <d-button-edit class=\"mr-1\" (click)=\"editDatalinkStep(item)\"></d-button-edit>\n        </ng-template>\n\n        <ng-template #actions select=\"actionsTemplate\" let-items=\"items\">\n            <d-button-new class=\"mr-1\" (click)=\"newDatalinkStep()\" title=\"Create a new step\"></d-button-new>\n            <d-button class=\"mr-1\" (click)=\"addDatalinkSteps()\" iconClass=\"fa fa-plus-square\" buttonClass=\"btn-primary\"\n                title=\"Select multiple datalinks to add as steps\">Add</d-button>\n        </ng-template>\n    </d-table>\n</d-widget-section>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HubService } from '../../../hub.service';\nimport { Observable, BehaviorSubject, Subscription, combineLatest} from 'rxjs';\nimport { FormGroup, FormArray, FormBuilder } from '@angular/forms';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubFormsService } from '../../../hub.forms.service';\nimport { HubCache, DexihInputParameter } from '../../../hub.models';\nimport { InputColumn, DexihDatalinkStep, DexihDatalinkStepColumn, DexihDatalinkDependency, InputParameterBase, eSharedObjectType } from '../../../../shared/shared.models';\n\n@Component({\n    selector: 'datajob-edit-step',\n    templateUrl: './datajob-edit-step.component.html'\n})\nexport class DatajobEditStepComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n    private _datalinkSubscription: Subscription;\n\n    public hubCache: HubCache;\n\n    private datalinkStepKey: number;\n    datajobKey: number;\n\n    datajobForm: FormGroup;\n\n    stepFormService: HubFormsService;\n    showAllErrors = false;\n\n    public inputColumns: InputColumn[];\n\n    stepColumns = [\n        { name: 'name', title: 'Name', format: '', tags: 'tags' },\n        { name: 'datalink', title: 'Datalink', format: '' },\n        { name: 'dependencies', title: 'Dependencies', format: '' },\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    private _stepTableData = new BehaviorSubject<Array<any>>(null);\n    stepTableData: Observable<Array<any>> = this._stepTableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private formService: HubFormsService,\n        private route: ActivatedRoute,\n        fb: FormBuilder) {\n        // create a separate formService instance to manage the copied form\n        this.stepFormService = new HubFormsService(fb, hubService, authService);\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.formService.getCurrentFormObservable(),\n            ).subscribe(result => {\n                let params = result[1];\n                this.hubCache = result[2];\n                let mainForm = result[3];\n\n                this.datalinkStepKey = +params['datalinkStepKey'];\n\n                if (mainForm) {\n                    this.datajobForm = mainForm;\n                    let step: DexihDatalinkStep;\n\n                    if (this.datalinkStepKey) {\n                        step = mainForm.value.dexihDatalinkSteps\n                            .find(c => c.key === this.datalinkStepKey);\n\n                        if (!step) {\n                            this.authService.navigateUp();\n                            return;\n                        }\n                    } else {\n                        step = new DexihDatalinkStep();\n                        // if new step, then set a temporary key of -1 or lower.\n                        let minKey = -1;\n                        this.datajobForm.value.dexihDatalinkSteps.forEach(t => {\n                            if (t.key <= minKey) {\n                                minKey = t.key - 1;\n                            }\n                        });\n                        step.key = minKey;\n                        this.datalinkStepKey = minKey;\n                    }\n\n                    const stepForm = this.stepFormService.datalinkStepFormGroup(mainForm, step);\n                    this.stepFormService.startForm(stepForm);\n                    this.updateSteps();\n\n                    this._datalinkSubscription = stepForm.controls.datalinkKey.valueChanges.subscribe(datalinkKey => {\n                        this.updateDatalinkStepColumns(datalinkKey);\n                    });\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datajob Edit Step');\n        }\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._datalinkSubscription) { this._datalinkSubscription.unsubscribe(); }\n    }\n\n    updateSteps() {\n        let stepData = [];\n        if (this.datajobForm.value.dexihDatalinkSteps) {\n            this.datajobForm.value.dexihDatalinkSteps.forEach(step => {\n                if (step.key !== this.stepFormService.currentForm.value.key) {\n                    let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === step.datalinkKey);\n                    stepData.push({\n                        key: step.key,\n                        name: step.name,\n                        datalink: datalink ? datalink.name : 'Not specified',\n                        tags: this.hubCache.getObjectTags(eSharedObjectType.Datalink, datalink.key),\n                        dependencies: '',\n                        updateDate: step.updateDate\n                    });\n                }\n            });\n        }\n\n        this._stepTableData.next(stepData);\n    }\n\n    updateDatalinkStepColumns(datalinkKey: number) {\n\n        let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === datalinkKey);\n        let stepForm = <FormGroup>this.stepFormService.currentForm;\n        let stepParameters = <FormArray>stepForm.controls.parameters;\n\n        let currentParameters = <DexihInputParameter[]> stepParameters.value;\n        stepParameters.clear();\n\n        datalink.parameters.forEach(parameter => {\n            let currentParameter = currentParameters.find( c => c.name === parameter.name);\n            let newParameter = new InputParameterBase();\n            if (currentParameter) {\n                newParameter.name = currentParameter.name;\n                newParameter.value = currentParameter.value;\n            } else {\n                newParameter.name = parameter.name;\n                newParameter.value = parameter.value;\n            }\n            let newFormParameter = this.formService.parameter(newParameter);\n            stepParameters.push(newFormParameter);\n        });\n\n\n\n        let stepColumnsForm = <FormArray>stepForm.controls.dexihDatalinkStepColumns;\n        let stepColumns = <DexihDatalinkStepColumn[]> stepColumnsForm.value;\n\n        while (stepColumnsForm.length !== 0) {\n            stepColumnsForm.removeAt(0)\n        }\n\n        let inputColumns = datalink.sourceDatalinkTable.dexihDatalinkColumns.filter(c => c.isInput);\n\n        inputColumns.forEach(col => {\n            let stepColumn = stepColumns.find(c => c.name === col.name);\n            if (!stepColumn) {\n                stepColumn = new DexihDatalinkStepColumn();\n                stepColumn.defaultValue = col.defaultValue;\n            }\n            stepColumn.dataType = col.dataType;\n            stepColumn.name = col.name;\n            stepColumn.logicalName = col.logicalName;\n            stepColumn.columnGroup = col.columnGroup;\n            stepColumn.rank = col.rank;\n            stepColumn.maxLength = col.maxLength;\n            stepColumn.deltaType = col.deltaType;\n            stepColumn.allowDbNull = col.allowDbNull;\n            stepColumn.isUnicode = col.isUnicode;\n            stepColumn.isValid = true;\n\n            let stepColumnForm = this.formService.datalinkStepColumnFormGroup(stepColumn);\n            stepColumnsForm.push(stepColumnForm);\n        });\n\n        if (!stepForm.controls.name.value) {\n            stepForm.controls.name.setValue(datalink.name);\n        }\n    }\n\n    dependentStepsChange(items) {\n        let datalinkDependencies = <FormArray>this.stepFormService.currentForm.controls.dexihDatalinkDependencies;\n        let minKey = -1;\n        if (datalinkDependencies) {\n            datalinkDependencies.controls.forEach(dep => {\n                if (dep.valid['key'] <= minKey) {\n                    minKey = dep['key'] - 1;\n                }\n            });\n        }\n\n        while (datalinkDependencies.length > 0) {\n            datalinkDependencies.removeAt(0);\n        }\n\n        items.forEach(newDep => {\n            let oldDep = datalinkDependencies ?\n                datalinkDependencies.controls.find(c => c.value.datalinkStepKey === newDep.datalinkStepKey)\n                : null;\n            if (oldDep) {\n                datalinkDependencies.push(oldDep);\n            } else {\n                let dep = new DexihDatalinkDependency();\n                dep.key = minKey;\n                dep.datalinkStepKey = this.datalinkStepKey;\n                dep.dependentDatalinkStepKey = newDep.key;\n                datalinkDependencies.push(this.stepFormService.datalinkDependencyFormGroup(dep));\n                minKey--;\n            }\n        });\n\n        this.stepFormService.hasChanged = true;\n    }\n\n    cancel() {\n        this.authService.navigateUp();\n    }\n\n    applyExit() {\n        const stepForm = this.stepFormService.currentForm;\n        const stepsArray = <FormArray>this.datajobForm.controls.dexihDatalinkSteps;\n\n        const index = stepsArray.controls\n            .findIndex(c => c.value.key === stepForm.value.key && c.value.isValid);\n\n        if (index < 0) {\n            stepsArray.push(stepForm);\n        } else {\n            stepsArray.removeAt(index);\n            stepsArray.insert(index, stepForm);\n        }\n\n        this.authService.navigateUp();\n    }\n}\n","<d-widget-section *ngIf=\"stepFormService.currentForm\" title=\"Add Datalink Step\" [showExpandButton]=\"false\">\n\t<ng-template #header>\n\t\t<d-button-apply class=\"mr-1\" [disabled]=\"!stepFormService.hasChanged\" (click)=\"applyExit()\">\n\t\t</d-button-apply>\n\t\t<d-button-cancel (click)=\"cancel()\"></d-button-cancel>\n\t</ng-template>\n\t<form [formGroup]=\"stepFormService.currentForm\">\n\t\t<fieldset>\n\t\t\t<section>\n\t\t\t\t<form-input label=\"Data Step Name\" formControlName=\"name\" placeholder=\"Enter the step name.\"\n\t\t\t\t\t[autocapitalize]=\"true\" iconClass=\"fa fa-list\" [errors]=\"stepFormService.formErrors.name\"\n\t\t\t\t\tnote=\"Enter a name for the data step, blank will use datalink name.\">\n\t\t\t\t</form-input>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<form-select label=\"Data Link\" formControlName=\"datalinkKey\" [items]=\"hubCache.hub.dexihDatalinks\"\n\t\t\t\t\titemKey=\"key\" itemName=\"name\" [errors]=\"stepFormService.formErrors.datalinkKey\"\n\t\t\t\t\ticonClass=\"fa fa-database\">\n\t\t\t\t\t<datalink-edit-button [key]=\"stepFormService.currentForm.controls.datalinkKey.value\"></datalink-edit-button>\n\t\t\t\t</form-select>\n\t\t\t</section>\n\t\t</fieldset>\n\n\t\t<div class=\"d-flex flex-wrap pt-1\"\n\t\t\t*ngIf=\"stepFormService.currentForm.controls.dexihDatalinkStepColumns.controls.length > 0\">\n\t\t\t<div>\n\t\t\t\tInput Values\n\t\t\t</div>\n\n\t\t\t<span\n\t\t\t\t*ngFor=\"let column of stepFormService.currentForm.controls.dexihDatalinkStepColumns.controls; let i = index\"\n\t\t\t\tclass=\"input-group\">\n\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t<div class=\"input-group-text\">\n\t\t\t\t\t\t{{column.value.logicalName}}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<form-input class=\"form-control p-0\" [placeholder]=\"column.value.logicalName\" [autocapitalize]=\"true\"\n\t\t\t\t\t[formControl]=\"column.controls.defaultValue\"></form-input>\n\t\t\t</span>\n\t\t</div>\n\t</form>\n</d-widget-section>\n\n<d-widget-section *ngIf=\"stepFormService.currentForm\" title=\"Parameters\" [showExpandButton]=\"true\" [padding]=\"false\" [padding]=\"true\">\n\t<input-parameters [showEdit]=\"true\" [parameters]=\"stepFormService.currentForm.controls.parameters\" [formsService]=\"formService\" [parentParameters]=\"formService.currentForm.controls.parameters.value\">\n\t</input-parameters>\n</d-widget-section>\n\n<d-widget-section *ngIf=\"stepFormService.currentForm\" title=\"Dependent Steps\" [showExpandButton]=\"false\"\n\t[padding]=\"false\">\n\t<d-table *ngIf=\"stepFormService.currentForm\" [enableMultiSelect]=\"true\" [columns]=\"stepColumns\"\n\t\t[dataObservable]=\"stepTableData\" [(selectedItems)]=\"stepFormService.currentForm.value.dexihDatalinkDependencies\"\n\t\t(onSelectedChange)=\"dependentStepsChange($event)\" keyColumn=\"key\" selectedKeyColumn=\"dependentDatalinkStepKey\" [tags]=\"this.hubCache.hub.dexihTags\">\n\t</d-table>\n</d-widget-section>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubService } from '../../../hub.service';\nimport { Observable, BehaviorSubject, Subscription, combineLatest} from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubFormsService } from '../../../hub.forms.service';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { HubCache } from '../../../hub.models';\nimport { DexihDatalink, eSharedObjectType, DexihDatalinkStep, eDatalinkType } from '../../../../shared/shared.models';\n\n@Component({\n    selector: 'datajob-add-steps',\n    templateUrl: './datajob-add-steps.component.html'\n})\nexport class DatajobAddStepsComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n\n    public hubCache: HubCache;\n\n    hasChanged = false;\n\n    columns = [\n        { name: 'name', title: 'Name', format: '', tags: 'tags' },\n        { name: 'datalinkType', title: 'Datalink Type', enum: eDatalinkType, format: 'Enum' },\n        { name: 'sourceTableName', title: 'Source Table', format: '' },\n        { name: 'targetTableName', title: 'Target Table', format: '' },\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n  public mainForm: FormGroup;\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private formService: HubFormsService,\n        private route: ActivatedRoute,\n        private router: Router) { }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.formService.getCurrentFormObservable()\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n                this.mainForm = result[3];\n\n                this.updateDatalinks();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Index');\n        }\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n    }\n\n    changeEvent($event) {\n        this.hasChanged = true;\n    }\n\n    private updateDatalinks() {\n        let newDatalinks: Array<DexihDatalink>;\n        if (this.hubCache) {\n            if (!this.hubCache.hub.dexihDatalinks) {\n                this._tableData.next(new Array<DexihDatalink>());\n            } else {\n                let datalinks = this.hubCache.hub.dexihDatalinks.map(d => {\n                    let sourceTable = this.hubCache.getTable(d.sourceDatalinkTable.sourceTableKey);\n                    return {\n                        key: d.key,\n                        name: d.name,\n                        datalinkType: d.datalinkType,\n                        sourceTableName: sourceTable ? sourceTable.name : 'No source table',\n                        targetTableName:  d.dexihDatalinkTargets.map(target => {\n                            let table = this.hubCache.getTable(target.tableKey);\n                            if (table) {\n                                return table.name;\n                            }\n                        }).join(', '),\n                        updateDate: d.updateDate,\n                        tags: this.hubCache.getObjectTags(eSharedObjectType.Datalink, d.key),\n                    };\n                });\n\n                this._tableData.next(datalinks);\n            }\n        }\n\n    }\n\n    watchChanges() {\n        // watch the current connection in case it is changed in another session.\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n            if (hubCacheChange.changeClass === eSharedObjectType.Datalink) {\n                this.updateDatalinks();\n            }\n        });\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    addSelected(items: Array<DexihDatalink>) {\n        let existingDatalinks = new Array<string>();\n        let formDexihDatalinkSteps = this.mainForm.value.dexihDatalinkSteps;\n        items.forEach(item => {\n            let exists = formDexihDatalinkSteps.find(c => c.datalinkKey === item.key);\n            if (exists) {\n                existingDatalinks.push(item.name);\n            }\n        });\n\n        if (existingDatalinks.length > 0) {\n            let names = existingDatalinks.join(', ');\n            this.authService.confirmDialog('Warning duplicate datalinks',\n            'The following datalinks already exist as steps within the job.  ' + names +\n            '.<br />Are you sure you want these datalinks added to the job').then( confirm => {\n                if (confirm) {\n                this.addSelectedConfirmed(items);\n                }\n            }).catch(reason => {});\n        } else {\n            this.addSelectedConfirmed(items);\n        }\n\n    }\n\n    addSelectedConfirmed(items: Array<DexihDatalink>) {\n        let formDexihDatalinkSteps = <Array<DexihDatalinkStep>> this.mainForm.value.dexihDatalinkSteps;\n\n        let minKey = -1;\n        formDexihDatalinkSteps.forEach(t => {\n            if (t.key <= minKey) {\n                minKey = t.key - 1;\n            }\n        });\n\n        let stepsArray = (<FormArray>this.mainForm.controls['dexihDatalinkSteps']);\n\n        items.forEach(datalink => {\n            let newDatalinkStep = new DexihDatalinkStep();\n            newDatalinkStep.name = datalink.name;\n            // ensure the name is unique by appending a count to the end.\n            let i = 0;\n            while (true) {\n                if (!formDexihDatalinkSteps.find(c => c.name === newDatalinkStep.name)) {\n                    break;\n                }\n                newDatalinkStep.name = datalink.name + '_' + i.toString();\n                i++;\n            }\n            newDatalinkStep.key = minKey;\n            newDatalinkStep.datalinkKey = datalink.key;\n            newDatalinkStep.datajobKey = this.mainForm.value.key;\n            newDatalinkStep.isValid = true;\n\n            let stepFormGroup = this.formService.datalinkStepFormGroup(this.mainForm, newDatalinkStep);\n            stepsArray.push(stepFormGroup);\n\n            minKey--;\n        });\n\n        this.authService.navigateUp();\n    }\n}\n","<d-widget-section title=\"Add Datalinks to Job\" [showExpandButton]=\"false\" [padding]=\"false\">\n\t<ng-template #header>\n\t\t<d-button-close (click)=\"close()\"></d-button-close>\n\t</ng-template>\n\t<d-table [enableMultiSelect]=\"true\" [columns]=\"columns\" [dataObservable]=\"tableData\" [tags]=\"this.hubCache.hub.dexihTags\">\n\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t<d-button (click)=\"addSelected(items)\" iconClass=\"fa fa-plus\" buttonClass=\"btn-primary\"\n\t\t\t\ttitle=\"Add selected datalinks to the job\">Add</d-button>\n\t\t</ng-template>\n\n\t</d-table>\n</d-widget-section>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable ,  Subscription, combineLatest} from 'rxjs';\nimport { Location } from '@angular/common';\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubFormsService } from '../../../hub.forms.service';\nimport { HubService } from '../../../hub.service';\nimport { DexihTrigger } from '../../../../shared/shared.models';\n\n@Component({\n  selector: 'datajob-edit-trigger',\n  templateUrl: './datajob-edit-trigger.component.html'\n})\nexport class DatajobEditTriggerComponent implements OnInit, OnDestroy {\n  public pageTitle: string;\n  public action: string;\n\n  private _subscription: Subscription;\n\n  triggerFormService: HubFormsService;\n  triggerKey: number;\n  datajobKey: number;\n\n  originalTrigger: DexihTrigger;\n\n  mainForm: FormGroup;\n\n  constructor(\n    private authService: AuthService,\n    private hubService: HubService,\n    private formService: HubFormsService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private fb: FormBuilder) {\n\n    // create a seperate formService instance to manage the copied form\n    this.triggerFormService = new HubFormsService(fb, hubService, authService);\n  }\n\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.formService.getCurrentFormObservable(),\n      ).subscribe(result => {\n        let data = result[0];\n        let params = result[1];\n        this.mainForm = result[2];\n\n        if (!this.mainForm) { return; }\n\n        this.pageTitle = data['pageTitle'];\n        this.action = data['action'];\n\n        this.triggerKey = +params['triggerKey'];\n\n        let triggerForm: FormGroup;\n\n        if (this.triggerKey) {\n          this.originalTrigger = this.mainForm.value.dexihTriggers.find(c => c.key === this.triggerKey);\n          if (!this.originalTrigger) {\n            this.authService.navigateUp();\n            return;\n          }\n          triggerForm = this.triggerFormService.triggerFormGroup(this.originalTrigger);\n        } else {\n          let trigger = new DexihTrigger();\n          // if new trigger, then set a temporary key of -1 or lower.\n          let minKey = -1;\n          this.mainForm.value.dexihTriggers.forEach(t => {\n            if (t.key <= minKey) {\n              minKey = t.key - 1;\n            }\n          });\n          trigger.key = minKey;\n          triggerForm = this.triggerFormService.triggerFormGroup(trigger);\n        }\n        this.triggerFormService.startForm(triggerForm);\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Datajob Edit Trigger');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n  }\n\n  cancel() {\n    this.authService.navigateUp();\n  }\n\n  applyExit() {\n    const triggerForm = this.triggerFormService.currentForm;\n    const triggersArray = <FormArray>this.mainForm.controls.dexihTriggers;\n\n    if (!this.originalTrigger) {\n      triggersArray.push(triggerForm);\n    } else {\n      const originalTrigger = triggersArray.controls.find(c => c.value.key === triggerForm.value.key);\n      originalTrigger.setValue(triggerForm.value);\n    }\n\n    this.authService.navigateUp();\n  }\n}\n\n","<d-widget-section *ngIf=\"triggerFormService.currentForm\" title=\"Edit Trigger\" [showExpandButton]=\"false\" >\n\t<ng-template #header>\n\t\t\t<d-button-apply [disabled]=\"!triggerFormService.hasChanged\" class=\"mr-1\" (click)=\"applyExit()\"></d-button-apply>\n\t\t\t<d-button-cancel (click)=\"cancel()\"></d-button-cancel>\n\t</ng-template>\n\t<form  [formGroup]=\"triggerFormService.currentForm\">\n\t\t<fieldset>\n\t\t\t<div class=\"form-row\">\n\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t<form-date label=\"Start Date\" formControlName=\"startDate\" [errors]=\"triggerFormService.formErrors.startDate\" note=\"This is the date that the trigger will start.  Leave blank for immediate start.\">\n\t\t\t\t\t</form-date>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t\t<div class=\"form-row\">\n\t\t\t\t<section class=\"form-group col-md-3\">\n\t\t\t\t\t<form-time label=\"Interval\" [disableNative]=\"true\" formControlName=\"intervalTime\" [errors]=\"triggerFormService.formErrors.intervalTime\"\n\t\t\t\t\t note=\"The intra-day interval which the trigger restarts.  Leave blank for once a day jobs.\">\n\t\t\t\t\t</form-time>\n\t\t\t\t</section>\n\t\t\t\t<section class=\"form-group col-md-3\">\n\t\t\t\t\t<form-input type=\"number\" label=\"Max Recurrences\" formControlName=\"maxRecurs\" placeholder=\"Enter the max recurrences\"\n\t\t\t\t\t iconClass=\"fa fa-refresh\" [errors]=\"triggerFormService.formErrors.maxRecurs\" note=\" The maximum number of times job can recur in one day.\">\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\t\t\t\t<section class=\"form-group col-md-3\">\n\t\t\t\t\t<form-time label=\"Start Time\" formControlName=\"startTime\" [errors]=\"triggerFormService.formErrors.startTime\" note=\"Time of the day the job will activate.\">\n\t\t\t\t\t</form-time>\n\t\t\t\t</section>\n\t\t\t\t<section class=\"form-group col-md-3\">\n\t\t\t\t\t<form-time label=\"End Time\" formControlName=\"endTime\" [errors]=\"triggerFormService.formErrors.endTime\" note=\"Time of the day the triggers will deactivate.\">\n\t\t\t\t\t</form-time>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t\t<section>\n\t\t\t\t<daysofweek label=\"Days of the week\" formControlName=\"daysOfWeek\" note=\" The days of the week the trigger is valid.\">\n\t\t\t\t</daysofweek>\n\t\t\t</section>\n\t\t\t<div class=\"form-row\">\n\n\t\t</div>\n\t\t</fieldset>\n\t</form>\n</d-widget-section>","import { Component, forwardRef, Input, AfterViewInit, ChangeDetectorRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { eDayOfWeek } from '../../../../shared/shared.models';\n\n@Component({\n    selector: 'daysofweek',\n    templateUrl: './dexih-form-daysofweek.component.html',\n    providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => DexihFormDaysOfWeekComponent), multi: true }]\n})\nexport class DexihFormDaysOfWeekComponent implements ControlValueAccessor, AfterViewInit {\n    @Input() label: string;\n    @Input() labelLeft: string;\n    @Input() note: string;\n    @Input() errors: string;\n    @Input() value: eDayOfWeek[];\n\n    eDayOfWeek = eDayOfWeek;\n    daysOfWeek = new Array<Boolean>(7);\n    id = 'input_' + Math.random().toString(36).substr(2, 9);\n\n    onChange: any = () => { };\n    onTouched: any = () => { };\n\n    constructor(private _changeDetectionRef: ChangeDetectorRef) {\n\n    }\n\n    ngAfterViewInit()  {\n        if (this.value) {\n            this.value.forEach(value => {\n                switch (value) {\n                    case eDayOfWeek.Sunday: this.daysOfWeek[0] = true; break;\n                    case eDayOfWeek.Monday: this.daysOfWeek[1] = true; break;\n                    case eDayOfWeek.Tuesday: this.daysOfWeek[2] = true; break;\n                    case eDayOfWeek.Wednesday: this.daysOfWeek[3] = true; break;\n                    case eDayOfWeek.Thursday: this.daysOfWeek[4] = true; break;\n                    case eDayOfWeek.Friday: this.daysOfWeek[5] = true; break;\n                    case eDayOfWeek.Saturday: this.daysOfWeek[6] = true; break;\n                }\n            });\n        }\n\n        // workaround for change detection required when using Afterview Init https://github.com/angular/angular/issues/6005\n        this._changeDetectionRef.detectChanges();\n    }\n\n    hasChanged($event: any) {\n        let daysOfWeek = new Array<eDayOfWeek>();\n        if (this.daysOfWeek[0]) { daysOfWeek.push(eDayOfWeek.Sunday); }\n        if (this.daysOfWeek[1]) { daysOfWeek.push(eDayOfWeek.Monday); }\n        if (this.daysOfWeek[2]) { daysOfWeek.push(eDayOfWeek.Tuesday); }\n        if (this.daysOfWeek[3]) { daysOfWeek.push(eDayOfWeek.Wednesday); }\n        if (this.daysOfWeek[4]) { daysOfWeek.push(eDayOfWeek.Thursday); }\n        if (this.daysOfWeek[5]) { daysOfWeek.push(eDayOfWeek.Friday); }\n        if (this.daysOfWeek[6]) { daysOfWeek.push(eDayOfWeek.Saturday); }\n\n        this.value = daysOfWeek;\n\n        this.onChange(this.value);\n        this.onTouched();\n    }\n\n    registerOnChange(fn: any) {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    writeValue(value: any) {\n        if (value) {\n            this.value = value;\n        }\n    }\n\n    selectWeekend() {\n      this.daysOfWeek[0] = true;\n      this.daysOfWeek[1] = false;\n      this.daysOfWeek[2] = false;\n      this.daysOfWeek[3] = false;\n      this.daysOfWeek[4] = false;\n      this.daysOfWeek[5] = false;\n      this.daysOfWeek[6] = true;\n      this.hasChanged(null);\n  }\n\n  selectWeekDays() {\n      this.daysOfWeek[0] = false;\n      this.daysOfWeek[1] = true;\n      this.daysOfWeek[2] = true;\n      this.daysOfWeek[3] = true;\n      this.daysOfWeek[4] = true;\n      this.daysOfWeek[5] = true;\n      this.daysOfWeek[6] = false;\n      this.hasChanged(null);\n  }\n\n    selectAllDays() {\n      this.daysOfWeek[0] = true;\n      this.daysOfWeek[1] = true;\n      this.daysOfWeek[2] = true;\n      this.daysOfWeek[3] = true;\n      this.daysOfWeek[4] = true;\n      this.daysOfWeek[5] = true;\n      this.daysOfWeek[6] = true;\n      this.hasChanged(null);\n  }\n\n    selectNoDays() {\n      this.daysOfWeek[0] = false;\n      this.daysOfWeek[1] = false;\n      this.daysOfWeek[2] = false;\n      this.daysOfWeek[3] = false;\n      this.daysOfWeek[4] = false;\n      this.daysOfWeek[5] = false;\n      this.daysOfWeek[6] = false;\n      this.hasChanged(null);\n    }\n}\n","<div class=\"form-group\">\n    <label [for]=\"id\" class=\"mt-1\">{{label}}\n        <div class=\"input-group\">\n            <div class=\"input-group-prepend\">\n                <a class=\"btn btn-outline-primary btn-sm\" (click)=\"selectAllDays()\">All</a>\n                <a class=\"btn btn-outline-primary btn-sm\" (click)=\"selectNoDays()\">None</a>\n                <a class=\"btn btn-outline-primary btn-sm\" (click)=\"selectWeekend()\">Weekend</a>\n            </div>\n            <div class=\"input-group-append\">\n                <a class=\"btn btn-outline-primary btn-sm\" (click)=\"selectWeekDays()\">Weekdays</a>\n            </div>\n        </div>\n        <ng-content></ng-content>\n    </label>\n\n    <div class=\"input-group\">\n        <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\" type=\"checkbox\" [id]=\"id + '1'\" [(ngModel)]=\"daysOfWeek[0]\"\n                (ngModelChange)=\"hasChanged($event)\">\n            <label class=\"form-check-label\" [for]=\"id + '1'\">Sunday</label>\n        </div>\n        <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\" type=\"checkbox\" [id]=\"id + '2'\" [(ngModel)]=\"daysOfWeek[1]\"\n                (ngModelChange)=\"hasChanged($event)\">\n            <label class=\"form-check-label\" [for]=\"id + '2'\">Monday</label>\n        </div>\n        <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\" type=\"checkbox\" [id]=\"id + '3'\" [(ngModel)]=\"daysOfWeek[2]\"\n                (ngModelChange)=\"hasChanged($event)\">\n            <label class=\"form-check-label\" [for]=\"id + '3'\">Tuesday</label>\n        </div>\n        <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\" type=\"checkbox\" [id]=\"id + '4'\" [(ngModel)]=\"daysOfWeek[3]\"\n                (ngModelChange)=\"hasChanged($event)\">\n            <label class=\"form-check-label\" [for]=\"id + '4'\">Wednesday</label>\n        </div>\n        <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\" type=\"checkbox\" [id]=\"id + '5'\" [(ngModel)]=\"daysOfWeek[4]\"\n                (ngModelChange)=\"hasChanged($event)\">\n            <label class=\"form-check-label\" [for]=\"id + '5'\">Thursday</label>\n        </div>\n        <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\" type=\"checkbox\" [id]=\"id + '6'\" [(ngModel)]=\"daysOfWeek[5]\"\n                (ngModelChange)=\"hasChanged($event)\">\n            <label class=\"form-check-label\" [for]=\"id + '6'\">Friday</label>\n        </div>\n        <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\" type=\"checkbox\" [id]=\"id + '7'\" [(ngModel)]=\"daysOfWeek[6]\"\n                (ngModelChange)=\"hasChanged($event)\">\n            <label class=\"form-check-label\" [for]=\"id + '7'\">Saturday</label>\n        </div>\n\n    </div>\n    <div *ngIf=\"errors\" class=\"invalid-feedback d-block\">\n        {{ errors }}\n    </div>\n\n\n    <small *ngIf=\"note\" class=\"form-text text-muted\">\n        <markdown (click)=\"sharedFunctions.getRoute($event)\" [data]=\"note\"></markdown>\n    </small>\n</div>"],"sourceRoot":"webpack:///"}