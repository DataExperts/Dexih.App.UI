{"version":3,"sources":["webpack:///src/app/+hub/table/table-edit/table-edit-main.component.ts","webpack:///src/app/+hub/table/table-edit/table-edit-main.component.html","webpack:///src/app/+hub/table/table-edit/table-edit.module.ts","webpack:///src/app/+hub/table/table-edit/table-edit.component.html","webpack:///src/app/+hub/table/table-edit/table-edit.component.ts","webpack:///src/app/+hub/table/table-edit/table-edit.routing.ts","webpack:///src/app/+hub/table/table-edit/table-column-edit/table-column-edit.component.ts","webpack:///src/app/+hub/table/table-edit/table-column-edit/table-column-edit.component.html"],"names":["TableEditMainComponent","formsService","selector","templateUrl","TableEditModule","ngModule","providers","imports","declarations","exports","TableEditComponent","hubService","authService","route","router","eConnectionCategory","cancelToken","isLoaded","_subscription","data","params","getHubCacheObservable","subscribe","result","hubCache","action","pageTitle","status","Loaded","GetConnectionReference","connection","connectionReference","hasChanged","confirmDialog","then","confirm","load","reason","e","addHubClientErrorMessage","_hubCacheChangeSubscription","unsubscribe","_formChangeSubscription","cancel","ngOnDestroy","tableKey","addHubErrorMessage","hub","dexihDatajobs","table","getTable","getConnection","connectionKey","newTable","key","getCurrentFormObservable","tableForm","controls","value","history","pushState","newUrl","window","location","pathname","replace","navigateByUrl","navigateUp","tables","createPaths","currentForm","addHubSuccessMessage","Promise","resolve","$event","returnValue","close","unloadNotification","tableEditRoutes","path","redirectTo","component","navigateSkip","routes","canDeactivate","children","Routing","forChild","TableColumnEditComponent","formService","detailedView","queryParams","columnKey","navigate","relativeTo","parent","isUpdated","changeColumn"],"mappings":"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","file":"1-es5.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubFormsService } from '../../hub.forms.service';\n\n@Component({\n  selector: 'dexih-table-edit-form',\n  templateUrl: './table-edit-main.component.html'\n})\nexport class TableEditMainComponent implements OnInit, OnDestroy {\n\n  constructor(\n    public formsService: HubFormsService,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n  }\n}\n","<dexih-table-edit-properties [formsService]='formsService'></dexih-table-edit-properties>\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routing } from './table-edit.routing';\nimport { TableEditComponent } from './table-edit.component';\nimport { TableEditMainComponent } from './table-edit-main.component';\nimport { HubSharedModule } from '../../hub.shared.module';\nimport { ItemEditGuard } from '../../item-edit.guard';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { TableColumnEditComponent } from './table-column-edit/table-column-edit.component';\nimport { TableSharedModule } from '../table.shared.module';\n\n@NgModule({\n    imports: [\n        SharedModule,\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        Routing,\n        HubSharedModule,\n        TableSharedModule\n    ],\n    declarations: [\n      TableEditComponent,\n      TableEditMainComponent,\n      TableColumnEditComponent,\n    ],\n    providers: [\n        HubFormsService,\n        ItemEditGuard\n        ],\n    exports: [\n    ]\n})\nexport class TableEditModule {\n    static forRoot(): ModuleWithProviders<TableEditModule> {\n        return {\n            ngModule: TableEditModule,\n            providers: [ HubFormsService ]\n        };\n    }\n}\n","\n<div class=\"container\">\n    <d-widget \n    [title]=\"'Edit Table ('  + formsService.currentForm?.controls?.name?.value +')'\" \n    iconClass=\"fa fa-lg fa-fw fa-table\" \n    [showCloseButton]=\"true\"\n    (close)=\"close()\"\n    >\n        <ng-template #header>\n            <dexih-invalid-form-details class=\"mr-1\" [control]=\"formsService.currentForm\" (click)=\"formsService.showErrors()\"></dexih-invalid-form-details>\n            <actions-table-button class=\"mr-1\" [showEdit]=\"false\" [tables]=\"this.formsService?.currentForm?.value ? [this.formsService?.currentForm?.value] : []\" (changedTables)=\"changedTables($event)\"></actions-table-button>\n            <d-button class=\"mr-1\" *ngIf=\"hubCache?.canWrite && connectionReference?.connectionCategory == eConnectionCategory.File\" \n            (click)=\"createPaths()\" title=\"Create the file paths (or folders).\" iconClass=\"fa fa-folder-open\" buttonClass='btn-primary'>\n                Create Paths\n            </d-button>\n            <save-button class=\"mr-1\" *ngIf=\"hubCache?.canWrite\" [formsService]=\"formsService\"></save-button>\n            <cancel-button [formsService]=\"formsService\"></cancel-button>\n        </ng-template>\n\n        <div>\n        <router-outlet></router-outlet>\n    </div>\n    </d-widget>\n</div>\n\n\n","import { HostListener, Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { DexihConnection, eConnectionCategory, DexihTable, ConnectionReference } from '../../../shared/shared.models';\nimport { HubCache, eCacheStatus } from '../../hub.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n  selector: 'dexih-table-edit-form',\n  templateUrl: './table-edit.component.html'\n})\nexport class TableEditComponent implements OnInit, OnDestroy {\n  public tableKey: number;\n  public connectionKey: number;\n  public connection: DexihConnection;\n\n  eConnectionCategory = eConnectionCategory;\n\n  public hubCache: HubCache;\n  public action: string; // new or edit\n  public pageTitle: string;\n  public params: Params;\n\n  public cancelToken: CancelToken = new CancelToken();\n\n  private _subscription: Subscription;\n  private _hubCacheChangeSubscription: Subscription;\n  private _formChangeSubscription: Subscription;\n  private isLoaded = false;\n  public connectionReference: ConnectionReference;\n\n  constructor(private hubService: HubService,\n    public formsService: HubFormsService,\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router: Router) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n      ).subscribe(async result => {\n        let data = result[0];\n        this.params = result[1];\n        this.hubCache = result[2];\n\n        this.action = data['action'];\n        this.pageTitle = data['pageTitle'];\n\n        if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded ) { return; }\n\n        if (this.isLoaded && this.action === 'new') { return; }\n\n        this.connectionReference = await this.hubService.GetConnectionReference(this.connection);\n\n        if (this.isLoaded && this.formsService.hasChanged) {\n            this.authService.confirmDialog('Synchronization warning',\n            'The hub was disconnected, meaning this edit could have been changed by another session.  Would you like to discard the current changes, and reload the latest version?')\n            .then(confirm => {\n                if (confirm) {\n                    this.load();\n                }\n            }).catch(reason => {\n                return;\n            });\n        } else {\n            this.load();\n        }\n\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Table Edit');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n    if (this._formChangeSubscription) { this._formChangeSubscription.unsubscribe(); }\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    this.cancelToken.cancel();\n\n    // shut down service\n    this.formsService.ngOnDestroy();\n  }\n\n  load() {\n    this.isLoaded = true;\n\n    if (this.action === 'edit') {\n      // get the hub key from the route data, and update the service.\n      this.tableKey = + this.params['tableKey'];\n\n      if (!this.tableKey) {\n        this.hubService.addHubErrorMessage('There was no table specified to edit.');\n      } else {\n        if (!this.hubCache.hub || !this.hubCache.hub.dexihDatajobs) {\n          this.hubService.addHubErrorMessage('The hub cache is not loaded.');\n        } else {\n\n          let table = this.hubCache.getTable(this.tableKey);\n          if (!table) {\n            this.hubService.addHubErrorMessage('The specified table could not be found.');\n          } else {\n            this.connection = this.hubCache.getConnection(table.connectionKey);\n            this.formsService.table(table);\n          }\n        }\n      }\n    }\n\n    if (this.action === 'new') {\n      let table: DexihTable;\n      if (this.hubService.newTable) {\n        table = this.hubService.newTable;\n        this.hubService.newTable = null;\n      } else {\n        this.connectionKey = + this.params['connectionKey'];\n\n        table = new DexihTable();\n        table.key = 0;\n        table.connectionKey = this.connectionKey;\n      }\n      this.formsService.table(table);\n\n      // update the url with the saved key\n      this._formChangeSubscription = this.formsService.getCurrentFormObservable().subscribe(tableForm => {\n        let key = tableForm.controls.key.value;\n        if (key) {\n          if (history.pushState) {\n            let newUrl = window.location.pathname.replace('/table-new', `/table-edit/${key}`)\n            this.router.navigateByUrl(newUrl);\n            this._formChangeSubscription.unsubscribe();\n          }\n        }\n      });\n    }\n  }\n\n  close() {\n    this.authService.navigateUp();\n  }\n\n  changedTables(tables) {\n    this.formsService.table(tables[0]);\n  }\n\n  createPaths() {\n    this.hubService.createPaths(this.formsService.currentForm.value, this.cancelToken).then(() => {\n      this.hubService.addHubSuccessMessage('The paths have been created.');\n    }).catch();\n  }\n\n\n  public canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>((resolve) => {\n      if (this.formsService.hasChanged) {\n        this.authService.confirmDialog('The table has not been saved',\n          'The table changes have not been saved.  Do you want to discard the changes and exit?')\n          .then((confirm) => {\n              resolve(confirm);\n            }).catch(() => {\n              resolve(false);\n            });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  // @HostListener allows is to guard against browser refresh, close, etc.\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.formsService.hasChanged) {\n      $event.returnValue = 'The table changes have not been saved.  Do you want to discard the changes and exit?';\n    }\n  }\n}\n","import { Routes, RouterModule } from '@angular/router';\nimport { TableEditComponent } from './table-edit.component';\nimport { TableColumnEditComponent } from './table-column-edit/table-column-edit.component';\nimport { ItemEditGuard } from '../../item-edit.guard';\nimport { TableEditPreviewDataComponent } from './table-edit-preview-data';\nimport { TableEditMainComponent } from './table-edit-main.component';\nimport { FileFormatEditComponent } from '../../fileFormat';\n\nexport const tableEditRoutes = [\n        { path: '', redirectTo: 'properties'},\n        { path: 'properties', component: TableEditMainComponent,  data: { navigateSkip: true} },\n        { path: 'column', component: TableColumnEditComponent, data: { pageTitle: 'Edit Column' } },\n        { path: 'column/:columnKey', component: TableColumnEditComponent, data: { pageTitle: 'Edit Column' } },\n        { path: 'table-preview/:tableKey', component: TableEditPreviewDataComponent, data: { pageTitle: 'Preview' } },\n        { path: 'fileFormat-new', component: FileFormatEditComponent, data: { action: 'new', pageTitle: 'New File Format'}},\n];\n\nexport const routes: Routes = [\n        { path: '', component: TableEditComponent, canDeactivate: [ItemEditGuard], children: tableEditRoutes},\n];\n\nexport const Routing = RouterModule.forChild(routes);\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubService } from '../../../hub.service';\nimport { Location } from '@angular/common';\nimport { FormGroup } from '@angular/forms';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { HubFormsService } from '../../../hub.forms.service';\n\n@Component({\n    selector: 'dexih-table-column-edit',\n    templateUrl: './table-column-edit.component.html',\n})\nexport class TableColumnEditComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n\n    public tableForm: FormGroup;\n    public columnKey: number;\n    public detailedView = true;\n\n    public pageTitle: string;\n    public action: string;\n\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        public formService: HubFormsService,\n        private route: ActivatedRoute,\n        private router: Router        ) {\n    }\n\n    ngOnInit() {\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.route.queryParams,\n                this.formService.getCurrentFormObservable()\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                let queryParams = result[2];\n                this.tableForm = result[3];\n\n                this.pageTitle = data['pageTitle'];\n                this.action = data['action'];\n\n                this.columnKey = +params['columnKey'];\n                this.detailedView = queryParams['detailed'] === 'false' ? false : true;\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Table Column Edit');\n        }\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    isUpdated() {\n        this.authService.navigateUp();\n    }\n\n    changeColumn(columnKey: number) {\n        this.router.navigate(['column', columnKey], {relativeTo: this.route.parent});\n    }\n\n}\n","<column-edit [tableForm]=\"tableForm\" [columnKey]=\"columnKey\" [detailedView]=\"detailedView\" (isUpdated)=\"isUpdated()\" (changeColumn)=\"changeColumn($event)\"></column-edit>\n\n "]}