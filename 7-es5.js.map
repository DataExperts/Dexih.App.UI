{"version":3,"sources":["webpack:///src/app/+hub/datalink/datalink-edit/custom-function-edit/custom-function-edit.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/custom-function-edit/custom-function-edit.component.html","webpack:///src/app/+hub/datalink/datalink-edit/custom-function-edit/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/datalink-column-edit/datalink-column-edit.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/datalink-column-edit/datalink-column-edit.component.html","webpack:///src/app/+hub/datalink/datalink-edit/datalink-edit-guard.ts","webpack:///src/app/+hub/datalink/datalink-edit/datalink-edit.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/datalink-edit.component.html","webpack:///src/app/+hub/datalink/datalink-edit/datalink-edit.module.ts","webpack:///src/app/+hub/datalink/datalink-edit/datalink-edit.routing.ts","webpack:///src/app/+hub/datalink/datalink-edit/datalink-edit.service.ts","webpack:///src/app/+hub/datalink/datalink-edit/datalink-table/datalink-table.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/datalink-table/datalink-table.component.html","webpack:///src/app/+hub/datalink/datalink-edit/input-columns/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/input-columns/input-column.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/input-columns/input-column.component.html","webpack:///src/app/+hub/datalink/datalink-edit/input-columns/input-columns.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/input-columns/input-columns.component.html","webpack:///src/app/+hub/datalink/datalink-edit/join-columns/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/join-columns/join-column.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/join-columns/join-column.component.html","webpack:///src/app/+hub/datalink/datalink-edit/join-columns/join-columns.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/join-columns/join-columns.component.html","webpack:///src/app/+hub/datalink/datalink-edit/mapping-edit/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/mapping-edit/mapping-edit.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/mapping-edit/mapping-edit.component.html","webpack:///src/app/+hub/datalink/datalink-edit/mapping/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/mapping/mapping-item.component.html","webpack:///src/app/+hub/datalink/datalink-edit/mapping/mapping-item.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/mapping/mapping.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/mapping/mapping.component.html","webpack:///src/app/+hub/datalink/datalink-edit/new-transform/datalink-edit-new-transform.component.html","webpack:///src/app/+hub/datalink/datalink-edit/new-transform/datalink-edit-new-transform.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/output-columns/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/output-columns/output-column.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/output-columns/output-column.component.html","webpack:///src/app/+hub/datalink/datalink-edit/output-columns/output-columns.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/output-columns/output-columns.component.html","webpack:///src/app/+hub/datalink/datalink-edit/parameters/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/parameters/input-parameter.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/parameters/input-parameter.component.html","webpack:///src/app/+hub/datalink/datalink-edit/parameters/output-parameter.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/parameters/output-parameter.component.html","webpack:///src/app/+hub/datalink/datalink-edit/preview-data/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/preview-data/preview-data.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/preview-data/preview-data.component.html","webpack:///src/app/+hub/datalink/datalink-edit/preview-table/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/preview-table/preview-table.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/preview-table/preview-table.component.html","webpack:///src/app/+hub/datalink/datalink-edit/profile-rules/profile-rules.component.html","webpack:///src/app/+hub/datalink/datalink-edit/profile-rules/profile-rules.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/properties/datalink-edit-properties.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/properties/datalink-edit-properties.component.html","webpack:///src/app/+hub/datalink/datalink-edit/run-plan/datalink-run-plan.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/run-plan/datalink-run-plan.component.html","webpack:///src/app/+hub/datalink/datalink-edit/save-button/datalink-edit-save-button.component.html","webpack:///src/app/+hub/datalink/datalink-edit/save-button/datalink-edit-save-button.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/source-table/datalink-edit-source-table.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/source-table/datalink-edit-source-table.component.html","webpack:///src/app/+hub/datalink/datalink-edit/standard-function-edit/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/standard-function-edit/standard-function-edit.component.html","webpack:///src/app/+hub/datalink/datalink-edit/standard-function-edit/standard-function-edit.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/target-columns/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/target-columns/target-column.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/target-columns/target-column.component.html","webpack:///src/app/+hub/datalink/datalink-edit/target-columns/target-columns.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/target-columns/target-columns.component.html","webpack:///src/app/+hub/datalink/datalink-edit/target-table-column/target-table-column.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/target-table-column/target-table-column.component.html","webpack:///src/app/+hub/datalink/datalink-edit/target/datalink-edit-target-table.component.html","webpack:///src/app/+hub/datalink/datalink-edit/target/datalink-edit-target-table.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/target/datalink-edit-target.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/target/datalink-edit-target.component.html","webpack:///src/app/+hub/datalink/datalink-edit/transform-table-edit/transform-table-edit.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/transform-table-edit/transform-table-edit.component.html","webpack:///src/app/+hub/datalink/datalink-edit/transform/datalink-edit-transform.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/transform/datalink-edit-transform.component.html","webpack:///src/app/+hub/datalink/datalink-edit/transforms/datalink-edit-transforms.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/transforms/datalink-edit-transforms.component.html","webpack:///src/app/+hub/datalink/datalink-edit/unGroup-edit/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/unGroup-edit/unGroup-edit.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/unGroup-edit/unGroup-edit.component.html","webpack:///src/app/+hub/datalink/datalink-edit/validation/datalink-edit-validation.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/validation/datalink-edit-validation.component.html"],"names":["CustomFunctionEditComponent","hubService","authService","editDatalinkService","route","router","location","cancelToken","eFunctionType","eParameterDirection","eInvalidActionItems","filter","c","key","eErrorActionItems","inputParameters","outputParameters","inputParameterValues","outputParameterValues","_subscription","data","params","getHubCacheObservable","hubFormsService","getCurrentFormObservable","getRemoteLibrariesObservable","subscribe","result","pageTitle","hubCache","datalinkForm","functionType","Validate","datalinkTransformForm","getValidationTransform","datalinkTransformKey","value","getDatalinkTransform","datalinkTransformItemKey","nodeDatalinkColumn","controls","nodeDatalinkColumnKey","io","inputColumns","runTime","getAvailableColumns","outputColumns","transformColumns","datalinkTargets","dexihDatalinkTargets","datalinkTransformItemForm","getDatalinkTransformItem","newDatalinkTransformItemForm","datalinkDatalinkTransformItemFormGroup","navigateUp","newItem","transformItemType","CustomFunction","returnParameter","Condition","JoinCondition","dataType","Boolean","String","name","direction","ReturnValue","rank","position","datalinkColumn","isValid","funcParam","functionParameter","dexihFunctionParameters","Array","push","parameters","setParameters","_parametersSubscription","unsubscribe","valueChanges","p","_saveSubscription","savingDatalink","apply","e","addHubClientErrorMessage","_returnParameterSubscription","cancel","Promise","resolve","pristine","confirmDialog","then","confirm","reason","sort","a","b","Input","length","Output","returnParameterForm","find","parameter","newParameter","oldParameter","parametersArray","newParameterForm","datalinkFunctionParametersFormGroup","forEach","index","setValue","indexOf","removeAt","insertDatalinkTransformItem","markAsPristine","downloadCustomFunction","testCustomFunction","addHubSuccessMessage","returnParameterValue","addHubMessage","selector","templateUrl","columnFormService","DatalinkColumnEditComponent","fb","eTypeCode","typeCodes","deltaTypes","securityFlags","datalinkColumnKey","sourceDatalinkTableForm","currentForm","sourceDatalinkTable","initializeForm","applyExit","columnsArray","dexihDatalinkColumns","column","transformForms","dexihDatalinkTransforms","t","items","dexihDatalinkTransformItems","i","itemForm","targetDatalinkColumn","parameterIsOutput","arrayParameters","columnForm","originalColumnForm","findColumn","informationDialog","datalinkTableColumn","getNextSequence","datalinkTableKey","maxPos","col","startForm","markAsDirty","DatalinkEditGuard","component","canDeactivate","DatalinkEditComponent","logger","logCount","eTransformWriterMethod","isLoaded","showPage","showPageMessage","routerState","root","snapshot","firstChild","help","LogC","Trace","events","event","getHelp","action","status","Loaded","init","hasChanged","load","ngOnInit","_datalinkFormSubscription","ngOnDestroy","datalinkKey","Warning","addHubErrorMessage","datalink","originalDatalink","hub","dexihDatalinks","d","copyDatalink","CopyDatalink","datalinkType","Query","sourceType","Table","sourceTableKey","reBuildDatalinkTable","history","pushState","newUrl","window","pathname","replace","navigateByUrl","$event","returnValue","save","DatalinkEditModule","ngModule","providers","imports","declarations","exports","standardFunctionRoutes","path","customFunctionRoutes","mappingEditRoutes","datalinkEditRoutes","redirectTo","children","pathMatch","loadChildren","m","TableEditModule","breadCrumb","routes","navigateSkip","Routing","forChild","DatalinkEditService","showAllErrors","_hubCache","asObservable","datalinkTransforms","datalinkTransform","transformType","Validation","datalinkTransformItems","datalinkTransformItem","joinColumns","joinDatalinkTable","nodeColumns","getNodeColumns","fixMapping","joinSortDatalinkColumn","item","sourceDatalinkColumn","joinDatalinkColumn","filterDatalinkColumn","Join","arrayParameter","columns","nodes","Node","childColumns","concat","findIndex","inputColumn","columnGroup","Filter","Mapping","Map","Group","Aggregate","Series","Sort","Rows","Lookup","Delta","variables","map","dexihHubVariables","previousGroup","columnGroups","cols","group","datalinkTransformItemsArray","Math","max","o","form","currentIndex","fixMappings","datalinkTargetKey","transform","newDatalinkTransform","minKey","dt","transformAssemblyName","transformClassName","passThroughColumns","Concatenate","seriesItem","datalinkTransformFormGroup","resetDatalinkTransformPositions","GetUserConfigTransformReference","userConfigTransforms","transformReference","getDatalinkValue","cache","hubPostRemote","hubKey","remoteAgentId","getCurrentRemoteAgentId","datalinkTable","confirm2","doRebuildDatalinkTable","sourceTable","getTable","mergeDatalinkColumns","dexihTableColumns","Datalink","sourceDatalinkKey","buildInputOutput","datalinkColumns","transforms","rowDatalinkColumn","logicalName","Int32","isMandatory","description","groupName","newColumns","existingColumns","Object","keys","DatalinkTableComponent","datalinkEditService","eSourceType","sourceTypes","connectionTables","datalinks","isVersioned","errors","getFormErrorMessages","datalinkTableForm","subscribeDatalinkChanges","getConnectionTables","updateIsVersioned","table","_datalinkTableSubscription","refreshColumns","rowsEndAt","rowsStartAt","rowsIncrement","tableColumnsForm","InputColumnComponent","eMappingStatus","columnUsage","Transform","Target","NotMapped","mappingStatusImpact","createDatalinkImpact","mappingStatusInfoImpact","mappingStatusLineage","createDatalinkLineage","mappingStatusInfoLineage","InputColumnsComponent","_inputColumnsSubscribe","getColumnGroups","JoinColumnComponent","inputTables","inputJoinDrop","_hubCacheSubscription","lineageMappingStatus","impactMappingStatus","JoinColumnsComponent","eTransformType","updateTableData","_changesSubscription","joinTable","joinColumn","emit","MappingEditComponent","eTransformItemType","showInput","showOutput","eAggregate","eAggregateItems","compare","eCompare","sortDirections","getVariables","JoinPair","Column","JoinNode","GroupNode","FilterPair","AggregatePair","outputTables","target","filterValue","sourceValue","getErrors","_formChangesObserve","statusChanges","targetErrors","getErrorMessage","sourceErrors","joinErrors","current","newColumn","getHubCache","sourceColumn","copyDatalinkColumn","ValidValue","ValidParameter","ValidMapping","MappingItemComponent","updateMapping","transformItem","itemType","BuiltInFunction","UnGroup","functionClassName","GetFunctionReference","func","label","addBuiltInFunctionParameters","error","functionMethodName","customFunctionKey","dexihCustomFunctions","addCustomFunctionParameters","aggregate","sortDirection","addUnGroupParameters","useSource","source","columnOrValue","useTarget","describeDatalinkColumn","useJoin","useFilter","filterCompare","IsEqual","expectedDataType","text","describeStaticValue","valid","array","args","arg","functionInputs","resultInputParameters","functionOutputs","returnParameters","resultOutputParameters","resultReturnParameters","inputParams","ResultInput","linkedName","param","parameterName","describeParameterName","values","ap","outputParams","allowCondition","ResultReturnValue","linkedNames","from","Set","mapParameters","parameters2","findValidColumn","MappingComponent","allowStandard","allowMapping","allowAggregate","allowRow","allowValidation","allowOutput","allowGroup","allowJoin","allowSort","allowSeries","allowJoinNode","addMapping","removeMapping","onColumnDrop","_tableData","tableData","getFunctionType","inputDateColumns","DateTime","Date","filteredItems","ColumnPair","functionItem","next","getItemFormGroup","navigate","relativeTo","parent","deleteSelected","deleteDatalinkTransformItem","existingItems","outputColumn","childColumn","createMapping","validFrom","deltaType","ValidFromDate","validTo","ValidToDate","GreaterThanEqual","LessThan","editMapping","datalinkItemSortChange","newOutputDrop","DatalinkEditNewTransformComponent","icon","newDatalinkTransformForm","insertDatalinkTransform","OutputColumnComponent","inputOutputDrop","refreshStatus","AutoGenerate","Mapped","MappedToNothing","OutputColumnsComponent","allowMappingOutputs","_outputColumnsSubscribe","InputValues","InputParameterComponent","allowDataTypeSelect","allowNameSelect","allowAdd","allowRemove","inputParameterForms","updateParameterName","outputParameterForms","addParameter","removeParameter","eBasicType","inputColumnGroups","inputs","ignoreChanges","tables","inputParameter","undefined","staticValue","textItems","toString","listOfValues","updateItems","inputParameterSubscription","datalinkColumnSubscription","input","type","OutputParameterComponent","outputParameterForm","_datalinkColumnSubscription","_parameterSubscription","_dataTypeSubscription","allowDbNull","updateNewColumn","add","remove","PreviewDataComponent","eDataObjectType","getRemoteAgentObservable","PreviewTableComponent","tableKey","DatalinkEditProfileRulesComponent","selectedProfileRules","title","format","dexihDatalinkProfiles","GetFunctionsByType","Profile","profileRules","profile","profileRuleForm","functionAssemblyName","detailedResults","profiles","profileFormGroup","profileRule","datalinkProfileFormGroup","updateProfileRules","DatalinkEditPropertiesComponent","eConnectionPurpose","eDatalinkTypeItems","eAlertLevelItems","eAlertLevel","DatalinkRunPlanComponent","allowSave","DatalinkEditSaveButtonComponent","eUpdateStrategy","saveAs","dirty","targets","tableNames","join","doSave","saveTables","savedTable","setControl","tableForm","transformsArray","saveDatalink","doDownload","downloadItems","downloadObject","objectKey","objectType","downloadData","Csv","truncateTarget","resetIncremental","toPromise","runDatalinks","DatalinkEditSourceTableComponent","updateData","_sourceSubscription","SourceTable","Source","PassThroughMap","lineage","mappingStatus","statusClass","columnData","columnStatus","dataTypeToString","isIncrementalUpdate","securityFlag","isInput","columnSortChange","editColumn","ArrayParameter","parameterItems","inputArray","ArrayParameterItem","inputParameterForm","inputItems","outputItems","StandardFunctionEditComponent","invalidActions","functionCache","eGenericType","allowReturn","isJoin","remoteLibraries","functions","transformFunctionType","useCustomFunction","selectCustomFunction","selectedFunction","selectFunction","functionCategories","category","filteredFunctions","customFunctions","selectedCustomFunction","_functionSubscription","inputParameterControls","outputParameterControls","addArrayParameter","resetItems","genericTypeCode","genericTypeDefault","genericType","Numeric","Decimal","All","isNumeric","isString","None","existingParameters","ResultOutput","refreshParameters","existingValue","isGeneric","defaultValue","dexihCustomFunctionParameters","returnType","newParameterForm2","parentParameter","parentParameterForm","createArrayParameter","datalinkFunctionArrayParametersFormGroup","arrayForm","insert","parameterForm","splice","clearArray","isLabel","addAllColumns","inputArrayForm","j","importFunctionMappings","paramValue","TargetColumnComponent","TargetTable","TargetColumnsComponent","TargetTableColumnComponent","formsService","_currentFormSubscription","targetKey","columnKey","targetForm","columnUpdated","DatalinkEditTargetTableComponent","eDeltaType","updateStrategies","loadStrategies","showTableProperties","showColumn","ignoreUpdateTable","newTable","showBulkEdit","canExit","tooltip","_missingColumnsData","missingColumnsData","tableFormService","ioColumns","getDatalinkOutputColumns","originalTargetTableForm","targetTableForm","datalinkTargetFormGroup","managedConnections","getManagedConnections","resetSubscription","_loadStrategySubscription","_tableFormSubscription","addNodeColumns","validation","columnValidation","getColumnValidation","columnValidationKey","columnValidationClass","columnValidationTooltip","validColumns","missingColumnData","datalinkColumnStatus","tableColumns","missingColumn","assign","resetColumnKeys","positions","tableColumn","addMissing","connection","getConnection","connectionKey","importTables","returnTable","useLogical","defaultTableLogicalName","schema","createTables","IgnoreFormChange","control","savedTables","DatalinkEditTargetComponent","targetTableColumns","updateTargets","deleteDatalinkTarget","TransformTableEditComponent","canEdit","_columnData","transformTableForm","transformTable","updateColumnData","updateDate","columnIndex","close","DatalinkEditTransformComponent","showName","showDescription","eDuplicateStrategyItems","eJoinNotFoundStrategyItems","eSeriesGrain","seriesGrains","allowNode","nodeName","formErrors","_transformsArraySubscription","tmpDatalinkTransformForm","seriesForm","nodeType","node","deleteDatalinkTransform","nodeItem","Ascending","Sum","DatalinkEditTransformsComponent","refreshTransforms","_transformsChange","getTransformName","invalid","styleUrls","UnGroupEditComponent","_nodeSubscription","DatalinkEditValidationComponent"],"mappings":"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","file":"7-es5.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubCache, InvalidActions } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription ,  Observable, combineLatest} from 'rxjs';\nimport { Location } from '@angular/common';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { FormGroup, FormArray, AbstractControl } from '@angular/forms';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { eFunctionType, eParameterDirection, DexihDatalinkColumn, DexihDatalinkTransformItem,\n  eTransformItemType, eTypeCode, DexihFunctionParameter, eErrorActionItems, eInvalidActionItems, FunctionParameter,\n  DexihDatalinkTarget } from '../../../../shared/shared.models';\nimport { CancelToken } from '../../../../+auth/auth.models';\n\n@Component({\n\n  selector: 'dexih-custom-function-edit',\n  templateUrl: './custom-function-edit.component.html'\n})\nexport class CustomFunctionEditComponent implements OnInit, OnDestroy {\n  public hubCache: HubCache;\n\n  public pageTitle: string;\n\n  public cancelToken: CancelToken = new CancelToken();\n\n  private _subscription: Subscription;\n  private _returnParameterSubscription: Subscription;\n  private _parametersSubscription: Subscription;\n  private _saveSubscription: Subscription;\n\n  eFunctionType = eFunctionType;\n  eParameterDirection = eParameterDirection;\n  functionType: eFunctionType;\n\n  eInvalidActionItems = eInvalidActionItems.filter(c => c.key > 0);\n  eErrorActionItems = eErrorActionItems.filter(c => c.key > 0);\n\n  datalinkTransformItemKey: number;\n  datalinkKey: number;\n  datalinkTransformKey: number;\n\n  datalinkForm: FormGroup;\n  datalinkTransformForm: FormGroup;\n  datalinkTransformItemForm: FormGroup;\n  returnParameterForm: FormGroup;\n\n  newDatalinkTransformItemForm: FormGroup;\n\n  parameters: FormArray;\n  inputParameters: AbstractControl[] = [];\n  outputParameters: AbstractControl[] = [];\n\n  inputParameterValues = [];\n  outputParameterValues = [];\n  returnParameterValue;\n\n\n  inputColumns: Array<DexihDatalinkColumn>;\n  outputColumns: Array<DexihDatalinkColumn>;\n  datalinkTargets: Array<DexihDatalinkTarget>;\n\n\n  constructor(\n    private hubService: HubService,\n    private authService: AuthService,\n    private editDatalinkService: DatalinkEditService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n          this.route.data,\n          this.route.params,\n          this.hubService.getHubCacheObservable(),\n          this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n          this.hubService.getRemoteLibrariesObservable()\n      ).subscribe(result => {\n        this.pageTitle = result[0]['pageTitle'];\n        this.hubCache = result[2];\n        this.datalinkForm = result[3];\n\n        this.functionType = result[1]['functionType'];\n        if (this.functionType === eFunctionType.Validate) {\n          this.datalinkTransformForm = this.editDatalinkService.getValidationTransform();\n          this.datalinkTransformKey = this.datalinkTransformForm.value.key;\n        } else {\n          this.datalinkTransformKey = +result[1]['datalinkTransformKey'];\n          this.datalinkTransformForm = this.editDatalinkService.getDatalinkTransform(this.datalinkTransformKey);\n        }\n\n        this.datalinkTransformItemKey = +result[1]['datalinkTransformItemKey'];\n\n        if (this.datalinkTransformForm) {\n          // // if this is a join transform, then the use the join columns for the input.\n          // if (this.datalinkTransformForm.value.transformType === eTransformType.Join ||\n          //   this.datalinkTransformForm.value.transformType === eTransformType.Lookup ) {\n          //   const table = this.datalinkTransformForm.controls.joinDatalinkTable.value;\n          //   if (!table) {\n          //     this.hubService.addHubErrorMessage('The join table could not be found.');\n          //     this.authService.navigateUp();\n          //   }\n          //   table.name = '(Joined) ' + table.name;\n          //   this.sourceTables = this.datalinkTransformForm.controls.runTime.value.inputColumns;\n          //   this.sourceTables.unshift(table);\n          // }  else {\n          //   this.inputColumns = this.datalinkTransformForm.controls.runTime.value.inputColumns;\n          // }\n          // this.outputColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n\n          let nodeDatalinkColumn = <DexihDatalinkColumn> this.datalinkTransformForm.controls.nodeDatalinkColumn.value;\n          let nodeDatalinkColumnKey = nodeDatalinkColumn ? nodeDatalinkColumn.key : null;\n          let io = new InputOutputColumns();\n          if (nodeDatalinkColumnKey) {\n            let inputColumns = <DexihDatalinkColumn[]> this.datalinkTransformForm.controls.runTime.value.inputColumns;\n            this.inputColumns = io.getAvailableColumns(inputColumns, nodeDatalinkColumnKey, 0);\n          } else {\n            this.inputColumns = this.datalinkTransformForm.controls.runTime.value.inputColumns;\n          }\n\n          this.outputColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n          this.datalinkTargets = this.datalinkForm.controls.dexihDatalinkTargets.value;\n\n          if (this.datalinkTransformItemKey) {\n            this.datalinkTransformItemForm = this.editDatalinkService\n              .getDatalinkTransformItem(this.datalinkTransformForm, this.datalinkTransformItemKey);\n\n              // create a copy of the form item to allow for cancel.\n              this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n                .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, this.datalinkTransformItemForm.value);\n\n            if (!this.newDatalinkTransformItemForm) {\n                this.authService.navigateUp();\n                return;\n            }\n          } else {\n\n            let newItem = new DexihDatalinkTransformItem();\n            newItem.datalinkTransformKey = this.datalinkTransformKey;\n            newItem.transformItemType = eTransformItemType.CustomFunction;\n\n            let returnParameter = new DexihFunctionParameter();\n\n            if (this.functionType === eFunctionType.Condition\n              || this.functionType === eFunctionType.JoinCondition || this.functionType === eFunctionType.Validate) {\n                returnParameter.dataType = eTypeCode.Boolean;\n            } else {\n              returnParameter.dataType = eTypeCode.String;\n            }\n            returnParameter.name = 'Return';\n            returnParameter.direction = eParameterDirection.ReturnValue;\n            returnParameter.rank = 0;\n            returnParameter.position = -1;\n            returnParameter.datalinkColumn = null;\n            returnParameter.isValid = true;\n\n            let funcParam = new FunctionParameter();\n            funcParam.name = 'Return';\n            returnParameter['runTime'] = {functionParameter: funcParam};\n\n            newItem.dexihFunctionParameters = new Array<DexihFunctionParameter>();\n            newItem.dexihFunctionParameters.push(returnParameter);\n            this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n              .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, newItem);\n          }\n\n          // this.returnParameterForm = this.editDatalinkService.hubFormsService\n          //   .datalinkFunctionParametersFormGroup(returnParameter);\n\n          // if (this._returnParameterSubscription) { this._returnParameterSubscription.unsubscribe(); }\n          // this._returnParameterSubscription = this.returnParameterForm.valueChanges.subscribe(parameter => {\n          //   this.newDatalinkTransformItemForm.controls.targetDatalinkColumn.setValue(parameter.datalinkColumn);\n          //   this.newDatalinkTransformItemForm.controls.returnType.setValue(parameter.dataType);\n          //   this.newDatalinkTransformItemForm.markAsDirty();\n          // });\n\n          this.parameters = <FormArray>this.newDatalinkTransformItemForm.controls.dexihFunctionParameters;\n\n          this.setParameters(this.parameters.controls);\n\n          if (this._parametersSubscription) { this._parametersSubscription.unsubscribe(); }\n          this._parametersSubscription = this.parameters.valueChanges.subscribe(p => {\n            this.setParameters(p);\n          });\n        }\n\n        if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n        this._saveSubscription = this.editDatalinkService.savingDatalink.subscribe(value => {\n            if(value) {\n                this.apply();\n            }\n        });\n\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Edit Custom Function');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._returnParameterSubscription) { this._returnParameterSubscription.unsubscribe(); }\n    if (this._parametersSubscription) { this._parametersSubscription.unsubscribe(); }\n    if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n    this.cancelToken.cancel();\n  }\n\n  canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      if (this.newDatalinkTransformItemForm && !this.newDatalinkTransformItemForm.pristine) {\n        this.authService.confirmDialog('Function has changed',\n        'The function has changed.  Would you like to discard the changes and return to the previous screen?'\n        ).then(confirm => {\n          resolve(confirm);\n        }).catch(reason => {\n          resolve(false);\n        });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  private setParameters(p: AbstractControl[]) {\n      this.inputParameters = this.parameters.controls.sort((a, b) => a.value.position - b.value.position)\n      .filter(c => c.value.direction === eParameterDirection.Input);\n\n      this.inputParameterValues = new Array(this.inputParameters.length);\n\n    this.outputParameters = this.parameters.controls.sort((a, b) => a.value.position - b.value.position)\n      .filter(c => c.value.direction === eParameterDirection.Output);\n\n      this.outputParameterValues = new Array(this.inputParameters.length);\n\n      this.returnParameterForm = <FormGroup> this.parameters.controls.find(c => c.value.direction === eParameterDirection.ReturnValue);\n    }\n\n  private parametersArray() {\n    return <FormArray>this.newDatalinkTransformItemForm.controls.dexihFunctionParameters;\n  }\n\n  addParameter(parameter: FormGroup, direction: eParameterDirection) {\n    try {\n      let newParameter = new DexihFunctionParameter();\n      if (parameter) {\n        let oldParameter = parameter.value;\n        newParameter.dataType = oldParameter.dataType;\n        newParameter.name = oldParameter.name;\n        newParameter.position = oldParameter.position + 1;\n      }\n\n      newParameter.name = '';\n      newParameter.datalinkColumn = null;\n      newParameter.value = null;\n      newParameter.dataType = eTypeCode.String;\n      newParameter.direction = direction;\n      newParameter.rank = 0;\n      newParameter.isValid = true;\n\n      let parameters = this.parametersArray();\n      let newParameterForm = this.editDatalinkService.hubFormsService\n        .datalinkFunctionParametersFormGroup(newParameter);\n      parameters.push(newParameterForm);\n\n      // reset the positions\n      parameters.controls.sort((a, b) => a.value.position - b.value.position).forEach((p, index) => {\n        (<FormGroup>p).controls.position.setValue(index * 10);\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Edit Custom Function, add parameter');\n    }\n\n  }\n\n  removeParameter(parameter: FormGroup) {\n    try {\n      let inputParameters = this.parametersArray();\n      let index: number = inputParameters.controls.indexOf(parameter);\n      if (index > -1) {\n        inputParameters.removeAt(index);\n      }\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Edit Custom Function, remove parameter');\n    }\n  }\n\n  newDefaultParameter(): DexihFunctionParameter {\n    try {\n      let parameter = new DexihFunctionParameter();\n      parameter.datalinkTransformItemKey = this.newDatalinkTransformItemForm.value.key;\n      parameter.dataType = eTypeCode.String;\n      parameter.rank = 0;\n      parameter.isValid = true;\n      return parameter;\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Edit Custom Function, default parameter');\n    }\n\n  }\n\n  cancel() {\n    this.authService.navigateUp();\n  }\n\n\n  apply() {\n    this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, this.newDatalinkTransformItemForm);\n    this.newDatalinkTransformItemForm.markAsPristine();\n  }\n\n  applyExit() {\n    this.apply();\n    this.authService.navigateUp();\n  }\n\n  downloadCode(parameters = null) {\n    this.hubService.downloadCustomFunction(this.newDatalinkTransformItemForm.value, parameters).catch(reason => {});\n  }\n\n  test(parameters = null) {\n    this.hubService.testCustomFunction(this.newDatalinkTransformItemForm.value, parameters, this.cancelToken).then(result => {\n      this.hubService.addHubSuccessMessage('The function has successfully compiled.');\n\n      if (result && result.length > 0) {\n        result.forEach((value, index) => {\n          if (index === 0) {\n            this.returnParameterValue = value;\n          } else {\n            this.outputParameterValues[index - 1] = value;\n          }\n        });\n      } else {\n        this.returnParameterValue = null;\n        this.outputParameterValues.forEach(c => c = null );\n      }\n    }).catch(reason => {\n      this.returnParameterValue = null;\n      this.outputParameterValues.forEach(c => c = null );\n      this.hubService.addHubMessage(reason);\n    });\n  }\n}\n\n","<div *ngIf=\"newDatalinkTransformItemForm && inputColumns && outputColumns\">\n\n\t<dexih-widget-section *ngIf=\"datalinkTransformForm\" title=\"Edit Custom Function\" [showExpandButton]=\"true\">\n\t\t<ng-template #header>\n\t\t\t<dexih-button-validate class=\"mr-1\" (click)=\"test()\" text=\"Syntax Check\"></dexih-button-validate>\n\t\t\t<dexih-button-download class=\"mr-1\" (click)=\"downloadCode()\" text=\"Download Code\"></dexih-button-download>\n\t\t\t<dexih-button-apply [disabled]=\"newDatalinkTransformItemForm.pristine\"\n\t\t\t\t(click)=\"!newDatalinkTransformItemForm.pristine && applyExit()\" class=\"mr-1\"></dexih-button-apply>\n\t\t\t<dexih-button-cancel (click)=\"cancel()\"></dexih-button-cancel>\n\t\t</ng-template>\n\n\t\t<form *ngIf=\"newDatalinkTransformItemForm\" [formGroup]=\"newDatalinkTransformItemForm\">\n\t\t\t<fieldset>\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section *ngIf=\"functionType != eFunctionType.Validate && functionType != eFunctionType.condition\"\n\t\t\t\t\t\tclass=\"col col-xs-4\" [ngStyle]=\"{'z-index': 305, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Action when null\" formControlName=\"onNull\" [items]=\"eErrorActionItems\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"name\" iconClass=\"fa fa-database\" [enableFilter]=\"false\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"col col-xs-4\" [ngStyle]=\"{'z-index': 304, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Action when error\" formControlName=\"onError\" [items]=\"eErrorActionItems\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"name\" iconClass=\"fa fa-database\" [enableFilter]=\"false\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section *ngIf=\"selectedFunction && selectedFunction?.returnType == 'Boolean'\" class=\"col col-xs-4\"\n\t\t\t\t\t\t[ngStyle]=\"{'z-index': 303, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-checkbox label=\"Return 'NOT' result\" formControlName=\"notCondition\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<div *ngIf=\"functionType == eFunctionType.Validate\" class=\"col col-xs-4\"\n\t\t\t\t\t\t[ngStyle]=\"{'z-index': 302, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Action when false\" formControlName=\"invalidAction\" [items]=\"eInvalidActionItems\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"name\" iconClass=\"fa fa-database\" [enableFilter]=\"false\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div class=\"label\">\n\t\t\t\t\t\tInput Parameters\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngIf=\"inputParameters.length === 0\" class=\"mb-1\">\n\t\t\t\t\t\t<dexih-button (click)=\"addParameter(null, eParameterDirection.Input)\"\n\t\t\t\t\t\t\ticonClass=\"fa fa-plus-square-o\" title=\"Click to add a parameter\">Add Parameter\n\t\t\t\t\t\t</dexih-button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngFor=\"let inputParameter of inputParameters; let i = index\" class=\"pl-2\"\n\t\t\t\t\t\t[ngStyle]=\"{'z-index': 200-i, 'position': 'relative'}\">\n\t\t\t\t\t\t<input-parameter [allowNameSelect]=\"true\" [allowDataTypeSelect]=\"true\"\n\t\t\t\t\t\t\t[inputParameterForms]=\"[inputParameter]\" [inputColumns]=\"inputColumns\"\n\t\t\t\t\t\t\t[nodeDatalinkColumnKey]=\"datalinkTransformForm.controls.nodeDatalinkColumn.value?.key\"\n\t\t\t\t\t\t\t(hasChanged)=\"parameterHasChanged($event)\" [updateParameterName]=\"true\"\n\t\t\t\t\t\t\t(addParameter)=\"addParameter($event, eParameterDirection.Input)\"\n\t\t\t\t\t\t\t(removeParameter)=\"removeParameter($event)\" [allowAdd]=\"true\" [allowRemove]=\"true\">\n\t\t\t\t\t\t</input-parameter>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div *ngIf=\"functionType != eFunctionType.Condition && functionType != eFunctionType.JoinCondition\">\n\t\t\t\t\t<div class=\"label mb-1\">\n\t\t\t\t\t\tOutput Parameters\n\t\t\t\t\t</div>\n\t\t\t\t\t<div [ngStyle]=\"{'z-index': 101, 'position': 'relative'}\">\n\t\t\t\t\t\t<output-parameter [allowNameSelect]=\"false\" [allowDataTypeSelect]=\"true\"\n\t\t\t\t\t\t\t[outputParameterForm]=\"returnParameterForm\" [outputColumns]=\"outputColumns\"  [datalinkTargets]=\"datalinkTargets\" \n\t\t\t\t\t\t\t(addParameter)=\"addParameter($event, eParameterDirection.Output)\"></output-parameter>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngIf=\"outputParameters.length === 0\">\n\t\t\t\t\t\t<dexih-button (click)=\"addParameter(null, eParameterDirection.Output)\"\n\t\t\t\t\t\t\ticonClass=\"fa fa-plus-square-o\" title=\"Click to add a parameter\">Add Parameter\n\t\t\t\t\t\t</dexih-button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngFor=\"let parameter of outputParameters; let i = index\"\n\t\t\t\t\t\t[ngStyle]=\"{'z-index': 100-i, 'position': 'relative'}\">\n\t\t\t\t\t\t<output-parameter [allowNameSelect]=\"true\" [allowDataTypeSelect]=\"true\"\n\t\t\t\t\t\t\t[outputParameterForm]=\"parameter\" [outputColumns]=\"outputColumns\"  [datalinkTargets]=\"datalinkTargets\" \n\t\t\t\t\t\t\t[updateParameterName]=\"true\"\n\t\t\t\t\t\t\t(addParameter)=\"addParameter($event, eParameterDirection.Output)\"\n\t\t\t\t\t\t\t(removeParameter)=\"removeParameter($event)\" [allowAdd]=\"true\" [allowRemove]=\"true\">\n\t\t\t\t\t\t</output-parameter>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\tFunction Code\n\t\t\t\t<textarea class='form-control' rows=\"20\" width=\"100%\" spellcheck=\"false\"\n\t\t\t\t\tformControlName=\"functionCode\"></textarea>\n\t\t\t</fieldset>\n\t\t</form>\n\t</dexih-widget-section>\n\n\n\n\t<dexih-widget-section *ngIf=\"datalinkTransformForm && newDatalinkTransformItemForm\" title=\"Test Function\"\n\t\t[showExpandButton]=\"true\">\n\t\t<ng-template #header>\n\t\t\t<button class=\"btn btn-success mr-1\" (click)=\"test()\">Syntax Check</button>\n\t\t\t<button class=\"btn btn-success mr-1\" (click)=\"test(inputParameterValues)\">Run</button>\n\t\t\t<button class=\"btn btn-success\" (click)=\"downloadCode(inputParameterValues)\">Download Code</button>\n\t\t</ng-template>\n\n\t\t<form>\n\t\t\t<div class=\"label\">\n\t\t\t\tInput Parameters\n\t\t\t</div>\n\t\t\t<div *ngFor=\"let inputParameter of inputParameters; let i = index\"\n\t\t\t\t[ngStyle]=\"{'z-index': 200-i, 'position': 'relative'}\">\n\t\t\t\t<form-input [label]=\"inputParameter.controls.name.value\" [(ngModel)]=\"inputParameterValues[i]\"\n\t\t\t\t\t[name]=\"'inputParameterValues' + i\" type=\"text\" placeholder=\"Enter a test value for the parameter\">\n\t\t\t\t</form-input>\n\t\t\t</div>\n\t\t\t<form-input label=\"Return Value\" [disabled]=\"true\" [(ngModel)]=\"returnParameterValue\"\n\t\t\t\tname=\"returnParameterValue\" type=\"text\"></form-input>\n\t\t\t<div class=\"label\" *ngIf=\"outputParameters.length > 0\">\n\t\t\t\tOutputs Parameters\n\t\t\t</div>\n\t\t\t<div *ngFor=\"let outputParameter of outputParameters; let i = index\"\n\t\t\t\t[ngStyle]=\"{'z-index': 200-i, 'position': 'relative'}\">\n\t\t\t\t<form-input [disabled]=\"true\" [label]=\"outputParameter.controls.name.value\"\n\t\t\t\t\t[(ngModel)]=\"outputParameterValues[i]\" [name]=\"'outputParameterValues' + i\" type=\"text\">\n\t\t\t\t</form-input>\n\t\t\t</div>\n\t\t</form>\n\t</dexih-widget-section>\n</div>","export * from './custom-function-edit.component';\n","import { Component, OnInit, OnChanges, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HubCache, deltaTypes, securityFlags, } from '../../../hub.models';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubService } from '../../../hub.service';\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\nimport { Subscription ,  combineLatest} from 'rxjs';\nimport { HubFormsService } from '../../../hub.forms.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { TypeCodes } from '../../../hub.remote.models';\nimport { eTypeCode, eParameterDirection, DexihDatalinkColumn } from '../../../../shared/shared.models';\n\n@Component({\n    selector: 'datalink-column-edit',\n    templateUrl: './datalink-column-edit.component.html',\n})\nexport class DatalinkColumnEditComponent implements OnInit, OnChanges, OnDestroy {\n    private _subscription: Subscription;\n    private _saveSubscription: Subscription;\n\n    private hubCache: HubCache;\n    public pageTitle: string;\n    public action: string;\n\n    public datalinkColumnKey: number;\n\n    public errorMessage: string;\n    public successMessage: string;\n    public savingTable: boolean;\n\n    public newColumnForm: FormGroup;\n    private sourceDatalinkTableForm: FormGroup;\n\n    eTypeCode = eTypeCode;\n    typeCodes = TypeCodes;\n    deltaTypes = deltaTypes;\n    securityFlags = securityFlags;\n\n    public columnFormService: HubFormsService;\n    private originalColumnForm: FormGroup;\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        fb: FormBuilder,\n        private route: ActivatedRoute,\n    ) {\n\n        // create a separate formService instance to manage the copied form\n        this.columnFormService = new HubFormsService(fb, hubService, authService);\n    }\n\n    ngOnInit() {\n\n        try {\n            this._subscription = combineLatest(\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                this.pageTitle = result[0]['pageTitle'];\n                this.datalinkColumnKey = + result[0]['datalinkColumnKey'];\n                this.hubCache = result[1];\n\n                this.sourceDatalinkTableForm = <FormGroup>this.editDatalinkService.hubFormsService.currentForm\n                .controls.sourceDatalinkTable;\n\n                this.initializeForm();\n            });\n\n            if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n            this._saveSubscription = this.editDatalinkService.savingDatalink.subscribe(value => {\n                if(value) {\n                    this.applyExit();\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink column edit');\n        }\n    }\n\n    ngOnChanges() {\n        if (this.hubCache) {\n            this.initializeForm();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n    }\n\n    // searches the datalink and transforms for a column\n    findColumn(): FormGroup {\n        // look for column in source table\n        let columnsArray = <FormArray>this.sourceDatalinkTableForm.controls.dexihDatalinkColumns;\n        let column = <FormGroup> columnsArray.controls.find(c => c.value.key === this.datalinkColumnKey);\n        if (column) { return column; }\n\n        // look for column as transform outputs\n        let transformForms = <FormArray>this.editDatalinkService.hubFormsService.currentForm\n            .controls.dexihDatalinkTransforms;\n\n        transformForms.controls.forEach(t => {\n            let datalinkTransformForm = <FormGroup>t\n            let items = <FormArray>datalinkTransformForm.controls.dexihDatalinkTransformItems;\n            items.controls.forEach(i => {\n                if (!column) {\n                    let itemForm = <FormGroup>i;\n                    if (itemForm.controls.targetDatalinkColumn.value &&\n                        itemForm.controls.targetDatalinkColumn.value.key === this.datalinkColumnKey) {\n                        column = <FormGroup> itemForm.controls.targetDatalinkColumn;\n                    }\n\n                    if (!column) {\n                        columnsArray = <FormArray> itemForm.controls.dexihFunctionParameters;\n                        let parameter = <FormGroup> columnsArray.controls.find(c =>\n                            HubCache.parameterIsOutput(c.value) &&\n                            c.value.datalinkColumn &&\n                            c.value.datalinkColumn.key === this.datalinkColumnKey\n                        );\n                        if (parameter) {\n                            column = <FormGroup> parameter.controls.datalinkColumn;\n                        }\n                        if (!column) {\n                            columnsArray.controls.forEach(c => {\n                                let arrayParameters = <FormArray> (<FormGroup> c).controls.arrayParameters;\n                                if (arrayParameters) {\n                                    parameter = <FormGroup> arrayParameters.controls.find(p =>\n                                        HubCache.parameterIsOutput(p.value) &&\n                                        p.value.datalinkColumn &&\n                                        p.value.datalinkColumn.key === this.datalinkColumnKey\n                                    );\n                                    if (parameter) {\n                                        column = <FormGroup> parameter.controls.datalinkColumn;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                }\n            });\n        });\n\n        return column;\n    }\n\n    initializeForm() {\n        let columnForm: FormGroup;\n\n        if (this.datalinkColumnKey) {\n            this.originalColumnForm = this.findColumn();\n            if (!this.originalColumnForm) {\n                this.authService.informationDialog('Cannot Edit', 'The selected column could not be edited.').then(() => {\n                    this.authService.navigateUp();\n                });\n\n                return;\n            }\n            columnForm = this.columnFormService.datalinkTableColumn(null, this.originalColumnForm.value);\n        } else {\n            let column = new DexihDatalinkColumn();\n            column.key = this.hubCache.getNextSequence();\n            column.datalinkTableKey = this.sourceDatalinkTableForm.controls.key.value;\n            let columnsArray = <DexihDatalinkColumn[]>this.sourceDatalinkTableForm.controls.dexihDatalinkColumns.value;\n            let maxPos = 1;\n            columnsArray.forEach(col => {\n                if (col.position > maxPos) { maxPos = col.position; }\n            })\n            column.position = maxPos + 1;\n            columnForm = this.columnFormService.datalinkTableColumn(columnsArray, column);\n        }\n        this.columnFormService.startForm(columnForm);\n    }\n\n    cancel() {\n        this.authService.navigateUp();\n    }\n\n    applyExit() {\n        const columnForm = this.columnFormService.currentForm;\n\n        // if no originalColumn, then add it to the source columns.\n        if (!this.originalColumnForm) {\n            let columnsArray = <FormArray>this.sourceDatalinkTableForm.controls.dexihDatalinkColumns;\n            columnsArray.push(columnForm);\n        } else {\n            this.originalColumnForm.setValue(columnForm.value);\n        }\n\n        this.sourceDatalinkTableForm.markAsDirty();\n        this.authService.navigateUp();\n    }\n}\n","<div *ngIf=\"columnFormService?.currentForm\">\n    <div class=\"list-group-item list-group-item-info rounded-0\">\n        <div class=\"d-flex flex-row\">\n            <h5>Edit Column </h5>\n            <div class=\"ml-auto\">\n                <dexih-invalid-form-details (click)=\"columnFormService.showErrors()\"\n                    [control]=\"columnFormService.currentForm\" class=\"mr-1\"></dexih-invalid-form-details>\n                <dexih-button-apply [disabled]=\"columnFormService.currentForm.pristine\"\n                    (click)=\"!columnFormService.currentForm.pristine && applyExit()\" class=\"mr-1\"></dexih-button-apply>\n                <dexih-button-cancel (click)=\"cancel()\"></dexih-button-cancel>\n            </div>\n        </div>\n    </div>\n\n\n    <div class=\"container  mt-3 mb-3\">\n        <column-edit-base [columnFormService]=\"columnFormService\" [detailedView]=\"true\"></column-edit-base>\n    </div>\n\n    <table-edit-columns *ngIf=\"columnFormService.currentForm.controls.dataType.value === eTypeCode.Node\"\n        [parentColumnForm]=\"columnFormService.currentForm\"></table-edit-columns>\n</div>","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable, combineLatest} from 'rxjs';\n\nexport interface CanComponentDeactivate {\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\n}\n\n@Injectable()\nexport class DatalinkEditGuard implements CanDeactivate<CanComponentDeactivate> {\n\n  canDeactivate(component: CanComponentDeactivate) {\n    return component && component.canDeactivate ? component.canDeactivate() : true;\n  }\n\n}\n","import { HostListener, Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationEnd, Params } from '@angular/router';\nimport { HubService } from '../../hub.service';\nimport { DatalinkEditService } from './datalink-edit.service';\nimport { Subscription, Observable, BehaviorSubject, combineLatest } from 'rxjs';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { FormGroup, FormArray, FormControl } from '@angular/forms';\nimport { LogFactory, eLogLevel } from '../../../../logging';\nimport { HubCache, eCacheStatus } from '../../hub.models';\nimport { DexihDatalinkTransform, eTransformWriterMethod, DexihDatalink, eDatalinkType,\n    eSourceType, eTransformType, DexihDatalinkTable } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'dexih-datalink-edit-form',\n    templateUrl: './datalink-edit.component.html'\n})\nexport class DatalinkEditComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n\n    private _subscription: Subscription;\n    private _datalinkFormSubscription: Subscription;\n    // private _datalinkTransformsSubscription: Subscription;\n\n    private hubCache: HubCache;\n\n    public savingDatalink = false;\n\n    public action: string; // new or edit\n    public pageTitle: string;\n    public params: Params;\n\n    public logger = new LogFactory('datalink-edit.component');\n    public logCount = 0;\n\n    public help: string;\n\n    // private _datalinkTransforms = new BehaviorSubject<Array<DexihDatalinkTransform>>(null);\n    // datalinkTransforms: Observable<Array<DexihDatalinkTransform>> = this._datalinkTransforms.asObservable();\n    // updatingTransforms = false;\n\n    eTransformWriterMethod = eTransformWriterMethod;\n\n    private isLoaded = false;\n\n    showPage = false;\n    showPageMessage = 'Loading datalink...';\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        public editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router) {\n    }\n\n    getHelp() {\n        let route = this.router.routerState.root.snapshot;\n        while (route.firstChild) { route = route.firstChild; }\n        this.help = route.data['help'];\n    }\n\n    ngOnInit() {\n        this.logger.LogC(() => `OnInit`, eLogLevel.Trace);\n\n        try {\n            this.router.events.subscribe(event => {\n                if (event instanceof NavigationEnd) {\n                    this.getHelp();\n                }\n            });\n\n            this.getHelp();\n\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                this.action = result[0]['action'];\n                this.pageTitle = result[0]['pageTitle'];\n                this.params = result[1];\n                this.hubCache = result[2];\n\n                if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded ) { return; }\n\n                this.editDatalinkService.init(this.hubCache);\n\n                if (this.isLoaded && this.action === 'new') { return; }\n\n                if (this.isLoaded && this.editDatalinkService.hubFormsService.hasChanged) {\n                    this.authService.confirmDialog('Datalink synchronization warning',\n                    'The hub was disconnected, meaning the datalink could have been changed by another session.  Would you like to discard the current changes, and reload the latest version of the datalink?')\n                    .then(confirm => {\n                        if (confirm) {\n                            this.load();\n                        }\n                    }).catch(reason => {\n                        return;\n                    });\n                } else {\n                    this.load();\n                }\n            });\n\n            this.editDatalinkService.ngOnInit();\n\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Edit');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._datalinkFormSubscription) { this._datalinkFormSubscription.unsubscribe(); }\n//        if (this._datalinkTransformsSubscription) { this._datalinkTransformsSubscription.unsubscribe(); }\n\n        // shut down service\n        this.editDatalinkService.ngOnDestroy();\n    }\n\n    private load() {\n        this.logger.LogC(() => `Subscription count: ${this.logCount++}`, eLogLevel.Trace);\n\n        if (this.action === 'edit') {\n\n            // get the hub key from the route data, and update the service.\n            let datalinkKey: number = +this.params['datalinkKey'];\n            if (!datalinkKey) {\n                this.logger.LogC(() => `no datalink found.`, eLogLevel.Warning);\n\n                this.hubService.addHubErrorMessage('There was no datalink specified to edit.');\n                this.showPageMessage = 'Edit failed...';\n                this.editDatalinkService.hubFormsService.datalink(null);\n            } else {\n                let originalDatalink = this.hubCache.hub.dexihDatalinks.find(d => d.key === datalinkKey);\n\n                if (originalDatalink) {\n                    this.editDatalinkService.hubFormsService.datalink(originalDatalink);\n                    this.route.snapshot.data['pageTitle'] = 'Datalink (' + originalDatalink.name + ')';\n\n                } else {\n                    this.logger.LogC(() => `no datalink found. key: ${datalinkKey}`, eLogLevel.Warning);\n                    this.hubService.addHubErrorMessage('A datalink with the key ' +\n                        datalinkKey + ' could not be found in the repository.');\n                    this.showPageMessage = 'Edit failed...';\n                }\n            }\n\n        } else if (!this.isLoaded && this.action === 'new') {\n            let datalink = new DexihDatalink();\n            datalink.sourceDatalinkTable = new DexihDatalinkTable();\n            this.editDatalinkService.hubFormsService.datalink(datalink);\n            this.logger.LogC(() => `new datalink set.`, eLogLevel.Warning);\n        } else if (!this.isLoaded && this.action === 'copy') {\n            // get the hub key from the route data, and update the service.\n            let datalinkKey: number = +this.params['datalinkKey'];\n            if (!datalinkKey) {\n                this.logger.LogC(() => `no datalink found.`, eLogLevel.Warning);\n\n                this.hubService.addHubErrorMessage('There was no datalink specified to copy.');\n                this.showPageMessage = 'Copy failed...';\n                this.editDatalinkService.hubFormsService.datalink(null);\n            } else {\n                let originalDatalink = this.hubCache.hub.dexihDatalinks.find(d => d.key === datalinkKey);\n\n                if (originalDatalink) {\n                    let copyDatalink = this.hubCache.CopyDatalink(originalDatalink);\n                    this.editDatalinkService.hubFormsService.datalink(copyDatalink);\n                    this.editDatalinkService.hubFormsService.hasChanged = true;\n                    this.route.snapshot.data['pageTitle'] = 'Datalink (' + copyDatalink.name + ')';\n\n                } else {\n                    this.logger.LogC(() => `no datalink found. key: ${datalinkKey}`, eLogLevel.Warning);\n                    this.hubService.addHubErrorMessage('A datalink with the key ' +\n                        datalinkKey + ' could not be found in the repository.');\n                    this.showPageMessage = 'Copy failed...';\n                }\n            }\n        } else if (this.action === 'sourceTable') {\n            let datalink = new DexihDatalink();\n            datalink.datalinkType = eDatalinkType.Query;\n            datalink.sourceDatalinkTable = new DexihDatalinkTable();\n            datalink.sourceDatalinkTable.sourceType = eSourceType.Table;\n            datalink.sourceDatalinkTable.sourceTableKey = +this.params['sourceTableKey'];\n            this.editDatalinkService.reBuildDatalinkTable(datalink.sourceDatalinkTable);\n            datalink.name = 'Datalink query for ' + datalink.sourceDatalinkTable.name;\n\n            this.editDatalinkService.hubFormsService.datalink(datalink);\n            this.editDatalinkService.hubFormsService.currentForm.markAsDirty();\n            this.editDatalinkService.hubFormsService.hasChanged = true;\n\n            this.logger.LogC(() => `new source table datalink set.`, eLogLevel.Warning);\n        }\n\n        this.isLoaded = true;\n\n        // monitor for any changes to the datalink\n        if (this._datalinkFormSubscription) { this._datalinkFormSubscription.unsubscribe(); }\n        this._datalinkFormSubscription =\n            this.editDatalinkService.hubFormsService.getCurrentFormObservable().subscribe(datalinkForm => {\n                if (!datalinkForm) { return; }\n                this.datalinkForm = datalinkForm;\n\n                // let datalinkTransforms = <FormArray>this.datalinkForm.controls.dexihDatalinkTransforms;\n                // this.updateTransforms(datalinkTransforms.value);\n\n                // // monitor any add/remove transforms to update the tabs.\n                // if (this._datalinkTransformsSubscription) { this._datalinkTransformsSubscription.unsubscribe(); }\n                // this._datalinkTransformsSubscription = datalinkTransforms.valueChanges.subscribe(dt => {\n                //     if (!this.updatingTransforms) {\n                //         this.updateTransforms(dt);\n                //     }\n                // });\n\n                let key = datalinkForm.controls.key.value;\n                if (key) {\n                    if (history.pushState) {\n                        let newUrl = window.location.pathname.replace('/new', `/edit/${key}`)\n                        this.router.navigateByUrl(newUrl);\n                    }\n                }\n            });\n\n        this.showPage = true;\n        this.showPageMessage = '';\n    }\n\n    // updateTransforms(datalinkTransforms: Array<any>) {\n    //     this.updatingTransforms = true;\n    //     this.logger.LogC(() => `updateTransforms`, eLogLevel.Trace);\n\n    //     // update the transform names\n    //     if (datalinkTransforms) {\n    //         let transforms = datalinkTransforms\n    //             .filter(c => c.transformType !== eTransformType.Delta && c.transformType !== eTransformType.Validation);\n    //         this._datalinkTransforms.next(transforms.sort((a, b) => a.position - b.position));\n    //     } else {\n    //         this._datalinkTransforms.next(null);\n    //     }\n    //     this.updatingTransforms = true;\n    // }\n\n    public canDeactivate(): Promise<boolean> {\n        return new Promise<boolean>((resolve) => {\n            if (this.editDatalinkService.hubFormsService.hasChanged) {\n                this.authService.confirmDialog('Datalink changes have not been saved',\n                    'The datalink changes have not been saved.  Do you want to discard the changes and exit?')\n                    .then(confirm => {\n                        resolve(confirm);\n                    }).catch(reason => {\n                        resolve(false);\n                    });\n            } else {\n                resolve(true);\n            }\n        });\n    }\n\n    // @HostListener allows us to also guard against browser refresh, close, etc.\n    @HostListener('window:beforeunload', ['$event']) unloadNotification($event: any) {\n        if (this.editDatalinkService.hubFormsService.hasChanged) {\n            $event.returnValue = 'The datalink changes have not been saved.  Do you want to discard the changes and exit?';\n        }\n    }\n\n    saveDatalink() {\n        this.editDatalinkService.hubFormsService.save();\n    }\n\n    cancel() {\n        this.editDatalinkService.hubFormsService.cancel();\n    }\n\n}\n","<div class=\"container-fluid\" *ngIf=\"datalinkForm && !datalinkForm.pending\">\n\t<dexih-widget title=\"Edit Datalink\" iconClass=\"fa fa-lg fa-fw fa-exchange\" [showCloseButton]=\"true\"\n\t\t[padding]=\"false\" (close)=\"cancel()\">\n\t\t<ng-template #header>\n\n\t\t\t<div class=\"d-none d-xl-inline\">\n\t\t\t\t<ul class=\"nav nav-tabs card-header-tabs\">\n\t\t\t\t\t<li class=\"nav-item\"><a class=\"nav-link\" routerLink=\"properties\" routerLinkActive=\"active\"><i\n\t\t\t\t\t\t\t\tclass=\"fa fa-cog\"></i>Properties</a></li>\n\t\t\t\t\t<li class=\"nav-item\"><a class=\"nav-link\" routerLink=\"source-table\" routerLinkActive=\"active\"><i\n\t\t\t\t\t\t\t\tclass=\"fa fa-arrow-circle-o-right\"></i> Source</a></li>\n\t\t\t\t\t<ng-template [ngIf]=\"datalinkForm?.controls.sourceDatalinkTable.value\">\n\t\t\t\t\t\t<li class=\"nav-item\">\n\t\t\t\t\t\t\t<a class=\"nav-link\" routerLink=\"transforms\" routerLinkActive=\"active\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-share-alt\"></i>\n\t\t\t\t\t\t\t\tTransforms\n\t\t\t\t\t\t\t\t<dexih-invalid-form-icon [control]=\"datalinkForm.controls.dexihDatalinkTransforms\">\n\t\t\t\t\t\t\t\t</dexih-invalid-form-icon>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li *ngIf=\"!datalinkForm.controls.isQuery.value\" class=\"nav-item\"><a class=\"nav-link\"\n\t\t\t\t\t\t\t\trouterLink=\"validation\" routerLinkActive=\"active\"><i class=\"fa fa-check-square-o\"></i>\n\t\t\t\t\t\t\t\tValidation</a></li>\n\t\t\t\t\t\t<li *ngIf=\"!datalinkForm.controls.isQuery.value\" class=\"nav-item\"><a class=\"nav-link\"\n\t\t\t\t\t\t\t\trouterLink=\"profile-rules\" routerLinkActive=\"active\"><i class=\"fa fa-bug\"></i>\n\t\t\t\t\t\t\t\tProfiling</a></li>\n\t\t\t\t\t\t<li class=\"nav-item\"><a class=\"nav-link\" routerLink=\"target\" routerLinkActive=\"active\"><i\n\t\t\t\t\t\t\t\t\tclass=\"fa fa-arrow-circle-right\"></i> Target</a></li>\n\t\t\t\t\t</ng-template>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</ng-template>\n\n\t\t<ul class=\"list-group\">\n\t\t\t<li class=\"list-group-item rounded-0\">\n\t\t\t\t<div class=\"d-flex\">\n\t\t\t\t\t<div class=\"d-xl-none\">\n\t\t\t\t\t\t<dexih-button-dropdown buttonClass=\"btn btn-success\" text=\"Navigate\">\n\t\t\t\t\t\t\t<a class=\"dropdown-item\" routerLinkActive=\"active\" routerLink=\"properties\"><i\n\t\t\t\t\t\t\t\t\t\tclass=\"fa fa-cog\"></i>Properties</a>\n\t\t\t\t\t\t\t<a class=\"dropdown-item\" routerLinkActive=\"active\" routerLink=\"source-table\"><i\n\t\t\t\t\t\t\t\t\t\tclass=\"fa fa-arrow-circle-o-right\"></i>Source</a>\n\t\t\t\t\t\t\t<ng-template [ngIf]=\"datalinkForm.controls.sourceDatalinkTable.value\">\n\t\t\t\t\t\t\t\t<a class=\"dropdown-item\" routerLinkActive=\"active\" routerLink=\"transforms\"><i\n\t\t\t\t\t\t\t\t\t\t\tclass=\"fa fa-share-alt\"></i>Transforms</a>\n\t\t\t\t\t\t\t\t<a class=\"dropdown-item\" *ngIf=\"!datalinkForm.controls.isQuery.value\" routerLink=\"validation\"\n\t\t\t\t\t\t\t\t\t\trouterLinkActive=\"active\"><i class=\"fa fa-check-square-o\"></i>Validation</a>\n\t\t\t\t\t\t\t\t<a class=\"dropdown-item\" *ngIf=\"!datalinkForm.controls.isQuery.value\" routerLink=\"profile-rules\"\n\t\t\t\t\t\t\t\t\t\trouterLinkActive=\"active\"><i class=\"fa fa-bug\"></i>Profiling</a>\n\t\t\t\t\t\t\t\t<a class=\"dropdown-item\" routerLink=\"target\" routerLinkActive=\"active\"><i\n\t\t\t\t\t\t\t\t\t\t\tclass=\"fa fa-arrow-circle-right\"></i>Target</a>\n\t\t\t\t\t\t\t</ng-template>\n\t\t\t\t\t\t</dexih-button-dropdown>\n\t\t\t\t\t</div>\n\t\t\t\t\t<datalink-status class=\"d-none d-xl-inline\" [datalinkKey]='datalinkForm?.controls.key.value'>\n\t\t\t\t\t</datalink-status>\n\t\t\t\t\t<div class=\"ml-auto\">\n\t\t\t\t\t\t<datalink-save-button></datalink-save-button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t\t<router-outlet></router-outlet>\n\t\t</ul>\n\n\t</dexih-widget>\n\n\t<dexih-help class=\"m-3\" *ngIf=\"help\" title=\"Datalinks\" path=\"/assets/help/reference/{{help}}\"></dexih-help>\n\n</div>","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routing } from './datalink-edit.routing';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { DatalinkEditService } from './datalink-edit.service';\nimport { HubFormsService } from '../../hub.forms.service';\n\nimport { DatalinkEditComponent } from './datalink-edit.component';\nimport { DatalinkEditPropertiesComponent } from './properties/datalink-edit-properties.component';\nimport { DatalinkEditSourceTableComponent } from './source-table/datalink-edit-source-table.component';\nimport { DatalinkEditTargetTableComponent } from './target/datalink-edit-target-table.component';\nimport { DatalinkEditTargetComponent } from './target/datalink-edit-target.component';\nimport { DatalinkEditTransformComponent } from './transform/datalink-edit-transform.component';\nimport { DatalinkEditValidationComponent } from './validation/datalink-edit-validation.component';\nimport { DatalinkEditProfileRulesComponent } from './profile-rules/profile-rules.component';\nimport { DatalinkEditSaveButtonComponent } from './save-button/datalink-edit-save-button.component';\nimport { DatalinkRunPlanComponent } from './run-plan/datalink-run-plan.component';\nimport { DatalinkEditNewTransformComponent } from './new-transform/datalink-edit-new-transform.component';\nimport { StandardFunctionEditComponent }  from './standard-function-edit';\nimport { CustomFunctionEditComponent } from './custom-function-edit';\nimport { UnGroupEditComponent } from './unGroup-edit';\nimport { OutputColumnComponent, OutputColumnsComponent } from './output-columns';\nimport { JoinColumnComponent, JoinColumnsComponent } from './join-columns';\nimport { InputColumnsComponent, InputColumnComponent } from './input-columns';\nimport { MappingEditComponent } from './mapping-edit';\nimport { MappingComponent, MappingItemComponent } from './mapping';\nimport { PreviewDataComponent } from './preview-data';\nimport { PreviewTableComponent} from './preview-table';\nimport { DatalinkEditGuard } from './datalink-edit-guard';\nimport { TransformTableEditComponent } from './transform-table-edit/transform-table-edit.component';\nimport { DatalinkEditTransformsComponent } from './transforms/datalink-edit-transforms.component';\nimport { HubSharedModule } from '../../hub.shared.module';\nimport { TargetTableColumnComponent } from './target-table-column/target-table-column.component';\nimport { TableSharedModule } from '../../table/table.shared.module';\nimport { DatalinkTableComponent } from './datalink-table/datalink-table.component'\nimport { DatalinkColumnEditComponent } from './datalink-column-edit/datalink-column-edit.component'\nimport { ResultsViewModule } from '../../results/results-view/results-view.module';\nimport { InputParameterComponent, OutputParameterComponent} from './parameters'\nimport { TargetColumnsComponent, TargetColumnComponent} from './target-columns';\nimport { DatalinkPreviewDataComponent } from '../datalink-preview-data';\n\n@NgModule({\n    imports: [\n        SharedModule,\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        Routing,\n        HubSharedModule,\n        TableSharedModule,\n        ResultsViewModule\n    ],\n    declarations: [\n        DatalinkEditComponent,\n        DatalinkEditPropertiesComponent,\n        DatalinkEditSourceTableComponent,\n        DatalinkEditTargetTableComponent,\n        DatalinkEditTargetComponent,\n        DatalinkEditTransformComponent,\n        DatalinkEditValidationComponent,\n        DatalinkEditProfileRulesComponent,\n        DatalinkRunPlanComponent,\n        StandardFunctionEditComponent,\n        CustomFunctionEditComponent,\n        OutputColumnComponent, OutputColumnsComponent,\n        JoinColumnComponent, JoinColumnsComponent,\n        InputColumnsComponent, InputColumnComponent,\n        TargetColumnsComponent, TargetColumnComponent,\n        MappingEditComponent,\n        MappingComponent, MappingItemComponent,\n        PreviewDataComponent,\n        PreviewTableComponent,\n        // DatalinkPreviewDataComponent,\n        TransformTableEditComponent,\n        DatalinkEditTransformsComponent,\n        DatalinkEditSaveButtonComponent,\n        DatalinkEditNewTransformComponent,\n        TargetTableColumnComponent,\n        DatalinkTableComponent,\n        DatalinkColumnEditComponent,\n        InputParameterComponent, OutputParameterComponent,\n        UnGroupEditComponent\n    ],\n    providers: [ DatalinkEditService, HubFormsService, DatalinkEditGuard ],\n    exports: []\n})\nexport class DatalinkEditModule {\n\n    static forRoot(): ModuleWithProviders<DatalinkEditModule> {\n        return {\n            ngModule: DatalinkEditModule,\n            providers: [ DatalinkEditService, HubFormsService ]\n        };\n    }\n}\n","import { Routes, RouterModule } from '@angular/router';\nimport { DatalinkEditPropertiesComponent } from './properties/datalink-edit-properties.component';\nimport { DatalinkEditComponent } from './datalink-edit.component';\nimport { DatalinkEditSourceTableComponent } from './source-table/datalink-edit-source-table.component';\nimport { DatalinkEditTargetComponent } from './target/datalink-edit-target.component';\nimport { DatalinkEditTransformComponent } from './transform/datalink-edit-transform.component';\nimport { DatalinkEditProfileRulesComponent } from './profile-rules/profile-rules.component';\nimport { DatalinkEditValidationComponent } from './validation/datalink-edit-validation.component';\nimport { DatalinkRunPlanComponent } from './run-plan/datalink-run-plan.component';\n\nimport { StandardFunctionEditComponent }  from './standard-function-edit';\nimport { CustomFunctionEditComponent }  from './custom-function-edit';\nimport { MappingEditComponent } from './mapping-edit';\nimport { DatalinkEditGuard } from './datalink-edit-guard';\nimport { PreviewDataComponent } from './preview-data';\nimport { PreviewTableComponent} from './preview-table';\nimport { TransformTableEditComponent } from './transform-table-edit/transform-table-edit.component';\nimport { DatalinkEditTransformsComponent } from './transforms/datalink-edit-transforms.component';\nimport { DatalinkEditNewTransformComponent } from './new-transform/datalink-edit-new-transform.component';\nimport { TargetTableColumnComponent } from './target-table-column/target-table-column.component';\nimport { DatalinkColumnEditComponent } from './datalink-column-edit/datalink-column-edit.component'\nimport { ResultsIndexComponent, ResultsViewComponent } from '../../results';\nimport { UnGroupEditComponent } from './unGroup-edit';\nimport { DatalinkEditTargetTableComponent } from './target/datalink-edit-target-table.component';\n\nexport const standardFunctionRoutes: Routes = [\n    {path: '', canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent, data: { pageTitle: 'Standard Function' }},\n    {path: ':functionType', canDeactivate: [DatalinkEditGuard],\n        component: StandardFunctionEditComponent, data: { pageTitle: 'Standard Function' }},\n    {path: ':functionType/:datalinkTransformItemKey',\n        canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent, data: { pageTitle: 'Standard Function' }},\n//    {path: 'edit-column/:columnKey', component: TableColumnEditComponent, data: { pageTitle: 'Edit Column', action: 'edit'}}\n]\n\nexport const customFunctionRoutes: Routes = [\n    {path: '', canDeactivate: [DatalinkEditGuard], component: CustomFunctionEditComponent, data: { pageTitle: 'Custom Function' }},\n//    {path: 'edit-column/:columnKey', component: TableColumnEditComponent, data: { pageTitle: 'Edit Column', action: 'edit'}}\n]\n\nexport const mappingEditRoutes: Routes = [\n    {path: '', canDeactivate: [DatalinkEditGuard], component: MappingEditComponent, data: { pageTitle: 'Mapping' }},\n//    {path: 'edit-column/:columnKey', component: TableColumnEditComponent, data: { pageTitle: 'Edit Column', action: 'edit'}}\n]\n\nexport const datalinkEditRoutes: Routes = [\n    { path: '', redirectTo: 'properties'},\n\n    { path: 'properties', component: DatalinkEditPropertiesComponent, data: { pageTitle: 'Properties', help: 'datalink.md' } },\n\n    { path: 'source-table', data: { pageTitle: 'Source Table' }, children: [\n        { path: '', pathMatch: 'full', component: DatalinkEditSourceTableComponent},\n        { path: 'preview-table-data/table/:tableKey', component: PreviewTableComponent,\n            data: { pageTitle: 'Preview Table', action: 'preview'} },\n        { path: 'preview-table-data/datalink/:datalinkKey', component: PreviewTableComponent,\n            data: { pageTitle: 'Preview Datalink', action: 'preview'} },\n        { path: 'column/:datalinkColumnKey', component: DatalinkColumnEditComponent,\n            data: { pageTitle: 'Edit Column', action: 'edit'} },\n        { path: 'newcolumn', component: DatalinkColumnEditComponent,\n            data: { pageTitle: 'New Column', action: 'new'} },\n        { path: 'table-edit/:tableKey', data: { pageTitle: 'Edit Table', action: 'edit'},\n                loadChildren: () => import('../../table/table-edit/table-edit.module').then(m => m.TableEditModule)},\n    ] },\n\n    { path: 'target', data: { breadCrumb: true, pageTitle: 'Targets' }, children: [\n        { path: '', pathMatch: 'full', component: DatalinkEditTargetComponent},\n        { path: 'table-edit/:targetKey', data: { pageTitle: 'Edit Target Table', action: 'edit'}, children: [\n            { path: '', pathMatch: 'full', canDeactivate: [DatalinkEditGuard], component: DatalinkEditTargetTableComponent },\n            { path: 'preview-table-data/:tableKey', component: PreviewTableComponent,\n                data: { pageTitle: 'Preview Table', action: 'preview'} },\n            ]},\n        { path: 'table-new', data: { pageTitle: 'New Target Table', action: 'new'}, children: [\n            { path: '', pathMatch: 'full', canDeactivate: [DatalinkEditGuard], component: DatalinkEditTargetTableComponent },\n            { path: 'preview-table-data/:tableKey', component: PreviewTableComponent,\n                data: { pageTitle: 'Preview Table', action: 'preview'} },\n            ]},\n    ] },\n\n    { path: 'transforms', component: DatalinkEditTransformsComponent, data: { pageTitle: 'Transforms' }, children: [\n        { path: 'new/:position', component: DatalinkEditNewTransformComponent, data: {pageTitle: 'New Transform'}},\n        { path: 'transform/:datalinkTransformKey', data: { pageTitle: 'Transform' } , children: [\n            { path: '', pathMatch: 'full', component: DatalinkEditTransformComponent },\n            { path: 'table-edit/:tableKey', data: { pageTitle: 'Edit Table', action: 'edit'},\n                    loadChildren: () => import('../../table/table-edit/table-edit.module').then(m => m.TableEditModule)},\n            { path: 'standard-function-edit', data: { pageTitle: 'Standard Function' },\n                canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent },\n            { path: 'standard-function-edit/:functionType', data: { pageTitle: 'Standard Function' },\n                canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent },\n            { path: 'standard-function-edit/:functionType/:datalinkTransformItemKey', data: { pageTitle: 'Standard Function' },\n                canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent },\n            { path: 'custom-function-edit', data: { pageTitle: 'Custom Function', help: 'function.md' },\n                canDeactivate: [DatalinkEditGuard], component: CustomFunctionEditComponent },\n            { path: 'custom-function-edit/:functionType', data: { pageTitle: 'Custom Function', help: 'function.md' },\n                canDeactivate: [DatalinkEditGuard], component: CustomFunctionEditComponent },\n            { path: 'custom-function-edit/:functionType/:datalinkTransformItemKey',\n                data: { pageTitle: 'Custom Function', help: 'function.md' },\n                canDeactivate: [DatalinkEditGuard], component: CustomFunctionEditComponent },\n            { path: 'mapping-edit/:type', data: { pageTitle: 'Mapping Edit' },\n                component: MappingEditComponent },\n            { path: 'mapping-edit/:type/:datalinkTransformItemKey', data: { pageTitle: 'Mapping Edit' },\n                component: MappingEditComponent },\n            { path: 'unGroup-edit', data: { pageTitle: 'Un-Group Edit' },\n                component: UnGroupEditComponent },\n            { path: 'unGroup-edit/:datalinkTransformItemKey', data: { pageTitle: 'Un-Group Edit' },\n                component: UnGroupEditComponent },\n            { path: 'preview-transform-data', data: { pageTitle: 'Preview Data' },\n                component: PreviewDataComponent },\n            { path: 'transform-table-edit', data: { pageTitle: 'Transform Table Edit' },\n                component: TransformTableEditComponent },\n            { path: 'column/:datalinkColumnKey', component: DatalinkColumnEditComponent,\n                data: { pageTitle: 'Edit Column', action: 'edit'} },\n        ] },\n\n    ] },\n\n    { path: 'validation', data: { pageTitle: 'Validation' }, children: [\n        {path: '', pathMatch: 'full', component: DatalinkEditValidationComponent, data: { pageTitle: 'Validation' } },\n        { path: 'standard-function-edit', data: { pageTitle: 'Standard Function' },\n            canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent },\n        { path: 'standard-function-edit/:functionType', data: { pageTitle: 'Standard Function' },\n            canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent },\n        { path: 'standard-function-edit/:functionType/:datalinkTransformItemKey', data: { pageTitle: 'Standard Function' },\n            canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent },\n        { path: 'custom-function-edit', data: { pageTitle: 'Custom Function' },\n            canDeactivate: [DatalinkEditGuard], component: CustomFunctionEditComponent },\n        { path: 'custom-function-edit/:functionType', data: { pageTitle: 'Custom Function' },\n            canDeactivate: [DatalinkEditGuard], component: CustomFunctionEditComponent },\n        { path: 'column/:datalinkColumnKey', component: DatalinkColumnEditComponent,\n            data: { pageTitle: 'Edit Column', action: 'edit'} },\n    ]},\n    { path: 'profile-rules', component: DatalinkEditProfileRulesComponent, data: { pageTitle: 'Profile Rules' } },\n    { path: 'run-plan', component: DatalinkRunPlanComponent, data: { pageTitle: 'Run Plan' } },\n    { path: 'result-view/:auditConnectionKey/:auditKey', component: ResultsViewComponent, data: { pageTitle: 'Detailed Result' } }\n];\n\nexport const routes: Routes = [\n        { path: 'new', component: DatalinkEditComponent, canDeactivate: [DatalinkEditGuard],\n            data: { action: 'new', navigateSkip: true, pageTitle: 'New Datalink' }, children: datalinkEditRoutes},\n        { path: 'edit/:datalinkKey', component: DatalinkEditComponent, canDeactivate: [DatalinkEditGuard],\n            data: { action: 'edit', navigateSkip: true, pageTitle: 'Edit Datalink' }, children: datalinkEditRoutes},\n        { path: 'copy/:datalinkKey', component: DatalinkEditComponent, canDeactivate: [DatalinkEditGuard],\n            data: { action: 'copy', navigateSkip: true, pageTitle: 'Copy Datalink' }, children: datalinkEditRoutes},\n        { path: 'sourceTable/:sourceTableKey', component: DatalinkEditComponent, canDeactivate: [DatalinkEditGuard],\n            data: { action: 'sourceTable', navigateSkip: true, pageTitle: 'Edit Datalink' }, children: datalinkEditRoutes}\n];\n\nexport const Routing = RouterModule.forChild(routes);\n","import { Injectable, OnDestroy, OnInit } from '@angular/core';\nimport { FormArray, FormGroup } from '@angular/forms';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { eLogLevel, LogFactory } from '../../../../logging';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { InputOutputColumns } from '../../hub.lineage.models';\nimport { HubService } from '../../hub.service';\nimport { TransformReference } from '../../hub.remote.models';\nimport { CancelToken } from '../../../+auth/auth.models';\nimport { HubCache } from '../../hub.models';\nimport { eTransformType, DexihDatalinkColumn, eParameterDirection, eTypeCode, DexihDatalinkTransformItem,\n    DexihDatalinkTransform, DexihDatalinkTable, eTransformItemType, eSourceType, eFunctionType } from '../../../shared/shared.models';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n// contains shared objects used to edit the datalink.\n\n@Injectable()\nexport class DatalinkEditService implements OnInit, OnDestroy {\n\n    private _hubCache: HubCache;\n\n    public showAllErrors = false;\n\n    public datalinkKey: number;\n\n    public logger = new LogFactory('datalink-edit.service');\n\n    // used to stop save occurring when changing functions and target ables.\n    savingDatalink = new BehaviorSubject(false);\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        public hubFormsService: HubFormsService) {\n    }\n\n    ngOnInit() {\n    }\n\n    public init(hubCache: HubCache) {\n        this._hubCache = hubCache;\n    }\n\n    ngOnDestroy() {\n        this.hubFormsService.ngOnDestroy();\n    }\n\n    savingDataLinkObservable(): Observable<boolean> {\n        return this.savingDatalink.asObservable();\n    }\n\n    getValidationTransform(): FormGroup {\n        this.logger.LogC(() => `getValidationTransform`, eLogLevel.Trace);\n\n        let datalinkForm = this.hubFormsService.currentForm;\n        let datalinkTransforms = <FormArray>datalinkForm.controls['dexihDatalinkTransforms'];\n        let datalinkTransform = <FormGroup>datalinkTransforms.controls\n            .find(c => c.value.transformType === eTransformType.Validation);\n\n        return datalinkTransform;\n    }\n\n    getDatalinkTransform(datalinkTransformKey: number): FormGroup {\n        this.logger.LogC(() => `getDatalinkTransform`, eLogLevel.Trace);\n\n        let datalinkForm = this.hubFormsService.currentForm;\n        let datalinkTransforms = <FormArray>datalinkForm.controls['dexihDatalinkTransforms'];\n\n        let datalinkTransform = <FormGroup>datalinkTransforms.controls\n            .find(c => c.value.key === datalinkTransformKey);\n\n        return datalinkTransform;\n    }\n\n    getDatalinkTransformItem(datalinkTransformForm: FormGroup, datalinkTransformItemKey: number): FormGroup {\n        this.logger.LogC(() => `getDatalinkTransformItem, key:${datalinkTransformItemKey}.`, eLogLevel.Trace);\n\n        let datalinkTransformItems = <FormArray>datalinkTransformForm.controls['dexihDatalinkTransformItems'];\n        let datalinkTransformItem = <FormGroup>datalinkTransformItems.controls\n            .find(c => c.value.key === datalinkTransformItemKey);\n\n        this.logger.LogC(() => `getDatalinkTransformItem finished.`, eLogLevel.Trace);\n\n        return datalinkTransformItem;\n    }\n\n     // fixes the key mappings when a transform is removed or columns are refreshed\n     fixMappings(datalinkForm: FormGroup) {\n        let io = new InputOutputColumns();\n        let datalinkTransforms = <FormArray> datalinkForm.controls.dexihDatalinkTransforms;\n        datalinkTransforms.controls.forEach((datalinkTransformForm: FormGroup) => {\n            let inputColumns = <DexihDatalinkColumn[]> datalinkTransformForm.controls.runTime.value.inputColumns;\n            let joinColumns = null;\n            if (datalinkTransformForm.value.joinDatalinkTable) {\n                joinColumns = datalinkTransformForm.value.joinDatalinkTable.dexihDatalinkColumns;\n            }\n\n            let nodeColumns = this.getNodeColumns(inputColumns);\n\n            this.fixMapping(nodeColumns, <FormGroup> datalinkTransformForm.controls.nodeDatalinkColumn);\n            this.fixMapping(joinColumns, <FormGroup> datalinkTransformForm.controls.joinSortDatalinkColumn);\n\n            // set the inputcolumns to the current node level.\n            if (datalinkTransformForm.controls.nodeDatalinkColumn.value) {\n                inputColumns = io.getAvailableColumns(inputColumns, datalinkTransformForm.controls.nodeDatalinkColumn.value.key , 0)\n            }\n\n            let items = <FormArray> datalinkTransformForm.controls.dexihDatalinkTransformItems;\n            items.controls.forEach((item: FormGroup) => {\n                this.fixMapping(inputColumns, <FormGroup> item.controls.sourceDatalinkColumn);\n                this.fixMapping(joinColumns, <FormGroup> item.controls.joinDatalinkColumn);\n                this.fixMapping(inputColumns, <FormGroup> item.controls.filterDatalinkColumn);\n\n                let parameters = <FormArray> item.controls.dexihFunctionParameters;\n                parameters.controls.forEach((parameter: FormGroup) => {\n                    switch (parameter.controls.direction.value) {\n                        case eParameterDirection.Input:\n                            this.fixMapping(inputColumns, <FormGroup> parameter.controls.datalinkColumn);\n                            break;\n                        case eParameterDirection.Join:\n                            this.fixMapping(joinColumns, <FormGroup> parameter.controls.datalinkColumn);\n                            break;\n                    }\n\n                    let arrayParameters = <FormArray> parameter.controls.arrayParameters;\n                    arrayParameters.controls.forEach((arrayParameter: FormGroup) => {\n                        switch (arrayParameter.controls.direction.value) {\n                            case eParameterDirection.Input:\n                                this.fixMapping(inputColumns, <FormGroup> arrayParameter.controls.datalinkColumn);\n                                break;\n                            case eParameterDirection.Join:\n                                this.fixMapping(joinColumns, <FormGroup> arrayParameter.controls.datalinkColumn);\n                                break;\n                        }\n                    });\n                });\n            });\n        });\n    }\n\n    private getNodeColumns(columns: DexihDatalinkColumn[]): DexihDatalinkColumn[] {\n        let nodes: DexihDatalinkColumn[] = [];\n        if (columns) {\n            columns.filter(c => c.dataType === eTypeCode.Node && c.isValid).forEach(col => {\n                nodes.push(col);\n                if (col.childColumns && col.childColumns.length > 0) {\n                    nodes = nodes.concat(this.getNodeColumns(col.childColumns));\n                }\n            });\n        }\n\n        return nodes;\n    }\n\n    private fixMapping(inputColumns: DexihDatalinkColumn[], columnForm: FormGroup) {\n        let column  = <DexihDatalinkColumn> columnForm.value;\n        if (!inputColumns || !column) { return; }\n\n        if (inputColumns.findIndex(c => c.key === column.key) < 0) {\n            let inputColumn = inputColumns\n                .find(c => c.name === column.name && c.columnGroup === column.columnGroup);\n            if (!inputColumn) {\n                inputColumn = inputColumns.find(c => c.name === column.name);\n            }\n\n            if (inputColumn) {\n                columnForm.setValue(inputColumn);\n            }\n        }\n    }\n\n    public getFunctionType(datalinkTransform: DexihDatalinkTransform): eFunctionType {\n        let functionType: eFunctionType;\n        switch (datalinkTransform.transformType) {\n            case eTransformType.Filter:\n                functionType = eFunctionType.Condition;\n                break;\n            case eTransformType.Mapping:\n                functionType = eFunctionType.Map;\n                break;\n            case eTransformType.Join:\n                functionType = eFunctionType.JoinCondition;\n                break;\n            case eTransformType.Group:\n            case eTransformType.Aggregate:\n                functionType = eFunctionType.Aggregate;\n                break;\n            case eTransformType.Series:\n                functionType = eFunctionType.Series;\n                break;\n            case eTransformType.Sort:\n                functionType = eFunctionType.Sort;\n                break;\n            case eTransformType.Validation:\n                functionType = eFunctionType.Validate;\n                break;\n            case eTransformType.Rows:\n                functionType = eFunctionType.Rows;\n                break;\n            case eTransformType.Lookup:\n                functionType = eFunctionType.JoinCondition;\n                break;\n            case eTransformType.Delta:\n                break;\n        }\n\n        return functionType;\n    }\n\n    public getVariables(): string[] {\n        let variables = this.hubFormsService.currentForm.controls.parameters.value.map(c => '{' + c.name + '}')\n        .concat(this._hubCache.hub.dexihHubVariables.map(c => '{' + c.name + '}'));\n\n        return variables;\n    }\n\n    public getColumnGroups(columns: DexihDatalinkColumn[]): Array<{ group: string, columns: Array<DexihDatalinkColumn> }> {\n        let previousGroup: string = null;\n\n        let columnGroups: Array<{ group: string, columns: Array<DexihDatalinkColumn> }> = [];\n        let cols: Array<DexihDatalinkColumn> = null;\n\n        columns\n            .filter(c => c.isValid)\n            .sort((a, b) => a.position - b.position)\n            .forEach(column => {\n                let group = column.columnGroup ? column.columnGroup : '(un-grouped)';\n                if (group !== previousGroup) {\n                    if (cols) {\n                        columnGroups.push({ group: previousGroup, columns: cols });\n                    }\n                    previousGroup = group;\n                    cols = [];\n                }\n                cols.push(column);\n            });\n\n        if (cols && cols.length > 0) {\n            columnGroups.push({ group: previousGroup, columns: cols });\n        }\n\n        return columnGroups;\n    }\n\n    insertDatalinkTransformItem(datalinkTransformForm: FormGroup, datalinkTransformItemForm: FormGroup): DexihDatalinkTransformItem {\n        this.logger.LogC(() => `insertDatalinkTransformItem`, eLogLevel.Trace);\n\n        let datalinkTransformItem = <DexihDatalinkTransformItem> datalinkTransformItemForm.value;\n\n        let datalinkTransformItemsArray = (<FormArray>datalinkTransformForm.controls['dexihDatalinkTransformItems']);\n        // use temporary negative keys for items which have not been saved.\n        if (!datalinkTransformItem.key) {\n            datalinkTransformItem.key = this._hubCache.getNextSequence();\n            if (datalinkTransformItemsArray.controls.length === 0) {\n                datalinkTransformItem.position = 1;\n            } else {\n                datalinkTransformItem.position = Math.max.apply(Math, datalinkTransformItemsArray.controls.map(o => o.value.position)) + 1;\n            }\n            let form = this.hubFormsService.datalinkDatalinkTransformItemFormGroup(datalinkTransformForm, datalinkTransformItem);\n            datalinkTransformItemsArray.push(form);\n        } else {\n            // existing item? lookup previous item and copy the updated values across.\n            let currentIndex = datalinkTransformItemsArray.controls\n                .findIndex(c => c.value['key'] === datalinkTransformItem.key);\n            datalinkTransformItemsArray.removeAt(currentIndex);\n\n            let form = this.hubFormsService.datalinkDatalinkTransformItemFormGroup(datalinkTransformForm, datalinkTransformItem);\n            datalinkTransformItemsArray.push(form);\n        }\n\n        this.fixMappings(this.hubFormsService.currentForm);\n\n        this.logger.LogC(() => `insertDatalinkTransformItem finished`, eLogLevel.Trace);\n\n        return datalinkTransformItem;\n    }\n\n    deleteDatalinkTransformItem(datalinkTransformForm: FormGroup, datalinkTransformItemForm: FormGroup) {\n        this.logger.LogC(() => `deleteDatalinkTransformItem`, eLogLevel.Trace);\n\n        let datalinkTransformItems = <FormArray>datalinkTransformForm.controls['dexihDatalinkTransformItems'];\n        let index = datalinkTransformItems.controls.indexOf(datalinkTransformItemForm);\n        datalinkTransformItems.removeAt(index);\n\n        this.fixMappings(this.hubFormsService.currentForm);\n    }\n\n    deleteDatalinkTarget(datalinkForm: FormGroup, datalinkTargetKey: Number) {\n        this.logger.LogC(() => `deleteDatalinkTarget`, eLogLevel.Trace);\n\n        let datalinkTargets = <FormArray>datalinkForm.controls['dexihDatalinkTargets'];\n        let index = datalinkTargets.controls.findIndex(c => c.value.key === datalinkTargetKey);\n        if (index >= 0) {\n            datalinkTargets.removeAt(index);\n        }\n    }\n\n    insertDatalinkTransform(position: number, transform: TransformReference): FormGroup {\n        this.logger.LogC(() => `insertDatalinkTransform`, eLogLevel.Trace);\n\n        let datalinkForm = this.hubFormsService.currentForm;\n        let datalinkTransforms = <FormArray>datalinkForm.controls['dexihDatalinkTransforms'];\n\n        let newDatalinkTransform = new DexihDatalinkTransform();\n\n        // use temporary negative keys for datalink transforms which have not been saved.\n        let minKey = -1;\n        datalinkTransforms.controls.forEach(dt => {\n            if (dt.value['key'] <= minKey) {\n                minKey = dt.value['key'] - 1;\n            }\n        });\n\n        this.logger.LogC(() => `insertDatalinkTransform key:${minKey}`, eLogLevel.Trace);\n\n        newDatalinkTransform.key = minKey;\n        newDatalinkTransform.transformType = transform.transformType;\n        newDatalinkTransform.transformAssemblyName = transform.transformAssemblyName;\n        newDatalinkTransform.transformClassName = transform.transformClassName;\n        // newDatalinkTransform.name = transform.name;\n        // newDatalinkTransform.description = transform.description;\n        newDatalinkTransform.dexihDatalinkTransformItems = new Array<DexihDatalinkTransformItem>();\n        newDatalinkTransform.isValid = true;\n\n        // default pass-through columns off for map, group, and row transforms.\n        switch (transform.transformType) {\n            case eTransformType.Group:\n            case eTransformType.Rows:\n            case eTransformType.Mapping:\n                newDatalinkTransform.passThroughColumns = false;\n                break;\n            default:\n                newDatalinkTransform.passThroughColumns = true;\n        }\n\n        if (transform.transformType === eTransformType.Join\n            || transform.transformType === eTransformType.Lookup || transform.transformType === eTransformType.Concatenate) {\n            newDatalinkTransform.joinDatalinkTable = new DexihDatalinkTable();\n            newDatalinkTransform.joinDatalinkTable.key = this._hubCache.getNextSequence();\n        }\n\n        if (transform.transformType === eTransformType.Series) {\n            let seriesItem = new DexihDatalinkTransformItem();\n            seriesItem.transformItemType = eTransformItemType.Series;\n            seriesItem.position = 0;\n            seriesItem.isValid = true;\n            newDatalinkTransform.dexihDatalinkTransformItems.push(seriesItem);\n        }\n\n        newDatalinkTransform.position = position;\n\n        let datalinkTransformForm = this.hubFormsService.datalinkTransformFormGroup(newDatalinkTransform);\n        datalinkTransforms.push(datalinkTransformForm);\n\n        this.resetDatalinkTransformPositions();\n\n        this.logger.LogC(() => `insertDatalinkTransform finished.`, eLogLevel.Trace);\n\n        return datalinkTransformForm;\n    }\n\n    deleteDatalinkTransform(datalinkTransform: DexihDatalinkTransform): Promise<boolean> {\n        return new Promise<boolean>((resolve) => {\n            this.authService.confirmDialog('Delete Transform',\n                `Are you sure you would like to remove the transform ${datalinkTransform.name}?`)\n                .then(confirm => {\n                    if (confirm) {\n                        let datalinkForm = this.hubFormsService.currentForm;\n                        let datalinkTransforms = <FormArray>datalinkForm.controls['dexihDatalinkTransforms'];\n                        let index = datalinkTransforms.controls\n                            .findIndex(c => c.value.key === datalinkTransform.key);\n                        datalinkTransforms.removeAt(index);\n                        this.resetDatalinkTransformPositions();\n                    }\n                    resolve(confirm);\n                }).catch(() => {\n                    resolve(false);\n                });\n        });\n    }\n\n    async resetDatalinkTransformPositions() {\n        const datalinkForm = this.hubFormsService.currentForm;\n        const datalinkTransforms = <FormArray>datalinkForm.controls.dexihDatalinkTransforms;\n\n        let userConfigTransforms = await this.hubService.GetUserConfigTransformReference();\n\n        let position = 10;\n        datalinkTransforms.controls.sort((a, b) => a.value.position - b.value.position).forEach(datalinkTransform => {\n            const dt = <FormGroup>datalinkTransform;\n\n            let transformReference = userConfigTransforms.find(e => e.transformClassName === datalinkTransform.value.transformClassName);\n\n            // if the transform is a validation/delta, then position at the end.\n            if (transformReference) {\n                dt.controls.position.setValue(position);\n                position += 10;\n            } else {\n                dt.controls.position.setValue(1000000);\n            }\n        });\n    }\n\n    importFunctionMappings(datalinkTransformKey: number, item: DexihDatalinkTransformItem, cancelToken: CancelToken):\n        Promise<string[]> {\n\n        let datalink = this.hubFormsService.getDatalinkValue();\n        const cache = this._hubCache;\n\n        return this.hubService.hubPostRemote<string[]>('/api/Hub/ImportFunctionMappings', {\n            hubKey: cache.hub.hubKey,\n            remoteAgentId: this.hubService.getCurrentRemoteAgentId(),\n            datalink: datalink,\n            datalinkTransformKey: datalinkTransformKey,\n            datalinkTransformItem: item\n        }, 'Importing function mappings...', cancelToken);\n    }\n\n    reBuildDatalinkTable(datalinkTable: DexihDatalinkTable, confirm = false) {\n        if (confirm) {\n            // tslint:disable-next-line:max-line-length\n            this.authService.confirmDialog('Rebuild Columns?', `This action will load the selected table columns, and replace or delete any existing columns.  This may require fixing some mappings.  Do you want to proceed?`)\n                .then((confirm2) => {\n                    if (confirm2) {\n                    this.doRebuildDatalinkTable(datalinkTable)\n                    }\n                }).catch();\n        } else {\n            this.doRebuildDatalinkTable(datalinkTable);\n        }\n    }\n\n    private doRebuildDatalinkTable(datalinkTable: DexihDatalinkTable) {\n\n        datalinkTable.dexihDatalinkColumns.forEach(datalinkColumn => datalinkColumn.isValid = false);\n\n        switch (datalinkTable.sourceType) {\n            case eSourceType.Table:\n                let sourceTable = this._hubCache.getTable(datalinkTable.sourceTableKey);\n                if (sourceTable) {\n                    datalinkTable.name = sourceTable.name;\n\n                    datalinkTable.dexihDatalinkColumns = this.mergeDatalinkColumns(\n                        datalinkTable.name, datalinkTable.key,\n                        sourceTable.dexihTableColumns, datalinkTable.dexihDatalinkColumns);\n\n                }\n                break;\n            case eSourceType.Datalink:\n                let datalink = this._hubCache.hub.dexihDatalinks.find(c => c.key === datalinkTable.sourceDatalinkKey);\n                if (datalink) {\n                    datalinkTable.name = datalink.name;\n\n                    let io = new InputOutputColumns();\n                    // const datalinkColumns = io.getInputColumns(this._hubCache, datalink, null, []);\n                    io.buildInputOutput(this._hubCache, datalink);\n\n                    let datalinkColumns: DexihDatalinkColumn[];\n\n                    if (datalink.dexihDatalinkTransforms.length === 0) {\n                        datalinkColumns = datalink.sourceDatalinkTable.dexihDatalinkColumns;\n                    } else {\n                        let transforms = datalink.dexihDatalinkTransforms.sort((a, b) => a.position - b.position);\n                        let transform = transforms[transforms.length - 1];\n                        datalinkColumns = transform['runTime'].outputColumns;\n                    }\n\n                    datalinkTable.dexihDatalinkColumns = this.mergeDatalinkColumns(\n                        datalinkTable.name, datalinkTable.key,\n                        datalinkColumns, datalinkTable.dexihDatalinkColumns);\n                }\n                break;\n            case eSourceType.Rows:\n                datalinkTable.name = 'Static Row Set';\n\n                let rowDatalinkColumn = datalinkTable.dexihDatalinkColumns.find(c => c.name === 'RowNumber');\n                if (!rowDatalinkColumn) {\n                    rowDatalinkColumn = new DexihDatalinkColumn();\n                    rowDatalinkColumn.key = this._hubCache.getNextSequence();\n                    rowDatalinkColumn.datalinkTableKey = datalinkTable.key;\n                    datalinkTable.dexihDatalinkColumns.push(rowDatalinkColumn);\n                }\n\n                rowDatalinkColumn.name = 'RowNumber';\n                rowDatalinkColumn.logicalName = rowDatalinkColumn.name;\n                rowDatalinkColumn.dataType = eTypeCode.Int32;\n                rowDatalinkColumn.isMandatory = true;\n                rowDatalinkColumn.isValid = true;\n                rowDatalinkColumn.description = 'The generated row number of the static row set';\n\n                break;\n        }\n    }\n\n    private mergeDatalinkColumns(groupName: string, datalinkTableKey: number,\n            newColumns: any, existingColumns: DexihDatalinkColumn[]): DexihDatalinkColumn[] {\n        newColumns.forEach(column => {\n            let datalinkColumn = existingColumns.find(c => c.name === column.name && c.columnGroup === groupName);\n            if (!datalinkColumn) {\n                datalinkColumn = existingColumns.find(c => c.name === column.name);\n            }\n            if (!datalinkColumn) {\n                datalinkColumn = new DexihDatalinkColumn();\n                datalinkColumn.key = this._hubCache.getNextSequence();\n                datalinkColumn.datalinkTableKey = datalinkTableKey;\n                existingColumns.push(datalinkColumn);\n            }\n\n            Object.keys(datalinkColumn).forEach(key => {\n                if (key === 'childColumns') {\n                    if (column[key] && column[key].length > 0) {\n                        datalinkColumn[key] = this.mergeDatalinkColumns(groupName, datalinkTableKey, column[key], datalinkColumn[key]);\n                    } else {\n                        datalinkColumn[key] = [];\n                    }\n                } else if (key !== 'key' && column[key]) {\n                    datalinkColumn[key] = column[key];\n                } else if (key === 'columnGroup') {\n                    if (groupName) {\n                        if (datalinkColumn[key] && datalinkColumn[key] !== groupName) {\n                            datalinkColumn[key] = groupName + '.' + datalinkColumn[key];\n                        } else {\n                            datalinkColumn[key] = groupName;\n                        }\n                    }\n                }\n            });\n        });\n\n        return existingColumns;\n    }\n\n}\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubCache, sourceTypes, ConnectionTables } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { Subscription, combineLatest, merge} from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { eSourceType, DexihDatalink, DexihDatalinkTable } from '../../../../shared/shared.models';\n\n@Component({\n    selector: 'datalink-table',\n    templateUrl: './datalink-table.component.html'\n})\n\nexport class DatalinkTableComponent implements OnInit, OnDestroy {\n    @Input() datalinkTableForm: FormGroup;\n\n    public errors: {};\n\n    private _subscription: Subscription;\n    private _datalinkTableSubscription: Subscription;\n\n    private hubCache: HubCache;\n\n    public eSourceType = eSourceType;\n    public sourceTypes = sourceTypes;\n\n    public connectionTables: ConnectionTables[] = [];\n    public datalinks: DexihDatalink[] = [];\n\n    public isVersioned = false;\n\n    constructor(\n        private hubService: HubService,\n        public datalinkEditService: DatalinkEditService) {\n        }\n\n    ngOnInit() {\n        this.errors = this.datalinkEditService.hubFormsService.getFormErrorMessages(this.datalinkTableForm, true);\n\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                this.hubCache = result[0];\n\n                this.subscribeDatalinkChanges();\n\n                if (this.hubCache && this.hubCache.isLoaded() && this.datalinkTableForm) {\n                    this.connectionTables = this.hubCache.getConnectionTables();\n                    this.datalinks = this.hubCache.hub.dexihDatalinks;\n                    this.updateIsVersioned();\n                }\n            });\n\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Selected datalink table');\n        }\n    }\n\n    updateIsVersioned() {\n        if (this.datalinkTableForm.controls.sourceType.value === eSourceType.Table) {\n            var table = this.hubCache.getTable(this.datalinkTableForm.controls.sourceTableKey.value);\n            if (table) {\n                this.isVersioned = table.isVersioned\n            }\n        }\n    }\n\n    subscribeDatalinkChanges() {\n        if (this._datalinkTableSubscription) { this._datalinkTableSubscription.unsubscribe(); }\n        this._datalinkTableSubscription = merge(\n            this.datalinkTableForm.controls.sourceType.valueChanges,\n            this.datalinkTableForm.controls.sourceTableKey.valueChanges,\n            this.datalinkTableForm.controls.sourceDatalinkKey.valueChanges,\n        ).subscribe(() => {\n            this.errors = this.datalinkEditService.hubFormsService.getFormErrorMessages(this.datalinkTableForm, true);\n            this.refreshColumns();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._datalinkTableSubscription) { this._datalinkTableSubscription.unsubscribe(); }\n    }\n\n    refreshColumns() {\n        try {\n            // temporarily unsubscribe to avoid a recursive loop.\n            if (this._datalinkTableSubscription) { this._datalinkTableSubscription.unsubscribe(); }\n\n            let datalinkTable = <DexihDatalinkTable>this.datalinkTableForm.value;\n            datalinkTable.sourceType = this.datalinkTableForm.controls.sourceType.value;\n            datalinkTable.sourceTableKey = this.datalinkTableForm.controls.sourceTableKey.value;\n            datalinkTable.sourceDatalinkKey = this.datalinkTableForm.controls.sourceDatalinkKey.value;\n\n            this.datalinkEditService.reBuildDatalinkTable(datalinkTable);\n\n            this.datalinkEditService.fixMappings(this.datalinkEditService.hubFormsService.currentForm);\n\n            this.datalinkTableForm.controls.name.setValue(datalinkTable.name);\n            this.datalinkTableForm.controls.rowsEndAt.setValue(datalinkTable.rowsEndAt);\n            this.datalinkTableForm.controls.rowsStartAt.setValue(datalinkTable.rowsStartAt);\n            this.datalinkTableForm.controls.rowsIncrement.setValue(datalinkTable.rowsIncrement);\n            this.datalinkTableForm.controls.sourceType.setValue(datalinkTable.sourceType);\n\n            this.updateIsVersioned();\n\n            let tableColumnsForm = <FormArray>this.datalinkTableForm.controls.dexihDatalinkColumns;\n            while (tableColumnsForm.length > 0) {\n                tableColumnsForm.removeAt(0);\n            }\n\n            datalinkTable.dexihDatalinkColumns.sort((a, b) => a.position - b.position).filter(c => c.isValid).forEach(column => {\n                tableColumnsForm.push(this.datalinkEditService.hubFormsService.datalinkTableColumn(tableColumnsForm.value, column));\n            });\n\n            this.subscribeDatalinkChanges();\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Refresh datalink columns');\n        }\n    }\n\n\n}\n","<form *ngIf=\"datalinkTableForm\"  [formGroup]=\"datalinkTableForm\">\n    <fieldset>\n        <section >\n            <form-select label=\"Data Source Type\" formControlName=\"sourceType\" [items]=\"sourceTypes\" itemKey=\"key\" itemName=\"name\"\n                iconClass=\"fa fa-database\"  note='Specify the source type for this table' [enableFilter]=\"false\">\n            </form-select>\n        </section>\n\n        <section *ngIf=\"datalinkTableForm.value.sourceType == eSourceType.Table\" >\n            <form-select label=\"Source Table\" formControlName=\"sourceTableKey\" [errors]=\"errors?.sourceTableKey\" [items]=\"connectionTables\" parentName=\"name\" childItems=\"dexihTables\" itemKey=\"key\" itemName=\"logicalName\"\n                note=\"Select the source table\" >\n                <table-edit-button [key]=\"datalinkTableForm.controls.sourceTableKey.value\"></table-edit-button>\n            </form-select>\n        </section>\n\n        <section *ngIf=\"datalinkTableForm.value.sourceType == eSourceType.Datalink\">\n            <form-select label=\"Source Datalink\" formControlName=\"sourceDatalinkKey\" [errors]=\"errors?.sourceDatalinkKey\" [items]=\"datalinks\" itemKey=\"key\" itemName=\"name\"\n                note='Select the source datalink'>\n                <datalink-edit-button [key]=\"datalinkTableForm.controls.sourceDatalinkKey.value\"></datalink-edit-button>\n            </form-select>\n        </section>\n\n        <section *ngIf=\"datalinkTableForm.value.sourceType == eSourceType.Rows\">\n            <form-input label=\"Start At\" type=\"number\" formControlName=\"rowsStartAt\" placeholder=\"Enter start row number\" iconClass=\"fa fa-list\">\n            </form-input>\n\n            <form-input label=\"End At\" type=\"number\" formControlName=\"rowsEndAt\" placeholder=\"Enter end row number\" iconClass=\"fa fa-list\">\n            </form-input>\n\n            <form-input label=\"Increment By\" type=\"number\" formControlName=\"rowsIncrement\" placeholder=\"Enter increment value\" iconClass=\"fa fa-list\">\n            </form-input>\n        \n        </section>\n\n        <section >\n            <form-checkbox label=\"Disable query logic being pushed down to the database\" formControlName=\"disablePushDown\"></form-checkbox>\n            <form-checkbox *ngIf=\"isVersioned\" label=\"Disable source table versions\" formControlName=\"disableVersioning\"></form-checkbox>\n\n            <form-input label=\"Table Alias\" formControlName=\"name\" \n                note='An alias that can be used to describe the table instance (this is generally used to differentiate self-joined tables).'>\n            </form-input>\n        </section>\n\n        <dexih-button-refresh (click)=\"refreshColumns()\" tooltip=\"Refresh the columns from the source table.\" ></dexih-button-refresh>\n    </fieldset>\n</form>","export { InputColumnsComponent } from './input-columns.component';\nexport { InputColumnComponent } from './input-column.component';\n","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { HubCache, eMappingStatus,\n    MappingStatusInfo, impactMappingStatuses, lineageMappingStatuses } from '../../../hub.models';\nimport { eObjectUse, ColumnUsageNode, InputOutputColumns, eDatalinkObjectType } from '../../../hub.lineage.models';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { DexihDatalinkColumn, eTypeCode } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'input-column',\n    templateUrl: './input-column.component.html'\n})\nexport class InputColumnComponent implements OnInit, OnDestroy {\n    @Input() public column: DexihDatalinkColumn = null;\n    @Input() public datalinkTransformForm: FormGroup;\n\n    private _subscription: Subscription;\n\n    private hubCache: HubCache;\n    private datalinkForm: FormGroup;\n\n    eMappingStatus = eMappingStatus;\n    eTypeCode = eTypeCode;\n\n    mappingStatusInfoImpact: MappingStatusInfo;\n    mappingStatusInfoLineage: MappingStatusInfo;\n\n    childColumns: DexihDatalinkColumn[];\n\n    constructor(\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n                this.hubCache = result[0];\n                this.datalinkForm = result[1];\n\n                let datalinkTransform = this.datalinkTransformForm.value;\n\n                let columnUsage: ColumnUsageNode = new ColumnUsageNode(\n                    eDatalinkObjectType.Transform,\n                    eObjectUse.Target,\n                    this.datalinkForm.value,\n                    this.column,\n                    null,\n                    datalinkTransform,\n                    null,\n                    eMappingStatus.NotMapped,\n                    this.hubCache\n                );\n\n                let mappingStatusImpact = columnUsage.createDatalinkImpact(false);\n                this.mappingStatusInfoImpact = impactMappingStatuses.find(c => c.key === mappingStatusImpact);\n\n                let mappingStatusLineage = columnUsage.createDatalinkLineage(true);\n                this.mappingStatusInfoLineage = lineageMappingStatuses.find(c => c.key === mappingStatusLineage);\n\n                let io = new InputOutputColumns();\n                if (io.findColumn(this.column,\n                    datalinkTransform.nodeDatalinkColumn ? datalinkTransform.nodeDatalinkColumn.key : null)) {\n                    this.childColumns = this.column.childColumns;\n                }\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Input Column');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n\n}\n","<div class=\"list-group-item p-0 rounded-0\" dragZone zone=\"input-column\" [data]=\"column\" zone=\"input-column\" >\n    <div class=\"d-flex flex-row\">\n        <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoLineage.statusClass\" [title]=\"mappingStatusInfoLineage.name\"></i>\n\n        <a class=\"flex-fill input-group-text ellipsis-overflow rounded-0 border-0\" style=\"overflow:hidden; text-overflow :ellipsis;\" \n         [title]=\"column.logicalName + ' ' + eTypeCode[column.dataType]\" >\n            {{column.logicalName}}\n        </a>\n        <i class=\"input-group-text rounded-0  border-0 border-l1\" [ngClass]=\"mappingStatusInfoImpact.statusClass\" [title]=\"mappingStatusInfoImpact.name\"></i>\n    </div>\n</div>\n<div *ngIf=\"childColumns?.length > 0\" class=\"p-2\">\n    <input-column *ngFor=\"let childColumn of childColumns\" [column]=\"childColumn\" [datalinkTransformForm]=\"datalinkTransformForm\"></input-column>\n</div>","import { Component, Input, OnInit, OnDestroy, OnChanges } from '@angular/core';\nimport { Subscription} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { DexihDatalinkColumn } from '../../../../shared/shared.models';\nimport { DatalinkEditService } from '../datalink-edit.service';\n\n@Component({\n\n    selector: 'input-columns',\n    templateUrl: './input-columns.component.html'\n})\nexport class InputColumnsComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() public datalinkTransformForm: FormGroup;\n\n    private _inputColumnsSubscribe: Subscription;\n    columns: Array<DexihDatalinkColumn> = [];\n    columnGroups: Array<{group: string, columns: Array<DexihDatalinkColumn>}> = [];\n\n    constructor(private editDatalinkService: DatalinkEditService) {\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnChanges() {\n        if (this._inputColumnsSubscribe) { this._inputColumnsSubscribe.unsubscribe(); }\n\n        this.columnGroups = this.editDatalinkService.getColumnGroups(this.datalinkTransformForm.controls.runTime.value.inputColumns);\n\n        this._inputColumnsSubscribe =  this.datalinkTransformForm.controls.runTime.valueChanges.subscribe(() => {\n            this.columnGroups = this.editDatalinkService.getColumnGroups(this.datalinkTransformForm.controls.runTime.value.inputColumns);\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._inputColumnsSubscribe) { this._inputColumnsSubscribe.unsubscribe(); }\n    }\n}\n","<div *ngIf=\"datalinkTransformForm\" cdkDropList #cdkDropList=\"cdkDropList\">\n    <span *ngFor=\"let table of inputTables; let tableIndex = index\">\n        <dexih-widget-section *ngIf=\"table.dexihDatalinkColumns.length > 0\" [title]=\"table.name\" [padding]=\"false\" [showExpandButton]=\"true\">\n            <div class=\"list-group\">\n                <input-column\n                    *ngFor=\"let column of table.dexihDatalinkColumns | fieldSort : 'position' | isValidFilter \"\n                    [datalinkTransformForm]='datalinkTransformForm' [column]='column'>\n                </input-column>\n            </div>\n        </dexih-widget-section>\n    </span>\n    <dexih-widget-section *ngFor=\"let columnGroup of columnGroups\" [title]=\"columnGroup.group\" [padding]=\"false\"  [showExpandButton]=\"true\" >\n        <div *ngFor=\"let column of columnGroup.columns | fieldSort : 'position' | isValidFilter; let i = index\">\n            <input-column [datalinkTransformForm]='datalinkTransformForm' [column]='column'>\n            </input-column>\n        </div>\n    </dexih-widget-section>\n</div>\n","export { JoinColumnComponent } from './join-column.component';\nexport { JoinColumnsComponent } from './join-columns.component';\n","import { Component, Input, Output, OnInit, OnDestroy, EventEmitter } from '@angular/core';\nimport { HubCache, eMappingStatus, MappingStatusInfo, lineageMappingStatuses, impactMappingStatuses } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { eObjectUse, ColumnUsageNode, eDatalinkObjectType } from '../../../hub.lineage.models';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { DexihDatalinkColumn, DexihTable, eTypeCode } from '../../../../shared/shared.models';\n\n\n@Component({\n    selector: 'join-column',\n    templateUrl: './join-column.component.html'\n})\nexport class JoinColumnComponent implements OnInit, OnDestroy {\n\n    @Input() public column: DexihDatalinkColumn = null;\n    @Input() public datalinkTransformForm: FormGroup;\n    @Input() public datalinkForm: FormGroup;\n    @Input() public inputTables: Array<DexihTable> = null;\n    @Output() public inputJoinDrop: EventEmitter<{inputColumn: DexihDatalinkColumn, joinColumn: DexihDatalinkColumn}>\n            = new EventEmitter<{inputColumn: DexihDatalinkColumn, joinColumn: DexihDatalinkColumn}>();\n\n    private _hubCacheSubscription: Subscription;\n\n    private hubCache: HubCache;\n\n    eMappingStatus = eMappingStatus;\n    eTypeCode = eTypeCode;\n\n    columnLineageStatusIcon: string;\n    columnLineageStatusColor: string;\n\n    public mappingStatusInfoImpact: MappingStatusInfo;\n    public mappingStatusInfoLineage: MappingStatusInfo;\n\n    constructor(private hubService: HubService) {\n    }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(hubCache => {\n            if (hubCache.isLoaded()) {\n                this.hubCache = hubCache;\n\n                let columnUsage = new ColumnUsageNode(\n                    eDatalinkObjectType.Transform,\n                    eObjectUse.Target,\n                    this.datalinkForm.value,\n                    this.column,\n                    null,\n                    this.datalinkTransformForm.value,\n                    null,\n                    eMappingStatus.NotMapped,\n                    this.hubCache\n                    );\n                let lineageMappingStatus = columnUsage.createDatalinkLineage(false);\n                this.mappingStatusInfoLineage = lineageMappingStatuses.find(c => c.key === lineageMappingStatus);\n\n                let impactMappingStatus = columnUsage.createDatalinkImpact(false);\n                this.mappingStatusInfoImpact = impactMappingStatuses.find(c => c.key === impactMappingStatus);\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n    }\n\n}\n","<div class=\"list-group-item p-0 rounded-0\">\n    <div class=\"d-flex flex-row\">\n        <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoLineage.statusClass\" [title]=\"mappingStatusInfoLineage.name\"></i>\n\n        <a *ngIf=\"mappingStatusInfoLineage.key != eMappingStatus.Joined\" class=\"flex-fill input-group-text ellipsis-overflow rounded-0 border-0\"\n            style=\"overflow:hidden; text-overflow :ellipsis;\" \n            [title]=\"column.logicalName + ' ' + eTypeCode[column.dataType]\">\n            {{column.logicalName}}\n        </a>\n        <a *ngIf=\"mappingStatusInfoLineage.key == eMappingStatus.Joined\" class=\"flex-fill input-group-text ellipsis-overflow rounded-0 border-0\"\n            style=\"overflow:hidden; text-overflow :ellipsis;\" [title]=\"column.logicalName + ' ' + eTypeCode[column.dataType]\">\n            {{column.logicalName}}\n        </a>\n        <i class=\"input-group-text rounded-0  border-0 border-l1\" [ngClass]=\"mappingStatusInfoImpact.statusClass\" [title]=\"mappingStatusInfoImpact.name\"></i>\n    </div>\n</div>","import { Component, Input, Output, OnInit, OnChanges, OnDestroy, EventEmitter } from '@angular/core';\nimport { HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { DexihDatalinkColumn, eTransformType } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'join-columns',\n    templateUrl: './join-columns.component.html'\n})\nexport class JoinColumnsComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() public datalinkTransformForm: FormGroup;\n\n    @Output() public inputJoinDrop: EventEmitter<{ inputColumn: DexihDatalinkColumn, joinColumn: DexihDatalinkColumn }>\n        = new EventEmitter<{ inputColumn: DexihDatalinkColumn, joinColumn: DexihDatalinkColumn }>();\n\n    private _subscription: Subscription;\n    private _changesSubscription: Subscription;\n\n    public joinTable;\n\n    public eTransformType = eTransformType;\n\n    public datalinkForm: FormGroup;\n\n    public joinColumns: Array<DexihDatalinkColumn>;\n\n    constructor(\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n    ) {\n    }\n\n    ngOnInit() {\n        try {\n\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n                this.datalinkForm = result[1];\n\n                if (this.datalinkForm) {\n                    this.updateTableData();\n                }\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Edit Custom Function');\n        }\n    }\n\n    ngOnChanges() {\n        this.updateTableData();\n        if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n        this._changesSubscription = this.datalinkTransformForm.controls.joinDatalinkTable.valueChanges.subscribe(() => {\n            this.updateTableData();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n    }\n\n    updateTableData() {\n        if (this.datalinkTransformForm && this.datalinkTransformForm.controls.joinDatalinkTable.value) {\n            this.joinTable = this.datalinkTransformForm.controls.joinDatalinkTable.value;\n            if (this.joinTable) {\n                this.joinColumns = new Array<DexihDatalinkColumn>();\n                this.joinTable.dexihDatalinkColumns.forEach(column => {\n                    this.joinColumns.push(column)\n                });\n            } else {\n                this.joinColumns = null;\n            }\n        } else {\n            this.joinColumns = null;\n        }\n    }\n\n    newInputJoinDrop(inputColumn: DexihDatalinkColumn, joinColumn: DexihDatalinkColumn) {\n        this.inputJoinDrop.emit({inputColumn, joinColumn});\n    }\n}\n","<div *ngIf=\"joinColumns\">\n    <dexih-widget-section [title]=\"joinTable?.name + '(' + eTransformType[this.datalinkTransformForm.value.transformType] + ')'\" [padding]=\"false\" [showExpandButton]=\"true\">\n        <join-column *ngFor=\"let column of joinColumns | fieldSort : 'position' | isValidFilter\"\n            [datalinkForm]='datalinkForm' [datalinkTransformForm]='datalinkTransformForm' [column]='column' dropZone\n            (dropData)=\"newInputJoinDrop($event, column)\" zone=\"input-column\" dropAllowedClass=\"drop-zone-green\">\n        </join-column>\n    </dexih-widget-section>\n</div>","export * from './mapping-edit.component';","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HubCache, sortDirections } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { FormGroup } from '@angular/forms';\nimport { compare } from '../../../hub.query.models';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { eTransformItemType, DexihDatalinkColumn, eAggregate, eCompare, \n  DexihDatalinkTransformItem, eTypeCode, DexihDatalinkTarget, DexihTable, DexihTableColumn, eAggregateItems } from '../../../../shared/shared.models';\n\n@Component({\n  selector: 'mapping-edit',\n  templateUrl: './mapping-edit.component.html'\n})\nexport class MappingEditComponent implements OnInit, OnDestroy {\n  // public hubCache: HubCache;\n\n  public pageTitle: string;\n\n  private _subscription: Subscription;\n  private _formChangesObserve: Subscription;\n  private _saveSubscription: Subscription;\n\n  datalinkTransformItemKey: number;\n  datalinkKey: number;\n  datalinkTransformKey: number;\n\n  public hubCache: HubCache;\n\n  datalinkForm: FormGroup;\n  datalinkTransformForm: FormGroup;\n  datalinkTransformItemForm: FormGroup;\n  transformItemType: eTransformItemType;\n  eTransformItemType = eTransformItemType;\n\n  variables: string[];\n\n  newDatalinkTransformItemForm: FormGroup;\n  newColumn: DexihDatalinkColumn;\n  filterValue: any;\n  sourceValue: any;\n\n  inputColumns: Array<{group: string, columns: Array<DexihDatalinkColumn>}> = [];\n  outputColumns: Array<DexihDatalinkColumn>;\n  joinColumns: Array<DexihDatalinkColumn>;\n  datalinkTargets: Array<DexihDatalinkTarget>;\n  outputTables: Array<DexihTable>;\n  showInput = true;\n  showOutput = true;\n\n  eAggregate = eAggregate;\n  eAggregateItems = eAggregateItems.filter(c => c.key > 0);\n  compare = compare;\n  eCompare = eCompare;\n\n  sourceErrors: string;\n  targetErrors: string;\n  joinErrors: string;\n\n  sortDirections = sortDirections;\n\n  constructor(\n    private hubService: HubService,\n    private authService: AuthService,\n    private editDatalinkService: DatalinkEditService,\n    private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n        this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n        this.hubService.getRemoteLibrariesObservable()\n      ).subscribe(result => {\n        this.pageTitle = result[0]['pageTitle'];\n        let params = result[1];\n        this.hubCache = result[2];\n        let datalinkForm = result[3];\n\n        if (!this.hubCache.isLoaded()) { return; }\n\n        this.datalinkForm = datalinkForm;\n\n        this.variables = this.editDatalinkService.getVariables();\n\n        this.datalinkTransformItemKey = +params['datalinkTransformItemKey'];\n        this.datalinkTransformKey = +params['datalinkTransformKey'];\n        this.transformItemType = +params['type'];\n\n        if (this.datalinkForm) {\n          this.datalinkTransformForm = this.editDatalinkService.getDatalinkTransform(this.datalinkTransformKey);\n\n          switch (this.transformItemType) {\n              case eTransformItemType.JoinPair:\n                this.showInput = true;\n                this.showOutput = false;\n                this.pageTitle = 'Edit Join';\n                break;\n              case eTransformItemType.Column:\n              this.showInput = true;\n              this.showOutput = false;\n              this.pageTitle = 'Edit Group';\n                break;\n              case eTransformItemType.JoinNode:\n              this.showInput = false;\n              this.showOutput = true;\n                this.pageTitle = 'Edit Join Node';\n                break;\n              case eTransformItemType.GroupNode:\n              this.showInput = false;\n              this.showOutput = true;\n                this.pageTitle = 'Edit Group Node';\n                break;\n              case eTransformItemType.Sort:\n              this.showInput = true;\n              this.showOutput = false;\n                this.pageTitle = 'Edit Sort';\n                break;\n              case eTransformItemType.FilterPair:\n              this.showInput = true;\n              this.showOutput = false;\n                this.pageTitle = 'Edit Condition';\n                break;\n              case eTransformItemType.AggregatePair:\n                this.pageTitle = 'Edit Aggregate';\n                this.showInput = true;\n                this.showOutput = true;\n                break;\n              default:\n                this.pageTitle = 'Edit Mapping';\n                this.showInput = true;\n                this.showOutput = true;\n          }\n\n          let nodeDatalinkColumn = this.datalinkTransformForm.controls.nodeDatalinkColumn.value;\n          let nodeDatalinkColumnKey = nodeDatalinkColumn ? nodeDatalinkColumn.key : null;\n          let io = new InputOutputColumns();\n          if (nodeDatalinkColumnKey) {\n            let inputColumns = <DexihDatalinkColumn[]> this.datalinkTransformForm.controls.runTime.value.inputColumns;\n            let nodeColumns = io.getAvailableColumns(inputColumns, nodeDatalinkColumnKey, 0);\n            this.inputColumns = this.editDatalinkService.getColumnGroups(nodeColumns);\n            this.outputColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n          } else {\n            this.inputColumns = this.editDatalinkService.getColumnGroups(this.datalinkTransformForm.controls.runTime.value.inputColumns);\n            this.outputColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n          }\n          if (this.datalinkTransformForm.value.joinDatalinkTable) {\n            this.joinColumns = this.datalinkTransformForm.value.joinDatalinkTable.dexihDatalinkColumns;\n          }\n\n          this.datalinkTargets = this.datalinkForm.controls.dexihDatalinkTargets.value;\n          let table = new DexihTable() \n          table.name = \"Output Columns\";\n          table.dexihTableColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n          this.outputTables = [table];\n\n          if(this.datalinkTargets) {\n              this.datalinkTargets.forEach(target => {\n                  this.outputTables.push(target['table']);\n              });\n          }\n\n\n          if (this.datalinkTransformItemKey) {\n            this.datalinkTransformItemForm = this.editDatalinkService\n              .getDatalinkTransformItem(this.datalinkTransformForm, this.datalinkTransformItemKey);\n\n              this.filterValue = this.datalinkTransformItemForm.controls.filterValue.value;\n              this.sourceValue = this.datalinkTransformItemForm.controls.sourceValue.value;\n\n              // create a copy of the form item to allow for cancel.\n            this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n              .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, this.datalinkTransformItemForm.value);\n          } else {\n            let newItem = new DexihDatalinkTransformItem();\n            newItem.datalinkTransformKey = this.datalinkTransformKey;\n            newItem.transformItemType = this.transformItemType;\n\n            this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n              .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, newItem);\n          }\n\n          this.getErrors();\n          if (this._formChangesObserve) { this._formChangesObserve.unsubscribe(); }\n          this._formChangesObserve = this.newDatalinkTransformItemForm.statusChanges.subscribe(() => {\n            this.getErrors();\n          })\n        }\n\n        if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n        this._saveSubscription = this.editDatalinkService.savingDatalink.subscribe(value => {\n            if(value) {\n                this.apply();\n            }\n        });\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Edit Mapping Function');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._formChangesObserve) { this._formChangesObserve.unsubscribe(); }\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n  }\n\n  cancel() {\n    this.authService.navigateUp();\n  }\n\n  getErrors() {\n    this.targetErrors = this.editDatalinkService.hubFormsService.getErrorMessage(\n      this.newDatalinkTransformItemForm.controls.targetDatalinkColumn);\n    this.sourceErrors = this.editDatalinkService.hubFormsService.getErrorMessage(\n      this.newDatalinkTransformItemForm.controls.sourceDatalinkColumn);\n    this.joinErrors = this.editDatalinkService.hubFormsService.getErrorMessage(\n      this.newDatalinkTransformItemForm.controls.sourceDatalinkColumn);\n  }\n\n  apply() {\n    // this.datalinkTransformItemForm.setValue(this.newDatalinkTransformItemForm.value);\n    this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, this.newDatalinkTransformItemForm);\n  }\n\n  updateNewColumn(value: string) {\n    let current = this.newDatalinkTransformItemForm.controls.targetDatalinkColumn.value;\n    if (value && (!current || current.name !== value )) {\n      let key: number;\n      if (this.newColumn) {\n        key = this.newColumn.key;\n      } else {\n        key = this.hubService.getHubCache().getNextSequence();\n      }\n\n      let sourceColumn = <DexihDatalinkColumn>this.newDatalinkTransformItemForm.controls.sourceDatalinkColumn.value;\n\n      if (sourceColumn) {\n        let io = new InputOutputColumns();\n        this.newColumn = io.copyDatalinkColumn(sourceColumn, 1000 - key, 'mapping');\n      } else {\n        this.newColumn = new DexihDatalinkColumn();\n        this.newColumn.position = 1000 - key;\n\n        if (this.transformItemType === eTransformItemType.JoinNode) {\n          this.newColumn.dataType = eTypeCode.Node;\n          this.newColumn.childColumns = this.joinColumns;\n        } else {\n          this.newColumn.dataType = eTypeCode.String;\n        }\n      }\n\n      this.newColumn.name = value;\n      this.newColumn.logicalName = value;\n      this.newColumn.columnGroup = 'mapping';\n      this.newColumn.key = key;\n\n      this.newDatalinkTransformItemForm.controls.targetDatalinkColumn.setValue(this.newColumn);\n    }\n  }\n\n  updateFilterValue(value: string) {\n      this.newDatalinkTransformItemForm.controls.filterValue.setValue(value);\n  }\n\n  updateSourceValue(value: string) {\n    this.newDatalinkTransformItemForm.controls.sourceValue.setValue(value);\n  }\n\n  applyExit() {\n    this.apply();\n    this.authService.navigateUp();\n  }\n}\n\n","<div *ngIf=\"newDatalinkTransformItemForm && inputColumns && outputColumns\">\n\n\t<dexih-widget-section [title]=\"pageTitle\" [showExpandButton]=\"false\">\n\t\t<ng-template #header>\n\t\t\t<dexih-button-apply [disabled]=\"newDatalinkTransformItemForm.pristine\"\n\t\t\t\t(click)=\"!newDatalinkTransformItemForm.pristine && applyExit()\" class=\"mr-1\"></dexih-button-apply>\n\t\t\t<dexih-button-cancel (click)=\"cancel()\"></dexih-button-cancel>\n\t\t</ng-template>\n\t\t<form [formGroup]=\"newDatalinkTransformItemForm\">\n\t\t\t<fieldset>\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section *ngIf=\"transformItemType == eTransformItemType.AggregatePair\" class=\"form-group col-md-4\">\n\t\t\t\t\t\t<form-select label=\"Aggregate\" formControlName=\"aggregate\" [items]=\"eAggregateItems\" itemKey=\"key\"\n\t\t\t\t\t\t\titemName=\"name\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<section *ngIf=\"showInput\" class=\"form-group col-md-4\">\n\t\t\t\t\t\t<form-select label=\"Input Column\" formControlName=\"sourceDatalinkColumn\" [items]=\"inputColumns\"\n\t\t\t\t\t\t\tparentName=\"group\" childItems=\"columns\"\n\t\t\t\t\t\t\t[(textValue)]=\"sourceValue\" (textValueChange)=\"updateSourceValue($event)\"\n\t\t\t\t\t\t\t[enableKeySelect]=\"false\"\n\t\t\t\t\t\t\t[enableTextEntry]=\"true\" [enableTextEntryMatch]=\"false\" itemName=\"logicalName\" itemKey=\"key\"\n\t\t\t\t\t\t\t[errors]=\"sourceErrors\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section *ngIf=\"transformItemType == eTransformItemType.FilterPair || transformItemType == eTransformItemType.JoinPair\" class=\"form-group col-md-4\">\n\t\t\t\t\t\t<form-select label=\"Compare\" formControlName=\"filterCompare\" [items]=\"compare\" itemKey=\"key\"\n\t\t\t\t\t\t\titemName=\"name\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section *ngIf=\"transformItemType == eTransformItemType.FilterPair && newDatalinkTransformItemForm.controls.filterCompare.value != eCompare.IsNotNull && newDatalinkTransformItemForm.controls.filterCompare.value != eCompare.IsNull\" class=\"form-group col-md-4\">\n\t\t\t\t\t\t<form-select\n\t\t\t\t\t\t\tlabel=\"Compare Column/Value\" formControlName=\"filterDatalinkColumn\"  [items]=\"inputColumns\"\n\t\t\t\t\t\t\tparentName=\"group\" childItems=\"columns\"\n\t\t\t\t\t\t\t[enableTextEntry]=\"true\" [(textValue)]=\"filterValue\"\n\t\t\t\t\t\t\t(textValueChange)=\"updateFilterValue($event)\" [enableTextEntryMatch]=\"false\" [enableKeySelect]=\"false\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"logicalName\" [errors]=\"filterValueErrors\"\n\t\t\t\t\t\t\t[textEntryItems]=\"variables\" textEntryItemsTitle=\"Variables\" [setTextEntryToValue]=\"false\"\n\t\t\t\t\t\t\tnote=\"Note: For static date values use format YYYY-MM-DD (e.g. 2018-01-30)\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section *ngIf=\"showOutput\" class=\"form-group col-md-4\">\n\t\t\t\t\t\t<form-select label=\"Output Column\" formControlName=\"targetDatalinkColumn\" [items]=\"outputTables\" parentName=\"name\" childItems=\"dexihTableColumns\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"logicalName\" note=\"Enter new column, or select existing\"\n\t\t\t\t\t\t\t[enableKeySelect]=\"false\" (textValueChange)=\"updateNewColumn($event)\" [enableTextEntry]=\"true\" [setTextEntryToValue]=\"false\"\n\t\t\t\t\t\t\ttextEntryNote=\"Enter new column name, or select existing\" [errors]=\"targetErrors\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section *ngIf=\"transformItemType == eTransformItemType.Sort\" class=\"form-group col-md-4\">\n\t\t\t\t\t\t<form-select label=\"Direction\" formControlName=\"sortDirection\" [items]=\"sortDirections\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"name\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section *ngIf=\"transformItemType == eTransformItemType.JoinPair\" class=\"form-group col-md-4\">\n\t\t\t\t\t\t<form-select label=\"Join Column\" formControlName=\"joinDatalinkColumn\" [items]=\"joinColumns\"\n\t\t\t\t\t\t\t[enableKeySelect]=\"false\" itemKey=\"key\" itemName=\"logicalName\" note=\"Select a join column\"\n\t\t\t\t\t\t\ttextEntryNote=\"Enter a value to add a new column\" [errors]=\"joinErrors\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t</form>\n\t</dexih-widget-section>\n</div>","export { MappingComponent } from './mapping.component';\nexport { MappingItemComponent } from './mapping-item.component';\n","<div class=\"container\">\n    <div *ngIf=\"!outputParameters\" class=\"row justify-content-start\">\n        <div class=\"col-auto\">\n            <h5>{{label}}</h5>\n            <div *ngIf=\"error\" class=\"text-danger\">\n                <i class=\"fa fa-exclamation-circle text-danger\" ></i>\n                {{error}}\n            </div>\n        </div>\n        <div *ngIf=\"source\" class=\"col-auto\"><i *ngIf=\"!source.valid\"\n                class=\"fa fa-exclamation-circle text-danger\" [title]=\"source.error\"></i>{{source.text}}</div>\n        <div *ngIf=\"target\" class=\"col-auto\">\n            <i *ngIf=\"source && !compare\" class=\"fa fa-arrow-right mr-2\"></i>\n            <i *ngIf=\"!target.valid\" class=\"fa fa-exclamation-circle text-danger\" [title]=\"target.error\"></i>\n            <span class=\"mr-2\" *ngIf=\"compare\">{{compare}}</span>\n            {{target.text}}\n        </div>\n    </div>\n\n    <ng-template [ngIf]=\"outputParameters\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <h5>{{label}}</h5>\n            </div>\n        </div>\n\n        <div *ngIf=\"source\"><i *ngIf=\"!source.valid\"\n            class=\"fa fa-exclamation-circle text-danger\" [title]=\"source.error\"></i>Source = {{source.text}}\n        </div>\n\n        <ng-template [ngIf]=\"inputParameters?.length > 0\">\n            <div class=\"row pt-2\">\n                <div class=\"col\">\n                    <h5>Inputs</h5>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col border bg-primary text-white font-weight-bold text-truncate\">Parameter</div>\n                <div class=\"col border bg-primary text-white font-weight-bold text-truncate\">Column / Value</div>\n            </div>\n            <ng-template ngFor let-parameter [ngForOf]=\"inputParameters\">\n                <div *ngFor=\"let value of parameter.values; let i = index;\" class=\"row\">\n                    <div class=\"col border bg-secondary text-white text-truncate\">\n                        <div *ngIf=\"i == 0\">{{ parameter.name}}</div>\n                    </div>\n                    <div class=\"col border border text-white bg-secondary text-truncate\" [title]=\"value.error\">\n                        <i *ngIf=\"!value.valid\" class=\"fa fa-exclamation-circle text-danger\" ></i>\n                        {{(parameter.values.length > 1 ? '[' + i + '] ' : '') + value.text}}\n                    </div>\n                </div>\n            </ng-template>\n        </ng-template>\n\n        <ng-template [ngIf]=\"mapParameters\">\n            <div *ngFor=\"let mapParameter of mapParameters\">\n                <div class=\"row pt-2\">\n                    <div class=\"col text-truncate\">\n                        <h5>{{mapParameter.name}}</h5>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div *ngFor=\"let parameter of mapParameter.parameters\"\n                        class=\"col border bg-primary text-white font-weight-bold text-truncate\">{{parameter.name}}</div>\n                </div>\n\n                <div *ngFor=\"let pValues of mapParameter.parameters[0].values; let i = index;\" class=\"row\">\n                    <div *ngFor=\"let parameter of mapParameter.parameters\"\n                        class=\"col border bg-secondary text-white text-truncate\" [title]=\"parameter.values[i].error\">\n                        <i *ngIf=\"!parameter.values[i].valid\" class=\"fa fa-exclamation-circle text-danger\" ></i>\n                        {{parameter.values[i].text}}\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template [ngIf]=\"outputParameters?.length > 0\">\n            <div class=\"row  pt-2\">\n                <div class=\"col\">\n                    <h5>Outputs</h5>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col border bg-primary text-white font-weight-bold text-truncate\">Parameter</div>\n                <div class=\"col border bg-primary text-white font-weight-bold text-truncate\">Column / Value</div>\n            </div>\n\n            <ng-template ngFor let-parameter [ngForOf]=\"outputParameters\">\n                <div *ngFor=\"let value of parameter.values; let i = index;\" class=\"row\">\n                    <div class=\"col border bg-secondary text-white text-truncate\">\n                        <div *ngIf=\"i == 0\">{{parameter.name}}</div>\n                    </div>\n                    <div class=\"col border border bg-secondary text-white text-truncate\" [title]=\"value.error\">\n                        <i *ngIf=\"!value.valid\" class=\"fa fa-exclamation-circle text-danger\" ></i>\n                        {{(parameter.values.length > 1 ? '[' + i + '] ' : '') + value.text}}\n                    </div>\n                </div>\n            </ng-template>\n        </ng-template>\n    </ng-template>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport {HubCache, transformItemTypes } from '../../../hub.models';\nimport { HubService } from '../../..';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { compare } from '../../../hub.query.models';\nimport { DexihDatalinkTransform, DexihDatalinkTransformItem, eTransformItemType, eCompare,\n    DexihDatalinkColumn, FunctionReference, eParameterDirection, eAggregate, eSortDirection, eTypeCode } from '../../../../shared/shared.models';\n\nexport class ValidValue {\n    public valid: boolean;\n    public text: string;\n    public error: string;\n}\n\nexport class ValidParameter {\n    public values: ValidValue[];\n    public name: string;\n}\n\nexport class ValidMapping {\n    public name: string;\n    public parameters: ValidParameter[];\n}\n\n@Component({\n    selector: 'mapping-item',\n    templateUrl: 'mapping-item.component.html'\n})\n\nexport class MappingItemComponent implements OnInit {\n    @Input() transform: DexihDatalinkTransform;\n    @Input() transformItem: DexihDatalinkTransformItem;\n    @Input() allowCondition: boolean;\n\n    private _subscription: Subscription;\n\n    private hubCache: HubCache;\n\n    public label: string;\n    public error: string;\n\n    public source: ValidValue;\n    public target: ValidValue;\n    public compare: string;\n    public inputParameters: ValidParameter[];\n    public outputParameters: ValidParameter[];\n\n    public mapParameters: ValidMapping[];\n\n    constructor(\n        private hubService: HubService) { }\n\n    ngOnInit() {\n        try {\n\n            if (this._subscription) { this._subscription.unsubscribe(); }\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.hubService.getRemoteLibrariesObservable()\n            ).subscribe(result => {\n                this.hubCache = result[0];\n                this.updateMapping();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Mappings');\n        }\n    }\n\n    async updateMapping() {\n        let item = this.transformItem;\n        let itemType = transformItemTypes.find(c => c.key === item.transformItemType);\n\n        switch (item.transformItemType) {\n            case eTransformItemType.BuiltInFunction:\n                if (item.functionClassName) {\n                    let func = await this.hubService.GetFunctionReference(item);\n                    if (func) {\n                        this.label = func.name;\n                        this.addBuiltInFunctionParameters(func);\n                    } else {\n                        this.error = `Error, function ${item.functionClassName}.${item.functionMethodName} not found.`;\n                    }\n                } else if (item.customFunctionKey) {\n                    let func = this.hubCache.hub.dexihCustomFunctions.find(c => c.key === item.customFunctionKey);\n                    if (func) {\n                        this.label = func.name;\n                        this.addCustomFunctionParameters();\n                    } else {\n                        this.error = 'Error, function not found.';\n                    }\n                } else {\n                    this.error = 'Error, function not found';\n                }\n                break;\n            case eTransformItemType.CustomFunction:\n                this.addCustomFunctionParameters();\n                break;\n            case eTransformItemType.AggregatePair:\n                this.label = eAggregate[item.aggregate];\n                break;\n            case eTransformItemType.Sort:\n                this.label = eSortDirection[item.sortDirection];\n                break;\n            case eTransformItemType.UnGroup:\n                this.label = 'UnGroup'\n                this.addUnGroupParameters();\n                break;\n            default:\n                this.label = itemType.name;\n                break;\n        }\n\n        if (itemType.useSource) { this.source = this.columnOrValue(null, item.sourceDatalinkColumn, item.sourceValue); }\n        if (itemType.useTarget) { this.target = this.describeDatalinkColumn(null, item.targetDatalinkColumn); }\n        if (itemType.useJoin) { this.target = this.describeDatalinkColumn(null, item.joinDatalinkColumn); }\n        if (itemType.useFilter) { this.target = this.columnOrValue(null, item.filterDatalinkColumn, item.filterValue)};\n\n        if (itemType.useFilter || itemType.useJoin) {\n            let filterCompare = item.filterCompare;\n            if (filterCompare === null) { filterCompare = eCompare.IsEqual };\n            this.compare = compare.find(c => c.key === filterCompare).name;\n        } else {\n            this.compare = null;\n        }\n    }\n\n    private columnOrValue(expectedDataType: eTypeCode, column: DexihDatalinkColumn, value: string): ValidValue {\n        if (column) {\n            return this.describeDatalinkColumn(expectedDataType, column);\n        } else {\n            return {text: this.describeStaticValue(value), valid: true, error: ''};\n        }\n    }\n\n    // concatenates the arrays together.\n    // node: .concat will append null arrays, where this ignores null arrays.\n    private concat<T>(...args: T[][]): T[] {\n        let array: T[] = [];\n        args.forEach(arg => {\n            if ( arg ) {\n                array = array.concat(arg);\n            }\n        });\n        return array;\n    }\n\n    private addBuiltInFunctionParameters(func: FunctionReference) {\n        let functionInputs = this.concat(func.inputParameters, func.resultInputParameters);\n        let functionOutputs = this.concat(func.outputParameters, func.returnParameters, func.resultOutputParameters,\n            func.resultReturnParameters);\n\n        let inputParams = this.transformItem.dexihFunctionParameters\n            .filter(c =>\n                c.direction === eParameterDirection.Input ||\n                c.direction === eParameterDirection.ResultInput ||\n                c.direction === eParameterDirection.Join);\n\n        this.inputParameters = functionInputs.filter(c => c && !c.linkedName).map<ValidParameter>(param => {\n            let p = inputParams.find(c => c.name === param.parameterName);\n            if (p) {\n                if (p.rank === 0) {\n                    let value = this.columnOrValue(p.dataType, p.datalinkColumn, p.value);\n                    return {name: this.describeParameterName(p), values: [value] };\n                } else {\n                    let values = p.arrayParameters.sort( (a, b) => a.position - b.position).map(ap => {\n                        return this.columnOrValue(ap.dataType, ap.datalinkColumn, ap.value);\n                    });\n                    return {name: this.describeParameterName(p), values: values};\n                }\n            } else {\n                return {name: this.describeParameterName(p), values: [{valid: false, error: 'Not Mapped', text: ''}]  };\n            }\n        });\n\n        let outputParams = this.transformItem.dexihFunctionParameters\n            .filter(\n                c => HubCache.parameterIsOutput(c));\n\n        this.outputParameters = functionOutputs.filter(c => c &&  !c.linkedName).map<ValidParameter>(param => {\n            let p = outputParams.find(c => c.name === param.parameterName);\n            if (p) {\n                if (this.allowCondition &&\n                    (p.direction === eParameterDirection.ReturnValue || p.direction === eParameterDirection.ResultReturnValue)) {\n                    return null;\n                }\n                if (p.rank === 0 || p.datalinkColumn !== null) {\n                    let value = this.describeDatalinkColumn(p.dataType, p.datalinkColumn);\n                    return {name: this.describeParameterName(p), values: [value]};\n                } else {\n                    let values = p.arrayParameters.sort( (a, b) => a.position - b.position).map(ap => {\n                        return this.describeDatalinkColumn(ap.dataType, ap.datalinkColumn);\n                    });\n                    return {name: this.describeParameterName(p), values: values};\n                }\n            } else {\n                // return {name: param.name, values: [{valid: false, text: 'Not mapped'}]  };\n                return null;\n            }\n        }).filter(c => c !== null);\n\n        let linkedNames = Array.from(new Set(this.concat(functionInputs, functionOutputs).map(c => c &&  c.linkedName).filter(c => c)));\n        this.mapParameters = linkedNames.map(name => {\n            let parameters: ValidParameter[] = functionInputs.filter(c => c.linkedName === name).map(param => {\n                let p = inputParams.find(c => c.name === param.parameterName);\n                let values = p.arrayParameters.sort( (a, b) => a.position - b.position).map(ap => {\n                    return this.columnOrValue(ap.dataType, ap.datalinkColumn, ap.value);\n                });\n                return {name: this.describeParameterName(param), values: values};\n            });\n\n            let parameters2: ValidParameter[] = functionOutputs.filter(c => c.linkedName === name).map(param => {\n                let p = outputParams.find(c => c.name === param.parameterName);\n                let values = p.arrayParameters.sort( (a, b) => a.position - b.position).map(ap => {\n                    return this.describeDatalinkColumn(ap.dataType, ap.datalinkColumn);\n                });\n                return {name: this.describeParameterName(param), values: values};\n            });\n\n            return {name: name, parameters: this.concat(parameters, parameters2)};\n        });\n    }\n\n    private addCustomFunctionParameters() {\n\n        let inputParams = this.transformItem.dexihFunctionParameters\n            .filter(c =>\n                c.direction === eParameterDirection.Input ||\n                c.direction === eParameterDirection.ResultInput ||\n                c.direction === eParameterDirection.Join);\n\n        this.inputParameters = inputParams.map<ValidParameter>(p => {\n            if (p.rank === 0) {\n                let value = this.columnOrValue(p.dataType, p.datalinkColumn, p.value);\n                return { name: this.describeParameterName(p), values: [value] };\n            } else {\n                let values = p.arrayParameters.sort((a, b) => a.position - b.position).map(ap => {\n                    return this.columnOrValue(ap.dataType, ap.datalinkColumn, ap.value);\n                });\n                return { name: this.describeParameterName(p), values: values };\n            }\n        });\n\n        let outputParams = this.transformItem.dexihFunctionParameters\n            .filter(c => HubCache.parameterIsOutput(c));\n\n        this.outputParameters = outputParams.map<ValidParameter>(p => {\n            if (p.rank === 0) {\n                let value = this.describeDatalinkColumn(p.dataType, p.datalinkColumn);\n                return { name: this.describeParameterName(p), values: [value] };\n            } else {\n                let values = p.arrayParameters.sort((a, b) => a.position - b.position).map(ap => {\n                    return this.describeDatalinkColumn(ap.dataType, ap.datalinkColumn);\n                });\n                return { name: this.describeParameterName(p), values: values };\n            }\n        });\n    }\n\n    private addUnGroupParameters() {\n\n        let parameters = this.transformItem.dexihFunctionParameters;\n\n        let runTime = this.transform['runTime'];\n        let inputColumns = runTime.inputColumns;\n\n        let sourceColumn = <DexihDatalinkColumn> inputColumns.find(c => c.key === this.transformItem.sourceDatalinkColumn.key);\n\n        if (sourceColumn) {\n            this.outputParameters = parameters.map<ValidParameter>(p => {\n                if (p.datalinkColumn) {\n                    let find = sourceColumn.childColumns.find(c => c.key === p.datalinkColumn.key);\n                    if (find) {\n                        return {name: this.describeParameterName(p), values: [{valid: true, error: '', text: p.datalinkColumn.name}]};\n                    }\n                    return {name: this.describeParameterName(p),\n                        values: [{valid: false, error: '(Invalid column) ', text: p.datalinkColumn.name}]};\n                } else {\n                    return {name: this.describeParameterName(p), values: [{valid: false, error: '(No column)', text: ''}]};\n                }\n            });\n        }\n    }\n\n    private describeParameterName(param): string {\n        return param.name + ' (' + eTypeCode[param.dataType] + ')';\n    }\n\n    private describeDatalinkColumn(expectedDataType: eTypeCode, value: DexihDatalinkColumn): ValidValue {\n        if (!value) {\n            return { error: '(not mapped)', text: '', valid: false };\n        }\n\n        let runTime = this.transform['runTime'];\n        let inputColumns = runTime.inputColumns;\n        let nodeDatalinkColumn = this.transform.nodeDatalinkColumn ? this.transform.nodeDatalinkColumn : null;\n        let nodeDatalinkColumnKey = nodeDatalinkColumn ? nodeDatalinkColumn.key : null;\n\n        let returnValue: string = null;\n\n        let io = new InputOutputColumns();\n        let col = io.findValidColumn(value, nodeDatalinkColumnKey, inputColumns);\n        if (col) {\n            returnValue = (value.columnGroup ? ('(' + value.columnGroup + ')') : '') + value.logicalName;\n        }\n\n        if (!returnValue) {\n            runTime.transformColumns.forEach(column => {\n                if (!returnValue && column.key === value.key) {\n                    returnValue = value.logicalName;\n                }\n            });\n        }\n\n        if (!returnValue && this.transform.joinDatalinkTable) {\n            let joinTable = this.transform.joinDatalinkTable;\n            joinTable.dexihDatalinkColumns.forEach(column => {\n                if (!returnValue && column.key === value.key) {\n                    returnValue = '(' + joinTable.name + ') ' + value.logicalName;\n                }\n            });\n        }\n\n        if (returnValue) {\n            if (expectedDataType == null || value.dataType === expectedDataType) {\n                return { text: returnValue, valid: true, error: '' }\n            } else {\n                return { text: returnValue, error: '(inconsistent datatype ' + eTypeCode[value.dataType] + ')', valid: false }\n            }\n        } else {\n            return { text: value.logicalName, error: '(Invalid column) ', valid: false }\n        }\n    }\n\n    private describeStaticValue(value: string): string {\n        if (value === ' ') {\n            return '<space>';\n        }\n        if (!value) {\n            return '<null>';\n        }\n        return '\"' + value + '\"';\n    }\n}\n","import { Component, Input, Output, ViewChild, OnInit, OnChanges, OnDestroy, EventEmitter, ElementRef } from '@angular/core';\nimport { Observable, BehaviorSubject, Subscription, combineLatest } from 'rxjs';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { eFunctionType, eTransformType, eTransformItemType, DexihDatalinkTransformItem,\n    DexihDatalinkTransform, DexihDatalinkColumn, eTypeCode, DexihDatalinkTable, eDeltaType, eCleanActionItems, eCompare } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'mapping',\n    templateUrl: './mapping.component.html'\n})\nexport class MappingComponent implements OnInit, OnDestroy, OnChanges {\n    @Input() public datalinkTransformForm: FormGroup;\n    @Input() public allowStandard = false;\n    @Input() public allowMapping = false;\n    @Input() public allowAggregate = false;\n    @Input() public allowRow = false;\n    @Input() public allowCondition = false;\n    @Input() public allowValidation = false;\n    @Input() public allowOutput = false;\n    @Input() public allowGroup = false;\n    @Input() public allowJoin = false;\n    @Input() public allowSort = false;\n    @Input() public allowSeries = false;\n    @Input() public allowJoinNode = false;\n    @Input() public title: string;\n\n    @Output() public addMapping: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public removeMapping: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public updateMapping: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public hasChanged: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public onColumnDrop: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChild('mappingTable', { static: true }) public mappingTable: ElementRef;\n\n    private _subscription: Subscription;\n    private _changesSubscription: Subscription;\n\n    columns: Array<any>;\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    public functionType: eFunctionType;\n    public transformType: eTransformType;\n    public eTransformType = eTransformType;\n    public eTransformItemType = eTransformItemType;\n\n    columnGroups: Array<{group: string, columns: Array<DexihDatalinkColumn>}> = [];\n    inputDateColumns: DexihDatalinkColumn[];\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        private router: Router,\n        private route: ActivatedRoute\n    ) {\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n    }\n\n    ngOnChanges() {\n        try {\n            // this.columns = [{ name: 'function', title: 'Mapping', format: 'Md', class: 'functionClass' }];\n            this.columns = [];\n\n            // if (!this.allowSort) {\n            //     this.columns.push({ name: 'function', title: 'Function Name', format: '', class: 'functionClass' });\n            // }\n\n            // this.columns.push({ name: 'input', title: 'Input(s)', format: 'Md', class: 'inputClass' });\n\n            // if (this.allowOutput || this.allowJoinNode) {\n            //     this.columns.push({ name: 'output', title: 'Output(s)', format: 'Md', class: 'outputClass' });\n            // }\n\n            // if (this.allowSort) {\n            //     this.columns.push({ name: 'sortDirection', title: 'Direction', format: '' });\n            // }\n\n            if (this._subscription) { this._subscription.unsubscribe(); }\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.hubService.getRemoteLibrariesObservable()\n            ).subscribe(() => {\n\n                this.functionType = this.editDatalinkService.getFunctionType(this.datalinkTransformForm.value);\n                this.transformType = this.datalinkTransformForm.value.transformType;\n\n                this.updateTableData();\n\n                if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n                this._changesSubscription = this.datalinkTransformForm.valueChanges.subscribe(() => this.updateTableData());\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Mappings');\n        }\n    }\n\n    updateTableData() {\n        try {\n            if (this.datalinkTransformForm) {\n                let runTime = this.datalinkTransformForm.controls['runTime'].value;\n                let inputColumns = <DexihDatalinkColumn[]> runTime.inputColumns;\n                this.inputDateColumns = inputColumns.filter(c => c.dataType === eTypeCode.DateTime || c.dataType === eTypeCode.Date);\n                this.columnGroups = this.editDatalinkService.getColumnGroups(inputColumns);\n\n                let data = [];\n                let items = <FormArray>this.datalinkTransformForm.controls.dexihDatalinkTransformItems;\n                let filteredItems: Array<any> = [];\n\n                if (this.allowJoinNode) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.JoinNode));\n                }\n\n                if (this.allowGroup) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.Column));\n                }\n\n                if (this.allowStandard || this.allowJoin) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.BuiltInFunction\n                            || d.value.transformItemType === eTransformItemType.CustomFunction));\n                }\n\n                if (this.allowAggregate) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.AggregatePair));\n                }\n\n                if (this.allowMapping) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.ColumnPair));\n                }\n\n                if (this.allowCondition) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.FilterPair));\n                }\n\n                if (this.allowJoin) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.JoinPair));\n                }\n\n                if (this.allowRow) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.UnGroup));\n                }\n\n                if (this.allowSort) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.Sort));\n                }\n\n                filteredItems.sort((a, b) => a.value.position - b.value.position).forEach(item => {\n                    const transformItem: DexihDatalinkTransformItem = item.value;\n                    let functionItem = {\n                        datalinkTransformItem: transformItem,\n                        key: transformItem.key,\n                    }\n\n                    data.push(functionItem);\n                });\n\n                this._tableData.next(data);\n            }\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Mappings, update data');\n        }\n\n    }\n\n    private getItemFormGroup(datalinkTransformItemKey: number): FormGroup {\n        let items = <FormArray>this.datalinkTransformForm.controls['dexihDatalinkTransformItems'];\n        let item = <FormGroup>items.controls.find(c => c.value.key === datalinkTransformItemKey);\n        return item;\n    }\n\n    editMapping(item: DexihDatalinkTransformItem) {\n        let key = item.key;\n        let itemForm = this.getItemFormGroup(key);\n        let transformItemType = itemForm.value.transformItemType;\n\n        switch (transformItemType) {\n            case eTransformItemType.BuiltInFunction:\n                this.router.navigate(\n                    ['standard-function-edit', this.functionType, key],\n                    { relativeTo: this.route.parent });\n                break;\n            case eTransformItemType.CustomFunction:\n                this.router.navigate(\n                    ['custom-function-edit', this.functionType, key],\n                    { relativeTo: this.route.parent });\n                break;\n            case eTransformItemType.Column:\n            case eTransformItemType.JoinNode:\n            case eTransformItemType.GroupNode:\n            case eTransformItemType.ColumnPair:\n            case eTransformItemType.Sort:\n            case eTransformItemType.JoinPair:\n            case eTransformItemType.FilterPair:\n            case eTransformItemType.AggregatePair:\n            case eTransformItemType.Series:\n                this.router.navigate(['mapping-edit', transformItemType, key],\n                    { relativeTo: this.route.parent });\n                break;\n            case eTransformItemType.UnGroup:\n                this.router.navigate(['unGroup-edit', key], { relativeTo: this.route.parent });\n                break;\n}\n    }\n\n    deleteMapping(item: DexihDatalinkTransformItem) {\n        this.deleteSelected([item]);\n    }\n\n    deleteSelected(items: Array<DexihDatalinkTransformItem>) {\n        items.forEach(item => {\n            let key = item.key;\n            let itemForm = this.getItemFormGroup(key);\n            this.editDatalinkService.deleteDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n        });\n    }\n\n    // if a sort event has triggered from the table, then reset the positions of the datalink transform items.\n    datalinkItemSortChange(items: Array<DexihDatalinkTransformItem>) {\n        items.forEach((item, index) => {\n            let existingItems = <FormArray>this.datalinkTransformForm.controls.dexihDatalinkTransformItems;\n            let datalinkTransformItem = <FormGroup>existingItems.controls\n                .find(c => c.value.key === item.key);\n            if (datalinkTransformItem) {\n                datalinkTransformItem.controls.position.setValue(index);\n            }\n        });\n    }\n\n    // triggered when a source column is dropped onto the output column\n    newOutputDrop(inputColumn: DexihDatalinkColumn) {\n        this.onColumnDrop.emit({\n            inputColumn: inputColumn,\n            outputColumn: null\n        });\n    }\n\n    createJoinNode() {\n        let items = <FormArray>this.datalinkTransformForm.controls.dexihDatalinkTransformItems;\n        if (items.controls.find(d => d.value.transformItemType === eTransformItemType.JoinNode)) {\n            this.authService.informationDialog('Can not add node',  'Only one join node can be added.');\n            return;\n        }\n\n        let joinTable = this.datalinkTransformForm.value.joinDatalinkTable;\n\n        let item = new DexihDatalinkTransformItem();\n        let outputColumn: DexihDatalinkColumn = new DexihDatalinkColumn();\n        outputColumn.position = 0;\n        outputColumn.key = this.hubService.getHubCache().getNextSequence();\n        outputColumn.name = joinTable.name;\n        outputColumn.logicalName = joinTable.name;\n        let io = new InputOutputColumns();\n        let columns = joinTable.dexihDatalinkColumns.map((col, index) => {\n            let childColumn = io.copyDatalinkColumn(col, index, 'Join Node');\n            childColumn.key = this.hubService.getHubCache().getNextSequence();\n            childColumn.datalinkTableKey = null;\n            return childColumn;\n        });\n        outputColumn.childColumns = columns;\n        outputColumn.dataType = eTypeCode.Node;\n\n        item.position = -1;\n        item.datalinkTransformKey = this.datalinkTransformForm.value.key;\n        item.targetDatalinkColumn = outputColumn;\n        item.isValid = true;\n        item.transformItemType = eTransformItemType.JoinNode;\n\n        let itemForm = this.editDatalinkService.hubFormsService.datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n        this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n    }\n\n    createGroupNode() {\n        let items = <FormArray>this.datalinkTransformForm.controls.dexihDatalinkTransformItems;\n        if (items.controls.find(d => d.value.transformItemType === eTransformItemType.GroupNode)) {\n            this.authService.informationDialog('Can not add node',  'Only one group node can be added.');\n            return;\n        }\n\n        let item = new DexihDatalinkTransformItem();\n        let outputColumn: DexihDatalinkColumn = new DexihDatalinkColumn();\n        outputColumn.position = 0;\n        outputColumn.key = this.hubService.getHubCache().getNextSequence();\n        outputColumn.name = 'Group';\n        outputColumn.logicalName = 'Group';\n        outputColumn.dataType = eTypeCode.Node;\n\n        item.position = -1;\n        item.datalinkTransformKey = this.datalinkTransformForm.value.key;\n        item.targetDatalinkColumn = outputColumn;\n        item.isValid = true;\n        item.transformItemType = eTransformItemType.GroupNode;\n\n        let itemForm = this.editDatalinkService.hubFormsService.datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n        this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n    }\n\n    newMapping(itemType: eTransformItemType) {\n        this.router.navigate(['mapping-edit', itemType], { relativeTo: this.route });\n    }\n\n    addAll() {\n        let runTime = this.datalinkTransformForm.controls['runTime'].value;\n        let inputColumns = <DexihDatalinkColumn[]> runTime.inputColumns;\n\n        inputColumns.forEach(inputColumn => {\n            this.createMapping(inputColumn);\n        });\n    }\n\n    addGroup(group: {group: string, columns: Array<DexihDatalinkColumn>}) {\n        group.columns.forEach(inputColumn => {\n            this.createMapping(inputColumn);\n        });\n    }\n\n    private createMapping(inputColumn: DexihDatalinkColumn) {\n        let runTime = this.datalinkTransformForm.controls['runTime'].value;\n        let outputColumns = <DexihDatalinkColumn[]> runTime.outputColumns;\n\n        if ( outputColumns.findIndex(c => c.name === inputColumn.name) >= 0) {\n            return;\n        }\n\n        let item = new DexihDatalinkTransformItem();\n        let io = new InputOutputColumns();\n        let outputColumn = io.copyDatalinkColumn(inputColumn, 0, 'mapping');\n        outputColumn.key = this.hubService.getHubCache().getNextSequence();\n        if (outputColumn.childColumns) {\n            outputColumn.childColumns.forEach(col => {\n                col.key = this.hubService.getHubCache().getNextSequence();\n            });\n        }\n        outputColumn.datalinkTableKey = null;\n        item.datalinkTransformKey = this.datalinkTransformForm.value.key;\n        item.sourceDatalinkColumn = inputColumn;\n        item.targetDatalinkColumn = outputColumn;\n        item.transformItemType = eTransformItemType.ColumnPair;\n        item.isValid = true;\n        let itemForm = this.editDatalinkService.hubFormsService\n            .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n        this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n    }\n\n    // joins the column to the valid from/to columns\n    addValidFromTo(column: DexihDatalinkColumn) {\n        let joinTable = <DexihDatalinkTable> this.datalinkTransformForm.value.joinDatalinkTable;\n        let validFrom = joinTable.dexihDatalinkColumns.find(c => c.deltaType === eDeltaType.ValidFromDate);\n        let validTo = joinTable.dexihDatalinkColumns.find(c => c.deltaType === eDeltaType.ValidToDate);\n        if ( !validFrom || !validTo ) {\n            this.authService.informationDialog('No valid from',  'The join table does not contain a columns with a valid from/to delta type.');\n            return;\n        }\n\n        let item = new DexihDatalinkTransformItem();\n        item.sourceDatalinkColumn = column;\n        item.joinDatalinkColumn = validFrom;\n        item.transformItemType = eTransformItemType.JoinPair;\n        item.filterCompare = eCompare.GreaterThanEqual;\n        let itemForm = this.editDatalinkService.hubFormsService.datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n        this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n\n        item = new DexihDatalinkTransformItem();\n        item.sourceDatalinkColumn = column;\n        item.joinDatalinkColumn = validTo;\n        item.transformItemType = eTransformItemType.JoinPair;\n        item.filterCompare = eCompare.LessThan;\n        itemForm = this.editDatalinkService.hubFormsService.datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n        this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n\n    }\n}\n","<dexih-widget [title]=\"title\" [scrollable]=\"true\" [showExpandButton]=\"true\">\n\n    <dexih-table [enableMultiSelect]=\"true\" [enableManualSort]=\"true\" [columns]=\"columns\" [dataObservable]=\"tableData\" [enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n        (rowClick)=\"editMapping($event)\" (onSortChanged)=\"datalinkItemSortChange($event)\"\n        tableClass=\"table table-striped table-hover m-0\" #mappingTable dropZone (dropData)=\"newOutputDrop($event)\"\n        zone=\"input-column\" dropAllowedClass=\"drop-zone-green\" actionHeading=\"Mappings\">\n\n        <ng-template #selectedItemAction select=\"selectedItemAction\" let-datalinkTransformItem=\"item\">\n            <dexih-button-edit class=\"mr-1 \" (click)=\"editMapping(datalinkTransformItem)\" title=\"Edit this mapping\">\n            </dexih-button-edit>\n        </ng-template>\n\n        <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n            <dexih-button-delete class=\"mr-1 \" (click)=\"deleteSelected(items)\"\n                title=\"Delete selected mapping functions\"></dexih-button-delete>\n        </ng-template>\n\n        <ng-template #rowAction let-item=\"item\">\n            <mapping-item (click)=\"editMapping(item)\" [transform]=\"datalinkTransformForm.value\"\n                [transformItem]=\"item.datalinkTransformItem\" [allowCondition]=\"allowCondition\"></mapping-item>\n        </ng-template>\n\n        <ng-template #actions let-items=\"items\">\n            <ng-template [ngIf]=\"allowMapping\">\n                <dexih-button-splitdropdown class=\"mr-1\" (buttonClick)=\"newMapping(eTransformItemType.ColumnPair)\"\n                    buttonClass=\"btn-primary\" iconClass=\"fa fa-map\"\n                    title=\"Create a new mapping, or drop a column to create new mapping.\" text='Mapping'>\n                    <li><a class=\"dropdown-item\"  title=\"Add all\" (click)=\"addAll()\">Add all input columns</a></li>\n                    <li *ngFor=\"let columnGroup of columnGroups\"><a class=\"dropdown-item\"  [title]=\"'Add all ' + columnGroup.group\" (click)=\"addGroup(columnGroup)\">Add all {{columnGroup.group}}</a></li>\n                </dexih-button-splitdropdown>\n            </ng-template>\n            <ng-template [ngIf]=\"allowCondition && !allowValidation\">\n                <dexih-button routerLink='mapping-edit/{{eTransformItemType.FilterPair}}'\n                    buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-filter\" title=\"Create a simple filter\">Filter\n                </dexih-button>\n            </ng-template>\n            <ng-template [ngIf]=\"allowAggregate\">\n                <dexih-button routerLink='mapping-edit/{{eTransformItemType.AggregatePair}}'\n                    buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-cubes\" title=\"Create a simple aggregate\">\n                    Aggregate</dexih-button>\n            </ng-template>\n            <ng-template [ngIf]=\"allowStandard || allowAggregate || allowCondition || allowRow || allowValidation\">\n                <dexih-button [routerLink]=\"['standard-function-edit', functionType]\"\n                    buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-dollar\" title=\"Create a new standard function\">\n                    Standard</dexih-button>\n                <dexih-button [routerLink]=\"['custom-function-edit', functionType]\" buttonClass=\"btn-primary mr-1 \"\n                    iconClass=\"fa fa-code\" title=\"Create a new custom function\">Custom</dexih-button>\n            </ng-template>\n            <ng-template [ngIf]=\"allowRow\">\n                <dexih-button routerLink='unGroup-edit' buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-map\"\n                    title=\"Un-Group a Node\">Un-Group</dexih-button>\n            </ng-template>\n            <ng-template [ngIf]=\"allowJoin\">\n                <dexih-button routerLink='mapping-edit/{{eTransformItemType.JoinPair}}'\n                    buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-link\" title=\"Create a new join\">Join\n                </dexih-button>\n                <dexih-button [routerLink]=\"['standard-function-edit', functionType]\"\n                    buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-dollar\" title=\"Create a new standard filter\">\n                    Filter</dexih-button>\n                <dexih-button [routerLink]=\"['custom-function-edit', functionType]\" buttonClass=\"btn-primary mr-1 \"\n                    iconClass=\"fa fa-code\" title=\"Create a new custom filter\">Custom Filter</dexih-button>\n\n                    <dexih-button-dropdown class=\"mr-1\" buttonClass=\"btn-primary\" iconClass=\"fa fa-calendar\"\n                    title=\"Add a joins between the column and the valid from/to\" text='Valid From/To'>\n                    <li *ngFor=\"let column of inputDateColumns\"><a class=\"dropdown-item\"  [title]=\"column.name\" (click)=\"addValidFromTo(column)\">{{column.name}}</a></li>\n                </dexih-button-dropdown>\n            </ng-template>\n            <ng-template [ngIf]=\"allowSort\">\n                <dexih-button routerLink='mapping-edit/{{eTransformItemType.Sort}}' buttonClass=\"btn-primary mr-1 \"\n                    iconClass=\"fa fa-sort-alpha-asc\" title=\"New Sort\">Sort</dexih-button>\n            </ng-template>\n            <ng-template [ngIf]=\"allowGroup\">\n                <dexih-button routerLink='mapping-edit/{{eTransformItemType.Column}}'\n                    buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-list\" title=\"New Group\">Group</dexih-button>\n            </ng-template>\n            <ng-template [ngIf]=\"allowJoinNode\">\n                <dexih-button (click)=\"createJoinNode()\" buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-list\"\n                    title=\"Join Node\">Node</dexih-button>\n            </ng-template>\n        </ng-template>\n    </dexih-table>\n</dexih-widget>","<dexih-widget-section title='Select a Transform' [padding]=\"true\">\n    <div class=\"d-flex flex-wrap justify-content-around\">\n            <a *ngFor=\"let transform of transforms\" (click)=\"insert(transform.transformReference)\" href=\"javascript:void(0)\" \n            class=\"btn btn-outline-primary p-0 m-3\" style=\"width:400px\">\n                <div class=\"d-flex\">\n                    <div class=\"border-right border-primary p-3\" style=\"min-width:140px\">\n                        <div class=\"d-block\">\n                            {{transform.transformReference.name}}\n                        </div>\n                        <i class=\"fa fa-4x\" [ngClass]=\"transform.icon\"></i>\n                    </div>\n                    <div class=\"p-3 text-left\">\n                        {{transform.transformReference.description}}\n                    </div>\n                </div>\n            </a>\n    </div>\n</dexih-widget-section>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { TransformReference, transformTypes } from '../../../hub.remote.models';\n\n\n@Component({\n    selector: 'datalink-edit-new-transform',\n    templateUrl: './datalink-edit-new-transform.component.html'\n})\n\nexport class DatalinkEditNewTransformComponent implements OnInit, OnDestroy {\n\n    private _subscription: Subscription;\n\n    public transforms: Array<{transformReference: TransformReference, icon: string}>;\n    public position: number;\n\n    constructor(\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        private authService: AuthService,\n        private route: ActivatedRoute,\n        private router: Router\n\n    ) { }\n\n    ngOnInit() {\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n            ).subscribe(async result => {\n                this.transforms = [];\n                let userConfigTransforms = await this.hubService.GetUserConfigTransformReference();\n\n                userConfigTransforms.forEach(transform => {\n                    let transformType = transformTypes.find(c => c.key === transform.transformType);\n\n                    let icon = '';\n                    if (transformType) {\n                        icon = transformType.icon;\n                    }\n\n                    this.transforms.push({transformReference: transform, icon: icon })\n                })\n\n                this.position = + result[1]['position'];\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'New Transform');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n\n    insert(transform: TransformReference) {\n        let newDatalinkTransformForm = this.editDatalinkService.insertDatalinkTransform(this.position, transform);\n        this.router.navigate(['transform', newDatalinkTransformForm.value.key], { relativeTo: this.route.parent });\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n}\n","export { OutputColumnComponent } from './output-column.component';\nexport { OutputColumnsComponent } from './output-columns.component';\n","import { Component, Input, Output, OnInit, OnChanges, EventEmitter, OnDestroy } from '@angular/core';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { HubCache, eMappingStatus, MappingStatusInfo, lineageMappingStatuses, impactMappingStatuses } from '../../../hub.models';\nimport { eObjectUse, ColumnUsageNode, eDatalinkObjectType } from '../../../hub.lineage.models';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { LogFactory, eLogLevel } from '../../../../../logging';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { DexihDatalinkColumn, DexihTable, eTypeCode } from '../../../../shared/shared.models';\n\n\n@Component({\n\n    selector: 'output-column',\n    templateUrl: './output-column.component.html'\n})\nexport class OutputColumnComponent implements OnInit, OnDestroy, OnChanges {\n    @Input() public column: DexihDatalinkColumn = null;\n    @Input() public datalinkTransformForm: FormGroup;\n    @Input() public inputTables: Array<DexihTable> = null;\n    @Output() public inputOutputDrop: EventEmitter<{inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn}>\n            = new EventEmitter<{inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn}>();\n\n    private _subscription: Subscription;\n\n    private hubCache: HubCache;\n    private datalinkForm: FormGroup;\n\n    eMappingStatus = eMappingStatus;\n\n    public mappingStatusInfoLineage: MappingStatusInfo;\n    public mappingStatusInfoImpact: MappingStatusInfo;\n\n    public mappingStatusLineage: eMappingStatus;\n\n    childColumns: DexihDatalinkColumn[];\n\n    public logger = new LogFactory('output-column.component');\n    public logCount = 0;\n\n    public eTypeCode = eTypeCode;\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n              this.hubCache = result[0];\n              this.datalinkForm = result[1];\n\n              this.logger.LogC(() => `Subscription count: ${this.logCount++}`, eLogLevel.Trace);\n\n\n            this.childColumns = this.column.childColumns;\n\n              this.refreshStatus();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Output Column');\n        }\n    }\n\n    ngOnChanges() {\n        this.refreshStatus();\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    refreshStatus() {\n        if (this.datalinkForm) {\n            let columnUsage = new ColumnUsageNode(\n                eDatalinkObjectType.Transform,\n                eObjectUse.Target,\n                this.datalinkForm.value,\n                this.column,\n                null,\n                this.datalinkTransformForm.value,\n                null,\n                eMappingStatus.NotMapped,\n                this.hubCache\n                );\n\n                this.mappingStatusLineage = columnUsage.createDatalinkLineage(false);\n                this.mappingStatusInfoLineage = lineageMappingStatuses.find(c => c.key === this.mappingStatusLineage);\n\n                let mappingStatusImpact = columnUsage.createDatalinkImpact(true);\n\n                if (this.mappingStatusLineage === eMappingStatus.NotMapped && mappingStatusImpact !== eMappingStatus.AutoGenerate) {\n                    mappingStatusImpact = eMappingStatus.NotMapped;\n                }\n                this.mappingStatusInfoImpact = impactMappingStatuses.find(c => c.key === mappingStatusImpact);\n        }\n    }\n\n\n  editColumn() {\n      if (this.column.key && (this.mappingStatusLineage === eMappingStatus.Mapped\n        || this.mappingStatusLineage === eMappingStatus.MappedToNothing)) {\n        this.router.navigate(['column', this.column.key], { relativeTo: this.route.parent });\n      } else {\n          this.authService.informationDialog('Can not edit column',\n          // tslint:disable-next-line:max-line-length\n          'This column is not created by the current transform (i.e. a pass-through or target column).  To edit a column first create a mapping.')\n      }\n    }\n}\n","<div class=\"list-group-item p-0 rounded-0\" *ngIf=\"mappingStatusInfoLineage.key != eMappingStatus.Mapped\" [title]=\"column.logicalName + ' ' + column.dataType\" (click)=\"editColumn()\">\n    <div class=\"d-flex flex-row\">\n\n        <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoLineage.statusClass\" [title]=\"mappingStatusInfoLineage.name\"></i>\n        <span class=\"flex-fill input-group-text ellipsis-overflow rounded-0 border-0\">\n            {{column.logicalName}}\n        </span>\n        <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoImpact.statusClass\" [title]=\"mappingStatusInfoImpact.name\"></i>\n    </div>\n</div>\n<div class=\"list-group-item p-0 rounded-0\" *ngIf=\"mappingStatusInfoLineage.key == eMappingStatus.Mapped\" [title]=\"column.logicalName + ' ' + eTypeCode[column.dataType]\"\n    (click)=\"editColumn()\">\n    <div class=\"d-flex flex-row\">\n\n        <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoLineage.statusClass\" [title]=\"mappingStatusInfoLineage.name\"></i>\n        <span class=\"flex-fill input-group-text ellipsis-overflow rounded-0 border-0\">\n            {{column.logicalName}}\n        </span>\n\n        <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoImpact.statusClass\" [title]=\"mappingStatusInfoImpact.name\"></i>\n    </div>\n</div>\n<!-- <div *ngIf=\"childColumns?.length > 0\" class=\"p-2\">\n    <output-column *ngFor=\"let childColumn of childColumns\" [column]=\"childColumn\" [datalinkTransformForm]=\"datalinkTransformForm\"></output-column>\n</div> -->","import { Component, Input, Output, OnInit, OnChanges, OnDestroy, EventEmitter } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { DexihDatalinkColumn } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'output-columns',\n    templateUrl: './output-columns.component.html'\n})\nexport class OutputColumnsComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() public datalinkTransformForm: FormGroup;\n    @Input() public allowMappingOutputs = true;\n\n    @Output() public inputOutputDrop: EventEmitter<{ inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn }>\n        = new EventEmitter<{ inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn }>();\n\n    private _outputColumnsSubscribe: Subscription;\n    columns: Array<DexihDatalinkColumn> = [];\n    columnGroups: Array<{group: string, columns: Array<DexihDatalinkColumn>}> = [];\n\n    constructor(\n    ) {\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnChanges() {\n        if (this._outputColumnsSubscribe) { this._outputColumnsSubscribe.unsubscribe(); }\n        this.refreshColumns(this.datalinkTransformForm.controls.runTime.value.transformColumns);\n        this._outputColumnsSubscribe = this.datalinkTransformForm.controls.runTime.valueChanges.subscribe(() => {\n            this.refreshColumns(this.datalinkTransformForm.controls.runTime.value.transformColumns);\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._outputColumnsSubscribe) { this._outputColumnsSubscribe.unsubscribe(); }\n    }\n\n    refreshColumns(columns: DexihDatalinkColumn[]) {\n        let previousGroup: string = null;\n\n        let columnGroups: Array<{group: string, columns: Array<DexihDatalinkColumn>}> = [];\n        let cols: Array<DexihDatalinkColumn> = null;\n\n        columns\n            .filter(c => c.isValid)\n            .sort((a, b) => a.position - b.position)\n            .forEach(column => {\n            let group = column.columnGroup ? column.columnGroup : '(un-grouped)';\n            if (group !== previousGroup) {\n                if (cols) {\n                    columnGroups.push({group: previousGroup, columns: cols});\n                }\n                previousGroup = group;\n                cols = [];\n            }\n            cols.push(column);\n        });\n\n        if (cols && cols.length > 0) {\n            columnGroups.push({group: previousGroup, columns: cols});\n        }\n\n        this.columnGroups = columnGroups;\n    }\n\n    // triggered when a source column is dropped onto the output column\n    newOutputDrop(inputColumn: DexihDatalinkColumn) {\n        let outputColumn = this.columns.find(c => c.name === inputColumn.name);\n        this.inputOutputDrop.emit({\n            inputColumn: inputColumn,\n            outputColumn: outputColumn\n        });\n    }\n\n    newInputOutputDrop(inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn) {\n        this.inputOutputDrop.emit({\n            inputColumn: inputColumn,\n            outputColumn: outputColumn\n        });\n    }\n}\n","<div *ngIf=\"datalinkTransformForm\" cdkDropList #cdkDropList=\"cdkDropList\">\n    <li *ngIf=\"allowMappingOutputs\" class=\"list-group-item p-1 dexih-overflow b-0\" style=\"height: 40px;\" title=\"drop to create new mapping...\" dropZone (dropData)=\"newOutputDrop($event)\" [zone]=\"allowMappingOutputs ? 'input-column' : ''\" dropAllowedClass=\"drop-zone-green\">\n        &nbsp;(Drop&nbsp;Column)\n    </li>\n    <dexih-widget-section *ngFor=\"let columnGroup of columnGroups\" [title]=\"columnGroup.group\" [padding]=\"false\" [showExpandButton]=\"true\">\n        <div *ngFor=\"let column of columnGroup.columns | fieldSort : 'position' | isValidFilter; let i = index\" dropZone (dropData)=\"newInputOutputDrop($event, column)\" [zone]=\"allowMappingOutputs ? 'input-column' : ''\" dropAllowedClass=\"drop-zone-green\" >\n            <output-column [datalinkTransformForm]='datalinkTransformForm' [column]='column'></output-column>\n        </div>\n    </dexih-widget-section>\n</div>","export * from './input-parameter.component';\nexport * from './output-parameter.component';\n","import { Component, Input, Output, OnInit, OnDestroy, EventEmitter, OnChanges } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Subscription} from 'rxjs';\nimport { TypeCodes, eBasicType, TypeFunctions } from '../../../hub.remote.models';\nimport { HubService } from '../../../hub.service';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { DexihDatalinkColumn, DexihTableColumn, DexihFunctionParameter, eTypeCode, DexihTable, DexihDatalinkTarget } from '../../../../shared/shared.models';\nimport { DatalinkEditService } from '../datalink-edit.service';\n\nexport class InputValues {\n    public staticValue: string;\n    public textItems: string[];\n    public name: string;\n    public inputParameterSubscription: Subscription;\n    public datalinkColumnSubscription: Subscription;\n}\n\n@Component({\n\n    selector: 'input-parameter',\n    templateUrl: './input-parameter.component.html'\n})\nexport class InputParameterComponent implements OnInit, OnDestroy, OnChanges {\n\n    @Input() public allowDataTypeSelect = false;\n    @Input() public allowNameSelect = false;\n    @Input() public allowAdd = false;\n    @Input() public allowRemove = false;\n    @Input() public inputParameterForms: FormGroup[] = [];\n    @Input() public inputColumns: Array<DexihDatalinkColumn> = null;\n    @Input() public updateParameterName = false;\n    @Input() public rank = 0;\n    @Input() public nodeDatalinkColumnKey = null;\n\n    @Input() public outputParameterForms: FormGroup[] = null;\n    @Input() public outputColumns: Array<DexihTableColumn> = null;\n    @Input() public datalinkTargets: Array<DexihDatalinkTarget> = null;\n    @Input() public variables = [];\n\n    @Output() public addParameter: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n    @Output() public removeParameter: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n\n    private type: TypeFunctions;\n    eBasicType = eBasicType;\n    typeCodes = TypeCodes;\n    eTypeCode = eTypeCode;\n\n    public columns: Array<DexihTableColumn>;\n    inputColumnGroups: Array<{group: string, columns: Array<DexihDatalinkColumn>}> = [];\n\n    outputTables: Array<DexihTable>;\n\n    public inputs: InputValues[] = [];\n\n    ignoreChanges = false;\n\n    newColumn: DexihDatalinkColumn;\n\n    public errors;\n\n    constructor(public hubService: HubService, public editDatalinkService: DatalinkEditService) {\n    }\n\n    ngOnInit() {\n        this.inputs = this.inputParameterForms.map(param => new InputValues());\n        this.errors = this.inputParameterForms.map(a => this.editDatalinkService.hubFormsService.getFormErrorMessages(a, true));\n\n        let io = new InputOutputColumns();\n        if (this.nodeDatalinkColumnKey) {\n            this.inputColumns = io.getAvailableColumns(this.inputColumns, this.nodeDatalinkColumnKey, 0);\n        }\n\n        if (this.rank > 0 && this.inputColumns) {\n            let tables = [];\n            this.inputColumns = this.inputColumns.filter(c => c.rank > 0);\n        }\n\n        if (this.inputColumns) {\n            this.inputColumnGroups = this.editDatalinkService.getColumnGroups(this.inputColumns);\n        } else {\n            this.inputColumnGroups = [];\n        }\n\n        for ( let i = 0; i < this.inputParameterForms.length; i++) {\n            let inputParameter: DexihFunctionParameter = this.inputParameterForms[i].value;\n\n            if (inputParameter.datalinkColumn || inputParameter.value === null || inputParameter.value === undefined) {\n                this.inputs[i].staticValue = '';\n            } else {\n                this.inputs[i].staticValue = inputParameter.value;\n            }\n\n            this.inputs[i].textItems = [];\n\n            if (inputParameter.dataType === eTypeCode.Boolean) {\n                this.inputs[i].textItems = this.inputs[i].textItems.concat(['true', 'false' ]);\n                this.inputs[i].staticValue = this.inputs[i].staticValue.toString();\n            }\n\n            if (inputParameter['runTime'] && inputParameter['runTime'].functionParameter.listOfValues) {\n                this.inputs[i].textItems = this.inputs[i].textItems.concat(inputParameter['runTime'].functionParameter.listOfValues);\n            }\n\n            this.inputs[i].textItems = this.inputs[i].textItems.concat(this.variables);\n        }\n\n        this.updateItems();\n\n        for ( let i = 0; i < this.inputParameterForms.length; i++) {\n            let runTime = this.inputParameterForms[i].value.runTime;\n            if (!runTime || !runTime.functionParameter || !runTime.functionParameter.listOfValues) {\n                this.inputs[i].inputParameterSubscription = this.inputParameterForms[i].valueChanges.subscribe(() => {\n                    if (!this.ignoreChanges) {\n                        this.updateItems();\n                        this.ignoreChanges = true;\n                        if (this.inputParameterForms[i].controls.datalinkColumn.value) {\n                            this.inputParameterForms[i].controls.value.setValue(null);\n                        } else {\n                            this.inputParameterForms[i].controls.value.setValue(this.inputs[i].staticValue);\n                        }\n                        this.ignoreChanges = false;\n                    }\n                    this.errors[i] = this.editDatalinkService.hubFormsService.getFormErrorMessages(this.inputParameterForms[i], true);\n                });\n            }\n\n            if (this.updateParameterName) {\n                this.inputs[i].datalinkColumnSubscription\n                    = this.inputParameterForms[i].controls.datalinkColumn.valueChanges.subscribe(value => {\n                    if (value) {\n                        this.inputParameterForms[i].controls.dataType.setValue(value.dataType);\n                        this.inputParameterForms[i].controls.name.setValue(value.name);\n                    } else {\n                        this.inputParameterForms[i].controls.dataType.setValue(eTypeCode.String);\n                        this.inputParameterForms[i].controls.name.setValue('');\n                    }\n                    this.errors[i] = this.editDatalinkService.hubFormsService.getFormErrorMessages(this.inputParameterForms[i], true);\n                });\n            }\n        }\n    }\n\n    updateStatic(event: any, i: number) {\n        this.inputParameterForms[i].controls.value.setValue(event);\n    }\n\n    ngOnDestroy() {\n        if (this.inputs) {\n            this.inputs.forEach(input => {\n                if (input.datalinkColumnSubscription) { input.datalinkColumnSubscription.unsubscribe(); }\n                if (input.inputParameterSubscription) { input.inputParameterSubscription.unsubscribe(); }\n            });\n        }\n    }\n\n    ngOnChanges() {\n        let table = new DexihTable();\n        table.name = 'Output Columns';\n        table.dexihTableColumns = this.outputColumns;\n\n        this.outputTables = [table];\n\n        if (this.datalinkTargets) {\n            this.datalinkTargets.forEach(target => {\n                this.outputTables.push(target['table']);\n            });\n        }\n    }\n\n    updateItems() {\n        for ( let i = 0; i < this.inputParameterForms.length; i++) {\n            let inputParameter: DexihFunctionParameter = this.inputParameterForms[i].value;\n            this.type = new TypeFunctions(inputParameter.dataType, null, null, null);\n\n            if (!this.allowDataTypeSelect && !this.allowNameSelect) {\n                this.inputs[i].name = inputParameter.name + '(' + this.type.dataType + ')' + (this.rank > 0 ? '[]' : '')\n            } else {\n                this.inputs[i].name = inputParameter.name\n            }\n        }\n    }\n\n    add() {\n        this.addParameter.emit(this.inputParameterForms[0]);\n    }\n\n    remove() {\n        this.removeParameter.emit(this.inputParameterForms[0]);\n    }\n\n    updateNewColumn(value: string, i: number) {\n        let current = this.outputParameterForms[i].controls.targetDatalinkColumn.value;\n        if (value && (!current || value !== current.name) ) {\n            if (!this.newColumn) {\n                this.newColumn = new DexihDatalinkColumn();\n                this.newColumn.position = 1000 - this.newColumn.key;\n                this.newColumn.key = this.hubService.getHubCache().getNextSequence();\n            }\n\n            this.newColumn.dataType = this.outputParameterForms[i].controls.dataType.value;\n            this.newColumn.name = value;\n            this.newColumn.logicalName = value;\n\n            this.outputParameterForms[i].controls.datalinkColumn.setValue(this.newColumn);\n\n            this.updateItems();\n        }\n    }\n\n}\n","    <section>\n        <div class=\"input-group d-flex\">\n            <form *ngFor=\"let inputParameterForm of inputParameterForms; let i = index;\" [formGroup]=\"inputParameterForm\" class=\"flex-fill\">\n                <div class=\"input-group\">\n                    <div *ngIf=\"!allowNameSelect\" class=\"input-group-prepend\">\n                        <div class=\"input-group-text\">\n                            {{inputParameterForm.value.runTime?.functionParameter?.name + \"(\" + eTypeCode[type.dataType] + \")\"}} {{rank > 0 ? \"[]\" : \"\"}}\n                        </div>\n                    </div>\n\n                    <div *ngIf=\"allowNameSelect == true\" class=\"form-control p-0\">\n                        <form-input [border]=\"false\" formControlName=\"name\" type=\"text\"\n                            placeholder=\"Enter a name for the parameter\">\n                        </form-input>\n                    </div>\n\n                    <div *ngIf=\"!inputParameterForm.value.runTime?.functionParameter?.isLabel\" class=\"form-control p-0\">\n                        <form-select formControlName=\"datalinkColumn\" [border]=\"false\"\n                            [items]=\"inputColumnGroups\" parentName=\"group\" childItems=\"columns\" itemKey=\"key\" itemName=\"logicalName\" [(textValue)]=\"inputs[i].staticValue\"\n                            [enableKeySelect]=\"false\" [enableTextEntry]=\"rank === 0\" [enableTextEntryMatch]=\"false\" [setTextEntryToValue]=\"false\"\n                            (textValueChange)=\"updateStatic($event, i)\"\n                            [textEntryNote]=\"rank > 0 ? 'Select an array type source (otherwise select add to build an array)' : 'Select a column or enter a static value.'\" \n                            [textEntryItems]=\"inputs[i].textItems\" textEntryItemsTitle=\"Variables\"\n                            [errors]=\"errors[i].datalinkColumn\"\n                            >\n                        </form-select>\n                    </div>\n\n                    <div *ngIf=\"inputParameterForm.value.runTime?.functionParameter?.isLabel\" class=\"form-control p-0\">\n                        <form-input [border]=\"false\" [(ngModel)]=\"inputs[i].staticValue\" [ngModelOptions]=\"{standalone: true}\"\n                            type=\"text\" placeholder=\"Enter a static value.\">\n                        </form-input>\n                    </div>\n\n                    <div *ngIf=\"allowDataTypeSelect == false && allowNameSelect == true\" class=\"input-group-text\">\n                        {{\"(\" + eTypeCode[type.dataType] + \")\"}}\n                    </div>\n\n                    <div *ngIf=\"allowDataTypeSelect == true\" class=\"form-control p-0\">\n                        <form-select [border]=\"false\" formControlName=\"dataType\" [items]=\"typeCodes\" itemKey=\"key\"\n                            itemName=\"name\" >\n                        </form-select>\n                    </div>\n                    <div *ngIf=\"allowDataTypeSelect == true\" class=\"form-control\">\n                        <form-checkbox label=\"Allow Null\" [border]=\"false\" formControlName=\"allowNull\"></form-checkbox>\n                    </div>\n\n                </div>\n            </form>\n\n            <form *ngFor=\"let outputParameterForm of outputParameterForms; let i = index;\" [formGroup]=\"outputParameterForm\" class=\"ml-1  flex-fill\">\n                <!-- <form-select class=\"flex-grow-1\" [border]=\"false\" class=\"form-control p-0\"\n                    formControlName=\"datalinkColumn\" [items]=\"outputColumns\" itemName=\"logicalName\" itemKey=\"key\"\n                    [enableKeySelect]=\"false\" [enableTextEntry]=\"true\" textEntryNote=\"Enter a value to add a new column\"\n                    (textValueChange)=\"updateNewColumn($event, i)\">\n                </form-select> -->\n                <form-select class=\"flex-grow-1\" [border]=\"false\" class=\"form-control p-0\" \n                    formControlName=\"datalinkColumn\" [items]=\"outputTables\" parentName=\"name\" childItems=\"dexihTableColumns\" itemKey=\"key\"\n                    itemName=\"logicalName\" [enableKeySelect]=\"false\" [enableTextEntry]=\"true\" [setTextEntryToValue]=\"false\"\n                    textEntryNote=\"Enter new column name, or select existing\"\n                    (textValueChange)=\"updateNewColumn($event, i)\">\n                </form-select>\n            </form>\n\n            <div *ngIf=\"allowAdd && allowRemove\" class=\"input-group-append flex-shrink-1 ml-1 \">\n                <button *ngIf=\"allowAdd\" class=\"btn btn-light\" type=\"button\" (click)=\"add()\" [disabled]=\"!allowAdd\" value=\"Add\">\n                    <i class=\"fa fa-plus-square-o\"></i>\n                </button>\n                <button *ngIf=\"allowRemove\" class=\"btn btn-light\" type=\"button\" (click)=\"remove()\" [disabled]=\"!allowRemove\" value=\"Remove\">\n                    <i class=\"fa fa-minus-square-o\"></i>\n                </button>\n            </div>\n        </div>\n        <small *ngIf=\"!allowAdd && inputParameterForms[0].value.runTime?.functionParameter?.description\" class=\"form-text text-muted\">\n            <markdown [data]=\"inputParameterForms[0].value.runTime.functionParameter.description\"></markdown>\n        </small>\n    </section>\n","import { Component, Input, Output, ViewChild, OnInit, OnDestroy, EventEmitter, OnChanges } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { HubService } from '../../../hub.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { TypeFunctions, TypeCodes, eBasicType } from '../../../hub.remote.models';\nimport { DexihTableColumn, DexihDatalinkColumn, eTypeCode, DexihDatalinkTarget, DexihDatalinkTable, DexihTable } from '../../../../shared/shared.models';\nimport { DatalinkEditService } from '../datalink-edit.service';\n\n@Component({\n\n    selector: 'output-parameter',\n    templateUrl: './output-parameter.component.html'\n})\nexport class OutputParameterComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input() public allowDataTypeSelect = false;\n    @Input() public allowNameSelect = false;\n    @Input() public allowAdd = false;\n    @Input() public allowRemove = false;\n    @Input() public outputParameterForm: FormGroup = null;\n    @Input() public outputColumns: Array<DexihTableColumn> = null;\n    @Input() public datalinkTargets: Array<DexihDatalinkTarget> = null;\n    @Input() public updateParameterName = false;\n    @Input() public rank = 0;\n\n    @Output() public addParameter: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public removeParameter: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public hasChanged: EventEmitter<any> = new EventEmitter<any>();\n\n    private _datalinkColumnSubscription: Subscription;\n    private _parameterSubscription: Subscription;\n    private _dataTypeSubscription: Subscription;\n\n    newColumn: DexihDatalinkColumn;\n    tmpColumnKey: number;\n\n    outputTables: Array<DexihTable>;\n\n    type: TypeFunctions;\n    eBasicType = eBasicType;\n    eTypeCode = eTypeCode;\n\n    typeCodes = TypeCodes;\n\n    public errors;\n\n    ignoreChanges = false;\n\n    constructor(public hubService: HubService, public editDatalinkService: DatalinkEditService) {\n    }\n\n    ngOnInit() {\n        this.updateItems();\n        this.errors = this.editDatalinkService.hubFormsService.getFormErrorMessages(this.outputParameterForm, true);\n\n        if (this.updateParameterName) {\n            this._datalinkColumnSubscription = this.outputParameterForm.controls.datalinkColumn.valueChanges.subscribe(value => {\n                this.outputParameterForm.controls.dataType.setValue(value.dataType);\n                this.outputParameterForm.controls.name.setValue(value.name);\n            });\n        }\n        this._parameterSubscription = this.outputParameterForm.valueChanges.subscribe(param => {\n            this.errors = this.editDatalinkService.hubFormsService.getFormErrorMessages(this.outputParameterForm, true);\n            this.updateItems();\n        });\n\n        this._dataTypeSubscription = this.outputParameterForm.controls.dataType.valueChanges.subscribe(dataType => {\n            if (this.newColumn) {\n                this.newColumn.dataType = dataType;\n            }\n        });\n    }\n\n    ngOnChanges() {\n        let table = new DexihTable();\n        table.name = 'Output Columns';\n        table.dexihTableColumns = this.outputColumns;\n\n        this.outputTables = [table];\n\n        if (this.datalinkTargets) {\n            this.datalinkTargets.forEach(target => {\n                this.outputTables.push(target['table']);\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._datalinkColumnSubscription) { this._datalinkColumnSubscription.unsubscribe(); }\n        if (this._parameterSubscription) { this._parameterSubscription.unsubscribe(); }\n        if (this._dataTypeSubscription) { this._dataTypeSubscription.unsubscribe(); }\n    }\n\n    updateItems() {\n        this.type = new TypeFunctions(this.outputParameterForm.value.dataType, null, null, null);\n    }\n\n    add() {\n        this.addParameter.emit(this.outputParameterForm);\n    }\n\n    remove() {\n        this.removeParameter.emit(this.outputParameterForm);\n    }\n\n    fixDataType() {\n        const column = this.outputParameterForm.controls.datalinkColumn.value;\n        column.dataType = this.outputParameterForm.controls.dataType.value;\n    }\n\n    updateNewColumn(value: string) {\n        let current = this.outputParameterForm.controls.datalinkColumn.value;\n        if (value && (!current || current.name !== value)) {\n            if (!this.newColumn) {\n                this.newColumn = new DexihDatalinkColumn();\n                this.newColumn.key = this.hubService.getHubCache().getNextSequence();\n                this.newColumn.position = 1000 - this.newColumn.key;\n            }\n\n            this.newColumn.dataType = this.outputParameterForm.controls.dataType.value;\n            this.newColumn.allowDbNull = true;\n            this.newColumn.name = value;\n            this.newColumn.logicalName = value;\n            this.newColumn.rank = this.rank;\n            this.newColumn.columnGroup = 'mapping';\n\n            this.outputParameterForm.controls.datalinkColumn.setValue(this.newColumn);\n\n            this.updateItems();\n        }\n    }\n}\n","<form [formGroup]=\"outputParameterForm\" class=\"mb-1\">\n    <section>\n        <div class=\"input-group\">\n\n            <div *ngIf=\"allowDataTypeSelect == false && allowNameSelect == false\" class=\"input-group-prepend\">\n                <div class=\"input-group-text\">\n                    {{outputParameterForm.value.runTime?.functionParameter?.name + \"(\" + eTypeCode[type.dataType] + \")\"}}\n                    {{rank > 0 ? \"[]\" : \"\"}}\n                </div>\n            </div>\n\n            <div *ngIf=\"allowDataTypeSelect == true && allowNameSelect == false\" class=\"input-group-prepend\">\n                <div class=\"input-group-text\">\n                    {{outputParameterForm.value.runTime?.functionParameter?.name }}\n                </div>\n            </div>\n\n            <div *ngIf=\"allowNameSelect\" class=\"form-control p-0\">\n                <form-input formControlName=\"name\" [border]=\"false\" type=\"text\" name=\"name\"\n                    placeholder=\"Enter a name for the parameter\">\n                </form-input>\n                <span class=\"input-group-btn\" style=\"width:0px;\"></span>\n            </div>\n\n            <div *ngIf=\"allowDataTypeSelect == false && allowNameSelect == true\" class=\"input-group-text\">\n                {{\"(\" + eTypeCode[type.dataType] + \")\"}}\n            </div>\n\n            <div class=\"form-control p-0\">\n                <form-select [border]=\"false\" formControlName=\"datalinkColumn\" [items]=\"outputTables\" parentName=\"name\" childItems=\"dexihTableColumns\" itemKey=\"key\"\n                    itemName=\"logicalName\" [enableKeySelect]=\"false\" [enableTextEntry]=\"true\" [setTextEntryToValue]=\"false\"\n                    textEntryNote=\"Enter new column name, or select existing\"\n                    (textValueChange)=\"updateNewColumn($event)\"\n                    [errors]=\"errors.datalinkColumn\">\n                </form-select>\n            </div>\n\n            <div *ngIf=\"allowDataTypeSelect == true\" class=\"form-control p-0\">\n                <form-select formControlName=\"dataType\" [border]=\"false\" [items]=\"typeCodes\" itemKey=\"key\"\n                    itemName=\"name\">\n                </form-select>\n            </div>\n            <div *ngIf=\"allowDataTypeSelect == true\" class=\"form-control\">\n                <form-checkbox label=\"Allow Null\" [border]=\"false\" formControlName=\"allowNull\"></form-checkbox>\n            </div>\n\n            <div class=\"input-group-append\">\n                <button *ngIf=\"outputParameterForm.controls.datalinkColumn?.value && outputParameterForm.controls.dataType.value !== outputParameterForm.controls.datalinkColumn?.value?.dataType\" class=\"btn btn-danger\" type=\"button\" (click)=\"fixDataType()\" title=\"fix target column datatype\">\n                    <i class=\"fa fa-medkit\"></i>\n                </button>\n                <button class=\"btn btn-light\" type=\"button\" (click)=\"add()\" [disabled]=\"!allowAdd\" value=\"Add\">\n                    <i class=\"fa fa-plus-square-o\"></i>\n                </button>\n                <button class=\"btn btn-light\" type=\"button\" (click)=\"remove()\" [disabled]=\"!allowRemove\" value=\"Remove\">\n                    <i class=\"fa fa-minus-square-o\"></i>\n                </button>\n            </div>\n        </div>\n\n        <small *ngIf=\"outputParameterForm.value.runTime?.functionParameter?.description\" class=\"form-text text-muted\">\n            <markdown [data]=\"outputParameterForm.value.runTime.functionParameter.description\"></markdown>\n        </small>\n\n    </section>\n</form>","export { PreviewDataComponent } from './preview-data.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup } from '@angular/forms';\nimport { eDataObjectType } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'datalink-preview-data',\n    templateUrl: './preview-data.component.html'\n})\nexport class PreviewDataComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n\n    public datalinkForm: FormGroup;\n    public datalinkTransformForm: FormGroup;\n\n    private hubCache: HubCache;\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    public eDataObjectType = eDataObjectType;\n\n    public error: string;\n\n    datalinkTransformKey: number;\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.hubService.getRemoteAgentObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n                this.datalinkForm = result[4];\n\n                this.action = data['action'];\n                this.pageTitle = data['pageTitle'];\n\n                // load the cache first\n                if (this.hubCache.isLoaded()) {\n                    // get the hub key from the route data, and update the service.\n                    this.datalinkTransformKey = + params['datalinkTransformKey'];\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Preview Transform Data');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n}\n","<dexih-widget-section title=\"Preview Transform Data\" [showExpandButton]=\"true\" [padding]=\"false\">\n    <ng-template #header>\n        <dexih-button-close (click)=\"close()\"></dexih-button-close>\n    </ng-template>\n    <preview-data [datalink]='datalinkForm?.value' [datalinkTransformKey]=\"datalinkTransformKey\" [viewSource]='eDataObjectType.Datalink'></preview-data>\n</dexih-widget-section>\n","export { PreviewTableComponent } from './preview-table.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { FormGroup } from '@angular/forms';\nimport { eDataObjectType, DexihTable } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'datalink-preview-table',\n    templateUrl: './preview-table.component.html'\n})\nexport class PreviewTableComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n\n    public datalinkForm: FormGroup;\n    public datalinkTransformForm: FormGroup;\n\n    private hubCache: HubCache;\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    public eDataObjectType = eDataObjectType;\n\n    public error: string;\n\n    tableKey: number;\n    datalinkKey: number;\n    \n    name: string;\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n\n                this.action = data['action'];\n                this.pageTitle = data['pageTitle'];\n\n                // load the cache first\n                if (this.hubCache.isLoaded()) {\n                    // get the hub key from the route data, and update the service.\n                    if (params['tableKey']) {\n                        this.tableKey = +params['tableKey'];\n                        let table = this.hubCache.getTable(this.tableKey);\n                        if (table) {\n                            this.name = table.name;\n                        }\n                    } else {\n                        this.datalinkKey = +params['datalinkKey'];\n                        let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key == this.datalinkKey);\n                        if (datalink) {\n                            this.name = datalink.name;\n                        }\n                    }\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Preview Table Data');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n}\n","<dexih-widget-section [title]=\"'Preview ' + name\" [showExpandButton]=\"false\" [padding]=\"false\">\n    <ng-template #header>\n        <dexih-button-close (click)=\"close()\"></dexih-button-close>\n    </ng-template>\n    <preview-data *ngIf=\"tableKey\" [key]='tableKey' [viewSource]='eDataObjectType.Table'></preview-data>\n    <preview-data *ngIf=\"datalinkKey\" [key]='datalinkKey' [viewSource]='eDataObjectType.Datalink'></preview-data>\n</dexih-widget-section>\n","<dexih-widget-section title=\"Profile Rules\" [showExpandButton]=\"true\">\n        <form *ngIf=\"datalinkForm\"  [formGroup]=\"datalinkForm\" >\n    <fieldset>\n        <section>\n            <form-input label=\"Profile Table Name\" formControlName=\"profileTableName\" placeholder=\"Enter the profile table name.\" [autocapitalize]=\"true\" iconClass=\"fa fa-list\" \n            note=\"Specify the table name in the 'Audit Connection' to send the profile results to.  If this table does not exist, it will be created on first run.\">\n            </form-input>\n        </section>\n    </fieldset>\n</form>\n\n<dexih-table \n    [enableMultiSelect]=\"true\" \n    [enableManualSort]=\"false\"\n    [enableFilter]=\"false\"\n    [columns]=\"columns\" \n    [dataObservable]=\"tableData\" \n    [(selectedItems)]=\"selectedProfileRules\" \n    (onSelectedChange)=\"hasChanged($event)\"\n    keyColumn=\"functionMethodName\">\n\n    <ng-template #rowAction select=\"rowAction\" let-item=\"item\">\n        <form-checkbox label=\"Capture Detailed Distribution\" [(ngModel)]=\"item.detailedResults\" name=\"detailedResults\" (change)=\"updateProfileRule(item)\" ></form-checkbox>\n    </ng-template>\n</dexih-table>\n</dexih-widget-section>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { Observable, BehaviorSubject, Subscription, combineLatest} from 'rxjs';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { DexihDatalinkProfile, eFunctionType } from '../../../../shared/shared.models';\n\n@Component({\n    selector: 'profile-rules',\n    templateUrl: './profile-rules.component.html'\n})\n\n\nexport class DatalinkEditProfileRulesComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n\n    private hubCache: HubCache;\n\n    private _subscription: Subscription;\n\n    selectedProfileRules: Array<DexihDatalinkProfile> = new Array<DexihDatalinkProfile>();\n\n    columns = [\n        { name: 'name', title: 'Profile Name', format: '' },\n        { name: 'description', title: 'Description', format: '' }\n    ];\n\n    private _tableData = new BehaviorSubject<Array<DexihDatalinkProfile>>(null);\n    tableData: Observable<Array<DexihDatalinkProfile>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router\n    ) { }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n            ).subscribe(async result => {\n                this.hubCache = result[0];\n                this.datalinkForm = result[1];\n\n                if (this.datalinkForm) {\n                    // load the cache first\n                    if (this.hubCache.isLoaded()) {\n                        this.selectedProfileRules = this.datalinkForm.value.dexihDatalinkProfiles;\n                        let profileRules = (await this.hubService.GetFunctionsByType(eFunctionType.Profile))\n                            .map(profile => {\n\n                                let profileRuleForm = this.selectedProfileRules.find(c =>\n                                    c.functionAssemblyName === profile.functionAssemblyName\n                                    && c.functionClassName === profile.functionClassName\n                                    && c.functionMethodName === profile.functionMethodName);\n\n                                return <DexihDatalinkProfile> {\n                                    functionAssemblyName: profile.functionAssemblyName,\n                                    functionClassName: profile.functionClassName,\n                                    functionMethodName: profile.functionMethodName,\n                                    detailedResults: profileRuleForm ? profileRuleForm.detailedResults : false\n                                }\n                        });\n                        this._tableData.next(profileRules);\n                    }\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Edit Custom Function');\n        }\n\n    }\n\n    updateProfileRules() {\n        if (this.datalinkForm) {\n            let profiles = <FormArray>this.datalinkForm.controls.dexihDatalinkProfiles;\n\n            // reset existing profiles.\n            profiles.controls.forEach(profile => {\n                let profileFormGroup = <FormGroup>profile;\n                profileFormGroup.controls.isValid.setValue(false);\n            });\n\n            // add the selected profiles, with isValid = true\n            this.selectedProfileRules.forEach(profile => {\n                let profileRuleForm = <FormGroup>profiles.controls.find(c => c.value.functionAssemblyName === profile.functionAssemblyName\n                    && c.value.functionClassName === profile.functionClassName\n                    && c.value.functionMethodName === profile.functionMethodName);\n\n                if (!profileRuleForm) {\n                    let profileRule = new DexihDatalinkProfile();\n                    profileRule.key = this.hubCache.getNextSequence();\n                    profileRule.datalinkKey = this.datalinkForm.value.key;\n                    profileRule.functionAssemblyName = profile.functionAssemblyName;\n                    profileRule.functionClassName = profile.functionClassName;\n                    profileRule.functionMethodName = profile.functionMethodName;\n                    profileRule.detailedResults = profile.detailedResults;\n                    profileRule.isValid = true;\n                    profileRuleForm = this.editDatalinkService.hubFormsService.datalinkProfileFormGroup(profileRule);\n                    profiles.push(profileRuleForm);\n                } else {\n                    profileRuleForm.controls.isValid.setValue(true);\n                }\n            });\n\n            for (let i = profiles.controls.length - 1; i >= 0; i--) {\n                if (!profiles.controls[i].value.isValid) {\n                    profiles.removeAt(i);\n                }\n            }\n        }\n    }\n\n    updateProfileRule(profile: DexihDatalinkProfile) {\n        let profiles = <FormArray>this.datalinkForm.controls.dexihDatalinkProfiles;\n\n        let profileRuleForm = <FormGroup>profiles.controls.find(c => c.value.functionAssemblyName === profile.functionAssemblyName\n            && c.value.functionClassName === profile.functionClassName\n            && c.value.functionMethodName === profile.functionMethodName);\n\n        profileRuleForm.controls.detailedResults.setValue(profile.detailedResults);\n        this.editDatalinkService.hubFormsService.hasChanged = true;\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.updateProfileRules();\n    }\n\n    hasChanged(items) {\n        if (items) {\n            this.selectedProfileRules = items;\n        }\n        this.updateProfileRules();\n        this.editDatalinkService.hubFormsService.hasChanged = true;\n    }\n\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { eConnectionPurpose, eDatalinkTypeItems, eAlertLevelItems, eAlertLevel } from '../../../../shared/shared.models';\n\n@Component({\n    selector: 'dexih-datalink-edit-properties-form',\n    templateUrl: './datalink-edit-properties.component.html'\n})\nexport class DatalinkEditPropertiesComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n\n    public pageTitle: string;\n    public message: string;\n\n    private _subscription: Subscription;\n\n    public eConnectionPurpose = eConnectionPurpose;\n    eDatalinkTypeItems = eDatalinkTypeItems.filter(c => c.key > 0);\n\n    public eAlertLevelItems = eAlertLevelItems;\n    public eAlertLevel = eAlertLevel;\n\n    constructor(\n        private hubService: HubService,\n        public editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n                this.pageTitle = result[0]['pageTitle'];\n                this.datalinkForm = result[3];\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Properties');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n\n}\n","<dexih-widget-section title='Properties' [showExpandButton]=\"true\">\n    <form *ngIf=\"datalinkForm\" [formGroup]=\"datalinkForm\">\n        <fieldset>\n            <section>\n                <form-select label=\"Datalink Type\" formControlName=\"datalinkType\" [items]=\"eDatalinkTypeItems\" itemKey=\"key\" itemName=\"description\" iconClass=\"fa fa-database\"\n                    note='Categorize the type of function this datalink is performing.' [enableFilter]=\"false\">\n                </form-select>\n            </section>\n\n            <section>\n                <form-input label=\"Datalink Name\" formControlName=\"name\" placeholder=\"Enter the datalink name.\" iconClass=\"fa fa-list\" [autocapitalize]=\"true\" [errors]=\"editDatalinkService.hubFormsService.formErrors.name\">\n                </form-input>\n            </section>\n\n            <section>\n                <form-textarea label=\"Description\" [showMarkdown]=\"true\" formControlName=\"description\" placeholder=\"Enter the description.\"\n                    [errors]=\"editDatalinkService.hubFormsService.formErrors.description\">\n                </form-textarea>\n            </section>\n\n            <section>\n                <form-select label=\"Alerting Level\" formControlName=\"alertLevel\" [items]=\"eAlertLevelItems\"\n                    itemKey=\"key\" itemName=\"description\" iconClass=\"fa fa-bell\"\n                    [errors]=\"editDatalinkService.hubFormsService.formErrors.alertLevel\" note=\"When alerts should be sent.\"\n                    [enableFilter]=\"false\">\n                </form-select>\n            </section>\n            \n            <section>\n                <form-checkbox label=\"Datalink is shared in the catalog to users with read access.\" formControlName=\"isShared\">\n                </form-checkbox>\n            </section>\n\n        </fieldset>\n    </form>\n\n</dexih-widget-section> \n\n<dexih-widget-section title='Input Parameters' [showExpandButton]=\"true\">\n    <input-parameters [showEdit]=\"true\" [parameters]=\"datalinkForm.controls.parameters\" [formsService]=\"editDatalinkService.hubFormsService\"></input-parameters>\n</dexih-widget-section>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'dexih-datalink-run-plan',\n    templateUrl: './datalink-run-plan.component.html'\n})\nexport class DatalinkRunPlanComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n\n    public pageTitle: string;\n    public message: string;\n\n    private _subscription: Subscription;\n\n    public allowSave = false;\n\n    constructor(\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n                this.pageTitle = result[0]['pageTitle'];\n                this.datalinkForm = result[3];\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Run Plan');\n        }\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n}\n","<div class=\"no-padding\">\n    <div class=\"widget-body\">\n\n        <div section class=\"widget-body-toolbar\">\n\n            <div class=\"form-row\">\n                <div class=\"col-sm-6\">\n                    <h4>Run Plan</h4>\n                </div>\n                <div class=\"col-sm-6 text-right\">\n                </div>\n            </div>\n        </div>\n\n        NOT COMPLETED\n\n    </div>\n</div>","<!--<button class=\"btn btn-primary\" [ngClass]=\"{disabled : savingDatalink || datalinkForm?.pristine }\" (click)=\"!savingDatalink && saveDatalink()\"><i *ngIf=\"savingDatalink\" class=\"fa fa-spin fa-cog\"></i> Save Changes</button>\n<button class=\"btn btn-warning\" [ngClass]=\"{disabled : savingDatalink}\" (click)=\"!savingDatalink && cancel()\">Cancel</button>-->\n<dexih-invalid-form-details class=\"mr-1\" [control]=\"datalinkForm\"></dexih-invalid-form-details>\n<dexih-button-splitdropdown *ngIf=\"hubCache.canWrite\" [disabled]=\"!editDatalinkService.hubFormsService.hasChanged\" buttonClass=\"btn-primary\" iconClass=\"fa fa-save\" text=\"Save\" (buttonClick)=\"saveDatalink(false)\" class=\"mr-1\">\n    <li><a class=\"dropdown-item\" (click)=\"saveDatalink(false)\" title=\"Save in the hub\"><i class=\"fa fa-cloud\"></i> Save</a></li>\n    <li><a class=\"dropdown-item\" (click)=\"editDatalinkService.hubFormsService.saveLocal()\" title=\"Export as a local file\"><i class=\"fa fa-floppy-o\"></i> Save as file</a></li>\n    <li><a class=\"dropdown-item\" (click)=\"saveDatalink(true)\" title=\"Save another version\"><i class=\"fa fa-plus-circle\"></i> Save As...</a></li>\n</dexih-button-splitdropdown>\n<dexih-button-dropdown class=\"mr-1\" *ngIf=\"hubCache.canWrite && datalinkForm?.controls.dexihDatalinkTargets.value.length > 0\" text=\"Actions\" iconClass=\"fa fa-bolt\" buttonClass=\"btn-primary\" [pullRight]=\"true\">\n    <a class=\"dropdown-item\" (click)=\"fixMappings()\" title=\"Attempt to fix mappings broken when removing/inserting transforms.\">Fix Mappings</a>\n    <a class=\"dropdown-item\" (click)=\"runDatalink(false, false)\" title=\"Run datalink, truncating the target table for each.\">Run</a>\n    <a class=\"dropdown-item\" (click)=\"runDatalink(true, true)\" title=\"Run datalink, truncating the target table for each.\">Run (with truncate)</a>\n    <a class=\"dropdown-item\" (click)=\"runDatalink(false, true)\" title=\"Run datalink, resetting the incremental (i.e. reload all source data rows) \">Run (reset incremental)</a>\n    <a class=\"dropdown-item\" (click)=\"preview()\" title=\"Preview the output of this datalink\">Preview Datalink</a>\n    <a class=\"dropdown-item\" (click)=\"download()\" title=\"Download the output from this datalink\">Download Datalink Data</a>\n</dexih-button-dropdown>\n<cancel-button [formsService]=\"editDatalinkService.hubFormsService\"></cancel-button>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { BehaviorSubject, Subscription, combineLatest} from 'rxjs';\nimport { eUpdateStrategy, DownloadObject, eSourceType, eDownloadFormat, eDataObjectType } from '../../../../shared/shared.models';\nimport { CancelToken } from '../../../../+auth/auth.models';\n\n@Component({\n    selector: 'datalink-save-button',\n    templateUrl: './datalink-edit-save-button.component.html'\n})\n\nexport class DatalinkEditSaveButtonComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n    private cancelToken: CancelToken = new CancelToken();\n\n    datalinkForm: FormGroup;\n    \n\n    hubCache: HubCache;\n    eUpdateStrategy = eUpdateStrategy;\n\n    constructor(\n        public hubService: HubService,\n        public editDatalinkService: DatalinkEditService,\n        public authService: AuthService,\n        public router: Router,\n        public route: ActivatedRoute\n    ) { }\n\n    ngOnInit() {\n\n        try {\n            this._subscription = combineLatest(\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                this.datalinkForm = result[0];\n                this.hubCache = result[1];\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'datalink save button');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    async saveDatalink(saveAs = false) {\n        this.editDatalinkService.savingDatalink.next(true);\n\n        if (this.datalinkForm.controls.dexihDatalinkTargets.dirty) {\n            let targets = <FormArray>this.datalinkForm.controls.dexihDatalinkTargets;\n            let tables = targets.controls.map(c => {\n                let target = <FormGroup>c;\n                let table = target.controls.table;\n                if (table) {\n                    return table;\n                }\n            });\n\n            let tableNames = tables.filter(c => c.value.key > 0 && c.dirty).map(c => c.value.name).join(', ');\n\n            let doSave = async () => {\n                for (let t of targets.controls) {\n                    if (t.dirty) {\n                        let target = <FormGroup>t;\n                        let savedTable = await this.hubService.saveTables([target.controls.table.value]);\n                        target.setControl('table', this.editDatalinkService.hubFormsService.tableForm(savedTable[0]));\n                        target.controls.tableKey.setValue(savedTable[0].key);\n                    }\n                }\n\n                this.editDatalinkService.hubFormsService.save(false, saveAs);\n                this.editDatalinkService.savingDatalink.next(false);\n            }\n\n            // if no tables with key > 0 they are all new, so no need to prompt.\n            if (tableNames.length === 0) {\n                await doSave();\n            } else {\n            this.authService\n                .confirmDialog(`Save Target Tables?`, `The existing target table(s)\n                ${tableNames} have changed.\n                This is a shared object, and may impact other dependencies if changed.\n                Note, this will only save the metadata, use the 'Create Table' function to overwrite the physical table.`)\n                .then(async (confirm) => {\n                    if (confirm) {\n                        await doSave();\n                    }\n                }).catch(() => this.editDatalinkService.savingDatalink.next(false))\n            }\n        } else {\n            this.editDatalinkService.hubFormsService.save(false, saveAs);\n            this.editDatalinkService.savingDatalink.next(false);\n        }\n    }\n\n    preview() {\n        const transformsArray = <FormArray>this.datalinkForm.controls.dexihDatalinkTransforms;\n        let transforms = transformsArray.controls\n//            .filter(c => c.value.transform.allowUserConfig)\n            .sort((a, b) => b.value.position - a.value.position);\n\n        if (transforms.length > 0) {\n            this.router.navigate(['transforms/transform', transforms[0].value.key,\n            'preview-transform-data'], { relativeTo: this.route });\n        }\n    }\n\n    download() {\n        if (this.datalinkForm.dirty) {\n            this.authService.confirmDialog\n                ('Save Datalink',\n                    'The datalink must be saved before a data download task can be started.  Do you want to save the datalink?')\n                .then(saveDatalink => {\n                    if (saveDatalink) {\n                        this.saveDatalink();\n                        this.doDownload();\n                    }\n                })\n        } else {\n            this.doDownload();\n        }\n    }\n\n    doDownload() {\n        let downloadItems = new Array<DownloadObject>();\n        let downloadObject = new DownloadObject();\n        downloadObject.objectKey = this.datalinkForm.controls.key.value;\n        downloadObject.objectType = eDataObjectType.Datalink;\n        downloadItems.push(downloadObject);\n        this.hubService.downloadData(downloadItems, true, eDownloadFormat.Csv, this.cancelToken)\n    }\n\n    cancel() {\n        this.editDatalinkService.hubFormsService.cancel();\n    }\n\n    runDatalink(truncateTarget: boolean, resetIncremental: boolean) {\n        if (this.editDatalinkService.hubFormsService.hasChanged) {\n            this.authService.confirmDialog('Save Datalink', 'The datalink must be saved before running.  Would you like to save now?')\n                .then(confirm => {\n                    if (confirm) {\n                        this.saveDatalink();\n                        this.editDatalinkService.savingDatalink.toPromise().then(value => {\n                            if (value) {\n                                this.hubService\n                                    .runDatalinks([this.datalinkForm.controls.key.value], truncateTarget, resetIncremental\n                                        , null, null, null, this.cancelToken);\n                            }\n                        });\n                    }\n                });\n        } else {\n            this.hubService.runDatalinks([this.datalinkForm.controls.key.value], truncateTarget, resetIncremental,\n                null, null, null, this.cancelToken);\n        }\n    }\n\n    fixMappings() {\n        this.editDatalinkService.fixMappings(this.datalinkForm);\n    }\n}\n\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubCache, sourceTypes, eMappingStatus, impactMappingStatuses } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { Observable, Subscription, BehaviorSubject , combineLatest} from 'rxjs';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { eObjectUse, ColumnUsageNode, eDatalinkObjectType } from '../../../hub.lineage.models';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { DexihDatalinkTable, eSourceType, DexihDatalinkColumn, eSecurityFlag, eDeltaType } from '../../../../shared/shared.models';\nimport { AuthService } from '../../../../+auth/auth.service';\n\n@Component({\n    selector: 'dexih-datalink-edit-source-table-form',\n    templateUrl: './datalink-edit-source-table.component.html'\n})\nexport class DatalinkEditSourceTableComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n\n    private _subscription: Subscription;\n    private _sourceSubscription: Subscription;\n\n    public sourceTables: DexihDatalinkTable[];\n    private hubCache: HubCache;\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    public eMappingStatus = eMappingStatus;\n\n    public eSourceType = eSourceType;\n    public sourceTypes = sourceTypes;\n\n    columns = [\n        { name: 'position', title: '#', format: '' },\n        { name: 'columnStatus', title: 'Impact', format: 'Html' },\n        { name: 'columnGroup', title: 'Group', format: '' },\n        { name: 'name', title: 'Name', format: '' },\n        { name: 'logicalName', title: 'Logical', format: '' },\n        { name: 'dataType', title: 'Data Type', format: '' },\n        { name: 'deltaType', title: 'Delta Type', format: 'Enum', enum: eDeltaType },\n        { name: 'allowDbNull', title: 'Null?', format: 'Boolean' },\n        { name: 'isIncrementalUpdate', title: 'Incremental?', format: 'Boolean' },\n        { name: 'securityFlag', title: 'Security Flag', format: 'Enum', enum: eSecurityFlag },\n        { name: 'isInput', title: 'Input?', format: 'Boolean' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n                this.pageTitle = result[0]['pageTitle'];\n                this.hubCache = result[2];\n                this.datalinkForm = result[3];\n\n                if (this.datalinkForm) {\n                    this.updateData();\n\n                    if (this._sourceSubscription) { this._sourceSubscription.unsubscribe(); }\n                    this._sourceSubscription = this.datalinkForm.controls.sourceDatalinkTable.valueChanges.subscribe(() => {\n                        this.updateData();\n                    });\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Edit Source Table');\n        }\n\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._sourceSubscription) { this._sourceSubscription.unsubscribe(); }\n    }\n\n    previewData() {\n        let sourceDatalinkTable = <DexihDatalinkTable> this.datalinkForm.controls.sourceDatalinkTable.value;\n\n        switch (sourceDatalinkTable.sourceType) {\n            case eSourceType.Table:\n                let sourceTableKey = sourceDatalinkTable.sourceTableKey;\n                this.router.navigate(['preview-table-data', 'table', sourceTableKey], { relativeTo: this.route });\n                break;\n            case eSourceType.Datalink:\n                let datalinkKey = sourceDatalinkTable.sourceDatalinkKey;\n                this.router.navigate(['preview-table-data', 'datalink', datalinkKey], { relativeTo: this.route });\n                break;\n            default:\n                this.authService.informationDialog('Cannot Preview', 'Previews are only available for tables and datalinks.');\n                break;\n        }\n    }\n\n    columnStatus(column: DexihDatalinkColumn): string {\n        let columnUsage: ColumnUsageNode = new ColumnUsageNode(\n            eDatalinkObjectType.SourceTable,\n            eObjectUse.Source,\n            this.datalinkForm.value,\n            column,\n            null,\n            null,\n            null,\n            eMappingStatus.PassThroughMap,\n            this.hubCache\n        );\n        const lineage = columnUsage.createDatalinkImpact(true);\n        const mappingStatus = impactMappingStatuses.find(c => c.key === lineage);\n        if (mappingStatus) {\n            return `${mappingStatus.name}<i class=\"float-right ${mappingStatus.statusClass}\"></i>`\n        }\n    }\n\n    updateData() {\n        let sourceDatalinkTable = <FormGroup>this.datalinkForm.controls.sourceDatalinkTable;\n        let columnData = [];\n\n        let columnsArray = <FormArray>sourceDatalinkTable.controls.dexihDatalinkColumns;\n\n        columnsArray.controls.filter(c => c.value.isValid)\n            .sort((a, b) => a.value.position - b.value.position)\n            .forEach(columnForm => {\n                let column = <DexihDatalinkColumn> columnForm.value;\n                let newColumn = {\n                    key: column.key,\n                    position: column.position,\n                    columnStatus: this.columnStatus(column),\n                    columnGroup: column.columnGroup,\n                    name: column.name,\n                    dataType: this.hubCache.dataTypeToString(column),\n                    deltaType: column.deltaType,\n                    allowDbNull: column.allowDbNull,\n                    logicalName: column.logicalName,\n                    isIncrementalUpdate: column.isIncrementalUpdate,\n                    securityFlag: column.securityFlag,\n                    isInput: column.isInput\n                };\n\n            columnData.push(newColumn);\n        });\n\n        this._tableData.next(columnData);\n    }\n\n    deleteSelected(columns: Array<DexihDatalinkColumn>) {\n        let sourceDatalinkTable = <FormGroup>this.datalinkForm.controls.sourceDatalinkTable;\n        let columnsArray = <FormArray>sourceDatalinkTable.controls.dexihDatalinkColumns;\n\n        columns.forEach(column => {\n            let index = columnsArray.controls.findIndex(c => c.value.key === column.key);\n            columnsArray.removeAt(index);\n        });\n\n        this.updateData();\n    }\n\n    newColumn() {\n        this.router.navigate(['newcolumn'], { relativeTo: this.route.parent });\n    }\n\n    editColumn(column: DexihDatalinkColumn) {\n        this.router.navigate(['column', column.key], { relativeTo: this.route.parent });\n    }\n\n    columnSortChange(items: Array<DexihDatalinkColumn>) {\n        let sourceDatalinkTable = <FormGroup>this.datalinkForm.controls.sourceDatalinkTable;\n        let existingItems = <FormArray>sourceDatalinkTable.controls.dexihDatalinkColumns;\n\n        let position = 1;\n        items.forEach(item => {\n            let column = <FormGroup>existingItems.controls.find(c => c.value.key === item.key);\n            if (column) {\n                column.controls.position.setValue(position++);\n            }\n        });\n\n        this.updateData();\n    }\n}\n","<dexih-widget-section title='Source Type' [showExpandButton]=\"true\">\n    <ng-template #header>\n        <dexih-button-edit class=\"mr-1\"\n            *ngIf=\"datalinkForm.controls.sourceDatalinkTable.value.sourceType == eSourceType.Table && datalinkForm.controls.sourceDatalinkTable.value.sourceTableKey\"\n            [routerLink]=\"['table-edit', datalinkForm.controls.sourceDatalinkTable.value.sourceTableKey]\"> Table\n        </dexih-button-edit>\n        <dexih-button-edit class=\"mr-1\"\n            *ngIf=\"datalinkForm.controls.sourceDatalinkTable.value.sourceType == eSourceType.Datalink && datalinkForm.controls.sourceDatalinkTable.value.sourceDatalinkKey\"\n            [routerLink]=\"['../../edit', datalinkForm.controls.sourceDatalinkTable.value.sourceDatalinkKey]\"> Datalink\n        </dexih-button-edit>\n        <dexih-button-preview (click)=\"previewData()\"></dexih-button-preview>\n    </ng-template>\n\n    <datalink-table *ngIf=\"datalinkForm\" [datalinkTableForm]=\"datalinkForm.controls.sourceDatalinkTable\">\n    </datalink-table>\n</dexih-widget-section>\n\n<dexih-widget-section title='Columns' [showExpandButton]=\"true\" [padding]=\"false\">\n    <dexih-table [enableMultiSelect]=\"true\" [enableManualSort]=\"true\" (onSortChanged)=\"columnSortChange($event)\"\n        [columns]=\"columns\" [dataObservable]=\"tableData\" (rowClick)=\"editColumn($event)\">\n\n        <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n            <dexih-button-delete (click)=\"deleteSelected(items)\" title=\"Delete selected columns\"></dexih-button-delete>\n        </ng-template>\n\n        <ng-template #actions select=\"actionsTemplate\" let-items=\"items\">\n            <dexih-button-new (click)=\"newColumn()\" title=\"Create a new column\"></dexih-button-new>\n        </ng-template>\n\n        <ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n            <dexih-button-edit (click)=\"editColumn(item)\" title=\"Edit selected column\"></dexih-button-edit>\n        </ng-template>\n\n    </dexih-table>\n</dexih-widget-section>","export * from './standard-function-edit.component';\n","<div *ngIf=\"newDatalinkTransformItemForm && inputColumns && outputColumns\">\n\n\t<dexih-widget-section  title=\"Edit Function\" [showExpandButton]=\"false\">\n\t\t<ng-template #header>\n\t\t\t<dexih-button-apply [disabled]=\"newDatalinkTransformItemForm.pristine\" (click)=\"!newDatalinkTransformItemForm.pristine && applyExit()\"\n\t\t\tclass=\"mr-1\"></dexih-button-apply>\n\t\t\t<dexih-button-cancel (click)=\"cancel()\"></dexih-button-cancel>\n\t\t</ng-template>\n\n\t\t<form *ngIf=\"datalinkTransformForm\" [formGroup]=\"newDatalinkTransformItemForm\">\n\t\t\t<fieldset>\n\n\t\t\t\t<section *ngIf=\"hubCache?.hub.dexihCustomFunctions.length > 0\">\n\t\t\t\t\t<form-checkbox label=\"Use a custom function\" [(ngModel)]=\"useCustomFunction\" [ngModelOptions]=\"{standalone: true}\">\n\t\t\t\t\t</form-checkbox>\n\t\t\t\t</section>\n\n\t\t\t\t<ng-template [ngIf]=\"useCustomFunction\">\n\t\t\t\t\t<section [ngStyle]=\"{'z-index': 499, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Select a hub function\" formControlName=\"customFunctionKey\" [items]=\"customFunctions\" itemKey=\"key\"\n\t\t\t\t\t\t itemName=\"name\" itemTitle=\"description\">\n\t\t\t\t\t\t \t<customFunction-edit-button [key]=\"newDatalinkTransformItemForm.controls.customFunctionKey.value\"></customFunction-edit-button>\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template [ngIf]=\"!useCustomFunction\">\n\t\t\t\t\t<section [ngStyle]=\"{'z-index': 500, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Category\" [items]=\"functionCategories\" [allowNullSelect]=\"true\" selectNullMessage=\"(All functions)\"\n\t\t\t\t\t\t [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"functionCategory\" (ngModelChange)=\"updateCategory($event)\" [sortItems]=\"true\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<section [ngStyle]=\"{'z-index': 499, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Select a standard function\" (ngModelChange)=\"selectFunction($event, true)\" [(ngModel)]=\"selectedFunction\"\n\t\t\t\t\t\t [ngModelOptions]=\"{standalone: true}\" [items]=\"filteredFunctions\" [enableKeySelect]=\"false\" itemKey=\"name\" itemName=\"name\" itemTitle=\"description\" [note]=\"selectedFunction?.description\"\n\t\t\t\t\t\t [sortItems]=\"true\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t</ng-template>\n\t\t\t\t<div *ngIf=\"selectedFunction || selectedCustomFunction\" class=\"form-row\">\n\t\t\t\t\t<section *ngIf=\"transformFunctionType != eFunctionType.Validate && transformFunctionType != eFunctionType.condition\"\n\t\t\t\t\t class=\"col-xs-12 col-sm-6 col-md-3\" [ngStyle]=\"{'z-index': 405, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Action when null\" formControlName=\"onNull\" [items]=\"eErrorActionItems\" itemKey=\"key\" itemName=\"name\"\n\t\t\t\t\t\t iconClass=\"fa fa-database\" [enableFilter]=\"false\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"col-xs-12 col-sm-6 col-md-3\" [ngStyle]=\"{'z-index': 404, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Action when error\" formControlName=\"onError\" [items]=\"eErrorActionItems\" itemKey=\"key\" itemName=\"name\"\n\t\t\t\t\t\t iconClass=\"fa fa-database\" [enableFilter]=\"false\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t\n\t\t\t\t\t<div *ngIf=\"transformFunctionType == eFunctionType.Validate\" class=\"col-xs-12 col-sm-6 col-md-3\" [ngStyle]=\"{'z-index': 402, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Action when false\" formControlName=\"invalidAction\" [items]=\"eInvalidActionItems\" itemKey=\"key\"\n\t\t\t\t\t\t itemName=\"name\" [enableFilter]=\"false\" iconClass=\"fa fa-database\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<section *ngIf=\"(selectedFunction?.returnType == 'Boolean') || (selectedCustomFunction && selectedCustomFunction?.returnType == 'Boolean')\" class=\"col-xs-12 col-sm-6 col-md-4\">\n\t\t\t\t\t\t<form-checkbox label=\"Return 'NOT' result\" formControlName=\"notCondition\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\n\t\t\t\t\t<section *ngIf=\"selectedFunction?.genericType !== eGenericType.None\" class=\"col-xs-12 col-sm-6 col-md-3\">\n\t\t\t\t\t\t<form-select label=\"Data Type\" formControlName=\"genericTypeCode\" [items]=\"typeCodes\" itemKey=\"key\" itemName=\"name\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<section  class=\"col-xs-12 col-sm-6 col-md-3\">\n\t\t\t\t\t\t<form-select label=\"Cache Options\" formControlName=\"functionCaching\" [items]=\"functionCache\" itemKey=\"key\" itemName=\"name\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div *ngIf=\"(selectedFunction || selectedCustomFunction) && inputParameterControls.length > 0\" class=\"mt-1\">\n\t\t\t\t\t<div class=\"d-flex flex-row mb-1\">\n\t\t\t\t\t\tInput Parameters\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngFor=\"let inputParameter of inputParameterControls; let i = index\" [ngStyle]=\"{'z-index': 300-i, 'position': 'relative'}\" class=\"mb-1\">\n\t\t\t\t\t\t<div *ngIf=\"inputParameter.value.rank > 0 && !inputParameter.value.runTime.functionParameter.linkedName\">\n\t\t\t\t\t\t\t<div class=\"d-flex flex-row mb-1\">\n\t\t\t\t\t\t\t\t<div class=\"input-group-text\">\n\t\t\t\t\t\t\t\t\tArray - {{inputParameter.value.name}}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"ml-auto\">\n\t\t\t\t\t\t\t\t\t<dexih-button *ngIf=\"selectedFunction.importMethodName\" iconClass=\"fa fa-download\" text=\"Import Mappings\" (click)=\"importMappings(inputParameter)\"\n\t\t\t\t\t\t\t\t\t title=\"Attempt to import the mappings from the source data\" class=\"mr-1\"></dexih-button>\n\t\t\t\t\t\t\t\t\t<dexih-button iconClass=\"fa fa-plus\" text=\"Add Parameter\" (click)=\"addParameter(inputParameter, eParameterDirection.Input)\" title=\"Add a parameter to the array\"\n\t\t\t\t\t\t\t\t\t class=\"mr-1\"></dexih-button>\n\t\t\t\t\t\t\t\t\t<dexih-button iconClass=\"fa fa-columns\" text=\"Add All Inputs\" (click)=\"addAllColumns(inputParameter)\" title=\"Add all the input columns to the array\"\n\t\t\t\t\t\t\t\t\t class=\"mr-1\"></dexih-button>\n\t\t\t\t\t\t\t\t\t<dexih-button iconClass=\"fa fa-eraser\" text=\"Clear\" (click)=\"clearArray(inputParameter)\"></dexih-button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<input-parameter *ngIf=\"inputParameter.controls.arrayParameters.controls.length === 0\" [inputParameterForms]=\"[inputParameter]\" [nodeDatalinkColumnKey]=\"datalinkTransformForm.controls.nodeDatalinkColumn.value?.key\"\n\t\t\t\t\t\t\t [inputColumns]=\"inputColumns\" [allowAdd]=\"false\" [allowRemove]=\"false\" [updateParameterName]=\"false\" [rank]=\"inputParameter.value.rank\"\n\t\t\t\t\t\t\t [variables]=\"variables\">\n\t\t\t\t\t\t\t</input-parameter>\n\t\t\t\t\t\t\t<div *ngFor=\"let arrayParameter of inputParameter.controls.arrayParameters.controls; let j = index, let last = last\" class=\"pl-2 mb-1\"\n\t\t\t\t\t\t\t [ngStyle]=\"{'z-index': 300-j, 'position': 'relative'}\">\n\t\t\t\t\t\t\t\t<input-parameter [inputParameterForms]=\"[arrayParameter]\" [inputColumns]=\"inputColumns\" [allowAdd]=\"true\" [nodeDatalinkColumnKey]=\"datalinkTransformForm.controls.nodeDatalinkColumn.value?.key\"\n\t\t\t\t\t\t\t\t [allowRemove]=\"true\" [updateParameterName]=\"false\" (addParameter)=\"addParameter(inputParameter, eParameterDirection.Input, j)\"\n\t\t\t\t\t\t\t\t (removeParameter)=\"removeParameter(inputParameter, j)\" [variables]=\"variables\">\n\t\t\t\t\t\t\t\t</input-parameter>\n\t\t\t\t\t\t\t\t<small *ngIf=\"last && arrayParameter.value.runTime?.functionParameter?.description\" class=\"form-text text-muted\">\n\t\t\t\t\t\t\t\t\t<markdown [data]=\"arrayParameter.value.runTime.functionParameter.description\"></markdown>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<input-parameter *ngIf=\"inputParameter.value.rank == 0 && !inputParameter.value.runTime.functionParameter.linkedName\" [inputParameterForms]=\"[inputParameter]\" [inputColumns]=\"inputColumns\" [nodeDatalinkColumnKey]=\"datalinkTransformForm.controls.nodeDatalinkColumn.value?.key\"\n\t\t\t\t\t\t [allowAdd]=\"false\" [allowRemove]=\"false\" [updateParameterName]=\"false\" [variables]=\"variables\">\n\t\t\t\t\t\t</input-parameter>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- When linked array, then place parameters side/side -->\n\t\t\t\t<div *ngFor=\"let arrayParameter of arrayParameters\" class=\"mt-1\">\n\t\t\t\t\t<div class=\"d-flex flex-row mb-1\">\n\t\t\t\t\t\t{{arrayParameter.name}}\n\t\t\t\t\t\t<div class=\"ml-auto\">\n\t\t\t\t\t\t\t<dexih-button *ngIf=\"selectedFunction.importMethodName\" iconClass=\"fa fa-download\" text=\"Import Mappings\" (click)=\"importInputOutputMappings(arrayParameter)\"\n\t\t\t\t\t\t\t title=\"Attempt to import the mappings from the source data\" class=\"mr-1\"></dexih-button>\n\t\t\t\t\t\t\t<dexih-button iconClass=\"fa fa-plus\" text=\"Add Mapping\" (click)=\"addInputOutputParameter(arrayParameter)\"\n\t\t\t\t\t\t\t title=\"Add a parameter to the array\" class=\"mr-1\"></dexih-button>\n\t\t\t\t\t\t\t<dexih-button iconClass=\"fa fa-columns\" text=\"Add All Inputs\" (click)=\"addAllInputOutputColumns(arrayParameter)\"\n\t\t\t\t\t\t\t title=\"Add all the input columns to the array\" class=\"mr-1\"></dexih-button>\n\t\t\t\t\t\t\t<dexih-button iconClass=\"fa fa-eraser\" text=\"Clear\" (click)=\"clearInputOutputArray(arrayParameter)\"></dexih-button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngFor=\"let parameterItem of arrayParameter.parameterItems; let j = index\" class=\"pl-2\"\n\t\t\t\t\t [ngStyle]=\"{'z-index': 200-j, 'position': 'relative'}\">\n\t\t\t\t\t\t<input-parameter \n\t\t\t\t\t\t [inputParameterForms]=\"parameterItem.inputItems\" \n\t\t\t\t\t\t [outputParameterForms]=\"parameterItem.outputItems\" \n\t\t\t\t\t\t [nodeDatalinkColumnKey]=\"datalinkTransformForm.controls.nodeDatalinkColumn.value?.key\"\n\t\t\t\t\t\t [inputColumns]=\"inputColumns\" [outputColumns]=\"outputColumns\" [datalinkTargets]=\"datalinkTargets\" [allowAdd]=\"true\" [allowRemove]=\"true\"\n\t\t\t\t\t\t [updateParameterName]=\"false\" (addParameter)=\"addInputOutputParameter(arrayParameter, j)\"\n\t\t\t\t\t\t (removeParameter)=\"removeInputOutputParameter(arrayParameter, j)\"\n\t\t\t\t\t\t [variables]=\"variables\">\n\t\t\t\t\t\t</input-parameter>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div *ngIf=\"(selectedFunction || selectedCustomFunction) && allowOutput\" class=\"mt-1\">\n\t\t\t\t\t<label class=\"d-flex flex-row\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\tOutput Parameters\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"ml-auto\">\n\t\t\t\t\t\t\t<dexih-button text=\"Auto Map\" buttonClass=\"btn-sm btn-outline-primary\" (click)=\"autoMap(outputParameter)\"></dexih-button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</label>\n\t\t\t\t\t<div *ngFor=\"let outputParameter of outputParameterControls; let i = index\" [ngStyle]=\"{'z-index': 100-i, 'position': 'relative'}\">\n\t\t\t\t\t\t<div *ngIf=\"outputParameter.value.rank > 0 && !outputParameter.value.runTime.functionParameter.linkedName\">\n\t\t\t\t\t\t\t<div class=\"d-flex flex-row mb-1\">\n\t\t\t\t\t\t\t\t<div class=\"input-group-text\">\n\t\t\t\t\t\t\t\t\tArray - {{outputParameter.value.name}}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"ml-auto\">\n\t\t\t\t\t\t\t\t\t<dexih-button iconClass=\"fa fa-plus\"  text=\"Add Parameter\" (click)=\"addParameter(outputParameter, eParameterDirection.Output)\" title=\"Add a parameter to the array\"\n\t\t\t\t\t\t\t\t\t class=\"mr-1\"></dexih-button>\n\t\t\t\t\t\t\t\t\t<dexih-button iconClass=\"fa fa-eraser\"  text=\"Clear\" (click)=\"clearArray(outputParameter)\"></dexih-button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<output-parameter *ngIf=\"outputParameter.controls.arrayParameters.controls.length === 0\" [outputParameterForm]=\"outputParameter\"\n\t\t\t\t\t\t\t [outputColumns]=\"outputColumns\" [datalinkTargets]=\"datalinkTargets\" [allowAdd]=\"false\" [allowRemove]=\"false\" [rank]=\"outputParameter.value.rank\">\n\t\t\t\t\t\t\t</output-parameter>\n\t\t\t\t\t\t\t<div *ngFor=\"let arrayParameter of outputParameter.controls.arrayParameters.controls; let j = index\" class=\"pl-2\"\n\t\t\t\t\t\t\t [ngStyle]=\"{'z-index': 200-j, 'position': 'relative'}\">\n\t\t\t\t\t\t\t\t<output-parameter [outputParameterForm]=\"arrayParameter\" [outputColumns]=\"outputColumns\" [datalinkTargets]=\"datalinkTargets\" [allowAdd]=\"true\"\n\t\t\t\t\t\t\t\t [allowRemove]=\"true\" (addParameter)=\"addParameter(outputParameter, eParameterDirection.Output, j)\"\n\t\t\t\t\t\t\t\t (removeParameter)=\"removeParameter(outputParameter, j)\">\n\t\t\t\t\t\t\t\t</output-parameter>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<output-parameter *ngIf=\"outputParameter.value.rank == 0\" [outputParameterForm]=\"outputParameter\" [outputColumns]=\"outputColumns\" [datalinkTargets]=\"datalinkTargets\" \n\t\t\t\t\t\t [allowAdd]=\"false\" [allowRemove]=\"false\">\n\t\t\t\t\t\t</output-parameter>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t</form>\n\t</dexih-widget-section>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HubCache, InvalidActions, FunctionCache} from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { LogFactory, eLogLevel } from '../../../../../logging';\nimport { TypeCodes } from '../../../hub.remote.models';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { FunctionParameter, eFunctionType, eParameterDirection, eGenericType, DexihDatalinkColumn, FunctionReference,\n  DexihCustomFunction, eTransformType, DexihDatalinkTable, DexihDatalinkTransformItem, eTransformItemType,\n  DexihFunctionParameter, eTypeCode, DexihCustomFunctionParameter,\n  DexihFunctionArrayParameter, RemoteLibraries, eInvalidActionItems, eErrorActionItems, DexihDatalinkTarget } from '../../../../shared/shared.models';\nimport { CancelToken } from '../../../../+auth/auth.models';\n\nexport class ArrayParameter {\n  public name: string;\n  public functionParameter: FunctionParameter;\n\n  public inputParameterForms: FormGroup[] = [];\n  public outputParameterForms: FormGroup[] = [];\n\n  public parameterItems: ArrayParameterItem[] = [];\n\n  public resetItems() {\n    let inputArray = <FormArray>this.inputParameterForms[0].controls.arrayParameters;\n    for (let i = 0; i < inputArray.controls.length; i++) {\n      let item = new ArrayParameterItem();\n      this.inputParameterForms.forEach(inputParameterForm => {\n        let array = <FormArray>inputParameterForm.controls.arrayParameters;\n        item.inputItems.push(<FormGroup>array.controls[i]);\n      });\n      this.outputParameterForms.forEach(outputParameterForm => {\n        let array = <FormArray>outputParameterForm.controls.arrayParameters;\n        item.outputItems.push(<FormGroup>array.controls[i]);\n      });\n\n      this.parameterItems.push(item);\n    }\n  }\n}\n\nexport class ArrayParameterItem {\n  public inputItems: FormGroup[] = [];\n  public outputItems: FormGroup[] = [];\n}\n\n\n@Component({\n\n  selector: 'dexih-function-edit',\n  templateUrl: './standard-function-edit.component.html'\n})\nexport class StandardFunctionEditComponent implements OnInit, OnDestroy {\n  public hubCache: HubCache;\n  public remoteLibraries: RemoteLibraries;\n\n  eFunctionType = eFunctionType;\n  eParameterDirection = eParameterDirection;\n  typeCodes = TypeCodes;\n\n  public pageTitle: string;\n\n  private _subscription: Subscription;\n  private _returnParameterSubscription: Subscription;\n  private _functionSubscription: Subscription;\n  private _saveSubscription: Subscription;\n\n  private cancelToken: CancelToken = new CancelToken();\n\n  transformFunctionType: eFunctionType;\n  datalinkTransformItemKey: number;\n  datalinkKey: number;\n  datalinkTransformKey: number;\n\n  datalinkForm: FormGroup;\n  datalinkTransformForm: FormGroup;\n  datalinkTransformItemForm: FormGroup;\n  // returnParameterForm: FormGroup;\n  resultReturnParameterForm: FormGroup;\n\n  useCustomFunction: boolean;\n\n  invalidActions = InvalidActions;\n  functionCache = FunctionCache;\n  eGenericType = eGenericType;\n\n  newDatalinkTransformItemForm: FormGroup;\n\n  inputColumns: Array<DexihDatalinkColumn>;\n  outputColumns: Array<DexihDatalinkColumn>;\n  datalinkTargets: Array<DexihDatalinkTarget>;\n\n  functionCategory: string;\n  functionCategories: Array<string>;\n  functions: Array<FunctionReference>;\n  filteredFunctions: Array<FunctionReference>;\n  selectedFunction: FunctionReference;\n  customFunctions: Array<DexihCustomFunction>;\n  selectedCustomFunction: DexihCustomFunction;\n\n  variables = [];\n\n  allowOutput = false;\n  allowReturn = true;\n\n  inputParameterControls: Array<FormGroup>;\n  outputParameterControls: Array<FormGroup>;\n\n  arrayParameters: ArrayParameter[] = [];\n\n  eInvalidActionItems = eInvalidActionItems.filter(c => c.key > 0);\n  eErrorActionItems = eErrorActionItems.filter(c => c.key > 0);\n\n  logger = new LogFactory('standard-function-edit');\n\n  isJoin = false;\n\n  constructor(\n    private hubService: HubService,\n    private authService: AuthService,\n    private editDatalinkService: DatalinkEditService,\n    private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n        this.hubService.getRemoteLibrariesObservable(),\n        this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n      ).subscribe(result => {\n        this.pageTitle = result[0]['pageTitle'];\n        let params = result[1];\n        this.hubCache = result[2];\n        this.remoteLibraries = result[3]\n        this.datalinkForm = result[4];\n\n        this.logger.LogC(() => `OnInit`, eLogLevel.Trace);\n\n        if (this.hubCache && this.hubCache.isLoaded() && this.datalinkForm\n          && this.remoteLibraries && this.remoteLibraries.functions.length > 0) {\n\n          this.transformFunctionType = +params['functionType'];\n          if (this.transformFunctionType === eFunctionType.Validate) {\n            this.datalinkTransformForm = this.editDatalinkService.getValidationTransform();\n            this.datalinkTransformKey = this.datalinkTransformForm.value.key;\n          } else {\n            this.datalinkTransformKey = +params['datalinkTransformKey'];\n            this.datalinkTransformForm = this.editDatalinkService.getDatalinkTransform(this.datalinkTransformKey);\n          }\n\n          this.variables = this.editDatalinkService.getVariables();\n\n          this.useCustomFunction = this.datalinkTransformForm.controls.customFunctionKey ? true : false;\n          this.datalinkTransformItemKey = +params['datalinkTransformItemKey'];\n\n          this.isJoin = this.datalinkTransformForm.value.transformType === eTransformType.Join ||\n            this.datalinkTransformForm.value.transformType === eTransformType.Lookup;\n\n          // if this is a join transform, then the use the join columns for the input.\n          if (this.isJoin) {\n            const table = <DexihDatalinkTable>this.datalinkTransformForm.controls.joinDatalinkTable.value;\n            if (!table) {\n              this.hubService.addHubErrorMessage('The join table could not be found.');\n              this.authService.navigateUp();\n              return;\n            }\n\n            this.inputColumns = table.dexihDatalinkColumns;\n          } else {\n            let nodeDatalinkColumn = <DexihDatalinkColumn> this.datalinkTransformForm.controls.nodeDatalinkColumn.value;\n            let nodeDatalinkColumnKey = nodeDatalinkColumn ? nodeDatalinkColumn.key : null;\n            let io = new InputOutputColumns();\n            if (nodeDatalinkColumnKey) {\n              let inputColumns = <DexihDatalinkColumn[]> this.datalinkTransformForm.controls.runTime.value.inputColumns;\n              this.inputColumns = io.getAvailableColumns(inputColumns, nodeDatalinkColumnKey, 0);\n            } else {\n              this.inputColumns = this.datalinkTransformForm.controls.runTime.value.inputColumns;\n            }\n          }\n\n          this.outputColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n          this.datalinkTargets = this.datalinkForm.controls.dexihDatalinkTargets.value;\n\n          if (this.datalinkTransformItemKey) {\n            this.datalinkTransformItemForm = this.editDatalinkService\n              .getDatalinkTransformItem(this.datalinkTransformForm, this.datalinkTransformItemKey);\n\n            if (!this.datalinkTransformItemForm) {\n              this.authService.navigateUp();\n              return;\n            }\n\n            // create a copy of the form item to allow for cancel.\n            this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n              .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, this.datalinkTransformItemForm.value);\n\n            if (this.datalinkTransformItemForm.controls.customFunctionKey.value) {\n                this.selectCustomFunction(this.datalinkTransformItemForm.value.customFunctionKey, false);\n            } else {\n            let selectedFunction = this.remoteLibraries.functions.find(c =>\n              c.functionClassName === this.datalinkTransformItemForm.value.functionClassName &&\n              c.functionMethodName === this.datalinkTransformItemForm.value.functionMethodName &&\n              c.functionAssemblyName === this.datalinkTransformItemForm.value.functionAssemblyName\n            );\n\n            // this.selectedFunction = selectedFunction;\n              this.selectFunction(selectedFunction, false);\n            // this.refreshParameters();\n            }\n\n          } else {\n            let newItem = new DexihDatalinkTransformItem();\n            newItem.datalinkTransformKey = this.datalinkTransformKey;\n            newItem.transformItemType = eTransformItemType.BuiltInFunction;\n\n            this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n              .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, newItem);\n          }\n\n          switch (this.transformFunctionType) {\n            case eFunctionType.Condition:\n            case eFunctionType.JoinCondition:\n              this.functions = this.remoteLibraries.functions.filter(c => c.functionType === eFunctionType.Condition);\n              this.allowOutput = false;\n              break;\n            case eFunctionType.Validate:\n              this.functions = this.remoteLibraries.functions\n                .filter(c => c.functionType === eFunctionType.Condition || c.functionType === eFunctionType.Validate);\n              this.allowOutput = true;\n              break;\n            case eFunctionType.Map:\n              this.functions = this.remoteLibraries.functions\n                .filter(c => c.functionType === eFunctionType.Condition ||\n                  c.functionType === eFunctionType.Validate ||\n                  c.functionType === eFunctionType.Map);\n\n              this.allowOutput = true;\n              break;\n            case eFunctionType.Aggregate:\n              this.functions = this.remoteLibraries.functions.filter(c => c.functionType === eFunctionType.Aggregate);\n              this.allowOutput = true;\n              break;\n            case eFunctionType.Series:\n              this.functions = this.remoteLibraries.functions.filter(c => c.functionType === eFunctionType.Series ||\n                c.functionType === eFunctionType.Aggregate);\n              this.allowOutput = true;\n              break;\n            case eFunctionType.Rows:\n              this.functions = this.remoteLibraries.functions.filter(c => c.functionType === eFunctionType.Rows);\n              this.allowOutput = true;\n              this.allowReturn = false;\n              break;\n            case eFunctionType.Profile:\n              this.functions = this.remoteLibraries.functions.filter(c => c.functionType === eFunctionType.Profile);\n              this.allowOutput = false;\n              break;\n            default:\n              this.functions = null;\n          }\n\n          this.functionCategories = Array.from(new Set(this.functions.map(c => c.category)));\n          this.filteredFunctions = this.functions;\n          this.customFunctions = this.hubCache.hub.dexihCustomFunctions;\n          if (this.datalinkTransformItemForm && this.datalinkTransformItemForm.value.customFunctionKey) {\n            this.useCustomFunction = true;\n            this.selectedCustomFunction = this.hubCache.hub.dexihCustomFunctions\n              .find(c => c.key === this.datalinkTransformItemForm.value.customFunctionKey);\n          }\n\n          if (this._functionSubscription) { this._functionSubscription.unsubscribe(); }\n          this._functionSubscription = this.newDatalinkTransformItemForm.controls.customFunctionKey.valueChanges\n            .subscribe(customFunctionKey => {\n              this.selectCustomFunction(customFunctionKey, false);\n            });\n        }\n\n        if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n        this._saveSubscription = this.editDatalinkService.savingDatalink.subscribe(value => {\n            if(value) {\n                this.apply();\n            }\n        });\n\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Standard Function Edit');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._returnParameterSubscription) { this._returnParameterSubscription.unsubscribe(); }\n    if (this._functionSubscription) { this._functionSubscription.unsubscribe(); }\n    if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n    this.cancelToken.cancel();\n  }\n\n  updateCategory(value) {\n    if (value) {\n      this.filteredFunctions = this.functions.filter(c => c.category === value);\n    } else {\n      this.filteredFunctions = this.functions;\n    }\n  }\n\n  canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      if (this.newDatalinkTransformItemForm && !this.newDatalinkTransformItemForm.pristine) {\n        this.authService.confirmDialog('The function has changed',\n          'The function has changed.  Do you want to discard the changes and continue?')\n          .then((confirm) => {\n              resolve(confirm);\n            }).catch(() => {\n              resolve(false);\n            });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  private parametersArray() {\n    return <FormArray>this.newDatalinkTransformItemForm.controls.dexihFunctionParameters;\n  }\n\n  refreshParameters() {\n    let parametersArray = this.parametersArray();\n\n    // convoluted sort below allows sorting by the direction then the position\n    this.inputParameterControls = <FormGroup[]>parametersArray.controls\n      .sort((a, b) => a.value.position - b.value.position)\n      .filter(c => (c.value.direction === eParameterDirection.Input || c.value.direction === eParameterDirection.ResultInput\n        || c.value.direction === eParameterDirection.Join));\n\n    // convoluted sort below allows sorting by the direction then the position\n    this.outputParameterControls = <FormGroup[]>parametersArray.controls\n      .sort((a, b) => a.value.position - b.value.position)\n      .filter(c => HubCache.parameterIsOutput(c.value));\n\n    // don't include return value (which will determine pass/fail) for validation transforms.\n    if (this.transformFunctionType === eFunctionType.Validate) {\n      this.outputParameterControls = this.outputParameterControls.filter(c => c.value.direction !== eParameterDirection.ReturnValue);\n    }\n\n    this.arrayParameters = [];\n\n    if (this.selectedFunction) {\n\n      this.selectedFunction.inputParameters?.filter(c => c.linkedName).forEach(parameter => {\n        this.addArrayParameter(parameter, true);\n      });\n\n      this.selectedFunction.outputParameters?.filter(c => c.linkedName).forEach(parameter => {\n        this.addArrayParameter(parameter, false);\n      });\n\n      this.selectedFunction.resultInputParameters?.filter(c => c.linkedName).forEach(parameter => {\n        this.addArrayParameter(parameter, true);\n      });\n\n      this.selectedFunction.resultOutputParameters?.filter(c => c.linkedName).forEach(parameter => {\n        this.addArrayParameter(parameter, false);\n      });\n\n      this.selectedFunction.resultReturnParameters?.filter(c => c.linkedName).forEach(parameter => {\n        this.addArrayParameter(parameter, false);\n      });\n\n    }\n\n    this.arrayParameters.forEach(arrayParameter => arrayParameter.resetItems());\n  }\n\n  private addArrayParameter(parameter: FunctionParameter, isInput: boolean) {\n    let arrayParameter = this.arrayParameters.find(c => c.name === parameter.linkedName);\n    if (!arrayParameter) {\n      arrayParameter = new ArrayParameter();\n      arrayParameter.name = parameter.linkedName;\n      arrayParameter.functionParameter = parameter;\n      this.arrayParameters.push(arrayParameter);\n    }\n\n    if (isInput) {\n      let controls = this.inputParameterControls.find(c => c.controls.name.value === parameter.name);\n      arrayParameter.inputParameterForms.push(controls);\n    } else {\n      let controls = this.outputParameterControls.find(c => c.controls.name.value === parameter.name);\n      arrayParameter.outputParameterForms.push(controls);\n    }\n\n  }\n\n  // when a new standard function is selected\n  // reset all the parameters\n  selectFunction(value: FunctionReference, markAsDirty: boolean) {\n    this.selectedFunction = value;\n\n    if (value === null || value === undefined) { return; }\n\n    this.newDatalinkTransformItemForm.controls.functionAssemblyName.setValue(this.selectedFunction.functionAssemblyName);\n    this.newDatalinkTransformItemForm.controls.functionClassName.setValue(this.selectedFunction.functionClassName);\n    this.newDatalinkTransformItemForm.controls.functionMethodName.setValue(this.selectedFunction.functionMethodName);\n    this.newDatalinkTransformItemForm.controls.targetDatalinkColumn.setValue(null);\n\n    if (!this.newDatalinkTransformItemForm.controls.genericTypeCode.value) {\n      if (this.selectedFunction.genericTypeDefault) {\n        this.newDatalinkTransformItemForm.controls.genericTypeCode.setValue(this.selectedFunction.genericTypeDefault);\n      } else {\n        if (this.selectedFunction.genericType === eGenericType.Numeric) {\n          this.newDatalinkTransformItemForm.controls.genericTypeCode.setValue(eTypeCode.Decimal);\n        } else {\n          this.newDatalinkTransformItemForm.controls.genericTypeCode.setValue(eTypeCode.String);\n        }\n      }\n    }\n\n    switch (this.selectedFunction.genericType) {\n      case eGenericType.All:\n        this.typeCodes = TypeCodes;\n        break;\n      case eGenericType.Numeric:\n        this.typeCodes = TypeCodes.filter(c => c.isNumeric);\n        break;\n      case eGenericType.String:\n        this.typeCodes = TypeCodes.filter(c => c.isString);\n        break;\n      case eGenericType.None:\n        this.typeCodes = [];\n    }\n\n    if (this.selectedFunction) {\n      let parameters = this.parametersArray();\n      let existingParameters: any[] = [];\n\n      while (parameters.length) {\n        existingParameters.push(parameters.value[0])\n        parameters.removeAt(0);\n      }\n\n      if (this.selectedFunction.inputParameters) {\n        this.selectedFunction.inputParameters.forEach((param: FunctionParameter, index: number) => {\n          if (param) {\n            parameters.push(\n                this.newParameter(existingParameters, param, index, this.isJoin ? eParameterDirection.Join : eParameterDirection.Input,\n                    this.selectedFunction.genericTypeDefault));\n          }\n        });\n      }\n\n      if (this.selectedFunction.outputParameters) {\n        this.selectedFunction.outputParameters.forEach((param: FunctionParameter, index: number) => {\n          if (param) {\n            if (param) {\n              parameters.push(this.newParameter(existingParameters, param, index + 100, eParameterDirection.Output,\n                this.selectedFunction.genericTypeDefault));\n            }\n          }\n        });\n      }\n\n      if (this.selectedFunction.resultInputParameters) {\n        this.selectedFunction.resultInputParameters.forEach((param: FunctionParameter, index: number) => {\n          if (param) {\n            parameters.push(\n                this.newParameter(existingParameters, param, index + 200, eParameterDirection.ResultInput,\n                  this.selectedFunction.genericTypeDefault));\n          }\n        });\n      }\n\n      if (this.selectedFunction.resultOutputParameters) {\n        this.selectedFunction.resultOutputParameters.forEach((param: FunctionParameter, index: number) => {\n          if (param) {\n            if (param) {\n              parameters.push(\n                  this.newParameter(existingParameters, param, index + 300, eParameterDirection.ResultOutput,\n                    this.selectedFunction.genericTypeDefault));\n            }\n          }\n        });\n      }\n\n      if (this.selectedFunction.returnParameters) {\n        if (this.allowReturn && this.selectedFunction.returnParameters.length > 0) {\n          this.selectedFunction.returnParameters.forEach((parameter: FunctionParameter, index: number) => {\n            parameters.push(this.newParameter(existingParameters, parameter, index + 400,\n              eParameterDirection.ReturnValue, this.selectedFunction.genericTypeDefault ));\n          });\n        }\n      }\n\n      if (this.selectedFunction.resultReturnParameters) {\n        if (this.allowReturn && this.selectedFunction.resultReturnParameters.length > 0) {\n            this.selectedFunction.resultReturnParameters.forEach(parameter => {\n            parameters.push(this.newParameter(existingParameters, parameter, 0,\n                eParameterDirection.ResultReturnValue, this.selectedFunction.genericTypeDefault));\n          });\n        }\n      }\n\n      this.refreshParameters();\n\n      if (markAsDirty) {\n        this.newDatalinkTransformItemForm.markAsDirty();\n      }\n    } else {\n      this.selectedFunction = null;\n    }\n  }\n\n  private newParameter(existingParameters: DexihFunctionParameter[],\n    param: any, index: number, direction: eParameterDirection, genericTypeDefault: eTypeCode): FormGroup {\n\n    let existingValue = existingParameters.find(c => c.name === param.parameterName)\n\n    let newParameter = new DexihFunctionParameter();\n    // newParameter.datalinkTransformItemKey = this.datalinkTransformItemKey;\n    newParameter.name = param.parameterName;\n    newParameter.rank = param.rank;\n    newParameter.direction = direction;\n    newParameter.isGeneric = param.isGeneric;\n    newParameter.position = index;\n    newParameter.key = this.hubCache.getNextSequence();\n    newParameter['runTime'] = {functionParameter: param};\n\n    if (existingValue) {\n      newParameter.key = existingValue.key;\n      newParameter.datalinkColumn = existingValue.datalinkColumn;\n      newParameter.value = existingValue.value;\n      newParameter.dataType = param.isGeneric ? existingValue.dataType : param.dataType;\n      existingValue.arrayParameters.forEach(p => {\n        p['runTime'] = {functionParameter: param};\n      });\n      newParameter.arrayParameters = existingValue.arrayParameters;\n    } else {\n      newParameter.value = param.defaultValue;\n      newParameter.dataType = param.isGeneric ? genericTypeDefault : param.dataType;\n    }\n\n    newParameter.isValid = true;\n\n    let newParameterForm = this.editDatalinkService.hubFormsService.datalinkFunctionParametersFormGroup(newParameter);\n    return newParameterForm;\n  }\n\n  // when a new standard function is selected\n  // reset all the parameters\n  selectCustomFunction(customFunctionKey: number, markAsDirty: boolean) {\n    this.selectedCustomFunction = this.hubCache.hub.dexihCustomFunctions.find(c => c.key === customFunctionKey);\n\n    if (this.selectedCustomFunction) {\n      let parameters = this.parametersArray();\n      let existingParameters: any[] = [];\n\n      while (parameters.length) {\n        existingParameters.push(parameters.value[0]);\n        parameters.removeAt(0);\n      }\n\n      this.selectedCustomFunction.dexihCustomFunctionParameters\n        .filter(c => (c.direction === eParameterDirection.Input || c.direction === eParameterDirection.Join)  && c.isValid)\n        .forEach((param: DexihCustomFunctionParameter, index: number) => {\n          if (param) {\n            let newParameterForm =\n              this.newParameter(existingParameters, param, index, this.isJoin ? eParameterDirection.Join : eParameterDirection.Input,\n                this.selectedCustomFunction.genericTypeDefault);\n            parameters.push(newParameterForm);\n          }\n        });\n\n      this.selectedCustomFunction.dexihCustomFunctionParameters.filter(c => c.direction === eParameterDirection.Output && c.isValid)\n        .forEach((param: DexihCustomFunctionParameter, index: number) => {\n          if (param) {\n            let newParameterForm =\n              this.newParameter(existingParameters, param, index, eParameterDirection.Output,\n                this.selectedCustomFunction.genericTypeDefault);\n            parameters.push(newParameterForm);\n          }\n        });\n\n        let returnParameter = new DexihFunctionParameter();\n        returnParameter.dataType = this.selectedCustomFunction.returnType;\n        returnParameter.name = 'Return';\n        returnParameter.direction = eParameterDirection.Output;\n        returnParameter.rank = 0;\n        returnParameter.position = -1;\n        returnParameter.isValid = true;\n        let newParameterForm2 = this.newParameter(existingParameters, returnParameter, 0, eParameterDirection.ReturnValue,\n          this.selectedCustomFunction.genericTypeDefault);\n        parameters.push(newParameterForm2);\n\n      this.refreshParameters();\n\n      if (markAsDirty) {\n        this.newDatalinkTransformItemForm.markAsDirty();\n      }\n    }\n  }\n\n  private createArrayParameter(parentParameter: DexihFunctionArrayParameter,\n    direction: eParameterDirection, position: number = null, genericTypeDefault: eTypeCode):\n    DexihFunctionArrayParameter {\n    let param = parentParameter['runTime'].functionParameter;\n    let newParameter = new DexihFunctionArrayParameter();\n    newParameter.isGeneric = param.isGeneric;\n    newParameter.dataType = param.isGeneric ? genericTypeDefault : parentParameter.dataType;\n    newParameter.position = position ? position + 1 : 10000000;\n    newParameter.name = param.name;\n    newParameter.direction = direction;\n    newParameter.rank = 0;\n    newParameter.key = this.hubCache.getNextSequence();\n    newParameter.datalinkColumn = null;\n    newParameter.isValid = true;\n    newParameter['runTime'] = {functionParameter: param};\n\n    return newParameter;\n  }\n\n  addParameter(parentParameterForm: FormGroup, direction: eParameterDirection, position: number = null): FormGroup {\n    if (direction === eParameterDirection.Input && this.isJoin) { direction = eParameterDirection.Join; }\n    let parentParameter = parentParameterForm.value;\n    let newParameter = this.createArrayParameter(parentParameter, direction, 0,\n      this.newDatalinkTransformItemForm.controls.genericTypeCode.value);\n    let newParameterForm = this.editDatalinkService.hubFormsService.datalinkFunctionArrayParametersFormGroup(newParameter);\n    let arrayForm = <FormArray>parentParameterForm.controls.arrayParameters;\n    if (position !== null) {\n      arrayForm.insert(position + 1, newParameterForm);\n    } else {\n      arrayForm.push(newParameterForm);\n    }\n\n    // reset the positions\n    arrayForm.controls.forEach((p, index) => {\n      (<FormGroup>p).controls.position.setValue(index * 10);\n    });\n\n    this.refreshParameters()\n    return newParameterForm;\n  }\n\n  addInputOutputParameter(arrayParameter: ArrayParameter, position: number = null) {\n    let item = new ArrayParameterItem();\n\n    arrayParameter.inputParameterForms.forEach(parameterForm => {\n      let parameter = this.addParameter(parameterForm, this.isJoin ? eParameterDirection.Join : eParameterDirection.Input, position);\n      item.inputItems.push(parameter);\n    });\n\n    arrayParameter.outputParameterForms.forEach(parameterForm => {\n      let parameter = this.addParameter(parameterForm, eParameterDirection.Output, position);\n      item.outputItems.push(parameter);\n    });\n\n    if (position !== null) {\n      arrayParameter.parameterItems.splice(position, 0, item);\n    } else {\n      arrayParameter.parameterItems.push(item);\n    }\n  }\n\n  removeParameter(parentParameterForm: FormGroup, position: number) {\n    let arrayForm = <FormArray>parentParameterForm.controls.arrayParameters;\n    if (position > -1) {\n      arrayForm.removeAt(position);\n      this.newDatalinkTransformItemForm.markAsDirty();\n      this.refreshParameters();\n    }\n  }\n\n  removeInputOutputParameter(arrayParameter: ArrayParameter, position: number = null) {\n\n    arrayParameter.inputParameterForms.forEach(parameterForm => {\n      this.removeParameter(parameterForm, position);\n    });\n\n    arrayParameter.outputParameterForms.forEach(parameterForm => {\n      this.removeParameter(parameterForm, position);\n    });\n\n    if (position !== null) {\n      arrayParameter.parameterItems.splice(position, 1);\n    } else {\n      arrayParameter.parameterItems.splice(arrayParameter.parameterItems.length - 1, 1);\n    }\n  }\n\n  addAllColumns(parentParameterForm: FormGroup) {\n    this.clearArray(parentParameterForm);\n\n    let isLabel = parentParameterForm.value.runTime.functionParameter.isLabel;\n    let parentParameter = parentParameterForm.value;\n    let arrayForm = <FormArray>parentParameterForm.controls.arrayParameters;\n    let position = 1;\n    this.inputColumns.forEach(column => {\n      let newParameter = this.createArrayParameter(parentParameter,\n        this.isJoin ? eParameterDirection.Join : eParameterDirection.Input, position++, this.selectedFunction.genericTypeDefault);\n        if (isLabel) {\n          newParameter.value = column.name;\n        } else {\n          newParameter.datalinkColumn = column;\n        }\n\n      let newParameterForm = this.editDatalinkService.hubFormsService.datalinkFunctionArrayParametersFormGroup(newParameter);\n      arrayForm.push(newParameterForm);\n    });\n    this.refreshParameters();\n  }\n\n  addAllInputOutputColumns(arrayParameter: ArrayParameter) {\n    // add the first parameter\n    this.addAllColumns(arrayParameter.inputParameterForms[0]);\n    let inputArrayForm = <FormArray>arrayParameter.inputParameterForms[0].controls.arrayParameters;\n\n    if (arrayParameter.inputParameterForms.length > 1) {\n      this.clearArray(arrayParameter.inputParameterForms[1]);\n      for (let i = 0; i < inputArrayForm.length; i++) {\n        let parameter = this.addParameter(arrayParameter.inputParameterForms[1],\n          this.isJoin ? eParameterDirection.Join : eParameterDirection.Input);\n\n        // if the first parameter is a label, then map the matching column to the second input parameter\n        if (arrayParameter.inputParameterForms[0].value.runTime.functionParameter.isLabel) {\n          parameter.controls.datalinkColumn.setValue(this.inputColumns[i]);\n        }\n      }\n\n      // add any other parameters with default values.\n      for (let i = 2; i < arrayParameter.inputParameterForms.length; i++) {\n        this.clearArray(arrayParameter.inputParameterForms[i]);\n        for (let j = 0; j < inputArrayForm.length; j++) {\n          let parameter = this.addParameter(arrayParameter.inputParameterForms[i],\n            this.isJoin ? eParameterDirection.Join : eParameterDirection.Input);\n            parameter.controls.value.setValue(arrayParameter.inputParameterForms[i].value.runTime.functionParameter.defaultValue);\n        }\n      }\n    }\n\n    // add any output columns of the same length.\n    if (arrayParameter.outputParameterForms.length > 0) {\n      for (let i = 0; i < arrayParameter.outputParameterForms.length; i++) {\n        this.clearArray(arrayParameter.outputParameterForms[i]);\n        for (let j = 0; j < inputArrayForm.length; j++) {\n        }\n      }\n    }\n\n    arrayParameter.resetItems();\n  }\n\n  clearArray(parameterForm: FormGroup) {\n    let arrayForm = <FormArray>parameterForm.controls.arrayParameters;\n    for (let i = arrayForm.controls.length - 1; i >= 0; i--) {\n      arrayForm.removeAt(i);\n    }\n    this.refreshParameters();\n  }\n\n  clearInputOutputArray(arrayParameter: ArrayParameter) {\n    arrayParameter.inputParameterForms.forEach(form => {\n      this.clearArray(form);\n    });\n\n    arrayParameter.outputParameterForms.forEach(form => {\n      this.clearArray(form);\n    });\n  }\n\n\n  async importInputOutputMappings(arrayParameter: ArrayParameter) {\n    let result = await this.editDatalinkService\n      .importFunctionMappings(this.datalinkTransformKey, this.newDatalinkTransformItemForm.value, this.cancelToken);\n\n      if (result === null) { return; }\n\n      let inputArrayForm = <FormArray>arrayParameter.inputParameterForms[0].controls.arrayParameters;\n\n      this.clearArray(arrayParameter.inputParameterForms[0]);\n      for (let i = 0; i < result.length; i++) {\n        let parameter = this.addParameter(arrayParameter.inputParameterForms[0],\n          this.isJoin ? eParameterDirection.Join : eParameterDirection.Input);\n\n          parameter.controls.value.setValue(result[i]);\n\n        // // if the first parameter is a label, then map the matching column to the second input parameter\n        // if (arrayParameter.inputParameterForms[0].value.runTime.functionParameter.isLabel) {\n        //   parameter.controls.datalinkColumn.setValue(this.inputColumns[i]);\n        // }\n      }\n\n      // add any other parameters with default values.\n      for (let i = 1; i < arrayParameter.inputParameterForms.length; i++) {\n        this.clearArray(arrayParameter.inputParameterForms[i]);\n        for (let j = 0; j < inputArrayForm.length; j++) {\n          let parameter = this.addParameter(arrayParameter.inputParameterForms[i],\n            this.isJoin ? eParameterDirection.Join : eParameterDirection.Input);\n            parameter.controls.value.setValue(arrayParameter.inputParameterForms[i].value.runTime.functionParameter.defaultValue);\n        }\n      }\n\n      // add any output columns of the same length.\n      if (arrayParameter.outputParameterForms.length > 0) {\n        for (let i = 0; i < arrayParameter.outputParameterForms.length; i++) {\n          this.clearArray(arrayParameter.outputParameterForms[i]);\n          for (let j = 0; j < inputArrayForm.length; j++) {\n          }\n        }\n      }\n\n      arrayParameter.resetItems();\n  }\n\n  autoMap() {\n    this.outputParameterControls.forEach(param => {\n      let newColumn = new DexihDatalinkColumn();\n      newColumn.key = this.hubService.getHubCache().getNextSequence();\n      newColumn.position = 1000 - newColumn.key;\n\n      let paramValue = <DexihFunctionParameter> param.value;\n\n      newColumn.dataType = paramValue.dataType;\n      newColumn.allowDbNull = true;\n      newColumn.name = paramValue['runTime'].functionParameter.name;\n      newColumn.logicalName = paramValue['runTime'].functionParameter.name;\n      newColumn.rank = paramValue.rank;\n\n      param.controls.datalinkColumn.setValue(newColumn);\n      this.newDatalinkTransformItemForm.markAsDirty();\n    })\n  }\n\n  cancel() {\n    this.authService.navigateUp();\n  }\n\n  apply() {\n    this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, this.newDatalinkTransformItemForm);\n    this.newDatalinkTransformItemForm.markAsPristine();\n  }\n\n  applyExit() {\n    this.apply();\n    this.authService.navigateUp();\n  }\n\n}\n\n","export { TargetColumnComponent } from './target-column.component';\nexport { TargetColumnsComponent } from './target-columns.component';\n","import { Component, Input, Output, OnInit, OnChanges, EventEmitter, OnDestroy } from '@angular/core';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { HubCache, eMappingStatus, MappingStatusInfo, lineageMappingStatuses } from '../../../hub.models';\nimport { eObjectUse, ColumnUsageNode, eDatalinkObjectType } from '../../../hub.lineage.models';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { LogFactory, eLogLevel } from '../../../../../logging';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { DexihTableColumn, DexihTable, DexihDatalinkColumn, eTypeCode } from '../../../../shared/shared.models';\n\n\n@Component({\n\n    selector: 'target-column',\n    templateUrl: './target-column.component.html'\n})\nexport class TargetColumnComponent implements OnInit, OnDestroy, OnChanges {\n    @Input() public column: DexihTableColumn = null;\n    @Input() public datalinkTransformForm: FormGroup;\n    @Input() public inputTables: Array<DexihTable> = null;\n    @Output() public inputOutputDrop: EventEmitter<{inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn}>\n            = new EventEmitter<{inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn}>();\n\n    private _subscription: Subscription;\n\n    private hubCache: HubCache;\n    private datalinkForm: FormGroup;\n\n    eMappingStatus = eMappingStatus;\n\n    eTypeCode = eTypeCode;\n\n    public mappingStatusInfoLineage: MappingStatusInfo;\n    public mappingStatusInfoImpact: MappingStatusInfo;\n\n    public mappingStatusLineage: eMappingStatus;\n\n    childColumns: DexihTableColumn[];\n\n    public logger = new LogFactory('output-column.component');\n    public logCount = 0;\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n              this.hubCache = result[0];\n              this.datalinkForm = result[1];\n\n              this.logger.LogC(() => `Subscription count: ${this.logCount++}`, eLogLevel.Trace);\n\n\n            this.childColumns = this.column.childColumns;\n\n              this.refreshStatus();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Output Column');\n        }\n    }\n\n    ngOnChanges() {\n        this.refreshStatus();\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    refreshStatus() {\n        if (this.datalinkForm) {\n            let columnUsage: ColumnUsageNode = new ColumnUsageNode(\n            eDatalinkObjectType.TargetTable, eObjectUse.Target,\n            this.datalinkForm.value, null, this.column, null, null, eMappingStatus.NotMapped, this.hubCache);\n            this.mappingStatusLineage = columnUsage.createDatalinkLineage(true);\n            this.mappingStatusInfoLineage = lineageMappingStatuses.find(c => c.key === this.mappingStatusLineage);\n        }\n    }\n\n\n  editColumn() {\n      if (this.column.key && (this.mappingStatusLineage === eMappingStatus.Mapped\n        || this.mappingStatusLineage === eMappingStatus.MappedToNothing)) {\n        this.router.navigate(['column', this.column.key], { relativeTo: this.route.parent });\n      } else {\n          this.authService.informationDialog('Can not edit column',\n          // tslint:disable-next-line:max-line-length\n          'This column is not created by the current transform (i.e. a pass-through or target column).  To edit a column first create a mapping.')\n      }\n    }\n}\n","<div class=\"list-group-item p-0 rounded-0\" *ngIf=\"mappingStatusInfoLineage.key != eMappingStatus.Mapped\" [title]=\"column.logicalName + ' ' + eTypeCode[column.dataType]\" (click)=\"editColumn()\">\n    <div class=\"d-flex flex-row\">\n\n        <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoLineage.statusClass\" [title]=\"mappingStatusInfoLineage.name\"></i>\n        <span class=\"flex-fill input-group-text ellipsis-overflow rounded-0 border-0\">\n            {{column.logicalName}}\n        </span>\n    </div>\n</div>\n<div class=\"list-group-item p-0 rounded-0\" *ngIf=\"mappingStatusInfoLineage.key == eMappingStatus.Mapped\" [title]=\"column.logicalName + ' ' + eTypeCode[column.dataType]\"\n    (click)=\"editColumn()\">\n    <div class=\"d-flex flex-row\">\n\n        <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoLineage.statusClass\" [title]=\"mappingStatusInfoLineage.name\"></i>\n        <span class=\"flex-fill input-group-text ellipsis-overflow rounded-0 border-0\">\n            {{column.logicalName}}\n        </span>\n    </div>\n</div>\n<!-- <div *ngIf=\"childColumns?.length > 0\" class=\"p-2\">\n    <output-column *ngFor=\"let childColumn of childColumns\" [column]=\"childColumn\" [datalinkTransformForm]=\"datalinkTransformForm\"></output-column>\n</div> -->","import { Component, Input, Output, OnInit, OnChanges, OnDestroy, EventEmitter } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { CdkDragDrop } from '@angular/cdk/drag-drop';\nimport { DexihTable, DexihDatalinkColumn } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'target-columns',\n    templateUrl: './target-columns.component.html'\n})\nexport class TargetColumnsComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() public datalinkTransformForm: FormGroup;\n    @Input() public targets: DexihTable[];\n    @Input() public allowMappingOutputs = true;\n\n    @Output() public inputOutputDrop: EventEmitter<{ inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn }>\n        = new EventEmitter<{ inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn }>();\n\n    private _outputColumnsSubscribe: Subscription;\n\n    constructor(\n    ) {\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnChanges() {\n    }\n\n    ngOnDestroy() {\n    }\n\n    newInputOutputDrop(inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn) {\n        this.inputOutputDrop.emit({\n            inputColumn: inputColumn,\n            outputColumn: outputColumn\n        });\n    }\n}\n","<div *ngIf=\"targets\" cdkDropList #cdkDropList=\"cdkDropList\">\n    <dexih-widget-section *ngFor=\"let target of targets\" [title]=\"'Target (' + target.table.name + ')'\" [padding]=\"false\" [showExpandButton]=\"true\">\n        <div *ngFor=\"let column of target.table.dexihTableColumns | fieldSort : 'position' | isValidFilter; let i = index\" dropZone (dropData)=\"newInputOutputDrop($event, column)\" [zone]=\"allowMappingOutputs ? 'input-column' : ''\" dropAllowedClass=\"drop-zone-green\" >\n            <target-column [datalinkTransformForm]='datalinkTransformForm' [column]='column'></target-column>\n        </div>\n    </dexih-widget-section>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubFormsService } from '../../../hub.forms.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { eDeltaType } from '../../../../shared/shared.models';\n\n@Component({\n    selector: 'target-table-column',\n    templateUrl: './target-table-column.component.html'\n})\n\nexport class TargetTableColumnComponent implements OnInit, OnDestroy {\n    private _currentFormSubscription: Subscription;\n\n    public targetKey: number;\n    public columnKey: number;\n    public deltaType: eDeltaType;\n    public tableForm: FormGroup;\n\n    constructor(\n        private authService: AuthService,\n        private formsService: HubFormsService,\n        private route: ActivatedRoute,\n    ) { }\n\n    ngOnInit() {\n        this._currentFormSubscription = this.route.params.subscribe(params => {\n            this.targetKey = + params['targetKey'];\n            this.columnKey = + params['columnKey'];\n            this.deltaType = params['deltaType'];\n\n            this.formsService.getCurrentFormObservable().subscribe(datalinkForm => {\n                if (datalinkForm) {\n                    let targets = <FormArray> datalinkForm.controls.dexihDatalinkTargets;\n\n                    let targetForm = <FormGroup> targets.controls.find(c => c.value.key === this.targetKey);\n                    this.tableForm = <FormGroup>targetForm.controls.table;\n                }\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._currentFormSubscription) { this._currentFormSubscription.unsubscribe(); }\n    }\n\n    columnUpdated() {\n        this.authService.navigateUp();\n    }\n}\n","<column-edit [columnKey]=\"columnKey\" [tableForm]=\"tableForm\" [deltaType]='deltaType' (isUpdated)=\"columnUpdated()\"></column-edit>","<div *ngIf=\"!showColumn\">\n\n<dexih-widget-section title=\"Edit Target Table\" [showExpandButton]=\"true\">\n    <ng-template #header>\n        <dexih-button-preview class=\"mr-1\" (click)=\"previewData()\"></dexih-button-preview>\n        <dexih-button class=\"mr-1\" (click)=\"importTable()\" buttonClass=\"btn-primary\" iconClass=\"fa fa-refresh\" title=\"Re-import table from connection.\">\n            Re-Import\n        </dexih-button>\n        <dexih-button (click)=\"createTable()\" class=\"mr-1\" buttonClass=\"btn-primary\" iconClass=\"fa fa-bullseye\" title=\"Drop & re-create the table on the connection.  Warning: This remove all data from the table!\">\n            Drop & Create\n        </dexih-button>\n\n        <dexih-button-apply class=\"mr-1\" (click)=\"apply()\" [disabled]=\"!this.targetTableForm?.dirty\"></dexih-button-apply>\n        <cancel-button [formsService]=\"tableFormService\"></cancel-button>\n    </ng-template>\n\n    <form *ngIf=\"targetTableForm\"  [formGroup]=\"targetTableForm\">\n        <fieldset>\n            <section>\n                <form-checkbox label=\"Create a new table\" [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"newTable\" (ngModelChange)=\"toggleNewTable($event)\"></form-checkbox>\n            </section>\n            <section *ngIf=\"!newTable\">\n                <form-select label=\"Target Table\" formControlName=\"tableKey\" [items]=\"connectionTables\" parentName=\"name\" childItems=\"dexihTables\"\n                    itemKey=\"key\" itemName=\"logicalName\" note='Select the target table'>\n                </form-select>\n            </section>\n            <section *ngIf=\"nodes?.length > 0\">\n                <form-select label=\"Node level\" formControlName=\"nodeDatalinkColumn\" [items]=\"nodes\" [enableKeySelect]=\"false\" itemKey=\"key\" itemName=\"name\" node='Specify the node where the transform should be applied to.' [allowNullSelect]=\"true\" selectNullMessage='Use top level'>\n                </form-select>\n            </section>\n        </fieldset>\n    </form>\n</dexih-widget-section>\n\n<dexih-table-edit-properties *ngIf=\"tableFormService.currentForm.value\" [formsService]=\"tableFormService\" [isExpanded]=\"newTable\"></dexih-table-edit-properties>\n\n<ng-template [ngIf]=\"targetTableForm?.controls.table.value\">\n        <dexih-widget-section title=\"Columns\" [showExpandButton]=\"true\" [padding]=\"false\">\n        <dexih-table [enableMultiSelect]=\"true\"\n            [enableManualSort]=\"true\" [enableSort]=\"false\" [enableFilter]=\"false\" (onSortChanged)=\"columnSortChange($event)\" [columns]=\"columns\"\n            [dataObservable]=\"tableData\" (rowClick)=\"editColumn($event)\" [enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\">\n    \n            <ng-template #actions let-items=\"items\">\n                <dexih-button-splitdropdown text=\"Add Column\" title=\"Create a new column\" iconClass=\"fa fa-plus-square\" buttonClass=\"btn-primary\"\n                    (buttonClick)=\"newColumn(null)\">\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.AutoIncrement)\">Add Auto Incrementing Key Column</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.ValidFromDate)\">Add Valid from Date</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.ValidToDate)\">Add Valid to Date</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.IsCurrentField)\">Add Is Current Column</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.CreateAuditKey)\">Add Create Audit Key</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.UpdateAuditKey)\">Add Update Audit Key</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.CreateDate)\">Add Create Date</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.UpdateDate)\">Add Update Date</a>\n                    </li>\n                </dexih-button-splitdropdown>\n\n                <column-edit-bulk *ngIf=\"showBulkEdit && items.length > 0\" [columns]=\"items\" [columnsFormArray]=\"targetTableForm.controls.table.controls.dexihTableColumns\" (updated)=\"updateData()\" ></column-edit-bulk>\n                <dexih-button iconClass=\"fa fa-retweet\" class=\"ml-1\" (click)=\"resetColumns()\">Reset All Columns</dexih-button>\n                <dexih-button-preview class=\"ml-1\" (click)=\"previewData()\"></dexih-button-preview>\n                <dexih-button class=\"ml-1\" (click)=\"importTable()\" buttonClass=\"btn-primary\" iconClass=\"fa fa-refresh\" title=\"Re-import table from connection.\">\n                    Re-Import\n                </dexih-button>\n                <dexih-button (click)=\"createTable()\" class=\"ml-1\" buttonClass=\"btn-primary\" iconClass=\"fa fa-bullseye\" title=\"Drop & re-create the table on the connection.  Warning: This remove all data from the table!\">\n                    Drop & Create\n                </dexih-button>\n            </ng-template>\n    \n            <ng-template #selectedItemAction select=\"selectedItemAction\" let-column=\"item\">\n                <dexih-button-edit (click)=\"editColumn(column)\" class=\"ml-1\"></dexih-button-edit>\n            </ng-template>\n    \n            <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n                <dexih-button-delete (click)=\"deleteColumns(items)\" class=\"ml-1\"></dexih-button-delete>\n                <dexih-button iconClass=\"fa fa-th-list\" class=\"ml-1\" (click)=\"showBulkEdit=!showBulkEdit\">{{showBulkEdit ? 'Hide Bulk Edit' : 'Show Bulk Edit'}} </dexih-button>\n            </ng-template>\n    \n    \n        </dexih-table>\n        </dexih-widget-section>\n\n        <dexih-widget-section title=\"Unused Columns\" [showExpandButton]=\"true\" [padding]=\"false\">\n        <dexih-table [enableMultiSelect]=\"true\"\n            sortColumn=\"position\" [enableFilter]=\"false\" [columns]=\"columns\" [dataObservable]=\"missingColumnsData\"\n            [enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\">\n            <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n                <dexih-button (click)=\"addMissing(items)\" buttonClass=\"btn-primary\" iconClass=\"fa fa-plus-square\" title=\"Add selected outputs to the target table\">Add To Table</dexih-button>\n            </ng-template>\n    \n        </dexih-table>\n        </dexih-widget-section>\n    </ng-template>\n</div>\n\n<div *ngIf=\"showColumn\">\n    <column-edit [columnKey]=\"columnKey\" [tableForm]=\"this.targetTableForm.controls.table\" [deltaType]='deltaType' (isUpdated)=\"columnUpdated()\"></column-edit>\n</div>\n","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { InputOutputColumns, eObjectUse, ColumnUsageNode, eDatalinkObjectType } from '../../../hub.lineage.models';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Observable, Subscription, BehaviorSubject , combineLatest} from 'rxjs';\nimport { FormGroup, FormArray, FormBuilder } from '@angular/forms';\nimport { HubFormsService } from '../../../hub.forms.service';\nimport { LogFactory, eLogLevel } from '../../../../../logging';\nimport { HubCache, eMappingStatus, updateStrategies, loadStrategies, ConnectionTables, lineageMappingStatuses, deltaTypes } from '../../../hub.models';\nimport { eDeltaType, eUpdateStrategy, eTransformWriterMethod, DexihConnection,\n    DexihDatalinkColumn, DexihDatalinkTarget, DexihTable, DexihTableColumn, DexihDatalinkTable, eTypeCode, eSecurityFlag } from '../../../../shared/shared.models';\nimport { CancelToken } from '../../../../+auth/auth.models';\n\n@Component({\n\n    selector: 'dexih-datalink-edit-target-table',\n    templateUrl: './datalink-edit-target-table.component.html'\n})\nexport class DatalinkEditTargetTableComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n    private hubCache: HubCache;\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    private _subscription: Subscription;\n    private _loadStrategySubscription: Subscription;\n    private _tableFormSubscription: Subscription;\n    private _saveSubscription: Subscription;\n\n    private cancelToken: CancelToken = new CancelToken();\n\n    public eMappingStatus = eMappingStatus;\n    public eDeltaType = eDeltaType;\n\n    public tableFormService: HubFormsService;\n\n    public eUpdateStrategy = eUpdateStrategy;\n    public updateStrategies = updateStrategies;\n\n    public eTransformWriterMethod = eTransformWriterMethod;\n    public loadStrategies = loadStrategies;\n\n    public managedConnections: DexihConnection[];\n    public connectionTables: ConnectionTables[];\n\n    public showTableProperties = false;\n    public showColumn = false;\n\n    private ignoreUpdateTable = false;\n\n    public nodes = [];\n\n    public newTable = false;\n\n    public inputColumns: DexihDatalinkColumn[];\n\n    public targetKey: number;\n    public targetTableForm: FormGroup;\n\n    public columnKey: number;\n    public deltaType: eDeltaType;\n\n    public showBulkEdit = false;\n\n    private canExit = false;\n\n    public logger = new LogFactory('datalink-edit-target-table');\n\n    columns = [\n        { name: 'position', title: '#', format: '' },\n        { name: 'columnStatus', title: 'Lineage', format: 'Html' },\n        { name: 'name', title: 'Name', format: '' },\n        { name: 'logicalName', title: 'Logical', format: '' },\n        { name: 'dataType', title: 'Data Type', format: '' },\n        { name: 'deltaType', title: 'Delta Type', format: '' },\n        { name: 'allowDbNull', title: 'Null?', format: 'Boolean' },\n        { name: 'defaultValue', title: 'Default Value', format: '' },\n        { name: 'securityFlag', title: 'Security Flag', format: 'Enum', enum: eSecurityFlag },\n        { name: 'columnValidation', title: 'Validation', format: '', class: 'columnValidationClass', tooltip: 'columnValidationTooltip' }\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    private _missingColumnsData = new BehaviorSubject<Array<any>>(null);\n    missingColumnsData: Observable<Array<any>> = this._missingColumnsData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private fb: FormBuilder) {\n\n        this.tableFormService = new HubFormsService(fb, hubService, authService);\n    }\n\n    ngOnInit() {\n        this.logger.LogC(() => `ngOnInit`, eLogLevel.Trace);\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n                this.datalinkForm = result[3];\n\n                this.action = data['action'];\n                this.pageTitle = data['pageTitle'];\n\n                const ioColumns = new InputOutputColumns();\n                this.inputColumns = ioColumns.getDatalinkOutputColumns(this.datalinkForm.value);\n\n                if (this.action === 'edit') {\n                    this.targetKey = +params['targetKey'];\n                    let targets = <FormArray>this.datalinkForm.controls.dexihDatalinkTargets;\n\n                    // create a copy of the target form.\n                    let originalTargetTableForm = <FormGroup> targets.controls.find(c => c.value.key === this.targetKey);\n\n                    if (originalTargetTableForm && originalTargetTableForm.controls.key.value <= 0) {\n                        this.newTable = true;\n                    }\n\n                    // if the table is not found, then navigate back to the parent.\n                    if (originalTargetTableForm === undefined) {\n                        this.canExit = true;\n                        this.authService.navigateUp();\n                        return;\n                    }\n\n                    this.targetTableForm = this.editDatalinkService.hubFormsService\n                        .datalinkTargetFormGroup(originalTargetTableForm.value, originalTargetTableForm.controls.table.value);\n\n                } else if (this.action === 'new') {\n                    let target = new DexihDatalinkTarget();\n                    target.key = this.hubCache.getNextSequence();\n                    this.targetTableForm = this.editDatalinkService.hubFormsService.datalinkTargetFormGroup(target);\n\n                } else {\n                    this.hubService.addHubErrorMessage('Invalid action ' + this.action);\n                }\n\n                if (this.hubCache.isLoaded() && this.datalinkForm) {\n                    this.connectionTables = this.hubCache.getConnectionTables();\n                    this.managedConnections = this.hubCache.getManagedConnections();\n\n                    this.updateData();\n                    this.resetSubscription();\n\n\n                    this.logger.LogC(() => `ngOnInit - completed`, eLogLevel.Trace);\n                }\n\n                if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n                this._saveSubscription = this.editDatalinkService.savingDatalink.subscribe(value => {\n                    if(value) {\n                        this.apply();\n                    }\n                });\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Edit Target Table');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._loadStrategySubscription) { this._loadStrategySubscription.unsubscribe(); }\n        if (this._tableFormSubscription) { this._tableFormSubscription.unsubscribe(); }\n        if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n    }\n\n    canDeactivate(): Promise<boolean> {\n        return new Promise<boolean>(resolve => {\n          if (!this.canExit && this.targetTableForm?.dirty) {\n            this.authService.confirmDialog('Target Table Changed',\n            'The table has changed.  Would you like to discard the changes and return to the previous screen?  Otherwise, use the apply button to save the changes.'\n            ).then(confirm => {\n              resolve(confirm);\n            }).catch(reason => {\n              resolve(false);\n            });\n          } else {\n            resolve(true);\n          }\n        });\n      }\n\n    resetSubscription() {\n        if (this._tableFormSubscription) { this._tableFormSubscription.unsubscribe(); }\n        this._tableFormSubscription = this.targetTableForm.controls.tableKey.valueChanges.subscribe(() => {\n            this.updateData();\n        });\n    }\n\n    previewData() {\n        this.router.navigate(['preview-table-data', this.targetTableForm.controls.tableKey.value], { relativeTo: this.route });\n    }\n\n    columnStatus(table: DexihTable, column: DexihTableColumn): string {\n        let columnUsage: ColumnUsageNode = new ColumnUsageNode(\n            eDatalinkObjectType.TargetTable, eObjectUse.Target,\n            this.datalinkForm.value, null, column, null, null, eMappingStatus.NotMapped, this.hubCache);\n        const lineage = columnUsage.createDatalinkLineage(true);\n        const mappingStatus = lineageMappingStatuses.find(c => c.key === lineage);\n        if (mappingStatus) {\n            return `<i class=\"${mappingStatus.statusClass}\"></i>&nbsp;${mappingStatus.name}`\n        }\n    }\n\n    datalinkColumnStatus(table: DexihDatalinkTable, column: DexihDatalinkColumn): string {\n        let columnUsage: ColumnUsageNode = new ColumnUsageNode(\n            eDatalinkObjectType.TargetTable, eObjectUse.Target,\n            this.datalinkForm.value, column, null, null, null, eMappingStatus.NotMapped, this.hubCache);\n        const lineage = columnUsage.createDatalinkLineage(true);\n        const mappingStatus = lineageMappingStatuses.find(c => c.key === lineage);\n        if (mappingStatus) {\n            return `<i class=\"${mappingStatus.statusClass}\"></i>&nbsp;${mappingStatus.name}`\n        }\n    }\n\n    private addNodeColumns(columns: DexihDatalinkColumn[], path: string) {\n        if (!path) {\n            this.nodes = [];\n        }\n        if (columns) {\n            columns.filter(c => c.dataType === eTypeCode.Node && c.isValid).forEach(col => {\n                let name = path ? (path + '.' + col.logicalName) : col.logicalName;\n                this.nodes.push({key: col.key, name: name});\n\n                if (col.childColumns && col.childColumns.length > 0) {\n                    this.addNodeColumns(col.childColumns, name);\n                }\n            });\n        }\n    }\n\n    updateData() {\n        if (this.ignoreUpdateTable) {\n            return;\n        }\n\n        this.logger.LogC(() => `updateData started`, eLogLevel.Trace);\n        this.showBulkEdit = false;\n\n        let validation = this.editDatalinkService.getValidationTransform()\n\n        this.tableFormService.startForm(<FormGroup>this.targetTableForm.controls.table)\n        if (this.targetTableForm.controls.table) {\n\n            if (!this.targetTableForm.controls.table.value) {\n                this.logger.LogC(() => `updateData no targetTable specified.`, eLogLevel.Trace);\n                this._tableData.next(null);\n            } else {\n                const table = this.targetTableForm.controls.table.value;\n                this.logger.LogC(() => `updateData targetTable ${table.name}`, eLogLevel.Trace);\n\n                let columnData = [];\n                table.dexihTableColumns\n                    .filter(c => c.isValid)\n                    .sort((a, b) => a.position - b.position)\n                    .forEach(column => {\n                        let deltaType = deltaTypes.find(c => c.key === column.deltaType);\n                        let newColumn = {\n                            key: column.key,\n                            position: column.position,\n                            columnStatus: this.columnStatus(table, column),\n                            name: column.name,\n                            dataType: this.hubCache.dataTypeToString(column),\n                            deltaType: deltaType ? deltaType.name : 'Not specified',\n                            allowDbNull: column.allowDbNull,\n                            logicalName: column.logicalName,\n                            isIncrementalUpdate: column.isIncrementalUpdate,\n                            securityFlag: column.securityFlag,\n                            defaultValue: column.defaultValue,\n                            columnValidation: this.hubCache.getColumnValidation(column.columnValidationKey).name,\n                            columnValidationClass: column.columnValidationKey && !validation ? 'dexih-error-icon' : '',\n                            columnValidationTooltip: column.columnValidationKey && !validation ?\n                                'Enabled the validation transform for this to function' : '',\n                        };\n\n                        columnData.push(newColumn);\n                    });\n\n                this._tableData.next(columnData);\n\n                let validColumns = this.validColumns();\n\n                if (validColumns) {\n                    this.addNodeColumns(validColumns, '');\n\n                    let missingColumnData = [];\n                    let position = 0;\n                    validColumns.forEach(column => {\n                        if (table.dexihTableColumns.findIndex(c => c.name === column.name) < 0 &&\n                            missingColumnData.findIndex(c => c.name === column.name) < 0) {\n                            let deltaType = deltaTypes.find(c => c.key === column.deltaType);\n                            let newColumn = {\n                                key: column.key,\n                                position: column.position + position,\n                                columnStatus: this.datalinkColumnStatus(table, column),\n                                name: column.name,\n                                dataType: this.hubCache\n                                    .dataTypeToString(column),\n                                deltaType: deltaType ? deltaType.name : 'Not specified',\n                                allowDbNull: column.allowDbNull,\n                                logicalName: column.logicalName,\n                                isIncrementalUpdate: column.isIncrementalUpdate,\n                                securityFlag: column.securityFlag,\n                                defaultValue: column.defaultValue,\n                                columnValidation: '',\n                            };\n                            missingColumnData.push(newColumn);\n                        }\n                        position += 1000;\n                    });\n                    this._missingColumnsData.next(missingColumnData);\n                }\n\n                this.logger.LogC(() => `updateData columns loaded`, eLogLevel.Trace);\n            }\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    validColumns(): DexihDatalinkColumn[] {\n        let validColumns = this.inputColumns;\n\n        if (this.targetTableForm.controls.nodeDatalinkColumn && this.targetTableForm.controls.nodeDatalinkColumn.value) {\n            let io = new InputOutputColumns();\n            validColumns =  io.validColumns(this.targetTableForm.controls.nodeDatalinkColumn.value.key,\n                    this.inputColumns);\n        }\n\n        return validColumns;\n    }\n\n    addMissing(items: Array<DexihDatalinkColumn>) {\n        this.logger.LogC(() => `addMissing started`, eLogLevel.Trace);\n\n        const tableForm = <FormGroup>this.targetTableForm.controls.table;\n\n        // const ioColumns = new InputOutputColumns();\n        // const outputColumns = ioColumns.getDatalinkOutputColumns(this.datalinkForm.value);\n\n        const outputColumns = this.validColumns();\n\n        if (tableForm && outputColumns) {\n            const tableColumns = <FormArray>tableForm.controls.dexihTableColumns;\n            items.forEach(item => {\n                let missingColumn: DexihDatalinkColumn = null;\n                outputColumns.forEach(column => {\n                    if (!missingColumn && item.key === column.key) {\n                        missingColumn = column;\n                    }\n                });\n                if (missingColumn) {\n                    const newColumn = new DexihTableColumn();\n\n                    Object.assign(newColumn, missingColumn);\n\n                    this.resetColumnKeys(newColumn);\n                    let positions = tableColumns.controls.map<number>(c => <number>c.value.position);\n                    let position = positions.length === 0 ? 0 : Math.max(...positions) + 1; // add the the last position\n                    newColumn.position = position;\n                    const columnForm = this.editDatalinkService.hubFormsService.tableColumn(tableColumns.value, newColumn);\n                    tableColumns.push(columnForm);\n                    tableForm.markAsDirty();\n                    this.targetTableForm.markAsDirty();\n                }\n            });\n            this.updateData();\n        }\n        this.logger.LogC(() => `addMissing completed`, eLogLevel.Trace);\n    }\n\n    resetColumnKeys(column: DexihTableColumn) {\n        column.key = this.hubCache.getNextSequence();\n\n        if (column.childColumns) {\n            column.childColumns.forEach(childColumn => this.resetColumnKeys(childColumn));\n        }\n    }\n\n    toggleNewTable() {\n        this.logger.LogC(() => `newTable started`, eLogLevel.Trace);\n\n        if (this.newTable) {\n            const newTable = new DexihTable();\n            this.targetTableForm.setControl('table', this.editDatalinkService.hubFormsService.tableForm(newTable));\n            this.targetTableForm.controls.tableKey.setValue(0);\n            this.resetSubscription();\n            this.addMissing(this._missingColumnsData.value);\n\n            this.showTableProperties = true;\n        }\n\n        this.logger.LogC(() => `newTable completed`, eLogLevel.Trace);\n    }\n\n    editColumn(column: DexihTableColumn) {\n        this.columnKey = column.key;\n        this.showColumn = true;\n    }\n\n    newColumn(deltaType: eDeltaType) {\n        if (deltaType !== null) {\n            const tableForm = <FormGroup>this.targetTableForm.controls.table;\n            const tableColumns = <FormArray>tableForm.controls.dexihTableColumns;\n            let newColumn = this.hubCache.newColumn(tableForm.value, deltaType);\n            if (newColumn === null) {\n                this.authService.informationDialog('Invalid column.', `The column ${deltaType} could not be added as it already exists.`);\n                return;\n            }\n            const columnForm = this.editDatalinkService.hubFormsService.tableColumn(tableColumns.value, newColumn);\n            tableColumns.push(columnForm);\n            tableForm.markAsDirty();\n            this.targetTableForm.markAsDirty();\n        } else {\n            this.columnKey = null;\n            this.deltaType = deltaType;\n            this.showColumn = true;\n        }\n    }\n\n    async resetColumns() {\n        let confirm = await this.authService.confirmDialog('Warning reset columns',\n            'This will remove and reload all the columns in this table using the last mapped outputs.  Continue?')\n\n        if (confirm) {\n            const tableForm = <FormGroup>this.targetTableForm.controls.table;\n            const tableColumns = <FormArray>tableForm.controls.dexihTableColumns;\n\n            while (tableColumns.length !== 0) {\n                tableColumns.removeAt(0)\n              }\n            }\n\n            this.addMissing(this.validColumns());\n    }\n\n    deleteColumns(columns: Array<DexihTableColumn>) {\n        columns.forEach(column => {\n            const tableForm = <FormGroup>this.targetTableForm.controls.table;\n            const tableColumns = <FormArray>tableForm.controls.dexihTableColumns;\n            const index = tableColumns.controls.findIndex(c => c.value.key === column.key);\n            if (index >= 0) {\n                tableColumns.removeAt(index);\n                tableForm.markAsDirty();\n            }\n        });\n\n        this.updateData();\n    }\n\n    importTable() {\n        const table: DexihTable = this.targetTableForm.controls.table.value;\n        const connection = this.hubCache.getConnection(table.connectionKey)\n        this.hubService.importTables([table], false, this.cancelToken)\n            .then(tables => {\n                if (!tables || tables.length === 0) { return; }\n                const returnTable: any = tables[0];\n                returnTable.useLogical =\n                    this.hubCache.defaultTableLogicalName(returnTable.schema, returnTable.name) !== returnTable.logicalName;\n                let tableForm = this.editDatalinkService.hubFormsService.tableForm(returnTable);\n                this.targetTableForm.controls.tableKey.setValue(returnTable.key);\n                this.targetTableForm.setControl('table', tableForm);\n            }).catch(reason => {\n                // this.hubService.addHubErrorMessage(reason);\n            });\n    }\n\n    createTable() {\n        const table: DexihTable = this.targetTableForm.controls.table.value;\n        const connection = this.hubCache.getConnection(table.connectionKey)\n        this.hubService.createTables([table], this.cancelToken)\n            .then(tables => {\n                this.hubService.addHubSuccessMessage('The table was created successfully.');\n                // this.targetTableForm.controls.table.setValue(returnTable);\n            }).catch(reason => {\n                // this.hubService.addHubErrorMessage(reason);\n            });\n    }\n\n    columnSortChange(items: Array<DexihTableColumn>) {\n        this.logger.LogC(() => `columns sort change - started `, eLogLevel.Trace);\n        this.tableFormService.IgnoreFormChange = true;\n        this.editDatalinkService.hubFormsService.IgnoreFormChange = true;\n        this.ignoreUpdateTable = true;\n        const tableForm = <FormGroup>this.targetTableForm.controls.table;\n        let columnsArray = <FormArray>tableForm.controls.dexihTableColumns;\n        let position = 1;\n        items.forEach(c => {\n            let column = <FormGroup>columnsArray.controls.find(control => control.value.key === c.key);\n            column.controls.position.setValue(position++);\n        });\n\n        tableForm.markAsDirty();\n        this.editDatalinkService.hubFormsService.IgnoreFormChange = false;\n        this.tableFormService.IgnoreFormChange = false;\n        this.ignoreUpdateTable = false;\n        this.updateData();\n        this.logger.LogC(() => `columns sort change - finished `, eLogLevel.Trace);\n    }\n\n    columnUpdated() {\n        this.showColumn = false;\n        this.updateData();\n    }\n\n    saveTable() {\n        const table: DexihTable = this.targetTableForm.controls.table.value;\n        this.hubService.saveTables([table]).then(savedTables => {\n            let savedTable = savedTables[0];\n            this.targetTableForm.setControl('table', this.editDatalinkService.hubFormsService.tableForm(savedTable));\n            this.targetTableForm.controls.tableKey.setValue(savedTable.key);\n            this.resetSubscription();\n            this.editDatalinkService.hubFormsService.save(false);\n        });\n    }\n\n    apply() {\n        if (this.targetTableForm.dirty) {\n            let targets = <FormArray>this.datalinkForm.controls.dexihDatalinkTargets;\n            let index = targets.length;\n            if (this.action === 'edit') {\n                index = targets.controls.findIndex(c => c.value.key === this.targetKey);\n                targets.removeAt(index);\n            }\n            targets.insert(index, this.targetTableForm);\n            targets.markAsDirty();\n            this.canExit = true;\n            this.authService.navigateUp();\n        }\n    }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { HubFormsService } from '../../../hub.forms.service';\nimport { LogFactory, eLogLevel } from '../../../../../logging';\nimport { HubCache, eMappingStatus, updateStrategies, loadStrategies, ConnectionTables } from '../../../hub.models';\nimport { eDeltaType, eUpdateStrategy, eTransformWriterMethod,\n    DexihConnection, DexihDatalinkTarget } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'dexih-datalink-edit-target-form',\n    templateUrl: './datalink-edit-target.component.html'\n})\nexport class DatalinkEditTargetComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n    private hubCache: HubCache;\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    private _subscription: Subscription;\n    private _loadStrategySubscription: Subscription;\n\n    public eMappingStatus = eMappingStatus;\n    public eDeltaType = eDeltaType;\n\n    public tableFormService: HubFormsService;\n\n    public eUpdateStrategy = eUpdateStrategy;\n    public updateStrategies = updateStrategies;\n\n    public eTransformWriterMethod = eTransformWriterMethod;\n    public loadStrategies = loadStrategies;\n\n    public managedConnections: DexihConnection[];\n    public connectionTables: ConnectionTables[];\n\n    public showTableProperties = false;\n\n    public targets: DexihDatalinkTarget[] = [];\n\n    public logger = new LogFactory('datalink-edit-target-table');\n\n    public targetTableColumns = [\n        { name: 'table.name', title: 'Name', format: '' },\n        { name: 'table.logicalName', title: 'Logical', format: '' },\n        { name: 'nodeDatalinkColumn.logicalName', title: 'Node', format: ''}\n    ];\n\n    constructor(\n        private hubService: HubService,\n        authService: AuthService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router,\n        fb: FormBuilder) {\n\n        this.tableFormService = new HubFormsService(fb, hubService, authService);\n    }\n\n    ngOnInit() {\n        this.logger.LogC(() => `ngOnInit`, eLogLevel.Trace);\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n                this.hubService.getRemoteLibrariesObservable()\n            ).subscribe(result => {\n                let data = result[0];\n                this.hubCache = result[2];\n                this.datalinkForm = result[3];\n\n                this.action = data['action'];\n                this.pageTitle = data['pageTitle'];\n\n                if (this.hubCache.isLoaded() && this.datalinkForm) {\n                    this.connectionTables = this.hubCache.getConnectionTables();\n                    this.managedConnections = this.hubCache.getManagedConnections();\n                    this.logger.LogC(() => `ngOnInit - completed`, eLogLevel.Trace);\n                }\n\n                this.updateTargets();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Edit Target Table');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._loadStrategySubscription) { this._loadStrategySubscription.unsubscribe(); }\n    }\n\n    private updateTargets() {\n        this.targets = this.datalinkForm.controls.dexihDatalinkTargets.value.sort((a, b) => a.position - b.position);\n    }\n\n    editTable(target: DexihDatalinkTarget) {\n        this.router.navigate(['table-edit', target.key], { relativeTo: this.route });\n    }\n\n    addTable() {\n        this.router.navigate(['table-new'], { relativeTo: this.route });\n    }\n\n    deleteTables(targets: DexihDatalinkTarget[]) {\n        targets.forEach(target => {\n            this.editDatalinkService.deleteDatalinkTarget(this.datalinkForm, target.key);\n            this.updateTargets();\n        });\n    }\n\n    targetSortChange(targets: DexihDatalinkTarget[]) {\n        let position = 1;\n        targets.forEach(target => {\n            target.position = position++;\n        });\n        this.updateTargets();\n    }\n\n}\n","\n<dexih-widget-section title=\"Target Load Rules\" [showExpandButton]=\"true\">\n    <form *ngIf=\"datalinkForm\" [formGroup]=\"datalinkForm\">\n        <fieldset>\n            <form-checkbox label=\"Datalink is a query and does not populate target tables.\"\n                formControlName=\"isQuery\" [errors]=\"editDatalinkService.hubFormsService.formErrors.isQuery\">\n            </form-checkbox>\n\n            <span *ngIf=\"!datalinkForm?.controls.isQuery.value\">\n                <section>\n                    <form-select label=\"Load Strategy\" formControlName=\"loadStrategy\" [items]=\"loadStrategies\" itemKey=\"key\"\n                        itemName=\"description\" iconClass=\"fa fa-database\" note='Specify processing method for target table(s).'\n                        [errors]=\"editDatalinkService.hubFormsService.formErrors.loadStrategy\">\n                    </form-select>\n                </section>\n                    <section>\n                    <form-select label=\"Update Strategy\" formControlName=\"updateStrategy\" [items]=\"updateStrategies\"\n                        itemKey=\"key\" itemName=\"description\" iconClass=\"fa fa-database\" note='Specify how records should be inserted/updated in the target table.'\n                        [errors]=\"editDatalinkService.hubFormsService.formErrors.updateStrategy\">\n                    </form-select>\n                </section>\n\n                <section>\n                    <form-select label=\"Audit Connection\" formControlName=\"auditConnectionKey\" [items]=\"this.managedConnections\"\n                        itemKey=\"key\" itemName=\"name\" iconClass=\"fa fa-database\" [errors]=\"editDatalinkService.hubFormsService.formErrors.auditConnectionKey\"\n                        note='Specify the connection where audit data (such as job results) should be written to.'>\n                        <connection-edit-button [key]=\"datalinkForm.controls.auditConnectionKey.value\"></connection-edit-button>\n                    </form-select>\n                </section>\n\n                <div class=\"form-row\">\n                    <section class=\"form-group col-md-6\">\n                        <form-input label=\"Maximum Rows Per Commit\" type=\"number\" formControlName=\"rowsPerCommit\"\n                            placeholder=\"Enter maximum rows per commit\" iconClass=\"fa fa-list\" [errors]=\"editDatalinkService.hubFormsService.formErrors.rowsPerCommit\">\n                        </form-input>\n                    </section>\n                    <section class=\"form-group col-md-6\">\n                        <form-input label=\"Maximum Rows Per Progress Update\" type=\"number\" formControlName=\"rowsPerProgress\"\n                            placeholder=\"Enter maximum rows per progress update\" iconClass=\"fa fa-list\" [errors]=\"editDatalinkService.hubFormsService.formErrors.rowsPerProgress\">\n                        </form-input>\n                    </section>\n                </div>\n\n                <div class=\"form-row mb-2\">\n                    <form-checkbox label=\"Add a default row to the target table.  Edit the 'Default Value' of the target columns determine the value to populate.\"\n                        formControlName=\"addDefaultRow\" [errors]=\"editDatalinkService.hubFormsService.formErrors.addDefaultRow\">\n                    </form-checkbox>\n                </div>\n            </span>\n        </fieldset>\n    </form>\n</dexih-widget-section>\n\n\n<dexih-widget-section title=\"Tables\" [showExpandButton]=\"true\" [padding]=\"false\" *ngIf=\"!datalinkForm?.controls.isQuery.value\">\n    <dexih-table [enableMultiSelect]=\"true\" [enableManualSort]=\"true\" [enableSort]=\"false\"\n        [enableFilter]=\"false\" (onSortChanged)=\"targetSortChange($event)\" [columns]=\"targetTableColumns\" [data]=\"targets\"\n        (rowClick)=\"editTable($event)\">\n\n        <ng-template #actions let-items=\"items\">\n            <dexih-button-new class=\"mr-1\" (click)=\"addTable()\"></dexih-button-new>\n        </ng-template>\n\n        <ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n            <dexih-button-edit class=\"mr-1\" (click)=\"editTable(item)\"></dexih-button-edit>\n        </ng-template>\n\n        <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n            <dexih-button-delete class=\"mr-1\" (click)=\"deleteTables(items)\"></dexih-button-delete>\n        </ng-template>\n\n    </dexih-table>\n</dexih-widget-section>\n\n<router-outlet></router-outlet>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { deltaTypes, securityFlags, HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { AuthService} from '../../../../+auth/auth.service';\nimport { Observable, Subscription, BehaviorSubject, combineLatest} from 'rxjs';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { TypeCodes } from '../../../hub.remote.models';\nimport { DexihTableColumn, eConnectionPurpose } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'transform-table-edit-form',\n    templateUrl: './transform-table-edit.component.html',\n})\nexport class TransformTableEditComponent implements OnInit, OnDestroy {\n\n    private _subscription: Subscription;\n\n    public canEdit = false;\n    public tableKey: number;\n\n    private hubCache: HubCache;\n    public action: string; // new or edit\n    public pageTitle: string;\n\n    public mainForm: FormGroup;\n\n    typeCodes = TypeCodes;\n    deltaTypes = deltaTypes;\n    securityFlags = securityFlags;\n\n    inputColumns: Array<DexihTableColumn>;\n\n    eConnectionPurpose = eConnectionPurpose;\n\n    datalinkTransformKey: number;\n    datalinkTransformForm: FormGroup;\n    transformTableForm: FormGroup;\n\n    columns = [\n        { name: 'position', title: '#', format: ''},\n        { control: 'name', title: 'Column Name', format: '', tooltip: 'description'},\n        { name: 'dataType', title: 'Data Type', format: ''},\n        { name: 'allowDbNull', title: 'Null?', format: 'Boolean'},\n        { name: 'logicalName', title: 'Logical Name', format: ''},\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar'},\n    ];\n\n    private _columnData = new BehaviorSubject<Array<DexihTableColumn>>(null);\n    columnData: Observable<Array<DexihTableColumn>> = this._columnData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router,\n        ) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                this.pageTitle = result[0]['pageTitle'];\n                let params = result[1];\n                this.hubCache = result[2];\n\n                this.datalinkTransformKey = +params['datalinkTransformKey'];\n                this.datalinkTransformForm = this.editDatalinkService.getDatalinkTransform(this.datalinkTransformKey);\n\n                this.transformTableForm = <FormGroup>this.datalinkTransformForm.controls.transformTable\n                this.updateColumnData();\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Transform Table Edit');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    updateColumnData() {\n        let tableData = [];\n\n        let tableColumns = <FormArray>this.transformTableForm.controls.dexihTableColumns;\n        tableColumns.controls\n        .filter(c => c.value.isValid)\n        .sort((a, b) => a.value.position - b.value.position)\n        .forEach(column => {\n            const columnForm = <FormGroup>column;\n            tableData.push({\n                key: column.value.key,\n                position: column.value.position,\n                name: columnForm.controls.name,\n                description: column.value.description,\n                dataType: column.value.dataType,\n                allowDbNull: column.value.allowDbNull,\n                logicalName: column.value.logicalName,\n                updateDate: column.value.updateDate,\n            });\n        });\n        this._columnData.next(tableData);\n    }\n\n  deleteColumn(column: DexihTableColumn) {\n      this.deleteSelected([column]);\n  }\n\n  deleteSelected(columns: Array<DexihTableColumn>) {\n      const columnsArray = <FormArray>this.transformTableForm.controls.dexihTableColumns;\n\n    columns.forEach(column => {\n        let columnIndex = columnsArray.controls.findIndex(c => c.value.key === column.key);\n        if (columnIndex >= 0) {\n            columnsArray.removeAt(columnIndex);\n        }\n        this.updateColumnData();\n    });\n  }\n\n  newColumn() {\n    this.router.navigate(['column'], { relativeTo: this.route.parent });\n  }\n\n  editColumn(column: DexihTableColumn) {\n    this.router.navigate(['column', column.key], { relativeTo: this.route.parent });\n  }\n\n  columnSortChange(items: Array<any>) {\n        let columnsArray = <FormArray>this.transformTableForm.controls.dexihTableColumns;\n      let position = 1;\n      items.forEach(c => {\n        let column = <FormGroup>columnsArray.controls.find(control => control.value.key === c.key);\n        column.controls.position.setValue(position++);\n      });\n\n      this.updateColumnData();\n  }\n\n  close() {\n      this.authService.navigateUp();\n  }\n\n}\n","<div>\n\t<div class=\"widget-body-toolbar\">\n\t\t<div class=\"form-row\">\n\t\t\t<div class=\"col-sm-6\">\n\t\t\t\t<h5>Transform Output Columns</h5>\n\t\t\t</div>\n\t\t\t<div class=\"col-sm-6 text-right\">\n                <dexih-button-close (click)=\"close()\"></dexih-button-close>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n    <dexih-table \n        [enableMultiSelect]=\"true\"\n        [enableManualSort]=\"true\"\n        (onSortChanged)=\"columnSortChange($event)\"\n        sortColumn=\"position\"\n        [columns]=\"columns\"\n        [dataObservable]=\"columnData\"\n        >\n            <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n                <dexih-button-delete (click)=\"deleteSelected(items)\" title=\"Delete selected columns\"></dexih-button-delete>\n            </ng-template>\n\n            <ng-template #selectedItemAction select=\"selectedItemAction\" let-column=\"item\">\n                <dexih-button-edit (click)=\"editColumn(column)\" title=\"Edit the column\"></dexih-button-edit>\n            </ng-template>\n\n            <ng-template #actions select=\"actionsTemplate\" let-items=\"items\">\n                <dexih-button-new (click)=\"deleteSelected(items)\" title=\"Create a new column\"></dexih-button-new>\n            </ng-template>\n\n    </dexih-table>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { seriesGrains } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Observable, Subscription, combineLatest } from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { LogFactory, eLogLevel } from '../../../../../logging';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { eTransformType, eTransformItemType, DexihDatalinkColumn, DexihDatalinkTransform,\n    eTypeCode, DexihDatalinkTransformItem, eAggregate, eSortDirection, eJoinNotFoundStrategyItems,\n    eDuplicateStrategyItems, eSeriesGrain } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'dexih-datalink-edit-transform-form',\n    templateUrl: './datalink-edit-transform.component.html',\n})\nexport class DatalinkEditTransformComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n    public datalinkTransformForm: FormGroup;\n    public seriesForm: FormGroup;\n\n    private _subscription: Subscription;\n    private _datalinkFormSubscription: Subscription;\n    private _transformsArraySubscription: Subscription;\n\n    public action: string; // new or edit\n    public pageTitle = 'Transform';\n    public message: string;\n    public datalinkTransformKey: number;\n\n    public showName = false;\n    public showDescription = false;\n\n    eTransformType = eTransformType;\n    eTransformItemType = eTransformItemType;\n    eDuplicateStrategyItems = eDuplicateStrategyItems;\n    eJoinNotFoundStrategyItems = eJoinNotFoundStrategyItems;\n\n    public allowMappingOutputs: boolean;\n    inputColumns: Array<DexihDatalinkColumn>;\n\n    eSeriesGrain = eSeriesGrain;\n    seriesGrains = seriesGrains;\n\n    public allowNode = false;\n    public nodeName = '';\n    public nodeType: eTransformItemType;\n\n    public logger = new LogFactory('datalink-edit-transform');\n\n    public nodes = [];\n\n    public formErrors = {};\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router\n    ) { }\n\n    ngOnInit() {\n        this.logger.LogC(() => `OnInit`, eLogLevel.Trace);\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n            ).subscribe(result => {\n\n                this.action = result[0]['action'];\n                this.pageTitle = result[0]['pageTitle'];\n                this.datalinkTransformKey = + result[1]['datalinkTransformKey'];\n                this.datalinkForm = result[2];\n\n                if (this.datalinkForm) {\n\n                    let transformsArray = (<FormArray>this.datalinkForm.controls.dexihDatalinkTransforms);\n\n                    if (this._transformsArraySubscription) { this._transformsArraySubscription.unsubscribe(); }\n                    this._transformsArraySubscription = transformsArray.valueChanges.subscribe(transforms => {\n                        let tmpDatalinkTransformForm = transforms\n                            .find(c => c.datalinkTransformKey === this.datalinkTransformKey);\n\n                        if (!tmpDatalinkTransformForm) {\n                            this.router.navigate(['transforms'], { relativeTo: this.route.parent.parent.parent });\n                        }\n                    });\n\n                    this.datalinkTransformForm = <FormGroup>transformsArray.controls\n                        .find(c => c.value.key === this.datalinkTransformKey);\n\n                    // if the transform isn't found, this is probably due to a save/reload which changes the keys.\n                    // navigate up one level when this happens.\n                    if (!this.datalinkTransformForm) {\n                        this.authService.navigateUp();\n                        return;\n                    }\n\n                    let datalinkTransform = <DexihDatalinkTransform> this.datalinkTransformForm.value;\n\n                    let items = <FormArray>this.datalinkTransformForm.controls.dexihDatalinkTransformItems;\n\n                    if (datalinkTransform.transformType === eTransformType.Series) {\n                        this.seriesForm = <FormGroup>items.controls\n                            .filter(d => d.value.transformItemType === eTransformItemType.Series)[0];\n                    }\n\n                    if (datalinkTransform.transformType === eTransformType.Aggregate) {\n                        this.nodeType = eTransformItemType.GroupNode;\n                    }\n\n                    if (datalinkTransform.transformType === eTransformType.Lookup\n                        || datalinkTransform.transformType === eTransformType.Join) {\n                        this.nodeType = eTransformItemType.JoinNode;\n                    }\n\n                    if (this.nodeType) {\n                        let node = datalinkTransform.dexihDatalinkTransformItems\n                        .find(d => d.transformItemType === this.nodeType);\n\n                        if (node) {\n                            this.allowNode = true;\n                            this.nodeName = node.targetDatalinkColumn.name;\n                        } else {\n                            this.allowNode = false;\n                        }\n                    }\n\n                    this.inputColumns = datalinkTransform['runTime'].inputColumns;\n\n                    this.nodes = [];\n                    this.addNodeColumns(this.inputColumns, '');\n\n                    let transformType = datalinkTransform.transformType;\n                    this.allowMappingOutputs =\n                        // transformType === eTransformType.Group ||\n                        transformType === eTransformType.Series ||\n                        // transformType === eTransformType.Aggregate ||\n                        transformType === eTransformType.Rows ||\n                        transformType === eTransformType.Mapping ||\n                        transformType === eTransformType.Validation;\n\n                    if (this._datalinkFormSubscription) { this._datalinkFormSubscription.unsubscribe(); }\n                    this._datalinkFormSubscription = this.datalinkForm.valueChanges.subscribe(value => {\n                        this.formErrors = this.editDatalinkService.hubFormsService.getFormErrorMessages(this.datalinkForm, true);\n                    });\n\n                    if (!this.datalinkTransformForm) {\n                        this.router.navigate(['properties'], { relativeTo: this.route.parent.parent.parent });\n                    }\n\n                    this.logger.LogC(() => `datalink form is loaded`, eLogLevel.Trace);\n                }\n            });\n\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Edit Transform');\n        }\n    }\n\n    private addNodeColumns(columns: DexihDatalinkColumn[], path: string) {\n        if (columns) {\n            columns.filter(c => c.dataType === eTypeCode.Node && c.isValid).forEach(col => {\n                let name = path ? (path + '.' + col.logicalName) : col.logicalName;\n                this.nodes.push({key: col.key, name: name});\n\n                if (col.childColumns && col.childColumns.length > 0) {\n                    this.addNodeColumns(col.childColumns, name);\n                }\n            });\n        }\n    }\n\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._transformsArraySubscription) { this._transformsArraySubscription.unsubscribe(); }\n        if (this._datalinkFormSubscription) { this._datalinkFormSubscription.unsubscribe(); }\n    }\n\n    deleteTransform() {\n        this.logger.LogC(() => `deleteTransform`, eLogLevel.Trace);\n        this.editDatalinkService.deleteDatalinkTransform(this.datalinkTransformForm.value);\n        this.router.navigate(['properties'], { relativeTo: this.route.parent.parent });\n    }\n\n    previewData() {\n        this.router.navigate(['preview-transform-data'], { relativeTo: this.route.parent });\n    }\n\n    toggleNode(allowNode: boolean) {\n        let items = <FormArray>this.datalinkTransformForm.controls.dexihDatalinkTransformItems;\n        let nodeItem = <FormGroup> items.controls.find(d => d.value.transformItemType === this.nodeType);\n        if (allowNode) {\n            if (!this.nodeName) {\n                this.nodeName = eTransformItemType[this.nodeType];\n            }\n\n            if (nodeItem) {\n                this.authService.informationDialog('Can not add node',  'Only one node can be added per transform.');\n                return;\n            }\n\n            let item = new DexihDatalinkTransformItem();\n            let outputColumn: DexihDatalinkColumn = new DexihDatalinkColumn();\n            outputColumn.position = 0;\n            outputColumn.key = this.hubService.getHubCache().getNextSequence();\n            outputColumn.name = this.nodeName;\n            outputColumn.logicalName = this.nodeName;\n            outputColumn.dataType = eTypeCode.Node;\n\n            item.position = -1;\n            item.datalinkTransformKey = this.datalinkTransformForm.value.key;\n            item.targetDatalinkColumn = outputColumn;\n            item.isValid = true;\n            item.transformItemType = this.nodeType;\n\n            let itemForm = this.editDatalinkService.hubFormsService\n                .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n            this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n        } else {\n            this.editDatalinkService.deleteDatalinkTransformItem(this.datalinkTransformForm, nodeItem);\n        }\n    }\n\n    updateNode(name: string) {\n        let items = <FormArray>this.datalinkTransformForm.controls.dexihDatalinkTransformItems;\n        let nodeItem = <FormGroup> items.controls.find(d => d.value.transformItemType === this.nodeType);\n        if (nodeItem) {\n            let column = <DexihDatalinkColumn> nodeItem.controls.targetDatalinkColumn.value;\n            if (column) {\n                column.name = name;\n                column.logicalName = name;\n                nodeItem.controls.targetDatalinkColumn.setValue(column);\n            }\n        }\n    }\n\n    newDragDropMapping(itemType: eTransformItemType, $event) {\n        let item = new DexihDatalinkTransformItem();\n        let outputColumn: DexihDatalinkColumn = $event.outputColumn;\n        let inputColumn: DexihDatalinkColumn = $event.inputColumn;\n        let io = new InputOutputColumns();\n\n\n        switch (itemType) {\n            case eTransformItemType.ColumnPair:\n                if (!outputColumn) {\n                    outputColumn = io.copyDatalinkColumn(inputColumn, 0, 'mapping');\n                }\n\n                outputColumn.key = this.hubService.getHubCache().getNextSequence();\n                if (outputColumn.childColumns) {\n                    outputColumn.childColumns.forEach(col => {\n                        col.key = this.hubService.getHubCache().getNextSequence();\n                    });\n                }\n                outputColumn.datalinkTableKey = null;\n                break;\n            case eTransformItemType.Sort:\n                item.sortDirection = eSortDirection.Ascending;\n                break;\n            case eTransformItemType.AggregatePair:\n                if (!outputColumn) {\n                    outputColumn = io.copyDatalinkColumn(inputColumn, 0, 'mapping');\n                }\n\n                outputColumn.key = this.hubService.getHubCache().getNextSequence();\n                if (outputColumn.childColumns) {\n                    outputColumn.childColumns.forEach(col => {\n                        col.key = this.hubService.getHubCache().getNextSequence();\n                    });\n                }\n                outputColumn.datalinkTableKey = null;\n                // outputColumn.name = 'Sum ' + outputColumn.name;\n                item.aggregate = eAggregate.Sum;\n                break;\n        }\n\n        if (itemType) {\n\n            item.datalinkTransformKey = this.datalinkTransformForm.value.key;\n            item.sourceDatalinkColumn = inputColumn;\n            item.targetDatalinkColumn = outputColumn;\n            item.isValid = true;\n\n            item.transformItemType = itemType;\n            let itemForm = this.editDatalinkService.hubFormsService\n                .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n            this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n        }\n    }\n\n    newDragDropJoin($event) {\n        let transformType = this.datalinkTransformForm.value.transformType;\n\n        if (transformType === eTransformType.Join\n            || transformType === eTransformType.Lookup) {\n            let joinColumn: DexihDatalinkColumn = $event.joinColumn;\n            let inputColumn: DexihDatalinkColumn = $event.inputColumn;\n            let item = new DexihDatalinkTransformItem();\n            item.transformItemType = eTransformItemType.JoinPair;\n            item.datalinkTransformKey = this.datalinkTransformForm.value.key;\n            item.sourceDatalinkColumn = inputColumn;\n            item.joinDatalinkColumn = joinColumn;\n            item.isValid = true;\n            let itemForm = this.editDatalinkService.hubFormsService\n                .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n\n            this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n        }\n    }\n}\n","\n<dexih-widget-section title=\"Properties\" [showExpandButton]=\"true\" [isExpanded]=\"false\">\n<form *ngIf=\"datalinkTransformForm\"  [formGroup]=\"datalinkTransformForm\">\n        <fieldset>\n            <section>\n                <form-input label=\"Transform Name\" formControlName=\"name\" placeholder=\"Enter a name for the transform\" [autocapitalize]=\"true\" iconClass=\"fa fa-list\"\n                    [errors]=\"formErrors.name\">\n                </form-input>\n            </section>\n            <section>\n                <form-textarea  label=\"Description\" formControlName=\"description\" placeholder=\"Enter the description.\"\n                    [errors]=\"formErrors.description\">\n                </form-textarea>\n            </section>\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Aggregate || this.datalinkTransformForm.value.transformType == eTransformType.Series || this.datalinkTransformForm.value.transformType == eTransformType.Rows || this.datalinkTransformForm.value.transformType == eTransformType.Mapping\">\n                <section>\n                    <form-checkbox label=\"Allow unmapped input columns to pass through to the next transform.\" formControlName=\"passThroughColumns\">\n                    </form-checkbox>\n                </section>\n            </div>\n            \n            <section *ngIf=\"nodes?.length > 0\">\n                <form-select label=\"Node level\" formControlName=\"nodeDatalinkColumn\" [items]=\"nodes\" [enableKeySelect]=\"false\" itemKey=\"key\" itemName=\"name\" node='Specify the node where the transform should be applied to.' [allowNullSelect]=\"true\" selectNullMessage='Use top level'>\n                </form-select>\n            </section>\n\n            <div class=\"form-row\">\n                <section class=\"form-group col-md-6\">\n                    <form-input type=\"number\" formControlName=\"maxInputRows\" label=\"Maximum number of rows to input into the transform (0 = unlimited)\"></form-input>\n                </section>\n                <section class=\"form-group col-md-6\">\n                    <form-input type=\"number\" formControlName=\"maxOutputRows\" label=\"Maximum number of rows to output into the transform (0 = unlimited)\"></form-input>\n                </section>\n            </div>\n        </fieldset>\n    </form>\n</dexih-widget-section>\n\n<dexih-widget-section *ngIf=\"datalinkTransformForm && (this.datalinkTransformForm.value.transformType == eTransformType.Join || this.datalinkTransformForm.value.transformType == eTransformType.Lookup)\" title=\"Join Settings\" [showExpandButton]=\"true\">\n    <form [formGroup]=\"datalinkTransformForm\">\n        <fieldset>\n            <datalink-table [datalinkTableForm]=\"datalinkTransformForm.controls.joinDatalinkTable\"></datalink-table>\n\n            <div class=\"form-row\">\n                <section class=\"form-group col-md-6\">\n                    <form-select [label]=\"'Strategy when ' + eTransformType[this.datalinkTransformForm.value.transformType] + ' produces duplicate matches'\" formControlName=\"joinDuplicateStrategy\" [items]=\"eDuplicateStrategyItems\"\n                        itemKey=\"key\" itemName=\"name\">\n                    </form-select>\n                </section>\n\n                <section class=\"form-group col-md-6\">\n                    <form-select [label]=\"'Strategy when ' + eTransformType[this.datalinkTransformForm.value.transformType] + ' produces no match '\" formControlName=\"joinNotFoundStrategy\" [items]=\"eJoinNotFoundStrategyItems\"\n                        itemKey=\"key\" itemName=\"description\">\n                    </form-select>\n                </section>\n            </div>\n        </fieldset>\n    </form>\n</dexih-widget-section>\n\n<dexih-widget-section *ngIf=\"datalinkTransformForm && this.datalinkTransformForm.value.transformType == eTransformType.Concatenate\" title=\"Concatenate Settings\" [showExpandButton]=\"true\">\n    <form [formGroup]=\"datalinkTransformForm\">\n        <fieldset>\n            <datalink-table [datalinkTableForm]=\"datalinkTransformForm.controls.joinDatalinkTable\"></datalink-table>\n        </fieldset>\n    </form>\n</dexih-widget-section>\n\n<dexih-widget-section *ngIf=\"datalinkTransformForm && this.datalinkTransformForm.value.transformType == eTransformType.Series\" title=\"Series Settings\" [showExpandButton]=\"true\">\n    <form [formGroup]=\"seriesForm\">\n        <fieldset>\n            <div class=\"form-row\">\n                <section class=\"form-group col-md-6\">\n                    <form-select label=\"Series Grain\" formControlName=\"seriesGrain\" [items]=\"seriesGrains\" itemKey=\"key\" itemName=\"name\">\n                    </form-select>\n                </section>\n                <section class=\"form-group col-md-6\">\n                    <form-select label=\"Input Column\" formControlName=\"sourceDatalinkColumn\" [items]=\"inputColumns\" [(textValue)]=\"sourceValue\"\n                    [enableKeySelect]=\"false\" itemKey=\"key\" itemName=\"name\" [errors]=\"sourceErrors\">\n                    </form-select>\n                </section>\n            </div>\n\n            <form-checkbox label=\"Fill empty series values\" formControlName=\"seriesFill\"></form-checkbox>\n\n            <div class=\"form-row\" *ngIf=\"seriesForm.controls.seriesFill.value && seriesForm.controls.seriesGrain.value !== eSeriesGrain.Number\">\n                <section class=\"form-group col-md-6\">\n                    <form-input type=\"date\" formControlName=\"seriesStart\" label=\"Series Start Date (empty to use first value)\"></form-input>\n                </section>\n                <section class=\"form-group col-md-6\">\n                    <form-input type=\"date\" formControlName=\"seriesFinish\" label=\"Series Finish Date (empty to use last value)\"></form-input>\n                </section>\n            </div>\n\n            <div class=\"form-row\" *ngIf=\"seriesForm.controls.seriesFill.value && seriesForm.controls.seriesGrain.value === eSeriesGrain.Number\">\n                <section class=\"form-group col-md-6\">\n                    <form-input formControlName=\"seriesStart\" label=\"Series Start Number (empty to use first value)\"></form-input>\n                </section>\n                <section class=\"form-group col-md-6\">\n                    <form-input formControlName=\"seriesFinish\" label=\"Series Finish Number (empty to use last value)\"></form-input>\n                </section>\n            </div>\n        </fieldset>\n    </form>\n</dexih-widget-section>\n\n<dexih-widget-section *ngIf=\"datalinkTransformForm && this.nodeType\" title=\"Group Node\" [showExpandButton]=\"true\">\n    <form>\n        <fieldset>\n            <form-checkbox label=\"Group rows under a node\" [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"allowNode\" (ngModelChange)=\"toggleNode($event)\"></form-checkbox>\n            <section *ngIf=\"allowNode\" class=\"form-group col-md-6\">\n                <form-input [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"nodeName\" (ngModelChange)=\"updateNode($event)\" label=\"Name of the node\"></form-input>\n            </section>\n        </fieldset>\n    </form>\n</dexih-widget-section>\n\n<div class=\"list-group-item p-1\">\n\n<div *ngIf=\"datalinkTransformForm\" class=\"d-flex\" cdkDropListGroup>\n        <dexih-widget class=\"d-none d-lg-inline\" title=\"Inputs\" height=\"80vh\" style=\"width:300px\" [scrollable]=\"true\">\n            <input-columns [datalinkTransformForm]='datalinkTransformForm'></input-columns>\n\n            <div class=\"mt-1\"  *ngIf=\"datalinkTransformForm.controls.joinDatalinkTable.value\">\n                <join-columns [datalinkTransformForm]='datalinkTransformForm' (inputJoinDrop)=\"newDragDropJoin($event)\"></join-columns>\n            </div>\n        </dexih-widget>\n\n        <div class=\"w-100 mr-1 ml-1\">\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Join || this.datalinkTransformForm.value.transformType == eTransformType.Lookup\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowJoin]=\"true\" title=\"{{eTransformType[this.datalinkTransformForm.value.transformType]}} Table\"  >\n                </mapping>\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Mapping\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowStandard]=\"true\" [allowMapping]=\"true\" [allowOutput]=\"true\" title=\"Mapping Functions\" (onColumnDrop)=\"newDragDropMapping(eTransformItemType.ColumnPair, $event)\">\n                </mapping>\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Sort\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowSort]=\"true\" title=\"Sort Columns\" (onColumnDrop)=\"newDragDropMapping(eTransformItemType.Sort, $event)\">\n                </mapping>\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Group || this.datalinkTransformForm.value.transformType == eTransformType.Aggregate  || this.datalinkTransformForm.value.transformType == eTransformType.Series  || this.datalinkTransformForm.value.transformType == eTransformType.Rows\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" title=\"Group Columns\"  [allowGroup]=\"true\" [allowSeries]=\"this.datalinkTransformForm.value.transformType == eTransformType.Series\"\n                    (onColumnDrop)=\"newDragDropMapping(eTransformItemType.Column, $event)\">\n                </mapping>\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Group\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowStandard]=\"true\" [allowAggregate]=\"true\" [allowOutput]=\"true\" title=\"Aggregate Functions\" (onColumnDrop)=\"newDragDropMapping(eTransformItemType.AggregatePair, $event)\">\n                </mapping>\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Series\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowStandard]=\"true\" [allowAggregate]=\"true\" [allowSeries]=\"true\" [allowOutput]=\"true\" title=\"Series/Aggregate Functions\" (onColumnDrop)=\"newDragDropMapping(eTransformItemType.AggregatePair, $event)\">\n                </mapping>\n\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowMapping]=\"true\" [allowOutput]=\"true\" title=\"Mappings\" (onColumnDrop)=\"newDragDropMapping(eTransformItemType.ColumnPair, $event)\">\n                </mapping>\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Aggregate\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowStandard]=\"true\" [allowAggregate]=\"true\" [allowOutput]=\"true\" title=\"Aggregate Functions\" (onColumnDrop)=\"newDragDropMapping(eTransformItemType.AggregatePair, $event)\">\n                </mapping>\n\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowMapping]=\"true\" [allowOutput]=\"true\" title=\"Mappings\" (onColumnDrop)=\"newDragDropMapping(eTransformItemType.ColumnPair, $event)\">\n                </mapping>\n\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Filter\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowStandard]=\"true\" [allowCondition]=\"true\" [allowOutput]=\"false\" title=\"Filters\" >\n                </mapping>\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Rows\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowRow]=\"true\" [allowStandard]=\"true\" [allowJoinNode]=\"false\" [allowOutput]=\"true\" [allowCondition]=\"true\" title=\"Row Functions\">\n                </mapping>\n            </div>\n        </div>\n\n        <dexih-widget class=\"d-none d-lg-inline\" [title]=\"'Outputs' + (datalinkTransformForm.controls.nodeDatalinkColumn?.value ? '(@' + datalinkTransformForm.controls.nodeDatalinkColumn.value.name + ')' : '')\"  height=\"80vh\" style=\"width:300px\"  [scrollable]=\"true\">\n            <output-columns [datalinkTransformForm]='datalinkTransformForm' [allowMappingOutputs]=\"allowMappingOutputs\" (inputOutputDrop)=\"newDragDropMapping(eTransformItemType.ColumnPair, $event)\"></output-columns>\n            <target-columns [datalinkTransformForm]='datalinkTransformForm' [targets]=\"datalinkForm.controls.dexihDatalinkTargets.value\" [allowMappingOutputs]=\"allowMappingOutputs\" (inputOutputDrop)=\"newDragDropMapping(eTransformItemType.ColumnPair, $event)\"></target-columns>\n        </dexih-widget>\n    </div>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup, FormArray, AbstractControl } from '@angular/forms';\nimport { LogFactory, eLogLevel } from '../../../../../logging';\nimport { transformTypes } from '../../../hub.remote.models';\nimport { HubCache } from '../../../hub.models';\nimport { DexihDatalinkTransform, eTransformType } from '../../../../shared/shared.models';\n\n@Component({\n    selector: 'dexih-datalink-edit-transforms-form',\n    templateUrl: './datalink-edit-transforms.component.html',\n    styleUrls: ['./transforms.scss']\n})\nexport class DatalinkEditTransformsComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n\n    private _subscription: Subscription;\n    private _transformsChange: Subscription;\n\n    private hubCache: HubCache;\n    public action: string; // new or edit\n    public pageTitle = 'Transform';\n    public message: string;\n\n    public datalinkTransforms: {transform: AbstractControl, name: string, icon: string, invalid: boolean}[] = null;\n\n    public logger = new LogFactory('datalink-edit-transforms');\n\n    constructor(\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router\n    ) { }\n\n    ngOnInit() {\n        this.logger.LogC(() => `OnInit`, eLogLevel.Trace);\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n            ).subscribe(result => {\n                this.action = result[0]['action'];\n                this.pageTitle = result[0]['pageTitle'];\n                let params = result[1];\n                this.hubCache = result[2];\n                this.datalinkForm = result[3];\n\n                if (this.hubCache.isLoaded() && this.datalinkForm) {\n                    let datalinkTransformKey = + params['datalinkTransformKey'];\n\n                    this.logger.LogC(() => `loading transform with key ${datalinkTransformKey}`, eLogLevel.Trace);\n\n                    // this.datalinkForm.updateValueAndValidity({emitEvent: true, onlySelf: true});\n\n                    this.refreshTransforms();\n\n                    if (this._transformsChange) { this._transformsChange.unsubscribe(); }\n                    this._transformsChange = this.datalinkForm.controls.dexihDatalinkTransforms.valueChanges\n                        .subscribe(() => this.refreshTransforms());\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Edit Transform');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._transformsChange) { this._transformsChange.unsubscribe(); }\n    }\n\n    refreshTransforms() {\n        this.logger.LogC(() => `refreshing transforms list`, eLogLevel.Trace);\n\n        const transformsArray = <FormArray> this.datalinkForm.controls.dexihDatalinkTransforms;\n        const transforms =  transformsArray.controls\n            .filter(c => c.value.transformType !== eTransformType.Validation &&\n                c.value.transformType !== eTransformType.Profile)\n            .sort((a, b) => a.value.position - b.value.position);\n\n        const datalinkTransforms = transforms.map(transform => {\n            const type = transformTypes.find(c => c.key === transform.value.transformType);\n            let icon = '';\n            if (type) {\n                icon = type.icon\n            }\n            const name = this.hubCache.getTransformName(transform.value);\n            return {transform: transform, icon: icon, name: name, invalid: transform.invalid};\n        });\n\n        this.datalinkTransforms = datalinkTransforms;\n    }\n\n    deleteTransform(datalinkTransform: DexihDatalinkTransform) {\n        this.logger.LogC(() => `deleteTransform`, eLogLevel.Trace);\n        this.editDatalinkService.deleteDatalinkTransform(datalinkTransform).then(() => {\n            this.refreshTransforms();\n        });\n    }\n\n    previewData(datalinkTransform: DexihDatalinkTransform) {\n        this.router.navigate(['transform', datalinkTransform.key, 'preview-transform-data'], { relativeTo: this.route });\n    }\n}\n","<dexih-widget-section title='Transforms' [padding]=\"false\">\n    <div *ngIf=\"datalinkTransforms\" class=\"bg-light pt-1 pb-1 d-flex ≈\">\n        <ul class=\"transform-container\">\n            <li class=\"d-flex align-items-stretch p-0 m-3\" *ngIf=\"datalinkTransforms.length === 0\">\n                <a [routerLink]=\"['new', 1]\" class=\"btn btn-outline-success\" title=\"Insert a transform before this\">\n                    <div class=\"d-block\">\n                        Add Transform\n                    </div>\n                    <i class=\"fa fa-4x fa-plus\"></i>\n                </a>\n                \n            </li>\n\n            <div class=\"d-flex m-3 \" *ngFor=\"let datalinkTransform of datalinkTransforms; last as isLast\">\n                <li  class=\"d-flex align-items-stretch p-0\">\n                    <a [routerLink]=\"['new', datalinkTransform.transform.value.position-1]\" class=\"insert-before btn btn-sm btn-primary\"\n                        title=\"Insert a transform before this\"><i class=\"fa fa-plus\"></i></a>\n                \n                    <a [routerLink]=\"['new', datalinkTransform.transform.value.position+1]\" class=\"insert-after btn btn-sm btn-primary\"\n                        title=\"Insert a transform after this\"><i class=\"fa fa-plus\"></i></a>\n\n                        <a class=\"delete btn btn-sm btn-danger  mr-1\" href=\"javascript:void(0)\"\n                        (click)=\"deleteTransform(datalinkTransform.transform.value)\"\n                        title=\"Delete this transform\"><i class=\"fa fa-remove\"></i></a>\n\n\n                    <a [routerLink]=\"['transform', datalinkTransform.transform.value.key]\" routerLinkActive=\"btn-outline-success\" class=\"btn btn-outline-primary\" style=\"width:100%\"\n                        [title]=\"'Select the ' + datalinkTransform.transform.value.name + ' transform.'\">\n                        <div class=\"d-block\">\n                        {{datalinkTransform.name}}\n                        <div>\n                        <span class=\"fa-4x\" [ngClass]=\"datalinkTransform.icon\"></span>\n                        <dexih-invalid-form-icon [control]=\"datalinkTransform.transform\">\n                        </dexih-invalid-form-icon>\n                    </div>\n                    </div>\n                    </a>\n\n                </li>\n\n                \n                <div class=\"arrow bg-primary\">\n                    <a class=\"preview btn btn-sm btn-primary  mr-1\"\n                        [routerLink]=\"['transform', datalinkTransform.transform.value.key, 'preview-transform-data']\"\n                        title=\"Preview transform data\"><i class=\"fa fa-search\"></i></a>\n\n                    <div *ngIf=\"!isLast\" class=\"arrow-head\">\n\n                    </div>\n                </div>\n            </div>\n        </ul>\n    </div>\n</dexih-widget-section>\n<router-outlet></router-outlet>","export * from './unGroup-edit.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { LogFactory, eLogLevel } from '../../../../../logging';\nimport { TypeCodes } from '../../../hub.remote.models';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { eFunctionType, eParameterDirection, DexihDatalinkColumn, DexihDatalinkTransformItem, eTransformItemType, DexihFunctionParameter, FunctionParameter, eTypeCode } from '../../../../shared/shared.models';\n\n@Component({\n\n  selector: 'dexih-unGroup-edit',\n  templateUrl: './unGroup-edit.component.html'\n})\nexport class UnGroupEditComponent implements OnInit, OnDestroy {\n  public hubCache: HubCache;\n\n  eFunctionType = eFunctionType;\n  eParameterDirection = eParameterDirection;\n  typeCodes = TypeCodes;\n\n  public pageTitle: string;\n\n  private _subscription: Subscription;\n  private _nodeSubscription: Subscription;\n\n  transformFunctionType: eFunctionType;\n  datalinkTransformItemKey: number;\n  datalinkKey: number;\n  datalinkTransformKey: number;\n\n  datalinkForm: FormGroup;\n  datalinkTransformForm: FormGroup;\n  datalinkTransformItemForm: FormGroup;\n\n  newDatalinkTransformItemForm: FormGroup;\n\n  inputColumns: Array<DexihDatalinkColumn>;\n  outputColumns: Array<DexihDatalinkColumn>;\n\n  variables = [];\n\n  allowOutput = false;\n  allowReturn = true;\n\n  logger = new LogFactory('unGroup-edit');\n\n  constructor(\n    private hubService: HubService,\n    private authService: AuthService,\n    private editDatalinkService: DatalinkEditService,\n    private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n        this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n      ).subscribe(result => {\n        this.pageTitle = result[0]['pageTitle'];\n        let params = result[1];\n        this.hubCache = result[2];\n        this.datalinkForm = result[3];\n\n        this.logger.LogC(() => `OnInit`, eLogLevel.Trace);\n\n        if (this.hubCache && this.hubCache.isLoaded() && this.datalinkForm) {\n            this.datalinkTransformKey = +params['datalinkTransformKey'];\n            this.datalinkTransformItemKey = +params['datalinkTransformItemKey'];\n            this.datalinkTransformForm = this.editDatalinkService.getDatalinkTransform(this.datalinkTransformKey);\n\n            this.variables = this.editDatalinkService.getVariables();\n\n            let nodeDatalinkColumn = this.datalinkTransformForm.controls.nodeDatalinkColumn.value;\n            let nodeDatalinkColumnKey = nodeDatalinkColumn ? nodeDatalinkColumn.key : null;\n            let io = new InputOutputColumns();\n            if (nodeDatalinkColumnKey) {\n              let inputColumns = <DexihDatalinkColumn[]> this.datalinkTransformForm.controls.runTime.value.inputColumns;\n              this.inputColumns = io.getAvailableColumns(inputColumns, nodeDatalinkColumnKey, 0);\n              this.outputColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n            } else {\n              this.inputColumns = this.datalinkTransformForm.controls.runTime.value.inputColumns;\n              this.outputColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n            }\n\n            this.inputColumns = this.inputColumns.filter(c => c.dataType === eTypeCode.Node);\n\n            if (this.datalinkTransformItemKey) {\n            this.datalinkTransformItemForm = this.editDatalinkService\n              .getDatalinkTransformItem(this.datalinkTransformForm, this.datalinkTransformItemKey);\n\n            if (!this.datalinkTransformItemForm) {\n              this.authService.navigateUp();\n              return;\n            }\n\n            // create a copy of the form item to allow for cancel.\n            this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n              .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, this.datalinkTransformItemForm.value);\n\n              let parameters = <FormArray>this.newDatalinkTransformItemForm.controls.dexihFunctionParameters;\n              parameters.controls.forEach((control: FormGroup) => {\n                let runTime = {};\n                runTime['functionParameter'] = new FunctionParameter();\n                if (control.value.datalinkColumn) {\n                  runTime['functionParameter'].name = control.value.datalinkColumn.name;\n                }\n                control.controls['runTime'].setValue(runTime);\n              });\n\n          } else {\n            let newItem = new DexihDatalinkTransformItem();\n            newItem.datalinkTransformKey = this.datalinkTransformKey;\n            newItem.transformItemType = eTransformItemType.UnGroup;\n            this.datalinkTransformItemKey = 0;\n\n            this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n              .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, newItem);\n          }\n\n          if (this._nodeSubscription) { this._nodeSubscription.unsubscribe(); }\n          this._nodeSubscription = this.newDatalinkTransformItemForm.controls.sourceDatalinkColumn.valueChanges\n            .subscribe(sourceDatalinkColumn => {\n              let parameters = <FormArray>this.newDatalinkTransformItemForm.controls.dexihFunctionParameters;\n              // clear previous parameters\n              while (parameters.length) {\n                parameters.removeAt(0);\n              }\n              let column = <DexihDatalinkColumn> sourceDatalinkColumn;\n              // add a paramter for each childColumn\n              if (column.childColumns && column.childColumns.length > 0) {\n                column.childColumns.forEach((childColumn, index) => {\n                  let outputColumn = io.copyDatalinkColumn(childColumn, 0, 'un-group')\n                  let newParameter = new DexihFunctionParameter();\n                  newParameter.datalinkTransformItemKey = this.datalinkTransformItemKey;\n                  newParameter.name = childColumn.name;\n                  newParameter.rank = childColumn.rank;\n                  newParameter.direction = eParameterDirection.Output;\n                  newParameter.dataType = childColumn.dataType;\n                  newParameter.position = index;\n                  newParameter.key = this.hubCache.getNextSequence();\n                  newParameter.datalinkColumn = outputColumn\n                  newParameter.isValid = true;\n                  newParameter['runTime'] = {};\n                  newParameter['runTime'].functionParameter = new FunctionParameter();\n                  newParameter['runTime'].functionParameter.name = childColumn.name;\n\n                  let newParameterForm = this.editDatalinkService.hubFormsService.datalinkFunctionParametersFormGroup(newParameter);\n                  parameters.push(newParameterForm);\n                });\n              }\n            });\n        }\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'UnGroup Node Edit');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._nodeSubscription) { this._nodeSubscription.unsubscribe(); }\n  }\n\n  canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      if (this.newDatalinkTransformItemForm && !this.newDatalinkTransformItemForm.pristine) {\n        this.authService.confirmDialog('The function has changed',\n          'The function has changed.  Do you want to discard the changes and continue?')\n          .then((confirm) => {\n              resolve(confirm);\n            }).catch(() => {\n              resolve(false);\n            });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  cancel() {\n    this.authService.navigateUp();\n  }\n\n  apply() {\n    this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, this.newDatalinkTransformItemForm);\n    this.newDatalinkTransformItemForm.markAsPristine();\n  }\n\n  applyExit() {\n    this.apply();\n    this.authService.navigateUp();\n  }\n\n}\n\n","<div *ngIf=\"newDatalinkTransformItemForm && inputColumns && outputColumns\">\n\n\t<div class=\"list-group-item list-group-item-info rounded-0\">\n\t\t<div class=\"d-flex flex-row\">\n\t\t\t<h5>Un-Group Column Node</h5>\n\t\t\t<div class=\"ml-auto\">\n\t\t\t\t<dexih-button-apply [disabled]=\"newDatalinkTransformItemForm.pristine\" (click)=\"!newDatalinkTransformItemForm.pristine && applyExit()\"\n\t\t\t\t class=\"mr-1\"></dexih-button-apply>\n\t\t\t\t<dexih-button-cancel (click)=\"cancel()\"></dexih-button-cancel>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<div class=\"container  mt-3 mb-3\" *ngIf=\"datalinkTransformForm\">\n\n\t\t<form [formGroup]=\"newDatalinkTransformItemForm\">\n\t\t\t<fieldset>\n\t\t\t\t<section class=\"col col-xs-12\">\n\t\t\t\t\t<form-select label=\"Column Node\" \n\t\t\t\t\t\tformControlName=\"sourceDatalinkColumn\" \n\t\t\t\t\t\t[items]=\"inputColumns\" \n\t\t\t\t\t\t[(textValue)]=\"sourceValue\"\n\t\t\t\t\t\t[enableTextEntry]=\"true\"\n\t\t\t\t\t\t[enableTextEntryMatch]=\"false\"\n\t\t\t\t\t\t[enableKeySelect]=\"false\"\n\t\t\t\t\t\titemKey=\"key\"\n\t\t\t\t\t\titemName=\"logicalName\"\n\t\t\t\t\t\t[errors]=\"sourceErrors\"\n\t\t\t\t\t\t>\n\t\t\t\t\t</form-select>\n\t\t\t\t</section>\n\n\t\t\t\t<div class=\"mt-1\">\n\n\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<div class=\"col border bg-primary text-white font-weight-bold text-truncate\">UnGroup Column</div>\n\t\t\t\t\t\t</div>\n\t\t\t\n\t\t\t\t\t\t<div *ngFor=\"let parameter of newDatalinkTransformItemForm.controls.dexihFunctionParameters.controls; let i = index;\" class=\"row\">\n\t\t\t\t\t\t\t<div class=\"col border bg-secondary text-white text-truncate\">\n\t\t\t\t\t\t\t\t<div>{{parameter.controls.name.value}}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t</form>\n\t</div>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Observable, Subscription, combineLatest} from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { HubCache } from '../../../hub.models';\nimport { DexihTable, DexihTableColumn, eTransformType, RemoteLibraries } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'dexih-datalink-edit-validation-form',\n    templateUrl: './datalink-edit-validation.component.html',\n})\nexport class DatalinkEditValidationComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n    public datalinkTransformForm: FormGroup;\n\n    private _subscription: Subscription;\n\n    private hubCache: HubCache;\n    private remoteLibraries: RemoteLibraries;\n    public action: string; // new or edit\n    public pageTitle = 'Validation';\n    public message: string;\n\n    public showName = false;\n    public showDescription = false;\n\n    public inputColumns: Array<DexihTable>;\n    public outputColumns: Array<DexihTableColumn>;\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router\n    ) { }\n\n    ngOnInit() {\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n                this.hubService.getRemoteLibrariesObservable()\n            ).subscribe(result => {\n                this.pageTitle = result[0]['pageTitle'];\n                this.hubCache = result[1];\n                this.datalinkForm = result[2];\n                this.remoteLibraries = result[3];\n\n                if (this.hubCache.isLoaded() && this.datalinkForm) {\n                    this.datalinkTransformForm = this.editDatalinkService.getValidationTransform();\n                }\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Edit Validation');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    enableValidation() {\n        let transform = this.remoteLibraries.transforms.find(c => c.transformType === eTransformType.Validation);\n        this.datalinkTransformForm = this.editDatalinkService.insertDatalinkTransform(1, transform);\n    }\n\n    disableValidation() {\n        this.editDatalinkService.deleteDatalinkTransform(this.datalinkTransformForm.value);\n        this.datalinkTransformForm = null;\n    }\n}\n","<dexih-widget-section title='Validation' [showExpandButton]=\"true\">\n<div *ngIf=\"!datalinkTransformForm\">\n    <h4>Target column validation is not currently enabled. </h4>\n    <dexih-button *ngIf=\"!datalinkTransformForm\" (click)=\"enableValidation()\" buttonClass=\"btn btn-success\" iconClass=\"fa fa-check\"  [autoCompact]=\"false\"\n        title=\"Enable the validation on the target table.\">Enable Validation</dexih-button>\n</div>\n\n<div *ngIf=\"datalinkTransformForm\">\n\n    <form *ngIf=\"datalinkTransformForm\" [formGroup]=\"datalinkTransformForm\">\n        <fieldset>\n            <section>\n                <dexih-button (click)=\"disableValidation()\" buttonClass=\"btn btn-success\" iconClass=\"fa fa-check\" [autoCompact]=\"false\"\n                    title=\"Enable the validation on the target table.\">Disable Validation</dexih-button>\n            </section>\n            <section>\n                <form-textarea label=\"Description\" formControlName=\"description\" placeholder=\"Enter the description.\">\n                </form-textarea>\n            </section>\n        </fieldset>\n    </form>\n</div>\n</dexih-widget-section>\n\n<div class=\"list-group-item p-1\">\n\n    <div *ngIf=\"datalinkTransformForm\" class=\"d-flex\">\n        <div class=\"mr-1 d-none d-md-inline\">\n            <div>\n                <div class=\"alert alert-primary mb-1\">\n                    <h4>Inputs</h4>\n                </div>\n                <div>\n                    <input-columns [datalinkTransformForm]='datalinkTransformForm'></input-columns>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"w-100\">\n            <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowCondition]=\"true\" [allowOutput]=\"true\"\n               [allowStandard]=\"true\" [allowValidation]=\"true\" title=\"Validation\">\n            </mapping>\n        </div>\n\n        <div class=\"ml-1 d-none d-md-inline\">\n            <div class=\"alert alert-primary mb-1\">\n                <h4>Outputs\n                    <div class=\"float-right\">\n                    </div>\n                </h4>\n            </div>\n            <output-columns [datalinkTransformForm]='datalinkTransformForm' [allowMappingOutputs]=\"allowMappingOutputs\"\n                (inputOutputDrop)=\"newDragDropMapping(eTransformItemType.ColumnPair, $event)\"></output-columns>\n        </div>\n\n    </div>\n</div>\n"]}