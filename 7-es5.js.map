{"version":3,"sources":["webpack:///src/app/+hub/datalink/datalink-edit/properties/datalink-edit-properties.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/properties/datalink-edit-properties.component.html","webpack:///src/app/+hub/datalink/datalink-edit/mapping-edit/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/join-columns/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/input-columns/input-columns.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/input-columns/input-columns.component.html","webpack:///src/app/+hub/datalink/datalink-edit/standard-function-edit/standard-function-edit.component.html","webpack:///src/app/+hub/datalink/datalink-edit/standard-function-edit/standard-function-edit.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/parameters/output-parameter.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/parameters/output-parameter.component.html","webpack:///src/app/+hub/datalink/datalink-edit/input-columns/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/output-columns/output-column.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/output-columns/output-column.component.html","webpack:///src/app/+hub/datalink/datalink-edit/transform-step/transform-step.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/transform-step/transform-step.component.html","webpack:///src/app/+hub/datalink/datalink-edit/datalink-edit.module.ts","webpack:///src/app/+hub/datalink/datalink-edit/datalink-edit.service.ts","webpack:///src/app/+hub/datalink/datalink-edit/join-columns/join-columns.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/join-columns/join-columns.component.html","webpack:///src/app/+hub/datalink/datalink-edit/target/datalink-edit-target-table.component.html","webpack:///src/app/+hub/datalink/datalink-edit/target/datalink-edit-target-table.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/parameters/input-parameter.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/parameters/input-parameter.component.html","webpack:///src/app/+hub/datalink/datalink-edit/profile-rules/profile-rules.component.html","webpack:///src/app/+hub/datalink/datalink-edit/profile-rules/profile-rules.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/datalink-edit.routing.ts","webpack:///src/app/+hub/datalink/datalink-edit/datalink-edit-guard.ts","webpack:///src/app/+hub/datalink/datalink-edit/mapping/mapping.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/mapping/mapping.component.html","webpack:///src/app/+hub/datalink/datalink-edit/standard-function-edit/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/target-columns/target-columns.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/target-columns/target-columns.component.html","webpack:///src/app/+hub/datalink/datalink-edit/transform-table-edit/transform-table-edit.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/transform-table-edit/transform-table-edit.component.html","webpack:///src/app/+hub/datalink/datalink-edit/join-columns/join-column.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/join-columns/join-column.component.html","webpack:///src/app/+hub/datalink/datalink-edit/preview-table/preview-table.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/preview-table/preview-table.component.html","webpack:///src/app/+hub/datalink/datalink-edit/transform/datalink-edit-transform.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/transform/datalink-edit-transform.component.html","webpack:///src/app/+hub/datalink/datalink-edit/datalink-edit.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/datalink-edit.component.html","webpack:///src/app/+hub/datalink/datalink-edit/target-columns/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/validation/datalink-edit-validation.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/validation/datalink-edit-validation.component.html","webpack:///src/app/+hub/datalink/datalink-edit/mapping/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/target-table-column/target-table-column.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/target-table-column/target-table-column.component.html","webpack:///src/app/+hub/datalink/datalink-edit/unGroup-edit/unGroup-edit.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/unGroup-edit/unGroup-edit.component.html","webpack:///src/app/+hub/datalink/datalink-edit/datalink-table/datalink-table.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/datalink-table/datalink-table.component.html","webpack:///src/app/+hub/datalink/datalink-edit/mapping-edit/mapping-edit.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/mapping-edit/mapping-edit.component.html","webpack:///src/app/+hub/datalink/datalink-edit/target/datalink-edit-target.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/target/datalink-edit-target.component.html","webpack:///src/app/+hub/datalink/datalink-edit/custom-function-edit/custom-function-edit.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/custom-function-edit/custom-function-edit.component.html","webpack:///src/app/+hub/datalink/datalink-edit/output-columns/output-columns.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/output-columns/output-columns.component.html","webpack:///src/app/+hub/datalink/datalink-edit/preview-table/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/target-columns/target-column.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/target-columns/target-column.component.html","webpack:///src/app/+hub/datalink/datalink-edit/source-table/datalink-edit-source-table.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/source-table/datalink-edit-source-table.component.html","webpack:///src/app/+hub/datalink/datalink-edit/mapping/mapping-item.component.html","webpack:///src/app/+hub/datalink/datalink-edit/mapping/mapping-item.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/preview-data/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/input-columns/input-column.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/input-columns/input-column.component.html","webpack:///src/app/+hub/datalink/datalink-edit/save-button/datalink-edit-save-button.component.html","webpack:///src/app/+hub/datalink/datalink-edit/save-button/datalink-edit-save-button.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/parameters/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/custom-function-edit/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/datalink-column-edit/datalink-column-edit.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/datalink-column-edit/datalink-column-edit.component.html","webpack:///src/app/+hub/datalink/datalink-edit/run-plan/datalink-run-plan.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/run-plan/datalink-run-plan.component.html","webpack:///src/app/+hub/datalink/datalink-edit/unGroup-edit/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/preview-data/preview-data.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/preview-data/preview-data.component.html","webpack:///src/app/+hub/datalink/datalink-edit/output-columns/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/new-transform/datalink-edit-new-transform.component.html","webpack:///src/app/+hub/datalink/datalink-edit/new-transform/datalink-edit-new-transform.component.ts"],"names":["DatalinkEditPropertiesComponent","hubService","editDatalinkService","route","eConnectionPurpose","eDatalinkTypeItems","filter","c","key","eAlertLevelItems","eAlertLevel","_subscription","data","params","getHubCacheObservable","hubFormsService","getCurrentFormObservable","subscribe","result","pageTitle","datalinkForm","e","addHubClientErrorMessage","unsubscribe","selector","templateUrl","InputColumnsComponent","columns","columnGroups","_inputColumnsSubscribe","getColumnGroups","datalinkTransformForm","controls","runTime","value","inputColumns","valueChanges","ArrayParameter","inputParameterForms","outputParameterForms","parameterItems","inputArray","arrayParameters","i","item","ArrayParameterItem","forEach","inputParameterForm","array","inputItems","push","outputParameterForm","outputItems","length","StandardFunctionEditComponent","authService","eFunctionType","eParameterDirection","eTypeCode","typeCodes","cancelToken","invalidActions","functionCache","eGenericType","variables","allowOutput","allowReturn","eInvalidActionItems","eErrorActionItems","logger","isJoin","getRemoteLibrariesObservable","hubCache","remoteLibraries","LogC","Trace","isLoaded","functions","transformFunctionType","Validate","getValidationTransform","datalinkTransformKey","getDatalinkTransform","navigateUp","getVariables","useCustomFunction","customFunctionKey","datalinkTransformItemKey","transformType","Join","Lookup","table","joinDatalinkTable","addHubErrorMessage","dexihDatalinkColumns","nodeDatalinkColumn","nodeDatalinkColumnKey","io","getAvailableColumns","outputColumns","transformColumns","datalinkTargets","dexihDatalinkTargets","datalinkTransformItemForm","getDatalinkTransformItem","newDatalinkTransformItemForm","datalinkDatalinkTransformItemFormGroup","selectCustomFunction","selectedFunction","find","functionClassName","functionMethodName","functionAssemblyName","selectFunction","newItem","transformItemType","BuiltInFunction","Condition","JoinCondition","functionType","Map","Aggregate","Series","Rows","Profile","functionCategories","Array","from","Set","map","category","filteredFunctions","customFunctions","hub","dexihCustomFunctions","selectedCustomFunction","_functionSubscription","_saveSubscription","savingDatalink","apply","_returnParameterSubscription","cancel","Promise","resolve","pristine","confirmDialog","then","confirm","dexihFunctionParameters","parametersArray","inputParameterControls","sort","a","b","position","direction","Input","ResultInput","outputParameterControls","parameterIsOutput","ReturnValue","inputParameters","linkedName","parameter","addArrayParameter","outputParameters","resultInputParameters","resultOutputParameters","resultReturnParameters","arrayParameter","resetItems","isInput","name","functionParameter","markAsDirty","undefined","setValue","targetDatalinkColumn","genericTypeCode","genericTypeDefault","genericType","Numeric","Decimal","String","All","isNumeric","isString","None","parameters","existingParameters","removeAt","param","index","newParameter","Output","ResultOutput","returnParameters","ResultReturnValue","refreshParameters","existingValue","parameterName","rank","isGeneric","getNextSequence","datalinkColumn","dataType","p","defaultValue","isValid","newParameterForm","datalinkFunctionParametersFormGroup","dexihCustomFunctionParameters","returnParameter","returnType","newParameterForm2","parentParameter","parentParameterForm","createArrayParameter","datalinkFunctionArrayParametersFormGroup","arrayForm","insert","parameterForm","addParameter","splice","removeParameter","clearArray","isLabel","column","addAllColumns","inputArrayForm","j","form","importFunctionMappings","newColumn","getHubCache","paramValue","allowDbNull","logicalName","insertDatalinkTransformItem","markAsPristine","OutputParameterComponent","allowDataTypeSelect","allowNameSelect","allowAdd","allowRemove","updateParameterName","hasChanged","newColumnUpdating","eBasicType","ignoreChanges","updateItems","errors","getFormErrorMessages","_datalinkColumnSubscription","_parameterSubscription","_dataTypeSubscription","dexihTableColumns","outputTables","target","type","emit","format","defaultFormat","updateValueAndValidity","textValue","columnGroup","emitModelToViewChange","updateNewColumn","add","remove","OutputColumnComponent","router","inputTables","inputOutputDrop","eMappingStatus","logCount","childColumns","refreshStatus","columnUsage","Transform","Target","NotMapped","mappingStatusLineage","createDatalinkLineage","mappingStatusInfoLineage","mappingStatusImpact","createDatalinkImpact","AutoGenerate","mappingStatusInfoImpact","Mapped","MappedToNothing","navigate","relativeTo","parent","informationDialog","onDelete","TransformStepComponent","showArrow","showDelete","isLast","styleUrls","routerLinkBefore","routerLinkAfter","routerLinkCurrent","routerLinkPreview","title","icon","control","DatalinkEditModule","ngModule","providers","imports","declarations","exports","DatalinkEditService","showAllErrors","_hubCache","getRemoteLibrariesPromise","ngOnDestroy","asObservable","currentForm","datalinkTransforms","datalinkTransform","Validation","transform","transforms","insertDatalinkTransform","deleteDatalinkTransform","datalinkTransformItems","datalinkTransformItem","dexihDatalinkTransforms","joinColumns","nodeColumns","getNodeColumns","fixMapping","joinSortDatalinkColumn","items","dexihDatalinkTransformItems","sourceDatalinkColumn","joinDatalinkColumn","filterDatalinkColumn","nodes","Node","col","concat","columnForm","findIndex","inputColumn","Filter","Mapping","Group","Sort","Delta","dexihHubVariables","previousGroup","cols","group","datalinkTransformItemsArray","Math","max","o","currentIndex","fixMappings","indexOf","datalinkTargetKey","newDatalinkTransform","minKey","dt","transformAssemblyName","transformClassName","passThroughColumns","Concatenate","seriesItem","datalinkTransformFormGroup","resetDatalinkTransformPositions","columnKey","sourceDatalinkTableForm","sourceDatalinkTable","columnsArray","transformForms","t","itemForm","GetUserConfigTransformReference","userConfigTransforms","transformReference","datalink","getDatalinkValue","cache","hubPostRemote","hubKey","remoteAgentId","getCurrentRemoteAgentId","datalinkTable","confirm2","doRebuildDatalinkTable","sourceType","Table","sourceTable","getTable","sourceTableKey","mergeDatalinkColumns","Datalink","dexihDatalinks","sourceDatalinkKey","buildInputOutput","datalinkColumns","rowDatalinkColumn","datalinkTableKey","Int32","isMandatory","description","groupName","newColumns","existingColumns","Object","keys","JoinColumnsComponent","inputJoinDrop","eTransformType","updateTableData","_changesSubscription","joinTable","joinColumn","DatalinkEditTargetTableComponent","fb","eDeltaType","eUpdateStrategy","updateStrategies","eTransformWriterMethod","loadStrategies","showTableProperties","showColumn","ignoreUpdateTable","newTable","showBulkEdit","canExit","tooltip","_tableData","tableData","_missingColumnsData","missingColumnsData","tableFormService","action","ioColumns","getDatalinkOutputColumns","targetKey","targets","originalTargetTableForm","targetTableForm","datalinkTargetFormGroup","connectionTables","getConnectionTables","managedConnections","getManagedConnections","updateData","resetSubscription","_loadStrategySubscription","_tableFormSubscription","dirty","reason","tableKey","TargetTable","lineage","mappingStatus","statusClass","path","addNodeColumns","validation","startForm","next","columnData","deltaType","columnStatus","dataTypeToString","isIncrementalUpdate","securityFlag","columnValidation","getColumnValidation","columnValidationKey","columnValidationClass","columnValidationTooltip","validColumns","missingColumnData","datalinkColumnStatus","tableForm","tableColumns","missingColumn","assign","resetColumnKeys","positions","tableColumn","childColumn","setControl","addMissing","connection","getConnection","connectionKey","importTables","tables","returnTable","useLogical","defaultTableLogicalName","schema","createTables","addHubSuccessMessage","IgnoreFormChange","saveTables","savedTables","savedTable","save","InputValues","InputParameterComponent","inputColumnGroups","inputs","inputUpdating","inputParameter","staticValue","textItems","Boolean","toString","listOfValues","inputParameterSubscription","datalinkColumnSubscription","input","Unknown","DatalinkEditProfileRulesComponent","selectedProfileRules","dexihDatalinkProfiles","GetFunctionsByType","profileRules","profile","profileRuleForm","detailedResults","profiles","profileFormGroup","profileRule","datalinkKey","datalinkProfileFormGroup","updateProfileRules","standardFunctionRoutes","canDeactivate","component","customFunctionRoutes","mappingEditRoutes","sourceTableRoutes","pathMatch","loadChildren","m","TableEditModule","targetRoutes","children","validationRoutes","datalinkEditRoutes","redirectTo","help","routes","navigateSkip","Routing","forChild","DatalinkEditGuard","MappingComponent","allowStandard","allowMapping","allowAggregate","allowRow","allowCondition","allowValidation","allowGroup","allowJoin","allowSort","allowSeries","allowJoinNode","addMapping","removeMapping","updateMapping","onColumnDrop","eTransformItemType","getFunctionType","inputDateColumns","DateTime","Date","filteredItems","d","JoinNode","Column","CustomFunction","AggregatePair","ColumnPair","FilterPair","JoinPair","UnGroup","transformItem","functionItem","getItemFormGroup","GroupNode","deleteSelected","deleteDatalinkTransformItem","existingItems","outputColumn","copyDatalinkColumn","itemType","createMapping","validFrom","ValidFromDate","validTo","ValidToDate","filterCompare","GreaterThanEqual","LessThan","editMapping","datalinkItemSortChange","newOutputDrop","mappingTable","TargetColumnsComponent","allowMappingOutputs","TransformTableEditComponent","canEdit","deltaTypes","securityFlags","_columnData","transformTableForm","transformTable","updateColumnData","updateDate","columnIndex","close","columnSortChange","JoinColumnComponent","_hubCacheSubscription","lineageMappingStatus","impactMappingStatus","PreviewTableComponent","eDataObjectType","DatalinkEditTransformComponent","showName","showDescription","eDuplicateStrategyItems","eJoinNotFoundStrategyItems","eJoinStrategyItems","eSeriesGrain","seriesGrains","allowNode","nodeName","formErrors","transformsArray","_transformsArraySubscription","tmpDatalinkTransformForm","seriesForm","nodeType","node","_datalinkFormSubscription","nodeItem","$event","sortDirection","Ascending","aggregate","Sum","DatalinkEditComponent","eSourceType","showPage","showPageMessage","source","routerState","root","snapshot","firstChild","events","event","getHelp","status","Loaded","init","load","ngOnInit","_transformsChange","_sourceChange","Warning","originalDatalink","copyDatalink","CopyDatalink","datalinkType","Query","reBuildDatalinkTable","refreshTransforms","refreshSource","history","pushState","newUrl","window","location","pathname","replace","navigateByUrl","returnValue","validationTransform","enableValidation","disableValidation","getTransformName","invalid","unloadNotification","DatalinkEditValidationComponent","TargetTableColumnComponent","formsService","_currentFormSubscription","targetForm","columnUpdated","UnGroupEditComponent","_nodeSubscription","DatalinkTableComponent","datalinkEditService","sourceTypes","datalinks","isVersioned","datalinkTableForm","subscribeDatalinkChanges","updateIsVersioned","_datalinkTableSubscription","refreshColumns","rowsEndAt","rowsStartAt","rowsIncrement","tableColumnsForm","datalinkTableColumn","MappingEditComponent","showInput","showOutput","eAggregate","eAggregateItems","compare","eCompare","sortDirections","filterValue","sourceValue","getErrors","_formChangesObserve","statusChanges","targetErrors","getErrorMessage","sourceErrors","joinErrors","sourceColumn","emitEvent","DatalinkEditTargetComponent","targetTableColumns","_columnsObservable","columnsObservable","updateTargets","updateColumns","deleteDatalinkTarget","editColumn","CustomFunctionEditComponent","inputParameterValues","outputParameterValues","funcParam","setParameters","_parametersSubscription","returnParameterForm","oldParameter","downloadCustomFunction","testCustomFunction","returnParameterValue","addHubMessage","OutputColumnsComponent","_outputColumnsSubscribe","TargetColumnComponent","DatalinkEditSourceTableComponent","_sourceSubscription","SourceTable","Source","PassThroughMap","ValidValue","ValidParameter","ValidMapping","MappingItemComponent","GetFunctionReference","func","label","addBuiltInFunctionParameters","error","addCustomFunctionParameters","addUnGroupParameters","useSource","columnOrValue","useTarget","describeDatalinkColumn","useJoin","useFilter","IsEqual","expectedDataType","text","describeStaticValue","valid","args","arg","functionInputs","functionOutputs","inputParams","describeParameterName","values","ap","outputParams","linkedNames","mapParameters","parameters2","findValidColumn","InputColumnComponent","findColumn","DatalinkEditSaveButtonComponent","saveAs","tableNames","join","doSave","saveDatalink","toPromise","doDownload","downloadItems","downloadObject","objectKey","objectType","downloadData","Csv","truncateTarget","resetIncremental","runDatalinks","columnFormService","DatalinkColumnEditComponent","datalinkColumnKey","initializeForm","applyExit","originalColumnForm","maxPos","DatalinkRunPlanComponent","allowSave","PreviewDataComponent","getRemoteAgentObservable","DatalinkEditNewTransformComponent","newDatalinkTransformForm"],"mappings":"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","file":"7-es5.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { eConnectionPurpose, eDatalinkTypeItems, eAlertLevelItems, eAlertLevel } from '../../../../shared/shared.models';\n\n@Component({\n    selector: 'dexih-datalink-edit-properties-form',\n    templateUrl: './datalink-edit-properties.component.html'\n})\nexport class DatalinkEditPropertiesComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n\n    public pageTitle: string;\n    public message: string;\n\n    private _subscription: Subscription;\n\n    public eConnectionPurpose = eConnectionPurpose;\n    eDatalinkTypeItems = eDatalinkTypeItems.filter(c => c.key > 0);\n\n    public eAlertLevelItems = eAlertLevelItems;\n    public eAlertLevel = eAlertLevel;\n\n    constructor(\n        private hubService: HubService,\n        public editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n                this.pageTitle = result[0]['pageTitle'];\n                this.datalinkForm = result[3];\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Properties');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n\n}\n","<d-widget-section title='Properties' [showExpandButton]=\"true\">\n    <form *ngIf=\"datalinkForm\" [formGroup]=\"datalinkForm\" class=\"container\">\n        <fieldset>\n            <section>\n                <form-select label=\"Datalink Type\" formControlName=\"datalinkType\" [items]=\"eDatalinkTypeItems\" itemKey=\"key\" itemName=\"description\" iconClass=\"fa fa-database\"\n                    note='Categorize the type of function this datalink is performing.' [enableFilter]=\"false\">\n                </form-select>\n            </section>\n\n            <section>\n                <form-input label=\"Datalink Name\" formControlName=\"name\" placeholder=\"Enter the datalink name.\" iconClass=\"fa fa-list\" [autocapitalize]=\"true\" [errors]=\"editDatalinkService.hubFormsService.formErrors.name\">\n                </form-input>\n            </section>\n\n            <section>\n                <form-textarea label=\"Description\" [showPreview]=\"true\" [isHidden]=\"true\" formControlName=\"description\" placeholder=\"Enter the description.\"\n                    [errors]=\"editDatalinkService.hubFormsService.formErrors.description\">\n                </form-textarea>\n            </section>\n\n            <section>\n                <form-select label=\"Alerting Level\" formControlName=\"alertLevel\" [items]=\"eAlertLevelItems\"\n                    itemKey=\"key\" itemName=\"description\" iconClass=\"fa fa-bell\"\n                    [errors]=\"editDatalinkService.hubFormsService.formErrors.alertLevel\" note=\"When alerts should be sent.\"\n                    [enableFilter]=\"false\">\n                </form-select>\n            </section>\n            \n            <section>\n                <form-checkbox label=\"Datalink is shared in the catalog to users with read access.\" formControlName=\"isShared\">\n                </form-checkbox>\n            </section>\n\n        </fieldset>\n    </form>\n</d-widget-section> \n\n<d-widget-section title='Input Parameters' [showExpandButton]=\"true\">\n    <div  class=\"container\">\n        <input-parameters [showEdit]=\"true\" [parameters]=\"datalinkForm.controls.parameters\" [formsService]=\"editDatalinkService.hubFormsService\"></input-parameters>\n    </div>\n</d-widget-section>","export * from './mapping-edit.component';","export { JoinColumnComponent } from './join-column.component';\nexport { JoinColumnsComponent } from './join-columns.component';\n","import { Component, Input, OnInit, OnDestroy, OnChanges } from '@angular/core';\nimport { Subscription} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { DexihDatalinkColumn } from '../../../../shared/shared.models';\nimport { DatalinkEditService } from '../datalink-edit.service';\n\n@Component({\n\n    selector: 'input-columns',\n    templateUrl: './input-columns.component.html'\n})\nexport class InputColumnsComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() public datalinkTransformForm: FormGroup;\n\n    private _inputColumnsSubscribe: Subscription;\n    columns: Array<DexihDatalinkColumn> = [];\n    columnGroups: Array<{group: string, columns: Array<DexihDatalinkColumn>}> = [];\n\n    constructor(private editDatalinkService: DatalinkEditService) {\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnChanges() {\n        if (this._inputColumnsSubscribe) { this._inputColumnsSubscribe.unsubscribe(); }\n\n        this.columnGroups = this.editDatalinkService.getColumnGroups(this.datalinkTransformForm.controls.runTime.value.inputColumns);\n\n        this._inputColumnsSubscribe =  this.datalinkTransformForm.controls.runTime.valueChanges.subscribe(() => {\n            this.columnGroups = this.editDatalinkService.getColumnGroups(this.datalinkTransformForm.controls.runTime.value.inputColumns);\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._inputColumnsSubscribe) { this._inputColumnsSubscribe.unsubscribe(); }\n    }\n}\n","<div *ngIf=\"datalinkTransformForm\" cdkDropList #cdkDropList=\"cdkDropList\">\n    <span *ngFor=\"let table of inputTables; let tableIndex = index\">\n        <d-widget-section *ngIf=\"table.dexihDatalinkColumns.length > 0\" [title]=\"table.name\" [padding]=\"false\" [showExpandButton]=\"true\">\n            <div class=\"list-group\">\n                <input-column\n                    *ngFor=\"let column of table.dexihDatalinkColumns | fieldSort : 'position' | isValidFilter \"\n                    [datalinkTransformForm]='datalinkTransformForm' [column]='column'>\n                </input-column>\n            </div>\n        </d-widget-section>\n    </span>\n    <d-widget-section *ngFor=\"let columnGroup of columnGroups\" [title]=\"columnGroup.group\" [padding]=\"false\"  [showExpandButton]=\"true\" >\n        <div *ngFor=\"let column of columnGroup.columns | fieldSort : 'position' | isValidFilter; let i = index\">\n            <input-column [datalinkTransformForm]='datalinkTransformForm' [column]='column'>\n            </input-column>\n        </div>\n    </d-widget-section>\n</div>\n","<div *ngIf=\"newDatalinkTransformItemForm && inputColumns && outputColumns\">\n\n\t<d-widget-section  title=\"Edit Function\" [showExpandButton]=\"false\">\n\t\t<ng-template #sectionHeader>\n\t\t\t<d-button-apply [disabled]=\"newDatalinkTransformItemForm.pristine\" (click)=\"!newDatalinkTransformItemForm.pristine && applyExit()\"\n\t\t\tclass=\"mr-1\"></d-button-apply>\n\t\t\t<d-button-cancel (click)=\"cancel()\"></d-button-cancel>\n\t\t</ng-template>\n\n\t\t<form *ngIf=\"datalinkTransformForm\" [formGroup]=\"newDatalinkTransformItemForm\" class=\"container\">\n\t\t\t<fieldset>\n\n\t\t\t\t<section *ngIf=\"hubCache?.hub.dexihCustomFunctions.length > 0\">\n\t\t\t\t\t<form-checkbox label=\"Use a custom function\" [(ngModel)]=\"useCustomFunction\" [ngModelOptions]=\"{standalone: true}\">\n\t\t\t\t\t</form-checkbox>\n\t\t\t\t</section>\n\n\t\t\t\t<ng-template [ngIf]=\"useCustomFunction\">\n\t\t\t\t\t<section [ngStyle]=\"{'z-index': 499, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Select a hub function\" formControlName=\"customFunctionKey\" [items]=\"customFunctions\" itemKey=\"key\"\n\t\t\t\t\t\t itemName=\"name\" itemTitle=\"description\">\n\t\t\t\t\t\t \t<customFunction-edit-button [key]=\"newDatalinkTransformItemForm.controls.customFunctionKey.value\"></customFunction-edit-button>\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template [ngIf]=\"!useCustomFunction\">\n\t\t\t\t\t<section [ngStyle]=\"{'z-index': 500, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Category\" [items]=\"functionCategories\" [allowNullSelect]=\"true\" selectNullMessage=\"(All functions)\"\n\t\t\t\t\t\t [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"functionCategory\" (ngModelChange)=\"updateCategory($event)\" [sortItems]=\"true\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<section [ngStyle]=\"{'z-index': 499, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Select a standard function\" (ngModelChange)=\"selectFunction($event, true)\" [(ngModel)]=\"selectedFunction\"\n\t\t\t\t\t\t [ngModelOptions]=\"{standalone: true}\" [items]=\"filteredFunctions\" [enableKeySelect]=\"false\" itemKey=\"name\" itemName=\"name\" itemTitle=\"description\" [note]=\"selectedFunction?.description\"\n\t\t\t\t\t\t [sortItems]=\"true\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t</ng-template>\n\t\t\t\t<div *ngIf=\"selectedFunction || selectedCustomFunction\" class=\"form-row \">\n\t\t\t\t\t<section *ngIf=\"transformFunctionType != eFunctionType.Validate && transformFunctionType != eFunctionType.Condition\"\n\t\t\t\t\t class=\"col-xs-12 col-sm-6 col-md-3\" [ngStyle]=\"{'z-index': 405, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Action when null\" formControlName=\"onNull\" [items]=\"eErrorActionItems\" itemKey=\"key\" itemName=\"name\"\n\t\t\t\t\t\t iconClass=\"fa fa-database\" [enableFilter]=\"false\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"col-xs-12 col-sm-6 col-md-3\" [ngStyle]=\"{'z-index': 404, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Action when error\" formControlName=\"onError\" [items]=\"eErrorActionItems\" itemKey=\"key\" itemName=\"name\"\n\t\t\t\t\t\t iconClass=\"fa fa-database\" [enableFilter]=\"false\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t\n\t\t\t\t\t<div *ngIf=\"transformFunctionType == eFunctionType.Validate\" class=\"col-xs-12 col-sm-6 col-md-3\" [ngStyle]=\"{'z-index': 402, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Action when false\" formControlName=\"invalidAction\" [items]=\"eInvalidActionItems\" itemKey=\"key\"\n\t\t\t\t\t\t itemName=\"name\" [enableFilter]=\"false\" iconClass=\"fa fa-database\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</div>\n\t\n\t\t\t\t\t<section *ngIf=\"selectedFunction?.genericType !== eGenericType.None\" class=\"col-xs-12 col-sm-6 col-md-3\">\n\t\t\t\t\t\t<form-select label=\"Data Type\" formControlName=\"genericTypeCode\" [items]=\"typeCodes\" itemKey=\"key\" itemName=\"name\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<section  class=\"col-xs-12 col-sm-6 col-md-3\">\n\t\t\t\t\t\t<form-select label=\"Cache Options\" formControlName=\"functionCaching\" [items]=\"functionCache\" itemKey=\"key\" itemName=\"name\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<section *ngIf=\"(selectedFunction?.returnParameters?.length > 0 && selectedFunction?.returnParameters[0].dataType == eTypeCode.Boolean) || (selectedCustomFunction && selectedCustomFunction?.returnType == eTypeCode.Boolean)\" class=\"col-xs-12 col-sm-6 col-md-3 align-self-end\">\n\t\t\t\t\t\t<form-checkbox label=\"Return 'NOT' result\" formControlName=\"notCondition\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div *ngIf=\"(selectedFunction || selectedCustomFunction) && inputParameterControls.length > 0\" class=\"mt-1\">\n\t\t\t\t\t<div class=\"d-flex flex-row mb-1\">\n\t\t\t\t\t\tInput Parameters\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngFor=\"let inputParameter of inputParameterControls; let i = index\" [ngStyle]=\"{'z-index': 300-i, 'position': 'relative'}\" class=\"mb-1\">\n\t\t\t\t\t\t<div *ngIf=\"inputParameter.value.rank > 0 && !inputParameter.value.runTime.functionParameter.linkedName\">\n\t\t\t\t\t\t\t<div class=\"d-flex flex-row mb-1\">\n\t\t\t\t\t\t\t\t<div class=\"input-group-text\">\n\t\t\t\t\t\t\t\t\tArray - {{inputParameter.value.name}}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"ml-auto\">\n\t\t\t\t\t\t\t\t\t<d-button *ngIf=\"selectedFunction.importMethodName\" iconClass=\"fa fa-download\" text=\"Import Mappings\" (click)=\"importInputOutputMappings(inputParameter)\"\n\t\t\t\t\t\t\t\t\t title=\"Attempt to import the mappings from the source data\" class=\"mr-1\"></d-button>\n\t\t\t\t\t\t\t\t\t<d-button iconClass=\"fa fa-plus\" text=\"Add Parameter\" (click)=\"addParameter(inputParameter, eParameterDirection.Input)\" title=\"Add a parameter to the array\"\n\t\t\t\t\t\t\t\t\t class=\"mr-1\"></d-button>\n\t\t\t\t\t\t\t\t\t<d-button iconClass=\"fa fa-columns\" text=\"Add All Inputs\" (click)=\"addAllColumns(inputParameter)\" title=\"Add all the input columns to the array\"\n\t\t\t\t\t\t\t\t\t class=\"mr-1\"></d-button>\n\t\t\t\t\t\t\t\t\t<d-button iconClass=\"fa fa-eraser\" text=\"Clear\" (click)=\"clearArray(inputParameter)\"></d-button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<input-parameter *ngIf=\"inputParameter.controls.arrayParameters.controls.length === 0\" [inputParameterForms]=\"[inputParameter]\" [nodeDatalinkColumnKey]=\"datalinkTransformForm.controls.nodeDatalinkColumn.value?.key\"\n\t\t\t\t\t\t\t [inputColumns]=\"inputColumns\" [allowAdd]=\"false\" [allowRemove]=\"false\" [updateParameterName]=\"false\" [rank]=\"inputParameter.value.rank\"\n\t\t\t\t\t\t\t [variables]=\"variables\">\n\t\t\t\t\t\t\t</input-parameter>\n\t\t\t\t\t\t\t<div *ngFor=\"let arrayParameter of inputParameter.controls.arrayParameters.controls; let j = index, let last = last\" class=\"pl-2 mb-1\"\n\t\t\t\t\t\t\t [ngStyle]=\"{'z-index': 300-j, 'position': 'relative'}\">\n\t\t\t\t\t\t\t\t<input-parameter [inputParameterForms]=\"[arrayParameter]\" [inputColumns]=\"inputColumns\" [allowAdd]=\"true\" [nodeDatalinkColumnKey]=\"datalinkTransformForm.controls.nodeDatalinkColumn.value?.key\"\n\t\t\t\t\t\t\t\t [allowRemove]=\"true\" [updateParameterName]=\"false\" (addParameter)=\"addParameter(inputParameter, eParameterDirection.Input, j)\"\n\t\t\t\t\t\t\t\t (removeParameter)=\"removeParameter(inputParameter, j)\" [variables]=\"variables\">\n\t\t\t\t\t\t\t\t</input-parameter>\n\t\t\t\t\t\t\t\t<small *ngIf=\"last && arrayParameter.value.runTime?.functionParameter?.description\" class=\"form-text text-muted\">\n\t\t\t\t\t\t\t\t\t<markdown [data]=\"arrayParameter.value.runTime.functionParameter.description\"></markdown>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<input-parameter *ngIf=\"inputParameter.value.rank == 0 && !inputParameter.value.runTime.functionParameter.linkedName\" [inputParameterForms]=\"[inputParameter]\" [inputColumns]=\"inputColumns\" [nodeDatalinkColumnKey]=\"datalinkTransformForm.controls.nodeDatalinkColumn.value?.key\"\n\t\t\t\t\t\t [allowAdd]=\"false\" [allowRemove]=\"false\" [updateParameterName]=\"false\" [variables]=\"variables\">\n\t\t\t\t\t\t</input-parameter>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- When linked array, then place parameters side/side -->\n\t\t\t\t<div *ngFor=\"let arrayParameter of arrayParameters\" class=\"mt-1\">\n\t\t\t\t\t<div class=\"d-flex flex-row mb-1\">\n\t\t\t\t\t\t{{arrayParameter.name}}\n\t\t\t\t\t\t<div class=\"ml-auto\">\n\t\t\t\t\t\t\t<d-button *ngIf=\"selectedFunction.importMethodName\" iconClass=\"fa fa-download\" text=\"Import Mappings\" (click)=\"importInputOutputMappings(arrayParameter)\"\n\t\t\t\t\t\t\t title=\"Attempt to import the mappings from the source data\" class=\"mr-1\"></d-button>\n\t\t\t\t\t\t\t<d-button iconClass=\"fa fa-plus\" text=\"Add Mapping\" (click)=\"addInputOutputParameter(arrayParameter)\"\n\t\t\t\t\t\t\t title=\"Add a parameter to the array\" class=\"mr-1\"></d-button>\n\t\t\t\t\t\t\t<d-button iconClass=\"fa fa-columns\" text=\"Add All Inputs\" (click)=\"addAllInputOutputColumns(arrayParameter)\"\n\t\t\t\t\t\t\t title=\"Add all the input columns to the array\" class=\"mr-1\"></d-button>\n\t\t\t\t\t\t\t<d-button iconClass=\"fa fa-eraser\" text=\"Clear\" (click)=\"clearInputOutputArray(arrayParameter)\"></d-button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngFor=\"let parameterItem of arrayParameter.parameterItems; let j = index\" class=\"pl-2\"\n\t\t\t\t\t [ngStyle]=\"{'z-index': 200-j, 'position': 'relative'}\">\n\t\t\t\t\t\t<input-parameter \n\t\t\t\t\t\t [inputParameterForms]=\"parameterItem.inputItems\" \n\t\t\t\t\t\t [outputParameterForms]=\"parameterItem.outputItems\" \n\t\t\t\t\t\t [nodeDatalinkColumnKey]=\"datalinkTransformForm.controls.nodeDatalinkColumn.value?.key\"\n\t\t\t\t\t\t [inputColumns]=\"inputColumns\" [outputColumns]=\"outputColumns\" [datalinkTargets]=\"datalinkTargets\" [allowAdd]=\"true\" [allowRemove]=\"true\"\n\t\t\t\t\t\t [updateParameterName]=\"false\" (addParameter)=\"addInputOutputParameter(arrayParameter, j)\"\n\t\t\t\t\t\t (removeParameter)=\"removeInputOutputParameter(arrayParameter, j)\"\n\t\t\t\t\t\t [variables]=\"variables\">\n\t\t\t\t\t\t</input-parameter>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div *ngIf=\"(selectedFunction || selectedCustomFunction) && allowOutput\" class=\"mt-1\">\n\t\t\t\t\t<label class=\"d-flex flex-row\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\tOutput Parameters\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"ml-auto\">\n\t\t\t\t\t\t\t<d-button text=\"Auto Map\" buttonClass=\"btn-sm btn-outline-primary\" (click)=\"autoMap()\"></d-button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</label>\n\t\t\t\t\t<div *ngFor=\"let outputParameter of outputParameterControls; let i = index\" [ngStyle]=\"{'z-index': 100-i, 'position': 'relative'}\">\n\t\t\t\t\t\t<div *ngIf=\"outputParameter.value.rank > 0 && !outputParameter.value.runTime.functionParameter.linkedName\">\n\t\t\t\t\t\t\t<div class=\"d-flex flex-row mb-1\">\n\t\t\t\t\t\t\t\t<div class=\"input-group-text\">\n\t\t\t\t\t\t\t\t\tArray - {{outputParameter.value.name}}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"ml-auto\">\n\t\t\t\t\t\t\t\t\t<d-button iconClass=\"fa fa-plus\"  text=\"Add Parameter\" (click)=\"addParameter(outputParameter, eParameterDirection.Output)\" title=\"Add a parameter to the array\"\n\t\t\t\t\t\t\t\t\t class=\"mr-1\"></d-button>\n\t\t\t\t\t\t\t\t\t<d-button iconClass=\"fa fa-eraser\"  text=\"Clear\" (click)=\"clearArray(outputParameter)\"></d-button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<output-parameter *ngIf=\"outputParameter.controls.arrayParameters.controls.length === 0\" [outputParameterForm]=\"outputParameter\"\n\t\t\t\t\t\t\t [outputColumns]=\"outputColumns\" [datalinkTargets]=\"datalinkTargets\" [allowAdd]=\"false\" [allowRemove]=\"false\" [rank]=\"outputParameter.value.rank\">\n\t\t\t\t\t\t\t</output-parameter>\n\t\t\t\t\t\t\t<div *ngFor=\"let arrayParameter of outputParameter.controls.arrayParameters.controls; let j = index\" class=\"pl-2\"\n\t\t\t\t\t\t\t [ngStyle]=\"{'z-index': 200-j, 'position': 'relative'}\">\n\t\t\t\t\t\t\t\t<output-parameter [outputParameterForm]=\"arrayParameter\" [outputColumns]=\"outputColumns\" [datalinkTargets]=\"datalinkTargets\" [allowAdd]=\"true\"\n\t\t\t\t\t\t\t\t [allowRemove]=\"true\" (addParameter)=\"addParameter(outputParameter, eParameterDirection.Output, j)\"\n\t\t\t\t\t\t\t\t (removeParameter)=\"removeParameter(outputParameter, j)\">\n\t\t\t\t\t\t\t\t</output-parameter>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<output-parameter *ngIf=\"outputParameter.value.rank == 0\" [outputParameterForm]=\"outputParameter\" [outputColumns]=\"outputColumns\" [datalinkTargets]=\"datalinkTargets\" \n\t\t\t\t\t\t [allowAdd]=\"false\" [allowRemove]=\"false\">\n\t\t\t\t\t\t</output-parameter>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t</form>\n\t</d-widget-section>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HubCache, InvalidActions, FunctionCache} from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { LogFactory, eLogLevel } from '../../../../../logging';\nimport { TypeCodes } from '../../../hub.remote.models';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { FunctionParameter, eFunctionType, eParameterDirection, eGenericType, DexihDatalinkColumn, FunctionReference,\n  DexihCustomFunction, eTransformType, DexihDatalinkTable, DexihDatalinkTransformItem, eTransformItemType,\n  DexihFunctionParameter, eTypeCode, DexihCustomFunctionParameter,\n  DexihFunctionArrayParameter, RemoteLibraries, eInvalidActionItems, eErrorActionItems, DexihDatalinkTarget } from '../../../../shared/shared.models';\nimport { CancelToken } from '../../../../+auth/auth.models';\n\nexport class ArrayParameter {\n  public name: string;\n  public functionParameter: FunctionParameter;\n\n  public inputParameterForms: FormGroup[] = [];\n  public outputParameterForms: FormGroup[] = [];\n\n  public parameterItems: ArrayParameterItem[] = [];\n\n  public resetItems() {\n    let inputArray = <FormArray>this.inputParameterForms[0].controls.arrayParameters;\n    for (let i = 0; i < inputArray.controls.length; i++) {\n      let item = new ArrayParameterItem();\n      this.inputParameterForms.forEach(inputParameterForm => {\n        let array = <FormArray>inputParameterForm.controls.arrayParameters;\n        item.inputItems.push(<FormGroup>array.controls[i]);\n      });\n      this.outputParameterForms.forEach(outputParameterForm => {\n        let array = <FormArray>outputParameterForm.controls.arrayParameters;\n        item.outputItems.push(<FormGroup>array.controls[i]);\n      });\n\n      this.parameterItems.push(item);\n    }\n  }\n}\n\nexport class ArrayParameterItem {\n  public inputItems: FormGroup[] = [];\n  public outputItems: FormGroup[] = [];\n}\n\n\n@Component({\n\n  selector: 'dexih-function-edit',\n  templateUrl: './standard-function-edit.component.html'\n})\nexport class StandardFunctionEditComponent implements OnInit, OnDestroy {\n  public hubCache: HubCache;\n  public remoteLibraries: RemoteLibraries;\n\n  eFunctionType = eFunctionType;\n  eParameterDirection = eParameterDirection;\n  eTypeCode = eTypeCode;\n  typeCodes = TypeCodes;\n\n  public pageTitle: string;\n\n  private _subscription: Subscription;\n  private _returnParameterSubscription: Subscription;\n  private _functionSubscription: Subscription;\n  private _saveSubscription: Subscription;\n\n  private cancelToken: CancelToken = new CancelToken();\n\n  transformFunctionType: eFunctionType;\n  datalinkTransformItemKey: number;\n  datalinkKey: number;\n  datalinkTransformKey: number;\n\n  datalinkForm: FormGroup;\n  datalinkTransformForm: FormGroup;\n  datalinkTransformItemForm: FormGroup;\n  // returnParameterForm: FormGroup;\n  resultReturnParameterForm: FormGroup;\n\n  useCustomFunction: boolean;\n\n  invalidActions = InvalidActions;\n  functionCache = FunctionCache;\n  eGenericType = eGenericType;\n\n  newDatalinkTransformItemForm: FormGroup;\n\n  inputColumns: Array<DexihDatalinkColumn>;\n  outputColumns: Array<DexihDatalinkColumn>;\n  datalinkTargets: Array<DexihDatalinkTarget>;\n\n  functionCategory: string;\n  functionCategories: Array<string>;\n  functions: Array<FunctionReference>;\n  filteredFunctions: Array<FunctionReference>;\n  selectedFunction: FunctionReference;\n  customFunctions: Array<DexihCustomFunction>;\n  selectedCustomFunction: DexihCustomFunction;\n\n  variables = [];\n\n  allowOutput = false;\n  allowReturn = true;\n\n  inputParameterControls: Array<FormGroup>;\n  outputParameterControls: Array<FormGroup>;\n\n  arrayParameters: ArrayParameter[] = [];\n\n  eInvalidActionItems = eInvalidActionItems.filter(c => c.key > 0);\n  eErrorActionItems = eErrorActionItems.filter(c => c.key > 0);\n\n  logger = new LogFactory('standard-function-edit');\n\n  isJoin = false;\n\n  constructor(\n    private hubService: HubService,\n    private authService: AuthService,\n    private editDatalinkService: DatalinkEditService,\n    private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n        this.hubService.getRemoteLibrariesObservable(),\n        this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n      ).subscribe(result => {\n        this.pageTitle = result[0]['pageTitle'];\n        let params = result[1];\n        this.hubCache = result[2];\n        this.remoteLibraries = result[3]\n        this.datalinkForm = result[4];\n\n        this.logger.LogC(() => `OnInit`, eLogLevel.Trace);\n\n        if (this.hubCache && this.hubCache.isLoaded() && this.datalinkForm\n          && this.remoteLibraries && this.remoteLibraries.functions.length > 0) {\n\n          this.transformFunctionType = +params['functionType'];\n          if (this.transformFunctionType === eFunctionType.Validate) {\n            this.datalinkTransformForm = this.editDatalinkService.getValidationTransform();\n            this.datalinkTransformKey = this.datalinkTransformForm.value.key;\n          } else {\n            this.datalinkTransformKey = +params['datalinkTransformKey'];\n            this.datalinkTransformForm = this.editDatalinkService.getDatalinkTransform(this.datalinkTransformKey);\n          }\n\n          if (!this.datalinkTransformForm) {\n            this.authService.navigateUp();\n            return;\n          }\n\n          this.variables = this.editDatalinkService.getVariables();\n\n          this.useCustomFunction = this.datalinkTransformForm.controls.customFunctionKey ? true : false;\n          this.datalinkTransformItemKey = +params['datalinkTransformItemKey'];\n\n          this.isJoin = this.datalinkTransformForm.value.transformType === eTransformType.Join ||\n            this.datalinkTransformForm.value.transformType === eTransformType.Lookup;\n\n          // if this is a join transform, then the use the join columns for the input.\n          if (this.isJoin) {\n            const table = <DexihDatalinkTable>this.datalinkTransformForm.controls.joinDatalinkTable.value;\n            if (!table) {\n              this.hubService.addHubErrorMessage('The join table could not be found.');\n              this.authService.navigateUp();\n              return;\n            }\n\n            this.inputColumns = table.dexihDatalinkColumns;\n          } else {\n            let nodeDatalinkColumn = <DexihDatalinkColumn> this.datalinkTransformForm.controls.nodeDatalinkColumn.value;\n            let nodeDatalinkColumnKey = nodeDatalinkColumn ? nodeDatalinkColumn.key : null;\n            let io = new InputOutputColumns();\n            if (nodeDatalinkColumnKey) {\n              let inputColumns = <DexihDatalinkColumn[]> this.datalinkTransformForm.controls.runTime.value.inputColumns;\n              this.inputColumns = io.getAvailableColumns(inputColumns, nodeDatalinkColumnKey, 0);\n            } else {\n              this.inputColumns = this.datalinkTransformForm.controls.runTime.value.inputColumns;\n            }\n          }\n\n          this.outputColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n          this.datalinkTargets = this.datalinkForm.controls.dexihDatalinkTargets.value;\n\n          if (this.datalinkTransformItemKey) {\n            this.datalinkTransformItemForm = this.editDatalinkService\n              .getDatalinkTransformItem(this.datalinkTransformForm, this.datalinkTransformItemKey);\n\n            if (!this.datalinkTransformItemForm) {\n              this.authService.navigateUp();\n              return;\n            }\n\n            // create a copy of the form item to allow for cancel.\n            this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n              .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, this.datalinkTransformItemForm.value);\n\n            if (this.datalinkTransformItemForm.controls.customFunctionKey.value) {\n                this.selectCustomFunction(this.datalinkTransformItemForm.value.customFunctionKey, false);\n            } else {\n            let selectedFunction = this.remoteLibraries.functions.find(c =>\n              c.functionClassName === this.datalinkTransformItemForm.value.functionClassName &&\n              c.functionMethodName === this.datalinkTransformItemForm.value.functionMethodName &&\n              c.functionAssemblyName === this.datalinkTransformItemForm.value.functionAssemblyName\n            );\n\n            // this.selectedFunction = selectedFunction;\n              this.selectFunction(selectedFunction, false);\n            // this.refreshParameters();\n            }\n\n          } else {\n            let newItem = new DexihDatalinkTransformItem();\n            newItem.datalinkTransformKey = this.datalinkTransformKey;\n            newItem.transformItemType = eTransformItemType.BuiltInFunction;\n\n            this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n              .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, newItem);\n          }\n\n          switch (this.transformFunctionType) {\n            case eFunctionType.Condition:\n            case eFunctionType.JoinCondition:\n              this.functions = this.remoteLibraries.functions.filter(c => c.functionType === eFunctionType.Condition);\n              this.allowOutput = false;\n              break;\n            case eFunctionType.Validate:\n              this.functions = this.remoteLibraries.functions\n                .filter(c => c.functionType === eFunctionType.Condition || c.functionType === eFunctionType.Validate);\n              this.allowOutput = true;\n              break;\n            case eFunctionType.Map:\n              this.functions = this.remoteLibraries.functions\n                .filter(c => c.functionType === eFunctionType.Condition ||\n                  c.functionType === eFunctionType.Validate ||\n                  c.functionType === eFunctionType.Map);\n\n              this.allowOutput = true;\n              break;\n            case eFunctionType.Aggregate:\n              this.functions = this.remoteLibraries.functions.filter(c => c.functionType === eFunctionType.Aggregate);\n              this.allowOutput = true;\n              break;\n            case eFunctionType.Series:\n              this.functions = this.remoteLibraries.functions.filter(c => c.functionType === eFunctionType.Series ||\n                c.functionType === eFunctionType.Aggregate);\n              this.allowOutput = true;\n              break;\n            case eFunctionType.Rows:\n              this.functions = this.remoteLibraries.functions.filter(c => c.functionType === eFunctionType.Rows);\n              this.allowOutput = true;\n              this.allowReturn = true;\n              break;\n            case eFunctionType.Profile:\n              this.functions = this.remoteLibraries.functions.filter(c => c.functionType === eFunctionType.Profile);\n              this.allowOutput = false;\n              break;\n            default:\n              this.functions = null;\n          }\n\n          this.functionCategories = Array.from(new Set(this.functions.map(c => c.category)));\n          this.filteredFunctions = this.functions;\n          this.customFunctions = this.hubCache.hub.dexihCustomFunctions;\n          if (this.datalinkTransformItemForm && this.datalinkTransformItemForm.value.customFunctionKey) {\n            this.useCustomFunction = true;\n            this.selectedCustomFunction = this.hubCache.hub.dexihCustomFunctions\n              .find(c => c.key === this.datalinkTransformItemForm.value.customFunctionKey);\n          }\n\n          if (this._functionSubscription) { this._functionSubscription.unsubscribe(); }\n          this._functionSubscription = this.newDatalinkTransformItemForm.controls.customFunctionKey.valueChanges\n            .subscribe(customFunctionKey => {\n              this.selectCustomFunction(customFunctionKey, false);\n            });\n        }\n\n        if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n        this._saveSubscription = this.editDatalinkService.savingDatalink.subscribe(value => {\n            if(value) {\n                this.apply();\n            }\n        });\n\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Standard Function Edit');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._returnParameterSubscription) { this._returnParameterSubscription.unsubscribe(); }\n    if (this._functionSubscription) { this._functionSubscription.unsubscribe(); }\n    if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n    this.cancelToken.cancel();\n  }\n\n  updateCategory(value) {\n    if (value) {\n      this.filteredFunctions = this.functions.filter(c => c.category === value);\n    } else {\n      this.filteredFunctions = this.functions;\n    }\n  }\n\n  canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      if (this.newDatalinkTransformItemForm && !this.newDatalinkTransformItemForm.pristine) {\n        this.authService.confirmDialog('The function has changed',\n          'The function has changed.  Do you want to apply the changes and continue?')\n          .then((confirm) => {\n              if(confirm) {\n                this.apply();\n              }\n              resolve(confirm);\n            }).catch(() => {\n              resolve(false);\n            });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  private parametersArray() {\n    return <FormArray>this.newDatalinkTransformItemForm.controls.dexihFunctionParameters;\n  }\n\n  refreshParameters() {\n    let parametersArray = this.parametersArray();\n\n    // convoluted sort below allows sorting by the direction then the position\n    this.inputParameterControls = <FormGroup[]>parametersArray.controls\n      .sort((a, b) => a.value.position - b.value.position)\n      .filter(c => (c.value.direction === eParameterDirection.Input || c.value.direction === eParameterDirection.ResultInput\n        || c.value.direction === eParameterDirection.Join));\n\n    // convoluted sort below allows sorting by the direction then the position\n    this.outputParameterControls = <FormGroup[]>parametersArray.controls\n      .sort((a, b) => a.value.position - b.value.position)\n      .filter(c => HubCache.parameterIsOutput(c.value));\n\n    // don't include return value (which will determine pass/fail) for validation transforms.\n    if (this.transformFunctionType === eFunctionType.Validate) {\n      this.outputParameterControls = this.outputParameterControls.filter(c => c.value.direction !== eParameterDirection.ReturnValue);\n    }\n\n    this.arrayParameters = [];\n\n    if (this.selectedFunction) {\n\n      this.selectedFunction.inputParameters?.filter(c => c.linkedName).forEach(parameter => {\n        this.addArrayParameter(parameter, true);\n      });\n\n      this.selectedFunction.outputParameters?.filter(c => c.linkedName).forEach(parameter => {\n        this.addArrayParameter(parameter, false);\n      });\n\n      this.selectedFunction.resultInputParameters?.filter(c => c.linkedName).forEach(parameter => {\n        this.addArrayParameter(parameter, true);\n      });\n\n      this.selectedFunction.resultOutputParameters?.filter(c => c.linkedName).forEach(parameter => {\n        this.addArrayParameter(parameter, false);\n      });\n\n      this.selectedFunction.resultReturnParameters?.filter(c => c.linkedName).forEach(parameter => {\n        this.addArrayParameter(parameter, false);\n      });\n\n    }\n\n    this.arrayParameters.forEach(arrayParameter => arrayParameter.resetItems());\n  }\n\n  private addArrayParameter(parameter: FunctionParameter, isInput: boolean) {\n    let arrayParameter = this.arrayParameters.find(c => c.name === parameter.linkedName);\n    if (!arrayParameter) {\n      arrayParameter = new ArrayParameter();\n      arrayParameter.name = parameter.linkedName;\n      arrayParameter.functionParameter = parameter;\n      this.arrayParameters.push(arrayParameter);\n    }\n\n    if (isInput) {\n      let controls = this.inputParameterControls.find(c => c.controls.name.value === parameter.name);\n      arrayParameter.inputParameterForms.push(controls);\n    } else {\n      let controls = this.outputParameterControls.find(c => c.controls.name.value === parameter.name);\n      arrayParameter.outputParameterForms.push(controls);\n    }\n\n  }\n\n  // when a new standard function is selected\n  // reset all the parameters\n  selectFunction(value: FunctionReference, markAsDirty: boolean) {\n    this.selectedFunction = value;\n\n    if (value === null || value === undefined) { return; }\n\n    this.newDatalinkTransformItemForm.controls.functionAssemblyName.setValue(this.selectedFunction.functionAssemblyName);\n    this.newDatalinkTransformItemForm.controls.functionClassName.setValue(this.selectedFunction.functionClassName);\n    this.newDatalinkTransformItemForm.controls.functionMethodName.setValue(this.selectedFunction.functionMethodName);\n    this.newDatalinkTransformItemForm.controls.targetDatalinkColumn.setValue(null);\n\n    if (!this.newDatalinkTransformItemForm.controls.genericTypeCode.value) {\n      if (this.selectedFunction.genericTypeDefault) {\n        this.newDatalinkTransformItemForm.controls.genericTypeCode.setValue(this.selectedFunction.genericTypeDefault);\n      } else {\n        if (this.selectedFunction.genericType === eGenericType.Numeric) {\n          this.newDatalinkTransformItemForm.controls.genericTypeCode.setValue(eTypeCode.Decimal);\n        } else {\n          this.newDatalinkTransformItemForm.controls.genericTypeCode.setValue(eTypeCode.String);\n        }\n      }\n    }\n\n    switch (this.selectedFunction.genericType) {\n      case eGenericType.All:\n        this.typeCodes = TypeCodes;\n        break;\n      case eGenericType.Numeric:\n        this.typeCodes = TypeCodes.filter(c => c.isNumeric);\n        break;\n      case eGenericType.String:\n        this.typeCodes = TypeCodes.filter(c => c.isString);\n        break;\n      case eGenericType.None:\n        this.typeCodes = [];\n    }\n\n    if (this.selectedFunction) {\n      let parameters = this.parametersArray();\n      let existingParameters: any[] = [];\n\n      while (parameters.length) {\n        existingParameters.push(parameters.value[0])\n        parameters.removeAt(0);\n      }\n\n      if (this.selectedFunction.inputParameters) {\n        this.selectedFunction.inputParameters.forEach((param: FunctionParameter, index: number) => {\n          if (param) {\n            parameters.push(\n                this.newParameter(existingParameters, param, index, this.isJoin ? eParameterDirection.Join : eParameterDirection.Input,\n                    this.selectedFunction.genericTypeDefault));\n          }\n        });\n      }\n\n      if (this.selectedFunction.outputParameters) {\n        this.selectedFunction.outputParameters.forEach((param: FunctionParameter, index: number) => {\n          if (param) {\n            if (param) {\n              parameters.push(this.newParameter(existingParameters, param, index + 100, eParameterDirection.Output,\n                this.selectedFunction.genericTypeDefault));\n            }\n          }\n        });\n      }\n\n      if (this.selectedFunction.resultInputParameters) {\n        this.selectedFunction.resultInputParameters.forEach((param: FunctionParameter, index: number) => {\n          if (param) {\n            parameters.push(\n                this.newParameter(existingParameters, param, index + 200, eParameterDirection.ResultInput,\n                  this.selectedFunction.genericTypeDefault));\n          }\n        });\n      }\n\n      if (this.selectedFunction.resultOutputParameters) {\n        this.selectedFunction.resultOutputParameters.forEach((param: FunctionParameter, index: number) => {\n          if (param) {\n            if (param) {\n              parameters.push(\n                  this.newParameter(existingParameters, param, index + 300, eParameterDirection.ResultOutput,\n                    this.selectedFunction.genericTypeDefault));\n            }\n          }\n        });\n      }\n\n      if (this.selectedFunction.returnParameters) {\n        if (this.allowReturn && this.selectedFunction.returnParameters.length > 0) {\n          this.selectedFunction.returnParameters.forEach((parameter: FunctionParameter, index: number) => {\n            parameters.push(this.newParameter(existingParameters, parameter, index + 400,\n              eParameterDirection.ReturnValue, this.selectedFunction.genericTypeDefault ));\n          });\n        }\n      }\n\n      if (this.selectedFunction.resultReturnParameters) {\n        if (this.allowReturn && this.selectedFunction.resultReturnParameters.length > 0) {\n            this.selectedFunction.resultReturnParameters.forEach(parameter => {\n            parameters.push(this.newParameter(existingParameters, parameter, 0,\n                eParameterDirection.ResultReturnValue, this.selectedFunction.genericTypeDefault));\n          });\n        }\n      }\n\n      this.refreshParameters();\n\n      if (markAsDirty) {\n        this.newDatalinkTransformItemForm.markAsDirty();\n      }\n    } else {\n      this.selectedFunction = null;\n    }\n  }\n\n  private newParameter(existingParameters: DexihFunctionParameter[],\n    param: any, index: number, direction: eParameterDirection, genericTypeDefault: eTypeCode): FormGroup {\n\n    let existingValue = existingParameters.find(c => c.name === param.parameterName)\n\n    let newParameter = new DexihFunctionParameter();\n    // newParameter.datalinkTransformItemKey = this.datalinkTransformItemKey;\n    newParameter.name = param.parameterName;\n    newParameter.rank = param.rank;\n    newParameter.direction = direction;\n    newParameter.isGeneric = param.isGeneric;\n    newParameter.position = index;\n    newParameter.key = this.hubCache.getNextSequence();\n    newParameter['runTime'] = {functionParameter: param};\n\n    if (existingValue) {\n      newParameter.key = existingValue.key;\n      newParameter.datalinkColumn = existingValue.datalinkColumn;\n      newParameter.value = existingValue.value;\n      newParameter.dataType = param.isGeneric ? existingValue.dataType : param.dataType;\n      existingValue.arrayParameters.forEach(p => {\n        p['runTime'] = {functionParameter: param};\n      });\n      newParameter.arrayParameters = existingValue.arrayParameters;\n    } else {\n      newParameter.value = param.defaultValue;\n      newParameter.dataType = param.isGeneric ? genericTypeDefault : param.dataType;\n    }\n\n    newParameter.isValid = true;\n\n    let newParameterForm = this.editDatalinkService.hubFormsService.datalinkFunctionParametersFormGroup(newParameter);\n    return newParameterForm;\n  }\n\n  // when a new standard function is selected\n  // reset all the parameters\n  selectCustomFunction(customFunctionKey: number, markAsDirty: boolean) {\n    this.selectedCustomFunction = this.hubCache.hub.dexihCustomFunctions.find(c => c.key === customFunctionKey);\n\n    if (this.selectedCustomFunction) {\n      let parameters = this.parametersArray();\n      let existingParameters: any[] = [];\n\n      while (parameters.length) {\n        existingParameters.push(parameters.value[0]);\n        parameters.removeAt(0);\n      }\n\n      this.selectedCustomFunction.dexihCustomFunctionParameters\n        .filter(c => (c.direction === eParameterDirection.Input || c.direction === eParameterDirection.Join)  && c.isValid)\n        .forEach((param: DexihCustomFunctionParameter, index: number) => {\n          if (param) {\n            let newParameterForm =\n              this.newParameter(existingParameters, param, index, this.isJoin ? eParameterDirection.Join : eParameterDirection.Input,\n                this.selectedCustomFunction.genericTypeDefault);\n            parameters.push(newParameterForm);\n          }\n        });\n\n      this.selectedCustomFunction.dexihCustomFunctionParameters.filter(c => c.direction === eParameterDirection.Output && c.isValid)\n        .forEach((param: DexihCustomFunctionParameter, index: number) => {\n          if (param) {\n            let newParameterForm =\n              this.newParameter(existingParameters, param, index, eParameterDirection.Output,\n                this.selectedCustomFunction.genericTypeDefault);\n            parameters.push(newParameterForm);\n          }\n        });\n\n        let returnParameter = new DexihFunctionParameter();\n        returnParameter.dataType = this.selectedCustomFunction.returnType;\n        returnParameter.name = 'Return';\n        returnParameter.direction = eParameterDirection.Output;\n        returnParameter.rank = 0;\n        returnParameter.position = -1;\n        returnParameter.isValid = true;\n        let newParameterForm2 = this.newParameter(existingParameters, returnParameter, 0, eParameterDirection.ReturnValue,\n          this.selectedCustomFunction.genericTypeDefault);\n        parameters.push(newParameterForm2);\n\n      this.refreshParameters();\n\n      if (markAsDirty) {\n        this.newDatalinkTransformItemForm.markAsDirty();\n      }\n    }\n  }\n\n  private createArrayParameter(parentParameter: DexihFunctionArrayParameter,\n    direction: eParameterDirection, position: number = null, genericTypeDefault: eTypeCode):\n    DexihFunctionArrayParameter {\n    let param = parentParameter['runTime'].functionParameter;\n    let newParameter = new DexihFunctionArrayParameter();\n    newParameter.isGeneric = param.isGeneric;\n    newParameter.dataType = param.isGeneric ? genericTypeDefault : parentParameter.dataType;\n    newParameter.position = position ? position + 1 : 10000000;\n    newParameter.name = param.name;\n    newParameter.direction = direction;\n    newParameter.rank = 0;\n    newParameter.key = this.hubCache.getNextSequence();\n    newParameter.datalinkColumn = null;\n    newParameter.value = param.defaultValue;\n    newParameter.isValid = true;\n    newParameter['runTime'] = {functionParameter: param};\n\n    return newParameter;\n  }\n\n  addParameter(parentParameterForm: FormGroup, direction: eParameterDirection, position: number = null): FormGroup {\n    if (direction === eParameterDirection.Input && this.isJoin) { direction = eParameterDirection.Join; }\n    let parentParameter = parentParameterForm.value;\n    let newParameter = this.createArrayParameter(parentParameter, direction, 0,\n      this.newDatalinkTransformItemForm.controls.genericTypeCode.value);\n    let newParameterForm = this.editDatalinkService.hubFormsService.datalinkFunctionArrayParametersFormGroup(newParameter);\n    let arrayForm = <FormArray>parentParameterForm.controls.arrayParameters;\n    if (position !== null) {\n      arrayForm.insert(position + 1, newParameterForm);\n    } else {\n      arrayForm.push(newParameterForm);\n    }\n\n    // reset the positions\n    arrayForm.controls.forEach((p, index) => {\n      (<FormGroup>p).controls.position.setValue(index * 10);\n    });\n\n    this.refreshParameters()\n    return newParameterForm;\n  }\n\n  addInputOutputParameter(arrayParameter: ArrayParameter, position: number = null) {\n    let item = new ArrayParameterItem();\n\n    arrayParameter.inputParameterForms.forEach(parameterForm => {\n      let parameter = this.addParameter(parameterForm, this.isJoin ? eParameterDirection.Join : eParameterDirection.Input, position);\n      item.inputItems.push(parameter);\n    });\n\n    arrayParameter.outputParameterForms.forEach(parameterForm => {\n      let parameter = this.addParameter(parameterForm, eParameterDirection.Output, position);\n      item.outputItems.push(parameter);\n    });\n\n    if (position !== null) {\n      arrayParameter.parameterItems.splice(position, 0, item);\n    } else {\n      arrayParameter.parameterItems.push(item);\n    }\n  }\n\n  removeParameter(parentParameterForm: FormGroup, position: number) {\n    let arrayForm = <FormArray>parentParameterForm.controls.arrayParameters;\n    if (position > -1) {\n      arrayForm.removeAt(position);\n      this.newDatalinkTransformItemForm.markAsDirty();\n      this.refreshParameters();\n    }\n  }\n\n  removeInputOutputParameter(arrayParameter: ArrayParameter, position: number = null) {\n\n    arrayParameter.inputParameterForms.forEach(parameterForm => {\n      this.removeParameter(parameterForm, position);\n    });\n\n    arrayParameter.outputParameterForms.forEach(parameterForm => {\n      this.removeParameter(parameterForm, position);\n    });\n\n    if (position !== null) {\n      arrayParameter.parameterItems.splice(position, 1);\n    } else {\n      arrayParameter.parameterItems.splice(arrayParameter.parameterItems.length - 1, 1);\n    }\n  }\n\n  addAllColumns(parentParameterForm: FormGroup) {\n    this.clearArray(parentParameterForm);\n\n    let isLabel = parentParameterForm.value.runTime.functionParameter.isLabel;\n    let parentParameter = parentParameterForm.value;\n    let arrayForm = <FormArray>parentParameterForm.controls.arrayParameters;\n    let position = 1;\n    this.inputColumns.forEach(column => {\n      let newParameter = this.createArrayParameter(parentParameter,\n        this.isJoin ? eParameterDirection.Join : eParameterDirection.Input, position++, this.selectedFunction.genericTypeDefault);\n        if (isLabel) {\n          newParameter.value = column.name;\n        } else {\n          newParameter.datalinkColumn = column;\n        }\n\n      let newParameterForm = this.editDatalinkService.hubFormsService.datalinkFunctionArrayParametersFormGroup(newParameter);\n      arrayForm.push(newParameterForm);\n    });\n    this.refreshParameters();\n  }\n\n  addAllInputOutputColumns(arrayParameter: ArrayParameter) {\n    // add the first parameter\n    this.addAllColumns(arrayParameter.inputParameterForms[0]);\n    let inputArrayForm = <FormArray>arrayParameter.inputParameterForms[0].controls.arrayParameters;\n\n    if (arrayParameter.inputParameterForms.length > 1) {\n      this.clearArray(arrayParameter.inputParameterForms[1]);\n      for (let i = 0; i < inputArrayForm.length; i++) {\n        let parameter = this.addParameter(arrayParameter.inputParameterForms[1],\n          this.isJoin ? eParameterDirection.Join : eParameterDirection.Input);\n\n        // if the first parameter is a label, then map the matching column to the second input parameter\n        if (arrayParameter.inputParameterForms[0].value.runTime.functionParameter.isLabel) {\n          parameter.controls.datalinkColumn.setValue(this.inputColumns[i]);\n        }\n      }\n\n      // add any other parameters with default values.\n      for (let i = 2; i < arrayParameter.inputParameterForms.length; i++) {\n        this.clearArray(arrayParameter.inputParameterForms[i]);\n        for (let j = 0; j < inputArrayForm.length; j++) {\n          let parameter = this.addParameter(arrayParameter.inputParameterForms[i],\n            this.isJoin ? eParameterDirection.Join : eParameterDirection.Input);\n            parameter.controls.value.setValue(arrayParameter.inputParameterForms[i].value.runTime.functionParameter.defaultValue);\n        }\n      }\n    }\n\n    // add any output columns of the same length.\n    if (arrayParameter.outputParameterForms.length > 0) {\n      for (let i = 0; i < arrayParameter.outputParameterForms.length; i++) {\n        this.clearArray(arrayParameter.outputParameterForms[i]);\n        for (let j = 0; j < inputArrayForm.length; j++) {\n        }\n      }\n    }\n\n    arrayParameter.resetItems();\n  }\n\n  clearArray(parameterForm: FormGroup) {\n    let arrayForm = <FormArray>parameterForm.controls.arrayParameters;\n    for (let i = arrayForm.controls.length - 1; i >= 0; i--) {\n      arrayForm.removeAt(i);\n    }\n    this.refreshParameters();\n  }\n\n  clearInputOutputArray(arrayParameter: ArrayParameter) {\n    arrayParameter.inputParameterForms.forEach(form => {\n      this.clearArray(form);\n    });\n\n    arrayParameter.outputParameterForms.forEach(form => {\n      this.clearArray(form);\n    });\n  }\n\n\n  async importInputOutputMappings(arrayParameter: ArrayParameter) {\n    let result = await this.editDatalinkService\n      .importFunctionMappings(this.datalinkTransformKey, this.newDatalinkTransformItemForm.value, this.cancelToken);\n\n      if (result === null) { return; }\n\n      let inputArrayForm = <FormArray>arrayParameter.inputParameterForms[0].controls.arrayParameters;\n\n      this.clearArray(arrayParameter.inputParameterForms[0]);\n      for (let i = 0; i < result.length; i++) {\n        let parameter = this.addParameter(arrayParameter.inputParameterForms[0],\n          this.isJoin ? eParameterDirection.Join : eParameterDirection.Input);\n\n          parameter.controls.value.setValue(result[i]);\n\n        // // if the first parameter is a label, then map the matching column to the second input parameter\n        // if (arrayParameter.inputParameterForms[0].value.runTime.functionParameter.isLabel) {\n        //   parameter.controls.datalinkColumn.setValue(this.inputColumns[i]);\n        // }\n      }\n\n      // add any other parameters with default values.\n      for (let i = 1; i < arrayParameter.inputParameterForms.length; i++) {\n        this.clearArray(arrayParameter.inputParameterForms[i]);\n        for (let j = 0; j < inputArrayForm.length; j++) {\n          let parameter = this.addParameter(arrayParameter.inputParameterForms[i],\n            this.isJoin ? eParameterDirection.Join : eParameterDirection.Input);\n            parameter.controls.value.setValue(arrayParameter.inputParameterForms[i].value.runTime.functionParameter.defaultValue);\n        }\n      }\n\n      // add any output columns of the same length.\n      if (arrayParameter.outputParameterForms.length > 0) {\n        for (let i = 0; i < arrayParameter.outputParameterForms.length; i++) {\n          this.clearArray(arrayParameter.outputParameterForms[i]);\n          for (let j = 0; j < inputArrayForm.length; j++) {\n          }\n        }\n      }\n\n      arrayParameter.resetItems();\n  }\n\n  autoMap() {\n    this.outputParameterControls.forEach(param => {\n      let newColumn = new DexihDatalinkColumn();\n      newColumn.key = this.hubService.getHubCache().getNextSequence();\n      newColumn.position = 1000 - newColumn.key;\n\n      let paramValue = <DexihFunctionParameter> param.value;\n\n      newColumn.dataType = paramValue.dataType;\n      newColumn.allowDbNull = true;\n      newColumn.name = paramValue['runTime'].functionParameter.name;\n      newColumn.logicalName = paramValue['runTime'].functionParameter.name;\n      newColumn.rank = paramValue.rank;\n\n      param.controls.datalinkColumn.setValue(newColumn);\n      this.newDatalinkTransformItemForm.markAsDirty();\n    })\n  }\n\n  cancel() {\n    this.authService.navigateUp();\n  }\n\n  apply() {\n    this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, this.newDatalinkTransformItemForm);\n    this.newDatalinkTransformItemForm.markAsPristine();\n  }\n\n  applyExit() {\n    this.apply();\n    this.authService.navigateUp();\n  }\n\n}\n\n","import { Component, Input, Output, OnInit, OnDestroy, EventEmitter, OnChanges } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { HubService } from '../../../hub.service';\nimport { Subscription} from 'rxjs';\nimport { TypeFunctions, TypeCodes, eBasicType } from '../../../hub.remote.models';\nimport { DexihTableColumn, DexihDatalinkColumn, eTypeCode, DexihDatalinkTarget, DexihDatalinkTable, DexihTable } from '../../../../shared/shared.models';\nimport { DatalinkEditService } from '../datalink-edit.service';\n\n@Component({\n\n    selector: 'output-parameter',\n    templateUrl: './output-parameter.component.html'\n})\nexport class OutputParameterComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input() public allowDataTypeSelect = false;\n    @Input() public allowNameSelect = false;\n    @Input() public allowAdd = false;\n    @Input() public allowRemove = false;\n    @Input() public outputParameterForm: FormGroup = null;\n    @Input() public outputColumns: Array<DexihTableColumn> = null;\n    @Input() public datalinkTargets: Array<DexihDatalinkTarget> = null;\n    @Input() public updateParameterName = false;\n    @Input() public rank = 0;\n\n    @Output() public addParameter: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public removeParameter: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public hasChanged: EventEmitter<any> = new EventEmitter<any>();\n\n    private _datalinkColumnSubscription: Subscription;\n    private _parameterSubscription: Subscription;\n    private _dataTypeSubscription: Subscription;\n\n    newColumn: DexihDatalinkColumn;\n    newColumnUpdating = false;\n    tmpColumnKey: number;\n\n    outputTables: Array<DexihTable>;\n\n    type: TypeFunctions;\n    eBasicType = eBasicType;\n    eTypeCode = eTypeCode;\n\n    typeCodes = TypeCodes;\n\n    public errors;\n\n    ignoreChanges = false;\n\n    constructor(public hubService: HubService, public editDatalinkService: DatalinkEditService) {\n    }\n\n    ngOnInit() {\n        this.updateItems();\n        this.errors = this.editDatalinkService.hubFormsService.getFormErrorMessages(this.outputParameterForm, true);\n\n        if (this.updateParameterName) {\n            this._datalinkColumnSubscription = this.outputParameterForm.controls.datalinkColumn.valueChanges.subscribe(value => {\n                this.outputParameterForm.controls.dataType.setValue(value.dataType);\n                this.outputParameterForm.controls.name.setValue(value.name);\n            });\n        }\n        this._parameterSubscription = this.outputParameterForm.valueChanges.subscribe(param => {\n            this.errors = this.editDatalinkService.hubFormsService.getFormErrorMessages(this.outputParameterForm, true);\n            this.updateItems();\n        });\n\n        this._dataTypeSubscription = this.outputParameterForm.controls.dataType.valueChanges.subscribe(dataType => {\n            if (this.newColumn) {\n                this.newColumn.dataType = dataType;\n            }\n        });\n    }\n\n    ngOnChanges() {\n        let table = new DexihTable();\n        table.name = 'Output Columns';\n        table.dexihTableColumns = this.outputColumns;\n\n        this.outputTables = [table];\n\n        if (this.datalinkTargets) {\n            this.datalinkTargets.forEach(target => {\n                this.outputTables.push(target['table']);\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._datalinkColumnSubscription) { this._datalinkColumnSubscription.unsubscribe(); }\n        if (this._parameterSubscription) { this._parameterSubscription.unsubscribe(); }\n        if (this._dataTypeSubscription) { this._dataTypeSubscription.unsubscribe(); }\n    }\n\n    updateItems() {\n        this.type = new TypeFunctions(this.outputParameterForm.value.dataType, null, null, null);\n    }\n\n    add() {\n        this.addParameter.emit(this.outputParameterForm);\n    }\n\n    remove() {\n        this.removeParameter.emit(this.outputParameterForm);\n    }\n\n    fixDataType() {\n        const column = this.outputParameterForm.controls.datalinkColumn.value;\n        column.dataType = this.outputParameterForm.controls.dataType.value;\n        let format = this.outputParameterForm.controls.runTime?.value?.functionParameter?.defaultFormat;\n        if (format) {\n            column.format = format;\n        }\n        this.outputParameterForm.updateValueAndValidity();\n        this.errors = this.editDatalinkService.hubFormsService.getFormErrorMessages(this.outputParameterForm, true);\n    }\n\n    updateNewColumn(value: {textValue: string, item: any}) {\n        if (value.item === null && !this.newColumnUpdating) {\n            this.newColumnUpdating = true;\n            if (!this.newColumn) {\n                this.newColumn = new DexihDatalinkColumn();\n                this.newColumn.key = this.hubService.getHubCache().getNextSequence();\n                this.newColumn.position = 1000 - this.newColumn.key;\n            }\n\n            this.newColumn.dataType = this.outputParameterForm.controls.dataType.value;\n            this.newColumn.allowDbNull = true;\n            this.newColumn.name = value.textValue;\n            this.newColumn.logicalName = value.textValue;\n            this.newColumn.rank = this.rank;\n            this.newColumn.format = this.outputParameterForm.controls.runTime?.value?.functionParameter?.defaultFormat;\n            this.newColumn.columnGroup = 'mapping';\n\n            // emitModelToViewChange stops the event propagating to the control and causing it to revert to null.\n            this.outputParameterForm.controls.datalinkColumn.setValue(this.newColumn, { emitModelToViewChange: false });\n            this.outputParameterForm.markAsDirty();\n            this.newColumnUpdating = false;\n            this.updateItems();\n        }\n    }\n}\n","<form [formGroup]=\"outputParameterForm\" class=\"mb-1\">\n    <section>\n        <div class=\"input-group\">\n\n            <div *ngIf=\"allowDataTypeSelect == false && allowNameSelect == false\" class=\"input-group-prepend\">\n                <div class=\"input-group-text\">\n                    {{outputParameterForm.value.runTime?.functionParameter?.name + \"(\" + eTypeCode[type.dataType] + \")\"}}\n                    {{rank > 0 ? \"[]\" : \"\"}}\n                </div>\n            </div>\n\n            <div *ngIf=\"allowDataTypeSelect == true && allowNameSelect == false\" class=\"input-group-prepend\">\n                <div class=\"input-group-text\">\n                    {{outputParameterForm.value.runTime?.functionParameter?.name }}\n                </div>\n            </div>\n\n            <div *ngIf=\"allowNameSelect\" class=\"form-control p-0\">\n                <form-input formControlName=\"name\" [border]=\"false\" type=\"text\" name=\"name\"\n                    placeholder=\"Enter a name for the parameter\">\n                </form-input>\n                <span class=\"input-group-btn\" style=\"width:0px;\"></span>\n            </div>\n\n            <div *ngIf=\"allowDataTypeSelect == false && allowNameSelect == true\" class=\"input-group-text\">\n                {{\"(\" + eTypeCode[type.dataType] + \")\"}}\n            </div>\n\n            <div class=\"form-control p-0\">\n                <form-select [border]=\"false\" formControlName=\"datalinkColumn\" [items]=\"outputTables\" parentName=\"name\" childItems=\"dexihTableColumns\" itemKey=\"key\"\n                    itemName=\"logicalName\" [enableKeySelect]=\"false\" [enableTextEntry]=\"true\" [setTextEntryToValue]=\"false\"\n                    textEntryNote=\"Enter new column name, or select existing\"\n                    (valueChange)=\"updateNewColumn($event)\"\n                    [errors]=\"errors.datalinkColumn\"  [showErrorMessage]=\"false\">\n                </form-select>\n            </div>\n\n            <div *ngIf=\"allowDataTypeSelect == true\" class=\"form-control p-0\">\n                <form-select formControlName=\"dataType\" [border]=\"false\" [items]=\"typeCodes\" itemKey=\"key\"\n                    itemName=\"name\">\n                </form-select>\n            </div>\n            <div *ngIf=\"allowDataTypeSelect == true\" class=\"form-control\">\n                <form-checkbox label=\"Allow Null\" [border]=\"false\" formControlName=\"allowNull\"></form-checkbox>\n            </div>\n\n            <div class=\"input-group-append\">\n                <button *ngIf=\"outputParameterForm.controls.datalinkColumn?.value && outputParameterForm.controls.dataType.value !== outputParameterForm.controls.datalinkColumn?.value?.dataType\" class=\"btn btn-danger\" type=\"button\" (click)=\"fixDataType()\" title=\"fix target column datatype\">\n                    <i class=\"fa fa-medkit\"></i>\n                </button>\n                <button class=\"btn btn-light\" type=\"button\" (click)=\"add()\" [disabled]=\"!allowAdd\" value=\"Add\">\n                    <i class=\"fa fa-plus-square-o\"></i>\n                </button>\n                <button class=\"btn btn-light\" type=\"button\" (click)=\"remove()\" [disabled]=\"!allowRemove\" value=\"Remove\">\n                    <i class=\"fa fa-minus-square-o\"></i>\n                </button>\n            </div>\n        </div>\n\n        <small *ngIf=\"outputParameterForm.value.runTime?.functionParameter?.description\" class=\"form-text text-muted\">\n            <markdown [data]=\"outputParameterForm.value.runTime.functionParameter.description\"></markdown>\n        </small>\n\n    </section>\n</form>","export { InputColumnsComponent } from './input-columns.component';\nexport { InputColumnComponent } from './input-column.component';\n","import { Component, Input, Output, OnInit, OnChanges, EventEmitter, OnDestroy } from '@angular/core';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { HubCache, eMappingStatus, MappingStatusInfo, lineageMappingStatuses, impactMappingStatuses } from '../../../hub.models';\nimport { eObjectUse, ColumnUsageNode, eDatalinkObjectType } from '../../../hub.lineage.models';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { LogFactory, eLogLevel } from '../../../../../logging';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { DexihDatalinkColumn, DexihTable, eTypeCode } from '../../../../shared/shared.models';\n\n\n@Component({\n\n    selector: 'output-column',\n    templateUrl: './output-column.component.html'\n})\nexport class OutputColumnComponent implements OnInit, OnDestroy, OnChanges {\n    @Input() public column: DexihDatalinkColumn = null;\n    @Input() public datalinkTransformForm: FormGroup;\n    @Input() public inputTables: Array<DexihTable> = null;\n    @Output() public inputOutputDrop: EventEmitter<{inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn}>\n            = new EventEmitter<{inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn}>();\n\n    private _subscription: Subscription;\n\n    private hubCache: HubCache;\n    private datalinkForm: FormGroup;\n\n    eMappingStatus = eMappingStatus;\n\n    public mappingStatusInfoLineage: MappingStatusInfo;\n    public mappingStatusInfoImpact: MappingStatusInfo;\n\n    public mappingStatusLineage: eMappingStatus;\n\n    childColumns: DexihDatalinkColumn[];\n\n    public logger = new LogFactory('output-column.component');\n    public logCount = 0;\n\n    public eTypeCode = eTypeCode;\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n              this.hubCache = result[0];\n              this.datalinkForm = result[1];\n\n              this.logger.LogC(() => `Subscription count: ${this.logCount++}`, eLogLevel.Trace);\n\n\n            this.childColumns = this.column.childColumns;\n\n              this.refreshStatus();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Output Column');\n        }\n    }\n\n    ngOnChanges() {\n        this.refreshStatus();\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    refreshStatus() {\n        if (this.datalinkForm) {\n            let columnUsage = new ColumnUsageNode(\n                eDatalinkObjectType.Transform,\n                eObjectUse.Target,\n                this.datalinkForm.value,\n                this.column,\n                null,\n                this.datalinkTransformForm.value,\n                null,\n                eMappingStatus.NotMapped,\n                this.hubCache\n                );\n\n                this.mappingStatusLineage = columnUsage.createDatalinkLineage(false);\n                this.mappingStatusInfoLineage = lineageMappingStatuses.find(c => c.key === this.mappingStatusLineage);\n\n                let mappingStatusImpact = columnUsage.createDatalinkImpact(true);\n\n                if (this.mappingStatusLineage === eMappingStatus.NotMapped && mappingStatusImpact !== eMappingStatus.AutoGenerate) {\n                    mappingStatusImpact = eMappingStatus.NotMapped;\n                }\n                this.mappingStatusInfoImpact = impactMappingStatuses.find(c => c.key === mappingStatusImpact);\n        }\n    }\n\n\n  editColumn() {\n      if (this.column.key && (this.mappingStatusLineage === eMappingStatus.Mapped\n        || this.mappingStatusLineage === eMappingStatus.MappedToNothing)) {\n        this.router.navigate(['column', this.column.key], { relativeTo: this.route.parent });\n      } else {\n          this.authService.informationDialog('Can not edit column',\n          // tslint:disable-next-line:max-line-length\n          'This column is not created by the current transform (i.e. a pass-through or target column).  To edit a column first create a mapping.')\n      }\n    }\n}\n","<ng-template [ngIf]=\"mappingStatusInfoLineage\">\n    <div class=\"list-group-item p-0 rounded-0\" *ngIf=\"mappingStatusInfoLineage.key != eMappingStatus.Mapped\" [title]=\"column.logicalName + ' ' + eTypeCode[column.dataType]\" (click)=\"editColumn()\">\n        <div class=\"d-flex flex-row\">\n\n            <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoLineage.statusClass\" [title]=\"mappingStatusInfoLineage.name\"></i>\n            <span class=\"flex-fill input-group-text ellipsis-overflow rounded-0 border-0\">\n                {{column.logicalName}}\n            </span>\n            <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoImpact.statusClass\" [title]=\"mappingStatusInfoImpact.name\"></i>\n        </div>\n    </div>\n    <div class=\"list-group-item p-0 rounded-0\" *ngIf=\"mappingStatusInfoLineage.key == eMappingStatus.Mapped\" [title]=\"column.logicalName + ' ' + eTypeCode[column.dataType]\"\n        (click)=\"editColumn()\">\n        <div class=\"d-flex flex-row\">\n\n            <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoLineage.statusClass\" [title]=\"mappingStatusInfoLineage.name\"></i>\n            <span class=\"flex-fill input-group-text ellipsis-overflow rounded-0 border-0\">\n                {{column.logicalName}}\n            </span>\n\n            <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoImpact.statusClass\" [title]=\"mappingStatusInfoImpact.name\"></i>\n        </div>\n    </div>\n</ng-template>\n<!-- <div *ngIf=\"childColumns?.length > 0\" class=\"p-2\">\n    <output-column *ngFor=\"let childColumn of childColumns\" [column]=\"childColumn\" [datalinkTransformForm]=\"datalinkTransformForm\"></output-column>\n</div> -->","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'transform-step',\n    templateUrl: 'transform-step.component.html',\n    styleUrls: ['./transforms.scss']\n\n})\nexport class TransformStepComponent implements OnInit {\n    @Input() routerLinkBefore: any;\n    @Input() routerLinkAfter: any;\n    @Input() routerLinkCurrent: any;\n    @Input() routerLinkPreview: any;\n    @Input() name: string;\n    @Input() title: string;\n    @Input() icon: string;\n    @Input() control;\n    @Input() showArrow = true;\n\n    @Input() showDelete = false;\n    @Input() isLast = false;\n\n    @Output() onDelete = new EventEmitter();\n    \n    \n    constructor() { }\n\n    ngOnInit() { \n    }\n}","<div class=\"d-flex\">\n    <li class=\"d-flex align-items-stretch p-0\">\n        <a *ngIf=\"routerLinkBefore\" [routerLink]=\"routerLinkBefore\" class=\"insert-before btn btn-sm btn-primary\"\n            title=\"Insert a transform before this\"><i class=\"fa fa-plus\"></i>\n        </a>\n\n        <a *ngIf=\"routerLinkAfter\" [routerLink]=\"routerLinkAfter\" class=\"insert-after btn btn-sm btn-primary\"\n            title=\"Insert a transform after this\"><i class=\"fa fa-plus\"></i>\n        </a>\n\n        <a *ngIf=\"showDelete\" class=\"delete btn btn-sm btn-danger mr-1\" href=\"javascript:void(0)\"\n            (click)=\"onDelete.emit()\" title=\"Delete\"><i class=\"fa fa-remove\"></i>\n        </a>\n\n        <a [routerLink]=\"routerLinkCurrent\" routerLinkActive=\"btn-outline-success\" class=\"btn btn-outline-primary\"\n            style=\"width:100%\" [title]=\"title\">\n            <div class=\"d-block\">\n                <div class=\"text-truncate\" style=\"max-width: 150px;\">\n                    {{name}}\n                </div>\n                <div>\n                    <span class=\"fa-4x\" [ngClass]=\"icon\"></span>\n                    <dexih-invalid-form-icon [control]=\"control\">\n                    </dexih-invalid-form-icon>\n                </div>\n            </div>\n        </a>\n    </li>\n\n    <li *ngIf=\"!isLast && showArrow\">\n        <div class=\"bg-primary\" [ngClass]=\"{'arrow': !isLast, 'arrow-last': isLast }\">\n            <a *ngIf=\"routerLinkPreview\" class=\"btn btn-sm btn-primary  mr-1\"\n                [ngClass]=\"{'preview': !isLast, 'preview-last': isLast}\" [routerLink]=\"routerLinkPreview\"\n                title=\"Preview transform data\"><i class=\"fa fa-search\"></i></a>\n\n            <div *ngIf=\"!isLast\" class=\"arrow-head\">\n\n            </div>\n        </div>\n    </li>\n    <li *ngIf=\"!showArrow\" class=\"no-arrow\">\n    </li>\n</div>","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routing } from './datalink-edit.routing';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { DatalinkEditService } from './datalink-edit.service';\nimport { HubFormsService } from '../../hub.forms.service';\n\nimport { DatalinkEditComponent } from './datalink-edit.component';\nimport { DatalinkEditPropertiesComponent } from './properties/datalink-edit-properties.component';\nimport { DatalinkEditSourceTableComponent } from './source-table/datalink-edit-source-table.component';\nimport { DatalinkEditTargetTableComponent } from './target/datalink-edit-target-table.component';\nimport { DatalinkEditTargetComponent } from './target/datalink-edit-target.component';\nimport { DatalinkEditTransformComponent } from './transform/datalink-edit-transform.component';\nimport { DatalinkEditValidationComponent } from './validation/datalink-edit-validation.component';\nimport { DatalinkEditProfileRulesComponent } from './profile-rules/profile-rules.component';\nimport { DatalinkEditSaveButtonComponent } from './save-button/datalink-edit-save-button.component';\nimport { DatalinkRunPlanComponent } from './run-plan/datalink-run-plan.component';\nimport { DatalinkEditNewTransformComponent } from './new-transform/datalink-edit-new-transform.component';\nimport { StandardFunctionEditComponent }  from './standard-function-edit';\nimport { CustomFunctionEditComponent } from './custom-function-edit';\nimport { UnGroupEditComponent } from './unGroup-edit';\nimport { OutputColumnComponent, OutputColumnsComponent } from './output-columns';\nimport { JoinColumnComponent, JoinColumnsComponent } from './join-columns';\nimport { InputColumnsComponent, InputColumnComponent } from './input-columns';\nimport { MappingEditComponent } from './mapping-edit';\nimport { MappingComponent, MappingItemComponent } from './mapping';\nimport { PreviewDataComponent } from './preview-data';\nimport { PreviewTableComponent} from './preview-table';\nimport { DatalinkEditGuard } from './datalink-edit-guard';\nimport { TransformTableEditComponent } from './transform-table-edit/transform-table-edit.component';\nimport { HubSharedModule } from '../../hub.shared.module';\nimport { TargetTableColumnComponent } from './target-table-column/target-table-column.component';\nimport { TableSharedModule } from '../../table/table.shared.module';\nimport { DatalinkTableComponent } from './datalink-table/datalink-table.component'\nimport { DatalinkColumnEditComponent } from './datalink-column-edit/datalink-column-edit.component'\nimport { ResultsViewModule } from '../../results/results-view/results-view.module';\nimport { InputParameterComponent, OutputParameterComponent} from './parameters'\nimport { TargetColumnsComponent, TargetColumnComponent} from './target-columns';\nimport { DatalinkPreviewDataComponent } from '../datalink-preview-data';\nimport { TransformStepComponent} from './transform-step/transform-step.component';\n\n@NgModule({\n    imports: [\n        SharedModule,\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        Routing,\n        HubSharedModule,\n        TableSharedModule,\n        ResultsViewModule\n    ],\n    declarations: [\n        DatalinkEditComponent,\n        DatalinkEditPropertiesComponent,\n        DatalinkEditSourceTableComponent,\n        DatalinkEditTargetTableComponent,\n        DatalinkEditTargetComponent,\n        DatalinkEditTransformComponent,\n        DatalinkEditValidationComponent,\n        DatalinkEditProfileRulesComponent,\n        DatalinkRunPlanComponent,\n        StandardFunctionEditComponent,\n        CustomFunctionEditComponent,\n        OutputColumnComponent, OutputColumnsComponent,\n        JoinColumnComponent, JoinColumnsComponent,\n        InputColumnsComponent, InputColumnComponent,\n        TargetColumnsComponent, TargetColumnComponent,\n        MappingEditComponent,\n        MappingComponent, MappingItemComponent,\n        PreviewDataComponent,\n        PreviewTableComponent,\n        TransformTableEditComponent,\n        DatalinkEditSaveButtonComponent,\n        DatalinkEditNewTransformComponent,\n        TargetTableColumnComponent,\n        DatalinkTableComponent,\n        DatalinkColumnEditComponent,\n        InputParameterComponent, OutputParameterComponent,\n        UnGroupEditComponent,\n        TransformStepComponent,\n    ],\n    providers: [ DatalinkEditService, HubFormsService, DatalinkEditGuard ],\n    exports: []\n})\nexport class DatalinkEditModule {\n\n    static forRoot(): ModuleWithProviders<DatalinkEditModule> {\n        return {\n            ngModule: DatalinkEditModule,\n            providers: [ DatalinkEditService, HubFormsService ]\n        };\n    }\n}\n","import { Injectable, OnDestroy, OnInit } from '@angular/core';\nimport { FormArray, FormGroup } from '@angular/forms';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { eLogLevel, LogFactory } from '../../../../logging';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { InputOutputColumns } from '../../hub.lineage.models';\nimport { HubService } from '../../hub.service';\nimport { TransformReference } from '../../hub.remote.models';\nimport { CancelToken } from '../../../+auth/auth.models';\nimport { HubCache } from '../../hub.models';\nimport { eTransformType, DexihDatalinkColumn, eParameterDirection, eTypeCode, DexihDatalinkTransformItem,\n    DexihDatalinkTransform, DexihDatalinkTable, eTransformItemType, eSourceType, eFunctionType, RemoteLibraries } from '../../../shared/shared.models';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n// contains shared objects used to edit the datalink.\n\n@Injectable()\nexport class DatalinkEditService implements OnInit, OnDestroy {\n\n    private _hubCache: HubCache;\n\n    public showAllErrors = false;\n\n    public datalinkKey: number;\n\n    public logger = new LogFactory('datalink-edit.service');\n\n    public remoteLibraries: RemoteLibraries;\n\n    // used to stop save occurring when changing functions and target ables.\n    savingDatalink = new BehaviorSubject(false);\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        public hubFormsService: HubFormsService) {\n    }\n\n    ngOnInit() {\n    }\n\n    public init(hubCache: HubCache) {\n        this._hubCache = hubCache;\n\n        this.hubService.getRemoteLibrariesPromise().then(remoteLibraries => this.remoteLibraries = remoteLibraries)\n    }\n\n    ngOnDestroy() {\n        this.hubFormsService.ngOnDestroy();\n    }\n\n    savingDataLinkObservable(): Observable<boolean> {\n        return this.savingDatalink.asObservable();\n    }\n\n    getValidationTransform(): FormGroup {\n        this.logger.LogC(() => `getValidationTransform`, eLogLevel.Trace);\n\n        let datalinkForm = this.hubFormsService.currentForm;\n        let datalinkTransforms = <FormArray>datalinkForm.controls['dexihDatalinkTransforms'];\n        let datalinkTransform = <FormGroup>datalinkTransforms.controls\n            .find(c => c.value.transformType === eTransformType.Validation);\n\n        return datalinkTransform;\n    }\n    \n    enableValidation(): FormGroup {\n        let transform = this.getValidationTransform();\n        if (!transform) {\n            let transform = this.remoteLibraries.transforms.find(c => c.transformType === eTransformType.Validation);\n            return this.insertDatalinkTransform(1, transform);\n        }\n\n        return transform;\n    }\n\n    disableValidation() {\n        let transform = this.getValidationTransform();\n        if (transform) {\n            this.deleteDatalinkTransform(transform.value);\n        }\n    }\n\n    getDatalinkTransform(datalinkTransformKey: number): FormGroup {\n        this.logger.LogC(() => `getDatalinkTransform`, eLogLevel.Trace);\n\n        let datalinkForm = this.hubFormsService.currentForm;\n        let datalinkTransforms = <FormArray>datalinkForm.controls['dexihDatalinkTransforms'];\n\n        let datalinkTransform = <FormGroup>datalinkTransforms.controls\n            .find(c => c.value.key === datalinkTransformKey);\n\n        return datalinkTransform;\n    }\n\n    getDatalinkTransformItem(datalinkTransformForm: FormGroup, datalinkTransformItemKey: number): FormGroup {\n        this.logger.LogC(() => `getDatalinkTransformItem, key:${datalinkTransformItemKey}.`, eLogLevel.Trace);\n\n        let datalinkTransformItems = <FormArray>datalinkTransformForm.controls['dexihDatalinkTransformItems'];\n        let datalinkTransformItem = <FormGroup>datalinkTransformItems.controls\n            .find(c => c.value.key === datalinkTransformItemKey);\n\n        this.logger.LogC(() => `getDatalinkTransformItem finished.`, eLogLevel.Trace);\n\n        return datalinkTransformItem;\n    }\n\n     // fixes the key mappings when a transform is removed or columns are refreshed\n     fixMappings(datalinkForm: FormGroup) {\n        let io = new InputOutputColumns();\n        let datalinkTransforms = <FormArray> datalinkForm.controls.dexihDatalinkTransforms;\n        datalinkTransforms.controls.forEach((datalinkTransformForm: FormGroup) => {\n            let inputColumns = <DexihDatalinkColumn[]> datalinkTransformForm.controls.runTime.value.inputColumns;\n            let joinColumns = null;\n            if (datalinkTransformForm.value.joinDatalinkTable) {\n                joinColumns = datalinkTransformForm.value.joinDatalinkTable.dexihDatalinkColumns;\n            }\n\n            let nodeColumns = this.getNodeColumns(inputColumns);\n\n            this.fixMapping(nodeColumns, <FormGroup> datalinkTransformForm.controls.nodeDatalinkColumn);\n            this.fixMapping(joinColumns, <FormGroup> datalinkTransformForm.controls.joinSortDatalinkColumn);\n\n            // set the inputcolumns to the current node level.\n            if (datalinkTransformForm.controls.nodeDatalinkColumn.value) {\n                inputColumns = io.getAvailableColumns(inputColumns, datalinkTransformForm.controls.nodeDatalinkColumn.value.key , 0)\n            }\n\n            let items = <FormArray> datalinkTransformForm.controls.dexihDatalinkTransformItems;\n            items.controls.forEach((item: FormGroup) => {\n                this.fixMapping(inputColumns, <FormGroup> item.controls.sourceDatalinkColumn);\n                this.fixMapping(joinColumns, <FormGroup> item.controls.joinDatalinkColumn);\n                this.fixMapping(inputColumns, <FormGroup> item.controls.filterDatalinkColumn);\n\n                let parameters = <FormArray> item.controls.dexihFunctionParameters;\n                parameters.controls.forEach((parameter: FormGroup) => {\n                    switch (parameter.controls.direction.value) {\n                        case eParameterDirection.Input:\n                            this.fixMapping(inputColumns, <FormGroup> parameter.controls.datalinkColumn);\n                            break;\n                        case eParameterDirection.Join:\n                            this.fixMapping(joinColumns, <FormGroup> parameter.controls.datalinkColumn);\n                            break;\n                    }\n\n                    let arrayParameters = <FormArray> parameter.controls.arrayParameters;\n                    arrayParameters.controls.forEach((arrayParameter: FormGroup) => {\n                        switch (arrayParameter.controls.direction.value) {\n                            case eParameterDirection.Input:\n                                this.fixMapping(inputColumns, <FormGroup> arrayParameter.controls.datalinkColumn);\n                                break;\n                            case eParameterDirection.Join:\n                                this.fixMapping(joinColumns, <FormGroup> arrayParameter.controls.datalinkColumn);\n                                break;\n                        }\n                    });\n                });\n            });\n        });\n    }\n\n    private getNodeColumns(columns: DexihDatalinkColumn[]): DexihDatalinkColumn[] {\n        let nodes: DexihDatalinkColumn[] = [];\n        if (columns) {\n            columns.filter(c => c.dataType === eTypeCode.Node && c.isValid).forEach(col => {\n                nodes.push(col);\n                if (col.childColumns && col.childColumns.length > 0) {\n                    nodes = nodes.concat(this.getNodeColumns(col.childColumns));\n                }\n            });\n        }\n\n        return nodes;\n    }\n\n    private fixMapping(inputColumns: DexihDatalinkColumn[], columnForm: FormGroup) {\n        let column  = <DexihDatalinkColumn> columnForm.value;\n        if (!inputColumns || !column) { return; }\n\n        if (inputColumns.findIndex(c => c.key === column.key) < 0) {\n            let inputColumn = inputColumns\n                .find(c => c.name === column.name && c.columnGroup === column.columnGroup);\n            if (!inputColumn) {\n                inputColumn = inputColumns.find(c => c.name === column.name);\n            }\n\n            if (inputColumn) {\n                columnForm.setValue(inputColumn);\n            }\n        }\n    }\n\n    public getFunctionType(datalinkTransform: DexihDatalinkTransform): eFunctionType {\n        let functionType: eFunctionType;\n        switch (datalinkTransform.transformType) {\n            case eTransformType.Filter:\n                functionType = eFunctionType.Condition;\n                break;\n            case eTransformType.Mapping:\n                functionType = eFunctionType.Map;\n                break;\n            case eTransformType.Join:\n                functionType = eFunctionType.JoinCondition;\n                break;\n            case eTransformType.Group:\n            case eTransformType.Aggregate:\n                functionType = eFunctionType.Aggregate;\n                break;\n            case eTransformType.Series:\n                functionType = eFunctionType.Series;\n                break;\n            case eTransformType.Sort:\n                functionType = eFunctionType.Sort;\n                break;\n            case eTransformType.Validation:\n                functionType = eFunctionType.Validate;\n                break;\n            case eTransformType.Rows:\n                functionType = eFunctionType.Rows;\n                break;\n            case eTransformType.Lookup:\n                functionType = eFunctionType.JoinCondition;\n                break;\n            case eTransformType.Delta:\n                break;\n        }\n\n        return functionType;\n    }\n\n    public getVariables(): string[] {\n        let variables = this.hubFormsService.currentForm.controls.parameters.value.map(c => '{' + c.name + '}')\n        .concat(this._hubCache.hub.dexihHubVariables.map(c => '{' + c.name + '}'));\n\n        return variables;\n    }\n\n    public getColumnGroups(columns: DexihDatalinkColumn[]): Array<{ group: string, columns: Array<DexihDatalinkColumn> }> {\n        let previousGroup: string = null;\n\n        let columnGroups: Array<{ group: string, columns: Array<DexihDatalinkColumn> }> = [];\n        let cols: Array<DexihDatalinkColumn> = null;\n\n        if (columns === null) {\n            return columnGroups;\n        }\n\n        columns\n            .filter(c => c.isValid)\n            .sort((a, b) => a.position - b.position)\n            .forEach(column => {\n                let group = column.columnGroup ? column.columnGroup : '(un-grouped)';\n                if (group !== previousGroup) {\n                    if (cols) {\n                        columnGroups.push({ group: previousGroup, columns: cols });\n                    }\n                    previousGroup = group;\n                    cols = [];\n                }\n                cols.push(column);\n            });\n\n        if (cols && cols.length > 0) {\n            columnGroups.push({ group: previousGroup, columns: cols });\n        }\n\n        return columnGroups;\n    }\n\n    insertDatalinkTransformItem(datalinkTransformForm: FormGroup, datalinkTransformItemForm: FormGroup): DexihDatalinkTransformItem {\n        this.logger.LogC(() => `insertDatalinkTransformItem`, eLogLevel.Trace);\n\n        let datalinkTransformItem = <DexihDatalinkTransformItem> datalinkTransformItemForm.value;\n\n        let datalinkTransformItemsArray = (<FormArray>datalinkTransformForm.controls['dexihDatalinkTransformItems']);\n        // use temporary negative keys for items which have not been saved.\n        if (!datalinkTransformItem.key) {\n            datalinkTransformItem.key = this._hubCache.getNextSequence();\n            if (datalinkTransformItemsArray.controls.length === 0) {\n                datalinkTransformItem.position = 1;\n            } else {\n                datalinkTransformItem.position = Math.max.apply(Math, datalinkTransformItemsArray.controls.map(o => o.value.position)) + 1;\n            }\n            let form = this.hubFormsService.datalinkDatalinkTransformItemFormGroup(datalinkTransformForm, datalinkTransformItem);\n            datalinkTransformItemsArray.push(form);\n        } else {\n            // existing item? lookup previous item and copy the updated values across.\n            let currentIndex = datalinkTransformItemsArray.controls\n                .findIndex(c => c.value['key'] === datalinkTransformItem.key);\n            datalinkTransformItemsArray.removeAt(currentIndex);\n\n            let form = this.hubFormsService.datalinkDatalinkTransformItemFormGroup(datalinkTransformForm, datalinkTransformItem);\n            datalinkTransformItemsArray.push(form);\n        }\n\n        this.fixMappings(this.hubFormsService.currentForm);\n\n        this.logger.LogC(() => `insertDatalinkTransformItem finished`, eLogLevel.Trace);\n\n        return datalinkTransformItem;\n    }\n\n    deleteDatalinkTransformItem(datalinkTransformForm: FormGroup, datalinkTransformItemForm: FormGroup) {\n        this.logger.LogC(() => `deleteDatalinkTransformItem`, eLogLevel.Trace);\n\n        let datalinkTransformItems = <FormArray>datalinkTransformForm.controls['dexihDatalinkTransformItems'];\n        let index = datalinkTransformItems.controls.indexOf(datalinkTransformItemForm);\n        datalinkTransformItems.removeAt(index);\n\n        this.fixMappings(this.hubFormsService.currentForm);\n    }\n\n    deleteDatalinkTarget(datalinkForm: FormGroup, datalinkTargetKey: Number) {\n        this.logger.LogC(() => `deleteDatalinkTarget`, eLogLevel.Trace);\n\n        let datalinkTargets = <FormArray>datalinkForm.controls['dexihDatalinkTargets'];\n        let index = datalinkTargets.controls.findIndex(c => c.value.key === datalinkTargetKey);\n        if (index >= 0) {\n            datalinkTargets.removeAt(index);\n        }\n    }\n\n    insertDatalinkTransform(position: number, transform: TransformReference): FormGroup {\n        this.logger.LogC(() => `insertDatalinkTransform`, eLogLevel.Trace);\n\n        let datalinkForm = this.hubFormsService.currentForm;\n        let datalinkTransforms = <FormArray>datalinkForm.controls['dexihDatalinkTransforms'];\n\n        let newDatalinkTransform = new DexihDatalinkTransform();\n\n        // use temporary negative keys for datalink transforms which have not been saved.\n        let minKey = -1;\n        datalinkTransforms.controls.forEach(dt => {\n            if (dt.value['key'] <= minKey) {\n                minKey = dt.value['key'] - 1;\n            }\n        });\n\n        this.logger.LogC(() => `insertDatalinkTransform key:${minKey}`, eLogLevel.Trace);\n\n        newDatalinkTransform.key = minKey;\n        newDatalinkTransform.transformType = transform.transformType;\n        newDatalinkTransform.transformAssemblyName = transform.transformAssemblyName;\n        newDatalinkTransform.transformClassName = transform.transformClassName;\n        // newDatalinkTransform.name = transform.name;\n        // newDatalinkTransform.description = transform.description;\n        newDatalinkTransform.dexihDatalinkTransformItems = new Array<DexihDatalinkTransformItem>();\n        newDatalinkTransform.isValid = true;\n\n        // default pass-through columns off for map, group, and row transforms.\n        switch (transform.transformType) {\n            case eTransformType.Group:\n            case eTransformType.Rows:\n            case eTransformType.Mapping:\n                newDatalinkTransform.passThroughColumns = false;\n                break;\n            default:\n                newDatalinkTransform.passThroughColumns = true;\n        }\n\n        if (transform.transformType === eTransformType.Join\n            || transform.transformType === eTransformType.Lookup || transform.transformType === eTransformType.Concatenate) {\n            newDatalinkTransform.joinDatalinkTable = new DexihDatalinkTable();\n            newDatalinkTransform.joinDatalinkTable.key = this._hubCache.getNextSequence();\n        }\n\n        if (transform.transformType === eTransformType.Series) {\n            let seriesItem = new DexihDatalinkTransformItem();\n            seriesItem.transformItemType = eTransformItemType.Series;\n            seriesItem.position = 0;\n            seriesItem.isValid = true;\n            newDatalinkTransform.dexihDatalinkTransformItems.push(seriesItem);\n        }\n\n        newDatalinkTransform.position = position;\n\n        let datalinkTransformForm = this.hubFormsService.datalinkTransformFormGroup(newDatalinkTransform);\n        datalinkTransforms.push(datalinkTransformForm);\n\n        this.resetDatalinkTransformPositions();\n\n        this.logger.LogC(() => `insertDatalinkTransform finished.`, eLogLevel.Trace);\n\n        return datalinkTransformForm;\n    }\n\n    deleteDatalinkTransform(datalinkTransform: DexihDatalinkTransform): Promise<boolean> {\n        return new Promise<boolean>((resolve) => {\n            this.authService.confirmDialog('Delete Transform',\n                `Are you sure you would like to remove the transform ${datalinkTransform.name}?`)\n                .then(confirm => {\n                    if (confirm) {\n                        let datalinkForm = this.hubFormsService.currentForm;\n                        let datalinkTransforms = <FormArray>datalinkForm.controls['dexihDatalinkTransforms'];\n                        let index = datalinkTransforms.controls\n                            .findIndex(c => c.value.key === datalinkTransform.key);\n                        datalinkTransforms.removeAt(index);\n                        this.resetDatalinkTransformPositions();\n                    }\n                    resolve(confirm);\n                }).catch(() => {\n                    resolve(false);\n                });\n        });\n    }\n\n    // searches the datalink and transforms for a column\n    public findColumn(columnKey: number): FormGroup {\n        // look for column in source table\n        let sourceDatalinkTableForm = <FormGroup>this.hubFormsService.currentForm\n                .controls.sourceDatalinkTable\n        let columnsArray = <FormArray>sourceDatalinkTableForm.controls.dexihDatalinkColumns;\n        let column = <FormGroup> columnsArray.controls.find(c => c.value.key === columnKey);\n        if (column) { return column; }\n\n        // look for column as transform outputs\n        let transformForms = <FormArray>this.hubFormsService.currentForm.controls.dexihDatalinkTransforms;\n\n        transformForms.controls.forEach(t => {\n            let datalinkTransformForm = <FormGroup>t\n            let items = <FormArray>datalinkTransformForm.controls.dexihDatalinkTransformItems;\n            items.controls.forEach(i => {\n                if (!column) {\n                    let itemForm = <FormGroup>i;\n                    if (itemForm.controls.targetDatalinkColumn.value &&\n                        itemForm.controls.targetDatalinkColumn.value.key === columnKey) {\n                        column = <FormGroup> itemForm.controls.targetDatalinkColumn;\n                    }\n\n                    if (!column) {\n                        columnsArray = <FormArray> itemForm.controls.dexihFunctionParameters;\n                        let parameter = <FormGroup> columnsArray.controls.find(c =>\n                            HubCache.parameterIsOutput(c.value) &&\n                            c.value.datalinkColumn &&\n                            c.value.datalinkColumn.key === columnKey\n                        );\n                        if (parameter) {\n                            column = <FormGroup> parameter.controls.datalinkColumn;\n                        }\n                        if (!column) {\n                            columnsArray.controls.forEach(c => {\n                                let arrayParameters = <FormArray> (<FormGroup> c).controls.arrayParameters;\n                                if (arrayParameters) {\n                                    parameter = <FormGroup> arrayParameters.controls.find(p =>\n                                        HubCache.parameterIsOutput(p.value) &&\n                                        p.value.datalinkColumn &&\n                                        p.value.datalinkColumn.key === columnKey\n                                    );\n                                    if (parameter) {\n                                        column = <FormGroup> parameter.controls.datalinkColumn;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                }\n            });\n        });\n\n        return column;\n    }\n\n    async resetDatalinkTransformPositions() {\n        const datalinkForm = this.hubFormsService.currentForm;\n        const datalinkTransforms = <FormArray>datalinkForm.controls.dexihDatalinkTransforms;\n\n        let userConfigTransforms = await this.hubService.GetUserConfigTransformReference();\n\n        let position = 10;\n        datalinkTransforms.controls.sort((a, b) => a.value.position - b.value.position).forEach(datalinkTransform => {\n            const dt = <FormGroup>datalinkTransform;\n\n            let transformReference = userConfigTransforms.find(e => e.transformClassName === datalinkTransform.value.transformClassName);\n\n            // if the transform is a validation/delta, then position at the end.\n            if (transformReference) {\n                dt.controls.position.setValue(position);\n                position += 10;\n            } else {\n                dt.controls.position.setValue(1000000);\n            }\n        });\n    }\n\n    importFunctionMappings(datalinkTransformKey: number, item: DexihDatalinkTransformItem, cancelToken: CancelToken):\n        Promise<string[]> {\n\n        let datalink = this.hubFormsService.getDatalinkValue();\n        const cache = this._hubCache;\n\n        return this.hubService.hubPostRemote<string[]>('/api/Hub/ImportFunctionMappings', {\n            hubKey: cache.hub.hubKey,\n            remoteAgentId: this.hubService.getCurrentRemoteAgentId(),\n            datalink: datalink,\n            datalinkTransformKey: datalinkTransformKey,\n            datalinkTransformItem: item\n        }, 'Importing function mappings...', cancelToken);\n    }\n\n    reBuildDatalinkTable(datalinkTable: DexihDatalinkTable, confirm = false) {\n        if (confirm) {\n            // tslint:disable-next-line:max-line-length\n            this.authService.confirmDialog('Rebuild Columns?', `This action will load the selected table columns, and replace or delete any existing columns.  This may require fixing some mappings.  Do you want to proceed?`)\n                .then((confirm2) => {\n                    if (confirm2) {\n                    this.doRebuildDatalinkTable(datalinkTable)\n                    }\n                }).catch();\n        } else {\n            this.doRebuildDatalinkTable(datalinkTable);\n        }\n    }\n\n    private doRebuildDatalinkTable(datalinkTable: DexihDatalinkTable) {\n\n        datalinkTable.dexihDatalinkColumns.forEach(datalinkColumn => datalinkColumn.isValid = false);\n\n        switch (datalinkTable.sourceType) {\n            case eSourceType.Table:\n                let sourceTable = this._hubCache.getTable(datalinkTable.sourceTableKey);\n                if (sourceTable) {\n                    datalinkTable.name = sourceTable.name;\n\n                    datalinkTable.dexihDatalinkColumns = this.mergeDatalinkColumns(\n                        datalinkTable.name, datalinkTable.key,\n                        sourceTable.dexihTableColumns, datalinkTable.dexihDatalinkColumns);\n\n                }\n                break;\n            case eSourceType.Datalink:\n                let datalink = this._hubCache.hub.dexihDatalinks.find(c => c.key === datalinkTable.sourceDatalinkKey);\n                if (datalink) {\n                    datalinkTable.name = datalink.name;\n\n                    let io = new InputOutputColumns();\n                    // const datalinkColumns = io.getInputColumns(this._hubCache, datalink, null, []);\n                    io.buildInputOutput(datalink);\n\n                    let datalinkColumns: DexihDatalinkColumn[];\n\n                    if (datalink.dexihDatalinkTransforms.length === 0) {\n                        datalinkColumns = datalink.sourceDatalinkTable.dexihDatalinkColumns;\n                    } else {\n                        let transforms = datalink.dexihDatalinkTransforms.sort((a, b) => a.position - b.position);\n                        let transform = transforms[transforms.length - 1];\n                        datalinkColumns = transform['runTime'].outputColumns;\n                    }\n\n                    datalinkTable.dexihDatalinkColumns = this.mergeDatalinkColumns(\n                        datalinkTable.name, datalinkTable.key,\n                        datalinkColumns, datalinkTable.dexihDatalinkColumns);\n                }\n                break;\n            case eSourceType.Rows:\n                datalinkTable.name = 'Static Row Set';\n\n                let rowDatalinkColumn = datalinkTable.dexihDatalinkColumns.find(c => c.name === 'RowNumber');\n                if (!rowDatalinkColumn) {\n                    rowDatalinkColumn = new DexihDatalinkColumn();\n                    rowDatalinkColumn.key = this._hubCache.getNextSequence();\n                    rowDatalinkColumn.datalinkTableKey = datalinkTable.key;\n                    datalinkTable.dexihDatalinkColumns.push(rowDatalinkColumn);\n                }\n\n                rowDatalinkColumn.name = 'RowNumber';\n                rowDatalinkColumn.logicalName = rowDatalinkColumn.name;\n                rowDatalinkColumn.dataType = eTypeCode.Int32;\n                rowDatalinkColumn.isMandatory = true;\n                rowDatalinkColumn.isValid = true;\n                rowDatalinkColumn.description = 'The generated row number of the static row set';\n\n                break;\n        }\n    }\n\n    private mergeDatalinkColumns(groupName: string, datalinkTableKey: number,\n            newColumns: any, existingColumns: DexihDatalinkColumn[]): DexihDatalinkColumn[] {\n        newColumns.forEach(column => {\n            let datalinkColumn = existingColumns.find(c => c.name === column.name && c.columnGroup === groupName);\n            if (!datalinkColumn) {\n                datalinkColumn = existingColumns.find(c => c.name === column.name);\n            }\n            if (!datalinkColumn) {\n                datalinkColumn = new DexihDatalinkColumn();\n                datalinkColumn.key = this._hubCache.getNextSequence();\n                datalinkColumn.datalinkTableKey = datalinkTableKey;\n                existingColumns.push(datalinkColumn);\n            }\n\n            Object.keys(datalinkColumn).forEach(key => {\n                if (key === 'childColumns') {\n                    if (column[key] && column[key].length > 0) {\n                        datalinkColumn[key] = this.mergeDatalinkColumns(groupName, datalinkTableKey, column[key], datalinkColumn[key]);\n                    } else {\n                        datalinkColumn[key] = [];\n                    }\n                } else if (key !== 'key' && column[key]) {\n                    datalinkColumn[key] = column[key];\n                } else if (key === 'columnGroup') {\n                    if (groupName) {\n                        if (datalinkColumn[key] && datalinkColumn[key] !== groupName) {\n                            datalinkColumn[key] = groupName + '.' + datalinkColumn[key];\n                        } else {\n                            datalinkColumn[key] = groupName;\n                        }\n                    }\n                }\n            });\n        });\n\n        return existingColumns;\n    }\n\n}\n","import { Component, Input, Output, OnInit, OnChanges, OnDestroy, EventEmitter } from '@angular/core';\nimport { HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { DexihDatalinkColumn, eTransformType } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'join-columns',\n    templateUrl: './join-columns.component.html'\n})\nexport class JoinColumnsComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() public datalinkTransformForm: FormGroup;\n\n    @Output() public inputJoinDrop: EventEmitter<{ inputColumn: DexihDatalinkColumn, joinColumn: DexihDatalinkColumn }>\n        = new EventEmitter<{ inputColumn: DexihDatalinkColumn, joinColumn: DexihDatalinkColumn }>();\n\n    private _subscription: Subscription;\n    private _changesSubscription: Subscription;\n\n    public joinTable;\n\n    public eTransformType = eTransformType;\n\n    public datalinkForm: FormGroup;\n\n    public joinColumns: Array<DexihDatalinkColumn>;\n\n    constructor(\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n    ) {\n    }\n\n    ngOnInit() {\n        try {\n\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n                this.datalinkForm = result[1];\n\n                if (this.datalinkForm) {\n                    this.updateTableData();\n                }\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Edit Custom Function');\n        }\n    }\n\n    ngOnChanges() {\n        this.updateTableData();\n        if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n        this._changesSubscription = this.datalinkTransformForm.controls.joinDatalinkTable.valueChanges.subscribe(() => {\n            this.updateTableData();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n    }\n\n    updateTableData() {\n        if (this.datalinkTransformForm && this.datalinkTransformForm.controls.joinDatalinkTable.value) {\n            this.joinTable = this.datalinkTransformForm.controls.joinDatalinkTable.value;\n            if (this.joinTable) {\n                this.joinColumns = new Array<DexihDatalinkColumn>();\n                this.joinTable.dexihDatalinkColumns.forEach(column => {\n                    this.joinColumns.push(column)\n                });\n            } else {\n                this.joinColumns = null;\n            }\n        } else {\n            this.joinColumns = null;\n        }\n    }\n\n    newInputJoinDrop(inputColumn: DexihDatalinkColumn, joinColumn: DexihDatalinkColumn) {\n        this.inputJoinDrop.emit({inputColumn, joinColumn});\n    }\n}\n","<div *ngIf=\"joinColumns\">\n    <d-widget-section [title]=\"joinTable?.name + '(' + eTransformType[this.datalinkTransformForm.value.transformType] + ')'\" [padding]=\"false\" [showExpandButton]=\"true\">\n        <join-column *ngFor=\"let column of joinColumns | fieldSort : 'position' | isValidFilter\"\n            [datalinkForm]='datalinkForm' [datalinkTransformForm]='datalinkTransformForm' [column]='column' dropZone\n            (dropData)=\"newInputJoinDrop($event, column)\" zone=\"input-column\" dropAllowedClass=\"drop-zone-green\">\n        </join-column>\n    </d-widget-section>\n</div>","<div *ngIf=\"!showColumn\">\n\n<d-widget-section title=\"Edit Target Table\" [showExpandButton]=\"true\">\n    <ng-template #sectionHeader>\n        <d-button-preview class=\"mr-1\" (click)=\"previewData()\"></d-button-preview>\n        <d-button class=\"mr-1\" (click)=\"importTable()\" buttonClass=\"btn-primary\" iconClass=\"fa fa-refresh\" title=\"Re-import table from connection.\">\n            Re-Import\n        </d-button>\n        <d-button (click)=\"createTable()\" class=\"mr-1\" buttonClass=\"btn-primary\" iconClass=\"fa fa-bullseye\" title=\"Drop & re-create the table on the connection.  Warning: This remove all data from the table!\">\n            Drop & Create\n        </d-button>\n\n        <d-button-apply class=\"mr-1\" (click)=\"apply()\" [disabled]=\"!this.targetTableForm?.dirty\"></d-button-apply>\n        <cancel-button [formsService]=\"tableFormService\"></cancel-button>\n    </ng-template>\n\n    <form *ngIf=\"targetTableForm\"  [formGroup]=\"targetTableForm\"  class=\"container\">\n        <fieldset>\n            <section>\n                <form-checkbox label=\"Create a new table\" [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"newTable\" (ngModelChange)=\"toggleNewTable($event)\"></form-checkbox>\n            </section>\n            <section *ngIf=\"!newTable\">\n                <form-select label=\"Target Table\" formControlName=\"tableKey\" [items]=\"connectionTables\" parentName=\"name\" childItems=\"dexihTables\"\n                    itemKey=\"key\" itemName=\"logicalName\" note='Select the target table'>\n                </form-select>\n            </section>\n            <section *ngIf=\"nodes?.length > 0\">\n                <form-select label=\"Node level\" formControlName=\"nodeDatalinkColumn\" [items]=\"nodes\" [enableKeySelect]=\"false\" itemKey=\"key\" itemName=\"name\" node='Specify the node where the transform should be applied to.' [allowNullSelect]=\"true\" selectNullMessage='Use top level'>\n                </form-select>\n            </section>\n        </fieldset>\n    </form>\n</d-widget-section>\n\n<dexih-table-edit-properties *ngIf=\"tableFormService.currentForm.value\" [formsService]=\"tableFormService\" [isExpanded]=\"newTable\" [showColumns]=\"false\"></dexih-table-edit-properties>\n\n<ng-template [ngIf]=\"targetTableForm?.controls.table.value\">\n        <d-widget-section title=\"Columns\" [showExpandButton]=\"true\" [padding]=\"false\">\n        <d-table [enableMultiSelect]=\"true\"\n            [enableSort]=\"false\" [enableFilter]=\"false\" (onSortChanged)=\"columnSortChange($event)\" [columns]=\"columns\"\n            [dataObservable]=\"tableData\" (rowClick)=\"editColumn($event)\" [enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\">\n    \n            <ng-template #actions let-items=\"items\">\n                <d-button-splitdropdown text=\"Add Column\" title=\"Create a new column\" iconClass=\"fa fa-plus-square\" buttonClass=\"btn-primary\"\n                    (buttonClick)=\"newColumn(null)\">\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.AutoIncrement)\">Add Auto Incrementing Key Column</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.ValidFromDate)\">Add Valid from Date</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.ValidToDate)\">Add Valid to Date</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.IsCurrentField)\">Add Is Current Column</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.CreateAuditKey)\">Add Create Audit Key</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.UpdateAuditKey)\">Add Update Audit Key</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.CreateDate)\">Add Create Date</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.UpdateDate)\">Add Update Date</a>\n                    </li>\n                </d-button-splitdropdown>\n\n                <d-button iconClass=\"fa fa-retweet\" class=\"ml-1\" (click)=\"resetColumns()\">Reset All Columns</d-button>\n                <d-button-preview class=\"ml-1\" (click)=\"previewData()\"></d-button-preview>\n                <d-button class=\"ml-1\" (click)=\"importTable()\" buttonClass=\"btn-primary\" iconClass=\"fa fa-refresh\" title=\"Re-import table from connection.\">\n                    Re-Import\n                </d-button>\n                <d-button (click)=\"createTable()\" class=\"ml-1\" buttonClass=\"btn-primary\" iconClass=\"fa fa-bullseye\" title=\"Drop & re-create the table on the connection.  Warning: This remove all data from the table!\">\n                    Drop & Create\n                </d-button>\n            </ng-template>\n    \n            <ng-template #tableHeader let-items=\"items\">\n                <column-edit-bulk *ngIf=\"showBulkEdit && items.length > 0\" [columns]=\"items\" [columnsFormArray]=\"targetTableForm.controls.table.controls.dexihTableColumns\" (updated)=\"updateDeltaColumns()\" ></column-edit-bulk>\n            </ng-template>\n            \n            <ng-template #selectedItemAction select=\"selectedItemAction\" let-column=\"item\">\n                <d-button-edit (click)=\"editColumn(column)\" class=\"ml-1\"></d-button-edit>\n            </ng-template>\n    \n            <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n                <d-button-delete (click)=\"deleteColumns(items)\" class=\"ml-1\"></d-button-delete>\n                <d-button iconClass=\"fa fa-th-list\" class=\"ml-1\" (click)=\"showBulkEdit=!showBulkEdit\">{{showBulkEdit ? 'Hide Bulk Edit' : 'Show Bulk Edit'}} </d-button>\n            </ng-template>\n    \n        </d-table>\n        </d-widget-section>\n\n        <d-widget-section title=\"Unused Columns\" [showExpandButton]=\"true\" [padding]=\"false\">\n        <d-table [enableMultiSelect]=\"true\"\n            sortColumn=\"position\" [enableFilter]=\"false\" [columns]=\"columns\" [dataObservable]=\"missingColumnsData\"\n            [enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\">\n            <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n                <d-button (click)=\"addMissing(items)\" buttonClass=\"btn-primary\" iconClass=\"fa fa-plus-square\" title=\"Add selected outputs to the target table\">Add To Table</d-button>\n            </ng-template>\n    \n        </d-table>\n        </d-widget-section>\n    </ng-template>\n</div>\n\n<div *ngIf=\"showColumn\">\n    <column-edit [columnKey]=\"columnKey\" [tableForm]=\"this.targetTableForm.controls.table\" [deltaType]='deltaType' (isUpdated)=\"columnUpdated()\"></column-edit>\n</div>\n","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { InputOutputColumns, eObjectUse, ColumnUsageNode, eDatalinkObjectType } from '../../../hub.lineage.models';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Observable, Subscription, BehaviorSubject , combineLatest} from 'rxjs';\nimport { FormGroup, FormArray, FormBuilder } from '@angular/forms';\nimport { HubFormsService } from '../../../hub.forms.service';\nimport { LogFactory, eLogLevel } from '../../../../../logging';\nimport { HubCache, eMappingStatus, updateStrategies, loadStrategies, ConnectionTables, lineageMappingStatuses, deltaTypes } from '../../../hub.models';\nimport { eDeltaType, eUpdateStrategy, eTransformWriterMethod, DexihConnection,\n    DexihDatalinkColumn, DexihDatalinkTarget, DexihTable, DexihTableColumn, DexihDatalinkTable, eTypeCode, eSecurityFlag } from '../../../../shared/shared.models';\nimport { CancelToken } from '../../../../+auth/auth.models';\n\n@Component({\n\n    selector: 'dexih-datalink-edit-target-table',\n    templateUrl: './datalink-edit-target-table.component.html'\n})\nexport class DatalinkEditTargetTableComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n    private hubCache: HubCache;\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    private _subscription: Subscription;\n    private _loadStrategySubscription: Subscription;\n    private _tableFormSubscription: Subscription;\n    private _saveSubscription: Subscription;\n\n    private cancelToken: CancelToken = new CancelToken();\n\n    public eMappingStatus = eMappingStatus;\n    public eDeltaType = eDeltaType;\n\n    public tableFormService: HubFormsService;\n\n    public eUpdateStrategy = eUpdateStrategy;\n    public updateStrategies = updateStrategies;\n\n    public eTransformWriterMethod = eTransformWriterMethod;\n    public loadStrategies = loadStrategies;\n\n    public managedConnections: DexihConnection[];\n    public connectionTables: ConnectionTables[];\n\n    public showTableProperties = false;\n    public showColumn = false;\n\n    private ignoreUpdateTable = false;\n\n    public nodes = [];\n\n    public newTable = false;\n\n    public inputColumns: DexihDatalinkColumn[];\n\n    public targetKey: number;\n    public targetTableForm: FormGroup;\n\n    public columnKey: number;\n    public deltaType: eDeltaType;\n\n    public showBulkEdit = false;\n\n    private canExit = false;\n\n    public logger = new LogFactory('datalink-edit-target-table');\n\n    columns = [\n        { name: 'position', title: '#', format: '' },\n        { name: 'columnStatus', title: 'Lineage', format: 'Html' },\n        { name: 'name', title: 'Name', format: '' },\n        { name: 'logicalName', title: 'Logical', format: '' },\n        { name: 'dataType', title: 'Data Type', format: '' },\n        { name: 'deltaType', title: 'Delta Type', format: '' },\n        { name: 'allowDbNull', title: 'Null?', format: 'Boolean' },\n        { name: 'defaultValue', title: 'Default Value', format: '' },\n        { name: 'securityFlag', title: 'Security Flag', format: 'Enum', enum: eSecurityFlag },\n        { name: 'format', title: 'Format'},\n        { name: 'columnValidation', title: 'Validation', format: '', class: 'columnValidationClass', tooltip: 'columnValidationTooltip' }\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    private _missingColumnsData = new BehaviorSubject<Array<any>>(null);\n    missingColumnsData: Observable<Array<any>> = this._missingColumnsData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private fb: FormBuilder) {\n\n        this.tableFormService = new HubFormsService(fb, hubService, authService);\n    }\n\n    ngOnInit() {\n        this.logger.LogC(() => `ngOnInit`, eLogLevel.Trace);\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n                this.datalinkForm = result[3];\n\n                this.action = data['action'];\n                this.pageTitle = data['pageTitle'];\n\n                const ioColumns = new InputOutputColumns();\n                this.inputColumns = ioColumns.getDatalinkOutputColumns(this.datalinkForm.value);\n\n                if (this.action === 'edit') {\n                    this.targetKey = +params['targetKey'];\n                    let targets = <FormArray>this.datalinkForm.controls.dexihDatalinkTargets;\n\n                    // create a copy of the target form.\n                    let originalTargetTableForm = <FormGroup> targets.controls.find(c => c.value.key === this.targetKey);\n\n                    if (originalTargetTableForm && originalTargetTableForm.controls.key.value <= 0) {\n                        this.newTable = true;\n                    }\n\n                    // if the table is not found, then navigate back to the parent.\n                    if (originalTargetTableForm === undefined) {\n                        this.canExit = true;\n                        this.authService.navigateUp();\n                        return;\n                    }\n\n                    this.targetTableForm = this.editDatalinkService.hubFormsService\n                        .datalinkTargetFormGroup(originalTargetTableForm.value, originalTargetTableForm.controls.table.value);\n\n                } else if (this.action === 'new') {\n                    let target = new DexihDatalinkTarget();\n                    target.key = this.hubCache.getNextSequence();\n                    this.targetTableForm = this.editDatalinkService.hubFormsService.datalinkTargetFormGroup(target);\n\n                } else {\n                    this.hubService.addHubErrorMessage('Invalid action ' + this.action);\n                }\n\n                if (this.hubCache.isLoaded() && this.datalinkForm) {\n                    this.connectionTables = this.hubCache.getConnectionTables();\n                    this.managedConnections = this.hubCache.getManagedConnections();\n\n                    this.updateData();\n                    this.resetSubscription();\n\n\n                    this.logger.LogC(() => `ngOnInit - completed`, eLogLevel.Trace);\n                }\n\n                if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n                this._saveSubscription = this.editDatalinkService.savingDatalink.subscribe(value => {\n                    if(value) {\n                        this.apply();\n                    }\n                });\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Edit Target Table');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._loadStrategySubscription) { this._loadStrategySubscription.unsubscribe(); }\n        if (this._tableFormSubscription) { this._tableFormSubscription.unsubscribe(); }\n        if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n    }\n\n    canDeactivate(): Promise<boolean> {\n        return new Promise<boolean>(resolve => {\n          if (!this.canExit && this.targetTableForm?.dirty) {\n            this.authService.confirmDialog('Target Table Changed',\n            'The table has changed.  Would you like to discard the changes and return to the previous screen?  Otherwise, use the apply button to save the changes.'\n            ).then(confirm => {\n              resolve(confirm);\n            }).catch(reason => {\n              resolve(false);\n            });\n          } else {\n            resolve(true);\n          }\n        });\n      }\n\n    resetSubscription() {\n        if (this._tableFormSubscription) { this._tableFormSubscription.unsubscribe(); }\n        this._tableFormSubscription = this.targetTableForm.controls.tableKey.valueChanges.subscribe(() => {\n            this.updateData();\n        });\n    }\n\n    previewData() {\n        this.router.navigate(['preview-table-data', this.targetTableForm.controls.tableKey.value], { relativeTo: this.route });\n    }\n\n    columnStatus(table: DexihTable, column: DexihTableColumn): string {\n        let columnUsage: ColumnUsageNode = new ColumnUsageNode(\n            eDatalinkObjectType.TargetTable, eObjectUse.Target,\n            this.datalinkForm.value, null, column, null, null, eMappingStatus.NotMapped, this.hubCache);\n        const lineage = columnUsage.createDatalinkLineage(true);\n        const mappingStatus = lineageMappingStatuses.find(c => c.key === lineage);\n        if (mappingStatus) {\n            return `<i class=\"${mappingStatus.statusClass}\"></i>&nbsp;${mappingStatus.name}`\n        }\n    }\n\n    datalinkColumnStatus(table: DexihDatalinkTable, column: DexihDatalinkColumn): string {\n        let columnUsage: ColumnUsageNode = new ColumnUsageNode(\n            eDatalinkObjectType.TargetTable, eObjectUse.Target,\n            this.datalinkForm.value, column, null, null, null, eMappingStatus.NotMapped, this.hubCache);\n        const lineage = columnUsage.createDatalinkLineage(true);\n        const mappingStatus = lineageMappingStatuses.find(c => c.key === lineage);\n        if (mappingStatus) {\n            return `<i class=\"${mappingStatus.statusClass}\"></i>&nbsp;${mappingStatus.name}`\n        }\n    }\n\n    private addNodeColumns(columns: DexihDatalinkColumn[], path: string) {\n        if (!path) {\n            this.nodes = [];\n        }\n        if (columns) {\n            columns.filter(c => c.dataType === eTypeCode.Node && c.isValid).forEach(col => {\n                let name = path ? (path + '.' + col.logicalName) : col.logicalName;\n                this.nodes.push({key: col.key, name: name});\n\n                if (col.childColumns && col.childColumns.length > 0) {\n                    this.addNodeColumns(col.childColumns, name);\n                }\n            });\n        }\n    }\n\n    updateData() {\n        if (this.ignoreUpdateTable) {\n            return;\n        }\n\n        this.logger.LogC(() => `updateData started`, eLogLevel.Trace);\n        this.showBulkEdit = false;\n\n        let validation = this.editDatalinkService.getValidationTransform()\n\n        this.tableFormService.startForm(<FormGroup>this.targetTableForm.controls.table)\n        if (this.targetTableForm.controls.table) {\n\n            if (!this.targetTableForm.controls.table.value) {\n                this.logger.LogC(() => `updateData no targetTable specified.`, eLogLevel.Trace);\n                this._tableData.next(null);\n            } else {\n                const table = this.targetTableForm.controls.table.value;\n                this.logger.LogC(() => `updateData targetTable ${table.name}`, eLogLevel.Trace);\n\n                let columnData = [];\n                table.dexihTableColumns\n                    .filter(c => c.isValid)\n                    .sort((a, b) => a.position - b.position)\n                    .forEach(column => {\n                        let deltaType = deltaTypes.find(c => c.key === column.deltaType);\n                        let newColumn = {\n                            key: column.key,\n                            position: column.position,\n                            columnStatus: this.columnStatus(table, column),\n                            name: column.name,\n                            dataType: this.hubCache.dataTypeToString(column),\n                            deltaType: deltaType ? deltaType.name : 'Not specified',\n                            allowDbNull: column.allowDbNull,\n                            logicalName: column.logicalName,\n                            isIncrementalUpdate: column.isIncrementalUpdate,\n                            format: column.format,\n                            securityFlag: column.securityFlag,\n                            defaultValue: column.defaultValue,\n                            columnValidation: this.hubCache.getColumnValidation(column.columnValidationKey).name,\n                            columnValidationClass: column.columnValidationKey && !validation ? 'dexih-error-icon' : '',\n                            columnValidationTooltip: column.columnValidationKey && !validation ?\n                                'Enabled the validation transform for this to function' : '',\n                        };\n\n                        columnData.push(newColumn);\n                    });\n\n                this._tableData.next(columnData);\n\n                let validColumns = this.validColumns();\n\n                if (validColumns) {\n                    this.addNodeColumns(validColumns, '');\n\n                    let missingColumnData = [];\n                    let position = 0;\n                    validColumns.forEach(column => {\n                        if (table.dexihTableColumns.findIndex(c => c.name === column.name) < 0 &&\n                            missingColumnData.findIndex(c => c.name === column.name) < 0) {\n                            let deltaType = deltaTypes.find(c => c.key === column.deltaType);\n                            let newColumn = {\n                                key: column.key,\n                                position: column.position + position,\n                                columnStatus: this.datalinkColumnStatus(table, column),\n                                name: column.name,\n                                dataType: this.hubCache\n                                    .dataTypeToString(column),\n                                deltaType: deltaType ? deltaType.name : 'Not specified',\n                                allowDbNull: column.allowDbNull,\n                                logicalName: column.logicalName,\n                                isIncrementalUpdate: column.isIncrementalUpdate,\n                                format: column.format,\n                                securityFlag: column.securityFlag,\n                                defaultValue: column.defaultValue,\n                                columnValidation: '',\n                            };\n                            missingColumnData.push(newColumn);\n                        }\n                        position += 1000;\n                    });\n                    this._missingColumnsData.next(missingColumnData);\n                }\n\n                this.logger.LogC(() => `updateData columns loaded`, eLogLevel.Trace);\n            }\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    validColumns(): DexihDatalinkColumn[] {\n        let validColumns = this.inputColumns;\n\n        if (this.targetTableForm.controls.nodeDatalinkColumn && this.targetTableForm.controls.nodeDatalinkColumn.value) {\n            let io = new InputOutputColumns();\n            validColumns =  io.validColumns(this.targetTableForm.controls.nodeDatalinkColumn.value.key,\n                    this.inputColumns);\n        }\n\n        return validColumns;\n    }\n\n    addMissing(items: Array<DexihDatalinkColumn>) {\n        this.logger.LogC(() => `addMissing started`, eLogLevel.Trace);\n\n        const tableForm = <FormGroup>this.targetTableForm.controls.table;\n\n        // const ioColumns = new InputOutputColumns();\n        // const outputColumns = ioColumns.getDatalinkOutputColumns(this.datalinkForm.value);\n\n        const outputColumns = this.validColumns();\n\n        if (tableForm && outputColumns) {\n            const tableColumns = <FormArray>tableForm.controls.dexihTableColumns;\n            items.forEach(item => {\n                let missingColumn: DexihDatalinkColumn = null;\n                outputColumns.forEach(column => {\n                    if (!missingColumn && item.key === column.key) {\n                        missingColumn = column;\n                    }\n                });\n                if (missingColumn) {\n                    const newColumn = new DexihTableColumn();\n\n                    Object.assign(newColumn, missingColumn);\n\n                    this.resetColumnKeys(newColumn);\n                    let positions = tableColumns.controls.map<number>(c => <number>c.value.position);\n                    let position = positions.length === 0 ? 0 : Math.max(...positions) + 1; // add the the last position\n                    newColumn.position = position;\n                    const columnForm = this.editDatalinkService.hubFormsService.tableColumn(tableColumns.value, newColumn);\n                    tableColumns.push(columnForm);\n                    tableForm.markAsDirty();\n                    this.targetTableForm.markAsDirty();\n                }\n            });\n            this.updateData();\n        }\n        this.logger.LogC(() => `addMissing completed`, eLogLevel.Trace);\n    }\n\n    resetColumnKeys(column: DexihTableColumn) {\n        column.key = this.hubCache.getNextSequence();\n\n        if (column.childColumns) {\n            column.childColumns.forEach(childColumn => this.resetColumnKeys(childColumn));\n        }\n    }\n\n    toggleNewTable() {\n        this.logger.LogC(() => `newTable started`, eLogLevel.Trace);\n\n        if (this.newTable) {\n            const newTable = new DexihTable();\n            this.targetTableForm.setControl('table', this.editDatalinkService.hubFormsService.tableForm(newTable));\n            this.targetTableForm.controls.tableKey.setValue(0);\n            this.resetSubscription();\n            this.addMissing(this._missingColumnsData.value);\n\n            this.showTableProperties = true;\n        }\n\n        this.logger.LogC(() => `newTable completed`, eLogLevel.Trace);\n    }\n\n    editColumn(column: DexihTableColumn) {\n        this.columnKey = column.key;\n        this.showColumn = true;\n    }\n\n    newColumn(deltaType: eDeltaType) {\n        if (deltaType !== null) {\n            const tableForm = <FormGroup>this.targetTableForm.controls.table;\n            const tableColumns = <FormArray>tableForm.controls.dexihTableColumns;\n            let newColumn = this.hubCache.newColumn(tableForm.value, deltaType);\n            if (newColumn === null) {\n                this.authService.informationDialog('Invalid column.', `The column ${deltaType} could not be added as it already exists.`);\n                return;\n            }\n            const columnForm = this.editDatalinkService.hubFormsService.tableColumn(tableColumns.value, newColumn);\n            tableColumns.push(columnForm);\n            tableForm.markAsDirty();\n            this.targetTableForm.markAsDirty();\n        } else {\n            this.columnKey = null;\n            this.deltaType = deltaType;\n            this.showColumn = true;\n        }\n\n        this.updateData();\n    }\n\n    updateDeltaColumns() {\n        this.targetTableForm.markAsDirty();\n        this.updateData();\n    }\n\n    async resetColumns() {\n        let confirm = await this.authService.confirmDialog('Warning reset columns',\n            'This will remove and reload all the columns in this table using the last mapped outputs.  Continue?')\n\n        if (confirm) {\n            const tableForm = <FormGroup>this.targetTableForm.controls.table;\n            const tableColumns = <FormArray>tableForm.controls.dexihTableColumns;\n\n            while (tableColumns.length !== 0) {\n                tableColumns.removeAt(0)\n              }\n            }\n\n            this.addMissing(this.validColumns());\n    }\n\n    deleteColumns(columns: Array<DexihTableColumn>) {\n        columns.forEach(column => {\n            const tableForm = <FormGroup>this.targetTableForm.controls.table;\n            const tableColumns = <FormArray>tableForm.controls.dexihTableColumns;\n            const index = tableColumns.controls.findIndex(c => c.value.key === column.key);\n            if (index >= 0) {\n                tableColumns.removeAt(index);\n                tableForm.markAsDirty();\n            }\n        });\n\n        this.updateData();\n    }\n\n    importTable() {\n        const table: DexihTable = this.targetTableForm.controls.table.value;\n        const connection = this.hubCache.getConnection(table.connectionKey)\n        this.hubService.importTables([table], false, this.cancelToken)\n            .then(tables => {\n                if (!tables || tables.length === 0) { return; }\n                const returnTable: any = tables[0];\n                returnTable.useLogical =\n                    this.hubCache.defaultTableLogicalName(returnTable.schema, returnTable.name) !== returnTable.logicalName;\n                let tableForm = this.editDatalinkService.hubFormsService.tableForm(returnTable);\n                this.targetTableForm.controls.tableKey.setValue(returnTable.key);\n                this.targetTableForm.setControl('table', tableForm);\n            }).catch(reason => {\n                // this.hubService.addHubErrorMessage(reason);\n            });\n    }\n\n    createTable() {\n        const table: DexihTable = this.targetTableForm.controls.table.value;\n        const connection = this.hubCache.getConnection(table.connectionKey)\n        this.hubService.createTables([table], this.cancelToken)\n            .then(tables => {\n                this.hubService.addHubSuccessMessage('The table was created successfully.');\n                // this.targetTableForm.controls.table.setValue(returnTable);\n            }).catch(reason => {\n                // this.hubService.addHubErrorMessage(reason);\n            });\n    }\n\n    columnSortChange(items: Array<DexihTableColumn>) {\n        this.logger.LogC(() => `columns sort change - started `, eLogLevel.Trace);\n        this.tableFormService.IgnoreFormChange = true;\n        this.editDatalinkService.hubFormsService.IgnoreFormChange = true;\n        this.ignoreUpdateTable = true;\n        const tableForm = <FormGroup>this.targetTableForm.controls.table;\n        let columnsArray = <FormArray>tableForm.controls.dexihTableColumns;\n        let position = 1;\n        items.forEach(c => {\n            let column = <FormGroup>columnsArray.controls.find(control => control.value.key === c.key);\n            column.controls.position.setValue(position++);\n        });\n\n        tableForm.markAsDirty();\n        this.editDatalinkService.hubFormsService.IgnoreFormChange = false;\n        this.tableFormService.IgnoreFormChange = false;\n        this.ignoreUpdateTable = false;\n        this.updateData();\n        this.logger.LogC(() => `columns sort change - finished `, eLogLevel.Trace);\n    }\n\n    columnUpdated() {\n        this.showColumn = false;\n        this.updateData();\n    }\n\n    saveTable() {\n        const table: DexihTable = this.targetTableForm.controls.table.value;\n        this.hubService.saveTables([table]).then(savedTables => {\n            let savedTable = savedTables[0];\n            this.targetTableForm.setControl('table', this.editDatalinkService.hubFormsService.tableForm(savedTable));\n            this.targetTableForm.controls.tableKey.setValue(savedTable.key);\n            this.resetSubscription();\n            this.editDatalinkService.hubFormsService.save(false);\n        });\n    }\n\n    apply() {\n        if (this.targetTableForm.dirty) {\n            let targets = <FormArray>this.datalinkForm.controls.dexihDatalinkTargets;\n            let index = targets.length;\n            if (this.action === 'edit') {\n                index = targets.controls.findIndex(c => c.value.key === this.targetKey);\n                targets.removeAt(index);\n            }\n            targets.insert(index, this.targetTableForm);\n            targets.markAsDirty();\n            this.canExit = true;\n            this.authService.navigateUp();\n        }\n    }\n}\n","import { Component, Input, Output, OnInit, OnDestroy, EventEmitter, OnChanges } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Subscription} from 'rxjs';\nimport { TypeCodes, eBasicType, TypeFunctions } from '../../../hub.remote.models';\nimport { HubService } from '../../../hub.service';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { DexihDatalinkColumn, DexihTableColumn, DexihFunctionParameter, eTypeCode, DexihTable, DexihDatalinkTarget } from '../../../../shared/shared.models';\nimport { DatalinkEditService } from '../datalink-edit.service';\n\nexport class InputValues {\n    public staticValue: string;\n    public textItems: string[];\n    public name: string;\n    public inputParameterSubscription: Subscription;\n    public datalinkColumnSubscription: Subscription;\n}\n\n@Component({\n\n    selector: 'input-parameter',\n    templateUrl: './input-parameter.component.html'\n})\nexport class InputParameterComponent implements OnInit, OnDestroy, OnChanges {\n\n    @Input() public allowDataTypeSelect = false;\n    @Input() public allowNameSelect = false;\n    @Input() public allowAdd = false;\n    @Input() public allowRemove = false;\n    @Input() public inputParameterForms: FormGroup[] = [];\n    @Input() public inputColumns: Array<DexihDatalinkColumn> = null;\n    @Input() public updateParameterName = false;\n    @Input() public rank = 0;\n    @Input() public nodeDatalinkColumnKey = null;\n\n    @Input() public outputParameterForms: FormGroup[] = null;\n    @Input() public outputColumns: Array<DexihTableColumn> = null;\n    @Input() public datalinkTargets: Array<DexihDatalinkTarget> = null;\n    @Input() public variables = [];\n\n    @Output() public addParameter: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n    @Output() public removeParameter: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n\n    public type: TypeFunctions;\n    eBasicType = eBasicType;\n    typeCodes = TypeCodes;\n    eTypeCode = eTypeCode;\n\n    public columns: Array<DexihTableColumn>;\n    inputColumnGroups: Array<{group: string, columns: Array<DexihDatalinkColumn>}> = [];\n\n    outputTables: Array<DexihTable>;\n\n    public inputs: InputValues[] = [];\n\n    ignoreChanges = false;\n\n    newColumn: DexihDatalinkColumn;\n    newColumnUpdating = false; // used to avoid recursion\n    inputUpdating = false;\n\n    public errors;\n\n    constructor(public hubService: HubService, public editDatalinkService: DatalinkEditService) {\n    }\n\n    ngOnInit() {\n        this.inputs = this.inputParameterForms.map(param => new InputValues());\n        this.errors = this.inputParameterForms.map(a => this.editDatalinkService.hubFormsService.getFormErrorMessages(a, true));\n\n        let io = new InputOutputColumns();\n        if (this.nodeDatalinkColumnKey) {\n            this.inputColumns = io.getAvailableColumns(this.inputColumns, this.nodeDatalinkColumnKey, 0);\n        }\n\n        if (this.rank > 0 && this.inputColumns) {\n            let tables = [];\n            this.inputColumns = this.inputColumns.filter(c => c.rank > 0);\n        }\n\n        if (this.inputColumns) {\n            this.inputColumnGroups = this.editDatalinkService.getColumnGroups(this.inputColumns);\n        } else {\n            this.inputColumnGroups = [];\n        }\n\n        for ( let i = 0; i < this.inputParameterForms.length; i++) {\n            let inputParameter: DexihFunctionParameter = this.inputParameterForms[i].value;\n\n            if (inputParameter.datalinkColumn || inputParameter.value === null || inputParameter.value === undefined) {\n                this.inputs[i].staticValue = '';\n            } else {\n                this.inputs[i].staticValue = inputParameter.value;\n            }\n\n            this.inputs[i].textItems = [];\n\n            if (inputParameter.dataType === eTypeCode.Boolean) {\n                this.inputs[i].textItems = this.inputs[i].textItems.concat(['true', 'false' ]);\n                this.inputs[i].staticValue = this.inputs[i].staticValue.toString();\n            }\n\n            if (inputParameter['runTime'] && inputParameter['runTime'].functionParameter.listOfValues) {\n                this.inputs[i].textItems = this.inputs[i].textItems.concat(inputParameter['runTime'].functionParameter.listOfValues);\n            }\n\n            this.inputs[i].textItems = this.inputs[i].textItems.concat(this.variables);\n        }\n\n        this.updateItems();\n\n        for ( let i = 0; i < this.inputParameterForms.length; i++) {\n            let runTime = this.inputParameterForms[i].value.runTime;\n            if (!runTime || !runTime.functionParameter || !runTime.functionParameter.listOfValues) {\n                this.inputs[i].inputParameterSubscription = this.inputParameterForms[i].valueChanges.subscribe(() => {\n                    if (!this.ignoreChanges) {\n                        this.updateItems();\n                        this.ignoreChanges = true;\n                        if (this.inputParameterForms[i].controls.datalinkColumn.value) {\n                            this.inputParameterForms[i].controls.value.setValue(null);\n                        } else {\n                            this.inputParameterForms[i].controls.value.setValue(this.inputs[i].staticValue);\n                        }\n                        this.ignoreChanges = false;\n                    }\n                    this.errors[i] = this.editDatalinkService.hubFormsService.getFormErrorMessages(this.inputParameterForms[i], true);\n                });\n            }\n\n            if (this.updateParameterName) {\n                this.inputs[i].datalinkColumnSubscription\n                    = this.inputParameterForms[i].controls.datalinkColumn.valueChanges.subscribe(value => {\n                    if (value) {\n                        this.inputParameterForms[i].controls.dataType.setValue(value.dataType);\n                        this.inputParameterForms[i].controls.name.setValue(value.name);\n                    } else {\n                        this.inputParameterForms[i].controls.dataType.setValue(eTypeCode.String);\n                        this.inputParameterForms[i].controls.name.setValue('');\n                    }\n                    this.errors[i] = this.editDatalinkService.hubFormsService.getFormErrorMessages(this.inputParameterForms[i], true);\n                });\n            }\n        }\n    }\n\n    updateStatic(value: {textValue: string, item: any}, i: number) {\n        if (!this.inputUpdating) {\n            this.inputUpdating = true;\n            const parameter = this.inputParameterForms[i];\n            \n            if (value.item === null && parameter.controls.datalinkColumn.value !== null) {\n                parameter.controls.datalinkColumn.setValue(null);\n            }\n\n            this.inputParameterForms[i].controls.value.setValue(value.textValue);\n            this.inputParameterForms[i].markAsDirty();\n            this.inputUpdating = false;\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.inputs) {\n            this.inputs.forEach(input => {\n                if (input.datalinkColumnSubscription) { input.datalinkColumnSubscription.unsubscribe(); }\n                if (input.inputParameterSubscription) { input.inputParameterSubscription.unsubscribe(); }\n            });\n        }\n    }\n\n    ngOnChanges() {\n        let table = new DexihTable();\n        table.name = 'Output Columns';\n        table.dexihTableColumns = this.outputColumns;\n\n        this.outputTables = [table];\n\n        if (this.datalinkTargets) {\n            this.datalinkTargets.forEach(target => {\n                this.outputTables.push(target['table']);\n            });\n        }\n    }\n\n    updateItems() {\n        for ( let i = 0; i < this.inputParameterForms.length; i++) {\n            let inputParameter: DexihFunctionParameter = this.inputParameterForms[i].value;\n            this.type = new TypeFunctions(inputParameter.dataType, null, null, null);\n\n            let name = this.inputParameterForms[i].value.runTime?.functionParameter?.name ?? inputParameter.name;\n            if (!this.allowDataTypeSelect && !this.allowNameSelect) {\n                this.inputs[i].name = name + (this.type.dataType === eTypeCode.Unknown ? '' : '(' + eTypeCode[this.type.dataType] + ')') + (this.rank > 0 ? '[]' : '')\n            } else {\n                this.inputs[i].name = name;\n            }\n        }\n    }\n\n    add() {\n        this.addParameter.emit(this.inputParameterForms[0]);\n    }\n\n    remove() {\n        this.removeParameter.emit(this.inputParameterForms[0]);\n    }\n\n    updateNewColumn(value: {textValue: string, item: any}, i: number) {\n        if (value.item === null && this.newColumn === null && !this.newColumnUpdating) {\n            this.newColumnUpdating = true;\n            if (!this.newColumn) {\n                this.newColumn = new DexihDatalinkColumn();\n                this.newColumn.position = 1000 - this.newColumn.key;\n                this.newColumn.key = this.hubService.getHubCache().getNextSequence();\n            }\n\n            this.newColumn.dataType = this.outputParameterForms[i].controls.dataType.value;\n            this.newColumn.name = value.textValue;\n            this.newColumn.logicalName = value.textValue;\n\n            this.outputParameterForms[i].controls.datalinkColumn.setValue(this.newColumn);\n            this.outputParameterForms[i].markAsDirty();\n            this.newColumnUpdating = false;\n            this.updateItems();\n        }\n    }\n\n}\n","    <section>\n        <div class=\"input-group d-flex\">\n            <form *ngFor=\"let inputParameterForm of inputParameterForms; let i = index;\" [formGroup]=\"inputParameterForm\" class=\"flex-fill\">\n                <div class=\"input-group\">\n                    <div *ngIf=\"!allowNameSelect\" class=\"input-group-prepend\">\n                        <div class=\"input-group-text\">\n                            <!-- {{inputParameterForm.value.runTime?.functionParameter?.name + \n                                (type.dataType === eTypeCode.Unknown ? '' : (\"(\" + eTypeCode[type.dataType] + \")\"))}} {{rank > 0 ? \"[]\" : \"\"}} -->\n                                {{inputs[i].name}}\n                        </div>\n                    </div>\n\n                    <div *ngIf=\"allowNameSelect == true\" class=\"form-control p-0\">\n                        <form-input [border]=\"false\" formControlName=\"name\" type=\"text\"\n                            placeholder=\"Enter a name for the parameter\">\n                        </form-input>\n                    </div>\n\n                    <div *ngIf=\"!inputParameterForm.value.runTime?.functionParameter?.isLabel\" class=\"form-control p-0\">\n                        <form-select formControlName=\"datalinkColumn\" [border]=\"false\"\n                            [items]=\"inputColumnGroups\" parentName=\"group\" childItems=\"columns\" itemKey=\"key\" itemName=\"logicalName\" [(textValue)]=\"inputs[i].staticValue\"\n                            [enableKeySelect]=\"false\" [enableTextEntry]=\"rank === 0\" [enableTextEntryMatch]=\"false\" [setTextEntryToValue]=\"false\"\n                            (valueChange)=\"updateStatic($event, i)\" [allowNullSelect]=\"true\" selectNullMessage=\"Use Null\" [allowBlankSelect]=\"true\" blankSelectMessage=\"Use Blank\"\n                            [textEntryNote]=\"rank > 0 ? 'Select an array type source (otherwise select add to build an array)' : 'Select a column or enter a static value.'\" \n                            [textEntryItems]=\"inputs[i].textItems\" textEntryItemsTitle=\"Variables\"\n                            [errors]=\"errors[i].datalinkColumn\" [showErrorMessage]=\"false\"\n                            >\n                        </form-select>\n                    </div>\n\n                    <div *ngIf=\"inputParameterForm.value.runTime?.functionParameter?.isLabel\" class=\"form-control p-0\">\n                        <form-input [border]=\"false\" [(ngModel)]=\"inputs[i].staticValue\" [ngModelOptions]=\"{standalone: true}\"\n                            (ngModelChange)=\"updateStatic($event, i)\"\n                            type=\"text\" placeholder=\"Enter a static value.\">\n                        </form-input>\n                    </div>\n\n                    <div *ngIf=\"allowDataTypeSelect == false && allowNameSelect == true && type.dataType !== eTypeCode.Unknown\" class=\"input-group-text\">\n                        {{\"(\" + eTypeCode[type.dataType] + \")\"}}\n                    </div>\n\n                    <div *ngIf=\"allowDataTypeSelect == true\" class=\"form-control p-0\">\n                        <form-select [border]=\"false\" formControlName=\"dataType\" [items]=\"typeCodes\" itemKey=\"key\"\n                            itemName=\"name\" >\n                        </form-select>\n                    </div>\n                    <div *ngIf=\"allowDataTypeSelect == true\" class=\"form-control\">\n                        <form-checkbox label=\"Allow Null\" [border]=\"false\" formControlName=\"allowNull\"></form-checkbox>\n                    </div>\n                </div>\n            </form>\n\n            <form *ngFor=\"let outputParameterForm of outputParameterForms; let i = index;\" [formGroup]=\"outputParameterForm\" class=\"ml-1  flex-fill\">\n                <form-select class=\"flex-grow-1\" [border]=\"false\" class=\"form-control p-0\" \n                    formControlName=\"datalinkColumn\" [items]=\"outputTables\" parentName=\"name\" childItems=\"dexihTableColumns\" itemKey=\"key\"\n                    itemName=\"logicalName\" [enableKeySelect]=\"false\" [enableTextEntry]=\"true\" [setTextEntryToValue]=\"false\" [allowNullSelect]=\"true\" selectNullMessage=\"Use Null\" [allowBlankSelect]=\"true\" blankSelectMessage=\"Use Blank\"\n                    textEntryNote=\"Enter new column name, or select existing\"\n                    (valueChange)=\"updateNewColumn($event, i)\">\n                </form-select>\n            </form>\n\n            <div *ngIf=\"allowAdd && allowRemove\" class=\"input-group-append flex-shrink-1 ml-1 \">\n                <button *ngIf=\"allowAdd\" class=\"btn btn-light\" type=\"button\" (click)=\"add()\" [disabled]=\"!allowAdd\" value=\"Add\">\n                    <i class=\"fa fa-plus-square-o\"></i>\n                </button>\n                <button *ngIf=\"allowRemove\" class=\"btn btn-light\" type=\"button\" (click)=\"remove()\" [disabled]=\"!allowRemove\" value=\"Remove\">\n                    <i class=\"fa fa-minus-square-o\"></i>\n                </button>\n            </div>\n        </div>\n        <small *ngIf=\"!allowAdd && inputParameterForms[0].value.runTime?.functionParameter?.description\" class=\"form-text text-muted\">\n            <markdown [data]=\"inputParameterForms[0].value.runTime.functionParameter.description\"></markdown>\n        </small>\n    </section>\n","<d-widget-section title=\"Profile Rules\" [showExpandButton]=\"true\">\n    <div class=\"container\">\n        <form *ngIf=\"datalinkForm\" [formGroup]=\"datalinkForm\">\n            <fieldset>\n                <section>\n                    <form-input label=\"Profile Table Name\" formControlName=\"profileTableName\"\n                        placeholder=\"Enter the profile table name.\" [autocapitalize]=\"true\" iconClass=\"fa fa-list\"\n                        note=\"Specify the table name in the 'Audit Connection' to send the profile results to.  If this table does not exist, it will be created on first run.\">\n                    </form-input>\n                </section>\n            </fieldset>\n        </form>\n\n        <d-table [enableMultiSelect]=\"true\" [enableManualSort]=\"false\" [enableFilter]=\"false\" [columns]=\"columns\"\n            [dataObservable]=\"tableData\" [(selectedItems)]=\"selectedProfileRules\"\n            (onSelectedChange)=\"hasChanged($event)\" keyColumn=\"functionMethodName\">\n\n            <ng-template #rowAction select=\"rowAction\" let-item=\"item\">\n                <form-checkbox label=\"Capture Detailed Distribution\" [(ngModel)]=\"item.detailedResults\"\n                    name=\"detailedResults\" (change)=\"updateProfileRule(item)\"></form-checkbox>\n            </ng-template>\n        </d-table>\n    </div>\n</d-widget-section>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { Observable, BehaviorSubject, Subscription, combineLatest} from 'rxjs';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { DexihDatalinkProfile, eFunctionType } from '../../../../shared/shared.models';\n\n@Component({\n    selector: 'profile-rules',\n    templateUrl: './profile-rules.component.html'\n})\n\n\nexport class DatalinkEditProfileRulesComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n\n    private hubCache: HubCache;\n\n    private _subscription: Subscription;\n\n    selectedProfileRules: Array<DexihDatalinkProfile> = new Array<DexihDatalinkProfile>();\n\n    columns = [\n        { name: 'name', title: 'Profile Name', format: '' },\n        { name: 'description', title: 'Description', format: '' }\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<DexihDatalinkProfile>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router\n    ) { }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n            ).subscribe(async result => {\n                this.hubCache = result[0];\n                this.datalinkForm = result[1];\n\n                if (this.datalinkForm) {\n                    // load the cache first\n                    if (this.hubCache.isLoaded()) {\n                        this.selectedProfileRules = this.datalinkForm.value.dexihDatalinkProfiles;\n                        let profileRules = (await this.hubService.GetFunctionsByType(eFunctionType.Profile))\n                            .map(profile => {\n\n                                let profileRuleForm = this.selectedProfileRules.find(c =>\n                                    c.functionAssemblyName === profile.functionAssemblyName\n                                    && c.functionClassName === profile.functionClassName\n                                    && c.functionMethodName === profile.functionMethodName);\n\n                                return {\n                                    name: profile.name,\n                                    description: profile.description,\n                                    functionAssemblyName: profile.functionAssemblyName,\n                                    functionClassName: profile.functionClassName,\n                                    functionMethodName: profile.functionMethodName,\n                                    detailedResults: profileRuleForm ? profileRuleForm.detailedResults : false\n                                }\n                        });\n                        this._tableData.next(profileRules);\n                    }\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Edit Custom Function');\n        }\n\n    }\n\n    updateProfileRules() {\n        if (this.datalinkForm) {\n            let profiles = <FormArray>this.datalinkForm.controls.dexihDatalinkProfiles;\n\n            // reset existing profiles.\n            profiles.controls.forEach(profile => {\n                let profileFormGroup = <FormGroup>profile;\n                profileFormGroup.controls.isValid.setValue(false);\n            });\n\n            // add the selected profiles, with isValid = true\n            this.selectedProfileRules.forEach(profile => {\n                let profileRuleForm = <FormGroup>profiles.controls.find(c => c.value.functionAssemblyName === profile.functionAssemblyName\n                    && c.value.functionClassName === profile.functionClassName\n                    && c.value.functionMethodName === profile.functionMethodName);\n\n                if (!profileRuleForm) {\n                    let profileRule = new DexihDatalinkProfile();\n                    profileRule.key = this.hubCache.getNextSequence();\n                    profileRule.datalinkKey = this.datalinkForm.value.key;\n                    profileRule.functionAssemblyName = profile.functionAssemblyName;\n                    profileRule.functionClassName = profile.functionClassName;\n                    profileRule.functionMethodName = profile.functionMethodName;\n                    profileRule.detailedResults = profile.detailedResults;\n                    profileRule.isValid = true;\n                    profileRuleForm = this.editDatalinkService.hubFormsService.datalinkProfileFormGroup(profileRule);\n                    profiles.push(profileRuleForm);\n                } else {\n                    profileRuleForm.controls.isValid.setValue(true);\n                }\n            });\n\n            for (let i = profiles.controls.length - 1; i >= 0; i--) {\n                if (!profiles.controls[i].value.isValid) {\n                    profiles.removeAt(i);\n                }\n            }\n        }\n    }\n\n    updateProfileRule(profile: DexihDatalinkProfile) {\n        let profiles = <FormArray>this.datalinkForm.controls.dexihDatalinkProfiles;\n\n        let profileRuleForm = <FormGroup>profiles.controls.find(c => c.value.functionAssemblyName === profile.functionAssemblyName\n            && c.value.functionClassName === profile.functionClassName\n            && c.value.functionMethodName === profile.functionMethodName);\n\n        profileRuleForm.controls.detailedResults.setValue(profile.detailedResults);\n        this.editDatalinkService.hubFormsService.hasChanged = true;\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.updateProfileRules();\n    }\n\n    hasChanged(items) {\n        if (items) {\n            this.selectedProfileRules = items;\n        }\n        this.updateProfileRules();\n        this.editDatalinkService.hubFormsService.hasChanged = true;\n    }\n\n}\n","import { Routes, RouterModule } from '@angular/router';\nimport { DatalinkEditPropertiesComponent } from './properties/datalink-edit-properties.component';\nimport { DatalinkEditComponent } from './datalink-edit.component';\nimport { DatalinkEditSourceTableComponent } from './source-table/datalink-edit-source-table.component';\nimport { DatalinkEditTargetComponent } from './target/datalink-edit-target.component';\nimport { DatalinkEditTransformComponent } from './transform/datalink-edit-transform.component';\nimport { DatalinkEditProfileRulesComponent } from './profile-rules/profile-rules.component';\nimport { DatalinkEditValidationComponent } from './validation/datalink-edit-validation.component';\nimport { DatalinkRunPlanComponent } from './run-plan/datalink-run-plan.component';\n\nimport { StandardFunctionEditComponent }  from './standard-function-edit';\nimport { CustomFunctionEditComponent }  from './custom-function-edit';\nimport { MappingEditComponent } from './mapping-edit';\nimport { DatalinkEditGuard } from './datalink-edit-guard';\nimport { PreviewDataComponent } from './preview-data';\nimport { PreviewTableComponent} from './preview-table';\nimport { TransformTableEditComponent } from './transform-table-edit/transform-table-edit.component';\nimport { DatalinkEditNewTransformComponent } from './new-transform/datalink-edit-new-transform.component';\nimport { DatalinkColumnEditComponent } from './datalink-column-edit/datalink-column-edit.component'\nimport { ResultsViewComponent } from '../../results';\nimport { UnGroupEditComponent } from './unGroup-edit';\nimport { DatalinkEditTargetTableComponent } from './target/datalink-edit-target-table.component';\n\nexport const standardFunctionRoutes: Routes = [\n    {path: '', canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent, data: { pageTitle: 'Standard Function' }},\n    {path: ':functionType', canDeactivate: [DatalinkEditGuard],\n        component: StandardFunctionEditComponent, data: { pageTitle: 'Standard Function' }},\n    {path: ':functionType/:datalinkTransformItemKey',\n        canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent, data: { pageTitle: 'Standard Function' }},\n//    {path: 'edit-column/:columnKey', component: TableColumnEditComponent, data: { pageTitle: 'Edit Column', action: 'edit'}}\n]\n\nexport const customFunctionRoutes: Routes = [\n    {path: '', canDeactivate: [DatalinkEditGuard], component: CustomFunctionEditComponent, data: { pageTitle: 'Custom Function' }},\n//    {path: 'edit-column/:columnKey', component: TableColumnEditComponent, data: { pageTitle: 'Edit Column', action: 'edit'}}\n]\n\nexport const mappingEditRoutes: Routes = [\n    {path: '', canDeactivate: [DatalinkEditGuard], component: MappingEditComponent, data: { pageTitle: 'Mapping' }},\n//    {path: 'edit-column/:columnKey', component: TableColumnEditComponent, data: { pageTitle: 'Edit Column', action: 'edit'}}\n]\n\nexport const sourceTableRoutes: Routes = [\n    { path: '', pathMatch: 'full', component: DatalinkEditSourceTableComponent},\n    { path: 'preview-table-data/table/:tableKey', component: PreviewTableComponent,\n        data: { pageTitle: 'Preview Table', action: 'preview'} },\n    { path: 'preview-table-data/datalink/:datalinkKey', component: PreviewTableComponent,\n        data: { pageTitle: 'Preview Datalink', action: 'preview'} },\n    { path: 'column/:datalinkColumnKey', component: DatalinkColumnEditComponent,\n        data: { pageTitle: 'Edit Column', action: 'edit'} },\n    { path: 'newcolumn', component: DatalinkColumnEditComponent,\n        data: { pageTitle: 'New Column', action: 'new'} },\n    { path: 'table-edit/:tableKey', data: { pageTitle: 'Edit Table', action: 'edit'},\n            loadChildren: () => import('../../table/table-edit/table-edit.module').then(m => m.TableEditModule)},\n];\n\nexport const targetRoutes: Routes = [\n    { path: '', pathMatch: 'full', component: DatalinkEditTargetComponent},\n    { path: 'table-edit/:targetKey', data: { pageTitle: 'Edit Target Table', action: 'edit'}, children: [\n        { path: '', pathMatch: 'full', canDeactivate: [DatalinkEditGuard], component: DatalinkEditTargetTableComponent },\n        { path: 'preview-table-data/:tableKey', component: PreviewTableComponent,\n            data: { pageTitle: 'Preview Table', action: 'preview'} },\n        ]},\n    { path: 'table-new', data: { pageTitle: 'New Target Table', action: 'new'}, children: [\n        { path: '', pathMatch: 'full', canDeactivate: [DatalinkEditGuard], component: DatalinkEditTargetTableComponent },\n        { path: 'preview-table-data/:tableKey', component: PreviewTableComponent,\n            data: { pageTitle: 'Preview Table', action: 'preview'} },\n        ]},\n    { path: 'column/:datalinkColumnKey', component: DatalinkColumnEditComponent,\n        data: { pageTitle: 'Edit Column', action: 'edit'} },\n];\n\nexport const validationRoutes: Routes = [\n    {path: '', pathMatch: 'full', component: DatalinkEditValidationComponent, data: { pageTitle: 'Validation' } },\n    { path: 'standard-function-edit', data: { pageTitle: 'Standard Function' },\n        canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent },\n    { path: 'standard-function-edit/:functionType', data: { pageTitle: 'Standard Function' },\n        canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent },\n    { path: 'standard-function-edit/:functionType/:datalinkTransformItemKey', data: { pageTitle: 'Standard Function' },\n        canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent },\n    { path: 'custom-function-edit', data: { pageTitle: 'Custom Function' },\n        canDeactivate: [DatalinkEditGuard], component: CustomFunctionEditComponent },\n    { path: 'custom-function-edit/:functionType', data: { pageTitle: 'Custom Function' },\n        canDeactivate: [DatalinkEditGuard], component: CustomFunctionEditComponent },\n    { path: 'column/:datalinkColumnKey', component: DatalinkColumnEditComponent,\n        data: { pageTitle: 'Edit Column', action: 'edit'} },\n];\n\nexport const datalinkEditRoutes: Routes = [\n    { path: '', redirectTo: 'properties'},\n\n    { path: 'properties', component: DatalinkEditPropertiesComponent, data: { pageTitle: 'Properties', help: 'datalink.md' } },\n    { path: 'source', data: { pageTitle: 'Source'}, children: sourceTableRoutes },\n    { path: 'target', data: { pageTitle: 'Target'}, children: targetRoutes },\n    { path: 'validation', data: { pageTitle: 'Validation' }, children: validationRoutes},\n    { path: 'profiles', component: DatalinkEditProfileRulesComponent, data: { pageTitle: 'Profile Rules' } },\n    { path: 'new/:position', component: DatalinkEditNewTransformComponent, data: {pageTitle: 'New Transform'}},\n    { path: 'transform/:datalinkTransformKey', data: { pageTitle: 'Transform' } , children: [\n        { path: '', pathMatch: 'full', component: DatalinkEditTransformComponent },\n        { path: 'table-edit/:tableKey', data: { pageTitle: 'Edit Table', action: 'edit'},\n                loadChildren: () => import('../../table/table-edit/table-edit.module').then(m => m.TableEditModule)},\n        { path: 'standard-function-edit', data: { pageTitle: 'Standard Function' },\n            canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent },\n        { path: 'standard-function-edit/:functionType', data: { pageTitle: 'Standard Function' },\n            canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent },\n        { path: 'standard-function-edit/:functionType/:datalinkTransformItemKey', data: { pageTitle: 'Standard Function' },\n            canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent },\n        { path: 'custom-function-edit', data: { pageTitle: 'Custom Function', help: 'function.md' },\n            canDeactivate: [DatalinkEditGuard], component: CustomFunctionEditComponent },\n        { path: 'custom-function-edit/:functionType', data: { pageTitle: 'Custom Function', help: 'function.md' },\n            canDeactivate: [DatalinkEditGuard], component: CustomFunctionEditComponent },\n        { path: 'custom-function-edit/:functionType/:datalinkTransformItemKey',\n            data: { pageTitle: 'Custom Function', help: 'function.md' },\n            canDeactivate: [DatalinkEditGuard], component: CustomFunctionEditComponent },\n        { path: 'mapping-edit/:type', data: { pageTitle: 'Mapping Edit' },\n            canDeactivate: [DatalinkEditGuard], component: MappingEditComponent },\n        { path: 'mapping-edit/:type/:datalinkTransformItemKey', data: { pageTitle: 'Mapping Edit' },\n            canDeactivate: [DatalinkEditGuard], component: MappingEditComponent },\n        { path: 'unGroup-edit', data: { pageTitle: 'Un-Group Edit' },\n            component: UnGroupEditComponent },\n        { path: 'unGroup-edit/:datalinkTransformItemKey', data: { pageTitle: 'Un-Group Edit' },\n            component: UnGroupEditComponent },\n        { path: 'preview-transform-data', data: { pageTitle: 'Preview Data' },\n            component: PreviewDataComponent },\n        { path: 'transform-table-edit', data: { pageTitle: 'Transform Table Edit' },\n            component: TransformTableEditComponent },\n        { path: 'column/:datalinkColumnKey', component: DatalinkColumnEditComponent,\n            data: { pageTitle: 'Edit Column', action: 'edit'} },\n    ] },\n\n    { path: 'run-plan', component: DatalinkRunPlanComponent, data: { pageTitle: 'Run Plan' } },\n    { path: 'result-view/:auditConnectionKey/:auditKey', component: ResultsViewComponent, data: { pageTitle: 'Detailed Result' } },\n    { path: 'preview-table-data/datalink/:datalinkKey', component: PreviewTableComponent,\n    data: { pageTitle: 'Preview Datalink', action: 'preview'} },\n\n];\n\nexport const routes: Routes = [\n        { path: 'new', component: DatalinkEditComponent, canDeactivate: [DatalinkEditGuard],\n            data: { action: 'new', navigateSkip: true, pageTitle: 'New Datalink' }, children: datalinkEditRoutes},\n        { path: 'edit/:datalinkKey', component: DatalinkEditComponent, canDeactivate: [DatalinkEditGuard],\n            data: { action: 'edit', navigateSkip: true, pageTitle: 'Edit Datalink' }, children: datalinkEditRoutes},\n        { path: 'copy/:datalinkKey', component: DatalinkEditComponent, canDeactivate: [DatalinkEditGuard],\n            data: { action: 'copy', navigateSkip: true, pageTitle: 'Copy Datalink' }, children: datalinkEditRoutes},\n        { path: 'sourceTable/:sourceTableKey', component: DatalinkEditComponent, canDeactivate: [DatalinkEditGuard],\n            data: { action: 'sourceTable', navigateSkip: true, pageTitle: 'Edit Datalink' }, children: datalinkEditRoutes}\n];\n\nexport const Routing = RouterModule.forChild(routes);\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable} from 'rxjs';\n\nexport interface CanComponentDeactivate {\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\n}\n\n@Injectable()\nexport class DatalinkEditGuard implements CanDeactivate<CanComponentDeactivate> {\n\n  canDeactivate(component: CanComponentDeactivate) {\n    return component && component.canDeactivate ? component.canDeactivate() : true;\n  }\n\n}\n","import { Component, Input, Output, ViewChild, OnInit, OnChanges, OnDestroy, EventEmitter, ElementRef } from '@angular/core';\nimport { Observable, BehaviorSubject, Subscription, combineLatest } from 'rxjs';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { eFunctionType, eTransformType, eTransformItemType, DexihDatalinkTransformItem,\n    DexihDatalinkTransform, DexihDatalinkColumn, eTypeCode, DexihDatalinkTable, eDeltaType, eCleanActionItems, eCompare } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'mapping',\n    templateUrl: './mapping.component.html'\n})\nexport class MappingComponent implements OnInit, OnDestroy, OnChanges {\n    @Input() public datalinkTransformForm: FormGroup;\n    @Input() public allowStandard = false;\n    @Input() public allowMapping = false;\n    @Input() public allowAggregate = false;\n    @Input() public allowRow = false;\n    @Input() public allowCondition = false;\n    @Input() public allowValidation = false;\n    @Input() public allowOutput = false;\n    @Input() public allowGroup = false;\n    @Input() public allowJoin = false;\n    @Input() public allowSort = false;\n    @Input() public allowSeries = false;\n    @Input() public allowJoinNode = false;\n    @Input() public title: string;\n\n    @Output() public addMapping: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public removeMapping: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public updateMapping: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public hasChanged: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public onColumnDrop: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChild('mappingTable', { static: true }) public mappingTable: ElementRef;\n\n    private _subscription: Subscription;\n    private _changesSubscription: Subscription;\n\n    columns: Array<any>;\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    public functionType: eFunctionType;\n    public transformType: eTransformType;\n    public eTransformType = eTransformType;\n    public eTransformItemType = eTransformItemType;\n\n    columnGroups: Array<{group: string, columns: Array<DexihDatalinkColumn>}> = [];\n    inputDateColumns: DexihDatalinkColumn[];\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        private router: Router,\n        private route: ActivatedRoute\n    ) {\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n    }\n\n    ngOnChanges() {\n        try {\n            // this.columns = [{ name: 'function', title: 'Mapping', format: 'Md', class: 'functionClass' }];\n            this.columns = [];\n\n            // if (!this.allowSort) {\n            //     this.columns.push({ name: 'function', title: 'Function Name', format: '', class: 'functionClass' });\n            // }\n\n            // this.columns.push({ name: 'input', title: 'Input(s)', format: 'Md', class: 'inputClass' });\n\n            // if (this.allowOutput || this.allowJoinNode) {\n            //     this.columns.push({ name: 'output', title: 'Output(s)', format: 'Md', class: 'outputClass' });\n            // }\n\n            // if (this.allowSort) {\n            //     this.columns.push({ name: 'sortDirection', title: 'Direction', format: '' });\n            // }\n\n            if (this._subscription) { this._subscription.unsubscribe(); }\n            this._subscription = combineLatest([\n                this.hubService.getHubCacheObservable(),\n                this.hubService.getRemoteLibrariesObservable()]\n            ).subscribe(() => {\n\n                this.functionType = this.editDatalinkService.getFunctionType(this.datalinkTransformForm.value);\n                this.transformType = this.datalinkTransformForm.value.transformType;\n\n                this.updateTableData();\n\n                if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n                this._changesSubscription = this.datalinkTransformForm.controls.dexihDatalinkTransformItems.valueChanges.subscribe(() => this.updateTableData());\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Mappings');\n        }\n    }\n\n    updateTableData() {\n        try {\n            if (this.datalinkTransformForm) {\n                let runTime = this.datalinkTransformForm.controls['runTime'].value;\n                let inputColumns = <DexihDatalinkColumn[]> runTime.inputColumns;\n\n                if (inputColumns === null) { \n                    return;\n                }\n                \n                this.inputDateColumns = inputColumns.filter(c => c.dataType === eTypeCode.DateTime || c.dataType === eTypeCode.Date);\n                this.columnGroups = this.editDatalinkService.getColumnGroups(inputColumns);\n\n                let data = [];\n                let items = <FormArray>this.datalinkTransformForm.controls.dexihDatalinkTransformItems;\n                let filteredItems: Array<any> = [];\n\n                if (this.allowJoinNode) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.JoinNode));\n                }\n\n                if (this.allowGroup) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.Column));\n                }\n\n                if (this.allowStandard || this.allowJoin) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.BuiltInFunction\n                            || d.value.transformItemType === eTransformItemType.CustomFunction));\n                }\n\n                if (this.allowAggregate) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.AggregatePair));\n                }\n\n                if (this.allowMapping) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.ColumnPair));\n                }\n\n                if (this.allowCondition) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.FilterPair));\n                }\n\n                if (this.allowJoin) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.JoinPair));\n                }\n\n                if (this.allowRow) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.UnGroup));\n                }\n\n                if (this.allowSort) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.Sort));\n                }\n\n                filteredItems.sort((a, b) => a.value.position - b.value.position).forEach(item => {\n                    const transformItem: DexihDatalinkTransformItem = item.value;\n                    let functionItem = {\n                        datalinkTransformItem: transformItem,\n                        key: transformItem.key,\n                    }\n\n                    data.push(functionItem);\n                });\n\n                this._tableData.next(data);\n            }\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Mappings, update data');\n        }\n\n    }\n\n    private getItemFormGroup(datalinkTransformItemKey: number): FormGroup {\n        let items = <FormArray>this.datalinkTransformForm.controls['dexihDatalinkTransformItems'];\n        let item = <FormGroup>items.controls.find(c => c.value.key === datalinkTransformItemKey);\n        return item;\n    }\n\n    editMapping(item: DexihDatalinkTransformItem) {\n        let key = item.key;\n        let itemForm = this.getItemFormGroup(key);\n        let transformItemType = itemForm.value.transformItemType;\n\n        switch (transformItemType) {\n            case eTransformItemType.BuiltInFunction:\n                this.router.navigate(\n                    ['standard-function-edit', this.functionType, key],\n                    { relativeTo: this.route.parent });\n                break;\n            case eTransformItemType.CustomFunction:\n                this.router.navigate(\n                    ['custom-function-edit', this.functionType, key],\n                    { relativeTo: this.route.parent });\n                break;\n            case eTransformItemType.Column:\n            case eTransformItemType.JoinNode:\n            case eTransformItemType.GroupNode:\n            case eTransformItemType.ColumnPair:\n            case eTransformItemType.Sort:\n            case eTransformItemType.JoinPair:\n            case eTransformItemType.FilterPair:\n            case eTransformItemType.AggregatePair:\n            case eTransformItemType.Series:\n                this.router.navigate(['mapping-edit', transformItemType, key],\n                    { relativeTo: this.route.parent });\n                break;\n            case eTransformItemType.UnGroup:\n                this.router.navigate(['unGroup-edit', key], { relativeTo: this.route.parent });\n                break;\n}\n    }\n\n    deleteMapping(item: DexihDatalinkTransformItem) {\n        this.deleteSelected([item]);\n    }\n\n    deleteSelected(items: Array<DexihDatalinkTransformItem>) {\n        items.forEach(item => {\n            let key = item.key;\n            let itemForm = this.getItemFormGroup(key);\n            this.editDatalinkService.deleteDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n        });\n    }\n\n    // if a sort event has triggered from the table, then reset the positions of the datalink transform items.\n    datalinkItemSortChange(items: Array<DexihDatalinkTransformItem>) {\n        items.forEach((item, index) => {\n            let existingItems = <FormArray>this.datalinkTransformForm.controls.dexihDatalinkTransformItems;\n            let datalinkTransformItem = <FormGroup>existingItems.controls\n                .find(c => c.value.key === item.key);\n            if (datalinkTransformItem) {\n                datalinkTransformItem.controls.position.setValue(index);\n            }\n        });\n    }\n\n    // triggered when a source column is dropped onto the output column\n    newOutputDrop(inputColumn: DexihDatalinkColumn) {\n        this.onColumnDrop.emit({\n            inputColumn: inputColumn,\n            outputColumn: null\n        });\n    }\n\n    createJoinNode() {\n        let items = <FormArray>this.datalinkTransformForm.controls.dexihDatalinkTransformItems;\n        if (items.controls.find(d => d.value.transformItemType === eTransformItemType.JoinNode)) {\n            this.authService.informationDialog('Can not add node',  'Only one join node can be added.');\n            return;\n        }\n\n        let joinTable = this.datalinkTransformForm.value.joinDatalinkTable;\n\n        let item = new DexihDatalinkTransformItem();\n        let outputColumn: DexihDatalinkColumn = new DexihDatalinkColumn();\n        outputColumn.position = 0;\n        outputColumn.key = this.hubService.getHubCache().getNextSequence();\n        outputColumn.name = joinTable.name;\n        outputColumn.logicalName = joinTable.name;\n        let io = new InputOutputColumns();\n        let columns = joinTable.dexihDatalinkColumns.map((col, index) => {\n            let childColumn = io.copyDatalinkColumn(col, index, 'Join Node');\n            childColumn.key = this.hubService.getHubCache().getNextSequence();\n            childColumn.datalinkTableKey = null;\n            return childColumn;\n        });\n        outputColumn.childColumns = columns;\n        outputColumn.dataType = eTypeCode.Node;\n\n        item.position = -1;\n        item.datalinkTransformKey = this.datalinkTransformForm.value.key;\n        item.targetDatalinkColumn = outputColumn;\n        item.isValid = true;\n        item.transformItemType = eTransformItemType.JoinNode;\n\n        let itemForm = this.editDatalinkService.hubFormsService.datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n        this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n    }\n\n    createGroupNode() {\n        let items = <FormArray>this.datalinkTransformForm.controls.dexihDatalinkTransformItems;\n        if (items.controls.find(d => d.value.transformItemType === eTransformItemType.GroupNode)) {\n            this.authService.informationDialog('Can not add node',  'Only one group node can be added.');\n            return;\n        }\n\n        let item = new DexihDatalinkTransformItem();\n        let outputColumn: DexihDatalinkColumn = new DexihDatalinkColumn();\n        outputColumn.position = 0;\n        outputColumn.key = this.hubService.getHubCache().getNextSequence();\n        outputColumn.name = 'Group';\n        outputColumn.logicalName = 'Group';\n        outputColumn.dataType = eTypeCode.Node;\n\n        item.position = -1;\n        item.datalinkTransformKey = this.datalinkTransformForm.value.key;\n        item.targetDatalinkColumn = outputColumn;\n        item.isValid = true;\n        item.transformItemType = eTransformItemType.GroupNode;\n\n        let itemForm = this.editDatalinkService.hubFormsService.datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n        this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n    }\n\n    newMapping(itemType: eTransformItemType) {\n        this.router.navigate(['mapping-edit', itemType], { relativeTo: this.route });\n    }\n\n    addAll() {\n        let runTime = this.datalinkTransformForm.controls['runTime'].value;\n        let inputColumns = <DexihDatalinkColumn[]> runTime.inputColumns;\n\n        inputColumns.forEach(inputColumn => {\n            this.createMapping(inputColumn);\n        });\n    }\n\n    addGroup(group: {group: string, columns: Array<DexihDatalinkColumn>}) {\n        group.columns.forEach(inputColumn => {\n            this.createMapping(inputColumn);\n        });\n    }\n\n    private createMapping(inputColumn: DexihDatalinkColumn) {\n        let runTime = this.datalinkTransformForm.controls['runTime'].value;\n        let outputColumns = <DexihDatalinkColumn[]> runTime.outputColumns;\n\n        if ( outputColumns.findIndex(c => c.name === inputColumn.name) >= 0) {\n            return;\n        }\n\n        let item = new DexihDatalinkTransformItem();\n        let io = new InputOutputColumns();\n        let outputColumn = io.copyDatalinkColumn(inputColumn, 0, 'mapping');\n        outputColumn.key = this.hubService.getHubCache().getNextSequence();\n        if (outputColumn.childColumns) {\n            outputColumn.childColumns.forEach(col => {\n                col.key = this.hubService.getHubCache().getNextSequence();\n            });\n        }\n        outputColumn.datalinkTableKey = null;\n        item.datalinkTransformKey = this.datalinkTransformForm.value.key;\n        item.sourceDatalinkColumn = inputColumn;\n        item.targetDatalinkColumn = outputColumn;\n        item.transformItemType = eTransformItemType.ColumnPair;\n        item.isValid = true;\n        let itemForm = this.editDatalinkService.hubFormsService\n            .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n        this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n    }\n\n    // joins the column to the valid from/to columns\n    addValidFromTo(column: DexihDatalinkColumn) {\n        let joinTable = <DexihDatalinkTable> this.datalinkTransformForm.value.joinDatalinkTable;\n        let validFrom = joinTable.dexihDatalinkColumns.find(c => c.deltaType === eDeltaType.ValidFromDate);\n        let validTo = joinTable.dexihDatalinkColumns.find(c => c.deltaType === eDeltaType.ValidToDate);\n        if ( !validFrom || !validTo ) {\n            this.authService.informationDialog('No valid from',  'The join table does not contain a columns with a valid from/to delta type.');\n            return;\n        }\n\n        let item = new DexihDatalinkTransformItem();\n        item.sourceDatalinkColumn = column;\n        item.joinDatalinkColumn = validFrom;\n        item.transformItemType = eTransformItemType.JoinPair;\n        item.filterCompare = eCompare.GreaterThanEqual;\n        let itemForm = this.editDatalinkService.hubFormsService.datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n        this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n\n        item = new DexihDatalinkTransformItem();\n        item.sourceDatalinkColumn = column;\n        item.joinDatalinkColumn = validTo;\n        item.transformItemType = eTransformItemType.JoinPair;\n        item.filterCompare = eCompare.LessThan;\n        itemForm = this.editDatalinkService.hubFormsService.datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n        this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n\n    }\n}\n","<d-widget-section [title]=\"title\" [showExpandButton]=\"true\" [padding]=\"false\">\n\n    <d-table [enableMultiSelect]=\"true\" [enableManualSort]=\"true\" [columns]=\"columns\" [dataObservable]=\"tableData\" [enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n        (rowClick)=\"editMapping($event)\" (onSortChanged)=\"datalinkItemSortChange($event)\"\n        tableClass=\"table table-striped table-hover m-0\" #mappingTable dropZone (dropData)=\"newOutputDrop($event)\"\n        zone=\"input-column\" dropAllowedClass=\"drop-zone-green\" actionHeading=\"Mappings\">\n\n        <ng-template #selectedItemAction select=\"selectedItemAction\" let-datalinkTransformItem=\"item\">\n            <d-button-edit class=\"mr-1 \" (click)=\"editMapping(datalinkTransformItem)\" title=\"Edit this mapping\">\n            </d-button-edit>\n        </ng-template>\n\n        <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n            <d-button-delete class=\"mr-1 \" (click)=\"deleteSelected(items)\"\n                title=\"Delete selected mapping functions\"></d-button-delete>\n        </ng-template>\n\n        <ng-template #rowAction let-item=\"item\">\n            <mapping-item (click)=\"editMapping(item)\" [transform]=\"datalinkTransformForm.value\"\n                [transformItem]=\"item.datalinkTransformItem\" [allowCondition]=\"allowCondition\"></mapping-item>\n        </ng-template>\n\n        <ng-template #actions let-items=\"items\">\n            <ng-template [ngIf]=\"allowMapping\">\n                <d-button-splitdropdown class=\"mr-1\" (buttonClick)=\"newMapping(eTransformItemType.ColumnPair)\"\n                    buttonClass=\"btn-primary\" iconClass=\"fa fa-map\"\n                    title=\"Create a new mapping, or drop a column to create new mapping.\" text='Mapping'>\n                    <li><a class=\"dropdown-item\"  title=\"Add all\" (click)=\"addAll()\">Add all input columns</a></li>\n                    <li *ngFor=\"let columnGroup of columnGroups\"><a class=\"dropdown-item\"  [title]=\"'Add all ' + columnGroup.group\" (click)=\"addGroup(columnGroup)\">Add all {{columnGroup.group}}</a></li>\n                </d-button-splitdropdown>\n            </ng-template>\n            <ng-template [ngIf]=\"allowCondition && !allowValidation\">\n                <d-button routerLink='mapping-edit/{{eTransformItemType.FilterPair}}'\n                    buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-filter\" title=\"Create a simple filter\">Filter\n                </d-button>\n            </ng-template>\n            <ng-template [ngIf]=\"allowAggregate\">\n                <d-button routerLink='mapping-edit/{{eTransformItemType.AggregatePair}}'\n                    buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-cubes\" title=\"Create a simple aggregate\">\n                    Aggregate</d-button>\n            </ng-template>\n            <ng-template [ngIf]=\"allowStandard || allowAggregate || allowCondition || allowRow || allowValidation\">\n                <d-button [routerLink]=\"['standard-function-edit', functionType]\"\n                    buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-dollar\" title=\"Create a new standard function\">\n                    Standard</d-button>\n                <d-button [routerLink]=\"['custom-function-edit', functionType]\" buttonClass=\"btn-primary mr-1 \"\n                    iconClass=\"fa fa-code\" title=\"Create a new custom function\">Custom</d-button>\n            </ng-template>\n            <ng-template [ngIf]=\"allowRow\">\n                <d-button routerLink='unGroup-edit' buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-map\"\n                    title=\"Un-Group a Node\">Un-Group</d-button>\n            </ng-template>\n            <ng-template [ngIf]=\"allowJoin\">\n                <d-button routerLink='mapping-edit/{{eTransformItemType.JoinPair}}'\n                    buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-link\" title=\"Create a new join\">Join\n                </d-button>\n                <d-button [routerLink]=\"['standard-function-edit', functionType]\"\n                    buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-dollar\" title=\"Use a function to join the table\">\n                    Standard Function\n                </d-button>\n                <d-button [routerLink]=\"['custom-function-edit', functionType]\" buttonClass=\"btn-primary mr-1 \"\n                    iconClass=\"fa fa-code\" title=\"Use a custom-function to join the table\">Custom Function\n                </d-button>\n\n                <d-button-dropdown class=\"mr-1\" buttonClass=\"btn-primary\" iconClass=\"fa fa-calendar\"\n                    title=\"Add a joins between the column and the valid from/to\" text='Valid From/To'>\n                    <li *ngFor=\"let column of inputDateColumns\"><a class=\"dropdown-item\"  [title]=\"column.name\" (click)=\"addValidFromTo(column)\">{{column.name}}</a></li>\n                </d-button-dropdown>\n            </ng-template>\n            <ng-template [ngIf]=\"allowSort\">\n                <d-button routerLink='mapping-edit/{{eTransformItemType.Sort}}' buttonClass=\"btn-primary mr-1 \"\n                    iconClass=\"fa fa-sort-alpha-asc\" title=\"New Sort\">Sort</d-button>\n            </ng-template>\n            <ng-template [ngIf]=\"allowGroup\">\n                <d-button routerLink='mapping-edit/{{eTransformItemType.Column}}'\n                    buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-list\" title=\"New Group\">Group</d-button>\n            </ng-template>\n            <ng-template [ngIf]=\"allowJoinNode\">\n                <d-button (click)=\"createJoinNode()\" buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-list\"\n                    title=\"Join Node\">Node</d-button>\n            </ng-template>\n        </ng-template>\n    </d-table>\n</d-widget-section>","export * from './standard-function-edit.component';\n","import { Component, Input, Output, OnInit, OnChanges, OnDestroy, EventEmitter } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { DexihDatalinkColumn, DexihDatalinkTarget } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'target-columns',\n    templateUrl: './target-columns.component.html'\n})\nexport class TargetColumnsComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() public datalinkTransformForm: FormGroup;\n    @Input() public targets: DexihDatalinkTarget[];\n    @Input() public allowMappingOutputs = true;\n\n    @Output() public inputOutputDrop: EventEmitter<{ inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn }>\n        = new EventEmitter<{ inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn }>();\n\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n    ngOnChanges() {\n    }\n\n    ngOnDestroy() {\n    }\n\n    newInputOutputDrop(inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn) {\n        this.inputOutputDrop.emit({\n            inputColumn: inputColumn,\n            outputColumn: outputColumn\n        });\n    }\n}\n","<div *ngIf=\"targets\" cdkDropList #cdkDropList=\"cdkDropList\">\n    <d-widget-section *ngFor=\"let target of targets\" [title]=\"'Target (' + target['table']?.name + ')'\" [padding]=\"false\" [showExpandButton]=\"true\">\n        <div *ngFor=\"let column of target['table'].dexihTableColumns | fieldSort : 'position' | isValidFilter; let i = index\" dropZone (dropData)=\"newInputOutputDrop($event, column)\" [zone]=\"allowMappingOutputs ? 'input-column' : ''\" dropAllowedClass=\"drop-zone-green\" >\n            <target-column [datalinkTransformForm]='datalinkTransformForm' [column]='column'></target-column>\n        </div>\n    </d-widget-section>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { deltaTypes, securityFlags, HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { AuthService} from '../../../../+auth/auth.service';\nimport { Observable, Subscription, BehaviorSubject, combineLatest} from 'rxjs';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { TypeCodes } from '../../../hub.remote.models';\nimport { DexihTableColumn, eConnectionPurpose } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'transform-table-edit-form',\n    templateUrl: './transform-table-edit.component.html',\n})\nexport class TransformTableEditComponent implements OnInit, OnDestroy {\n\n    private _subscription: Subscription;\n\n    public canEdit = false;\n    public tableKey: number;\n\n    private hubCache: HubCache;\n    public action: string; // new or edit\n    public pageTitle: string;\n\n    public mainForm: FormGroup;\n\n    typeCodes = TypeCodes;\n    deltaTypes = deltaTypes;\n    securityFlags = securityFlags;\n\n    inputColumns: Array<DexihTableColumn>;\n\n    eConnectionPurpose = eConnectionPurpose;\n\n    datalinkTransformKey: number;\n    datalinkTransformForm: FormGroup;\n    transformTableForm: FormGroup;\n\n    columns = [\n        { name: 'position', title: '#', format: ''},\n        { control: 'name', title: 'Column Name', format: '', tooltip: 'description'},\n        { name: 'dataType', title: 'Data Type', format: ''},\n        { name: 'allowDbNull', title: 'Null?', format: 'Boolean'},\n        { name: 'logicalName', title: 'Logical Name', format: ''},\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar'},\n    ];\n\n    private _columnData = new BehaviorSubject<Array<DexihTableColumn>>(null);\n    columnData: Observable<Array<DexihTableColumn>> = this._columnData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router,\n        ) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                this.pageTitle = result[0]['pageTitle'];\n                let params = result[1];\n                this.hubCache = result[2];\n\n                this.datalinkTransformKey = +params['datalinkTransformKey'];\n                this.datalinkTransformForm = this.editDatalinkService.getDatalinkTransform(this.datalinkTransformKey);\n\n                this.transformTableForm = <FormGroup>this.datalinkTransformForm.controls.transformTable\n                this.updateColumnData();\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Transform Table Edit');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    updateColumnData() {\n        let tableData = [];\n\n        let tableColumns = <FormArray>this.transformTableForm.controls.dexihTableColumns;\n        tableColumns.controls\n        .filter(c => c.value.isValid)\n        .sort((a, b) => a.value.position - b.value.position)\n        .forEach(column => {\n            const columnForm = <FormGroup>column;\n            tableData.push({\n                key: column.value.key,\n                position: column.value.position,\n                name: columnForm.controls.name,\n                description: column.value.description,\n                dataType: column.value.dataType,\n                allowDbNull: column.value.allowDbNull,\n                logicalName: column.value.logicalName,\n                updateDate: column.value.updateDate,\n            });\n        });\n        this._columnData.next(tableData);\n    }\n\n  deleteColumn(column: DexihTableColumn) {\n      this.deleteSelected([column]);\n  }\n\n  deleteSelected(columns: Array<DexihTableColumn>) {\n      const columnsArray = <FormArray>this.transformTableForm.controls.dexihTableColumns;\n\n    columns.forEach(column => {\n        let columnIndex = columnsArray.controls.findIndex(c => c.value.key === column.key);\n        if (columnIndex >= 0) {\n            columnsArray.removeAt(columnIndex);\n        }\n        this.updateColumnData();\n    });\n  }\n\n  newColumn() {\n    this.router.navigate(['column'], { relativeTo: this.route.parent });\n  }\n\n  editColumn(column: DexihTableColumn) {\n    this.router.navigate(['column', column.key], { relativeTo: this.route.parent });\n  }\n\n  columnSortChange(items: Array<any>) {\n        let columnsArray = <FormArray>this.transformTableForm.controls.dexihTableColumns;\n      let position = 1;\n      items.forEach(c => {\n        let column = <FormGroup>columnsArray.controls.find(control => control.value.key === c.key);\n        column.controls.position.setValue(position++);\n      });\n\n      this.updateColumnData();\n  }\n\n  close() {\n      this.authService.navigateUp();\n  }\n\n}\n","<div>\n\t<div class=\"widget-body-toolbar\">\n\t\t<div class=\"form-row\">\n\t\t\t<div class=\"col-sm-6\">\n\t\t\t\t<h5>Transform Output Columns</h5>\n\t\t\t</div>\n\t\t\t<div class=\"col-sm-6 text-right\">\n                <d-button-close (click)=\"close()\"></d-button-close>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n    <d-table \n        [enableMultiSelect]=\"true\"\n        [enableManualSort]=\"true\"\n        (onSortChanged)=\"columnSortChange($event)\"\n        sortColumn=\"position\"\n        [columns]=\"columns\"\n        [dataObservable]=\"columnData\"\n        >\n            <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n                <d-button-delete (click)=\"deleteSelected(items)\" title=\"Delete selected columns\"></d-button-delete>\n            </ng-template>\n\n            <ng-template #selectedItemAction select=\"selectedItemAction\" let-column=\"item\">\n                <d-button-edit (click)=\"editColumn(column)\" title=\"Edit the column\"></d-button-edit>\n            </ng-template>\n\n            <ng-template #actions select=\"actionsTemplate\" let-items=\"items\">\n                <d-button-new (click)=\"deleteSelected(items)\" title=\"Create a new column\"></d-button-new>\n            </ng-template>\n\n    </d-table>\n</div>\n","import { Component, Input, Output, OnInit, OnDestroy, EventEmitter } from '@angular/core';\nimport { HubCache, eMappingStatus, MappingStatusInfo, lineageMappingStatuses, impactMappingStatuses } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { eObjectUse, ColumnUsageNode, eDatalinkObjectType } from '../../../hub.lineage.models';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { DexihDatalinkColumn, DexihTable, eTypeCode } from '../../../../shared/shared.models';\n\n\n@Component({\n    selector: 'join-column',\n    templateUrl: './join-column.component.html'\n})\nexport class JoinColumnComponent implements OnInit, OnDestroy {\n\n    @Input() public column: DexihDatalinkColumn = null;\n    @Input() public datalinkTransformForm: FormGroup;\n    @Input() public datalinkForm: FormGroup;\n    @Input() public inputTables: Array<DexihTable> = null;\n    @Output() public inputJoinDrop: EventEmitter<{inputColumn: DexihDatalinkColumn, joinColumn: DexihDatalinkColumn}>\n            = new EventEmitter<{inputColumn: DexihDatalinkColumn, joinColumn: DexihDatalinkColumn}>();\n\n    private _hubCacheSubscription: Subscription;\n\n    private hubCache: HubCache;\n\n    eMappingStatus = eMappingStatus;\n    eTypeCode = eTypeCode;\n\n    columnLineageStatusIcon: string;\n    columnLineageStatusColor: string;\n\n    public mappingStatusInfoImpact: MappingStatusInfo;\n    public mappingStatusInfoLineage: MappingStatusInfo;\n\n    constructor(private hubService: HubService) {\n    }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(hubCache => {\n            if (hubCache.isLoaded()) {\n                this.hubCache = hubCache;\n\n                let columnUsage = new ColumnUsageNode(\n                    eDatalinkObjectType.Transform,\n                    eObjectUse.Target,\n                    this.datalinkForm.value,\n                    this.column,\n                    null,\n                    this.datalinkTransformForm.value,\n                    null,\n                    eMappingStatus.NotMapped,\n                    this.hubCache\n                    );\n                let lineageMappingStatus = columnUsage.createDatalinkLineage(false);\n                this.mappingStatusInfoLineage = lineageMappingStatuses.find(c => c.key === lineageMappingStatus);\n\n                let impactMappingStatus = columnUsage.createDatalinkImpact(false);\n                this.mappingStatusInfoImpact = impactMappingStatuses.find(c => c.key === impactMappingStatus);\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n    }\n\n}\n","<div class=\"list-group-item p-0 rounded-0\">\n    <div class=\"d-flex flex-row\">\n        <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoLineage.statusClass\" [title]=\"mappingStatusInfoLineage.name\"></i>\n\n        <a *ngIf=\"mappingStatusInfoLineage.key != eMappingStatus.Joined\" class=\"flex-fill input-group-text ellipsis-overflow rounded-0 border-0\"\n            style=\"overflow:hidden; text-overflow :ellipsis;\" \n            [title]=\"column.logicalName + ' ' + eTypeCode[column.dataType]\">\n            {{column.logicalName}}\n        </a>\n        <a *ngIf=\"mappingStatusInfoLineage.key == eMappingStatus.Joined\" class=\"flex-fill input-group-text ellipsis-overflow rounded-0 border-0\"\n            style=\"overflow:hidden; text-overflow :ellipsis;\" [title]=\"column.logicalName + ' ' + eTypeCode[column.dataType]\">\n            {{column.logicalName}}\n        </a>\n        <i class=\"input-group-text rounded-0  border-0 border-l1\" [ngClass]=\"mappingStatusInfoImpact.statusClass\" [title]=\"mappingStatusInfoImpact.name\"></i>\n    </div>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { FormGroup } from '@angular/forms';\nimport { eDataObjectType, DexihTable } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'datalink-preview-table',\n    templateUrl: './preview-table.component.html'\n})\nexport class PreviewTableComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n\n    public datalinkForm: FormGroup;\n    public datalinkTransformForm: FormGroup;\n\n    private hubCache: HubCache;\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    public eDataObjectType = eDataObjectType;\n\n    public error: string;\n\n    tableKey: number;\n    datalinkKey: number;\n    \n    name: string;\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n\n                this.action = data['action'];\n                this.pageTitle = data['pageTitle'];\n\n                // load the cache first\n                if (this.hubCache.isLoaded()) {\n                    // get the hub key from the route data, and update the service.\n                    if (params['tableKey']) {\n                        this.tableKey = +params['tableKey'];\n                        let table = this.hubCache.getTable(this.tableKey);\n                        if (table) {\n                            this.name = table.name;\n                        }\n                    } else {\n                        this.datalinkKey = +params['datalinkKey'];\n                        let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key == this.datalinkKey);\n                        if (datalink) {\n                            this.name = datalink.name;\n                        }\n                    }\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Preview Table Data');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n}\n","<d-widget-section [title]=\"'Preview ' + name\" [showExpandButton]=\"false\" [padding]=\"false\">\n    <ng-template #sectionHeader>\n        <d-button-close (click)=\"close()\"></d-button-close>\n    </ng-template>\n    <preview-data *ngIf=\"tableKey\" [key]='tableKey' [viewSource]='eDataObjectType.Table'></preview-data>\n    <preview-data *ngIf=\"datalinkKey\" [key]='datalinkKey' [viewSource]='eDataObjectType.Datalink'></preview-data>\n</d-widget-section>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { seriesGrains } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { LogFactory, eLogLevel } from '../../../../../logging';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { eTransformType, eTransformItemType, DexihDatalinkColumn, DexihDatalinkTransform,\n    eTypeCode, DexihDatalinkTransformItem, eAggregate, eSortDirection, eJoinNotFoundStrategyItems,\n    eDuplicateStrategyItems, eSeriesGrain, eJoinStrategyItems, DexihConnection } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'dexih-datalink-edit-transform-form',\n    templateUrl: './datalink-edit-transform.component.html',\n})\nexport class DatalinkEditTransformComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n    public datalinkTransformForm: FormGroup;\n    public seriesForm: FormGroup;\n\n    private _subscription: Subscription;\n    private _datalinkFormSubscription: Subscription;\n    private _transformsArraySubscription: Subscription;\n\n    public action: string; // new or edit\n    public pageTitle = 'Transform';\n    public message: string;\n    public datalinkTransformKey: number;\n\n    public showName = false;\n    public showDescription = false;\n\n    eTransformType = eTransformType;\n    eTransformItemType = eTransformItemType;\n    eDuplicateStrategyItems = eDuplicateStrategyItems;\n    eJoinNotFoundStrategyItems = eJoinNotFoundStrategyItems;\n    eJoinStrategyItems = eJoinStrategyItems;\n    \n    public allowMappingOutputs: boolean;\n    inputColumns: Array<DexihDatalinkColumn>;\n\n    eSeriesGrain = eSeriesGrain;\n    seriesGrains = seriesGrains;\n\n    public managedConnections: DexihConnection[];\n\n    public allowNode = false;\n    public nodeName = '';\n    public nodeType: eTransformItemType;\n\n    public logger = new LogFactory('datalink-edit-transform');\n\n    public nodes = [];\n    public variables = [];\n\n    public formErrors: any = {};\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router\n    ) { }\n\n    ngOnInit() {\n        this.logger.LogC(() => `OnInit`, eLogLevel.Trace);\n\n        try {\n            this._subscription = combineLatest([\n                this.route.data,\n                this.route.params,\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n                this.hubService.getHubCacheObservable()]\n            ).subscribe(result => {\n\n                this.action = result[0]['action'];\n                this.pageTitle = result[0]['pageTitle'];\n                this.datalinkTransformKey = + result[1]['datalinkTransformKey'];\n                this.datalinkForm = result[2];\n                let hubCache = result[3];\n\n                if (hubCache.isLoaded) {\n                    this.managedConnections = hubCache.getManagedConnections();\n                    this.variables = this.editDatalinkService.getVariables();\n                }\n                \n                if (this.datalinkForm) {\n\n                    let transformsArray = <FormArray>this.datalinkForm.controls.dexihDatalinkTransforms;\n\n                    if (this._transformsArraySubscription) { this._transformsArraySubscription.unsubscribe(); }\n                    this._transformsArraySubscription = transformsArray.valueChanges.subscribe(transforms => {\n                        let tmpDatalinkTransformForm = transforms\n                            .find(c => c.datalinkTransformKey === this.datalinkTransformKey);\n\n                        if (!tmpDatalinkTransformForm) {\n                            this.router.navigate(['properties'], { relativeTo: this.route.parent.parent });\n                        }\n                    });\n\n                    this.datalinkTransformForm = <FormGroup>transformsArray.controls\n                        .find(c => c.value.key === this.datalinkTransformKey);\n\n                    // if the transform isn't found, this is probably due to a save/reload which changes the keys.\n                    // navigate up one level when this happens.\n                    if (!this.datalinkTransformForm) {\n                        this.router.navigate(['properties'], { relativeTo: this.route.parent.parent });\n//                        this.authService.navigateUp();\n                        return;\n                    }\n\n                    let datalinkTransform = <DexihDatalinkTransform> this.datalinkTransformForm.value;\n\n                    let items = <FormArray>this.datalinkTransformForm.controls.dexihDatalinkTransformItems;\n\n                    // filter out the series item, which gets displayed as a separate form.\n                    if (datalinkTransform.transformType === eTransformType.Series) {\n                        this.seriesForm = <FormGroup>items.controls\n                            .filter(d => d.value.transformItemType === eTransformItemType.Series)[0];\n                    }\n\n                    if (datalinkTransform.transformType === eTransformType.Aggregate) {\n                        this.nodeType = eTransformItemType.GroupNode;\n                    }\n\n                    if (datalinkTransform.transformType === eTransformType.Lookup\n                        || datalinkTransform.transformType === eTransformType.Join) {\n                        this.nodeType = eTransformItemType.JoinNode;\n                    }\n\n                    if (this.nodeType) {\n                        let node = datalinkTransform.dexihDatalinkTransformItems\n                        .find(d => d.transformItemType === this.nodeType);\n\n                        if (node) {\n                            this.allowNode = true;\n                            this.nodeName = node.targetDatalinkColumn.name;\n                        } else {\n                            this.allowNode = false;\n                        }\n                    }\n\n                    this.inputColumns = datalinkTransform['runTime'].inputColumns;\n\n                    this.nodes = [];\n                    this.addNodeColumns(this.inputColumns, '');\n\n                    let transformType = datalinkTransform.transformType;\n                    this.allowMappingOutputs =\n                        // transformType === eTransformType.Group ||\n                        transformType === eTransformType.Series ||\n                        // transformType === eTransformType.Aggregate ||\n                        transformType === eTransformType.Rows ||\n                        transformType === eTransformType.Mapping ||\n                        transformType === eTransformType.Validation;\n\n                    if (this._datalinkFormSubscription) { this._datalinkFormSubscription.unsubscribe(); }\n                    this._datalinkFormSubscription = this.datalinkForm.valueChanges.subscribe(value => {\n                        this.formErrors = this.editDatalinkService.hubFormsService.getFormErrorMessages(this.datalinkForm, true);\n                    });\n\n                    if (!this.datalinkTransformForm) {\n                        this.router.navigate(['properties'], { relativeTo: this.route.parent.parent });\n                    }\n\n                    this.logger.LogC(() => `datalink form is loaded`, eLogLevel.Trace);\n                }\n            });\n\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Edit Transform');\n        }\n    }\n\n    private addNodeColumns(columns: DexihDatalinkColumn[], path: string) {\n        if (columns) {\n            columns.filter(c => c.dataType === eTypeCode.Node && c.isValid).forEach(col => {\n                let name = path ? (path + '.' + col.logicalName) : col.logicalName;\n                this.nodes.push({key: col.key, name: name});\n\n                if (col.childColumns && col.childColumns.length > 0) {\n                    this.addNodeColumns(col.childColumns, name);\n                }\n            });\n        }\n    }\n\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._transformsArraySubscription) { this._transformsArraySubscription.unsubscribe(); }\n        if (this._datalinkFormSubscription) { this._datalinkFormSubscription.unsubscribe(); }\n    }\n\n    // deleteTransform() {\n    //     this.logger.LogC(() => `deleteTransform`, eLogLevel.Trace);\n    //     this.editDatalinkService.deleteDatalinkTransform(this.datalinkTransformForm.value);\n    //     this.router.navigate(['properties'], { relativeTo: this.route });\n    // }\n\n    previewData() {\n        this.router.navigate(['preview-transform-data'], { relativeTo: this.route.parent });\n    }\n\n    toggleNode(allowNode: boolean) {\n        let items = <FormArray>this.datalinkTransformForm.controls.dexihDatalinkTransformItems;\n        let nodeItem = <FormGroup> items.controls.find(d => d.value.transformItemType === this.nodeType);\n        if (allowNode) {\n            if (!this.nodeName) {\n                this.nodeName = eTransformItemType[this.nodeType];\n            }\n\n            if (nodeItem) {\n                this.authService.informationDialog('Can not add node',  'Only one node can be added per transform.');\n                return;\n            }\n\n            let item = new DexihDatalinkTransformItem();\n            let outputColumn: DexihDatalinkColumn = new DexihDatalinkColumn();\n            outputColumn.position = 0;\n            outputColumn.key = this.hubService.getHubCache().getNextSequence();\n            outputColumn.name = this.nodeName;\n            outputColumn.logicalName = this.nodeName;\n            outputColumn.dataType = eTypeCode.Node;\n\n            item.position = -1;\n            item.datalinkTransformKey = this.datalinkTransformForm.value.key;\n            item.targetDatalinkColumn = outputColumn;\n            item.isValid = true;\n            item.transformItemType = this.nodeType;\n\n            let itemForm = this.editDatalinkService.hubFormsService\n                .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n            this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n        } else {\n            this.editDatalinkService.deleteDatalinkTransformItem(this.datalinkTransformForm, nodeItem);\n        }\n    }\n\n    updateNode(name: string) {\n        let items = <FormArray>this.datalinkTransformForm.controls.dexihDatalinkTransformItems;\n        let nodeItem = <FormGroup> items.controls.find(d => d.value.transformItemType === this.nodeType);\n        if (nodeItem) {\n            let column = <DexihDatalinkColumn> nodeItem.controls.targetDatalinkColumn.value;\n            if (column) {\n                column.name = name;\n                column.logicalName = name;\n                nodeItem.controls.targetDatalinkColumn.setValue(column);\n            }\n        }\n    }\n\n    newDragDropMapping(itemType: eTransformItemType, $event) {\n        let item = new DexihDatalinkTransformItem();\n        let outputColumn: DexihDatalinkColumn = $event.outputColumn;\n        let inputColumn: DexihDatalinkColumn = $event.inputColumn;\n        let io = new InputOutputColumns();\n\n\n        switch (itemType) {\n            case eTransformItemType.ColumnPair:\n                if (!outputColumn) {\n                    outputColumn = io.copyDatalinkColumn(inputColumn, 0, 'mapping');\n                }\n\n                outputColumn.key = this.hubService.getHubCache().getNextSequence();\n                if (outputColumn.childColumns) {\n                    outputColumn.childColumns.forEach(col => {\n                        col.key = this.hubService.getHubCache().getNextSequence();\n                    });\n                }\n                outputColumn.datalinkTableKey = null;\n                break;\n            case eTransformItemType.Sort:\n                item.sortDirection = eSortDirection.Ascending;\n                break;\n            case eTransformItemType.AggregatePair:\n                if (!outputColumn) {\n                    outputColumn = io.copyDatalinkColumn(inputColumn, 0, 'mapping');\n                }\n\n                outputColumn.key = this.hubService.getHubCache().getNextSequence();\n                if (outputColumn.childColumns) {\n                    outputColumn.childColumns.forEach(col => {\n                        col.key = this.hubService.getHubCache().getNextSequence();\n                    });\n                }\n                outputColumn.datalinkTableKey = null;\n                // outputColumn.name = 'Sum ' + outputColumn.name;\n                item.aggregate = eAggregate.Sum;\n                break;\n        }\n\n        if (itemType) {\n\n            item.datalinkTransformKey = this.datalinkTransformForm.value.key;\n            item.sourceDatalinkColumn = inputColumn;\n            item.targetDatalinkColumn = outputColumn;\n            item.isValid = true;\n\n            item.transformItemType = itemType;\n            let itemForm = this.editDatalinkService.hubFormsService\n                .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n            this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n        }\n    }\n\n    newDragDropJoin($event) {\n        let transformType = this.datalinkTransformForm.value.transformType;\n\n        if (transformType === eTransformType.Join\n            || transformType === eTransformType.Lookup) {\n            let joinColumn: DexihDatalinkColumn = $event.joinColumn;\n            let inputColumn: DexihDatalinkColumn = $event.inputColumn;\n            let item = new DexihDatalinkTransformItem();\n            item.transformItemType = eTransformItemType.JoinPair;\n            item.datalinkTransformKey = this.datalinkTransformForm.value.key;\n            item.sourceDatalinkColumn = inputColumn;\n            item.joinDatalinkColumn = joinColumn;\n            item.isValid = true;\n            let itemForm = this.editDatalinkService.hubFormsService\n                .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n\n            this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n        }\n    }\n}\n","\n<d-tabs title=\"Properties\" [showExpandButton]=\"true\" [padding]=\"false\">\n\n<d-tab *ngIf=\"datalinkTransformForm && (this.datalinkTransformForm.value.transformType == eTransformType.Join || this.datalinkTransformForm.value.transformType == eTransformType.Lookup)\" title=\"Join Table\">\n    <div  class=\"container\">\n        <datalink-table [datalinkTableForm]=\"datalinkTransformForm.controls.joinDatalinkTable\"></datalink-table>\n    </div>\n</d-tab>\n<d-tab *ngIf=\"datalinkTransformForm && (this.datalinkTransformForm.value.transformType == eTransformType.Join || this.datalinkTransformForm.value.transformType == eTransformType.Lookup)\" title=\"Join Settings\" >\n    <form [formGroup]=\"datalinkTransformForm\"  class=\"container\">\n        <fieldset>\n            <div class=\"form-row\">\n                <section class=\"form-group col-md-4\" *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Join\">\n                    <form-select label=\"Join strategy\" formControlName=\"joinStrategy\" [items]=\"eJoinStrategyItems\"\n                        itemKey=\"key\" itemName=\"name\">\n                    </form-select>\n                </section>\n\n                <section class=\"form-group col-md-4\">\n                    <form-select [label]=\"'Duplicate Match Strategy'\" formControlName=\"joinDuplicateStrategy\" [items]=\"eDuplicateStrategyItems\"\n                        itemKey=\"key\" itemName=\"name\">\n                    </form-select>\n                </section>\n\n                <section class=\"form-group col-md-4\">\n                    <form-select [label]=\"'No Match Strategy'\" formControlName=\"joinNotFoundStrategy\" [items]=\"eJoinNotFoundStrategyItems\"\n                        itemKey=\"key\" itemName=\"description\">\n                    </form-select>\n                </section>\n            </div>\n        </fieldset>\n    </form>\n</d-tab>\n\n<d-tab *ngIf=\"datalinkTransformForm && this.datalinkTransformForm.value.transformType == eTransformType.Concatenate\" title=\"Concatenate Settings\" >\n    <form [formGroup]=\"datalinkTransformForm\"  class=\"container\">\n        <fieldset>\n            <datalink-table [datalinkTableForm]=\"datalinkTransformForm.controls.joinDatalinkTable\"></datalink-table>\n        </fieldset>\n    </form>\n</d-tab>\n\n<d-tab *ngIf=\"datalinkTransformForm && this.datalinkTransformForm.value.transformType == eTransformType.Series\" title=\"Series Settings\" >\n    <form [formGroup]=\"seriesForm\"  class=\"container\">\n        <fieldset>\n            <div class=\"form-row\">\n                <section class=\"form-group col-md-4\">\n                    <form-select label=\"Series Grain\" formControlName=\"seriesGrain\" [items]=\"seriesGrains\" itemKey=\"key\" itemName=\"name\">\n                    </form-select>\n                </section>\n                <section class=\"form-group col-md-4\">\n                    <form-select formControlName=\"seriesStep\" label=\"Interval for each step\" [items]=\"variables\"  [enableTextEntry]=\"true\"></form-select>\n                </section>\n                <section class=\"form-group col-md-4\">\n                    <form-select label=\"Input Column\" formControlName=\"sourceDatalinkColumn\" [items]=\"inputColumns\"\n                    [enableKeySelect]=\"false\" itemKey=\"key\" itemName=\"name\">\n                    </form-select>\n                </section>\n            </div>\n\n            <form-checkbox label=\"Fill empty series values\" formControlName=\"seriesFill\"></form-checkbox>\n\n            <div class=\"form-row\" *ngIf=\"seriesForm.controls.seriesFill.value\">\n                <section class=\"form-group col-md-4\">\n                    <form-select formControlName=\"seriesStart\" label=\"Series Start (empty to use first value)\" [items]=\"variables\"  [enableTextEntry]=\"true\"></form-select>\n                </section>\n                <section class=\"form-group col-md-4\">\n                    <form-select formControlName=\"seriesFinish\" label=\"Series Finish (empty to use last value)\" [items]=\"variables\"  [enableTextEntry]=\"true\"></form-select>\n                </section>\n                <section class=\"form-group col-md-4\">\n                    <form-select formControlName=\"seriesProject\" label=\"Series Intervals to project beyond finish\" [items]=\"variables\"  [enableTextEntry]=\"true\"></form-select>\n                </section>\n            </div>\n\n        </fieldset>\n    </form>\n</d-tab>\n\n<d-tab *ngIf=\"datalinkTransformForm && this.nodeType === eTransformItemType.GroupNode\" title=\"Group Node\" >\n    <form  class=\"container\">\n        <fieldset>\n            <form-checkbox label=\"Group rows under a node\" [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"allowNode\" (ngModelChange)=\"toggleNode($event)\"></form-checkbox>\n            <section *ngIf=\"allowNode\" class=\"form-group col-md-6\">\n                <form-input [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"nodeName\" (ngModelChange)=\"updateNode($event)\" label=\"Name of the node\"></form-input>\n            </section>\n        </fieldset>\n    </form>\n</d-tab>\n\n<d-tab title=\"General\">\n    <form *ngIf=\"datalinkTransformForm\"  [formGroup]=\"datalinkTransformForm\" class=\"container\">\n            <fieldset>\n                <section>\n                    <form-input label=\"Transform Name\" formControlName=\"name\" placeholder=\"Enter a name for the transform\" [autocapitalize]=\"true\" iconClass=\"fa fa-list\"\n                        [errors]=\"formErrors.name\">\n                    </form-input>\n                </section>\n                <section>\n                    <form-textarea  label=\"Description\" formControlName=\"description\"  [isHidden]=\"true\" [showPreview]=\"true\" placeholder=\"Enter the description.\"\n                        [errors]=\"formErrors.description\">\n                    </form-textarea>\n                </section>\n                <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Aggregate || this.datalinkTransformForm.value.transformType == eTransformType.Series || this.datalinkTransformForm.value.transformType == eTransformType.Rows || this.datalinkTransformForm.value.transformType == eTransformType.Mapping\">\n                    <section>\n                        <form-checkbox label=\"Allow unmapped input columns to pass through to the next transform.\" formControlName=\"passThroughColumns\">\n                        </form-checkbox>\n                    </section>\n                </div>\n                \n                <section *ngIf=\"nodes?.length > 0\">\n                    <form-select label=\"Node level\" formControlName=\"nodeDatalinkColumn\" [items]=\"nodes\" [enableKeySelect]=\"false\" itemKey=\"key\" itemName=\"name\" node='Specify the node where the transform should be applied to.' [allowNullSelect]=\"true\" selectNullMessage='Use top level'>\n                    </form-select>\n                </section>\n    \n                <div class=\"form-row\">\n                    <section class=\"form-group col-md-6\">\n                        <form-input type=\"number\" formControlName=\"maxInputRows\" label=\"Maximum number of rows to input into the transform (0 = unlimited)\"></form-input>\n                    </section>\n                    <section class=\"form-group col-md-6\">\n                        <form-input type=\"number\" formControlName=\"maxOutputRows\" label=\"Maximum number of rows to output into the transform (0 = unlimited)\"></form-input>\n                    </section>\n                </div>\n            </fieldset>\n        </form>\n    </d-tab>\n    <d-tab title=\"Caching\" *ngIf=\"datalinkTransformForm.value.transformType === eTransformType.Aggregate || \n    datalinkTransformForm.value.transformType === eTransformType.Group || \n    datalinkTransformForm.value.transformType === eTransformType.Rows || \n    datalinkTransformForm.value.transformType === eTransformType.Series || \n    datalinkTransformForm.value.transformType === eTransformType.Sort ||\n    datalinkTransformForm.value.transformType === eTransformType.Join ||\n    datalinkTransformForm.value.transformType === eTransformType.Lookup\">\n    <form *ngIf=\"datalinkTransformForm\"  [formGroup]=\"datalinkTransformForm\" class=\"container\">\n        <fieldset>\n        <section>\n            <form-checkbox label=\"Pre-Cache Data to Sql Database\" formControlName=\"dataCache\">\n            </form-checkbox>\n        </section>\n        <section *ngIf=\"datalinkTransformForm.controls.dataCache.value\">\n            <form-select label=\"Data Cache Connection\" formControlName=\"dataCacheConnectionKey\" [items]=\"this.managedConnections\"\n            itemKey=\"key\" itemName=\"name\" iconClass=\"fa fa-database\" \n            note='Specify a Sql connection data can be cached to before processing the transform.  This can be used to improve memory usage and performance in some scenarios.'>\n        </form-select>\n        </section>\n    </fieldset>\n    </form>\n    </d-tab>\n</d-tabs>\n<div class=\"list-group-item p-1\">\n\n<div *ngIf=\"datalinkTransformForm\" class=\"d-flex justify-content-center\" cdkDropListGroup>\n        <d-widget class=\"d-none d-lg-inline\" title=\"Inputs\" height=\"80vh\" style=\"width:300px\" [scrollable]=\"true\">\n            <input-columns [datalinkTransformForm]='datalinkTransformForm'></input-columns>\n\n            <div class=\"mt-1\"  *ngIf=\"datalinkTransformForm.controls.joinDatalinkTable.value\">\n                <join-columns [datalinkTransformForm]='datalinkTransformForm' (inputJoinDrop)=\"newDragDropJoin($event)\"></join-columns>\n            </div>\n        </d-widget>\n\n        <d-widget class=\"container mr-1 ml-1\" title=\"Transform Mappings\">\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Join || this.datalinkTransformForm.value.transformType == eTransformType.Lookup\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowJoin]=\"true\" title=\"{{eTransformType[this.datalinkTransformForm.value.transformType]}} Table\"  >\n                </mapping>\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Mapping\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowStandard]=\"true\" [allowMapping]=\"true\" [allowOutput]=\"true\" title=\"Mapping Functions\" (onColumnDrop)=\"newDragDropMapping(eTransformItemType.ColumnPair, $event)\">\n                </mapping>\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Sort\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowSort]=\"true\" title=\"Sort Columns\" (onColumnDrop)=\"newDragDropMapping(eTransformItemType.Sort, $event)\">\n                </mapping>\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Group || this.datalinkTransformForm.value.transformType == eTransformType.Aggregate  || this.datalinkTransformForm.value.transformType == eTransformType.Series  || this.datalinkTransformForm.value.transformType == eTransformType.Rows\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" title=\"Group Columns\"  [allowGroup]=\"true\" [allowSeries]=\"this.datalinkTransformForm.value.transformType == eTransformType.Series\"\n                    (onColumnDrop)=\"newDragDropMapping(eTransformItemType.Column, $event)\">\n                </mapping>\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Group\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowStandard]=\"true\" [allowAggregate]=\"true\" [allowOutput]=\"true\" title=\"Aggregate Functions\" (onColumnDrop)=\"newDragDropMapping(eTransformItemType.AggregatePair, $event)\">\n                </mapping>\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Series\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowStandard]=\"true\" [allowAggregate]=\"true\" [allowSeries]=\"true\" [allowOutput]=\"true\" title=\"Series/Aggregate Functions\" (onColumnDrop)=\"newDragDropMapping(eTransformItemType.AggregatePair, $event)\">\n                </mapping>\n\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowMapping]=\"true\" [allowOutput]=\"true\" title=\"Mappings\" (onColumnDrop)=\"newDragDropMapping(eTransformItemType.ColumnPair, $event)\">\n                </mapping>\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Aggregate\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowStandard]=\"true\" [allowAggregate]=\"true\" [allowOutput]=\"true\" title=\"Aggregate Functions\" (onColumnDrop)=\"newDragDropMapping(eTransformItemType.AggregatePair, $event)\">\n                </mapping>\n\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowMapping]=\"true\" [allowOutput]=\"true\" title=\"Mappings\" (onColumnDrop)=\"newDragDropMapping(eTransformItemType.ColumnPair, $event)\">\n                </mapping>\n\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Filter\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowStandard]=\"true\" [allowCondition]=\"true\" [allowOutput]=\"false\" title=\"Filters\" >\n                </mapping>\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Rows\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowRow]=\"true\" [allowStandard]=\"true\" [allowJoinNode]=\"false\" [allowOutput]=\"true\" [allowCondition]=\"true\" title=\"Row Functions\">\n                </mapping>\n            </div>\n        </d-widget>\n\n        <d-widget class=\"d-none d-lg-inline\" [title]=\"'Outputs' + (datalinkTransformForm.controls.nodeDatalinkColumn?.value ? '(@' + datalinkTransformForm.controls.nodeDatalinkColumn.value.name + ')' : '')\"  height=\"80vh\" style=\"width:300px\"  [scrollable]=\"true\">\n            <output-columns [datalinkTransformForm]='datalinkTransformForm' [allowMappingOutputs]=\"allowMappingOutputs\" (inputOutputDrop)=\"newDragDropMapping(eTransformItemType.ColumnPair, $event)\"></output-columns>\n            <target-columns [datalinkTransformForm]='datalinkTransformForm' [targets]=\"datalinkForm.controls.dexihDatalinkTargets.value\" [allowMappingOutputs]=\"allowMappingOutputs\" (inputOutputDrop)=\"newDragDropMapping(eTransformItemType.ColumnPair, $event)\"></target-columns>\n        </d-widget>\n    </div>\n</div>","import { HostListener, Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationEnd, Params } from '@angular/router';\nimport { HubService } from '../../hub.service';\nimport { DatalinkEditService } from './datalink-edit.service';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { FormGroup, FormArray, AbstractControl } from '@angular/forms';\nimport { LogFactory, eLogLevel } from '../../../../logging';\nimport { HubCache, eCacheStatus } from '../../hub.models';\nimport { DexihDatalinkTransform, eTransformWriterMethod, DexihDatalink, eDatalinkType,\n    eSourceType, eTransformType, DexihDatalinkTable } from '../../../shared/shared.models';\nimport { transformTypes } from '../../hub.remote.models';\n\n@Component({\n    selector: 'dexih-datalink-edit-form',\n    templateUrl: './datalink-edit.component.html',\n    styleUrls: ['./datalink-edit.component.scss']\n})\nexport class DatalinkEditComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n\n    private _subscription: Subscription;\n    private _datalinkFormSubscription: Subscription;\n    private _transformsChange: Subscription;\n    private _sourceChange: Subscription;\n    // private _datalinkTransformsSubscription: Subscription;\n\n    private hubCache: HubCache;\n\n    public savingDatalink = false;\n\n    public action: string; // new or edit\n    public pageTitle: string;\n    public params: Params;\n\n    public logger = new LogFactory('datalink-edit.component');\n    public logCount = 0;\n\n    public eSourceType = eSourceType;\n\n    public help: string;\n\n    public datalinkTransforms: {transform: AbstractControl, name: string, icon: string, invalid: boolean}[] = null;\n\n    eTransformWriterMethod = eTransformWriterMethod;\n\n    private isLoaded = false;\n\n    showPage = false;\n    showPageMessage = 'Loading datalink...';\n\n    public validationTransform;\n    public source: any = {};\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        public editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router) {\n    }\n\n    getHelp() {\n        let route = this.router.routerState.root.snapshot;\n        while (route.firstChild) { route = route.firstChild; }\n        this.help = route.data['help'];\n    }\n\n    ngOnInit() {\n        this.logger.LogC(() => `OnInit`, eLogLevel.Trace);\n\n        try {\n            this.router.events.subscribe(event => {\n                if (event instanceof NavigationEnd) {\n                    this.getHelp();\n                }\n            });\n\n            this.getHelp();\n\n            this._subscription = combineLatest([\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable()]\n            ).subscribe(result => {\n                this.action = result[0]['action'];\n                this.pageTitle = result[0]['pageTitle'];\n                this.params = result[1];\n                this.hubCache = result[2];\n\n                if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded ) { return; }\n\n                this.editDatalinkService.init(this.hubCache);\n\n                if (this.isLoaded && this.action === 'new') { return; }\n\n                if (this.isLoaded && this.editDatalinkService.hubFormsService.hasChanged) {\n                    this.authService.confirmDialog('Datalink synchronization warning',\n                    'The hub was disconnected, meaning the datalink could have been changed by another session.  Would you like to discard the current changes, and reload the latest version of the datalink?')\n                    .then(confirm => {\n                        if (confirm) {\n                            this.load();\n                        }\n                    }).catch(() => {\n                        return;\n                    });\n                } else {\n                    this.load();\n                }\n            });\n\n            this.editDatalinkService.ngOnInit();\n\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Edit');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._datalinkFormSubscription) { this._datalinkFormSubscription.unsubscribe(); }\n        if (this._transformsChange) { this._transformsChange.unsubscribe(); }\n        if (this._sourceChange) { this._sourceChange.unsubscribe(); }\n//        if (this._datalinkTransformsSubscription) { this._datalinkTransformsSubscription.unsubscribe(); }\n\n        // shut down service\n        this.editDatalinkService.ngOnDestroy();\n    }\n\n    private load() {\n        this.logger.LogC(() => `Subscription count: ${this.logCount++}`, eLogLevel.Trace);\n\n        if (this.action === 'edit') {\n\n            // get the hub key from the route data, and update the service.\n            let datalinkKey: number = +this.params['datalinkKey'];\n            if (!datalinkKey) {\n                this.logger.LogC(() => `no datalink found.`, eLogLevel.Warning);\n\n                this.hubService.addHubErrorMessage('There was no datalink specified to edit.');\n                this.showPageMessage = 'Edit failed...';\n                this.editDatalinkService.hubFormsService.datalink(null);\n            } else {\n                let originalDatalink = this.hubCache.hub.dexihDatalinks.find(d => d.key === datalinkKey);\n\n                if (originalDatalink) {\n                    this.editDatalinkService.hubFormsService.datalink(originalDatalink);\n                    this.route.snapshot.data['pageTitle'] = 'Datalink (' + originalDatalink.name + ')';\n\n                } else {\n                    this.logger.LogC(() => `no datalink found. key: ${datalinkKey}`, eLogLevel.Warning);\n                    this.hubService.addHubErrorMessage('A datalink with the key ' +\n                        datalinkKey + ' could not be found in the repository.');\n                    this.showPageMessage = 'Edit failed...';\n                }\n            }\n\n        } else if (!this.isLoaded && this.action === 'new') {\n            let datalink = new DexihDatalink();\n            datalink.sourceDatalinkTable = new DexihDatalinkTable();\n            this.editDatalinkService.hubFormsService.datalink(datalink);\n            this.logger.LogC(() => `new datalink set.`, eLogLevel.Warning);\n        } else if (!this.isLoaded && this.action === 'copy') {\n            // get the hub key from the route data, and update the service.\n            let datalinkKey: number = +this.params['datalinkKey'];\n            if (!datalinkKey) {\n                this.logger.LogC(() => `no datalink found.`, eLogLevel.Warning);\n\n                this.hubService.addHubErrorMessage('There was no datalink specified to copy.');\n                this.showPageMessage = 'Copy failed...';\n                this.editDatalinkService.hubFormsService.datalink(null);\n            } else {\n                let originalDatalink = this.hubCache.hub.dexihDatalinks.find(d => d.key === datalinkKey);\n\n                if (originalDatalink) {\n                    let copyDatalink = this.hubCache.CopyDatalink(originalDatalink);\n                    this.editDatalinkService.hubFormsService.datalink(copyDatalink);\n                    this.editDatalinkService.hubFormsService.hasChanged = true;\n                    this.route.snapshot.data['pageTitle'] = 'Datalink (' + copyDatalink.name + ')';\n\n                } else {\n                    this.logger.LogC(() => `no datalink found. key: ${datalinkKey}`, eLogLevel.Warning);\n                    this.hubService.addHubErrorMessage('A datalink with the key ' +\n                        datalinkKey + ' could not be found in the repository.');\n                    this.showPageMessage = 'Copy failed...';\n                }\n            }\n        } else if (this.action === 'sourceTable') {\n            let datalink = new DexihDatalink();\n            datalink.datalinkType = eDatalinkType.Query;\n            datalink.sourceDatalinkTable = new DexihDatalinkTable();\n            datalink.sourceDatalinkTable.sourceType = eSourceType.Table;\n            datalink.sourceDatalinkTable.sourceTableKey = +this.params['sourceTableKey'];\n            this.editDatalinkService.reBuildDatalinkTable(datalink.sourceDatalinkTable);\n            datalink.name = 'Datalink query for ' + datalink.sourceDatalinkTable.name;\n\n            this.editDatalinkService.hubFormsService.datalink(datalink);\n            this.editDatalinkService.hubFormsService.currentForm.markAsDirty();\n            this.editDatalinkService.hubFormsService.hasChanged = true;\n\n            this.logger.LogC(() => `new source table datalink set.`, eLogLevel.Warning);\n        }\n\n        this.isLoaded = true;\n\n        // monitor for any changes to the datalink\n        if (this._datalinkFormSubscription) { this._datalinkFormSubscription.unsubscribe(); }\n        this._datalinkFormSubscription =\n            this.editDatalinkService.hubFormsService.getCurrentFormObservable().subscribe(datalinkForm => {\n                if (!datalinkForm) { return; }\n                this.datalinkForm = datalinkForm;\n\n                this.refreshTransforms();\n\n                this.refreshSource(this.datalinkForm.controls.sourceDatalinkTable.value);\n                if (this._sourceChange) { this._sourceChange.unsubscribe(); }\n                this._sourceChange = this.datalinkForm.controls.sourceDatalinkTable.valueChanges.subscribe(source => {\n                    this.refreshSource(source);\n                });\n                \n\n                if (this._transformsChange) { this._transformsChange.unsubscribe(); }\n                this._transformsChange = this.datalinkForm.controls.dexihDatalinkTransforms.valueChanges\n                    .subscribe(() => this.refreshTransforms());\n\n                let key = datalinkForm.controls.key.value;\n                if (key) {\n                    if (history.pushState) {\n                        let newUrl = window.location.pathname.replace('/new', `/edit/${key}`)\n                        this.router.navigateByUrl(newUrl);\n                    }\n                }\n            });\n\n        this.showPage = true;\n        this.showPageMessage = '';\n    }\n\n    public canDeactivate(): Promise<boolean> {\n        return new Promise<boolean>((resolve) => {\n            if (this.editDatalinkService.hubFormsService.hasChanged) {\n                this.authService.confirmDialog('Datalink changes have not been saved',\n                    'The datalink changes have not been saved.  Do you want to discard the changes and exit?')\n                    .then(confirm => {\n                        resolve(confirm);\n                    }).catch(() => {\n                        resolve(false);\n                    });\n            } else {\n                resolve(true);\n            }\n        });\n    }\n\n    // @HostListener allows us to also guard against browser refresh, close, etc.\n    @HostListener('window:beforeunload', ['$event']) unloadNotification($event: any) {\n        if (this.editDatalinkService.hubFormsService.hasChanged) {\n            $event.returnValue = 'The datalink changes have not been saved.  Do you want to discard the changes and exit?';\n        }\n    }\n\n    enableValidation() {\n        if (!this.validationTransform) {\n            this.validationTransform = this.editDatalinkService.enableValidation();\n        }\n\n        this.router.navigate(['validation'], { relativeTo: this.route });\n    }\n\n    disableValidation() {\n        if (this.validationTransform) {\n            this.editDatalinkService.disableValidation();\n            this.validationTransform = null;\n        }\n    }\n\n    refreshSource(sourceDatalinkTable: DexihDatalinkTable) {\n        this.source = {\n            name: sourceDatalinkTable.name ?? eSourceType[sourceDatalinkTable.sourceType] ?? '(Undefined)',\n            description: sourceDatalinkTable.description\n        };\n\n        switch(sourceDatalinkTable.sourceType) {\n            case eSourceType.Datalink:\n                this.source['icon'] = 'fa fa-exchange';\n                this.source['link'] = ['source', 'preview-table-data', 'datalink', sourceDatalinkTable.sourceDatalinkKey];\n                break;\n            case eSourceType.Table:\n                this.source['icon'] = 'fa fa-table';\n                this.source['link'] = ['source', 'preview-table-data', 'table', sourceDatalinkTable.sourceTableKey];\n                break;\n            case eSourceType.Rows:\n                this.source['icon'] = 'fa fa-bars';\n                this.source['link'] = null;\n\n        }\n    }\n\n    refreshTransforms() {\n        this.logger.LogC(() => `refreshing transforms list`, eLogLevel.Trace);\n\n        const transformsArray = <FormArray> this.datalinkForm.controls.dexihDatalinkTransforms;\n        const transforms =  transformsArray.controls\n            .filter(c => c.value.transformType !== eTransformType.Validation &&\n                c.value.transformType !== eTransformType.Profile)\n            .sort((a, b) => a.value.position - b.value.position);\n\n        const datalinkTransforms = transforms.map(transform => {\n            const type = transformTypes.find(c => c.key === transform.value.transformType);\n            let icon = '';\n            if (type) {\n                icon = type.icon\n            }\n            const name = this.hubCache.getTransformName(transform.value);\n            return {transform: transform, icon: icon, name: name, invalid: transform.invalid};\n        });\n\n        this.datalinkTransforms = datalinkTransforms;\n    }\n\n    deleteTransform(datalinkTransform: DexihDatalinkTransform) {\n        this.logger.LogC(() => `deleteTransform`, eLogLevel.Trace);\n        this.editDatalinkService.deleteDatalinkTransform(datalinkTransform).then(() => {\n            this.refreshTransforms();\n        });\n    }\n\n    previewData(datalinkTransform: DexihDatalinkTransform) {\n        this.router.navigate(['transform', datalinkTransform.key, 'preview-transform-data'], { relativeTo: this.route });\n    }\n\n    saveDatalink() {\n        this.editDatalinkService.hubFormsService.save();\n    }\n\n    cancel() {\n        this.editDatalinkService.hubFormsService.cancel();\n    }\n\n}\n","<div class=\"container-fluid\" *ngIf=\"datalinkForm\">\n\t<d-widget title=\"Edit Datalink\" iconClass=\"fa fa-lg fa-fw fa-exchange\" [showCloseButton]=\"true\"\n\t\t[padding]=\"false\" (close)=\"cancel()\">\n\t\t<ng-template #header>\n\t\t\t<div class=\"ml-auto\">\n\t\t\t\t<div class=\"d-flex align-items-center\">\n\t\t\t\t<datalink-status class=\"d-none d-xl-inline\" [datalinkKey]='datalinkForm?.controls.key.value' class=\"mr-1\">\n\t\t\t\t</datalink-status>\n\t\t\t\t<d-button-dropdown class=\"mr-1\" iconClass=\"fa fa-plus\" text=\"Options\">\n\t\t\t\t\t<d-dropdown-item *ngIf=\"!validationTransform\" iconClass=\"fa fa-check-square-o\" text=\"Enable target table validation\" (click)=\"enableValidation()\"></d-dropdown-item>\n\t\t\t\t\t<d-dropdown-item  iconClass=\"fa fa-arrow-circle-right\" text=\"Add a target table.\" [routerLink]=\"['target', 'table-new']\"></d-dropdown-item>\n\t\t\t\t</d-button-dropdown>\n\t\t\t\t<datalink-save-button></datalink-save-button>\n\t\t\t</div>\n\t\t\t</div>\n\t\t</ng-template>\n\n\t\t<div *ngIf=\"datalinkTransforms\" class=\"bg-light pt-1 pb-1 d-flex\">\n\t\t\t<ul class=\"transform-container\">\n\t\t\t\t<div class=\"d-flex m-3\">\n\t\t\t\t\t<transform-step \n\t\t\t\t\t\t[routerLinkCurrent]=\"['properties']\"\n\t\t\t\t\t\t[name]=\"'Properties'\"\n\t\t\t\t\t\t[title]=\"'Edit the properties.'\"\n\t\t\t\t\t\t[icon]=\"'fa fa-cog'\"\n\t\t\t\t\t\t[control]=\"\"\n\t\t\t\t\t\t[showDelete]=\"false\"\n\t\t\t\t\t\t[showArrow]=\"false\" >\n\t\t\t\t\t</transform-step>\n\t\t\t\t\t\n\t\t\t\t\t<transform-step \n\t\t\t\t\t\t[routerLinkAfter]=\"['new', 1]\"\n\t\t\t\t\t\t[routerLinkCurrent]=\"['source']\"\n\t\t\t\t\t\t[routerLinkPreview]=\"source.link\"\n\t\t\t\t\t\t[name]=\"source.name\"\n\t\t\t\t\t\t[title]=\"source.name + ' ' + (source.description ? source.description : '')\"\n\t\t\t\t\t\t[icon]=\"source.icon\"\n\t\t\t\t\t\t[control]=\"\"\n\t\t\t\t\t\t[showDelete]=\"false\" >\n\t\t\t\t\t</transform-step>\n\t\t\t\t\n\t\t\t\t\t<ng-template ngFor let-datalinkTransform [ngForOf]=\"datalinkTransforms\" let-isLast=\"last\" let-isFirst=\"first\">\n\t\n\t\t\t\t\t\t<transform-step \n\t\t\t\t\t\t\t[routerLinkBefore]=\"['new', datalinkTransform.transform.value.position - 1]\"\n\t\t\t\t\t\t\t[routerLinkAfter]=\"['new', datalinkTransform.transform.value.position + 1]\"\n\t\t\t\t\t\t\t[routerLinkCurrent]=\"['transform', datalinkTransform.transform.value.key]\"\n\t\t\t\t\t\t\t[routerLinkPreview]=\"['transform', datalinkTransform.transform.value.key, 'preview-transform-data']\"\n\t\t\t\t\t\t\t[name]=\"datalinkTransform.name\"\n\t\t\t\t\t\t\t[title]=\"datalinkTransform.name + ' transform.'\"\n\t\t\t\t\t\t\t[icon]=\"datalinkTransform.icon\"\n\t\t\t\t\t\t\t[control]=\"datalinkTransform.transform\"\n\t\t\t\t\t\t\t[showDelete]=\"true\"\n\t\t\t\t\t\t\t(onDelete)=\"deleteTransform(datalinkTransform.transform.value)\">\n\t\t\t\t\t\t</transform-step>\n\t\n\t\t\t\t\t</ng-template>\n\t\n\t\t\t\t\t<transform-step *ngIf=\"datalinkTransforms.length === 0\"\n\t\t\t\t\t\t[routerLinkBefore]=\"['new', 1]\"\n\t\t\t\t\t\t[routerLinkAfter]=\"['new', 1]\"\n\t\t\t\t\t\t[routerLinkCurrent]=\"['new', 1]\"\n\t\t\t\t\t\t[name]=\"'Add Transform'\"\n\t\t\t\t\t\t[title]=\"'Add new transform'\"\n\t\t\t\t\t\t[icon]=\"'fa fa-plus'\"\n\t\t\t\t\t\t[showDelete]=\"false\"\n\t\t\t\t\t></transform-step>\n\t\t\t\t\t\n\t\t\t\t\t<transform-step *ngIf=\"validationTransform\"\n\t\t\t\t\t\t[routerLinkBefore]=\"['new', datalinkTransforms.length === 0 ? 1 : datalinkTransforms[datalinkTransforms.length-1].transform.value.position+1]\"\n\t\t\t\t\t\t[routerLinkCurrent]=\"['validation']\"\n\t\t\t\t\t\t[name]=\"'Validation'\"\n\t\t\t\t\t\t[title]=\"'Validate Data'\"\n\t\t\t\t\t\t[icon]=\"'fa fa-check-square-o'\"\n\t\t\t\t\t\t[showDelete]=\"true\"\n\t\t\t\t\t\t(onDelete)=\"disableValidation()\">\n\t\t\t\t\t</transform-step>\n\t\n\t\t\t\t\t<transform-step \n\t\t\t\t\t\t[routerLinkBefore]=\"['new', datalinkTransforms.length === 0 ? 1 : datalinkTransforms[datalinkTransforms.length-1].transform.value.position+1]\"\n\t\t\t\t\t\t[routerLinkCurrent]=\"['target']\"\n\t\t\t\t\t\t[name]=\"'Target'\"\n\t\t\t\t\t\t[title]=\"'Target tables(s)'\"\n\t\t\t\t\t\t[icon]=\"'fa fa-arrow-circle-right'\"\n\t\t\t\t\t\t[control]=\"\"\n\t\t\t\t\t\t[showArrow]=\"false\"\n\t\t\t\t\t\t[showDelete]=\"false\">\n\t\t\t\t\t</transform-step>\n\t\n\t\t\t\t\t<transform-step \n\t\t\t\t\t[routerLinkCurrent]=\"['profiles']\"\n\t\t\t\t\t[name]=\"'Profiles'\"\n\t\t\t\t\t[title]=\"'Edit the profiles.'\"\n\t\t\t\t\t[icon]=\"'fa fa-bug'\"\n\t\t\t\t\t[control]=\"\"\n\t\t\t\t\t[showDelete]=\"false\"\n\t\t\t\t\t[isLast]=\"true\" >\n\t\t\t\t</transform-step>\n\t\t\t\t</div>\n\t\n\t\t\t</ul>\n\t\t</div>\n\t\n\t\t<router-outlet></router-outlet>\n\n\t</d-widget>\n\n\t<dexih-help class=\"m-3\" *ngIf=\"help\" title=\"Datalinks\" path=\"/assets/help/reference/{{help}}\"></dexih-help>\n\n</div>","export { TargetColumnComponent } from './target-column.component';\nexport { TargetColumnsComponent } from './target-columns.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { FormGroup } from '@angular/forms';\nimport { HubCache } from '../../../hub.models';\nimport { DexihTable, DexihTableColumn, eTransformType, RemoteLibraries } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'dexih-datalink-edit-validation-form',\n    templateUrl: './datalink-edit-validation.component.html',\n})\nexport class DatalinkEditValidationComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n    public datalinkTransformForm: FormGroup;\n\n    private _subscription: Subscription;\n    private _transformsChange: Subscription;\n\n    private hubCache: HubCache;\n    private remoteLibraries: RemoteLibraries;\n    public action: string; // new or edit\n    public pageTitle = 'Validation';\n    public message: string;\n\n    public showName = false;\n    public showDescription = false;\n\n    public inputColumns: Array<DexihTable>;\n    public outputColumns: Array<DexihTableColumn>;\n\n    constructor(\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute    ) { }\n\n    ngOnInit() {\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n                this.hubService.getRemoteLibrariesObservable()\n            ).subscribe(result => {\n                this.pageTitle = result[0]['pageTitle'];\n                this.hubCache = result[1];\n                this.datalinkForm = result[2];\n                this.remoteLibraries = result[3];\n\n                if (this.hubCache.isLoaded() && this.datalinkForm) {\n                    this.datalinkTransformForm = this.editDatalinkService.getValidationTransform();\n\n                    this._transformsChange = this.datalinkForm.controls.dexihDatalinkTransforms.valueChanges\n                    .subscribe(() => this.datalinkTransformForm = this.editDatalinkService.getValidationTransform());\n                }\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Edit Validation');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._transformsChange) { this._transformsChange.unsubscribe(); }\n    }\n\n    enableValidation() {\n        let transform = this.remoteLibraries.transforms.find(c => c.transformType === eTransformType.Validation);\n        this.datalinkTransformForm = this.editDatalinkService.insertDatalinkTransform(1, transform);\n    }\n\n    disableValidation() {\n        this.editDatalinkService.deleteDatalinkTransform(this.datalinkTransformForm.value);\n        this.datalinkTransformForm = null;\n    }\n}\n","<d-widget-section title='Validation' [showExpandButton]=\"false\">\n<div *ngIf=\"!datalinkTransformForm\">\n    <div class=\"alert alert-danger m-3\">\n        Target column validation is not enabled.\n        <hr>\n        <d-button *ngIf=\"!datalinkTransformForm\" (click)=\"enableValidation()\" buttonClass=\"btn btn-success\" iconClass=\"fa fa-check\"  [autoCompact]=\"false\"\n            title=\"Enable the validation on the target table.\">Enable</d-button>\n    </div>\n</div>\n\n<div *ngIf=\"datalinkTransformForm\">\n\n    <form *ngIf=\"datalinkTransformForm\" [formGroup]=\"datalinkTransformForm\">\n        <fieldset>\n            <section>\n                <d-button (click)=\"disableValidation()\" buttonClass=\"btn btn-success\" iconClass=\"fa fa-check\" [autoCompact]=\"false\"\n                    title=\"Enable the validation on the target table.\">Disable Validation</d-button>\n            </section>\n            <section>\n                <form-textarea label=\"Description\" formControlName=\"description\" [showPreview]=\"true\"  [isHidden]=\"true\" placeholder=\"Enter the description.\">\n                </form-textarea>\n            </section>\n        </fieldset>\n    </form>\n</div>\n</d-widget-section>\n\n<div class=\"list-group-item p-1\">\n\n    <div *ngIf=\"datalinkTransformForm\" class=\"d-flex\">\n        <div class=\"mr-1 d-none d-md-inline\">\n            <div>\n                <div class=\"alert alert-primary mb-1\">\n                    <h4>Inputs</h4>\n                </div>\n                <div>\n                    <input-columns [datalinkTransformForm]='datalinkTransformForm'></input-columns>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"w-100\">\n            <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowCondition]=\"true\" [allowOutput]=\"true\"\n               [allowStandard]=\"true\" [allowValidation]=\"true\" title=\"Validation\">\n            </mapping>\n        </div>\n\n        <div class=\"ml-1 d-none d-md-inline\">\n            <div class=\"alert alert-primary mb-1\">\n                <h4>Outputs\n                    <div class=\"float-right\">\n                    </div>\n                </h4>\n            </div>\n            <output-columns [datalinkTransformForm]='datalinkTransformForm' [allowMappingOutputs]=\"false\"></output-columns>\n        </div>\n\n    </div>\n</div>\n","export { MappingComponent } from './mapping.component';\nexport { MappingItemComponent } from './mapping-item.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubFormsService } from '../../../hub.forms.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { eDeltaType } from '../../../../shared/shared.models';\n\n@Component({\n    selector: 'target-table-column',\n    templateUrl: './target-table-column.component.html'\n})\n\nexport class TargetTableColumnComponent implements OnInit, OnDestroy {\n    private _currentFormSubscription: Subscription;\n\n    public targetKey: number;\n    public columnKey: number;\n    public deltaType: eDeltaType;\n    public tableForm: FormGroup;\n\n    constructor(\n        private authService: AuthService,\n        private formsService: HubFormsService,\n        private route: ActivatedRoute,\n    ) { }\n\n    ngOnInit() {\n        this._currentFormSubscription = this.route.params.subscribe(params => {\n            this.targetKey = + params['targetKey'];\n            this.columnKey = + params['columnKey'];\n            this.deltaType = params['deltaType'];\n\n            this.formsService.getCurrentFormObservable().subscribe(datalinkForm => {\n                if (datalinkForm) {\n                    let targets = <FormArray> datalinkForm.controls.dexihDatalinkTargets;\n\n                    let targetForm = <FormGroup> targets.controls.find(c => c.value.key === this.targetKey);\n                    this.tableForm = <FormGroup>targetForm.controls.table;\n                }\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._currentFormSubscription) { this._currentFormSubscription.unsubscribe(); }\n    }\n\n    columnUpdated() {\n        this.authService.navigateUp();\n    }\n}\n","<column-edit [columnKey]=\"columnKey\" [tableForm]=\"tableForm\" [deltaType]='deltaType' (isUpdated)=\"columnUpdated()\"></column-edit>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { LogFactory, eLogLevel } from '../../../../../logging';\nimport { TypeCodes } from '../../../hub.remote.models';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { eFunctionType, eParameterDirection, DexihDatalinkColumn, DexihDatalinkTransformItem, eTransformItemType, DexihFunctionParameter, FunctionParameter, eTypeCode } from '../../../../shared/shared.models';\n\n@Component({\n\n  selector: 'dexih-unGroup-edit',\n  templateUrl: './unGroup-edit.component.html'\n})\nexport class UnGroupEditComponent implements OnInit, OnDestroy {\n  public hubCache: HubCache;\n\n  eFunctionType = eFunctionType;\n  eParameterDirection = eParameterDirection;\n  typeCodes = TypeCodes;\n\n  public pageTitle: string;\n\n  private _subscription: Subscription;\n  private _nodeSubscription: Subscription;\n\n  transformFunctionType: eFunctionType;\n  datalinkTransformItemKey: number;\n  datalinkKey: number;\n  datalinkTransformKey: number;\n\n  datalinkForm: FormGroup;\n  datalinkTransformForm: FormGroup;\n  datalinkTransformItemForm: FormGroup;\n\n  newDatalinkTransformItemForm: FormGroup;\n\n  inputColumns: Array<DexihDatalinkColumn>;\n  outputColumns: Array<DexihDatalinkColumn>;\n\n  variables = [];\n\n  allowOutput = false;\n  allowReturn = true;\n\n  logger = new LogFactory('unGroup-edit');\n\n  constructor(\n    private hubService: HubService,\n    private authService: AuthService,\n    private editDatalinkService: DatalinkEditService,\n    private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n        this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n      ).subscribe(result => {\n        this.pageTitle = result[0]['pageTitle'];\n        let params = result[1];\n        this.hubCache = result[2];\n        this.datalinkForm = result[3];\n\n        this.logger.LogC(() => `OnInit`, eLogLevel.Trace);\n\n        if (this.hubCache && this.hubCache.isLoaded() && this.datalinkForm) {\n            this.datalinkTransformKey = +params['datalinkTransformKey'];\n            this.datalinkTransformItemKey = +params['datalinkTransformItemKey'];\n            this.datalinkTransformForm = this.editDatalinkService.getDatalinkTransform(this.datalinkTransformKey);\n\n            this.variables = this.editDatalinkService.getVariables();\n\n            let nodeDatalinkColumn = this.datalinkTransformForm.controls.nodeDatalinkColumn.value;\n            let nodeDatalinkColumnKey = nodeDatalinkColumn ? nodeDatalinkColumn.key : null;\n            let io = new InputOutputColumns();\n            if (nodeDatalinkColumnKey) {\n              let inputColumns = <DexihDatalinkColumn[]> this.datalinkTransformForm.controls.runTime.value.inputColumns;\n              this.inputColumns = io.getAvailableColumns(inputColumns, nodeDatalinkColumnKey, 0);\n              this.outputColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n            } else {\n              this.inputColumns = this.datalinkTransformForm.controls.runTime.value.inputColumns;\n              this.outputColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n            }\n\n            this.inputColumns = this.inputColumns.filter(c => c.dataType === eTypeCode.Node);\n\n            if (this.datalinkTransformItemKey) {\n            this.datalinkTransformItemForm = this.editDatalinkService\n              .getDatalinkTransformItem(this.datalinkTransformForm, this.datalinkTransformItemKey);\n\n            if (!this.datalinkTransformItemForm) {\n              this.authService.navigateUp();\n              return;\n            }\n\n            // create a copy of the form item to allow for cancel.\n            this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n              .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, this.datalinkTransformItemForm.value);\n\n              let parameters = <FormArray>this.newDatalinkTransformItemForm.controls.dexihFunctionParameters;\n              parameters.controls.forEach((control: FormGroup) => {\n                let runTime = {};\n                runTime['functionParameter'] = new FunctionParameter();\n                if (control.value.datalinkColumn) {\n                  runTime['functionParameter'].name = control.value.datalinkColumn.name;\n                }\n                control.controls['runTime'].setValue(runTime);\n              });\n\n          } else {\n            let newItem = new DexihDatalinkTransformItem();\n            newItem.datalinkTransformKey = this.datalinkTransformKey;\n            newItem.transformItemType = eTransformItemType.UnGroup;\n            this.datalinkTransformItemKey = 0;\n\n            this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n              .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, newItem);\n          }\n\n          if (this._nodeSubscription) { this._nodeSubscription.unsubscribe(); }\n          this._nodeSubscription = this.newDatalinkTransformItemForm.controls.sourceDatalinkColumn.valueChanges\n            .subscribe(sourceDatalinkColumn => {\n              let parameters = <FormArray>this.newDatalinkTransformItemForm.controls.dexihFunctionParameters;\n              // clear previous parameters\n              while (parameters.length) {\n                parameters.removeAt(0);\n              }\n              let column = <DexihDatalinkColumn> sourceDatalinkColumn;\n              // add a paramter for each childColumn\n              if (column.childColumns && column.childColumns.length > 0) {\n                column.childColumns.forEach((childColumn, index) => {\n                  let outputColumn = io.copyDatalinkColumn(childColumn, 0, 'un-group')\n                  let newParameter = new DexihFunctionParameter();\n                  newParameter.datalinkTransformItemKey = this.datalinkTransformItemKey;\n                  newParameter.name = childColumn.name;\n                  newParameter.rank = childColumn.rank;\n                  newParameter.direction = eParameterDirection.Output;\n                  newParameter.dataType = childColumn.dataType;\n                  newParameter.position = index;\n                  newParameter.key = this.hubCache.getNextSequence();\n                  newParameter.datalinkColumn = outputColumn\n                  newParameter.isValid = true;\n                  newParameter['runTime'] = {};\n                  newParameter['runTime'].functionParameter = new FunctionParameter();\n                  newParameter['runTime'].functionParameter.name = childColumn.name;\n\n                  let newParameterForm = this.editDatalinkService.hubFormsService.datalinkFunctionParametersFormGroup(newParameter);\n                  parameters.push(newParameterForm);\n                });\n              }\n            });\n        }\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'UnGroup Node Edit');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._nodeSubscription) { this._nodeSubscription.unsubscribe(); }\n  }\n\n  canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      if (this.newDatalinkTransformItemForm && !this.newDatalinkTransformItemForm.pristine) {\n        this.authService.confirmDialog('The function has changed',\n          'The function has changed.  Do you want to discard the changes and continue?')\n          .then((confirm) => {\n              resolve(confirm);\n            }).catch(() => {\n              resolve(false);\n            });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  cancel() {\n    this.authService.navigateUp();\n  }\n\n  apply() {\n    this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, this.newDatalinkTransformItemForm);\n    this.newDatalinkTransformItemForm.markAsPristine();\n  }\n\n  applyExit() {\n    this.apply();\n    this.authService.navigateUp();\n  }\n\n}\n\n","<div *ngIf=\"newDatalinkTransformItemForm && inputColumns && outputColumns\">\n\n\t<div class=\"list-group-item list-group-item-info rounded-0\">\n\t\t<div class=\"d-flex flex-row\">\n\t\t\t<h5>Un-Group Column Node</h5>\n\t\t\t<div class=\"ml-auto\">\n\t\t\t\t<d-button-apply [disabled]=\"newDatalinkTransformItemForm.pristine\" (click)=\"!newDatalinkTransformItemForm.pristine && applyExit()\"\n\t\t\t\t class=\"mr-1\"></d-button-apply>\n\t\t\t\t<d-button-cancel (click)=\"cancel()\"></d-button-cancel>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<div class=\"container  mt-3 mb-3\" *ngIf=\"datalinkTransformForm\">\n\n\t\t<form [formGroup]=\"newDatalinkTransformItemForm\">\n\t\t\t<fieldset>\n\t\t\t\t<section class=\"col col-xs-12\">\n\t\t\t\t\t<form-select label=\"Column Node\" \n\t\t\t\t\t\tformControlName=\"sourceDatalinkColumn\" \n\t\t\t\t\t\t[items]=\"inputColumns\" \n\t\t\t\t\t\t[enableTextEntry]=\"true\"\n\t\t\t\t\t\t[enableTextEntryMatch]=\"false\"\n\t\t\t\t\t\t[enableKeySelect]=\"false\"\n\t\t\t\t\t\titemKey=\"key\"\n\t\t\t\t\t\titemName=\"logicalName\"\n\t\t\t\t\t\t>\n\t\t\t\t\t</form-select>\n\t\t\t\t</section>\n\n\t\t\t\t<div class=\"mt-1\">\n\n\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<div class=\"col border bg-primary text-white font-weight-bold text-truncate\">UnGroup Column</div>\n\t\t\t\t\t\t</div>\n\t\t\t\n\t\t\t\t\t\t<div *ngFor=\"let parameter of newDatalinkTransformItemForm.controls.dexihFunctionParameters.controls; let i = index;\" class=\"row\">\n\t\t\t\t\t\t\t<div class=\"col border bg-secondary text-white text-truncate\">\n\t\t\t\t\t\t\t\t<div>{{parameter.controls.name.value}}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t</form>\n\t</div>\n</div>","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubCache, sourceTypes, ConnectionTables } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { Subscription, combineLatest, merge} from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { eSourceType, DexihDatalink, DexihDatalinkTable } from '../../../../shared/shared.models';\n\n@Component({\n    selector: 'datalink-table',\n    templateUrl: './datalink-table.component.html'\n})\n\nexport class DatalinkTableComponent implements OnInit, OnDestroy {\n    @Input() datalinkTableForm: FormGroup;\n\n    public errors: {};\n\n    private _subscription: Subscription;\n    private _datalinkTableSubscription: Subscription;\n\n    private hubCache: HubCache;\n\n    public eSourceType = eSourceType;\n    public sourceTypes = sourceTypes;\n\n    public connectionTables: ConnectionTables[] = [];\n    public datalinks: DexihDatalink[] = [];\n\n    public isVersioned = false;\n\n    constructor(\n        private hubService: HubService,\n        public datalinkEditService: DatalinkEditService) {\n        }\n\n    ngOnInit() {\n        this.errors = this.datalinkEditService.hubFormsService.getFormErrorMessages(this.datalinkTableForm, true);\n\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                this.hubCache = result[0];\n\n                this.subscribeDatalinkChanges();\n\n                if (this.hubCache && this.hubCache.isLoaded() && this.datalinkTableForm) {\n                    this.connectionTables = this.hubCache.getConnectionTables();\n                    this.datalinks = this.hubCache.hub.dexihDatalinks;\n                    this.updateIsVersioned();\n                }\n            });\n\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Selected datalink table');\n        }\n    }\n\n    updateIsVersioned() {\n        if (this.datalinkTableForm.controls.sourceType.value === eSourceType.Table) {\n            var table = this.hubCache.getTable(this.datalinkTableForm.controls.sourceTableKey.value);\n            if (table) {\n                this.isVersioned = table.isVersioned\n            }\n        }\n    }\n\n    subscribeDatalinkChanges() {\n        if (this._datalinkTableSubscription) { this._datalinkTableSubscription.unsubscribe(); }\n        this._datalinkTableSubscription = merge(\n            this.datalinkTableForm.controls.sourceType.valueChanges,\n            this.datalinkTableForm.controls.sourceTableKey.valueChanges,\n            this.datalinkTableForm.controls.sourceDatalinkKey.valueChanges,\n        ).subscribe(() => {\n            this.errors = this.datalinkEditService.hubFormsService.getFormErrorMessages(this.datalinkTableForm, true);\n            this.refreshColumns();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._datalinkTableSubscription) { this._datalinkTableSubscription.unsubscribe(); }\n    }\n\n    refreshColumns() {\n        try {\n            // temporarily unsubscribe to avoid a recursive loop.\n            if (this._datalinkTableSubscription) { this._datalinkTableSubscription.unsubscribe(); }\n\n            let datalinkTable = <DexihDatalinkTable>this.datalinkTableForm.value;\n            datalinkTable.sourceType = this.datalinkTableForm.controls.sourceType.value;\n            datalinkTable.sourceTableKey = this.datalinkTableForm.controls.sourceTableKey.value;\n            datalinkTable.sourceDatalinkKey = this.datalinkTableForm.controls.sourceDatalinkKey.value;\n\n            this.datalinkEditService.reBuildDatalinkTable(datalinkTable);\n            this.datalinkEditService.fixMappings(this.datalinkEditService.hubFormsService.currentForm);\n\n            this.datalinkTableForm.controls.name.setValue(datalinkTable.name);\n            this.datalinkTableForm.controls.rowsEndAt.setValue(datalinkTable.rowsEndAt);\n            this.datalinkTableForm.controls.rowsStartAt.setValue(datalinkTable.rowsStartAt);\n            this.datalinkTableForm.controls.rowsIncrement.setValue(datalinkTable.rowsIncrement);\n            this.datalinkTableForm.controls.sourceType.setValue(datalinkTable.sourceType);\n\n            this.updateIsVersioned();\n\n            let tableColumnsForm = <FormArray>this.datalinkTableForm.controls.dexihDatalinkColumns;\n            while (tableColumnsForm.length > 0) {\n                tableColumnsForm.removeAt(0);\n            }\n\n            datalinkTable.dexihDatalinkColumns.sort((a, b) => a.position - b.position).filter(c => c.isValid).forEach(column => {\n                tableColumnsForm.push(this.datalinkEditService.hubFormsService.datalinkTableColumn(tableColumnsForm.value, column));\n            });\n\n            this.subscribeDatalinkChanges();\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Refresh datalink columns');\n        }\n    }\n\n\n}\n","<form *ngIf=\"datalinkTableForm\" [formGroup]=\"datalinkTableForm\">\n    <fieldset>\n        <div class=\"form-row\">\n            <section class=\"form-group col-md-6\">\n                <form-select label=\"Data Source Type\" formControlName=\"sourceType\" [items]=\"sourceTypes\" itemKey=\"key\"\n                    itemName=\"name\" iconClass=\"fa fa-database\" note='Specify the source type for this table'\n                    [enableFilter]=\"false\">\n                </form-select>\n            </section>\n\n            <section *ngIf=\"datalinkTableForm.value.sourceType == eSourceType.Table\" class=\"form-group col-md-6\">\n                <form-select label=\"Source Table\" formControlName=\"sourceTableKey\" [errors]=\"errors?.sourceTableKey\"\n                    [items]=\"connectionTables\" parentName=\"name\" childItems=\"dexihTables\" itemKey=\"key\"\n                    itemName=\"logicalName\" note=\"Select the source table\">\n                    <table-edit-button [key]=\"datalinkTableForm.controls.sourceTableKey.value\"></table-edit-button>\n                </form-select>\n            </section>\n\n            <section *ngIf=\"datalinkTableForm.value.sourceType == eSourceType.Datalink\" class=\"form-group col-md-6\">\n                <form-select label=\"Source Datalink\" formControlName=\"sourceDatalinkKey\"\n                    [errors]=\"errors?.sourceDatalinkKey\" [items]=\"datalinks\" itemKey=\"key\" itemName=\"name\"\n                    note='Select the source datalink'>\n                    <datalink-edit-button [key]=\"datalinkTableForm.controls.sourceDatalinkKey.value\">\n                    </datalink-edit-button>\n                </form-select>\n            </section>\n        </div>\n\n\n        <section *ngIf=\"datalinkTableForm.value.sourceType == eSourceType.Rows\">\n            <div class=\"row\">\n                <div class=\"col-4\">\n                    <form-input label=\"Start At\" type=\"number\" formControlName=\"rowsStartAt\"\n                        placeholder=\"Enter start row number\" iconClass=\"fa fa-list\">\n                    </form-input>\n                </div>\n                <div class=\"col-4\">\n                    <form-input label=\"End At\" type=\"number\" formControlName=\"rowsEndAt\"\n                        placeholder=\"Enter end row number\" iconClass=\"fa fa-list\">\n                    </form-input>\n                </div>\n                <div class=\"col-4\">\n\n                    <form-input label=\"Increment By\" type=\"number\" formControlName=\"rowsIncrement\"\n                        placeholder=\"Enter increment value\" iconClass=\"fa fa-list\">\n                    </form-input>\n                </div>\n            </div>\n        </section>\n\n        <section>\n            <form-checkbox label=\"Disable query logic being pushed down to the database\"\n                formControlName=\"disablePushDown\"></form-checkbox>\n            <form-checkbox *ngIf=\"isVersioned\" label=\"Disable source table versions\"\n                formControlName=\"disableVersioning\"></form-checkbox>\n\n            <form-input label=\"Table Alias\" formControlName=\"name\"\n                note='An alias that can be used to describe the table instance (this is generally used to differentiate self-joined tables).'>\n            </form-input>\n        </section>\n\n        <d-button-refresh (click)=\"refreshColumns()\" tooltip=\"Refresh the columns from the source table.\"\n            [autoCompact]=\"false\" text=\"Refresh Columns\"></d-button-refresh>\n    </fieldset>\n</form>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HubCache, sortDirections } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { FormGroup } from '@angular/forms';\nimport { compare } from '../../../hub.query.models';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { eTransformItemType, DexihDatalinkColumn, eAggregate, eCompare, \n  DexihDatalinkTransformItem, eTypeCode, DexihDatalinkTarget, DexihTable, DexihTableColumn, eAggregateItems } from '../../../../shared/shared.models';\n\n@Component({\n  selector: 'mapping-edit',\n  templateUrl: './mapping-edit.component.html'\n})\nexport class MappingEditComponent implements OnInit, OnDestroy {\n  public pageTitle: string;\n\n  private _subscription: Subscription;\n  private _formChangesObserve: Subscription;\n  private _saveSubscription: Subscription;\n\n  datalinkTransformItemKey: number;\n  datalinkKey: number;\n  datalinkTransformKey: number;\n\n  public hubCache: HubCache;\n\n  datalinkForm: FormGroup;\n  datalinkTransformForm: FormGroup;\n  datalinkTransformItemForm: FormGroup;\n  transformItemType: eTransformItemType;\n  eTransformItemType = eTransformItemType;\n\n  variables: string[];\n\n  newDatalinkTransformItemForm: FormGroup;\n  newColumn: DexihDatalinkColumn;\n  newColumnUpdating = false;\n  filterValue: any;\n  sourceValue: any;\n\n  inputColumns: Array<{group: string, columns: Array<DexihDatalinkColumn>}> = [];\n  outputColumns: Array<DexihDatalinkColumn>;\n  joinColumns: Array<DexihDatalinkColumn>;\n  datalinkTargets: Array<DexihDatalinkTarget>;\n  outputTables: Array<DexihTable>;\n  showInput = true;\n  showOutput = true;\n\n  eAggregate = eAggregate;\n  eAggregateItems = eAggregateItems.filter(c => c.key > 0);\n  compare = compare;\n  eCompare = eCompare;\n\n  sourceErrors: string;\n  targetErrors: string;\n  joinErrors: string;\n\n  sortDirections = sortDirections;\n\n  constructor(\n    private hubService: HubService,\n    private authService: AuthService,\n    private editDatalinkService: DatalinkEditService,\n    private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n        this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n        this.hubService.getRemoteLibrariesObservable()\n      ).subscribe(result => {\n        this.pageTitle = result[0]['pageTitle'];\n        let params = result[1];\n        this.hubCache = result[2];\n        let datalinkForm = result[3];\n\n        if (!this.hubCache.isLoaded()) { return; }\n\n        this.datalinkForm = datalinkForm;\n\n        this.variables = this.editDatalinkService.getVariables();\n\n        this.datalinkTransformItemKey = +params['datalinkTransformItemKey'];\n        this.datalinkTransformKey = +params['datalinkTransformKey'];\n        this.transformItemType = +params['type'];\n\n        if (this.datalinkForm) {\n          this.datalinkTransformForm = this.editDatalinkService.getDatalinkTransform(this.datalinkTransformKey);\n\n          switch (this.transformItemType) {\n              case eTransformItemType.JoinPair:\n                this.showInput = true;\n                this.showOutput = false;\n                this.pageTitle = 'Edit Join';\n                break;\n              case eTransformItemType.Column:\n              this.showInput = true;\n              this.showOutput = false;\n              this.pageTitle = 'Edit Group';\n                break;\n              case eTransformItemType.JoinNode:\n              this.showInput = false;\n              this.showOutput = true;\n                this.pageTitle = 'Edit Join Node';\n                break;\n              case eTransformItemType.GroupNode:\n              this.showInput = false;\n              this.showOutput = true;\n                this.pageTitle = 'Edit Group Node';\n                break;\n              case eTransformItemType.Sort:\n              this.showInput = true;\n              this.showOutput = false;\n                this.pageTitle = 'Edit Sort';\n                break;\n              case eTransformItemType.FilterPair:\n              this.showInput = true;\n              this.showOutput = false;\n                this.pageTitle = 'Edit Condition';\n                break;\n              case eTransformItemType.AggregatePair:\n                this.pageTitle = 'Edit Aggregate';\n                this.showInput = true;\n                this.showOutput = true;\n                break;\n              default:\n                this.pageTitle = 'Edit Mapping';\n                this.showInput = true;\n                this.showOutput = true;\n          }\n\n          let nodeDatalinkColumn = this.datalinkTransformForm.controls.nodeDatalinkColumn.value;\n          let nodeDatalinkColumnKey = nodeDatalinkColumn ? nodeDatalinkColumn.key : null;\n          let io = new InputOutputColumns();\n          if (nodeDatalinkColumnKey) {\n            let inputColumns = <DexihDatalinkColumn[]> this.datalinkTransformForm.controls.runTime.value.inputColumns;\n            let nodeColumns = io.getAvailableColumns(inputColumns, nodeDatalinkColumnKey, 0);\n            this.inputColumns = this.editDatalinkService.getColumnGroups(nodeColumns);\n            this.outputColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n          } else {\n            this.inputColumns = this.editDatalinkService.getColumnGroups(this.datalinkTransformForm.controls.runTime.value.inputColumns);\n            this.outputColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n          }\n          if (this.datalinkTransformForm.value.joinDatalinkTable) {\n            this.joinColumns = this.datalinkTransformForm.value.joinDatalinkTable.dexihDatalinkColumns;\n          }\n\n          this.datalinkTargets = this.datalinkForm.controls.dexihDatalinkTargets.value;\n          let table = new DexihTable() \n          table.name = \"Output Columns\";\n          table.dexihTableColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n          this.outputTables = [table];\n\n          if(this.datalinkTargets) {\n              this.datalinkTargets.forEach(target => {\n                  this.outputTables.push(target['table']);\n              });\n          }\n\n\n          if (this.datalinkTransformItemKey) {\n            this.datalinkTransformItemForm = this.editDatalinkService\n              .getDatalinkTransformItem(this.datalinkTransformForm, this.datalinkTransformItemKey);\n\n              this.filterValue = this.datalinkTransformItemForm.controls.filterValue.value;\n              this.sourceValue = this.datalinkTransformItemForm.controls.sourceValue.value;\n\n              // create a copy of the form item to allow for cancel.\n            this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n              .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, this.datalinkTransformItemForm.value);\n          } else {\n            let newItem = new DexihDatalinkTransformItem();\n            newItem.datalinkTransformKey = this.datalinkTransformKey;\n            newItem.transformItemType = this.transformItemType;\n\n            this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n              .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, newItem);\n          }\n\n          this.getErrors();\n          if (this._formChangesObserve) { this._formChangesObserve.unsubscribe(); }\n          this._formChangesObserve = this.newDatalinkTransformItemForm.statusChanges.subscribe(() => {\n            this.getErrors();\n          })\n        }\n\n        if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n        this._saveSubscription = this.editDatalinkService.savingDatalink.subscribe(value => {\n            if(value) {\n                this.apply();\n            }\n        });\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Edit Mapping Function');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._formChangesObserve) { this._formChangesObserve.unsubscribe(); }\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n  }\n\n  canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      if (this.newDatalinkTransformItemForm && !this.newDatalinkTransformItemForm.pristine) {\n        this.authService.confirmDialog('The mapping has changed',\n          'The function has changed.  Do you want to apply the changes and continue?')\n          .then((confirm) => {\n              this.apply();\n              resolve(confirm);\n            }).catch(() => {\n              resolve(false);\n            });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  cancel() {\n    this.newDatalinkTransformItemForm = null;\n    this.authService.navigateUp();\n  }\n\n  getErrors() {\n    this.targetErrors = this.editDatalinkService.hubFormsService.getErrorMessage(\n      this.newDatalinkTransformItemForm.controls.targetDatalinkColumn);\n    this.sourceErrors = this.editDatalinkService.hubFormsService.getErrorMessage(\n      this.newDatalinkTransformItemForm.controls.sourceDatalinkColumn);\n    this.joinErrors = this.editDatalinkService.hubFormsService.getErrorMessage(\n      this.newDatalinkTransformItemForm.controls.sourceDatalinkColumn);\n  }\n\n  apply() {\n    // this.datalinkTransformItemForm.setValue(this.newDatalinkTransformItemForm.value);\n    this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, this.newDatalinkTransformItemForm);\n  }\n\n  updateNewColumn(value: {textValue: string, item: any}) {\n    if (value.item === null && !this.newColumnUpdating) {\n      this.newColumnUpdating = true;\n      let key: number;\n      if (this.newColumn) {\n        key = this.newColumn.key;\n      } else {\n        key = this.hubService.getHubCache().getNextSequence();\n      }\n\n      let sourceColumn = <DexihDatalinkColumn>this.newDatalinkTransformItemForm.controls.sourceDatalinkColumn.value;\n\n      if (sourceColumn) {\n        let io = new InputOutputColumns();\n        this.newColumn = io.copyDatalinkColumn(sourceColumn, 1000 - key, 'mapping');\n      } else {\n        this.newColumn = new DexihDatalinkColumn();\n        this.newColumn.position = 1000 - key;\n\n        if (this.transformItemType === eTransformItemType.JoinNode) {\n          this.newColumn.dataType = eTypeCode.Node;\n          this.newColumn.childColumns = this.joinColumns;\n        } else {\n          this.newColumn.dataType = eTypeCode.String;\n        }\n      }\n\n      this.newColumn.name = value.textValue;\n      this.newColumn.logicalName = value.textValue;\n      this.newColumn.columnGroup = 'mapping';\n      this.newColumn.key = key;\n\n      this.newDatalinkTransformItemForm.controls.targetDatalinkColumn.setValue(this.newColumn);\n      this.newDatalinkTransformItemForm.markAsDirty();\n      this.newColumnUpdating = false;\n    }\n  }\n\n  updateFilterValue(value: {textValue: string, item: any}) {\n    if (value.item === null && this.newDatalinkTransformItemForm.controls.filterDatalinkColumn.value !== null) {\n      this.newDatalinkTransformItemForm.controls.filterDatalinkColumn.setValue(null, {emitEvent: false});\n    }\n    this.newDatalinkTransformItemForm.controls.filterValue.setValue(value.textValue);\n    this.newDatalinkTransformItemForm.markAsDirty();\n  }\n\n  updateSourceValue(value: {textValue: string, item: any}) {\n    if (value.item === null && this.newDatalinkTransformItemForm.controls.sourceDatalinkColumn.value !== null) {\n      this.newDatalinkTransformItemForm.controls.sourceDatalinkColumn.setValue(null);\n    }\n    this.newDatalinkTransformItemForm.controls.sourceValue.setValue(value.textValue);\n    this.newDatalinkTransformItemForm.markAsDirty();\n  }\n\n  applyExit() {\n    this.apply();\n    this.newDatalinkTransformItemForm = null;\n    this.authService.navigateUp();\n  }\n}\n\n","<div *ngIf=\"newDatalinkTransformItemForm && inputColumns && outputColumns\">\n\n\t<d-widget-section [title]=\"pageTitle\" [showExpandButton]=\"false\">\n\t\t<ng-template #sectionHeader>\n\t\t\t<d-button-apply [disabled]=\"newDatalinkTransformItemForm.pristine\"\n\t\t\t\t(click)=\"!newDatalinkTransformItemForm.pristine && applyExit()\" class=\"mr-1\"></d-button-apply>\n\t\t\t<d-button-cancel (click)=\"cancel()\"></d-button-cancel>\n\t\t</ng-template>\n\t\t<form [formGroup]=\"newDatalinkTransformItemForm\" class=\"container\">\n\t\t\t<fieldset>\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section *ngIf=\"transformItemType == eTransformItemType.AggregatePair\" class=\"form-group col-md-4\">\n\t\t\t\t\t\t<form-select label=\"Aggregate\" formControlName=\"aggregate\" [items]=\"eAggregateItems\" itemKey=\"key\"\n\t\t\t\t\t\t\titemName=\"name\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<section *ngIf=\"showInput\" class=\"form-group col-md-4\">\n\t\t\t\t\t\t<form-select label=\"Input Column\" formControlName=\"sourceDatalinkColumn\" [items]=\"inputColumns\"\n\t\t\t\t\t\t\tparentName=\"group\" childItems=\"columns\"\n\t\t\t\t\t\t\t[(textValue)]=\"sourceValue\" (valueChange)=\"updateSourceValue($event)\"\n\t\t\t\t\t\t\t[allowNullSelect]=\"true\" selectNullMessage=\"(select null)\"\n\t\t\t\t\t\t\t[allowBlankSelect]=\"true\" selectBlankMessage=\"(select blank)\"\n\t\t\t\t\t\t\t[enableKeySelect]=\"false\"\n\t\t\t\t\t\t\t[enableTextEntry]=\"true\" [enableTextEntryMatch]=\"false\" itemName=\"logicalName\" itemKey=\"key\"\n\t\t\t\t\t\t\t[textEntryItems]=\"variables\" textEntryItemsTitle=\"Variables\"\n\t\t\t\t\t\t\t[errors]=\"sourceErrors\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section *ngIf=\"transformItemType == eTransformItemType.FilterPair || transformItemType == eTransformItemType.JoinPair\" class=\"form-group col-md-4\">\n\t\t\t\t\t\t<form-select label=\"Compare\" formControlName=\"filterCompare\" [items]=\"compare\" itemKey=\"key\"\n\t\t\t\t\t\t\titemName=\"name\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section *ngIf=\"transformItemType == eTransformItemType.FilterPair && newDatalinkTransformItemForm.controls.filterCompare.value != eCompare.IsNotNull && newDatalinkTransformItemForm.controls.filterCompare.value != eCompare.IsNull\" class=\"form-group col-md-4\">\n\t\t\t\t\t\t<form-select\n\t\t\t\t\t\t\tlabel=\"Compare Column/Value\" formControlName=\"filterDatalinkColumn\"  [items]=\"inputColumns\"\n\t\t\t\t\t\t\tparentName=\"group\" childItems=\"columns\"\n\t\t\t\t\t\t\t[enableTextEntry]=\"true\" [(textValue)]=\"filterValue\"\n\t\t\t\t\t\t\t(valueChange)=\"updateFilterValue($event)\" [enableTextEntryMatch]=\"false\" [enableKeySelect]=\"false\"\n\t\t\t\t\t\t\t[allowNullSelect]=\"true\" selectNullMessage=\"(select null)\"\n\t\t\t\t\t\t\t[allowBlankSelect]=\"true\" selectBlankMessage=\"(select blank)\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"logicalName\"\n\t\t\t\t\t\t\t[textEntryItems]=\"variables\" textEntryItemsTitle=\"Variables\" [setTextEntryToValue]=\"false\"\n\t\t\t\t\t\t\tnote=\"Note: For static date values use format YYYY-MM-DD (e.g. 2018-01-30)\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section *ngIf=\"showOutput\" class=\"form-group col-md-4\">\n\t\t\t\t\t\t<form-select label=\"Output Column\" formControlName=\"targetDatalinkColumn\" [items]=\"outputTables\" parentName=\"name\" childItems=\"dexihTableColumns\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"logicalName\" note=\"Enter new column, or select existing\"\n\t\t\t\t\t\t\t[allowNullSelect]=\"true\" selectNullMessage=\"(select null)\"\n\t\t\t\t\t\t\t[allowBlankSelect]=\"true\" selectBlankMessage=\"(select blank)\"\n\t\t\t\t\t\t\t[enableKeySelect]=\"false\" (valueChange)=\"updateNewColumn($event)\" [enableTextEntry]=\"true\" [setTextEntryToValue]=\"false\"\n\t\t\t\t\t\t\ttextEntryNote=\"Enter new column name, or select existing\" [errors]=\"targetErrors\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section *ngIf=\"transformItemType == eTransformItemType.Sort\" class=\"form-group col-md-4\">\n\t\t\t\t\t\t<form-select label=\"Direction\" formControlName=\"sortDirection\" [items]=\"sortDirections\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"name\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section *ngIf=\"transformItemType == eTransformItemType.JoinPair\" class=\"form-group col-md-4\">\n\t\t\t\t\t\t<form-select label=\"Join Column\" formControlName=\"joinDatalinkColumn\" [items]=\"joinColumns\"\n\t\t\t\t\t\t[allowNullSelect]=\"true\" selectNullMessage=\"(select null)\"\n\t\t\t\t\t\t[allowBlankSelect]=\"true\" selectBlankMessage=\"(select blank)\"\n\t\t\t\t\t\t[enableKeySelect]=\"false\" itemKey=\"key\" itemName=\"logicalName\" note=\"Select a join column\"\n\t\t\t\t\t\t\ttextEntryNote=\"Enter a value to add a new column\" [errors]=\"joinErrors\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t</form>\n\t</d-widget-section>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest, Subject, BehaviorSubject, Observable} from 'rxjs';\nimport { FormGroup, FormBuilder, FormArray } from '@angular/forms';\nimport { HubFormsService } from '../../../hub.forms.service';\nimport { LogFactory, eLogLevel } from '../../../../../logging';\nimport { HubCache, eMappingStatus, updateStrategies, loadStrategies, ConnectionTables } from '../../../hub.models';\nimport { eDeltaType, eUpdateStrategy, eTransformWriterMethod,\n    DexihConnection, DexihDatalinkTarget, DexihDatalinkColumn, eSecurityFlag, eTypeCode } from '../../../../shared/shared.models';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\n\n@Component({\n\n    selector: 'dexih-datalink-edit-target-form',\n    templateUrl: './datalink-edit-target.component.html'\n})\nexport class DatalinkEditTargetComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n    private hubCache: HubCache;\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    private _subscription: Subscription;\n    private _loadStrategySubscription: Subscription;\n\n    public eMappingStatus = eMappingStatus;\n    public eDeltaType = eDeltaType;\n\n    public tableFormService: HubFormsService;\n\n    public eUpdateStrategy = eUpdateStrategy;\n    public updateStrategies = updateStrategies;\n\n    public eTransformWriterMethod = eTransformWriterMethod;\n    public loadStrategies = loadStrategies;\n\n    public managedConnections: DexihConnection[];\n    public connectionTables: ConnectionTables[];\n\n    public showTableProperties = false;\n\n    public targets: DexihDatalinkTarget[] = [];\n\n    public logger = new LogFactory('datalink-edit-target-table');\n\n    public showBulkEdit = false;\n\n    public targetTableColumns = [\n        { name: 'table.name', title: 'Name', format: '' },\n        { name: 'table.logicalName', title: 'Logical', format: '' },\n        { name: 'nodeDatalinkColumn.logicalName', title: 'Node', format: ''}\n    ];\n\n    columns = [\n        { name: 'name', title: 'Name', format: '' },\n        { name: 'logicalName', title: 'Logical', format: '' },\n        { name: 'dataType', title: 'Data Type', format: 'Enum', enum: eTypeCode },\n        { name: 'deltaType', title: 'Delta Type', format: 'Enum', enum: eDeltaType },\n        { name: 'allowDbNull', title: 'Null?', format: 'Boolean' },\n        { name: 'defaultValue', title: 'Default Value', format: '' },\n        { name: 'securityFlag', title: 'Security Flag', format: 'Enum', enum: eSecurityFlag },\n        { name: 'format', title: 'Format'},\n        { name: 'columnValidation', title: 'Validation', format: '', class: 'columnValidationClass', tooltip: 'columnValidationTooltip' }\n    ];\n\n    private _columnsObservable = new BehaviorSubject<Array<any>>(null);\n    columnsObservable: Observable<Array<any>> = this._columnsObservable.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        authService: AuthService,\n        public editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router,\n        fb: FormBuilder) {\n\n        this.tableFormService = new HubFormsService(fb, hubService, authService);\n    }\n\n    ngOnInit() {\n        this.logger.LogC(() => `ngOnInit`, eLogLevel.Trace);\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n                this.hubService.getRemoteLibrariesObservable()\n            ).subscribe(result => {\n                let data = result[0];\n                this.hubCache = result[2];\n                this.datalinkForm = result[3];\n\n                this.action = data['action'];\n                this.pageTitle = data['pageTitle'];\n\n                if (this.hubCache.isLoaded() && this.datalinkForm) {\n                    this.connectionTables = this.hubCache.getConnectionTables();\n                    this.managedConnections = this.hubCache.getManagedConnections();\n                    this.logger.LogC(() => `ngOnInit - completed`, eLogLevel.Trace);\n                }\n\n                this.updateTargets();\n                this.updateColumns();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Edit Target Table');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._loadStrategySubscription) { this._loadStrategySubscription.unsubscribe(); }\n    }\n\n    private updateTargets() {\n        this.targets = this.datalinkForm.controls.dexihDatalinkTargets.value.sort((a, b) => a.position - b.position);\n    }\n\n    updateColumns() {\n        let io = new InputOutputColumns();\n        let datalinkColumns = io.getDatalinkOutputColumns(this.datalinkForm.value);\n\n        this._columnsObservable.next(datalinkColumns);\n    }\n\n    applyBulkEdit() {\n        this.datalinkForm.markAsDirty();\n        this.updateColumns();\n    }\n\n    editColumn(column) {\n        this.router.navigate(['column', column.key], { relativeTo: this.route.parent });\n    }\n\n    editTable(target: DexihDatalinkTarget) {\n        this.router.navigate(['table-edit', target.key], { relativeTo: this.route });\n    }\n\n    addTable() {\n        this.router.navigate(['table-new'], { relativeTo: this.route });\n    }\n\n    deleteTables(targets: DexihDatalinkTarget[]) {\n        targets.forEach(target => {\n            this.editDatalinkService.deleteDatalinkTarget(this.datalinkForm, target.key);\n            this.updateTargets();\n        });\n    }\n\n    targetSortChange(targets: DexihDatalinkTarget[]) {\n        let position = 1;\n        targets.forEach(target => {\n            target.position = position++;\n        });\n        this.updateTargets();\n    }\n\n}\n","<d-tabs title=\"Target Options\" [showExpandButton]=\"true\" [padding]=\"false\">\n<d-tab title=\"Datalink Columns\" [padding]=\"false\">\n    <div class=\"container-fluid\">\n        <d-table [enableMultiSelect]=\"true\" [enableManualSort]=\"true\" [enableSort]=\"false\" [enableFilter]=\"false\"\n            [columns]=\"columns\" [dataObservable]=\"columnsObservable\"\n            (rowClick)=\"editColumn($event)\">\n\n            <ng-template #tableHeader let-items=\"items\">\n                <column-edit-bulk *ngIf=\"showBulkEdit && items.length > 0\" [columns]=\"items\" (updated)=\"applyBulkEdit()\" ></column-edit-bulk>\n            </ng-template>\n\n            <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n                <d-button iconClass=\"fa fa-th-list\" class=\"ml-1\" (click)=\"showBulkEdit=!showBulkEdit\">{{showBulkEdit ? 'Hide Bulk Edit' : 'Show Bulk Edit'}} </d-button>\n            </ng-template>\n\n        </d-table>\n    </div>\n</d-tab>\n\n<d-tab title=\"Target Rules\" >\n    <form *ngIf=\"datalinkForm\" [formGroup]=\"datalinkForm\"  class=\"container\">\n        <fieldset>\n            <form-checkbox label=\"Datalink is a query and does not populate target tables.\"\n                formControlName=\"isQuery\" [errors]=\"editDatalinkService.hubFormsService.formErrors.isQuery\">\n            </form-checkbox>\n\n            <span *ngIf=\"!datalinkForm?.controls.isQuery.value\">\n                <section>\n                    <form-select label=\"Load Strategy\" formControlName=\"loadStrategy\" [items]=\"loadStrategies\" itemKey=\"key\"\n                        itemName=\"description\" iconClass=\"fa fa-database\" note='Specify processing method for target table(s).'\n                        [errors]=\"editDatalinkService.hubFormsService.formErrors.loadStrategy\">\n                    </form-select>\n                </section>\n                    <section>\n                    <form-select label=\"Update Strategy\" formControlName=\"updateStrategy\" [items]=\"updateStrategies\"\n                        itemKey=\"key\" itemName=\"description\" iconClass=\"fa fa-database\" note='Specify how records should be inserted/updated in the target table.'\n                        [errors]=\"editDatalinkService.hubFormsService.formErrors.updateStrategy\">\n                    </form-select>\n                </section>\n\n                <section>\n                    <form-select label=\"Audit Connection\" formControlName=\"auditConnectionKey\" [items]=\"this.managedConnections\"\n                        itemKey=\"key\" itemName=\"name\" iconClass=\"fa fa-database\" [errors]=\"editDatalinkService.hubFormsService.formErrors.auditConnectionKey\"\n                        note='Specify the connection where audit data (such as job results) should be written to.'>\n                        <connection-edit-button [key]=\"datalinkForm.controls.auditConnectionKey.value\"></connection-edit-button>\n                    </form-select>\n                </section>\n\n                <div class=\"form-row\">\n                    <section class=\"form-group col-md-6\">\n                        <form-input label=\"Maximum Rows Per Commit\" type=\"number\" formControlName=\"rowsPerCommit\"\n                            placeholder=\"Enter maximum rows per commit\" iconClass=\"fa fa-list\" [errors]=\"editDatalinkService.hubFormsService.formErrors.rowsPerCommit\">\n                        </form-input>\n                    </section>\n                    <section class=\"form-group col-md-6\">\n                        <form-input label=\"Maximum Rows Per Progress Update\" type=\"number\" formControlName=\"rowsPerProgress\"\n                            placeholder=\"Enter maximum rows per progress update\" iconClass=\"fa fa-list\" [errors]=\"editDatalinkService.hubFormsService.formErrors.rowsPerProgress\">\n                        </form-input>\n                    </section>\n                </div>\n\n                <div class=\"form-row mb-2\">\n                    <form-checkbox label=\"Add a default row to the target table.  Edit the 'Default Value' of the target columns determine the value to populate.\"\n                        formControlName=\"addDefaultRow\" [errors]=\"editDatalinkService.hubFormsService.formErrors.addDefaultRow\">\n                    </form-checkbox>\n                </div>\n            </span>\n        </fieldset>\n    </form>\n</d-tab>\n\n<d-tab title=\"Target Tables\" [padding]=\"false\"\n    *ngIf=\"!datalinkForm?.controls.isQuery.value\">\n    <div class=\"container\">\n        <d-table [enableMultiSelect]=\"true\" [enableManualSort]=\"true\" [enableSort]=\"false\" [enableFilter]=\"false\"\n            (onSortChanged)=\"targetSortChange($event)\" [columns]=\"targetTableColumns\" [data]=\"targets\"\n            (rowClick)=\"editTable($event)\">\n\n            <ng-template #actions let-items=\"items\">\n                <d-button-new class=\"mr-1\" (click)=\"addTable()\"></d-button-new>\n            </ng-template>\n\n            <ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n                <d-button-edit class=\"mr-1\" (click)=\"editTable(item)\"></d-button-edit>\n            </ng-template>\n\n            <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n                <d-button-delete class=\"mr-1\" (click)=\"deleteTables(items)\"></d-button-delete>\n            </ng-template>\n\n        </d-table>\n    </div>\n</d-tab>\n</d-tabs>\n<router-outlet></router-outlet>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubCache, InvalidActions } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription ,  Observable, combineLatest} from 'rxjs';\nimport { Location } from '@angular/common';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { FormGroup, FormArray, AbstractControl } from '@angular/forms';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { eFunctionType, eParameterDirection, DexihDatalinkColumn, DexihDatalinkTransformItem,\n  eTransformItemType, eTypeCode, DexihFunctionParameter, eErrorActionItems, eInvalidActionItems, FunctionParameter,\n  DexihDatalinkTarget } from '../../../../shared/shared.models';\nimport { CancelToken } from '../../../../+auth/auth.models';\n\n@Component({\n\n  selector: 'dexih-custom-function-edit',\n  templateUrl: './custom-function-edit.component.html'\n})\nexport class CustomFunctionEditComponent implements OnInit, OnDestroy {\n  public hubCache: HubCache;\n\n  public pageTitle: string;\n\n  public cancelToken: CancelToken = new CancelToken();\n\n  private _subscription: Subscription;\n  private _returnParameterSubscription: Subscription;\n  private _parametersSubscription: Subscription;\n  private _saveSubscription: Subscription;\n\n  eFunctionType = eFunctionType;\n  eParameterDirection = eParameterDirection;\n  functionType: eFunctionType;\n\n  eInvalidActionItems = eInvalidActionItems.filter(c => c.key > 0);\n  eErrorActionItems = eErrorActionItems.filter(c => c.key > 0);\n\n  datalinkTransformItemKey: number;\n  datalinkKey: number;\n  datalinkTransformKey: number;\n\n  datalinkForm: FormGroup;\n  datalinkTransformForm: FormGroup;\n  datalinkTransformItemForm: FormGroup;\n  returnParameterForm: FormGroup;\n\n  newDatalinkTransformItemForm: FormGroup;\n\n  parameters: FormArray;\n  inputParameters: AbstractControl[] = [];\n  outputParameters: AbstractControl[] = [];\n\n  inputParameterValues = [];\n  outputParameterValues = [];\n  returnParameterValue;\n\n\n  inputColumns: Array<DexihDatalinkColumn>;\n  outputColumns: Array<DexihDatalinkColumn>;\n  datalinkTargets: Array<DexihDatalinkTarget>;\n\n\n  constructor(\n    private hubService: HubService,\n    private authService: AuthService,\n    private editDatalinkService: DatalinkEditService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n          this.route.data,\n          this.route.params,\n          this.hubService.getHubCacheObservable(),\n          this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n          this.hubService.getRemoteLibrariesObservable()\n      ).subscribe(result => {\n        this.pageTitle = result[0]['pageTitle'];\n        this.hubCache = result[2];\n        this.datalinkForm = result[3];\n\n        this.functionType = result[1]['functionType'];\n        if (this.functionType === eFunctionType.Validate) {\n          this.datalinkTransformForm = this.editDatalinkService.getValidationTransform();\n          this.datalinkTransformKey = this.datalinkTransformForm.value.key;\n        } else {\n          this.datalinkTransformKey = +result[1]['datalinkTransformKey'];\n          this.datalinkTransformForm = this.editDatalinkService.getDatalinkTransform(this.datalinkTransformKey);\n        }\n\n        this.datalinkTransformItemKey = +result[1]['datalinkTransformItemKey'];\n\n        if (this.datalinkTransformForm) {\n          // // if this is a join transform, then the use the join columns for the input.\n          // if (this.datalinkTransformForm.value.transformType === eTransformType.Join ||\n          //   this.datalinkTransformForm.value.transformType === eTransformType.Lookup ) {\n          //   const table = this.datalinkTransformForm.controls.joinDatalinkTable.value;\n          //   if (!table) {\n          //     this.hubService.addHubErrorMessage('The join table could not be found.');\n          //     this.authService.navigateUp();\n          //   }\n          //   table.name = '(Joined) ' + table.name;\n          //   this.sourceTables = this.datalinkTransformForm.controls.runTime.value.inputColumns;\n          //   this.sourceTables.unshift(table);\n          // }  else {\n          //   this.inputColumns = this.datalinkTransformForm.controls.runTime.value.inputColumns;\n          // }\n          // this.outputColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n\n          let nodeDatalinkColumn = <DexihDatalinkColumn> this.datalinkTransformForm.controls.nodeDatalinkColumn.value;\n          let nodeDatalinkColumnKey = nodeDatalinkColumn ? nodeDatalinkColumn.key : null;\n          let io = new InputOutputColumns();\n          if (nodeDatalinkColumnKey) {\n            let inputColumns = <DexihDatalinkColumn[]> this.datalinkTransformForm.controls.runTime.value.inputColumns;\n            this.inputColumns = io.getAvailableColumns(inputColumns, nodeDatalinkColumnKey, 0);\n          } else {\n            this.inputColumns = this.datalinkTransformForm.controls.runTime.value.inputColumns;\n          }\n\n          this.outputColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n          this.datalinkTargets = this.datalinkForm.controls.dexihDatalinkTargets.value;\n\n          if (this.datalinkTransformItemKey) {\n            this.datalinkTransformItemForm = this.editDatalinkService\n              .getDatalinkTransformItem(this.datalinkTransformForm, this.datalinkTransformItemKey);\n\n              // create a copy of the form item to allow for cancel.\n              this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n                .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, this.datalinkTransformItemForm.value);\n\n            if (!this.newDatalinkTransformItemForm) {\n                this.authService.navigateUp();\n                return;\n            }\n          } else {\n\n            let newItem = new DexihDatalinkTransformItem();\n            newItem.datalinkTransformKey = this.datalinkTransformKey;\n            newItem.transformItemType = eTransformItemType.CustomFunction;\n\n            let returnParameter = new DexihFunctionParameter();\n\n            if (this.functionType === eFunctionType.Condition\n              || this.functionType === eFunctionType.JoinCondition || this.functionType === eFunctionType.Validate) {\n                returnParameter.dataType = eTypeCode.Boolean;\n            } else {\n              returnParameter.dataType = eTypeCode.String;\n            }\n            returnParameter.name = 'Return';\n            returnParameter.direction = eParameterDirection.ReturnValue;\n            returnParameter.rank = 0;\n            returnParameter.position = -1;\n            returnParameter.datalinkColumn = null;\n            returnParameter.isValid = true;\n\n            let funcParam = new FunctionParameter();\n            funcParam.name = 'Return';\n            returnParameter['runTime'] = {functionParameter: funcParam};\n\n            newItem.dexihFunctionParameters = new Array<DexihFunctionParameter>();\n            newItem.dexihFunctionParameters.push(returnParameter);\n            this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n              .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, newItem);\n          }\n\n          // this.returnParameterForm = this.editDatalinkService.hubFormsService\n          //   .datalinkFunctionParametersFormGroup(returnParameter);\n\n          // if (this._returnParameterSubscription) { this._returnParameterSubscription.unsubscribe(); }\n          // this._returnParameterSubscription = this.returnParameterForm.valueChanges.subscribe(parameter => {\n          //   this.newDatalinkTransformItemForm.controls.targetDatalinkColumn.setValue(parameter.datalinkColumn);\n          //   this.newDatalinkTransformItemForm.controls.returnType.setValue(parameter.dataType);\n          //   this.newDatalinkTransformItemForm.markAsDirty();\n          // });\n\n          this.parameters = <FormArray>this.newDatalinkTransformItemForm.controls.dexihFunctionParameters;\n\n          this.setParameters(this.parameters.controls);\n\n          if (this._parametersSubscription) { this._parametersSubscription.unsubscribe(); }\n          this._parametersSubscription = this.parameters.valueChanges.subscribe(p => {\n            this.setParameters(p);\n          });\n        }\n\n        if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n        this._saveSubscription = this.editDatalinkService.savingDatalink.subscribe(value => {\n            if(value) {\n                this.apply();\n            }\n        });\n\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Edit Custom Function');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._returnParameterSubscription) { this._returnParameterSubscription.unsubscribe(); }\n    if (this._parametersSubscription) { this._parametersSubscription.unsubscribe(); }\n    if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n    this.cancelToken.cancel();\n  }\n\n  canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      if (this.newDatalinkTransformItemForm && !this.newDatalinkTransformItemForm.pristine) {\n        this.authService.confirmDialog('Function has changed',\n        'The function has changed.  Would you like to apply the changes and return to the previous screen?'\n        ).then(confirm => {\n          this.apply();\n          resolve(confirm);\n        }).catch(reason => {\n          resolve(false);\n        });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  private setParameters(p: AbstractControl[]) {\n      this.inputParameters = this.parameters.controls.sort((a, b) => a.value.position - b.value.position)\n      .filter(c => c.value.direction === eParameterDirection.Input);\n\n      this.inputParameterValues = new Array(this.inputParameters.length);\n\n    this.outputParameters = this.parameters.controls.sort((a, b) => a.value.position - b.value.position)\n      .filter(c => c.value.direction === eParameterDirection.Output);\n\n      this.outputParameterValues = new Array(this.inputParameters.length);\n\n      this.returnParameterForm = <FormGroup> this.parameters.controls.find(c => c.value.direction === eParameterDirection.ReturnValue);\n    }\n\n  private parametersArray() {\n    return <FormArray>this.newDatalinkTransformItemForm.controls.dexihFunctionParameters;\n  }\n\n  addParameter(parameter: FormGroup, direction: eParameterDirection) {\n    try {\n      let newParameter = new DexihFunctionParameter();\n      if (parameter) {\n        let oldParameter = parameter.value;\n        newParameter.dataType = oldParameter.dataType;\n        newParameter.name = oldParameter.name;\n        newParameter.position = oldParameter.position + 1;\n      }\n\n      newParameter.name = '';\n      newParameter.datalinkColumn = null;\n      newParameter.value = null;\n      newParameter.dataType = eTypeCode.String;\n      newParameter.direction = direction;\n      newParameter.rank = 0;\n      newParameter.isValid = true;\n\n      let parameters = this.parametersArray();\n      let newParameterForm = this.editDatalinkService.hubFormsService\n        .datalinkFunctionParametersFormGroup(newParameter);\n      parameters.push(newParameterForm);\n\n      // reset the positions\n      parameters.controls.sort((a, b) => a.value.position - b.value.position).forEach((p, index) => {\n        (<FormGroup>p).controls.position.setValue(index * 10);\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Edit Custom Function, add parameter');\n    }\n\n  }\n\n  removeParameter(parameter: FormGroup) {\n    try {\n      let inputParameters = this.parametersArray();\n      let index: number = inputParameters.controls.indexOf(parameter);\n      if (index > -1) {\n        inputParameters.removeAt(index);\n      }\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Edit Custom Function, remove parameter');\n    }\n  }\n\n  newDefaultParameter(): DexihFunctionParameter {\n    try {\n      let parameter = new DexihFunctionParameter();\n      parameter.datalinkTransformItemKey = this.newDatalinkTransformItemForm.value.key;\n      parameter.dataType = eTypeCode.String;\n      parameter.rank = 0;\n      parameter.isValid = true;\n      return parameter;\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Edit Custom Function, default parameter');\n    }\n\n  }\n\n  cancel() {\n    this.authService.navigateUp();\n  }\n\n\n  apply() {\n    this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, this.newDatalinkTransformItemForm);\n    this.newDatalinkTransformItemForm.markAsPristine();\n  }\n\n  applyExit() {\n    this.apply();\n    this.authService.navigateUp();\n  }\n\n  downloadCode(parameters = null) {\n    this.hubService.downloadCustomFunction(this.newDatalinkTransformItemForm.value, parameters).catch(reason => {});\n  }\n\n  test(parameters = null) {\n    this.hubService.testCustomFunction(this.newDatalinkTransformItemForm.value, parameters, this.cancelToken).then(result => {\n      this.hubService.addHubSuccessMessage('The function has successfully compiled.');\n\n      if (result && result.length > 0) {\n        result.forEach((value, index) => {\n          if (index === 0) {\n            this.returnParameterValue = value;\n          } else {\n            this.outputParameterValues[index - 1] = value;\n          }\n        });\n      } else {\n        this.returnParameterValue = null;\n        this.outputParameterValues.forEach(c => c = null );\n      }\n    }).catch(reason => {\n      this.returnParameterValue = null;\n      this.outputParameterValues.forEach(c => c = null );\n      this.hubService.addHubMessage(reason);\n    });\n  }\n}\n\n","<div *ngIf=\"newDatalinkTransformItemForm && inputColumns && outputColumns\">\n\n\t<d-widget-section *ngIf=\"datalinkTransformForm\" title=\"Edit Custom Function\" [showExpandButton]=\"true\">\n\t\t<ng-template #sectionHeader>\n\t\t\t<d-button-validate class=\"mr-1\" (click)=\"test()\" text=\"Syntax Check\"></d-button-validate>\n\t\t\t<d-button-download class=\"mr-1\" (click)=\"downloadCode()\" text=\"Download Code\"></d-button-download>\n\t\t\t<d-button-apply [disabled]=\"newDatalinkTransformItemForm.pristine\"\n\t\t\t\t(click)=\"!newDatalinkTransformItemForm.pristine && applyExit()\" class=\"mr-1\"></d-button-apply>\n\t\t\t<d-button-cancel (click)=\"cancel()\"></d-button-cancel>\n\t\t</ng-template>\n\n\t\t<form *ngIf=\"newDatalinkTransformItemForm\" [formGroup]=\"newDatalinkTransformItemForm\" class=\"container\">\n\t\t\t<fieldset>\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section *ngIf=\"functionType != eFunctionType.Validate && functionType != eFunctionType.Condition\"\n\t\t\t\t\t\tclass=\"col col-xs-4\" [ngStyle]=\"{'z-index': 305, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Action when null\" formControlName=\"onNull\" [items]=\"eErrorActionItems\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"name\" iconClass=\"fa fa-database\" [enableFilter]=\"false\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"col col-xs-4\" [ngStyle]=\"{'z-index': 304, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Action when error\" formControlName=\"onError\" [items]=\"eErrorActionItems\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"name\" iconClass=\"fa fa-database\" [enableFilter]=\"false\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section *ngIf=\"functionType === eFunctionType.Condition\" class=\"col col-xs-4\"\n\t\t\t\t\t\t[ngStyle]=\"{'z-index': 303, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-checkbox label=\"Return 'NOT' result\" formControlName=\"notCondition\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<div *ngIf=\"functionType == eFunctionType.Validate\" class=\"col col-xs-4\"\n\t\t\t\t\t\t[ngStyle]=\"{'z-index': 302, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Action when false\" formControlName=\"invalidAction\" [items]=\"eInvalidActionItems\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"name\" iconClass=\"fa fa-database\" [enableFilter]=\"false\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div class=\"label\">\n\t\t\t\t\t\tInput Parameters\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngIf=\"inputParameters.length === 0\" class=\"mb-1\">\n\t\t\t\t\t\t<d-button (click)=\"addParameter(null, eParameterDirection.Input)\"\n\t\t\t\t\t\t\ticonClass=\"fa fa-plus-square-o\" title=\"Click to add a parameter\">Add Parameter\n\t\t\t\t\t\t</d-button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngFor=\"let inputParameter of inputParameters; let i = index\" class=\"pl-2\"\n\t\t\t\t\t\t[ngStyle]=\"{'z-index': 200-i, 'position': 'relative'}\">\n\t\t\t\t\t\t<input-parameter [allowNameSelect]=\"true\" [allowDataTypeSelect]=\"true\"\n\t\t\t\t\t\t\t[inputParameterForms]=\"[inputParameter]\" [inputColumns]=\"inputColumns\"\n\t\t\t\t\t\t\t[nodeDatalinkColumnKey]=\"datalinkTransformForm.controls.nodeDatalinkColumn.value?.key\"\n\t\t\t\t\t\t\t[updateParameterName]=\"true\"\n\t\t\t\t\t\t\t(addParameter)=\"addParameter($event, eParameterDirection.Input)\"\n\t\t\t\t\t\t\t(removeParameter)=\"removeParameter($event)\" [allowAdd]=\"true\" [allowRemove]=\"true\">\n\t\t\t\t\t\t</input-parameter>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div *ngIf=\"functionType != eFunctionType.Condition && functionType != eFunctionType.JoinCondition\">\n\t\t\t\t\t<div class=\"label mb-1\">\n\t\t\t\t\t\tOutput Parameters\n\t\t\t\t\t</div>\n\t\t\t\t\t<div [ngStyle]=\"{'z-index': 101, 'position': 'relative'}\">\n\t\t\t\t\t\t<output-parameter [allowNameSelect]=\"false\" [allowDataTypeSelect]=\"true\"\n\t\t\t\t\t\t\t[outputParameterForm]=\"returnParameterForm\" [outputColumns]=\"outputColumns\"  [datalinkTargets]=\"datalinkTargets\" \n\t\t\t\t\t\t\t(addParameter)=\"addParameter($event, eParameterDirection.Output)\"></output-parameter>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngIf=\"outputParameters.length === 0\">\n\t\t\t\t\t\t<d-button (click)=\"addParameter(null, eParameterDirection.Output)\"\n\t\t\t\t\t\t\ticonClass=\"fa fa-plus-square-o\" title=\"Click to add a parameter\">Add Parameter\n\t\t\t\t\t\t</d-button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngFor=\"let parameter of outputParameters; let i = index\"\n\t\t\t\t\t\t[ngStyle]=\"{'z-index': 100-i, 'position': 'relative'}\">\n\t\t\t\t\t\t<output-parameter [allowNameSelect]=\"true\" [allowDataTypeSelect]=\"true\"\n\t\t\t\t\t\t\t[outputParameterForm]=\"parameter\" [outputColumns]=\"outputColumns\"  [datalinkTargets]=\"datalinkTargets\" \n\t\t\t\t\t\t\t[updateParameterName]=\"true\"\n\t\t\t\t\t\t\t(addParameter)=\"addParameter($event, eParameterDirection.Output)\"\n\t\t\t\t\t\t\t(removeParameter)=\"removeParameter($event)\" [allowAdd]=\"true\" [allowRemove]=\"true\">\n\t\t\t\t\t\t</output-parameter>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\tFunction Code\n\t\t\t\t<textarea class='form-control' rows=\"20\" width=\"100%\" spellcheck=\"false\"\n\t\t\t\t\tformControlName=\"functionCode\"></textarea>\n\t\t\t</fieldset>\n\t\t</form>\n\t</d-widget-section>\n\n\n\n\t<d-widget-section *ngIf=\"datalinkTransformForm && newDatalinkTransformItemForm\" title=\"Test Function\"\n\t\t[showExpandButton]=\"true\">\n\t\t<ng-template #sectionHeader>\n\t\t\t<button class=\"btn btn-success mr-1\" (click)=\"test()\">Syntax Check</button>\n\t\t\t<button class=\"btn btn-success mr-1\" (click)=\"test(inputParameterValues)\">Run</button>\n\t\t\t<button class=\"btn btn-success\" (click)=\"downloadCode(inputParameterValues)\">Download Code</button>\n\t\t</ng-template>\n\n\t\t<form class=\"container\">\n\t\t\t<div class=\"label\">\n\t\t\t\tInput Parameters\n\t\t\t</div>\n\t\t\t<div *ngFor=\"let inputParameter of inputParameters; let i = index\"\n\t\t\t\t[ngStyle]=\"{'z-index': 200-i, 'position': 'relative'}\">\n\t\t\t\t<form-input [label]=\"inputParameter.controls.name.value\" [(ngModel)]=\"inputParameterValues[i]\"\n\t\t\t\t\t[name]=\"'inputParameterValues' + i\" type=\"text\" placeholder=\"Enter a test value for the parameter\">\n\t\t\t\t</form-input>\n\t\t\t</div>\n\t\t\t<form-input label=\"Return Value\" [disabled]=\"true\" [(ngModel)]=\"returnParameterValue\"\n\t\t\t\tname=\"returnParameterValue\" type=\"text\"></form-input>\n\t\t\t<div class=\"label\" *ngIf=\"outputParameters.length > 0\">\n\t\t\t\tOutputs Parameters\n\t\t\t</div>\n\t\t\t<div *ngFor=\"let outputParameter of outputParameters; let i = index\"\n\t\t\t\t[ngStyle]=\"{'z-index': 200-i, 'position': 'relative'}\">\n\t\t\t\t<form-input [disabled]=\"true\" [label]=\"outputParameter.controls.name.value\"\n\t\t\t\t\t[(ngModel)]=\"outputParameterValues[i]\" [name]=\"'outputParameterValues' + i\" type=\"text\">\n\t\t\t\t</form-input>\n\t\t\t</div>\n\t\t</form>\n\t</d-widget-section>\n</div>","import { Component, Input, Output, OnInit, OnChanges, OnDestroy, EventEmitter } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { DexihDatalinkColumn } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'output-columns',\n    templateUrl: './output-columns.component.html'\n})\nexport class OutputColumnsComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() public datalinkTransformForm: FormGroup;\n    @Input() public allowMappingOutputs = true;\n\n    @Output() public inputOutputDrop: EventEmitter<{ inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn }>\n        = new EventEmitter<{ inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn }>();\n\n    private _outputColumnsSubscribe: Subscription;\n    columns: Array<DexihDatalinkColumn> = [];\n    columnGroups: Array<{group: string, columns: Array<DexihDatalinkColumn>}> = [];\n\n    constructor(\n    ) {\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnChanges() {\n        if (this._outputColumnsSubscribe) { this._outputColumnsSubscribe.unsubscribe(); }\n        this.refreshColumns(this.datalinkTransformForm.controls.runTime.value.transformColumns);\n        this._outputColumnsSubscribe = this.datalinkTransformForm.controls.runTime.valueChanges.subscribe(() => {\n            this.refreshColumns(this.datalinkTransformForm.controls.runTime.value.transformColumns);\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._outputColumnsSubscribe) { this._outputColumnsSubscribe.unsubscribe(); }\n    }\n\n    refreshColumns(columns: DexihDatalinkColumn[]) {\n        let previousGroup: string = null;\n\n        let columnGroups: Array<{group: string, columns: Array<DexihDatalinkColumn>}> = [];\n        let cols: Array<DexihDatalinkColumn> = null;\n\n        if(columns === null) {\n            return;\n        }\n        \n        columns\n            .filter(c => c.isValid)\n            .sort((a, b) => a.position - b.position)\n            .forEach(column => {\n            let group = column.columnGroup ? column.columnGroup : '(un-grouped)';\n            if (group !== previousGroup) {\n                if (cols) {\n                    columnGroups.push({group: previousGroup, columns: cols});\n                }\n                previousGroup = group;\n                cols = [];\n            }\n            cols.push(column);\n        });\n\n        if (cols && cols.length > 0) {\n            columnGroups.push({group: previousGroup, columns: cols});\n        }\n\n        this.columnGroups = columnGroups;\n    }\n\n    // triggered when a source column is dropped onto the output column\n    newOutputDrop(inputColumn: DexihDatalinkColumn) {\n        let outputColumn = this.columns.find(c => c.name === inputColumn.name);\n        this.inputOutputDrop.emit({\n            inputColumn: inputColumn,\n            outputColumn: outputColumn\n        });\n    }\n\n    newInputOutputDrop(inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn) {\n        this.inputOutputDrop.emit({\n            inputColumn: inputColumn,\n            outputColumn: outputColumn\n        });\n    }\n}\n","<div *ngIf=\"datalinkTransformForm\" cdkDropList #cdkDropList=\"cdkDropList\">\n    <li *ngIf=\"allowMappingOutputs\" class=\"list-group-item p-1 dexih-overflow b-0\" style=\"height: 40px;\" title=\"drop to create new mapping...\" dropZone (dropData)=\"newOutputDrop($event)\" [zone]=\"allowMappingOutputs ? 'input-column' : ''\" dropAllowedClass=\"drop-zone-green\">\n        &nbsp;(Drop&nbsp;Column)\n    </li>\n    <d-widget-section *ngFor=\"let columnGroup of columnGroups\" [title]=\"columnGroup.group\" [padding]=\"false\" [showExpandButton]=\"true\">\n        <div *ngFor=\"let column of columnGroup.columns | fieldSort : 'position' | isValidFilter; let i = index\" dropZone (dropData)=\"newInputOutputDrop($event, column)\" [zone]=\"allowMappingOutputs ? 'input-column' : ''\" dropAllowedClass=\"drop-zone-green\" >\n            <output-column [datalinkTransformForm]='datalinkTransformForm' [column]='column'></output-column>\n        </div>\n    </d-widget-section>\n</div>","export { PreviewTableComponent } from './preview-table.component';\n","import { Component, Input, Output, OnInit, OnChanges, EventEmitter, OnDestroy } from '@angular/core';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { HubCache, eMappingStatus, MappingStatusInfo, lineageMappingStatuses } from '../../../hub.models';\nimport { eObjectUse, ColumnUsageNode, eDatalinkObjectType } from '../../../hub.lineage.models';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { LogFactory, eLogLevel } from '../../../../../logging';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { DexihTableColumn, DexihTable, DexihDatalinkColumn, eTypeCode } from '../../../../shared/shared.models';\n\n\n@Component({\n\n    selector: 'target-column',\n    templateUrl: './target-column.component.html'\n})\nexport class TargetColumnComponent implements OnInit, OnDestroy, OnChanges {\n    @Input() public column: DexihTableColumn = null;\n    @Input() public datalinkTransformForm: FormGroup;\n    @Input() public inputTables: Array<DexihTable> = null;\n    @Output() public inputOutputDrop: EventEmitter<{inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn}>\n            = new EventEmitter<{inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn}>();\n\n    private _subscription: Subscription;\n\n    private hubCache: HubCache;\n    private datalinkForm: FormGroup;\n\n    eMappingStatus = eMappingStatus;\n\n    eTypeCode = eTypeCode;\n\n    public mappingStatusInfoLineage: MappingStatusInfo;\n    public mappingStatusInfoImpact: MappingStatusInfo;\n\n    public mappingStatusLineage: eMappingStatus;\n\n    childColumns: DexihTableColumn[];\n\n    public logger = new LogFactory('output-column.component');\n    public logCount = 0;\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n              this.hubCache = result[0];\n              this.datalinkForm = result[1];\n\n              this.logger.LogC(() => `Subscription count: ${this.logCount++}`, eLogLevel.Trace);\n\n\n            this.childColumns = this.column.childColumns;\n\n              this.refreshStatus();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Output Column');\n        }\n    }\n\n    ngOnChanges() {\n        this.refreshStatus();\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    refreshStatus() {\n        if (this.datalinkForm) {\n            let columnUsage: ColumnUsageNode = new ColumnUsageNode(\n            eDatalinkObjectType.TargetTable, eObjectUse.Target,\n            this.datalinkForm.value, null, this.column, null, null, eMappingStatus.NotMapped, this.hubCache);\n            this.mappingStatusLineage = columnUsage.createDatalinkLineage(true);\n            this.mappingStatusInfoLineage = lineageMappingStatuses.find(c => c.key === this.mappingStatusLineage);\n        }\n    }\n\n\n  editColumn() {\n      if (this.column.key && (this.mappingStatusLineage === eMappingStatus.Mapped\n        || this.mappingStatusLineage === eMappingStatus.MappedToNothing)) {\n        this.router.navigate(['column', this.column.key], { relativeTo: this.route.parent });\n      } else {\n          this.authService.informationDialog('Can not edit column',\n          // tslint:disable-next-line:max-line-length\n          'This column is not created by the current transform (i.e. a pass-through or target column).  To edit a column first create a mapping.')\n      }\n    }\n}\n","<div class=\"list-group-item p-0 rounded-0\" *ngIf=\"mappingStatusInfoLineage.key != eMappingStatus.Mapped\" [title]=\"column.logicalName + ' ' + eTypeCode[column.dataType]\" (click)=\"editColumn()\">\n    <div class=\"d-flex flex-row\">\n\n        <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoLineage.statusClass\" [title]=\"mappingStatusInfoLineage.name\"></i>\n        <span class=\"flex-fill input-group-text ellipsis-overflow rounded-0 border-0\">\n            {{column.logicalName}}\n        </span>\n    </div>\n</div>\n<div class=\"list-group-item p-0 rounded-0\" *ngIf=\"mappingStatusInfoLineage.key == eMappingStatus.Mapped\" [title]=\"column.logicalName + ' ' + eTypeCode[column.dataType]\"\n    (click)=\"editColumn()\">\n    <div class=\"d-flex flex-row\">\n\n        <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoLineage.statusClass\" [title]=\"mappingStatusInfoLineage.name\"></i>\n        <span class=\"flex-fill input-group-text ellipsis-overflow rounded-0 border-0\">\n            {{column.logicalName}}\n        </span>\n    </div>\n</div>\n<!-- <div *ngIf=\"childColumns?.length > 0\" class=\"p-2\">\n    <output-column *ngFor=\"let childColumn of childColumns\" [column]=\"childColumn\" [datalinkTransformForm]=\"datalinkTransformForm\"></output-column>\n</div> -->","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubCache, sourceTypes, eMappingStatus, impactMappingStatuses } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { Observable, Subscription, BehaviorSubject , combineLatest} from 'rxjs';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { eObjectUse, ColumnUsageNode, eDatalinkObjectType } from '../../../hub.lineage.models';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { DexihDatalinkTable, eSourceType, DexihDatalinkColumn, eSecurityFlag, eDeltaType } from '../../../../shared/shared.models';\nimport { AuthService } from '../../../../+auth/auth.service';\n\n@Component({\n    selector: 'dexih-datalink-edit-source-table-form',\n    templateUrl: './datalink-edit-source-table.component.html'\n})\nexport class DatalinkEditSourceTableComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n\n    private _subscription: Subscription;\n    private _sourceSubscription: Subscription;\n\n    public sourceTables: DexihDatalinkTable[];\n    private hubCache: HubCache;\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    public eMappingStatus = eMappingStatus;\n\n    public eSourceType = eSourceType;\n    public sourceTypes = sourceTypes;\n\n    columns = [\n        { name: 'position', title: '#', format: '' },\n        { name: 'columnStatus', title: 'Impact', format: 'Html' },\n        { name: 'columnGroup', title: 'Group', format: '' },\n        { name: 'name', title: 'Name', format: '' },\n        { name: 'logicalName', title: 'Logical', format: '' },\n        { name: 'dataType', title: 'Data Type', format: '' },\n        { name: 'deltaType', title: 'Delta Type', format: 'Enum', enum: eDeltaType },\n        { name: 'allowDbNull', title: 'Null?', format: 'Boolean' },\n        { name: 'format', title: 'Format'},\n        { name: 'isIncrementalUpdate', title: 'Incremental?', format: 'Boolean' },\n        { name: 'securityFlag', title: 'Security Flag', format: 'Enum', enum: eSecurityFlag },\n        { name: 'isInput', title: 'Input?', format: 'Boolean' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n                this.pageTitle = result[0]['pageTitle'];\n                this.hubCache = result[2];\n                this.datalinkForm = result[3];\n\n                if (this.datalinkForm) {\n                    this.updateData();\n\n                    if (this._sourceSubscription) { this._sourceSubscription.unsubscribe(); }\n                    const sourceDatalinkTable = <FormGroup> this.datalinkForm.controls.sourceDatalinkTable;\n                    this._sourceSubscription = sourceDatalinkTable.controls.dexihDatalinkColumns.valueChanges.subscribe(() => {\n                        this.updateData();\n                    });\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Edit Source Table');\n        }\n\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._sourceSubscription) { this._sourceSubscription.unsubscribe(); }\n    }\n\n    previewData() {\n        let sourceDatalinkTable = <DexihDatalinkTable> this.datalinkForm.controls.sourceDatalinkTable.value;\n\n        switch (sourceDatalinkTable.sourceType) {\n            case eSourceType.Table:\n                let sourceTableKey = sourceDatalinkTable.sourceTableKey;\n                this.router.navigate(['preview-table-data', 'table', sourceTableKey], { relativeTo: this.route });\n                break;\n            case eSourceType.Datalink:\n                let datalinkKey = sourceDatalinkTable.sourceDatalinkKey;\n                this.router.navigate(['preview-table-data', 'datalink', datalinkKey], { relativeTo: this.route });\n                break;\n            default:\n                this.authService.informationDialog('Cannot Preview', 'Previews are only available for tables and datalinks.');\n                break;\n        }\n    }\n\n    columnStatus(column: DexihDatalinkColumn): string {\n        let columnUsage: ColumnUsageNode = new ColumnUsageNode(\n            eDatalinkObjectType.SourceTable,\n            eObjectUse.Source,\n            this.datalinkForm.value,\n            column,\n            null,\n            null,\n            null,\n            eMappingStatus.PassThroughMap,\n            this.hubCache\n        );\n        const lineage = columnUsage.createDatalinkImpact(true);\n        const mappingStatus = impactMappingStatuses.find(c => c.key === lineage);\n        if (mappingStatus) {\n            return `${mappingStatus.name}<i class=\"float-right ${mappingStatus.statusClass}\"></i>`\n        }\n    }\n\n    updateData() {\n        let sourceDatalinkTable = <FormGroup>this.datalinkForm.controls.sourceDatalinkTable;\n        let columnData = [];\n\n        let columnsArray = <FormArray>sourceDatalinkTable.controls.dexihDatalinkColumns;\n\n        columnsArray.controls.filter(c => c.value.isValid)\n            .sort((a, b) => a.value.position - b.value.position)\n            .forEach(columnForm => {\n                let column = <DexihDatalinkColumn> columnForm.value;\n                let newColumn = {\n                    key: column.key,\n                    position: column.position,\n                    columnStatus: this.columnStatus(column),\n                    columnGroup: column.columnGroup,\n                    name: column.name,\n                    dataType: this.hubCache.dataTypeToString(column),\n                    deltaType: column.deltaType,\n                    allowDbNull: column.allowDbNull,\n                    logicalName: column.logicalName,\n                    isIncrementalUpdate: column.isIncrementalUpdate,\n                    securityFlag: column.securityFlag,\n                    isInput: column.isInput,\n                    format: column.format\n                };\n\n            columnData.push(newColumn);\n        });\n\n        this._tableData.next(columnData);\n    }\n\n    deleteSelected(columns: Array<DexihDatalinkColumn>) {\n        let sourceDatalinkTable = <FormGroup>this.datalinkForm.controls.sourceDatalinkTable;\n        let columnsArray = <FormArray>sourceDatalinkTable.controls.dexihDatalinkColumns;\n\n        columns.forEach(column => {\n            let index = columnsArray.controls.findIndex(c => c.value.key === column.key);\n            columnsArray.removeAt(index);\n        });\n\n        this.updateData();\n    }\n\n    newColumn() {\n        this.router.navigate(['newcolumn'], { relativeTo: this.route.parent });\n    }\n\n    editColumn(column: DexihDatalinkColumn) {\n        this.router.navigate(['column', column.key], { relativeTo: this.route.parent });\n    }\n\n    columnSortChange(items: Array<DexihDatalinkColumn>) {\n        let sourceDatalinkTable = <FormGroup>this.datalinkForm.controls.sourceDatalinkTable;\n        let existingItems = <FormArray>sourceDatalinkTable.controls.dexihDatalinkColumns;\n\n        let position = 1;\n        items.forEach(item => {\n            let column = <FormGroup>existingItems.controls.find(c => c.value.key === item.key);\n            if (column) {\n                column.controls.position.setValue(position++);\n            }\n        });\n\n        this.updateData();\n    }\n}\n","<d-widget-section title='Source Type' [showExpandButton]=\"true\">\n    <ng-template #sectionHeader>\n        <d-button-edit class=\"mr-1\"\n            *ngIf=\"datalinkForm.controls.sourceDatalinkTable.value.sourceType == eSourceType.Table && datalinkForm.controls.sourceDatalinkTable.value.sourceTableKey\"\n            [routerLink]=\"['table-edit', datalinkForm.controls.sourceDatalinkTable.value.sourceTableKey]\"> Table\n        </d-button-edit>\n        <d-button-edit class=\"mr-1\"\n            *ngIf=\"datalinkForm.controls.sourceDatalinkTable.value.sourceType == eSourceType.Datalink && datalinkForm.controls.sourceDatalinkTable.value.sourceDatalinkKey\"\n            [routerLink]=\"['../../edit', datalinkForm.controls.sourceDatalinkTable.value.sourceDatalinkKey]\"> Datalink\n        </d-button-edit>\n        <d-button-preview (click)=\"previewData()\"></d-button-preview>\n    </ng-template>\n\n    <div  class=\"container\">\n        <datalink-table *ngIf=\"datalinkForm\" [datalinkTableForm]=\"datalinkForm.controls.sourceDatalinkTable\">\n        </datalink-table>\n    </div>\n\n</d-widget-section>\n\n<d-widget-section title='Columns' [showExpandButton]=\"true\" [padding]=\"false\">\n    <d-table [enableMultiSelect]=\"true\" [enableManualSort]=\"true\" (onSortChanged)=\"columnSortChange($event)\"\n        [columns]=\"columns\" [dataObservable]=\"tableData\" (rowClick)=\"editColumn($event)\">\n\n        <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n            <d-button-delete class=\"ml-1\" (click)=\"deleteSelected(items)\" title=\"Delete selected columns\"></d-button-delete>\n        </ng-template>\n\n        <ng-template #actions select=\"actionsTemplate\" let-items=\"items\">\n            <d-button-new (click)=\"newColumn()\" title=\"Create a new column\"></d-button-new>\n        </ng-template>\n\n        <ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n            <d-button-edit class=\"ml-1\" (click)=\"editColumn(item)\" title=\"Edit selected column\"></d-button-edit>\n        </ng-template>\n\n    </d-table>\n</d-widget-section>","<div class=\"container\">\n    <div *ngIf=\"!outputParameters\" class=\"row justify-content-start\">\n        <div class=\"col-auto\">\n            <h5>{{label}}</h5>\n            <div *ngIf=\"error\" class=\"text-danger\">\n                <i class=\"fa fa-exclamation-circle text-danger\" ></i>\n                {{error}}\n            </div>\n        </div>\n        <div *ngIf=\"source\" class=\"col-auto\"><i *ngIf=\"!source.valid\"\n                class=\"fa fa-exclamation-circle text-danger\" [title]=\"source.error\"></i>{{source.text}}</div>\n        <div *ngIf=\"target\" class=\"col-auto\">\n            <i *ngIf=\"source && !compare\" class=\"fa fa-arrow-right mr-2\"></i>\n            <i *ngIf=\"!target.valid\" class=\"fa fa-exclamation-circle text-danger\" [title]=\"target.error\"></i>\n            <span class=\"mr-2\" *ngIf=\"compare\">{{compare}}</span>\n            {{target.text}}\n        </div>\n    </div>\n\n    <ng-template [ngIf]=\"outputParameters\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <h5>{{label}}</h5>\n            </div>\n        </div>\n\n        <div *ngIf=\"source\"><i *ngIf=\"!source.valid\"\n            class=\"fa fa-exclamation-circle text-danger\" [title]=\"source.error\"></i>Source = {{source.text}}\n        </div>\n\n        <ng-template [ngIf]=\"inputParameters?.length > 0\">\n            <div class=\"row pt-2\">\n                <div class=\"col\">\n                    <h5>Inputs</h5>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col border bg-primary text-white font-weight-bold text-truncate\">Parameter</div>\n                <div class=\"col border bg-primary text-white font-weight-bold text-truncate\">Column / Value</div>\n            </div>\n            <ng-template ngFor let-parameter [ngForOf]=\"inputParameters\">\n                <div *ngFor=\"let value of parameter.values; let i = index;\" class=\"row\">\n                    <div class=\"col border bg-secondary text-white text-truncate\">\n                        <div *ngIf=\"i == 0\">{{ parameter.name}}</div>\n                    </div>\n                    <div class=\"col border border text-white bg-secondary text-truncate\" [title]=\"value.error\">\n                        <i *ngIf=\"!value.valid\" class=\"fa fa-exclamation-circle text-danger\" ></i>\n                        {{(parameter.values.length > 1 ? '[' + i + '] ' : '') + value.text}}\n                    </div>\n                </div>\n            </ng-template>\n        </ng-template>\n\n        <ng-template [ngIf]=\"mapParameters\">\n            <div *ngFor=\"let mapParameter of mapParameters\">\n                <div class=\"row pt-2\">\n                    <div class=\"col text-truncate\">\n                        <h5>{{mapParameter.name}}</h5>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div *ngFor=\"let parameter of mapParameter.parameters\"\n                        class=\"col border bg-primary text-white font-weight-bold text-truncate\">{{parameter.name}}</div>\n                </div>\n\n                <div *ngFor=\"let pValues of mapParameter.parameters[0].values; let i = index;\" class=\"row\">\n                    <div *ngFor=\"let parameter of mapParameter.parameters\"\n                        class=\"col border bg-secondary text-white text-truncate\" [title]=\"parameter.values[i].error\">\n                        <i *ngIf=\"!parameter.values[i].valid\" class=\"fa fa-exclamation-circle text-danger\" ></i>\n                        {{parameter.values[i].text}}\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template [ngIf]=\"outputParameters?.length > 0\">\n            <div class=\"row  pt-2\">\n                <div class=\"col\">\n                    <h5>Outputs</h5>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col border bg-primary text-white font-weight-bold text-truncate\">Parameter</div>\n                <div class=\"col border bg-primary text-white font-weight-bold text-truncate\">Column / Value</div>\n            </div>\n\n            <ng-template ngFor let-parameter [ngForOf]=\"outputParameters\">\n                <div *ngFor=\"let value of parameter.values; let i = index;\" class=\"row\">\n                    <div class=\"col border bg-secondary text-white text-truncate\">\n                        <div *ngIf=\"i == 0\">{{parameter.name}}</div>\n                    </div>\n                    <div class=\"col border border bg-secondary text-white text-truncate\" [title]=\"value.error\">\n                        <i *ngIf=\"!value.valid\" class=\"fa fa-exclamation-circle text-danger\" ></i>\n                        {{(parameter.values.length > 1 ? '[' + i + '] ' : '') + value.text}}\n                    </div>\n                </div>\n            </ng-template>\n        </ng-template>\n    </ng-template>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport {HubCache, transformItemTypes } from '../../../hub.models';\nimport { HubService } from '../../..';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { compare } from '../../../hub.query.models';\nimport { DexihDatalinkTransform, DexihDatalinkTransformItem, eTransformItemType, eCompare,\n    DexihDatalinkColumn, FunctionReference, eParameterDirection, eAggregate, eSortDirection, eTypeCode, eTransformType } from '../../../../shared/shared.models';\n\nexport class ValidValue {\n    public valid: boolean;\n    public text: string;\n    public error: string;\n}\n\nexport class ValidParameter {\n    public values: ValidValue[];\n    public name: string;\n}\n\nexport class ValidMapping {\n    public name: string;\n    public parameters: ValidParameter[];\n}\n\n@Component({\n    selector: 'mapping-item',\n    templateUrl: 'mapping-item.component.html'\n})\n\nexport class MappingItemComponent implements OnInit {\n    @Input() transform: DexihDatalinkTransform;\n    @Input() transformItem: DexihDatalinkTransformItem;\n    @Input() allowCondition: boolean;\n\n    private _subscription: Subscription;\n\n    private hubCache: HubCache;\n\n    public label: string;\n    public error: string;\n\n    public source: ValidValue;\n    public target: ValidValue;\n    public compare: string;\n    public inputParameters: ValidParameter[];\n    public outputParameters: ValidParameter[];\n\n    public mapParameters: ValidMapping[];\n\n    constructor(\n        private hubService: HubService) { }\n\n    ngOnInit() {\n        try {\n\n            if (this._subscription) { this._subscription.unsubscribe(); }\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.hubService.getRemoteLibrariesObservable()\n            ).subscribe(result => {\n                this.hubCache = result[0];\n                this.updateMapping();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Mappings');\n        }\n    }\n\n    async updateMapping() {\n        let item = this.transformItem;\n        let itemType = transformItemTypes.find(c => c.key === item.transformItemType);\n\n        switch (item.transformItemType) {\n            case eTransformItemType.BuiltInFunction:\n                if (item.functionClassName) {\n                    let func = await this.hubService.GetFunctionReference(item);\n                    if (func) {\n                        this.label = func.name;\n                        this.addBuiltInFunctionParameters(func);\n                    } else {\n                        this.error = `Error, function ${item.functionClassName}.${item.functionMethodName} not found.`;\n                    }\n                } else if (item.customFunctionKey) {\n                    let func = this.hubCache.hub.dexihCustomFunctions.find(c => c.key === item.customFunctionKey);\n                    if (func) {\n                        this.label = func.name;\n                        this.addCustomFunctionParameters();\n                    } else {\n                        this.error = 'Error, function not found.';\n                    }\n                } else {\n                    this.error = 'Error, function not found';\n                }\n                break;\n            case eTransformItemType.CustomFunction:\n                this.addCustomFunctionParameters();\n                break;\n            case eTransformItemType.AggregatePair:\n                this.label = eAggregate[item.aggregate];\n                break;\n            case eTransformItemType.Sort:\n                this.label = eSortDirection[item.sortDirection];\n                break;\n            case eTransformItemType.UnGroup:\n                this.label = 'UnGroup'\n                this.addUnGroupParameters();\n                break;\n            default:\n                this.label = itemType.name;\n                break;\n        }\n\n        if (itemType.useSource) { this.source = this.columnOrValue(null, item.sourceDatalinkColumn, item.sourceValue); }\n        if (itemType.useTarget) { this.target = this.describeDatalinkColumn(null, item.targetDatalinkColumn); }\n        if (itemType.useJoin) { this.target = this.describeDatalinkColumn(null, item.joinDatalinkColumn); }\n        if (itemType.useFilter) { this.target = this.columnOrValue(null, item.filterDatalinkColumn, item.filterValue)};\n\n        if (itemType.useFilter || itemType.useJoin) {\n            let filterCompare = item.filterCompare;\n            if (filterCompare === null) { filterCompare = eCompare.IsEqual };\n            this.compare = compare.find(c => c.key === filterCompare).name;\n        } else {\n            this.compare = null;\n        }\n    }\n\n    private columnOrValue(expectedDataType: eTypeCode, column: DexihDatalinkColumn, value: string): ValidValue {\n        if (column) {\n            return this.describeDatalinkColumn(expectedDataType, column);\n        } else {\n            return {text: this.describeStaticValue(value), valid: true, error: ''};\n        }\n    }\n\n    // concatenates the arrays together.\n    // node: .concat will append null arrays, where this ignores null arrays.\n    private concat<T>(...args: T[][]): T[] {\n        let array: T[] = [];\n        args.forEach(arg => {\n            if ( arg ) {\n                array = array.concat(arg);\n            }\n        });\n        return array;\n    }\n\n    private addBuiltInFunctionParameters(func: FunctionReference) {\n        let functionInputs = this.concat(func.inputParameters, func.resultInputParameters);\n        let functionOutputs = this.concat(func.outputParameters, func.returnParameters, func.resultOutputParameters,\n            func.resultReturnParameters);\n\n        let inputParams = this.transformItem.dexihFunctionParameters\n            .filter(c =>\n                c.direction === eParameterDirection.Input ||\n                c.direction === eParameterDirection.ResultInput ||\n                c.direction === eParameterDirection.Join);\n\n        this.inputParameters = functionInputs.filter(c => c && !c.linkedName).map<ValidParameter>(param => {\n            let p = inputParams.find(c => c.name === param.parameterName);\n            if (p) {\n                if (p.rank === 0) {\n                    let value = this.columnOrValue(p.dataType, p.datalinkColumn, p.value);\n                    return {name: this.describeParameterName(param), values: [value] };\n                } else {\n                    let values = p.arrayParameters.sort( (a, b) => a.position - b.position).map(ap => {\n                        return this.columnOrValue(ap.dataType, ap.datalinkColumn, ap.value);\n                    });\n                    return {name: this.describeParameterName(param), values: values};\n                }\n            } else {\n                return {name: this.describeParameterName(param), values: [{valid: false, error: 'Not Mapped', text: ''}]  };\n            }\n        });\n\n        let outputParams = this.transformItem.dexihFunctionParameters\n            .filter(\n                c => HubCache.parameterIsOutput(c));\n\n        this.outputParameters = functionOutputs.filter(c => c &&  !c.linkedName).map<ValidParameter>(param => {\n            let p = outputParams.find(c => c.name === param.parameterName);\n            if (p) {\n                if ((this.transform.transformType === eTransformType.Validation || this.transform.transformType === eTransformType.Filter )  &&\n                    (p.direction === eParameterDirection.ReturnValue || p.direction === eParameterDirection.ResultReturnValue)) {\n                    return null;\n                }\n                if (p.rank === 0 || p.datalinkColumn !== null) {\n                    let value = this.describeDatalinkColumn(p.dataType, p.datalinkColumn);\n                    return {name: this.describeParameterName(param), values: [value]};\n                } else {\n                    let values = p.arrayParameters.sort( (a, b) => a.position - b.position).map(ap => {\n                        return this.describeDatalinkColumn(ap.dataType, ap.datalinkColumn);\n                    });\n                    return {name: this.describeParameterName(param), values: values};\n                }\n            } else {\n                // return {name: param.name, values: [{valid: false, text: 'Not mapped'}]  };\n                return null;\n            }\n        }).filter(c => c !== null);\n\n        let linkedNames = Array.from(new Set(this.concat(functionInputs, functionOutputs).map(c => c &&  c.linkedName).filter(c => c)));\n        this.mapParameters = linkedNames.map(name => {\n            let parameters: ValidParameter[] = functionInputs.filter(c => c.linkedName === name).map(param => {\n                let p = inputParams.find(c => c.name === param.parameterName);\n                let values = p.arrayParameters.sort( (a, b) => a.position - b.position).map(ap => {\n                    return this.columnOrValue(ap.dataType, ap.datalinkColumn, ap.value);\n                });\n                return {name: this.describeParameterName(param), values: values};\n            });\n\n            let parameters2: ValidParameter[] = functionOutputs.filter(c => c.linkedName === name).map(param => {\n                let p = outputParams.find(c => c.name === param.parameterName);\n                let values = p.arrayParameters.sort( (a, b) => a.position - b.position).map(ap => {\n                    return this.describeDatalinkColumn(ap.dataType, ap.datalinkColumn);\n                });\n                return {name: this.describeParameterName(param), values: values};\n            });\n\n            return {name: name, parameters: this.concat(parameters, parameters2)};\n        });\n    }\n\n    private addCustomFunctionParameters() {\n\n        let inputParams = this.transformItem.dexihFunctionParameters\n            .filter(c =>\n                c.direction === eParameterDirection.Input ||\n                c.direction === eParameterDirection.ResultInput ||\n                c.direction === eParameterDirection.Join);\n\n        this.inputParameters = inputParams.map<ValidParameter>(p => {\n            if (p.rank === 0) {\n                let value = this.columnOrValue(p.dataType, p.datalinkColumn, p.value);\n                return { name: this.describeParameterName(p), values: [value] };\n            } else {\n                let values = p.arrayParameters.sort((a, b) => a.position - b.position).map(ap => {\n                    return this.columnOrValue(ap.dataType, ap.datalinkColumn, ap.value);\n                });\n                return { name: this.describeParameterName(p), values: values };\n            }\n        });\n\n        let outputParams = this.transformItem.dexihFunctionParameters\n            .filter(c => HubCache.parameterIsOutput(c));\n\n        this.outputParameters = outputParams.map<ValidParameter>(p => {\n            if (p.rank === 0) {\n                let value = this.describeDatalinkColumn(p.dataType, p.datalinkColumn);\n                return { name: this.describeParameterName(p), values: [value] };\n            } else {\n                let values = p.arrayParameters.sort((a, b) => a.position - b.position).map(ap => {\n                    return this.describeDatalinkColumn(ap.dataType, ap.datalinkColumn);\n                });\n                return { name: this.describeParameterName(p), values: values };\n            }\n        });\n    }\n\n    private addUnGroupParameters() {\n\n        let parameters = this.transformItem.dexihFunctionParameters;\n\n        let runTime = this.transform['runTime'];\n        let inputColumns = runTime.inputColumns;\n\n        let sourceColumn = <DexihDatalinkColumn> inputColumns.find(c => c.key === this.transformItem.sourceDatalinkColumn.key);\n\n        if (sourceColumn) {\n            this.outputParameters = parameters.map<ValidParameter>(p => {\n                if (p.datalinkColumn) {\n                    let find = sourceColumn.childColumns.find(c => c.key === p.datalinkColumn.key);\n                    if (find) {\n                        return {name: this.describeParameterName(p), values: [{valid: true, error: '', text: p.datalinkColumn.name}]};\n                    }\n                    return {name: this.describeParameterName(p),\n                        values: [{valid: false, error: '(Invalid column) ', text: p.datalinkColumn.name}]};\n                } else {\n                    return {name: this.describeParameterName(p), values: [{valid: false, error: '(No column)', text: ''}]};\n                }\n            });\n        }\n    }\n\n    private describeParameterName(param): string {\n        return param.name + ' (' + eTypeCode[param.dataType] + ')';\n    }\n\n    private describeDatalinkColumn(expectedDataType: eTypeCode, value: DexihDatalinkColumn): ValidValue {\n        if (!value) {\n            return { error: '(not mapped)', text: '', valid: false };\n        }\n\n        let runTime = this.transform['runTime'];\n        let inputColumns = runTime.inputColumns;\n        let nodeDatalinkColumn = this.transform.nodeDatalinkColumn ? this.transform.nodeDatalinkColumn : null;\n        let nodeDatalinkColumnKey = nodeDatalinkColumn ? nodeDatalinkColumn.key : null;\n\n        let returnValue: string = null;\n\n        let io = new InputOutputColumns();\n        let col = io.findValidColumn(value, nodeDatalinkColumnKey, inputColumns);\n        if (col) {\n            returnValue = (value.columnGroup ? ('(' + value.columnGroup + ')') : '') + value.logicalName;\n        }\n\n        if (!returnValue) {\n            runTime.transformColumns.forEach(column => {\n                if (!returnValue && column.key === value.key) {\n                    returnValue = value.logicalName;\n                }\n            });\n        }\n\n        if (!returnValue && this.transform.joinDatalinkTable) {\n            let joinTable = this.transform.joinDatalinkTable;\n            joinTable.dexihDatalinkColumns.forEach(column => {\n                if (!returnValue && column.key === value.key) {\n                    returnValue = '(' + joinTable.name + ') ' + value.logicalName;\n                }\n            });\n        }\n\n        if (returnValue) {\n            if (expectedDataType == null || expectedDataType === eTypeCode.Unknown || value.dataType === expectedDataType) {\n                return { text: returnValue, valid: true, error: '' }\n            } else {\n                return { text: returnValue, error: '(inconsistent datatype ' + eTypeCode[value.dataType] + ')', valid: false }\n            }\n        } else {\n            return { text: value.logicalName, error: '(Invalid column) ', valid: false }\n        }\n    }\n\n    private describeStaticValue(value: string): string {\n        if (value === ' ') {\n            return '<space>';\n        }\n        if (value === '') {\n            return '<blank>';\n        }\n        if (value == null) {\n            return '<null>';\n        }\n        return '\"' + value + '\"';\n    }\n}\n","export { PreviewDataComponent } from './preview-data.component';\n","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { HubCache, eMappingStatus,\n    MappingStatusInfo, impactMappingStatuses, lineageMappingStatuses } from '../../../hub.models';\nimport { eObjectUse, ColumnUsageNode, InputOutputColumns, eDatalinkObjectType } from '../../../hub.lineage.models';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { DexihDatalinkColumn, eTypeCode } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'input-column',\n    templateUrl: './input-column.component.html'\n})\nexport class InputColumnComponent implements OnInit, OnDestroy {\n    @Input() public column: DexihDatalinkColumn = null;\n    @Input() public datalinkTransformForm: FormGroup;\n\n    private _subscription: Subscription;\n\n    private hubCache: HubCache;\n    private datalinkForm: FormGroup;\n\n    eMappingStatus = eMappingStatus;\n    eTypeCode = eTypeCode;\n\n    mappingStatusInfoImpact: MappingStatusInfo;\n    mappingStatusInfoLineage: MappingStatusInfo;\n\n    childColumns: DexihDatalinkColumn[];\n\n    constructor(\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n                this.hubCache = result[0];\n                this.datalinkForm = result[1];\n\n                let datalinkTransform = this.datalinkTransformForm.value;\n\n                let columnUsage: ColumnUsageNode = new ColumnUsageNode(\n                    eDatalinkObjectType.Transform,\n                    eObjectUse.Target,\n                    this.datalinkForm.value,\n                    this.column,\n                    null,\n                    datalinkTransform,\n                    null,\n                    eMappingStatus.NotMapped,\n                    this.hubCache\n                );\n\n                let mappingStatusImpact = columnUsage.createDatalinkImpact(false);\n                this.mappingStatusInfoImpact = impactMappingStatuses.find(c => c.key === mappingStatusImpact);\n\n                let mappingStatusLineage = columnUsage.createDatalinkLineage(true);\n                this.mappingStatusInfoLineage = lineageMappingStatuses.find(c => c.key === mappingStatusLineage);\n\n                let io = new InputOutputColumns();\n                if (io.findColumn(this.column,\n                    datalinkTransform.nodeDatalinkColumn ? datalinkTransform.nodeDatalinkColumn.key : null)) {\n                    this.childColumns = this.column.childColumns;\n                }\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Input Column');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n\n}\n","<div class=\"list-group-item p-0 rounded-0\" dragZone zone=\"input-column\" [data]=\"column\" zone=\"input-column\" >\n    <div class=\"d-flex flex-row\">\n        <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoLineage.statusClass\" [title]=\"mappingStatusInfoLineage.name\"></i>\n\n        <a class=\"flex-fill input-group-text ellipsis-overflow rounded-0 border-0\" style=\"overflow:hidden; text-overflow :ellipsis;\" \n         [title]=\"column.logicalName + ' ' + eTypeCode[column.dataType]\" >\n            {{column.logicalName}}\n        </a>\n        <i class=\"input-group-text rounded-0  border-0 border-l1\" [ngClass]=\"mappingStatusInfoImpact.statusClass\" [title]=\"mappingStatusInfoImpact.name\"></i>\n    </div>\n</div>\n<div *ngIf=\"childColumns?.length > 0\" class=\"p-2\">\n    <input-column *ngFor=\"let childColumn of childColumns\" [column]=\"childColumn\" [datalinkTransformForm]=\"datalinkTransformForm\"></input-column>\n</div>","<dexih-invalid-form-details class=\"mr-1\" [control]=\"datalinkForm\"></dexih-invalid-form-details>\n<d-button-splitdropdown *ngIf=\"hubCache.canWrite\" [disabled]=\"!editDatalinkService.hubFormsService.hasChanged\" buttonClass=\"btn-primary\" iconClass=\"fa fa-cloud-download\" text=\"Save\" (buttonClick)=\"saveDatalink(false)\" class=\"mr-1\">\n    <li><a class=\"dropdown-item\" (click)=\"saveDatalink(false)\" title=\"Save in the hub\"><i class=\"fa  fa-cloud-download\"></i> Save</a></li>\n    <li><a class=\"dropdown-item\" (click)=\"editDatalinkService.hubFormsService.saveLocal()\" title=\"Export as a local file\"><i class=\"fa fa-floppy-o\"></i> Save as file</a></li>\n    <li><a class=\"dropdown-item\" (click)=\"saveDatalink(true)\" title=\"Save another version\"><i class=\"fa fa-plus-circle\"></i> Save As...</a></li>\n</d-button-splitdropdown>\n<d-button-dropdown class=\"mr-1\" *ngIf=\"hubCache.canWrite && datalinkForm?.controls.dexihDatalinkTargets.value.length > 0\" text=\"Actions\" iconClass=\"fa fa-bolt\" buttonClass=\"btn-primary\" [pullRight]=\"true\">\n    <a class=\"dropdown-item\" (click)=\"fixMappings()\" title=\"Attempt to fix mappings broken when removing/inserting transforms.\">Fix Mappings</a>\n    <a class=\"dropdown-item\" (click)=\"runDatalink(false, false)\" title=\"Run datalink, truncating the target table for each.\">Run</a>\n    <a class=\"dropdown-item\" (click)=\"runDatalink(true, true)\" title=\"Run datalink, truncating the target table for each.\">Run (with truncate)</a>\n    <a class=\"dropdown-item\" (click)=\"runDatalink(false, true)\" title=\"Run datalink, resetting the incremental (i.e. reload all source data rows) \">Run (reset incremental)</a>\n    <a class=\"dropdown-item\" (click)=\"preview(false)\" title=\"Preview the output of this datalink\">Preview Datalink</a>\n    <a class=\"dropdown-item\" (click)=\"preview(true)\" title=\"Preview the delta changes of this datalink\">Preview Datalink (changes)</a>\n    <a class=\"dropdown-item\" (click)=\"download()\" title=\"Download the output from this datalink\">Download Datalink Data</a>\n</d-button-dropdown>\n<cancel-button [formsService]=\"editDatalinkService.hubFormsService\"></cancel-button>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { BehaviorSubject, Subscription, combineLatest} from 'rxjs';\nimport { eUpdateStrategy, DownloadObject, eSourceType, eDownloadFormat, eDataObjectType } from '../../../../shared/shared.models';\nimport { CancelToken } from '../../../../+auth/auth.models';\n\n@Component({\n    selector: 'datalink-save-button',\n    templateUrl: './datalink-edit-save-button.component.html'\n})\n\nexport class DatalinkEditSaveButtonComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n    private cancelToken: CancelToken = new CancelToken();\n\n    datalinkForm: FormGroup;\n    \n\n    hubCache: HubCache;\n    eUpdateStrategy = eUpdateStrategy;\n\n    constructor(\n        public hubService: HubService,\n        public editDatalinkService: DatalinkEditService,\n        public authService: AuthService,\n        public router: Router,\n        public route: ActivatedRoute\n    ) { }\n\n    ngOnInit() {\n\n        try {\n            this._subscription = combineLatest(\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                this.datalinkForm = result[0];\n                this.hubCache = result[1];\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'datalink save button');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    async saveDatalink(saveAs = false) {\n        this.editDatalinkService.savingDatalink.next(true);\n\n        if (this.datalinkForm.controls.dexihDatalinkTargets.dirty) {\n            let targets = <FormArray>this.datalinkForm.controls.dexihDatalinkTargets;\n            let tables = targets.controls.map(c => {\n                let target = <FormGroup>c;\n                let table = target.controls.table;\n                if (table) {\n                    return table;\n                }\n            });\n\n            let tableNames = tables.filter(c => c.value.key > 0 && c.dirty).map(c => c.value.name).join(', ');\n\n            let doSave = async () => {\n                for (let t of targets.controls) {\n                    if (t.dirty) {\n                        let target = <FormGroup>t;\n                        let savedTable = await this.hubService.saveTables([target.controls.table.value]);\n                        target.setControl('table', this.editDatalinkService.hubFormsService.tableForm(savedTable[0]));\n                        target.controls.tableKey.setValue(savedTable[0].key);\n                    }\n                }\n\n                this.editDatalinkService.hubFormsService.save(false, saveAs);\n                this.editDatalinkService.savingDatalink.next(false);\n            }\n\n            // if no tables with key > 0 they are all new, so no need to prompt.\n            if (tableNames.length === 0) {\n                await doSave();\n            } else {\n            this.authService\n                .confirmDialog(`Save Target Tables?`, `The existing target table(s)\n                ${tableNames} have changed.\n                This is a shared object, and may impact other dependencies if changed.\n                Note, this will only save the metadata, use the 'Create Table' function to overwrite the physical table.`)\n                .then(async (confirm) => {\n                    if (confirm) {\n                        await doSave();\n                    }\n                }).catch(() => this.editDatalinkService.savingDatalink.next(false))\n            }\n        } else {\n            this.editDatalinkService.hubFormsService.save(false, saveAs);\n            this.editDatalinkService.savingDatalink.next(false);\n        }\n    }\n\n    preview() {\n        const transformsArray = <FormArray>this.datalinkForm.controls.dexihDatalinkTransforms;\n        let transforms = transformsArray.controls\n//            .filter(c => c.value.transform.allowUserConfig)\n            .sort((a, b) => b.value.position - a.value.position);\n\n        if (transforms.length > 0) {\n            this.router.navigate(['transforms/transform', transforms[0].value.key,\n            'preview-transform-data'], { relativeTo: this.route });\n        }\n    }\n\n    previewChanges() {\n        if (this.editDatalinkService.hubFormsService.hasChanged) {\n            this.authService.confirmDialog('Save Datalink', 'The datalink must be saved before previewing delta changes.  Would you like to save now?')\n                .then(confirm => {\n                    if (confirm) {\n                        this.saveDatalink();\n                        this.editDatalinkService.savingDatalink.toPromise().then(value => {\n                            if (value) {\n                                this.router.navigate(['datalink-preview', this.datalinkForm.controls.key.value, true]);\n                            }\n                        });\n                    }\n                });\n        } else {\n            this.router.navigate(['datalink-preview', this.datalinkForm.controls.key.value, true]);\n        }\n    }\n\n    download() {\n        if (this.datalinkForm.dirty) {\n            this.authService.confirmDialog\n                ('Save Datalink',\n                    'The datalink must be saved before a data download task can be started.  Do you want to save the datalink?')\n                .then(saveDatalink => {\n                    if (saveDatalink) {\n                        this.saveDatalink();\n                        this.doDownload();\n                    }\n                })\n        } else {\n            this.doDownload();\n        }\n    }\n\n    doDownload() {\n        let downloadItems = new Array<DownloadObject>();\n        let downloadObject = new DownloadObject();\n        downloadObject.objectKey = this.datalinkForm.controls.key.value;\n        downloadObject.objectType = eDataObjectType.Datalink;\n        downloadItems.push(downloadObject);\n        this.hubService.downloadData(downloadItems, true, eDownloadFormat.Csv, this.cancelToken)\n    }\n\n    cancel() {\n        this.editDatalinkService.hubFormsService.cancel();\n    }\n\n    runDatalink(truncateTarget: boolean, resetIncremental: boolean) {\n        if (this.editDatalinkService.hubFormsService.hasChanged) {\n            this.authService.confirmDialog('Save Datalink', 'The datalink must be saved before running.  Would you like to save now?')\n                .then(confirm => {\n                    if (confirm) {\n                        this.saveDatalink();\n                        this.editDatalinkService.savingDatalink.toPromise().then(value => {\n                            if (value) {\n                                this.hubService\n                                    .runDatalinks([this.datalinkForm.controls.key.value], truncateTarget, resetIncremental\n                                        , null, null, null, this.cancelToken);\n                            }\n                        });\n                    }\n                });\n        } else {\n            this.hubService.runDatalinks([this.datalinkForm.controls.key.value], truncateTarget, resetIncremental,\n                null, null, null, this.cancelToken);\n        }\n    }\n\n    fixMappings() {\n        this.editDatalinkService.fixMappings(this.datalinkForm);\n    }\n}\n\n","export * from './input-parameter.component';\nexport * from './output-parameter.component';\n","export * from './custom-function-edit.component';\n","import { Component, OnInit, OnChanges, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HubCache, deltaTypes, securityFlags, } from '../../../hub.models';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubService } from '../../../hub.service';\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\nimport { Subscription ,  combineLatest} from 'rxjs';\nimport { HubFormsService } from '../../../hub.forms.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { TypeCodes } from '../../../hub.remote.models';\nimport { eTypeCode, eParameterDirection, DexihDatalinkColumn } from '../../../../shared/shared.models';\n\n@Component({\n    selector: 'datalink-column-edit',\n    templateUrl: './datalink-column-edit.component.html',\n})\nexport class DatalinkColumnEditComponent implements OnInit, OnChanges, OnDestroy {\n    private _subscription: Subscription;\n    private _saveSubscription: Subscription;\n\n    private hubCache: HubCache;\n    public pageTitle: string;\n    public action: string;\n\n    public datalinkColumnKey: number;\n\n    public errorMessage: string;\n    public successMessage: string;\n    public savingTable: boolean;\n\n    public newColumnForm: FormGroup;\n    private sourceDatalinkTableForm: FormGroup;\n\n    eTypeCode = eTypeCode;\n    typeCodes = TypeCodes;\n    deltaTypes = deltaTypes;\n    securityFlags = securityFlags;\n\n    public columnFormService: HubFormsService;\n    private originalColumnForm: FormGroup;\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        fb: FormBuilder,\n        private route: ActivatedRoute,\n    ) {\n\n        // create a separate formService instance to manage the copied form\n        this.columnFormService = new HubFormsService(fb, hubService, authService);\n    }\n\n    ngOnInit() {\n\n        try {\n            this._subscription = combineLatest(\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                this.pageTitle = result[0]['pageTitle'];\n                this.datalinkColumnKey = + result[0]['datalinkColumnKey'];\n                this.hubCache = result[1];\n\n                this.sourceDatalinkTableForm = <FormGroup>this.editDatalinkService.hubFormsService.currentForm\n                .controls.sourceDatalinkTable;\n\n                this.initializeForm();\n            });\n\n            if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n            this._saveSubscription = this.editDatalinkService.savingDatalink.subscribe(value => {\n                if(value) {\n                    this.applyExit();\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink column edit');\n        }\n    }\n\n    ngOnChanges() {\n        if (this.hubCache) {\n            this.initializeForm();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n    }\n\n\n\n    initializeForm() {\n        let columnForm: FormGroup;\n\n        if (this.datalinkColumnKey) {\n            this.originalColumnForm = this.editDatalinkService.findColumn(this.datalinkColumnKey);\n            if (!this.originalColumnForm) {\n                this.authService.informationDialog('Cannot Edit', 'The selected column could not be edited.').then(() => {\n                    this.authService.navigateUp();\n                });\n\n                return;\n            }\n            columnForm = this.columnFormService.datalinkTableColumn(null, this.originalColumnForm.value);\n        } else {\n            let column = new DexihDatalinkColumn();\n            column.key = this.hubCache.getNextSequence();\n            column.datalinkTableKey = this.sourceDatalinkTableForm.controls.key.value;\n            let columnsArray = <DexihDatalinkColumn[]>this.sourceDatalinkTableForm.controls.dexihDatalinkColumns.value;\n            let maxPos = 1;\n            columnsArray.forEach(col => {\n                if (col.position > maxPos) { maxPos = col.position; }\n            })\n            column.position = maxPos + 1;\n            columnForm = this.columnFormService.datalinkTableColumn(columnsArray, column);\n        }\n        this.columnFormService.startForm(columnForm);\n    }\n\n    cancel() {\n        this.authService.navigateUp();\n    }\n\n    applyExit() {\n        const columnForm = this.columnFormService.currentForm;\n\n        // if no originalColumn, then add it to the source columns.\n        if (!this.originalColumnForm) {\n            let columnsArray = <FormArray>this.sourceDatalinkTableForm.controls.dexihDatalinkColumns;\n            columnsArray.push(columnForm);\n        } else {\n            this.originalColumnForm.setValue(columnForm.value);\n        }\n\n        this.sourceDatalinkTableForm.markAsDirty();\n        this.authService.navigateUp();\n    }\n}\n","<div *ngIf=\"columnFormService?.currentForm\">\n    <div class=\"list-group-item list-group-item-info rounded-0\">\n        <div class=\"d-flex flex-row\">\n            <h5>Edit Column </h5>\n            <div class=\"ml-auto\">\n                <dexih-invalid-form-details (click)=\"columnFormService.showErrors()\"\n                    [control]=\"columnFormService.currentForm\" class=\"mr-1\"></dexih-invalid-form-details>\n                <d-button-apply [disabled]=\"columnFormService.currentForm.pristine\"\n                    (click)=\"!columnFormService.currentForm.pristine && applyExit()\" class=\"mr-1\"></d-button-apply>\n                <d-button-cancel (click)=\"cancel()\"></d-button-cancel>\n            </div>\n        </div>\n    </div>\n\n\n    <div class=\"container  mt-3 mb-3\">\n        <column-edit-base [columnFormService]=\"columnFormService\" [detailedView]=\"true\"></column-edit-base>\n    </div>\n\n    <table-edit-columns *ngIf=\"columnFormService.currentForm.controls.dataType.value === eTypeCode.Node\"\n        [parentColumnForm]=\"columnFormService.currentForm\"></table-edit-columns>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'dexih-datalink-run-plan',\n    templateUrl: './datalink-run-plan.component.html'\n})\nexport class DatalinkRunPlanComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n\n    public pageTitle: string;\n    public message: string;\n\n    private _subscription: Subscription;\n\n    public allowSave = false;\n\n    constructor(\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n                this.pageTitle = result[0]['pageTitle'];\n                this.datalinkForm = result[3];\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Run Plan');\n        }\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n}\n","<div class=\"no-padding\">\n    <div class=\"widget-body\">\n\n        <div section class=\"widget-body-toolbar\">\n\n            <div class=\"form-row\">\n                <div class=\"col-sm-6\">\n                    <h4>Run Plan</h4>\n                </div>\n                <div class=\"col-sm-6 text-right\">\n                </div>\n            </div>\n        </div>\n\n        NOT COMPLETED\n\n    </div>\n</div>","export * from './unGroup-edit.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup } from '@angular/forms';\nimport { eDataObjectType } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'datalink-preview-data',\n    templateUrl: './preview-data.component.html'\n})\nexport class PreviewDataComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n\n    public datalinkForm: FormGroup;\n    public datalinkTransformForm: FormGroup;\n\n    private hubCache: HubCache;\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    public eDataObjectType = eDataObjectType;\n\n    public error: string;\n\n    datalinkTransformKey: number;\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.hubService.getRemoteAgentObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n                this.datalinkForm = result[4];\n\n                this.action = data['action'];\n                this.pageTitle = data['pageTitle'];\n\n                // load the cache first\n                if (this.hubCache.isLoaded()) {\n                    // get the hub key from the route data, and update the service.\n                    this.datalinkTransformKey = + params['datalinkTransformKey'];\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Preview Transform Data');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n}\n","<d-widget-section title=\"Preview Transform Data\" [showExpandButton]=\"true\" [padding]=\"false\">\n    <ng-template #sectionHeader>\n        <d-button-close (click)=\"close()\"></d-button-close>\n    </ng-template>\n    <preview-data [datalink]='datalinkForm?.value' [datalinkTransformKey]=\"datalinkTransformKey\" [viewSource]='eDataObjectType.Datalink'></preview-data>\n</d-widget-section>\n","export { OutputColumnComponent } from './output-column.component';\nexport { OutputColumnsComponent } from './output-columns.component';\n","<d-widget-section title='Select a Transform' [padding]=\"true\">\n    <div class=\"d-flex flex-wrap justify-content-around\">\n            <a *ngFor=\"let transform of transforms\" (click)=\"insert(transform.transformReference)\" href=\"javascript:void(0)\" \n            class=\"btn btn-outline-primary p-0 m-3\" style=\"width:400px\">\n                <div class=\"d-flex h-100\">\n                    <div class=\"border-right border-primary p-3\" style=\"min-width:140px\">\n                        <div class=\"d-block\">\n                            {{transform.transformReference.name}}\n                        </div>\n                        <i class=\"fa fa-4x\" [ngClass]=\"transform.icon\"></i>\n                    </div>\n                    <div class=\"p-3 text-left\">\n                        {{transform.transformReference.description}}\n                    </div>\n                </div>\n            </a>\n    </div>\n</d-widget-section>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { TransformReference, transformTypes } from '../../../hub.remote.models';\n\n\n@Component({\n    selector: 'datalink-edit-new-transform',\n    templateUrl: './datalink-edit-new-transform.component.html'\n})\n\nexport class DatalinkEditNewTransformComponent implements OnInit, OnDestroy {\n\n    private _subscription: Subscription;\n\n    public transforms: Array<{transformReference: TransformReference, icon: string}>;\n    public position: number;\n\n    constructor(\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        private authService: AuthService,\n        private route: ActivatedRoute,\n        private router: Router\n\n    ) { }\n\n    ngOnInit() {\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n            ).subscribe(async result => {\n                this.transforms = [];\n                let userConfigTransforms = await this.hubService.GetUserConfigTransformReference();\n\n                userConfigTransforms.forEach(transform => {\n                    let transformType = transformTypes.find(c => c.key === transform.transformType);\n\n                    let icon = '';\n                    if (transformType) {\n                        icon = transformType.icon;\n                    }\n\n                    this.transforms.push({transformReference: transform, icon: icon })\n                })\n\n                this.position = + result[1]['position'];\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'New Transform');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n\n    insert(transform: TransformReference) {\n        let newDatalinkTransformForm = this.editDatalinkService.insertDatalinkTransform(this.position, transform);\n        this.router.navigate(['transform', newDatalinkTransformForm.value.key], { relativeTo: this.route.parent });\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n}\n"]}