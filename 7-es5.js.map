{"version":3,"sources":["webpack:///src/app/+hub/datalink/datalink-edit/custom-function-edit/custom-function-edit.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/custom-function-edit/custom-function-edit.component.html","webpack:///src/app/+hub/datalink/datalink-edit/custom-function-edit/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/datalink-column-edit/datalink-column-edit.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/datalink-column-edit/datalink-column-edit.component.html","webpack:///src/app/+hub/datalink/datalink-edit/datalink-edit-guard.ts","webpack:///src/app/+hub/datalink/datalink-edit/datalink-edit.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/datalink-edit.component.html","webpack:///src/app/+hub/datalink/datalink-edit/datalink-edit.module.ts","webpack:///src/app/+hub/datalink/datalink-edit/datalink-edit.routing.ts","webpack:///src/app/+hub/datalink/datalink-edit/datalink-edit.service.ts","webpack:///src/app/+hub/datalink/datalink-edit/datalink-table/datalink-table.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/datalink-table/datalink-table.component.html","webpack:///src/app/+hub/datalink/datalink-edit/input-columns/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/input-columns/input-column.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/input-columns/input-column.component.html","webpack:///src/app/+hub/datalink/datalink-edit/input-columns/input-columns.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/input-columns/input-columns.component.html","webpack:///src/app/+hub/datalink/datalink-edit/join-columns/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/join-columns/join-column.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/join-columns/join-column.component.html","webpack:///src/app/+hub/datalink/datalink-edit/join-columns/join-columns.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/join-columns/join-columns.component.html","webpack:///src/app/+hub/datalink/datalink-edit/mapping-edit/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/mapping-edit/mapping-edit.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/mapping-edit/mapping-edit.component.html","webpack:///src/app/+hub/datalink/datalink-edit/mapping/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/mapping/mapping-item.component.html","webpack:///src/app/+hub/datalink/datalink-edit/mapping/mapping-item.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/mapping/mapping.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/mapping/mapping.component.html","webpack:///src/app/+hub/datalink/datalink-edit/new-transform/datalink-edit-new-transform.component.html","webpack:///src/app/+hub/datalink/datalink-edit/new-transform/datalink-edit-new-transform.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/output-columns/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/output-columns/output-column.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/output-columns/output-column.component.html","webpack:///src/app/+hub/datalink/datalink-edit/output-columns/output-columns.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/output-columns/output-columns.component.html","webpack:///src/app/+hub/datalink/datalink-edit/parameters/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/parameters/input-parameter.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/parameters/input-parameter.component.html","webpack:///src/app/+hub/datalink/datalink-edit/parameters/output-parameter.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/parameters/output-parameter.component.html","webpack:///src/app/+hub/datalink/datalink-edit/preview-data/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/preview-data/preview-data.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/preview-data/preview-data.component.html","webpack:///src/app/+hub/datalink/datalink-edit/preview-table/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/preview-table/preview-table.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/preview-table/preview-table.component.html","webpack:///src/app/+hub/datalink/datalink-edit/profile-rules/profile-rules.component.html","webpack:///src/app/+hub/datalink/datalink-edit/profile-rules/profile-rules.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/properties/datalink-edit-properties.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/properties/datalink-edit-properties.component.html","webpack:///src/app/+hub/datalink/datalink-edit/run-plan/datalink-run-plan.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/run-plan/datalink-run-plan.component.html","webpack:///src/app/+hub/datalink/datalink-edit/save-button/datalink-edit-save-button.component.html","webpack:///src/app/+hub/datalink/datalink-edit/save-button/datalink-edit-save-button.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/source-table/datalink-edit-source-table.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/source-table/datalink-edit-source-table.component.html","webpack:///src/app/+hub/datalink/datalink-edit/standard-function-edit/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/standard-function-edit/standard-function-edit.component.html","webpack:///src/app/+hub/datalink/datalink-edit/standard-function-edit/standard-function-edit.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/target-columns/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/target-columns/target-column.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/target-columns/target-column.component.html","webpack:///src/app/+hub/datalink/datalink-edit/target-columns/target-columns.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/target-columns/target-columns.component.html","webpack:///src/app/+hub/datalink/datalink-edit/target-table-column/target-table-column.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/target-table-column/target-table-column.component.html","webpack:///src/app/+hub/datalink/datalink-edit/target/datalink-edit-target-table.component.html","webpack:///src/app/+hub/datalink/datalink-edit/target/datalink-edit-target-table.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/target/datalink-edit-target.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/target/datalink-edit-target.component.html","webpack:///src/app/+hub/datalink/datalink-edit/transform-step/transform-step.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/transform-step/transform-step.component.html","webpack:///src/app/+hub/datalink/datalink-edit/transform-table-edit/transform-table-edit.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/transform-table-edit/transform-table-edit.component.html","webpack:///src/app/+hub/datalink/datalink-edit/transform/datalink-edit-transform.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/transform/datalink-edit-transform.component.html","webpack:///src/app/+hub/datalink/datalink-edit/unGroup-edit/index.ts","webpack:///src/app/+hub/datalink/datalink-edit/unGroup-edit/unGroup-edit.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/unGroup-edit/unGroup-edit.component.html","webpack:///src/app/+hub/datalink/datalink-edit/validation/datalink-edit-validation.component.ts","webpack:///src/app/+hub/datalink/datalink-edit/validation/datalink-edit-validation.component.html"],"names":["CustomFunctionEditComponent","hubService","authService","editDatalinkService","route","router","location","cancelToken","eFunctionType","eParameterDirection","eInvalidActionItems","filter","c","key","eErrorActionItems","inputParameters","outputParameters","inputParameterValues","outputParameterValues","_subscription","data","params","getHubCacheObservable","hubFormsService","getCurrentFormObservable","getRemoteLibrariesObservable","subscribe","result","pageTitle","hubCache","datalinkForm","functionType","Validate","datalinkTransformForm","getValidationTransform","datalinkTransformKey","value","getDatalinkTransform","datalinkTransformItemKey","nodeDatalinkColumn","controls","nodeDatalinkColumnKey","io","inputColumns","runTime","getAvailableColumns","outputColumns","transformColumns","datalinkTargets","dexihDatalinkTargets","datalinkTransformItemForm","getDatalinkTransformItem","newDatalinkTransformItemForm","datalinkDatalinkTransformItemFormGroup","navigateUp","newItem","transformItemType","CustomFunction","returnParameter","Condition","JoinCondition","dataType","Boolean","String","name","direction","ReturnValue","rank","position","datalinkColumn","isValid","funcParam","functionParameter","dexihFunctionParameters","Array","push","parameters","setParameters","_parametersSubscription","unsubscribe","valueChanges","p","_saveSubscription","savingDatalink","apply","e","addHubClientErrorMessage","_returnParameterSubscription","cancel","Promise","resolve","pristine","confirmDialog","then","confirm","reason","sort","a","b","Input","length","Output","returnParameterForm","find","parameter","newParameter","oldParameter","parametersArray","newParameterForm","datalinkFunctionParametersFormGroup","forEach","index","setValue","indexOf","removeAt","insertDatalinkTransformItem","markAsPristine","downloadCustomFunction","testCustomFunction","addHubSuccessMessage","returnParameterValue","addHubMessage","selector","templateUrl","columnFormService","DatalinkColumnEditComponent","fb","eTypeCode","typeCodes","deltaTypes","securityFlags","datalinkColumnKey","sourceDatalinkTableForm","currentForm","sourceDatalinkTable","initializeForm","applyExit","columnsArray","dexihDatalinkColumns","column","transformForms","dexihDatalinkTransforms","t","items","dexihDatalinkTransformItems","i","itemForm","targetDatalinkColumn","parameterIsOutput","arrayParameters","columnForm","originalColumnForm","findColumn","informationDialog","datalinkTableColumn","getNextSequence","datalinkTableKey","maxPos","col","startForm","markAsDirty","DatalinkEditGuard","component","canDeactivate","DatalinkEditComponent","logger","logCount","eSourceType","datalinkTransforms","eTransformWriterMethod","isLoaded","showPage","showPageMessage","source","routerState","root","snapshot","firstChild","help","LogC","Trace","events","event","getHelp","action","status","Loaded","init","hasChanged","load","ngOnInit","_datalinkFormSubscription","_transformsChange","_sourceChange","ngOnDestroy","datalinkKey","Warning","addHubErrorMessage","datalink","originalDatalink","hub","dexihDatalinks","d","copyDatalink","CopyDatalink","datalinkType","Query","sourceType","Table","sourceTableKey","reBuildDatalinkTable","refreshTransforms","refreshSource","history","pushState","newUrl","window","pathname","replace","navigateByUrl","$event","returnValue","validationTransform","enableValidation","navigate","relativeTo","disableValidation","description","Datalink","sourceDatalinkKey","Rows","transformsArray","transforms","transformType","Validation","Profile","map","transform","type","icon","getTransformName","invalid","datalinkTransform","deleteDatalinkTransform","save","styleUrls","unloadNotification","DatalinkEditModule","ngModule","providers","imports","declarations","exports","standardFunctionRoutes","path","customFunctionRoutes","mappingEditRoutes","sourceTableRoutes","pathMatch","loadChildren","m","TableEditModule","targetRoutes","children","validationRoutes","datalinkEditRoutes","redirectTo","routes","navigateSkip","Routing","forChild","DatalinkEditService","showAllErrors","_hubCache","getRemoteLibrariesPromise","remoteLibraries","asObservable","insertDatalinkTransform","datalinkTransformItems","datalinkTransformItem","joinColumns","joinDatalinkTable","nodeColumns","getNodeColumns","fixMapping","joinSortDatalinkColumn","item","sourceDatalinkColumn","joinDatalinkColumn","filterDatalinkColumn","Join","arrayParameter","columns","nodes","Node","childColumns","concat","findIndex","inputColumn","columnGroup","Filter","Mapping","Map","Group","Aggregate","Series","Sort","Lookup","Delta","variables","dexihHubVariables","previousGroup","columnGroups","cols","group","datalinkTransformItemsArray","Math","max","o","form","currentIndex","fixMappings","datalinkTargetKey","newDatalinkTransform","minKey","dt","transformAssemblyName","transformClassName","passThroughColumns","Concatenate","seriesItem","datalinkTransformFormGroup","resetDatalinkTransformPositions","GetUserConfigTransformReference","userConfigTransforms","transformReference","getDatalinkValue","cache","hubPostRemote","hubKey","remoteAgentId","getCurrentRemoteAgentId","datalinkTable","confirm2","doRebuildDatalinkTable","sourceTable","getTable","mergeDatalinkColumns","dexihTableColumns","buildInputOutput","datalinkColumns","rowDatalinkColumn","logicalName","Int32","isMandatory","groupName","newColumns","existingColumns","Object","keys","DatalinkTableComponent","datalinkEditService","sourceTypes","connectionTables","datalinks","isVersioned","errors","getFormErrorMessages","datalinkTableForm","subscribeDatalinkChanges","getConnectionTables","updateIsVersioned","table","_datalinkTableSubscription","refreshColumns","rowsEndAt","rowsStartAt","rowsIncrement","tableColumnsForm","InputColumnComponent","eMappingStatus","columnUsage","Transform","Target","NotMapped","mappingStatusImpact","createDatalinkImpact","mappingStatusInfoImpact","mappingStatusLineage","createDatalinkLineage","mappingStatusInfoLineage","InputColumnsComponent","_inputColumnsSubscribe","getColumnGroups","JoinColumnComponent","inputTables","inputJoinDrop","_hubCacheSubscription","lineageMappingStatus","impactMappingStatus","JoinColumnsComponent","eTransformType","updateTableData","_changesSubscription","joinTable","joinColumn","emit","MappingEditComponent","eTransformItemType","showInput","showOutput","eAggregate","eAggregateItems","compare","eCompare","sortDirections","getVariables","JoinPair","Column","JoinNode","GroupNode","FilterPair","AggregatePair","outputTables","target","filterValue","sourceValue","getErrors","_formChangesObserve","statusChanges","targetErrors","getErrorMessage","sourceErrors","joinErrors","current","newColumn","getHubCache","sourceColumn","copyDatalinkColumn","ValidValue","ValidParameter","ValidMapping","MappingItemComponent","updateMapping","transformItem","itemType","BuiltInFunction","UnGroup","functionClassName","GetFunctionReference","func","label","addBuiltInFunctionParameters","error","functionMethodName","customFunctionKey","dexihCustomFunctions","addCustomFunctionParameters","aggregate","sortDirection","addUnGroupParameters","useSource","columnOrValue","useTarget","describeDatalinkColumn","useJoin","useFilter","filterCompare","IsEqual","expectedDataType","text","describeStaticValue","valid","array","args","arg","functionInputs","resultInputParameters","functionOutputs","returnParameters","resultOutputParameters","resultReturnParameters","inputParams","ResultInput","linkedName","param","parameterName","describeParameterName","values","ap","outputParams","allowCondition","ResultReturnValue","linkedNames","from","Set","mapParameters","parameters2","findValidColumn","MappingComponent","allowStandard","allowMapping","allowAggregate","allowRow","allowValidation","allowOutput","allowGroup","allowJoin","allowSort","allowSeries","allowJoinNode","addMapping","removeMapping","onColumnDrop","_tableData","tableData","getFunctionType","inputDateColumns","DateTime","Date","filteredItems","ColumnPair","functionItem","next","getItemFormGroup","parent","deleteSelected","deleteDatalinkTransformItem","existingItems","outputColumn","childColumn","createMapping","validFrom","deltaType","ValidFromDate","validTo","ValidToDate","GreaterThanEqual","LessThan","editMapping","datalinkItemSortChange","newOutputDrop","title","mappingTable","DatalinkEditNewTransformComponent","newDatalinkTransformForm","OutputColumnComponent","inputOutputDrop","refreshStatus","AutoGenerate","Mapped","MappedToNothing","OutputColumnsComponent","allowMappingOutputs","_outputColumnsSubscribe","InputValues","InputParameterComponent","allowDataTypeSelect","allowNameSelect","allowAdd","allowRemove","inputParameterForms","updateParameterName","outputParameterForms","addParameter","removeParameter","eBasicType","inputColumnGroups","inputs","ignoreChanges","tables","inputParameter","undefined","staticValue","textItems","toString","listOfValues","updateItems","inputParameterSubscription","datalinkColumnSubscription","input","OutputParameterComponent","outputParameterForm","_datalinkColumnSubscription","_parameterSubscription","_dataTypeSubscription","allowDbNull","updateNewColumn","add","remove","PreviewDataComponent","eDataObjectType","getRemoteAgentObservable","PreviewTableComponent","tableKey","DatalinkEditProfileRulesComponent","selectedProfileRules","format","dexihDatalinkProfiles","GetFunctionsByType","profileRules","profile","profileRuleForm","functionAssemblyName","detailedResults","profiles","profileFormGroup","profileRule","datalinkProfileFormGroup","updateProfileRules","DatalinkEditPropertiesComponent","eConnectionPurpose","eDatalinkTypeItems","eAlertLevelItems","eAlertLevel","DatalinkRunPlanComponent","allowSave","DatalinkEditSaveButtonComponent","eUpdateStrategy","saveAs","dirty","targets","tableNames","join","doSave","saveTables","savedTable","setControl","tableForm","saveDatalink","toPromise","doDownload","downloadItems","downloadObject","objectKey","objectType","downloadData","Csv","truncateTarget","resetIncremental","runDatalinks","DatalinkEditSourceTableComponent","updateData","_sourceSubscription","SourceTable","Source","PassThroughMap","lineage","mappingStatus","statusClass","columnData","columnStatus","dataTypeToString","isIncrementalUpdate","securityFlag","isInput","columnSortChange","editColumn","ArrayParameter","parameterItems","inputArray","ArrayParameterItem","inputParameterForm","inputItems","outputItems","StandardFunctionEditComponent","invalidActions","functionCache","eGenericType","allowReturn","isJoin","functions","transformFunctionType","useCustomFunction","selectCustomFunction","selectedFunction","selectFunction","functionCategories","category","filteredFunctions","customFunctions","selectedCustomFunction","_functionSubscription","inputParameterControls","outputParameterControls","addArrayParameter","resetItems","genericTypeCode","genericTypeDefault","genericType","Numeric","Decimal","All","isNumeric","isString","None","existingParameters","ResultOutput","refreshParameters","existingValue","isGeneric","defaultValue","dexihCustomFunctionParameters","returnType","newParameterForm2","parentParameter","parentParameterForm","createArrayParameter","datalinkFunctionArrayParametersFormGroup","arrayForm","insert","parameterForm","splice","clearArray","isLabel","addAllColumns","inputArrayForm","j","importFunctionMappings","paramValue","TargetColumnComponent","TargetTable","TargetColumnsComponent","TargetTableColumnComponent","formsService","_currentFormSubscription","targetKey","columnKey","targetForm","columnUpdated","DatalinkEditTargetTableComponent","eDeltaType","updateStrategies","loadStrategies","showTableProperties","showColumn","ignoreUpdateTable","newTable","showBulkEdit","canExit","tooltip","_missingColumnsData","missingColumnsData","tableFormService","ioColumns","getDatalinkOutputColumns","originalTargetTableForm","targetTableForm","datalinkTargetFormGroup","managedConnections","getManagedConnections","resetSubscription","_loadStrategySubscription","_tableFormSubscription","addNodeColumns","validation","columnValidation","getColumnValidation","columnValidationKey","columnValidationClass","columnValidationTooltip","validColumns","missingColumnData","datalinkColumnStatus","tableColumns","missingColumn","assign","resetColumnKeys","positions","tableColumn","addMissing","connection","getConnection","connectionKey","importTables","returnTable","useLogical","defaultTableLogicalName","schema","createTables","IgnoreFormChange","control","savedTables","DatalinkEditTargetComponent","targetTableColumns","updateTargets","deleteDatalinkTarget","onDelete","TransformStepComponent","showArrow","showDelete","isLast","routerLinkBefore","routerLinkAfter","routerLinkCurrent","routerLinkPreview","TransformTableEditComponent","canEdit","_columnData","transformTableForm","transformTable","updateColumnData","updateDate","columnIndex","close","DatalinkEditTransformComponent","showName","showDescription","eDuplicateStrategyItems","eJoinNotFoundStrategyItems","eJoinStrategyItems","eSeriesGrain","seriesGrains","allowNode","nodeName","formErrors","_transformsArraySubscription","tmpDatalinkTransformForm","seriesForm","nodeType","node","nodeItem","Ascending","Sum","UnGroupEditComponent","_nodeSubscription","DatalinkEditValidationComponent"],"mappings":"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","file":"7-es5.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubCache, InvalidActions } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription ,  Observable, combineLatest} from 'rxjs';\nimport { Location } from '@angular/common';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { FormGroup, FormArray, AbstractControl } from '@angular/forms';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { eFunctionType, eParameterDirection, DexihDatalinkColumn, DexihDatalinkTransformItem,\n  eTransformItemType, eTypeCode, DexihFunctionParameter, eErrorActionItems, eInvalidActionItems, FunctionParameter,\n  DexihDatalinkTarget } from '../../../../shared/shared.models';\nimport { CancelToken } from '../../../../+auth/auth.models';\n\n@Component({\n\n  selector: 'dexih-custom-function-edit',\n  templateUrl: './custom-function-edit.component.html'\n})\nexport class CustomFunctionEditComponent implements OnInit, OnDestroy {\n  public hubCache: HubCache;\n\n  public pageTitle: string;\n\n  public cancelToken: CancelToken = new CancelToken();\n\n  private _subscription: Subscription;\n  private _returnParameterSubscription: Subscription;\n  private _parametersSubscription: Subscription;\n  private _saveSubscription: Subscription;\n\n  eFunctionType = eFunctionType;\n  eParameterDirection = eParameterDirection;\n  functionType: eFunctionType;\n\n  eInvalidActionItems = eInvalidActionItems.filter(c => c.key > 0);\n  eErrorActionItems = eErrorActionItems.filter(c => c.key > 0);\n\n  datalinkTransformItemKey: number;\n  datalinkKey: number;\n  datalinkTransformKey: number;\n\n  datalinkForm: FormGroup;\n  datalinkTransformForm: FormGroup;\n  datalinkTransformItemForm: FormGroup;\n  returnParameterForm: FormGroup;\n\n  newDatalinkTransformItemForm: FormGroup;\n\n  parameters: FormArray;\n  inputParameters: AbstractControl[] = [];\n  outputParameters: AbstractControl[] = [];\n\n  inputParameterValues = [];\n  outputParameterValues = [];\n  returnParameterValue;\n\n\n  inputColumns: Array<DexihDatalinkColumn>;\n  outputColumns: Array<DexihDatalinkColumn>;\n  datalinkTargets: Array<DexihDatalinkTarget>;\n\n\n  constructor(\n    private hubService: HubService,\n    private authService: AuthService,\n    private editDatalinkService: DatalinkEditService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n          this.route.data,\n          this.route.params,\n          this.hubService.getHubCacheObservable(),\n          this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n          this.hubService.getRemoteLibrariesObservable()\n      ).subscribe(result => {\n        this.pageTitle = result[0]['pageTitle'];\n        this.hubCache = result[2];\n        this.datalinkForm = result[3];\n\n        this.functionType = result[1]['functionType'];\n        if (this.functionType === eFunctionType.Validate) {\n          this.datalinkTransformForm = this.editDatalinkService.getValidationTransform();\n          this.datalinkTransformKey = this.datalinkTransformForm.value.key;\n        } else {\n          this.datalinkTransformKey = +result[1]['datalinkTransformKey'];\n          this.datalinkTransformForm = this.editDatalinkService.getDatalinkTransform(this.datalinkTransformKey);\n        }\n\n        this.datalinkTransformItemKey = +result[1]['datalinkTransformItemKey'];\n\n        if (this.datalinkTransformForm) {\n          // // if this is a join transform, then the use the join columns for the input.\n          // if (this.datalinkTransformForm.value.transformType === eTransformType.Join ||\n          //   this.datalinkTransformForm.value.transformType === eTransformType.Lookup ) {\n          //   const table = this.datalinkTransformForm.controls.joinDatalinkTable.value;\n          //   if (!table) {\n          //     this.hubService.addHubErrorMessage('The join table could not be found.');\n          //     this.authService.navigateUp();\n          //   }\n          //   table.name = '(Joined) ' + table.name;\n          //   this.sourceTables = this.datalinkTransformForm.controls.runTime.value.inputColumns;\n          //   this.sourceTables.unshift(table);\n          // }  else {\n          //   this.inputColumns = this.datalinkTransformForm.controls.runTime.value.inputColumns;\n          // }\n          // this.outputColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n\n          let nodeDatalinkColumn = <DexihDatalinkColumn> this.datalinkTransformForm.controls.nodeDatalinkColumn.value;\n          let nodeDatalinkColumnKey = nodeDatalinkColumn ? nodeDatalinkColumn.key : null;\n          let io = new InputOutputColumns();\n          if (nodeDatalinkColumnKey) {\n            let inputColumns = <DexihDatalinkColumn[]> this.datalinkTransformForm.controls.runTime.value.inputColumns;\n            this.inputColumns = io.getAvailableColumns(inputColumns, nodeDatalinkColumnKey, 0);\n          } else {\n            this.inputColumns = this.datalinkTransformForm.controls.runTime.value.inputColumns;\n          }\n\n          this.outputColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n          this.datalinkTargets = this.datalinkForm.controls.dexihDatalinkTargets.value;\n\n          if (this.datalinkTransformItemKey) {\n            this.datalinkTransformItemForm = this.editDatalinkService\n              .getDatalinkTransformItem(this.datalinkTransformForm, this.datalinkTransformItemKey);\n\n              // create a copy of the form item to allow for cancel.\n              this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n                .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, this.datalinkTransformItemForm.value);\n\n            if (!this.newDatalinkTransformItemForm) {\n                this.authService.navigateUp();\n                return;\n            }\n          } else {\n\n            let newItem = new DexihDatalinkTransformItem();\n            newItem.datalinkTransformKey = this.datalinkTransformKey;\n            newItem.transformItemType = eTransformItemType.CustomFunction;\n\n            let returnParameter = new DexihFunctionParameter();\n\n            if (this.functionType === eFunctionType.Condition\n              || this.functionType === eFunctionType.JoinCondition || this.functionType === eFunctionType.Validate) {\n                returnParameter.dataType = eTypeCode.Boolean;\n            } else {\n              returnParameter.dataType = eTypeCode.String;\n            }\n            returnParameter.name = 'Return';\n            returnParameter.direction = eParameterDirection.ReturnValue;\n            returnParameter.rank = 0;\n            returnParameter.position = -1;\n            returnParameter.datalinkColumn = null;\n            returnParameter.isValid = true;\n\n            let funcParam = new FunctionParameter();\n            funcParam.name = 'Return';\n            returnParameter['runTime'] = {functionParameter: funcParam};\n\n            newItem.dexihFunctionParameters = new Array<DexihFunctionParameter>();\n            newItem.dexihFunctionParameters.push(returnParameter);\n            this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n              .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, newItem);\n          }\n\n          // this.returnParameterForm = this.editDatalinkService.hubFormsService\n          //   .datalinkFunctionParametersFormGroup(returnParameter);\n\n          // if (this._returnParameterSubscription) { this._returnParameterSubscription.unsubscribe(); }\n          // this._returnParameterSubscription = this.returnParameterForm.valueChanges.subscribe(parameter => {\n          //   this.newDatalinkTransformItemForm.controls.targetDatalinkColumn.setValue(parameter.datalinkColumn);\n          //   this.newDatalinkTransformItemForm.controls.returnType.setValue(parameter.dataType);\n          //   this.newDatalinkTransformItemForm.markAsDirty();\n          // });\n\n          this.parameters = <FormArray>this.newDatalinkTransformItemForm.controls.dexihFunctionParameters;\n\n          this.setParameters(this.parameters.controls);\n\n          if (this._parametersSubscription) { this._parametersSubscription.unsubscribe(); }\n          this._parametersSubscription = this.parameters.valueChanges.subscribe(p => {\n            this.setParameters(p);\n          });\n        }\n\n        if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n        this._saveSubscription = this.editDatalinkService.savingDatalink.subscribe(value => {\n            if(value) {\n                this.apply();\n            }\n        });\n\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Edit Custom Function');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._returnParameterSubscription) { this._returnParameterSubscription.unsubscribe(); }\n    if (this._parametersSubscription) { this._parametersSubscription.unsubscribe(); }\n    if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n    this.cancelToken.cancel();\n  }\n\n  canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      if (this.newDatalinkTransformItemForm && !this.newDatalinkTransformItemForm.pristine) {\n        this.authService.confirmDialog('Function has changed',\n        'The function has changed.  Would you like to discard the changes and return to the previous screen?'\n        ).then(confirm => {\n          resolve(confirm);\n        }).catch(reason => {\n          resolve(false);\n        });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  private setParameters(p: AbstractControl[]) {\n      this.inputParameters = this.parameters.controls.sort((a, b) => a.value.position - b.value.position)\n      .filter(c => c.value.direction === eParameterDirection.Input);\n\n      this.inputParameterValues = new Array(this.inputParameters.length);\n\n    this.outputParameters = this.parameters.controls.sort((a, b) => a.value.position - b.value.position)\n      .filter(c => c.value.direction === eParameterDirection.Output);\n\n      this.outputParameterValues = new Array(this.inputParameters.length);\n\n      this.returnParameterForm = <FormGroup> this.parameters.controls.find(c => c.value.direction === eParameterDirection.ReturnValue);\n    }\n\n  private parametersArray() {\n    return <FormArray>this.newDatalinkTransformItemForm.controls.dexihFunctionParameters;\n  }\n\n  addParameter(parameter: FormGroup, direction: eParameterDirection) {\n    try {\n      let newParameter = new DexihFunctionParameter();\n      if (parameter) {\n        let oldParameter = parameter.value;\n        newParameter.dataType = oldParameter.dataType;\n        newParameter.name = oldParameter.name;\n        newParameter.position = oldParameter.position + 1;\n      }\n\n      newParameter.name = '';\n      newParameter.datalinkColumn = null;\n      newParameter.value = null;\n      newParameter.dataType = eTypeCode.String;\n      newParameter.direction = direction;\n      newParameter.rank = 0;\n      newParameter.isValid = true;\n\n      let parameters = this.parametersArray();\n      let newParameterForm = this.editDatalinkService.hubFormsService\n        .datalinkFunctionParametersFormGroup(newParameter);\n      parameters.push(newParameterForm);\n\n      // reset the positions\n      parameters.controls.sort((a, b) => a.value.position - b.value.position).forEach((p, index) => {\n        (<FormGroup>p).controls.position.setValue(index * 10);\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Edit Custom Function, add parameter');\n    }\n\n  }\n\n  removeParameter(parameter: FormGroup) {\n    try {\n      let inputParameters = this.parametersArray();\n      let index: number = inputParameters.controls.indexOf(parameter);\n      if (index > -1) {\n        inputParameters.removeAt(index);\n      }\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Edit Custom Function, remove parameter');\n    }\n  }\n\n  newDefaultParameter(): DexihFunctionParameter {\n    try {\n      let parameter = new DexihFunctionParameter();\n      parameter.datalinkTransformItemKey = this.newDatalinkTransformItemForm.value.key;\n      parameter.dataType = eTypeCode.String;\n      parameter.rank = 0;\n      parameter.isValid = true;\n      return parameter;\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Edit Custom Function, default parameter');\n    }\n\n  }\n\n  cancel() {\n    this.authService.navigateUp();\n  }\n\n\n  apply() {\n    this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, this.newDatalinkTransformItemForm);\n    this.newDatalinkTransformItemForm.markAsPristine();\n  }\n\n  applyExit() {\n    this.apply();\n    this.authService.navigateUp();\n  }\n\n  downloadCode(parameters = null) {\n    this.hubService.downloadCustomFunction(this.newDatalinkTransformItemForm.value, parameters).catch(reason => {});\n  }\n\n  test(parameters = null) {\n    this.hubService.testCustomFunction(this.newDatalinkTransformItemForm.value, parameters, this.cancelToken).then(result => {\n      this.hubService.addHubSuccessMessage('The function has successfully compiled.');\n\n      if (result && result.length > 0) {\n        result.forEach((value, index) => {\n          if (index === 0) {\n            this.returnParameterValue = value;\n          } else {\n            this.outputParameterValues[index - 1] = value;\n          }\n        });\n      } else {\n        this.returnParameterValue = null;\n        this.outputParameterValues.forEach(c => c = null );\n      }\n    }).catch(reason => {\n      this.returnParameterValue = null;\n      this.outputParameterValues.forEach(c => c = null );\n      this.hubService.addHubMessage(reason);\n    });\n  }\n}\n\n","<div *ngIf=\"newDatalinkTransformItemForm && inputColumns && outputColumns\">\n\n\t<d-widget-section *ngIf=\"datalinkTransformForm\" title=\"Edit Custom Function\" [showExpandButton]=\"true\">\n\t\t<ng-template #header>\n\t\t\t<d-button-validate class=\"mr-1\" (click)=\"test()\" text=\"Syntax Check\"></d-button-validate>\n\t\t\t<d-button-download class=\"mr-1\" (click)=\"downloadCode()\" text=\"Download Code\"></d-button-download>\n\t\t\t<d-button-apply [disabled]=\"newDatalinkTransformItemForm.pristine\"\n\t\t\t\t(click)=\"!newDatalinkTransformItemForm.pristine && applyExit()\" class=\"mr-1\"></d-button-apply>\n\t\t\t<d-button-cancel (click)=\"cancel()\"></d-button-cancel>\n\t\t</ng-template>\n\n\t\t<form *ngIf=\"newDatalinkTransformItemForm\" [formGroup]=\"newDatalinkTransformItemForm\">\n\t\t\t<fieldset>\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section *ngIf=\"functionType != eFunctionType.Validate && functionType != eFunctionType.Condition\"\n\t\t\t\t\t\tclass=\"col col-xs-4\" [ngStyle]=\"{'z-index': 305, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Action when null\" formControlName=\"onNull\" [items]=\"eErrorActionItems\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"name\" iconClass=\"fa fa-database\" [enableFilter]=\"false\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"col col-xs-4\" [ngStyle]=\"{'z-index': 304, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Action when error\" formControlName=\"onError\" [items]=\"eErrorActionItems\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"name\" iconClass=\"fa fa-database\" [enableFilter]=\"false\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section *ngIf=\"functionType === eFunctionType.Condition\" class=\"col col-xs-4\"\n\t\t\t\t\t\t[ngStyle]=\"{'z-index': 303, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-checkbox label=\"Return 'NOT' result\" formControlName=\"notCondition\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<div *ngIf=\"functionType == eFunctionType.Validate\" class=\"col col-xs-4\"\n\t\t\t\t\t\t[ngStyle]=\"{'z-index': 302, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Action when false\" formControlName=\"invalidAction\" [items]=\"eInvalidActionItems\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"name\" iconClass=\"fa fa-database\" [enableFilter]=\"false\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div class=\"label\">\n\t\t\t\t\t\tInput Parameters\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngIf=\"inputParameters.length === 0\" class=\"mb-1\">\n\t\t\t\t\t\t<d-button (click)=\"addParameter(null, eParameterDirection.Input)\"\n\t\t\t\t\t\t\ticonClass=\"fa fa-plus-square-o\" title=\"Click to add a parameter\">Add Parameter\n\t\t\t\t\t\t</d-button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngFor=\"let inputParameter of inputParameters; let i = index\" class=\"pl-2\"\n\t\t\t\t\t\t[ngStyle]=\"{'z-index': 200-i, 'position': 'relative'}\">\n\t\t\t\t\t\t<input-parameter [allowNameSelect]=\"true\" [allowDataTypeSelect]=\"true\"\n\t\t\t\t\t\t\t[inputParameterForms]=\"[inputParameter]\" [inputColumns]=\"inputColumns\"\n\t\t\t\t\t\t\t[nodeDatalinkColumnKey]=\"datalinkTransformForm.controls.nodeDatalinkColumn.value?.key\"\n\t\t\t\t\t\t\t[updateParameterName]=\"true\"\n\t\t\t\t\t\t\t(addParameter)=\"addParameter($event, eParameterDirection.Input)\"\n\t\t\t\t\t\t\t(removeParameter)=\"removeParameter($event)\" [allowAdd]=\"true\" [allowRemove]=\"true\">\n\t\t\t\t\t\t</input-parameter>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div *ngIf=\"functionType != eFunctionType.Condition && functionType != eFunctionType.JoinCondition\">\n\t\t\t\t\t<div class=\"label mb-1\">\n\t\t\t\t\t\tOutput Parameters\n\t\t\t\t\t</div>\n\t\t\t\t\t<div [ngStyle]=\"{'z-index': 101, 'position': 'relative'}\">\n\t\t\t\t\t\t<output-parameter [allowNameSelect]=\"false\" [allowDataTypeSelect]=\"true\"\n\t\t\t\t\t\t\t[outputParameterForm]=\"returnParameterForm\" [outputColumns]=\"outputColumns\"  [datalinkTargets]=\"datalinkTargets\" \n\t\t\t\t\t\t\t(addParameter)=\"addParameter($event, eParameterDirection.Output)\"></output-parameter>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngIf=\"outputParameters.length === 0\">\n\t\t\t\t\t\t<d-button (click)=\"addParameter(null, eParameterDirection.Output)\"\n\t\t\t\t\t\t\ticonClass=\"fa fa-plus-square-o\" title=\"Click to add a parameter\">Add Parameter\n\t\t\t\t\t\t</d-button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngFor=\"let parameter of outputParameters; let i = index\"\n\t\t\t\t\t\t[ngStyle]=\"{'z-index': 100-i, 'position': 'relative'}\">\n\t\t\t\t\t\t<output-parameter [allowNameSelect]=\"true\" [allowDataTypeSelect]=\"true\"\n\t\t\t\t\t\t\t[outputParameterForm]=\"parameter\" [outputColumns]=\"outputColumns\"  [datalinkTargets]=\"datalinkTargets\" \n\t\t\t\t\t\t\t[updateParameterName]=\"true\"\n\t\t\t\t\t\t\t(addParameter)=\"addParameter($event, eParameterDirection.Output)\"\n\t\t\t\t\t\t\t(removeParameter)=\"removeParameter($event)\" [allowAdd]=\"true\" [allowRemove]=\"true\">\n\t\t\t\t\t\t</output-parameter>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\tFunction Code\n\t\t\t\t<textarea class='form-control' rows=\"20\" width=\"100%\" spellcheck=\"false\"\n\t\t\t\t\tformControlName=\"functionCode\"></textarea>\n\t\t\t</fieldset>\n\t\t</form>\n\t</d-widget-section>\n\n\n\n\t<d-widget-section *ngIf=\"datalinkTransformForm && newDatalinkTransformItemForm\" title=\"Test Function\"\n\t\t[showExpandButton]=\"true\">\n\t\t<ng-template #header>\n\t\t\t<button class=\"btn btn-success mr-1\" (click)=\"test()\">Syntax Check</button>\n\t\t\t<button class=\"btn btn-success mr-1\" (click)=\"test(inputParameterValues)\">Run</button>\n\t\t\t<button class=\"btn btn-success\" (click)=\"downloadCode(inputParameterValues)\">Download Code</button>\n\t\t</ng-template>\n\n\t\t<form>\n\t\t\t<div class=\"label\">\n\t\t\t\tInput Parameters\n\t\t\t</div>\n\t\t\t<div *ngFor=\"let inputParameter of inputParameters; let i = index\"\n\t\t\t\t[ngStyle]=\"{'z-index': 200-i, 'position': 'relative'}\">\n\t\t\t\t<form-input [label]=\"inputParameter.controls.name.value\" [(ngModel)]=\"inputParameterValues[i]\"\n\t\t\t\t\t[name]=\"'inputParameterValues' + i\" type=\"text\" placeholder=\"Enter a test value for the parameter\">\n\t\t\t\t</form-input>\n\t\t\t</div>\n\t\t\t<form-input label=\"Return Value\" [disabled]=\"true\" [(ngModel)]=\"returnParameterValue\"\n\t\t\t\tname=\"returnParameterValue\" type=\"text\"></form-input>\n\t\t\t<div class=\"label\" *ngIf=\"outputParameters.length > 0\">\n\t\t\t\tOutputs Parameters\n\t\t\t</div>\n\t\t\t<div *ngFor=\"let outputParameter of outputParameters; let i = index\"\n\t\t\t\t[ngStyle]=\"{'z-index': 200-i, 'position': 'relative'}\">\n\t\t\t\t<form-input [disabled]=\"true\" [label]=\"outputParameter.controls.name.value\"\n\t\t\t\t\t[(ngModel)]=\"outputParameterValues[i]\" [name]=\"'outputParameterValues' + i\" type=\"text\">\n\t\t\t\t</form-input>\n\t\t\t</div>\n\t\t</form>\n\t</d-widget-section>\n</div>","export * from './custom-function-edit.component';\n","import { Component, OnInit, OnChanges, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HubCache, deltaTypes, securityFlags, } from '../../../hub.models';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubService } from '../../../hub.service';\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\nimport { Subscription ,  combineLatest} from 'rxjs';\nimport { HubFormsService } from '../../../hub.forms.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { TypeCodes } from '../../../hub.remote.models';\nimport { eTypeCode, eParameterDirection, DexihDatalinkColumn } from '../../../../shared/shared.models';\n\n@Component({\n    selector: 'datalink-column-edit',\n    templateUrl: './datalink-column-edit.component.html',\n})\nexport class DatalinkColumnEditComponent implements OnInit, OnChanges, OnDestroy {\n    private _subscription: Subscription;\n    private _saveSubscription: Subscription;\n\n    private hubCache: HubCache;\n    public pageTitle: string;\n    public action: string;\n\n    public datalinkColumnKey: number;\n\n    public errorMessage: string;\n    public successMessage: string;\n    public savingTable: boolean;\n\n    public newColumnForm: FormGroup;\n    private sourceDatalinkTableForm: FormGroup;\n\n    eTypeCode = eTypeCode;\n    typeCodes = TypeCodes;\n    deltaTypes = deltaTypes;\n    securityFlags = securityFlags;\n\n    public columnFormService: HubFormsService;\n    private originalColumnForm: FormGroup;\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        fb: FormBuilder,\n        private route: ActivatedRoute,\n    ) {\n\n        // create a separate formService instance to manage the copied form\n        this.columnFormService = new HubFormsService(fb, hubService, authService);\n    }\n\n    ngOnInit() {\n\n        try {\n            this._subscription = combineLatest(\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                this.pageTitle = result[0]['pageTitle'];\n                this.datalinkColumnKey = + result[0]['datalinkColumnKey'];\n                this.hubCache = result[1];\n\n                this.sourceDatalinkTableForm = <FormGroup>this.editDatalinkService.hubFormsService.currentForm\n                .controls.sourceDatalinkTable;\n\n                this.initializeForm();\n            });\n\n            if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n            this._saveSubscription = this.editDatalinkService.savingDatalink.subscribe(value => {\n                if(value) {\n                    this.applyExit();\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink column edit');\n        }\n    }\n\n    ngOnChanges() {\n        if (this.hubCache) {\n            this.initializeForm();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n    }\n\n    // searches the datalink and transforms for a column\n    findColumn(): FormGroup {\n        // look for column in source table\n        let columnsArray = <FormArray>this.sourceDatalinkTableForm.controls.dexihDatalinkColumns;\n        let column = <FormGroup> columnsArray.controls.find(c => c.value.key === this.datalinkColumnKey);\n        if (column) { return column; }\n\n        // look for column as transform outputs\n        let transformForms = <FormArray>this.editDatalinkService.hubFormsService.currentForm\n            .controls.dexihDatalinkTransforms;\n\n        transformForms.controls.forEach(t => {\n            let datalinkTransformForm = <FormGroup>t\n            let items = <FormArray>datalinkTransformForm.controls.dexihDatalinkTransformItems;\n            items.controls.forEach(i => {\n                if (!column) {\n                    let itemForm = <FormGroup>i;\n                    if (itemForm.controls.targetDatalinkColumn.value &&\n                        itemForm.controls.targetDatalinkColumn.value.key === this.datalinkColumnKey) {\n                        column = <FormGroup> itemForm.controls.targetDatalinkColumn;\n                    }\n\n                    if (!column) {\n                        columnsArray = <FormArray> itemForm.controls.dexihFunctionParameters;\n                        let parameter = <FormGroup> columnsArray.controls.find(c =>\n                            HubCache.parameterIsOutput(c.value) &&\n                            c.value.datalinkColumn &&\n                            c.value.datalinkColumn.key === this.datalinkColumnKey\n                        );\n                        if (parameter) {\n                            column = <FormGroup> parameter.controls.datalinkColumn;\n                        }\n                        if (!column) {\n                            columnsArray.controls.forEach(c => {\n                                let arrayParameters = <FormArray> (<FormGroup> c).controls.arrayParameters;\n                                if (arrayParameters) {\n                                    parameter = <FormGroup> arrayParameters.controls.find(p =>\n                                        HubCache.parameterIsOutput(p.value) &&\n                                        p.value.datalinkColumn &&\n                                        p.value.datalinkColumn.key === this.datalinkColumnKey\n                                    );\n                                    if (parameter) {\n                                        column = <FormGroup> parameter.controls.datalinkColumn;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                }\n            });\n        });\n\n        return column;\n    }\n\n    initializeForm() {\n        let columnForm: FormGroup;\n\n        if (this.datalinkColumnKey) {\n            this.originalColumnForm = this.findColumn();\n            if (!this.originalColumnForm) {\n                this.authService.informationDialog('Cannot Edit', 'The selected column could not be edited.').then(() => {\n                    this.authService.navigateUp();\n                });\n\n                return;\n            }\n            columnForm = this.columnFormService.datalinkTableColumn(null, this.originalColumnForm.value);\n        } else {\n            let column = new DexihDatalinkColumn();\n            column.key = this.hubCache.getNextSequence();\n            column.datalinkTableKey = this.sourceDatalinkTableForm.controls.key.value;\n            let columnsArray = <DexihDatalinkColumn[]>this.sourceDatalinkTableForm.controls.dexihDatalinkColumns.value;\n            let maxPos = 1;\n            columnsArray.forEach(col => {\n                if (col.position > maxPos) { maxPos = col.position; }\n            })\n            column.position = maxPos + 1;\n            columnForm = this.columnFormService.datalinkTableColumn(columnsArray, column);\n        }\n        this.columnFormService.startForm(columnForm);\n    }\n\n    cancel() {\n        this.authService.navigateUp();\n    }\n\n    applyExit() {\n        const columnForm = this.columnFormService.currentForm;\n\n        // if no originalColumn, then add it to the source columns.\n        if (!this.originalColumnForm) {\n            let columnsArray = <FormArray>this.sourceDatalinkTableForm.controls.dexihDatalinkColumns;\n            columnsArray.push(columnForm);\n        } else {\n            this.originalColumnForm.setValue(columnForm.value);\n        }\n\n        this.sourceDatalinkTableForm.markAsDirty();\n        this.authService.navigateUp();\n    }\n}\n","<div *ngIf=\"columnFormService?.currentForm\">\n    <div class=\"list-group-item list-group-item-info rounded-0\">\n        <div class=\"d-flex flex-row\">\n            <h5>Edit Column </h5>\n            <div class=\"ml-auto\">\n                <dexih-invalid-form-details (click)=\"columnFormService.showErrors()\"\n                    [control]=\"columnFormService.currentForm\" class=\"mr-1\"></dexih-invalid-form-details>\n                <d-button-apply [disabled]=\"columnFormService.currentForm.pristine\"\n                    (click)=\"!columnFormService.currentForm.pristine && applyExit()\" class=\"mr-1\"></d-button-apply>\n                <d-button-cancel (click)=\"cancel()\"></d-button-cancel>\n            </div>\n        </div>\n    </div>\n\n\n    <div class=\"container  mt-3 mb-3\">\n        <column-edit-base [columnFormService]=\"columnFormService\" [detailedView]=\"true\"></column-edit-base>\n    </div>\n\n    <table-edit-columns *ngIf=\"columnFormService.currentForm.controls.dataType.value === eTypeCode.Node\"\n        [parentColumnForm]=\"columnFormService.currentForm\"></table-edit-columns>\n</div>","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable, combineLatest} from 'rxjs';\n\nexport interface CanComponentDeactivate {\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\n}\n\n@Injectable()\nexport class DatalinkEditGuard implements CanDeactivate<CanComponentDeactivate> {\n\n  canDeactivate(component: CanComponentDeactivate) {\n    return component && component.canDeactivate ? component.canDeactivate() : true;\n  }\n\n}\n","import { HostListener, Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationEnd, Params } from '@angular/router';\nimport { HubService } from '../../hub.service';\nimport { DatalinkEditService } from './datalink-edit.service';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { FormGroup, FormArray, AbstractControl } from '@angular/forms';\nimport { LogFactory, eLogLevel } from '../../../../logging';\nimport { HubCache, eCacheStatus } from '../../hub.models';\nimport { DexihDatalinkTransform, eTransformWriterMethod, DexihDatalink, eDatalinkType,\n    eSourceType, eTransformType, DexihDatalinkTable } from '../../../shared/shared.models';\nimport { transformTypes } from '../../hub.remote.models';\n\n@Component({\n    selector: 'dexih-datalink-edit-form',\n    templateUrl: './datalink-edit.component.html',\n    styleUrls: ['./datalink-edit.component.scss']\n})\nexport class DatalinkEditComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n\n    private _subscription: Subscription;\n    private _datalinkFormSubscription: Subscription;\n    private _transformsChange: Subscription;\n    private _sourceChange: Subscription;\n    // private _datalinkTransformsSubscription: Subscription;\n\n    private hubCache: HubCache;\n\n    public savingDatalink = false;\n\n    public action: string; // new or edit\n    public pageTitle: string;\n    public params: Params;\n\n    public logger = new LogFactory('datalink-edit.component');\n    public logCount = 0;\n\n    public eSourceType = eSourceType;\n\n    public help: string;\n\n    public datalinkTransforms: {transform: AbstractControl, name: string, icon: string, invalid: boolean}[] = null;\n\n    eTransformWriterMethod = eTransformWriterMethod;\n\n    private isLoaded = false;\n\n    showPage = false;\n    showPageMessage = 'Loading datalink...';\n\n    public validationTransform;\n    public source: any = {};\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        public editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router) {\n    }\n\n    getHelp() {\n        let route = this.router.routerState.root.snapshot;\n        while (route.firstChild) { route = route.firstChild; }\n        this.help = route.data['help'];\n    }\n\n    ngOnInit() {\n        this.logger.LogC(() => `OnInit`, eLogLevel.Trace);\n\n        try {\n            this.router.events.subscribe(event => {\n                if (event instanceof NavigationEnd) {\n                    this.getHelp();\n                }\n            });\n\n            this.getHelp();\n\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                this.action = result[0]['action'];\n                this.pageTitle = result[0]['pageTitle'];\n                this.params = result[1];\n                this.hubCache = result[2];\n\n                if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded ) { return; }\n\n                this.editDatalinkService.init(this.hubCache);\n\n                if (this.isLoaded && this.action === 'new') { return; }\n\n                if (this.isLoaded && this.editDatalinkService.hubFormsService.hasChanged) {\n                    this.authService.confirmDialog('Datalink synchronization warning',\n                    'The hub was disconnected, meaning the datalink could have been changed by another session.  Would you like to discard the current changes, and reload the latest version of the datalink?')\n                    .then(confirm => {\n                        if (confirm) {\n                            this.load();\n                        }\n                    }).catch(() => {\n                        return;\n                    });\n                } else {\n                    this.load();\n                }\n            });\n\n            this.editDatalinkService.ngOnInit();\n\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Edit');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._datalinkFormSubscription) { this._datalinkFormSubscription.unsubscribe(); }\n        if (this._transformsChange) { this._transformsChange.unsubscribe(); }\n        if (this._sourceChange) { this._sourceChange.unsubscribe(); }\n//        if (this._datalinkTransformsSubscription) { this._datalinkTransformsSubscription.unsubscribe(); }\n\n        // shut down service\n        this.editDatalinkService.ngOnDestroy();\n    }\n\n    private load() {\n        this.logger.LogC(() => `Subscription count: ${this.logCount++}`, eLogLevel.Trace);\n\n        if (this.action === 'edit') {\n\n            // get the hub key from the route data, and update the service.\n            let datalinkKey: number = +this.params['datalinkKey'];\n            if (!datalinkKey) {\n                this.logger.LogC(() => `no datalink found.`, eLogLevel.Warning);\n\n                this.hubService.addHubErrorMessage('There was no datalink specified to edit.');\n                this.showPageMessage = 'Edit failed...';\n                this.editDatalinkService.hubFormsService.datalink(null);\n            } else {\n                let originalDatalink = this.hubCache.hub.dexihDatalinks.find(d => d.key === datalinkKey);\n\n                if (originalDatalink) {\n                    this.editDatalinkService.hubFormsService.datalink(originalDatalink);\n                    this.route.snapshot.data['pageTitle'] = 'Datalink (' + originalDatalink.name + ')';\n\n                } else {\n                    this.logger.LogC(() => `no datalink found. key: ${datalinkKey}`, eLogLevel.Warning);\n                    this.hubService.addHubErrorMessage('A datalink with the key ' +\n                        datalinkKey + ' could not be found in the repository.');\n                    this.showPageMessage = 'Edit failed...';\n                }\n            }\n\n        } else if (!this.isLoaded && this.action === 'new') {\n            let datalink = new DexihDatalink();\n            datalink.sourceDatalinkTable = new DexihDatalinkTable();\n            this.editDatalinkService.hubFormsService.datalink(datalink);\n            this.logger.LogC(() => `new datalink set.`, eLogLevel.Warning);\n        } else if (!this.isLoaded && this.action === 'copy') {\n            // get the hub key from the route data, and update the service.\n            let datalinkKey: number = +this.params['datalinkKey'];\n            if (!datalinkKey) {\n                this.logger.LogC(() => `no datalink found.`, eLogLevel.Warning);\n\n                this.hubService.addHubErrorMessage('There was no datalink specified to copy.');\n                this.showPageMessage = 'Copy failed...';\n                this.editDatalinkService.hubFormsService.datalink(null);\n            } else {\n                let originalDatalink = this.hubCache.hub.dexihDatalinks.find(d => d.key === datalinkKey);\n\n                if (originalDatalink) {\n                    let copyDatalink = this.hubCache.CopyDatalink(originalDatalink);\n                    this.editDatalinkService.hubFormsService.datalink(copyDatalink);\n                    this.editDatalinkService.hubFormsService.hasChanged = true;\n                    this.route.snapshot.data['pageTitle'] = 'Datalink (' + copyDatalink.name + ')';\n\n                } else {\n                    this.logger.LogC(() => `no datalink found. key: ${datalinkKey}`, eLogLevel.Warning);\n                    this.hubService.addHubErrorMessage('A datalink with the key ' +\n                        datalinkKey + ' could not be found in the repository.');\n                    this.showPageMessage = 'Copy failed...';\n                }\n            }\n        } else if (this.action === 'sourceTable') {\n            let datalink = new DexihDatalink();\n            datalink.datalinkType = eDatalinkType.Query;\n            datalink.sourceDatalinkTable = new DexihDatalinkTable();\n            datalink.sourceDatalinkTable.sourceType = eSourceType.Table;\n            datalink.sourceDatalinkTable.sourceTableKey = +this.params['sourceTableKey'];\n            this.editDatalinkService.reBuildDatalinkTable(datalink.sourceDatalinkTable);\n            datalink.name = 'Datalink query for ' + datalink.sourceDatalinkTable.name;\n\n            this.editDatalinkService.hubFormsService.datalink(datalink);\n            this.editDatalinkService.hubFormsService.currentForm.markAsDirty();\n            this.editDatalinkService.hubFormsService.hasChanged = true;\n\n            this.logger.LogC(() => `new source table datalink set.`, eLogLevel.Warning);\n        }\n\n        this.isLoaded = true;\n\n        // monitor for any changes to the datalink\n        if (this._datalinkFormSubscription) { this._datalinkFormSubscription.unsubscribe(); }\n        this._datalinkFormSubscription =\n            this.editDatalinkService.hubFormsService.getCurrentFormObservable().subscribe(datalinkForm => {\n                if (!datalinkForm) { return; }\n                this.datalinkForm = datalinkForm;\n\n                this.refreshTransforms();\n\n                this.refreshSource(this.datalinkForm.controls.sourceDatalinkTable.value);\n                if (this._sourceChange) { this._sourceChange.unsubscribe(); }\n                this._sourceChange = this.datalinkForm.controls.sourceDatalinkTable.valueChanges.subscribe(source => {\n                    this.refreshSource(source);\n                });\n                \n\n                if (this._transformsChange) { this._transformsChange.unsubscribe(); }\n                this._transformsChange = this.datalinkForm.controls.dexihDatalinkTransforms.valueChanges\n                    .subscribe(() => this.refreshTransforms());\n\n                let key = datalinkForm.controls.key.value;\n                if (key) {\n                    if (history.pushState) {\n                        let newUrl = window.location.pathname.replace('/new', `/edit/${key}`)\n                        this.router.navigateByUrl(newUrl);\n                    }\n                }\n            });\n\n        this.showPage = true;\n        this.showPageMessage = '';\n    }\n\n    public canDeactivate(): Promise<boolean> {\n        return new Promise<boolean>((resolve) => {\n            if (this.editDatalinkService.hubFormsService.hasChanged) {\n                this.authService.confirmDialog('Datalink changes have not been saved',\n                    'The datalink changes have not been saved.  Do you want to discard the changes and exit?')\n                    .then(confirm => {\n                        resolve(confirm);\n                    }).catch(() => {\n                        resolve(false);\n                    });\n            } else {\n                resolve(true);\n            }\n        });\n    }\n\n    // @HostListener allows us to also guard against browser refresh, close, etc.\n    @HostListener('window:beforeunload', ['$event']) unloadNotification($event: any) {\n        if (this.editDatalinkService.hubFormsService.hasChanged) {\n            $event.returnValue = 'The datalink changes have not been saved.  Do you want to discard the changes and exit?';\n        }\n    }\n\n    enableValidation() {\n        if (!this.validationTransform) {\n            this.validationTransform = this.editDatalinkService.enableValidation();\n        }\n\n        this.router.navigate(['validation'], { relativeTo: this.route });\n    }\n\n    disableValidation() {\n        if (this.validationTransform) {\n            this.editDatalinkService.disableValidation();\n            this.validationTransform = null;\n        }\n    }\n\n    refreshSource(sourceDatalinkTable: DexihDatalinkTable) {\n        this.source = {\n            name: sourceDatalinkTable.name,\n            description: sourceDatalinkTable.description\n        };\n\n        switch(sourceDatalinkTable.sourceType) {\n            case eSourceType.Datalink:\n                this.source['icon'] = 'fa fa-exchange';\n                this.source['link'] = ['source', 'preview-table-data', 'datalink', sourceDatalinkTable.sourceDatalinkKey];\n                break;\n            case eSourceType.Table:\n                this.source['icon'] = 'fa fa-table';\n                this.source['link'] = ['source', 'preview-table-data', 'table', sourceDatalinkTable.sourceTableKey];\n                break;\n            case eSourceType.Rows:\n                this.source['icon'] = 'fa fa-bars';\n                this.source['link'] = null;\n\n        }\n    }\n\n    refreshTransforms() {\n        this.logger.LogC(() => `refreshing transforms list`, eLogLevel.Trace);\n\n        const transformsArray = <FormArray> this.datalinkForm.controls.dexihDatalinkTransforms;\n        const transforms =  transformsArray.controls\n            .filter(c => c.value.transformType !== eTransformType.Validation &&\n                c.value.transformType !== eTransformType.Profile)\n            .sort((a, b) => a.value.position - b.value.position);\n\n        const datalinkTransforms = transforms.map(transform => {\n            const type = transformTypes.find(c => c.key === transform.value.transformType);\n            let icon = '';\n            if (type) {\n                icon = type.icon\n            }\n            const name = this.hubCache.getTransformName(transform.value);\n            return {transform: transform, icon: icon, name: name, invalid: transform.invalid};\n        });\n\n        this.datalinkTransforms = datalinkTransforms;\n    }\n\n    deleteTransform(datalinkTransform: DexihDatalinkTransform) {\n        this.logger.LogC(() => `deleteTransform`, eLogLevel.Trace);\n        this.editDatalinkService.deleteDatalinkTransform(datalinkTransform).then(() => {\n            this.refreshTransforms();\n        });\n    }\n\n    previewData(datalinkTransform: DexihDatalinkTransform) {\n        this.router.navigate(['transform', datalinkTransform.key, 'preview-transform-data'], { relativeTo: this.route });\n    }\n\n    saveDatalink() {\n        this.editDatalinkService.hubFormsService.save();\n    }\n\n    cancel() {\n        this.editDatalinkService.hubFormsService.cancel();\n    }\n\n}\n","<div class=\"container-fluid\" *ngIf=\"datalinkForm\">\n\t<d-widget title=\"Edit Datalink\" iconClass=\"fa fa-lg fa-fw fa-exchange\" [showCloseButton]=\"true\"\n\t\t[padding]=\"false\" (close)=\"cancel()\">\n\t\t<ng-template #header>\n\t\t\t<div class=\"ml-auto\">\n\t\t\t\t<div class=\"d-flex align-items-center\">\n\t\t\t\t<datalink-status class=\"d-none d-xl-inline\" [datalinkKey]='datalinkForm?.controls.key.value' class=\"mr-1\">\n\t\t\t\t</datalink-status>\n\t\t\t\t<d-button-dropdown class=\"mr-1\" iconClass=\"fa fa-plus\" text=\"Options\">\n\t\t\t\t\t<d-dropdown-item *ngIf=\"!validationTransform\" iconClass=\"fa fa-check-square-o\" text=\"Enable target table validation\" (click)=\"enableValidation()\"></d-dropdown-item>\n\t\t\t\t\t<d-dropdown-item  iconClass=\"fa fa-arrow-circle-right\" text=\"Add a target table.\" [routerLink]=\"['target', 'table-new']\"></d-dropdown-item>\n\t\t\t\t</d-button-dropdown>\n\t\t\t\t<datalink-save-button></datalink-save-button>\n\t\t\t</div>\n\t\t\t</div>\n\t\t</ng-template>\n\n\t\t<div *ngIf=\"datalinkTransforms\" class=\"bg-light pt-1 pb-1 d-flex\">\n\t\t\t<ul class=\"transform-container\">\n\t\t\t\t<div class=\"d-flex m-3\">\n\t\t\t\t\t<transform-step \n\t\t\t\t\t\t[routerLinkCurrent]=\"['properties']\"\n\t\t\t\t\t\t[name]=\"'Properties'\"\n\t\t\t\t\t\t[title]=\"'Edit the properties.'\"\n\t\t\t\t\t\t[icon]=\"'fa fa-cog'\"\n\t\t\t\t\t\t[control]=\"\"\n\t\t\t\t\t\t[showDelete]=\"false\"\n\t\t\t\t\t\t[showArrow]=\"false\" >\n\t\t\t\t\t</transform-step>\n\t\t\t\t\t\n\t\t\t\t\t<transform-step \n\t\t\t\t\t\t[routerLinkAfter]=\"['new', 1]\"\n\t\t\t\t\t\t[routerLinkCurrent]=\"['source']\"\n\t\t\t\t\t\t[routerLinkPreview]=\"source.link\"\n\t\t\t\t\t\t[name]=\"source.name\"\n\t\t\t\t\t\t[title]=\"source.name + ' ' + (source.description ? source.description : '')\"\n\t\t\t\t\t\t[icon]=\"source.icon\"\n\t\t\t\t\t\t[control]=\"\"\n\t\t\t\t\t\t[showDelete]=\"false\" >\n\t\t\t\t\t</transform-step>\n\t\t\t\t\n\t\t\t\t\t<ng-template ngFor let-datalinkTransform [ngForOf]=\"datalinkTransforms\" let-isLast=\"last\" let-isFirst=\"first\">\n\t\n\t\t\t\t\t\t<transform-step \n\t\t\t\t\t\t\t[routerLinkBefore]=\"['new', datalinkTransform.transform.value.position - 1]\"\n\t\t\t\t\t\t\t[routerLinkAfter]=\"['new', datalinkTransform.transform.value.position + 1]\"\n\t\t\t\t\t\t\t[routerLinkCurrent]=\"['transform', datalinkTransform.transform.value.key]\"\n\t\t\t\t\t\t\t[routerLinkPreview]=\"['transform', datalinkTransform.transform.value.key, 'preview-transform-data']\"\n\t\t\t\t\t\t\t[name]=\"datalinkTransform.name\"\n\t\t\t\t\t\t\t[title]=\"datalinkTransform.name + ' transform.'\"\n\t\t\t\t\t\t\t[icon]=\"datalinkTransform.icon\"\n\t\t\t\t\t\t\t[control]=\"datalinkTransform.transform\"\n\t\t\t\t\t\t\t[showDelete]=\"true\"\n\t\t\t\t\t\t\t(onDelete)=\"deleteTransform(datalinkTransform.transform.value)\">\n\t\t\t\t\t\t</transform-step>\n\t\n\t\t\t\t\t</ng-template>\n\t\n\t\t\t\t\t<transform-step *ngIf=\"datalinkTransforms.length === 0\"\n\t\t\t\t\t\t[routerLinkBefore]=\"['new', 1]\"\n\t\t\t\t\t\t[routerLinkAfter]=\"['new', 1]\"\n\t\t\t\t\t\t[routerLinkCurrent]=\"['new', 1]\"\n\t\t\t\t\t\t[name]=\"'Add Transform'\"\n\t\t\t\t\t\t[title]=\"'Add new transform'\"\n\t\t\t\t\t\t[icon]=\"'fa fa-plus'\"\n\t\t\t\t\t\t[showDelete]=\"false\"\n\t\t\t\t\t></transform-step>\n\t\t\t\t\t\n\t\t\t\t\t<transform-step *ngIf=\"validationTransform\"\n\t\t\t\t\t\t[routerLinkBefore]=\"['new', datalinkTransforms.length === 0 ? 1 : datalinkTransforms[datalinkTransforms.length-1].transform.value.position+1]\"\n\t\t\t\t\t\t[routerLinkCurrent]=\"['validation']\"\n\t\t\t\t\t\t[name]=\"'Validation'\"\n\t\t\t\t\t\t[title]=\"'Validate Data'\"\n\t\t\t\t\t\t[icon]=\"'fa fa-check-square-o'\"\n\t\t\t\t\t\t[showDelete]=\"true\"\n\t\t\t\t\t\t(onDelete)=\"disableValidation()\">\n\t\t\t\t\t</transform-step>\n\t\n\t\t\t\t\t<transform-step \n\t\t\t\t\t\t[routerLinkBefore]=\"['new', datalinkTransforms.length === 0 ? 1 : datalinkTransforms[datalinkTransforms.length-1].transform.value.position+1]\"\n\t\t\t\t\t\t[routerLinkCurrent]=\"['target']\"\n\t\t\t\t\t\t[name]=\"'Target'\"\n\t\t\t\t\t\t[title]=\"'Target tables(s)'\"\n\t\t\t\t\t\t[icon]=\"'fa fa-arrow-circle-right'\"\n\t\t\t\t\t\t[control]=\"\"\n\t\t\t\t\t\t[showArrow]=\"false\"\n\t\t\t\t\t\t[showDelete]=\"false\">\n\t\t\t\t\t</transform-step>\n\t\n\t\t\t\t\t<transform-step \n\t\t\t\t\t[routerLinkCurrent]=\"['profiles']\"\n\t\t\t\t\t[name]=\"'Profiles'\"\n\t\t\t\t\t[title]=\"'Edit the profiles.'\"\n\t\t\t\t\t[icon]=\"'fa fa-bug'\"\n\t\t\t\t\t[control]=\"\"\n\t\t\t\t\t[showDelete]=\"false\"\n\t\t\t\t\t[isLast]=\"true\" >\n\t\t\t\t</transform-step>\n\t\t\t\t</div>\n\t\n\t\t\t</ul>\n\t\t</div>\n\t\n\t\t<router-outlet></router-outlet>\n\n\t</d-widget>\n\n\t<dexih-help class=\"m-3\" *ngIf=\"help\" title=\"Datalinks\" path=\"/assets/help/reference/{{help}}\"></dexih-help>\n\n</div>","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routing } from './datalink-edit.routing';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { DatalinkEditService } from './datalink-edit.service';\nimport { HubFormsService } from '../../hub.forms.service';\n\nimport { DatalinkEditComponent } from './datalink-edit.component';\nimport { DatalinkEditPropertiesComponent } from './properties/datalink-edit-properties.component';\nimport { DatalinkEditSourceTableComponent } from './source-table/datalink-edit-source-table.component';\nimport { DatalinkEditTargetTableComponent } from './target/datalink-edit-target-table.component';\nimport { DatalinkEditTargetComponent } from './target/datalink-edit-target.component';\nimport { DatalinkEditTransformComponent } from './transform/datalink-edit-transform.component';\nimport { DatalinkEditValidationComponent } from './validation/datalink-edit-validation.component';\nimport { DatalinkEditProfileRulesComponent } from './profile-rules/profile-rules.component';\nimport { DatalinkEditSaveButtonComponent } from './save-button/datalink-edit-save-button.component';\nimport { DatalinkRunPlanComponent } from './run-plan/datalink-run-plan.component';\nimport { DatalinkEditNewTransformComponent } from './new-transform/datalink-edit-new-transform.component';\nimport { StandardFunctionEditComponent }  from './standard-function-edit';\nimport { CustomFunctionEditComponent } from './custom-function-edit';\nimport { UnGroupEditComponent } from './unGroup-edit';\nimport { OutputColumnComponent, OutputColumnsComponent } from './output-columns';\nimport { JoinColumnComponent, JoinColumnsComponent } from './join-columns';\nimport { InputColumnsComponent, InputColumnComponent } from './input-columns';\nimport { MappingEditComponent } from './mapping-edit';\nimport { MappingComponent, MappingItemComponent } from './mapping';\nimport { PreviewDataComponent } from './preview-data';\nimport { PreviewTableComponent} from './preview-table';\nimport { DatalinkEditGuard } from './datalink-edit-guard';\nimport { TransformTableEditComponent } from './transform-table-edit/transform-table-edit.component';\nimport { HubSharedModule } from '../../hub.shared.module';\nimport { TargetTableColumnComponent } from './target-table-column/target-table-column.component';\nimport { TableSharedModule } from '../../table/table.shared.module';\nimport { DatalinkTableComponent } from './datalink-table/datalink-table.component'\nimport { DatalinkColumnEditComponent } from './datalink-column-edit/datalink-column-edit.component'\nimport { ResultsViewModule } from '../../results/results-view/results-view.module';\nimport { InputParameterComponent, OutputParameterComponent} from './parameters'\nimport { TargetColumnsComponent, TargetColumnComponent} from './target-columns';\nimport { DatalinkPreviewDataComponent } from '../datalink-preview-data';\nimport { TransformStepComponent} from './transform-step/transform-step.component';\n\n@NgModule({\n    imports: [\n        SharedModule,\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        Routing,\n        HubSharedModule,\n        TableSharedModule,\n        ResultsViewModule\n    ],\n    declarations: [\n        DatalinkEditComponent,\n        DatalinkEditPropertiesComponent,\n        DatalinkEditSourceTableComponent,\n        DatalinkEditTargetTableComponent,\n        DatalinkEditTargetComponent,\n        DatalinkEditTransformComponent,\n        DatalinkEditValidationComponent,\n        DatalinkEditProfileRulesComponent,\n        DatalinkRunPlanComponent,\n        StandardFunctionEditComponent,\n        CustomFunctionEditComponent,\n        OutputColumnComponent, OutputColumnsComponent,\n        JoinColumnComponent, JoinColumnsComponent,\n        InputColumnsComponent, InputColumnComponent,\n        TargetColumnsComponent, TargetColumnComponent,\n        MappingEditComponent,\n        MappingComponent, MappingItemComponent,\n        PreviewDataComponent,\n        PreviewTableComponent,\n        TransformTableEditComponent,\n        DatalinkEditSaveButtonComponent,\n        DatalinkEditNewTransformComponent,\n        TargetTableColumnComponent,\n        DatalinkTableComponent,\n        DatalinkColumnEditComponent,\n        InputParameterComponent, OutputParameterComponent,\n        UnGroupEditComponent,\n        TransformStepComponent,\n    ],\n    providers: [ DatalinkEditService, HubFormsService, DatalinkEditGuard ],\n    exports: []\n})\nexport class DatalinkEditModule {\n\n    static forRoot(): ModuleWithProviders<DatalinkEditModule> {\n        return {\n            ngModule: DatalinkEditModule,\n            providers: [ DatalinkEditService, HubFormsService ]\n        };\n    }\n}\n","import { Routes, RouterModule } from '@angular/router';\nimport { DatalinkEditPropertiesComponent } from './properties/datalink-edit-properties.component';\nimport { DatalinkEditComponent } from './datalink-edit.component';\nimport { DatalinkEditSourceTableComponent } from './source-table/datalink-edit-source-table.component';\nimport { DatalinkEditTargetComponent } from './target/datalink-edit-target.component';\nimport { DatalinkEditTransformComponent } from './transform/datalink-edit-transform.component';\nimport { DatalinkEditProfileRulesComponent } from './profile-rules/profile-rules.component';\nimport { DatalinkEditValidationComponent } from './validation/datalink-edit-validation.component';\nimport { DatalinkRunPlanComponent } from './run-plan/datalink-run-plan.component';\n\nimport { StandardFunctionEditComponent }  from './standard-function-edit';\nimport { CustomFunctionEditComponent }  from './custom-function-edit';\nimport { MappingEditComponent } from './mapping-edit';\nimport { DatalinkEditGuard } from './datalink-edit-guard';\nimport { PreviewDataComponent } from './preview-data';\nimport { PreviewTableComponent} from './preview-table';\nimport { TransformTableEditComponent } from './transform-table-edit/transform-table-edit.component';\nimport { DatalinkEditNewTransformComponent } from './new-transform/datalink-edit-new-transform.component';\nimport { TargetTableColumnComponent } from './target-table-column/target-table-column.component';\nimport { DatalinkColumnEditComponent } from './datalink-column-edit/datalink-column-edit.component'\nimport { ResultsIndexComponent, ResultsViewComponent } from '../../results';\nimport { UnGroupEditComponent } from './unGroup-edit';\nimport { DatalinkEditTargetTableComponent } from './target/datalink-edit-target-table.component';\n\nexport const standardFunctionRoutes: Routes = [\n    {path: '', canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent, data: { pageTitle: 'Standard Function' }},\n    {path: ':functionType', canDeactivate: [DatalinkEditGuard],\n        component: StandardFunctionEditComponent, data: { pageTitle: 'Standard Function' }},\n    {path: ':functionType/:datalinkTransformItemKey',\n        canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent, data: { pageTitle: 'Standard Function' }},\n//    {path: 'edit-column/:columnKey', component: TableColumnEditComponent, data: { pageTitle: 'Edit Column', action: 'edit'}}\n]\n\nexport const customFunctionRoutes: Routes = [\n    {path: '', canDeactivate: [DatalinkEditGuard], component: CustomFunctionEditComponent, data: { pageTitle: 'Custom Function' }},\n//    {path: 'edit-column/:columnKey', component: TableColumnEditComponent, data: { pageTitle: 'Edit Column', action: 'edit'}}\n]\n\nexport const mappingEditRoutes: Routes = [\n    {path: '', canDeactivate: [DatalinkEditGuard], component: MappingEditComponent, data: { pageTitle: 'Mapping' }},\n//    {path: 'edit-column/:columnKey', component: TableColumnEditComponent, data: { pageTitle: 'Edit Column', action: 'edit'}}\n]\n\nexport const sourceTableRoutes: Routes = [\n    { path: '', pathMatch: 'full', component: DatalinkEditSourceTableComponent},\n    { path: 'preview-table-data/table/:tableKey', component: PreviewTableComponent,\n        data: { pageTitle: 'Preview Table', action: 'preview'} },\n    { path: 'preview-table-data/datalink/:datalinkKey', component: PreviewTableComponent,\n        data: { pageTitle: 'Preview Datalink', action: 'preview'} },\n    { path: 'column/:datalinkColumnKey', component: DatalinkColumnEditComponent,\n        data: { pageTitle: 'Edit Column', action: 'edit'} },\n    { path: 'newcolumn', component: DatalinkColumnEditComponent,\n        data: { pageTitle: 'New Column', action: 'new'} },\n    { path: 'table-edit/:tableKey', data: { pageTitle: 'Edit Table', action: 'edit'},\n            loadChildren: () => import('../../table/table-edit/table-edit.module').then(m => m.TableEditModule)},\n];\n\nexport const targetRoutes: Routes = [\n    { path: '', pathMatch: 'full', component: DatalinkEditTargetComponent},\n    { path: 'table-edit/:targetKey', data: { pageTitle: 'Edit Target Table', action: 'edit'}, children: [\n        { path: '', pathMatch: 'full', canDeactivate: [DatalinkEditGuard], component: DatalinkEditTargetTableComponent },\n        { path: 'preview-table-data/:tableKey', component: PreviewTableComponent,\n            data: { pageTitle: 'Preview Table', action: 'preview'} },\n        ]},\n    { path: 'table-new', data: { pageTitle: 'New Target Table', action: 'new'}, children: [\n        { path: '', pathMatch: 'full', canDeactivate: [DatalinkEditGuard], component: DatalinkEditTargetTableComponent },\n        { path: 'preview-table-data/:tableKey', component: PreviewTableComponent,\n            data: { pageTitle: 'Preview Table', action: 'preview'} },\n        ]},\n];\n\nexport const validationRoutes: Routes = [\n    {path: '', pathMatch: 'full', component: DatalinkEditValidationComponent, data: { pageTitle: 'Validation' } },\n    { path: 'standard-function-edit', data: { pageTitle: 'Standard Function' },\n        canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent },\n    { path: 'standard-function-edit/:functionType', data: { pageTitle: 'Standard Function' },\n        canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent },\n    { path: 'standard-function-edit/:functionType/:datalinkTransformItemKey', data: { pageTitle: 'Standard Function' },\n        canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent },\n    { path: 'custom-function-edit', data: { pageTitle: 'Custom Function' },\n        canDeactivate: [DatalinkEditGuard], component: CustomFunctionEditComponent },\n    { path: 'custom-function-edit/:functionType', data: { pageTitle: 'Custom Function' },\n        canDeactivate: [DatalinkEditGuard], component: CustomFunctionEditComponent },\n    { path: 'column/:datalinkColumnKey', component: DatalinkColumnEditComponent,\n        data: { pageTitle: 'Edit Column', action: 'edit'} },\n];\n\nexport const datalinkEditRoutes: Routes = [\n    { path: '', redirectTo: 'properties'},\n\n    { path: 'properties', component: DatalinkEditPropertiesComponent, data: { pageTitle: 'Properties', help: 'datalink.md' } },\n    { path: 'source', data: { pageTitle: 'Source'}, children: sourceTableRoutes },\n    { path: 'target', data: { pageTitle: 'Target'}, children: targetRoutes },\n    { path: 'validation', data: { pageTitle: 'Validation' }, children: validationRoutes},\n    { path: 'profiles', component: DatalinkEditProfileRulesComponent, data: { pageTitle: 'Profile Rules' } },\n    { path: 'new/:position', component: DatalinkEditNewTransformComponent, data: {pageTitle: 'New Transform'}},\n    { path: 'transform/:datalinkTransformKey', data: { pageTitle: 'Transform' } , children: [\n        { path: '', pathMatch: 'full', component: DatalinkEditTransformComponent },\n        { path: 'table-edit/:tableKey', data: { pageTitle: 'Edit Table', action: 'edit'},\n                loadChildren: () => import('../../table/table-edit/table-edit.module').then(m => m.TableEditModule)},\n        { path: 'standard-function-edit', data: { pageTitle: 'Standard Function' },\n            canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent },\n        { path: 'standard-function-edit/:functionType', data: { pageTitle: 'Standard Function' },\n            canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent },\n        { path: 'standard-function-edit/:functionType/:datalinkTransformItemKey', data: { pageTitle: 'Standard Function' },\n            canDeactivate: [DatalinkEditGuard], component: StandardFunctionEditComponent },\n        { path: 'custom-function-edit', data: { pageTitle: 'Custom Function', help: 'function.md' },\n            canDeactivate: [DatalinkEditGuard], component: CustomFunctionEditComponent },\n        { path: 'custom-function-edit/:functionType', data: { pageTitle: 'Custom Function', help: 'function.md' },\n            canDeactivate: [DatalinkEditGuard], component: CustomFunctionEditComponent },\n        { path: 'custom-function-edit/:functionType/:datalinkTransformItemKey',\n            data: { pageTitle: 'Custom Function', help: 'function.md' },\n            canDeactivate: [DatalinkEditGuard], component: CustomFunctionEditComponent },\n        { path: 'mapping-edit/:type', data: { pageTitle: 'Mapping Edit' },\n            canDeactivate: [DatalinkEditGuard], component: MappingEditComponent },\n        { path: 'mapping-edit/:type/:datalinkTransformItemKey', data: { pageTitle: 'Mapping Edit' },\n            component: MappingEditComponent },\n        { path: 'unGroup-edit', data: { pageTitle: 'Un-Group Edit' },\n            component: UnGroupEditComponent },\n        { path: 'unGroup-edit/:datalinkTransformItemKey', data: { pageTitle: 'Un-Group Edit' },\n            component: UnGroupEditComponent },\n        { path: 'preview-transform-data', data: { pageTitle: 'Preview Data' },\n            component: PreviewDataComponent },\n        { path: 'transform-table-edit', data: { pageTitle: 'Transform Table Edit' },\n            component: TransformTableEditComponent },\n        { path: 'column/:datalinkColumnKey', component: DatalinkColumnEditComponent,\n            data: { pageTitle: 'Edit Column', action: 'edit'} },\n    ] },\n\n    { path: 'run-plan', component: DatalinkRunPlanComponent, data: { pageTitle: 'Run Plan' } },\n    { path: 'result-view/:auditConnectionKey/:auditKey', component: ResultsViewComponent, data: { pageTitle: 'Detailed Result' } },\n    { path: 'preview-table-data/datalink/:datalinkKey', component: PreviewTableComponent,\n    data: { pageTitle: 'Preview Datalink', action: 'preview'} },\n\n];\n\nexport const routes: Routes = [\n        { path: 'new', component: DatalinkEditComponent, canDeactivate: [DatalinkEditGuard],\n            data: { action: 'new', navigateSkip: true, pageTitle: 'New Datalink' }, children: datalinkEditRoutes},\n        { path: 'edit/:datalinkKey', component: DatalinkEditComponent, canDeactivate: [DatalinkEditGuard],\n            data: { action: 'edit', navigateSkip: true, pageTitle: 'Edit Datalink' }, children: datalinkEditRoutes},\n        { path: 'copy/:datalinkKey', component: DatalinkEditComponent, canDeactivate: [DatalinkEditGuard],\n            data: { action: 'copy', navigateSkip: true, pageTitle: 'Copy Datalink' }, children: datalinkEditRoutes},\n        { path: 'sourceTable/:sourceTableKey', component: DatalinkEditComponent, canDeactivate: [DatalinkEditGuard],\n            data: { action: 'sourceTable', navigateSkip: true, pageTitle: 'Edit Datalink' }, children: datalinkEditRoutes}\n];\n\nexport const Routing = RouterModule.forChild(routes);\n","import { Injectable, OnDestroy, OnInit } from '@angular/core';\nimport { FormArray, FormGroup } from '@angular/forms';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { eLogLevel, LogFactory } from '../../../../logging';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { InputOutputColumns } from '../../hub.lineage.models';\nimport { HubService } from '../../hub.service';\nimport { TransformReference } from '../../hub.remote.models';\nimport { CancelToken } from '../../../+auth/auth.models';\nimport { HubCache } from '../../hub.models';\nimport { eTransformType, DexihDatalinkColumn, eParameterDirection, eTypeCode, DexihDatalinkTransformItem,\n    DexihDatalinkTransform, DexihDatalinkTable, eTransformItemType, eSourceType, eFunctionType, RemoteLibraries } from '../../../shared/shared.models';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n// contains shared objects used to edit the datalink.\n\n@Injectable()\nexport class DatalinkEditService implements OnInit, OnDestroy {\n\n    private _hubCache: HubCache;\n\n    public showAllErrors = false;\n\n    public datalinkKey: number;\n\n    public logger = new LogFactory('datalink-edit.service');\n\n    public remoteLibraries: RemoteLibraries;\n\n    // used to stop save occurring when changing functions and target ables.\n    savingDatalink = new BehaviorSubject(false);\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        public hubFormsService: HubFormsService) {\n    }\n\n    ngOnInit() {\n    }\n\n    public init(hubCache: HubCache) {\n        this._hubCache = hubCache;\n\n        this.hubService.getRemoteLibrariesPromise().then(remoteLibraries => this.remoteLibraries = remoteLibraries)\n    }\n\n    ngOnDestroy() {\n        this.hubFormsService.ngOnDestroy();\n    }\n\n    savingDataLinkObservable(): Observable<boolean> {\n        return this.savingDatalink.asObservable();\n    }\n\n    getValidationTransform(): FormGroup {\n        this.logger.LogC(() => `getValidationTransform`, eLogLevel.Trace);\n\n        let datalinkForm = this.hubFormsService.currentForm;\n        let datalinkTransforms = <FormArray>datalinkForm.controls['dexihDatalinkTransforms'];\n        let datalinkTransform = <FormGroup>datalinkTransforms.controls\n            .find(c => c.value.transformType === eTransformType.Validation);\n\n        return datalinkTransform;\n    }\n    \n    enableValidation(): FormGroup {\n        let transform = this.getValidationTransform();\n        if (!transform) {\n            let transform = this.remoteLibraries.transforms.find(c => c.transformType === eTransformType.Validation);\n            return this.insertDatalinkTransform(1, transform);\n        }\n\n        return transform;\n    }\n\n    disableValidation() {\n        let transform = this.getValidationTransform();\n        if (transform) {\n            this.deleteDatalinkTransform(transform.value);\n        }\n    }\n\n    getDatalinkTransform(datalinkTransformKey: number): FormGroup {\n        this.logger.LogC(() => `getDatalinkTransform`, eLogLevel.Trace);\n\n        let datalinkForm = this.hubFormsService.currentForm;\n        let datalinkTransforms = <FormArray>datalinkForm.controls['dexihDatalinkTransforms'];\n\n        let datalinkTransform = <FormGroup>datalinkTransforms.controls\n            .find(c => c.value.key === datalinkTransformKey);\n\n        return datalinkTransform;\n    }\n\n    getDatalinkTransformItem(datalinkTransformForm: FormGroup, datalinkTransformItemKey: number): FormGroup {\n        this.logger.LogC(() => `getDatalinkTransformItem, key:${datalinkTransformItemKey}.`, eLogLevel.Trace);\n\n        let datalinkTransformItems = <FormArray>datalinkTransformForm.controls['dexihDatalinkTransformItems'];\n        let datalinkTransformItem = <FormGroup>datalinkTransformItems.controls\n            .find(c => c.value.key === datalinkTransformItemKey);\n\n        this.logger.LogC(() => `getDatalinkTransformItem finished.`, eLogLevel.Trace);\n\n        return datalinkTransformItem;\n    }\n\n     // fixes the key mappings when a transform is removed or columns are refreshed\n     fixMappings(datalinkForm: FormGroup) {\n        let io = new InputOutputColumns();\n        let datalinkTransforms = <FormArray> datalinkForm.controls.dexihDatalinkTransforms;\n        datalinkTransforms.controls.forEach((datalinkTransformForm: FormGroup) => {\n            let inputColumns = <DexihDatalinkColumn[]> datalinkTransformForm.controls.runTime.value.inputColumns;\n            let joinColumns = null;\n            if (datalinkTransformForm.value.joinDatalinkTable) {\n                joinColumns = datalinkTransformForm.value.joinDatalinkTable.dexihDatalinkColumns;\n            }\n\n            let nodeColumns = this.getNodeColumns(inputColumns);\n\n            this.fixMapping(nodeColumns, <FormGroup> datalinkTransformForm.controls.nodeDatalinkColumn);\n            this.fixMapping(joinColumns, <FormGroup> datalinkTransformForm.controls.joinSortDatalinkColumn);\n\n            // set the inputcolumns to the current node level.\n            if (datalinkTransformForm.controls.nodeDatalinkColumn.value) {\n                inputColumns = io.getAvailableColumns(inputColumns, datalinkTransformForm.controls.nodeDatalinkColumn.value.key , 0)\n            }\n\n            let items = <FormArray> datalinkTransformForm.controls.dexihDatalinkTransformItems;\n            items.controls.forEach((item: FormGroup) => {\n                this.fixMapping(inputColumns, <FormGroup> item.controls.sourceDatalinkColumn);\n                this.fixMapping(joinColumns, <FormGroup> item.controls.joinDatalinkColumn);\n                this.fixMapping(inputColumns, <FormGroup> item.controls.filterDatalinkColumn);\n\n                let parameters = <FormArray> item.controls.dexihFunctionParameters;\n                parameters.controls.forEach((parameter: FormGroup) => {\n                    switch (parameter.controls.direction.value) {\n                        case eParameterDirection.Input:\n                            this.fixMapping(inputColumns, <FormGroup> parameter.controls.datalinkColumn);\n                            break;\n                        case eParameterDirection.Join:\n                            this.fixMapping(joinColumns, <FormGroup> parameter.controls.datalinkColumn);\n                            break;\n                    }\n\n                    let arrayParameters = <FormArray> parameter.controls.arrayParameters;\n                    arrayParameters.controls.forEach((arrayParameter: FormGroup) => {\n                        switch (arrayParameter.controls.direction.value) {\n                            case eParameterDirection.Input:\n                                this.fixMapping(inputColumns, <FormGroup> arrayParameter.controls.datalinkColumn);\n                                break;\n                            case eParameterDirection.Join:\n                                this.fixMapping(joinColumns, <FormGroup> arrayParameter.controls.datalinkColumn);\n                                break;\n                        }\n                    });\n                });\n            });\n        });\n    }\n\n    private getNodeColumns(columns: DexihDatalinkColumn[]): DexihDatalinkColumn[] {\n        let nodes: DexihDatalinkColumn[] = [];\n        if (columns) {\n            columns.filter(c => c.dataType === eTypeCode.Node && c.isValid).forEach(col => {\n                nodes.push(col);\n                if (col.childColumns && col.childColumns.length > 0) {\n                    nodes = nodes.concat(this.getNodeColumns(col.childColumns));\n                }\n            });\n        }\n\n        return nodes;\n    }\n\n    private fixMapping(inputColumns: DexihDatalinkColumn[], columnForm: FormGroup) {\n        let column  = <DexihDatalinkColumn> columnForm.value;\n        if (!inputColumns || !column) { return; }\n\n        if (inputColumns.findIndex(c => c.key === column.key) < 0) {\n            let inputColumn = inputColumns\n                .find(c => c.name === column.name && c.columnGroup === column.columnGroup);\n            if (!inputColumn) {\n                inputColumn = inputColumns.find(c => c.name === column.name);\n            }\n\n            if (inputColumn) {\n                columnForm.setValue(inputColumn);\n            }\n        }\n    }\n\n    public getFunctionType(datalinkTransform: DexihDatalinkTransform): eFunctionType {\n        let functionType: eFunctionType;\n        switch (datalinkTransform.transformType) {\n            case eTransformType.Filter:\n                functionType = eFunctionType.Condition;\n                break;\n            case eTransformType.Mapping:\n                functionType = eFunctionType.Map;\n                break;\n            case eTransformType.Join:\n                functionType = eFunctionType.JoinCondition;\n                break;\n            case eTransformType.Group:\n            case eTransformType.Aggregate:\n                functionType = eFunctionType.Aggregate;\n                break;\n            case eTransformType.Series:\n                functionType = eFunctionType.Series;\n                break;\n            case eTransformType.Sort:\n                functionType = eFunctionType.Sort;\n                break;\n            case eTransformType.Validation:\n                functionType = eFunctionType.Validate;\n                break;\n            case eTransformType.Rows:\n                functionType = eFunctionType.Rows;\n                break;\n            case eTransformType.Lookup:\n                functionType = eFunctionType.JoinCondition;\n                break;\n            case eTransformType.Delta:\n                break;\n        }\n\n        return functionType;\n    }\n\n    public getVariables(): string[] {\n        let variables = this.hubFormsService.currentForm.controls.parameters.value.map(c => '{' + c.name + '}')\n        .concat(this._hubCache.hub.dexihHubVariables.map(c => '{' + c.name + '}'));\n\n        return variables;\n    }\n\n    public getColumnGroups(columns: DexihDatalinkColumn[]): Array<{ group: string, columns: Array<DexihDatalinkColumn> }> {\n        let previousGroup: string = null;\n\n        let columnGroups: Array<{ group: string, columns: Array<DexihDatalinkColumn> }> = [];\n        let cols: Array<DexihDatalinkColumn> = null;\n\n        columns\n            .filter(c => c.isValid)\n            .sort((a, b) => a.position - b.position)\n            .forEach(column => {\n                let group = column.columnGroup ? column.columnGroup : '(un-grouped)';\n                if (group !== previousGroup) {\n                    if (cols) {\n                        columnGroups.push({ group: previousGroup, columns: cols });\n                    }\n                    previousGroup = group;\n                    cols = [];\n                }\n                cols.push(column);\n            });\n\n        if (cols && cols.length > 0) {\n            columnGroups.push({ group: previousGroup, columns: cols });\n        }\n\n        return columnGroups;\n    }\n\n    insertDatalinkTransformItem(datalinkTransformForm: FormGroup, datalinkTransformItemForm: FormGroup): DexihDatalinkTransformItem {\n        this.logger.LogC(() => `insertDatalinkTransformItem`, eLogLevel.Trace);\n\n        let datalinkTransformItem = <DexihDatalinkTransformItem> datalinkTransformItemForm.value;\n\n        let datalinkTransformItemsArray = (<FormArray>datalinkTransformForm.controls['dexihDatalinkTransformItems']);\n        // use temporary negative keys for items which have not been saved.\n        if (!datalinkTransformItem.key) {\n            datalinkTransformItem.key = this._hubCache.getNextSequence();\n            if (datalinkTransformItemsArray.controls.length === 0) {\n                datalinkTransformItem.position = 1;\n            } else {\n                datalinkTransformItem.position = Math.max.apply(Math, datalinkTransformItemsArray.controls.map(o => o.value.position)) + 1;\n            }\n            let form = this.hubFormsService.datalinkDatalinkTransformItemFormGroup(datalinkTransformForm, datalinkTransformItem);\n            datalinkTransformItemsArray.push(form);\n        } else {\n            // existing item? lookup previous item and copy the updated values across.\n            let currentIndex = datalinkTransformItemsArray.controls\n                .findIndex(c => c.value['key'] === datalinkTransformItem.key);\n            datalinkTransformItemsArray.removeAt(currentIndex);\n\n            let form = this.hubFormsService.datalinkDatalinkTransformItemFormGroup(datalinkTransformForm, datalinkTransformItem);\n            datalinkTransformItemsArray.push(form);\n        }\n\n        this.fixMappings(this.hubFormsService.currentForm);\n\n        this.logger.LogC(() => `insertDatalinkTransformItem finished`, eLogLevel.Trace);\n\n        return datalinkTransformItem;\n    }\n\n    deleteDatalinkTransformItem(datalinkTransformForm: FormGroup, datalinkTransformItemForm: FormGroup) {\n        this.logger.LogC(() => `deleteDatalinkTransformItem`, eLogLevel.Trace);\n\n        let datalinkTransformItems = <FormArray>datalinkTransformForm.controls['dexihDatalinkTransformItems'];\n        let index = datalinkTransformItems.controls.indexOf(datalinkTransformItemForm);\n        datalinkTransformItems.removeAt(index);\n\n        this.fixMappings(this.hubFormsService.currentForm);\n    }\n\n    deleteDatalinkTarget(datalinkForm: FormGroup, datalinkTargetKey: Number) {\n        this.logger.LogC(() => `deleteDatalinkTarget`, eLogLevel.Trace);\n\n        let datalinkTargets = <FormArray>datalinkForm.controls['dexihDatalinkTargets'];\n        let index = datalinkTargets.controls.findIndex(c => c.value.key === datalinkTargetKey);\n        if (index >= 0) {\n            datalinkTargets.removeAt(index);\n        }\n    }\n\n    insertDatalinkTransform(position: number, transform: TransformReference): FormGroup {\n        this.logger.LogC(() => `insertDatalinkTransform`, eLogLevel.Trace);\n\n        let datalinkForm = this.hubFormsService.currentForm;\n        let datalinkTransforms = <FormArray>datalinkForm.controls['dexihDatalinkTransforms'];\n\n        let newDatalinkTransform = new DexihDatalinkTransform();\n\n        // use temporary negative keys for datalink transforms which have not been saved.\n        let minKey = -1;\n        datalinkTransforms.controls.forEach(dt => {\n            if (dt.value['key'] <= minKey) {\n                minKey = dt.value['key'] - 1;\n            }\n        });\n\n        this.logger.LogC(() => `insertDatalinkTransform key:${minKey}`, eLogLevel.Trace);\n\n        newDatalinkTransform.key = minKey;\n        newDatalinkTransform.transformType = transform.transformType;\n        newDatalinkTransform.transformAssemblyName = transform.transformAssemblyName;\n        newDatalinkTransform.transformClassName = transform.transformClassName;\n        // newDatalinkTransform.name = transform.name;\n        // newDatalinkTransform.description = transform.description;\n        newDatalinkTransform.dexihDatalinkTransformItems = new Array<DexihDatalinkTransformItem>();\n        newDatalinkTransform.isValid = true;\n\n        // default pass-through columns off for map, group, and row transforms.\n        switch (transform.transformType) {\n            case eTransformType.Group:\n            case eTransformType.Rows:\n            case eTransformType.Mapping:\n                newDatalinkTransform.passThroughColumns = false;\n                break;\n            default:\n                newDatalinkTransform.passThroughColumns = true;\n        }\n\n        if (transform.transformType === eTransformType.Join\n            || transform.transformType === eTransformType.Lookup || transform.transformType === eTransformType.Concatenate) {\n            newDatalinkTransform.joinDatalinkTable = new DexihDatalinkTable();\n            newDatalinkTransform.joinDatalinkTable.key = this._hubCache.getNextSequence();\n        }\n\n        if (transform.transformType === eTransformType.Series) {\n            let seriesItem = new DexihDatalinkTransformItem();\n            seriesItem.transformItemType = eTransformItemType.Series;\n            seriesItem.position = 0;\n            seriesItem.isValid = true;\n            newDatalinkTransform.dexihDatalinkTransformItems.push(seriesItem);\n        }\n\n        newDatalinkTransform.position = position;\n\n        let datalinkTransformForm = this.hubFormsService.datalinkTransformFormGroup(newDatalinkTransform);\n        datalinkTransforms.push(datalinkTransformForm);\n\n        this.resetDatalinkTransformPositions();\n\n        this.logger.LogC(() => `insertDatalinkTransform finished.`, eLogLevel.Trace);\n\n        return datalinkTransformForm;\n    }\n\n    deleteDatalinkTransform(datalinkTransform: DexihDatalinkTransform): Promise<boolean> {\n        return new Promise<boolean>((resolve) => {\n            this.authService.confirmDialog('Delete Transform',\n                `Are you sure you would like to remove the transform ${datalinkTransform.name}?`)\n                .then(confirm => {\n                    if (confirm) {\n                        let datalinkForm = this.hubFormsService.currentForm;\n                        let datalinkTransforms = <FormArray>datalinkForm.controls['dexihDatalinkTransforms'];\n                        let index = datalinkTransforms.controls\n                            .findIndex(c => c.value.key === datalinkTransform.key);\n                        datalinkTransforms.removeAt(index);\n                        this.resetDatalinkTransformPositions();\n                    }\n                    resolve(confirm);\n                }).catch(() => {\n                    resolve(false);\n                });\n        });\n    }\n\n    async resetDatalinkTransformPositions() {\n        const datalinkForm = this.hubFormsService.currentForm;\n        const datalinkTransforms = <FormArray>datalinkForm.controls.dexihDatalinkTransforms;\n\n        let userConfigTransforms = await this.hubService.GetUserConfigTransformReference();\n\n        let position = 10;\n        datalinkTransforms.controls.sort((a, b) => a.value.position - b.value.position).forEach(datalinkTransform => {\n            const dt = <FormGroup>datalinkTransform;\n\n            let transformReference = userConfigTransforms.find(e => e.transformClassName === datalinkTransform.value.transformClassName);\n\n            // if the transform is a validation/delta, then position at the end.\n            if (transformReference) {\n                dt.controls.position.setValue(position);\n                position += 10;\n            } else {\n                dt.controls.position.setValue(1000000);\n            }\n        });\n    }\n\n    importFunctionMappings(datalinkTransformKey: number, item: DexihDatalinkTransformItem, cancelToken: CancelToken):\n        Promise<string[]> {\n\n        let datalink = this.hubFormsService.getDatalinkValue();\n        const cache = this._hubCache;\n\n        return this.hubService.hubPostRemote<string[]>('/api/Hub/ImportFunctionMappings', {\n            hubKey: cache.hub.hubKey,\n            remoteAgentId: this.hubService.getCurrentRemoteAgentId(),\n            datalink: datalink,\n            datalinkTransformKey: datalinkTransformKey,\n            datalinkTransformItem: item\n        }, 'Importing function mappings...', cancelToken);\n    }\n\n    reBuildDatalinkTable(datalinkTable: DexihDatalinkTable, confirm = false) {\n        if (confirm) {\n            // tslint:disable-next-line:max-line-length\n            this.authService.confirmDialog('Rebuild Columns?', `This action will load the selected table columns, and replace or delete any existing columns.  This may require fixing some mappings.  Do you want to proceed?`)\n                .then((confirm2) => {\n                    if (confirm2) {\n                    this.doRebuildDatalinkTable(datalinkTable)\n                    }\n                }).catch();\n        } else {\n            this.doRebuildDatalinkTable(datalinkTable);\n        }\n    }\n\n    private doRebuildDatalinkTable(datalinkTable: DexihDatalinkTable) {\n\n        datalinkTable.dexihDatalinkColumns.forEach(datalinkColumn => datalinkColumn.isValid = false);\n\n        switch (datalinkTable.sourceType) {\n            case eSourceType.Table:\n                let sourceTable = this._hubCache.getTable(datalinkTable.sourceTableKey);\n                if (sourceTable) {\n                    datalinkTable.name = sourceTable.name;\n\n                    datalinkTable.dexihDatalinkColumns = this.mergeDatalinkColumns(\n                        datalinkTable.name, datalinkTable.key,\n                        sourceTable.dexihTableColumns, datalinkTable.dexihDatalinkColumns);\n\n                }\n                break;\n            case eSourceType.Datalink:\n                let datalink = this._hubCache.hub.dexihDatalinks.find(c => c.key === datalinkTable.sourceDatalinkKey);\n                if (datalink) {\n                    datalinkTable.name = datalink.name;\n\n                    let io = new InputOutputColumns();\n                    // const datalinkColumns = io.getInputColumns(this._hubCache, datalink, null, []);\n                    io.buildInputOutput(datalink);\n\n                    let datalinkColumns: DexihDatalinkColumn[];\n\n                    if (datalink.dexihDatalinkTransforms.length === 0) {\n                        datalinkColumns = datalink.sourceDatalinkTable.dexihDatalinkColumns;\n                    } else {\n                        let transforms = datalink.dexihDatalinkTransforms.sort((a, b) => a.position - b.position);\n                        let transform = transforms[transforms.length - 1];\n                        datalinkColumns = transform['runTime'].outputColumns;\n                    }\n\n                    datalinkTable.dexihDatalinkColumns = this.mergeDatalinkColumns(\n                        datalinkTable.name, datalinkTable.key,\n                        datalinkColumns, datalinkTable.dexihDatalinkColumns);\n                }\n                break;\n            case eSourceType.Rows:\n                datalinkTable.name = 'Static Row Set';\n\n                let rowDatalinkColumn = datalinkTable.dexihDatalinkColumns.find(c => c.name === 'RowNumber');\n                if (!rowDatalinkColumn) {\n                    rowDatalinkColumn = new DexihDatalinkColumn();\n                    rowDatalinkColumn.key = this._hubCache.getNextSequence();\n                    rowDatalinkColumn.datalinkTableKey = datalinkTable.key;\n                    datalinkTable.dexihDatalinkColumns.push(rowDatalinkColumn);\n                }\n\n                rowDatalinkColumn.name = 'RowNumber';\n                rowDatalinkColumn.logicalName = rowDatalinkColumn.name;\n                rowDatalinkColumn.dataType = eTypeCode.Int32;\n                rowDatalinkColumn.isMandatory = true;\n                rowDatalinkColumn.isValid = true;\n                rowDatalinkColumn.description = 'The generated row number of the static row set';\n\n                break;\n        }\n    }\n\n    private mergeDatalinkColumns(groupName: string, datalinkTableKey: number,\n            newColumns: any, existingColumns: DexihDatalinkColumn[]): DexihDatalinkColumn[] {\n        newColumns.forEach(column => {\n            let datalinkColumn = existingColumns.find(c => c.name === column.name && c.columnGroup === groupName);\n            if (!datalinkColumn) {\n                datalinkColumn = existingColumns.find(c => c.name === column.name);\n            }\n            if (!datalinkColumn) {\n                datalinkColumn = new DexihDatalinkColumn();\n                datalinkColumn.key = this._hubCache.getNextSequence();\n                datalinkColumn.datalinkTableKey = datalinkTableKey;\n                existingColumns.push(datalinkColumn);\n            }\n\n            Object.keys(datalinkColumn).forEach(key => {\n                if (key === 'childColumns') {\n                    if (column[key] && column[key].length > 0) {\n                        datalinkColumn[key] = this.mergeDatalinkColumns(groupName, datalinkTableKey, column[key], datalinkColumn[key]);\n                    } else {\n                        datalinkColumn[key] = [];\n                    }\n                } else if (key !== 'key' && column[key]) {\n                    datalinkColumn[key] = column[key];\n                } else if (key === 'columnGroup') {\n                    if (groupName) {\n                        if (datalinkColumn[key] && datalinkColumn[key] !== groupName) {\n                            datalinkColumn[key] = groupName + '.' + datalinkColumn[key];\n                        } else {\n                            datalinkColumn[key] = groupName;\n                        }\n                    }\n                }\n            });\n        });\n\n        return existingColumns;\n    }\n\n}\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubCache, sourceTypes, ConnectionTables } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { Subscription, combineLatest, merge} from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { eSourceType, DexihDatalink, DexihDatalinkTable } from '../../../../shared/shared.models';\n\n@Component({\n    selector: 'datalink-table',\n    templateUrl: './datalink-table.component.html'\n})\n\nexport class DatalinkTableComponent implements OnInit, OnDestroy {\n    @Input() datalinkTableForm: FormGroup;\n\n    public errors: {};\n\n    private _subscription: Subscription;\n    private _datalinkTableSubscription: Subscription;\n\n    private hubCache: HubCache;\n\n    public eSourceType = eSourceType;\n    public sourceTypes = sourceTypes;\n\n    public connectionTables: ConnectionTables[] = [];\n    public datalinks: DexihDatalink[] = [];\n\n    public isVersioned = false;\n\n    constructor(\n        private hubService: HubService,\n        public datalinkEditService: DatalinkEditService) {\n        }\n\n    ngOnInit() {\n        this.errors = this.datalinkEditService.hubFormsService.getFormErrorMessages(this.datalinkTableForm, true);\n\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                this.hubCache = result[0];\n\n                this.subscribeDatalinkChanges();\n\n                if (this.hubCache && this.hubCache.isLoaded() && this.datalinkTableForm) {\n                    this.connectionTables = this.hubCache.getConnectionTables();\n                    this.datalinks = this.hubCache.hub.dexihDatalinks;\n                    this.updateIsVersioned();\n                }\n            });\n\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Selected datalink table');\n        }\n    }\n\n    updateIsVersioned() {\n        if (this.datalinkTableForm.controls.sourceType.value === eSourceType.Table) {\n            var table = this.hubCache.getTable(this.datalinkTableForm.controls.sourceTableKey.value);\n            if (table) {\n                this.isVersioned = table.isVersioned\n            }\n        }\n    }\n\n    subscribeDatalinkChanges() {\n        if (this._datalinkTableSubscription) { this._datalinkTableSubscription.unsubscribe(); }\n        this._datalinkTableSubscription = merge(\n            this.datalinkTableForm.controls.sourceType.valueChanges,\n            this.datalinkTableForm.controls.sourceTableKey.valueChanges,\n            this.datalinkTableForm.controls.sourceDatalinkKey.valueChanges,\n        ).subscribe(() => {\n            this.errors = this.datalinkEditService.hubFormsService.getFormErrorMessages(this.datalinkTableForm, true);\n            this.refreshColumns();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._datalinkTableSubscription) { this._datalinkTableSubscription.unsubscribe(); }\n    }\n\n    refreshColumns() {\n        try {\n            // temporarily unsubscribe to avoid a recursive loop.\n            if (this._datalinkTableSubscription) { this._datalinkTableSubscription.unsubscribe(); }\n\n            let datalinkTable = <DexihDatalinkTable>this.datalinkTableForm.value;\n            datalinkTable.sourceType = this.datalinkTableForm.controls.sourceType.value;\n            datalinkTable.sourceTableKey = this.datalinkTableForm.controls.sourceTableKey.value;\n            datalinkTable.sourceDatalinkKey = this.datalinkTableForm.controls.sourceDatalinkKey.value;\n\n            this.datalinkEditService.reBuildDatalinkTable(datalinkTable);\n            this.datalinkEditService.fixMappings(this.datalinkEditService.hubFormsService.currentForm);\n\n            this.datalinkTableForm.controls.name.setValue(datalinkTable.name);\n            this.datalinkTableForm.controls.rowsEndAt.setValue(datalinkTable.rowsEndAt);\n            this.datalinkTableForm.controls.rowsStartAt.setValue(datalinkTable.rowsStartAt);\n            this.datalinkTableForm.controls.rowsIncrement.setValue(datalinkTable.rowsIncrement);\n            this.datalinkTableForm.controls.sourceType.setValue(datalinkTable.sourceType);\n\n            this.updateIsVersioned();\n\n            let tableColumnsForm = <FormArray>this.datalinkTableForm.controls.dexihDatalinkColumns;\n            while (tableColumnsForm.length > 0) {\n                tableColumnsForm.removeAt(0);\n            }\n\n            datalinkTable.dexihDatalinkColumns.sort((a, b) => a.position - b.position).filter(c => c.isValid).forEach(column => {\n                tableColumnsForm.push(this.datalinkEditService.hubFormsService.datalinkTableColumn(tableColumnsForm.value, column));\n            });\n\n            this.subscribeDatalinkChanges();\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Refresh datalink columns');\n        }\n    }\n\n\n}\n","<form *ngIf=\"datalinkTableForm\"  [formGroup]=\"datalinkTableForm\">\n    <fieldset>\n        <section >\n            <form-select label=\"Data Source Type\" formControlName=\"sourceType\" [items]=\"sourceTypes\" itemKey=\"key\" itemName=\"name\"\n                iconClass=\"fa fa-database\"  note='Specify the source type for this table' [enableFilter]=\"false\">\n            </form-select>\n        </section>\n\n        <section *ngIf=\"datalinkTableForm.value.sourceType == eSourceType.Table\" >\n            <form-select label=\"Source Table\" formControlName=\"sourceTableKey\" [errors]=\"errors?.sourceTableKey\" [items]=\"connectionTables\" parentName=\"name\" childItems=\"dexihTables\" itemKey=\"key\" itemName=\"logicalName\"\n                note=\"Select the source table\" >\n                <table-edit-button [key]=\"datalinkTableForm.controls.sourceTableKey.value\"></table-edit-button>\n            </form-select>\n        </section>\n\n        <section *ngIf=\"datalinkTableForm.value.sourceType == eSourceType.Datalink\">\n            <form-select label=\"Source Datalink\" formControlName=\"sourceDatalinkKey\" [errors]=\"errors?.sourceDatalinkKey\" [items]=\"datalinks\" itemKey=\"key\" itemName=\"name\"\n                note='Select the source datalink'>\n                <datalink-edit-button [key]=\"datalinkTableForm.controls.sourceDatalinkKey.value\"></datalink-edit-button>\n            </form-select>\n        </section>\n\n        <section *ngIf=\"datalinkTableForm.value.sourceType == eSourceType.Rows\">\n            <div class=\"row\">\n                <div class=\"col-4\">\n                    <form-input label=\"Start At\" type=\"number\" formControlName=\"rowsStartAt\" placeholder=\"Enter start row number\"\n                        iconClass=\"fa fa-list\">\n                    </form-input>\n                </div>\n                <div class=\"col-4\">\n                    <form-input label=\"End At\" type=\"number\" formControlName=\"rowsEndAt\" placeholder=\"Enter end row number\"\n                        iconClass=\"fa fa-list\">\n                    </form-input>\n                </div>\n                <div class=\"col-4\">\n            \n                    <form-input label=\"Increment By\" type=\"number\" formControlName=\"rowsIncrement\"\n                        placeholder=\"Enter increment value\" iconClass=\"fa fa-list\">\n                    </form-input>\n                </div>\n            </div>\n        </section>\n\n        <section >\n            <form-checkbox label=\"Disable query logic being pushed down to the database\" formControlName=\"disablePushDown\"></form-checkbox>\n            <form-checkbox *ngIf=\"isVersioned\" label=\"Disable source table versions\" formControlName=\"disableVersioning\"></form-checkbox>\n\n            <form-input label=\"Table Alias\" formControlName=\"name\" \n                note='An alias that can be used to describe the table instance (this is generally used to differentiate self-joined tables).'>\n            </form-input>\n        </section>\n\n        <d-button-refresh (click)=\"refreshColumns()\" tooltip=\"Refresh the columns from the source table.\" ></d-button-refresh>\n    </fieldset>\n</form>","export { InputColumnsComponent } from './input-columns.component';\nexport { InputColumnComponent } from './input-column.component';\n","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { HubCache, eMappingStatus,\n    MappingStatusInfo, impactMappingStatuses, lineageMappingStatuses } from '../../../hub.models';\nimport { eObjectUse, ColumnUsageNode, InputOutputColumns, eDatalinkObjectType } from '../../../hub.lineage.models';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { DexihDatalinkColumn, eTypeCode } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'input-column',\n    templateUrl: './input-column.component.html'\n})\nexport class InputColumnComponent implements OnInit, OnDestroy {\n    @Input() public column: DexihDatalinkColumn = null;\n    @Input() public datalinkTransformForm: FormGroup;\n\n    private _subscription: Subscription;\n\n    private hubCache: HubCache;\n    private datalinkForm: FormGroup;\n\n    eMappingStatus = eMappingStatus;\n    eTypeCode = eTypeCode;\n\n    mappingStatusInfoImpact: MappingStatusInfo;\n    mappingStatusInfoLineage: MappingStatusInfo;\n\n    childColumns: DexihDatalinkColumn[];\n\n    constructor(\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n                this.hubCache = result[0];\n                this.datalinkForm = result[1];\n\n                let datalinkTransform = this.datalinkTransformForm.value;\n\n                let columnUsage: ColumnUsageNode = new ColumnUsageNode(\n                    eDatalinkObjectType.Transform,\n                    eObjectUse.Target,\n                    this.datalinkForm.value,\n                    this.column,\n                    null,\n                    datalinkTransform,\n                    null,\n                    eMappingStatus.NotMapped,\n                    this.hubCache\n                );\n\n                let mappingStatusImpact = columnUsage.createDatalinkImpact(false);\n                this.mappingStatusInfoImpact = impactMappingStatuses.find(c => c.key === mappingStatusImpact);\n\n                let mappingStatusLineage = columnUsage.createDatalinkLineage(true);\n                this.mappingStatusInfoLineage = lineageMappingStatuses.find(c => c.key === mappingStatusLineage);\n\n                let io = new InputOutputColumns();\n                if (io.findColumn(this.column,\n                    datalinkTransform.nodeDatalinkColumn ? datalinkTransform.nodeDatalinkColumn.key : null)) {\n                    this.childColumns = this.column.childColumns;\n                }\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Input Column');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n\n}\n","<div class=\"list-group-item p-0 rounded-0\" dragZone zone=\"input-column\" [data]=\"column\" zone=\"input-column\" >\n    <div class=\"d-flex flex-row\">\n        <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoLineage.statusClass\" [title]=\"mappingStatusInfoLineage.name\"></i>\n\n        <a class=\"flex-fill input-group-text ellipsis-overflow rounded-0 border-0\" style=\"overflow:hidden; text-overflow :ellipsis;\" \n         [title]=\"column.logicalName + ' ' + eTypeCode[column.dataType]\" >\n            {{column.logicalName}}\n        </a>\n        <i class=\"input-group-text rounded-0  border-0 border-l1\" [ngClass]=\"mappingStatusInfoImpact.statusClass\" [title]=\"mappingStatusInfoImpact.name\"></i>\n    </div>\n</div>\n<div *ngIf=\"childColumns?.length > 0\" class=\"p-2\">\n    <input-column *ngFor=\"let childColumn of childColumns\" [column]=\"childColumn\" [datalinkTransformForm]=\"datalinkTransformForm\"></input-column>\n</div>","import { Component, Input, OnInit, OnDestroy, OnChanges } from '@angular/core';\nimport { Subscription} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { DexihDatalinkColumn } from '../../../../shared/shared.models';\nimport { DatalinkEditService } from '../datalink-edit.service';\n\n@Component({\n\n    selector: 'input-columns',\n    templateUrl: './input-columns.component.html'\n})\nexport class InputColumnsComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() public datalinkTransformForm: FormGroup;\n\n    private _inputColumnsSubscribe: Subscription;\n    columns: Array<DexihDatalinkColumn> = [];\n    columnGroups: Array<{group: string, columns: Array<DexihDatalinkColumn>}> = [];\n\n    constructor(private editDatalinkService: DatalinkEditService) {\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnChanges() {\n        if (this._inputColumnsSubscribe) { this._inputColumnsSubscribe.unsubscribe(); }\n\n        this.columnGroups = this.editDatalinkService.getColumnGroups(this.datalinkTransformForm.controls.runTime.value.inputColumns);\n\n        this._inputColumnsSubscribe =  this.datalinkTransformForm.controls.runTime.valueChanges.subscribe(() => {\n            this.columnGroups = this.editDatalinkService.getColumnGroups(this.datalinkTransformForm.controls.runTime.value.inputColumns);\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._inputColumnsSubscribe) { this._inputColumnsSubscribe.unsubscribe(); }\n    }\n}\n","<div *ngIf=\"datalinkTransformForm\" cdkDropList #cdkDropList=\"cdkDropList\">\n    <span *ngFor=\"let table of inputTables; let tableIndex = index\">\n        <d-widget-section *ngIf=\"table.dexihDatalinkColumns.length > 0\" [title]=\"table.name\" [padding]=\"false\" [showExpandButton]=\"true\">\n            <div class=\"list-group\">\n                <input-column\n                    *ngFor=\"let column of table.dexihDatalinkColumns | fieldSort : 'position' | isValidFilter \"\n                    [datalinkTransformForm]='datalinkTransformForm' [column]='column'>\n                </input-column>\n            </div>\n        </d-widget-section>\n    </span>\n    <d-widget-section *ngFor=\"let columnGroup of columnGroups\" [title]=\"columnGroup.group\" [padding]=\"false\"  [showExpandButton]=\"true\" >\n        <div *ngFor=\"let column of columnGroup.columns | fieldSort : 'position' | isValidFilter; let i = index\">\n            <input-column [datalinkTransformForm]='datalinkTransformForm' [column]='column'>\n            </input-column>\n        </div>\n    </d-widget-section>\n</div>\n","export { JoinColumnComponent } from './join-column.component';\nexport { JoinColumnsComponent } from './join-columns.component';\n","import { Component, Input, Output, OnInit, OnDestroy, EventEmitter } from '@angular/core';\nimport { HubCache, eMappingStatus, MappingStatusInfo, lineageMappingStatuses, impactMappingStatuses } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { eObjectUse, ColumnUsageNode, eDatalinkObjectType } from '../../../hub.lineage.models';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { DexihDatalinkColumn, DexihTable, eTypeCode } from '../../../../shared/shared.models';\n\n\n@Component({\n    selector: 'join-column',\n    templateUrl: './join-column.component.html'\n})\nexport class JoinColumnComponent implements OnInit, OnDestroy {\n\n    @Input() public column: DexihDatalinkColumn = null;\n    @Input() public datalinkTransformForm: FormGroup;\n    @Input() public datalinkForm: FormGroup;\n    @Input() public inputTables: Array<DexihTable> = null;\n    @Output() public inputJoinDrop: EventEmitter<{inputColumn: DexihDatalinkColumn, joinColumn: DexihDatalinkColumn}>\n            = new EventEmitter<{inputColumn: DexihDatalinkColumn, joinColumn: DexihDatalinkColumn}>();\n\n    private _hubCacheSubscription: Subscription;\n\n    private hubCache: HubCache;\n\n    eMappingStatus = eMappingStatus;\n    eTypeCode = eTypeCode;\n\n    columnLineageStatusIcon: string;\n    columnLineageStatusColor: string;\n\n    public mappingStatusInfoImpact: MappingStatusInfo;\n    public mappingStatusInfoLineage: MappingStatusInfo;\n\n    constructor(private hubService: HubService) {\n    }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(hubCache => {\n            if (hubCache.isLoaded()) {\n                this.hubCache = hubCache;\n\n                let columnUsage = new ColumnUsageNode(\n                    eDatalinkObjectType.Transform,\n                    eObjectUse.Target,\n                    this.datalinkForm.value,\n                    this.column,\n                    null,\n                    this.datalinkTransformForm.value,\n                    null,\n                    eMappingStatus.NotMapped,\n                    this.hubCache\n                    );\n                let lineageMappingStatus = columnUsage.createDatalinkLineage(false);\n                this.mappingStatusInfoLineage = lineageMappingStatuses.find(c => c.key === lineageMappingStatus);\n\n                let impactMappingStatus = columnUsage.createDatalinkImpact(false);\n                this.mappingStatusInfoImpact = impactMappingStatuses.find(c => c.key === impactMappingStatus);\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n    }\n\n}\n","<div class=\"list-group-item p-0 rounded-0\">\n    <div class=\"d-flex flex-row\">\n        <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoLineage.statusClass\" [title]=\"mappingStatusInfoLineage.name\"></i>\n\n        <a *ngIf=\"mappingStatusInfoLineage.key != eMappingStatus.Joined\" class=\"flex-fill input-group-text ellipsis-overflow rounded-0 border-0\"\n            style=\"overflow:hidden; text-overflow :ellipsis;\" \n            [title]=\"column.logicalName + ' ' + eTypeCode[column.dataType]\">\n            {{column.logicalName}}\n        </a>\n        <a *ngIf=\"mappingStatusInfoLineage.key == eMappingStatus.Joined\" class=\"flex-fill input-group-text ellipsis-overflow rounded-0 border-0\"\n            style=\"overflow:hidden; text-overflow :ellipsis;\" [title]=\"column.logicalName + ' ' + eTypeCode[column.dataType]\">\n            {{column.logicalName}}\n        </a>\n        <i class=\"input-group-text rounded-0  border-0 border-l1\" [ngClass]=\"mappingStatusInfoImpact.statusClass\" [title]=\"mappingStatusInfoImpact.name\"></i>\n    </div>\n</div>","import { Component, Input, Output, OnInit, OnChanges, OnDestroy, EventEmitter } from '@angular/core';\nimport { HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { DexihDatalinkColumn, eTransformType } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'join-columns',\n    templateUrl: './join-columns.component.html'\n})\nexport class JoinColumnsComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() public datalinkTransformForm: FormGroup;\n\n    @Output() public inputJoinDrop: EventEmitter<{ inputColumn: DexihDatalinkColumn, joinColumn: DexihDatalinkColumn }>\n        = new EventEmitter<{ inputColumn: DexihDatalinkColumn, joinColumn: DexihDatalinkColumn }>();\n\n    private _subscription: Subscription;\n    private _changesSubscription: Subscription;\n\n    public joinTable;\n\n    public eTransformType = eTransformType;\n\n    public datalinkForm: FormGroup;\n\n    public joinColumns: Array<DexihDatalinkColumn>;\n\n    constructor(\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n    ) {\n    }\n\n    ngOnInit() {\n        try {\n\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n                this.datalinkForm = result[1];\n\n                if (this.datalinkForm) {\n                    this.updateTableData();\n                }\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Edit Custom Function');\n        }\n    }\n\n    ngOnChanges() {\n        this.updateTableData();\n        if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n        this._changesSubscription = this.datalinkTransformForm.controls.joinDatalinkTable.valueChanges.subscribe(() => {\n            this.updateTableData();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n    }\n\n    updateTableData() {\n        if (this.datalinkTransformForm && this.datalinkTransformForm.controls.joinDatalinkTable.value) {\n            this.joinTable = this.datalinkTransformForm.controls.joinDatalinkTable.value;\n            if (this.joinTable) {\n                this.joinColumns = new Array<DexihDatalinkColumn>();\n                this.joinTable.dexihDatalinkColumns.forEach(column => {\n                    this.joinColumns.push(column)\n                });\n            } else {\n                this.joinColumns = null;\n            }\n        } else {\n            this.joinColumns = null;\n        }\n    }\n\n    newInputJoinDrop(inputColumn: DexihDatalinkColumn, joinColumn: DexihDatalinkColumn) {\n        this.inputJoinDrop.emit({inputColumn, joinColumn});\n    }\n}\n","<div *ngIf=\"joinColumns\">\n    <d-widget-section [title]=\"joinTable?.name + '(' + eTransformType[this.datalinkTransformForm.value.transformType] + ')'\" [padding]=\"false\" [showExpandButton]=\"true\">\n        <join-column *ngFor=\"let column of joinColumns | fieldSort : 'position' | isValidFilter\"\n            [datalinkForm]='datalinkForm' [datalinkTransformForm]='datalinkTransformForm' [column]='column' dropZone\n            (dropData)=\"newInputJoinDrop($event, column)\" zone=\"input-column\" dropAllowedClass=\"drop-zone-green\">\n        </join-column>\n    </d-widget-section>\n</div>","export * from './mapping-edit.component';","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HubCache, sortDirections } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { FormGroup } from '@angular/forms';\nimport { compare } from '../../../hub.query.models';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { eTransformItemType, DexihDatalinkColumn, eAggregate, eCompare, \n  DexihDatalinkTransformItem, eTypeCode, DexihDatalinkTarget, DexihTable, DexihTableColumn, eAggregateItems } from '../../../../shared/shared.models';\n\n@Component({\n  selector: 'mapping-edit',\n  templateUrl: './mapping-edit.component.html'\n})\nexport class MappingEditComponent implements OnInit, OnDestroy {\n  public pageTitle: string;\n\n  private _subscription: Subscription;\n  private _formChangesObserve: Subscription;\n  private _saveSubscription: Subscription;\n\n  datalinkTransformItemKey: number;\n  datalinkKey: number;\n  datalinkTransformKey: number;\n\n  public hubCache: HubCache;\n\n  datalinkForm: FormGroup;\n  datalinkTransformForm: FormGroup;\n  datalinkTransformItemForm: FormGroup;\n  transformItemType: eTransformItemType;\n  eTransformItemType = eTransformItemType;\n\n  variables: string[];\n\n  newDatalinkTransformItemForm: FormGroup;\n  newColumn: DexihDatalinkColumn;\n  filterValue: any;\n  sourceValue: any;\n\n  inputColumns: Array<{group: string, columns: Array<DexihDatalinkColumn>}> = [];\n  outputColumns: Array<DexihDatalinkColumn>;\n  joinColumns: Array<DexihDatalinkColumn>;\n  datalinkTargets: Array<DexihDatalinkTarget>;\n  outputTables: Array<DexihTable>;\n  showInput = true;\n  showOutput = true;\n\n  eAggregate = eAggregate;\n  eAggregateItems = eAggregateItems.filter(c => c.key > 0);\n  compare = compare;\n  eCompare = eCompare;\n\n  sourceErrors: string;\n  targetErrors: string;\n  joinErrors: string;\n\n  sortDirections = sortDirections;\n\n  constructor(\n    private hubService: HubService,\n    private authService: AuthService,\n    private editDatalinkService: DatalinkEditService,\n    private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n        this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n        this.hubService.getRemoteLibrariesObservable()\n      ).subscribe(result => {\n        this.pageTitle = result[0]['pageTitle'];\n        let params = result[1];\n        this.hubCache = result[2];\n        let datalinkForm = result[3];\n\n        if (!this.hubCache.isLoaded()) { return; }\n\n        this.datalinkForm = datalinkForm;\n\n        this.variables = this.editDatalinkService.getVariables();\n\n        this.datalinkTransformItemKey = +params['datalinkTransformItemKey'];\n        this.datalinkTransformKey = +params['datalinkTransformKey'];\n        this.transformItemType = +params['type'];\n\n        if (this.datalinkForm) {\n          this.datalinkTransformForm = this.editDatalinkService.getDatalinkTransform(this.datalinkTransformKey);\n\n          switch (this.transformItemType) {\n              case eTransformItemType.JoinPair:\n                this.showInput = true;\n                this.showOutput = false;\n                this.pageTitle = 'Edit Join';\n                break;\n              case eTransformItemType.Column:\n              this.showInput = true;\n              this.showOutput = false;\n              this.pageTitle = 'Edit Group';\n                break;\n              case eTransformItemType.JoinNode:\n              this.showInput = false;\n              this.showOutput = true;\n                this.pageTitle = 'Edit Join Node';\n                break;\n              case eTransformItemType.GroupNode:\n              this.showInput = false;\n              this.showOutput = true;\n                this.pageTitle = 'Edit Group Node';\n                break;\n              case eTransformItemType.Sort:\n              this.showInput = true;\n              this.showOutput = false;\n                this.pageTitle = 'Edit Sort';\n                break;\n              case eTransformItemType.FilterPair:\n              this.showInput = true;\n              this.showOutput = false;\n                this.pageTitle = 'Edit Condition';\n                break;\n              case eTransformItemType.AggregatePair:\n                this.pageTitle = 'Edit Aggregate';\n                this.showInput = true;\n                this.showOutput = true;\n                break;\n              default:\n                this.pageTitle = 'Edit Mapping';\n                this.showInput = true;\n                this.showOutput = true;\n          }\n\n          let nodeDatalinkColumn = this.datalinkTransformForm.controls.nodeDatalinkColumn.value;\n          let nodeDatalinkColumnKey = nodeDatalinkColumn ? nodeDatalinkColumn.key : null;\n          let io = new InputOutputColumns();\n          if (nodeDatalinkColumnKey) {\n            let inputColumns = <DexihDatalinkColumn[]> this.datalinkTransformForm.controls.runTime.value.inputColumns;\n            let nodeColumns = io.getAvailableColumns(inputColumns, nodeDatalinkColumnKey, 0);\n            this.inputColumns = this.editDatalinkService.getColumnGroups(nodeColumns);\n            this.outputColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n          } else {\n            this.inputColumns = this.editDatalinkService.getColumnGroups(this.datalinkTransformForm.controls.runTime.value.inputColumns);\n            this.outputColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n          }\n          if (this.datalinkTransformForm.value.joinDatalinkTable) {\n            this.joinColumns = this.datalinkTransformForm.value.joinDatalinkTable.dexihDatalinkColumns;\n          }\n\n          this.datalinkTargets = this.datalinkForm.controls.dexihDatalinkTargets.value;\n          let table = new DexihTable() \n          table.name = \"Output Columns\";\n          table.dexihTableColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n          this.outputTables = [table];\n\n          if(this.datalinkTargets) {\n              this.datalinkTargets.forEach(target => {\n                  this.outputTables.push(target['table']);\n              });\n          }\n\n\n          if (this.datalinkTransformItemKey) {\n            this.datalinkTransformItemForm = this.editDatalinkService\n              .getDatalinkTransformItem(this.datalinkTransformForm, this.datalinkTransformItemKey);\n\n              this.filterValue = this.datalinkTransformItemForm.controls.filterValue.value;\n              this.sourceValue = this.datalinkTransformItemForm.controls.sourceValue.value;\n\n              // create a copy of the form item to allow for cancel.\n            this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n              .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, this.datalinkTransformItemForm.value);\n          } else {\n            let newItem = new DexihDatalinkTransformItem();\n            newItem.datalinkTransformKey = this.datalinkTransformKey;\n            newItem.transformItemType = this.transformItemType;\n\n            this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n              .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, newItem);\n          }\n\n          this.getErrors();\n          if (this._formChangesObserve) { this._formChangesObserve.unsubscribe(); }\n          this._formChangesObserve = this.newDatalinkTransformItemForm.statusChanges.subscribe(() => {\n            this.getErrors();\n          })\n        }\n\n        if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n        this._saveSubscription = this.editDatalinkService.savingDatalink.subscribe(value => {\n            if(value) {\n                this.apply();\n            }\n        });\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Edit Mapping Function');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._formChangesObserve) { this._formChangesObserve.unsubscribe(); }\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n  }\n\n  canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      if (this.newDatalinkTransformItemForm && !this.newDatalinkTransformItemForm.pristine) {\n        this.authService.confirmDialog('The mapping has changed',\n          'The function has changed.  Do you want to discard the changes and continue?')\n          .then((confirm) => {\n              resolve(confirm);\n            }).catch(() => {\n              resolve(false);\n            });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  cancel() {\n    this.newDatalinkTransformItemForm = null;\n    this.authService.navigateUp();\n  }\n\n  getErrors() {\n    this.targetErrors = this.editDatalinkService.hubFormsService.getErrorMessage(\n      this.newDatalinkTransformItemForm.controls.targetDatalinkColumn);\n    this.sourceErrors = this.editDatalinkService.hubFormsService.getErrorMessage(\n      this.newDatalinkTransformItemForm.controls.sourceDatalinkColumn);\n    this.joinErrors = this.editDatalinkService.hubFormsService.getErrorMessage(\n      this.newDatalinkTransformItemForm.controls.sourceDatalinkColumn);\n  }\n\n  apply() {\n    // this.datalinkTransformItemForm.setValue(this.newDatalinkTransformItemForm.value);\n    this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, this.newDatalinkTransformItemForm);\n  }\n\n  updateNewColumn(value: string) {\n    let current = this.newDatalinkTransformItemForm.controls.targetDatalinkColumn.value;\n    if (value && (!current || current.name !== value )) {\n      let key: number;\n      if (this.newColumn) {\n        key = this.newColumn.key;\n      } else {\n        key = this.hubService.getHubCache().getNextSequence();\n      }\n\n      let sourceColumn = <DexihDatalinkColumn>this.newDatalinkTransformItemForm.controls.sourceDatalinkColumn.value;\n\n      if (sourceColumn) {\n        let io = new InputOutputColumns();\n        this.newColumn = io.copyDatalinkColumn(sourceColumn, 1000 - key, 'mapping');\n      } else {\n        this.newColumn = new DexihDatalinkColumn();\n        this.newColumn.position = 1000 - key;\n\n        if (this.transformItemType === eTransformItemType.JoinNode) {\n          this.newColumn.dataType = eTypeCode.Node;\n          this.newColumn.childColumns = this.joinColumns;\n        } else {\n          this.newColumn.dataType = eTypeCode.String;\n        }\n      }\n\n      this.newColumn.name = value;\n      this.newColumn.logicalName = value;\n      this.newColumn.columnGroup = 'mapping';\n      this.newColumn.key = key;\n\n      this.newDatalinkTransformItemForm.controls.targetDatalinkColumn.setValue(this.newColumn);\n    }\n  }\n\n  updateFilterValue(value: string) {\n    if (value === this.newDatalinkTransformItemForm.controls.filterDatalinkColumn.value) {\n      this.newDatalinkTransformItemForm.controls.filterDatalinkColumn.setValue(null);\n    }\n      this.newDatalinkTransformItemForm.controls.filterValue.setValue(value);\n  }\n\n  updateSourceValue(value: string) {\n    if (value === this.newDatalinkTransformItemForm.controls.sourceDatalinkColumn.value) {\n      this.newDatalinkTransformItemForm.controls.sourceDatalinkColumn.setValue(null);\n    }\n    this.newDatalinkTransformItemForm.controls.sourceValue.setValue(value);\n  }\n\n  applyExit() {\n    this.apply();\n    this.authService.navigateUp();\n  }\n}\n\n","<div *ngIf=\"newDatalinkTransformItemForm && inputColumns && outputColumns\">\n\n\t<d-widget-section [title]=\"pageTitle\" [showExpandButton]=\"false\">\n\t\t<ng-template #header>\n\t\t\t<d-button-apply [disabled]=\"newDatalinkTransformItemForm.pristine\"\n\t\t\t\t(click)=\"!newDatalinkTransformItemForm.pristine && applyExit()\" class=\"mr-1\"></d-button-apply>\n\t\t\t<d-button-cancel (click)=\"cancel()\"></d-button-cancel>\n\t\t</ng-template>\n\t\t<form [formGroup]=\"newDatalinkTransformItemForm\">\n\t\t\t<fieldset>\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section *ngIf=\"transformItemType == eTransformItemType.AggregatePair\" class=\"form-group col-md-4\">\n\t\t\t\t\t\t<form-select label=\"Aggregate\" formControlName=\"aggregate\" [items]=\"eAggregateItems\" itemKey=\"key\"\n\t\t\t\t\t\t\titemName=\"name\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<section *ngIf=\"showInput\" class=\"form-group col-md-4\">\n\t\t\t\t\t\t<form-select label=\"Input Column\" formControlName=\"sourceDatalinkColumn\" [items]=\"inputColumns\"\n\t\t\t\t\t\t\tparentName=\"group\" childItems=\"columns\"\n\t\t\t\t\t\t\t[(textValue)]=\"sourceValue\" (textValueChange)=\"updateSourceValue($event)\"\n\t\t\t\t\t\t\t[allowNullSelect]=\"true\" selectNullMessage=\"(select null)\"\n\t\t\t\t\t\t\t[allowBlankSelect]=\"true\" selectBlankMessage=\"(select blank)\"\n\t\t\t\t\t\t\t[enableKeySelect]=\"false\"\n\t\t\t\t\t\t\t[enableTextEntry]=\"true\" [enableTextEntryMatch]=\"false\" itemName=\"logicalName\" itemKey=\"key\"\n\t\t\t\t\t\t\t[errors]=\"sourceErrors\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section *ngIf=\"transformItemType == eTransformItemType.FilterPair || transformItemType == eTransformItemType.JoinPair\" class=\"form-group col-md-4\">\n\t\t\t\t\t\t<form-select label=\"Compare\" formControlName=\"filterCompare\" [items]=\"compare\" itemKey=\"key\"\n\t\t\t\t\t\t\titemName=\"name\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section *ngIf=\"transformItemType == eTransformItemType.FilterPair && newDatalinkTransformItemForm.controls.filterCompare.value != eCompare.IsNotNull && newDatalinkTransformItemForm.controls.filterCompare.value != eCompare.IsNull\" class=\"form-group col-md-4\">\n\t\t\t\t\t\t<form-select\n\t\t\t\t\t\t\tlabel=\"Compare Column/Value\" formControlName=\"filterDatalinkColumn\"  [items]=\"inputColumns\"\n\t\t\t\t\t\t\tparentName=\"group\" childItems=\"columns\"\n\t\t\t\t\t\t\t[enableTextEntry]=\"true\" [(textValue)]=\"filterValue\"\n\t\t\t\t\t\t\t(textValueChange)=\"updateFilterValue($event)\" [enableTextEntryMatch]=\"false\" [enableKeySelect]=\"false\"\n\t\t\t\t\t\t\t[allowNullSelect]=\"true\" selectNullMessage=\"(select null)\"\n\t\t\t\t\t\t\t[allowBlankSelect]=\"true\" selectBlankMessage=\"(select blank)\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"logicalName\"\n\t\t\t\t\t\t\t[textEntryItems]=\"variables\" textEntryItemsTitle=\"Variables\" [setTextEntryToValue]=\"false\"\n\t\t\t\t\t\t\tnote=\"Note: For static date values use format YYYY-MM-DD (e.g. 2018-01-30)\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section *ngIf=\"showOutput\" class=\"form-group col-md-4\">\n\t\t\t\t\t\t<form-select label=\"Output Column\" formControlName=\"targetDatalinkColumn\" [items]=\"outputTables\" parentName=\"name\" childItems=\"dexihTableColumns\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"logicalName\" note=\"Enter new column, or select existing\"\n\t\t\t\t\t\t\t[allowNullSelect]=\"true\" selectNullMessage=\"(select null)\"\n\t\t\t\t\t\t\t[allowBlankSelect]=\"true\" selectBlankMessage=\"(select blank)\"\n\t\t\t\t\t\t\t[enableKeySelect]=\"false\" (textValueChange)=\"updateNewColumn($event)\" [enableTextEntry]=\"true\" [setTextEntryToValue]=\"false\"\n\t\t\t\t\t\t\ttextEntryNote=\"Enter new column name, or select existing\" [errors]=\"targetErrors\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section *ngIf=\"transformItemType == eTransformItemType.Sort\" class=\"form-group col-md-4\">\n\t\t\t\t\t\t<form-select label=\"Direction\" formControlName=\"sortDirection\" [items]=\"sortDirections\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"name\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section *ngIf=\"transformItemType == eTransformItemType.JoinPair\" class=\"form-group col-md-4\">\n\t\t\t\t\t\t<form-select label=\"Join Column\" formControlName=\"joinDatalinkColumn\" [items]=\"joinColumns\"\n\t\t\t\t\t\t[allowNullSelect]=\"true\" selectNullMessage=\"(select null)\"\n\t\t\t\t\t\t[allowBlankSelect]=\"true\" selectBlankMessage=\"(select blank)\"\n\t\t\t\t\t\t[enableKeySelect]=\"false\" itemKey=\"key\" itemName=\"logicalName\" note=\"Select a join column\"\n\t\t\t\t\t\t\ttextEntryNote=\"Enter a value to add a new column\" [errors]=\"joinErrors\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t</form>\n\t</d-widget-section>\n</div>","export { MappingComponent } from './mapping.component';\nexport { MappingItemComponent } from './mapping-item.component';\n","<div class=\"container\">\n    <div *ngIf=\"!outputParameters\" class=\"row justify-content-start\">\n        <div class=\"col-auto\">\n            <h5>{{label}}</h5>\n            <div *ngIf=\"error\" class=\"text-danger\">\n                <i class=\"fa fa-exclamation-circle text-danger\" ></i>\n                {{error}}\n            </div>\n        </div>\n        <div *ngIf=\"source\" class=\"col-auto\"><i *ngIf=\"!source.valid\"\n                class=\"fa fa-exclamation-circle text-danger\" [title]=\"source.error\"></i>{{source.text}}</div>\n        <div *ngIf=\"target\" class=\"col-auto\">\n            <i *ngIf=\"source && !compare\" class=\"fa fa-arrow-right mr-2\"></i>\n            <i *ngIf=\"!target.valid\" class=\"fa fa-exclamation-circle text-danger\" [title]=\"target.error\"></i>\n            <span class=\"mr-2\" *ngIf=\"compare\">{{compare}}</span>\n            {{target.text}}\n        </div>\n    </div>\n\n    <ng-template [ngIf]=\"outputParameters\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <h5>{{label}}</h5>\n            </div>\n        </div>\n\n        <div *ngIf=\"source\"><i *ngIf=\"!source.valid\"\n            class=\"fa fa-exclamation-circle text-danger\" [title]=\"source.error\"></i>Source = {{source.text}}\n        </div>\n\n        <ng-template [ngIf]=\"inputParameters?.length > 0\">\n            <div class=\"row pt-2\">\n                <div class=\"col\">\n                    <h5>Inputs</h5>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col border bg-primary text-white font-weight-bold text-truncate\">Parameter</div>\n                <div class=\"col border bg-primary text-white font-weight-bold text-truncate\">Column / Value</div>\n            </div>\n            <ng-template ngFor let-parameter [ngForOf]=\"inputParameters\">\n                <div *ngFor=\"let value of parameter.values; let i = index;\" class=\"row\">\n                    <div class=\"col border bg-secondary text-white text-truncate\">\n                        <div *ngIf=\"i == 0\">{{ parameter.name}}</div>\n                    </div>\n                    <div class=\"col border border text-white bg-secondary text-truncate\" [title]=\"value.error\">\n                        <i *ngIf=\"!value.valid\" class=\"fa fa-exclamation-circle text-danger\" ></i>\n                        {{(parameter.values.length > 1 ? '[' + i + '] ' : '') + value.text}}\n                    </div>\n                </div>\n            </ng-template>\n        </ng-template>\n\n        <ng-template [ngIf]=\"mapParameters\">\n            <div *ngFor=\"let mapParameter of mapParameters\">\n                <div class=\"row pt-2\">\n                    <div class=\"col text-truncate\">\n                        <h5>{{mapParameter.name}}</h5>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div *ngFor=\"let parameter of mapParameter.parameters\"\n                        class=\"col border bg-primary text-white font-weight-bold text-truncate\">{{parameter.name}}</div>\n                </div>\n\n                <div *ngFor=\"let pValues of mapParameter.parameters[0].values; let i = index;\" class=\"row\">\n                    <div *ngFor=\"let parameter of mapParameter.parameters\"\n                        class=\"col border bg-secondary text-white text-truncate\" [title]=\"parameter.values[i].error\">\n                        <i *ngIf=\"!parameter.values[i].valid\" class=\"fa fa-exclamation-circle text-danger\" ></i>\n                        {{parameter.values[i].text}}\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template [ngIf]=\"outputParameters?.length > 0\">\n            <div class=\"row  pt-2\">\n                <div class=\"col\">\n                    <h5>Outputs</h5>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col border bg-primary text-white font-weight-bold text-truncate\">Parameter</div>\n                <div class=\"col border bg-primary text-white font-weight-bold text-truncate\">Column / Value</div>\n            </div>\n\n            <ng-template ngFor let-parameter [ngForOf]=\"outputParameters\">\n                <div *ngFor=\"let value of parameter.values; let i = index;\" class=\"row\">\n                    <div class=\"col border bg-secondary text-white text-truncate\">\n                        <div *ngIf=\"i == 0\">{{parameter.name}}</div>\n                    </div>\n                    <div class=\"col border border bg-secondary text-white text-truncate\" [title]=\"value.error\">\n                        <i *ngIf=\"!value.valid\" class=\"fa fa-exclamation-circle text-danger\" ></i>\n                        {{(parameter.values.length > 1 ? '[' + i + '] ' : '') + value.text}}\n                    </div>\n                </div>\n            </ng-template>\n        </ng-template>\n    </ng-template>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport {HubCache, transformItemTypes } from '../../../hub.models';\nimport { HubService } from '../../..';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { compare } from '../../../hub.query.models';\nimport { DexihDatalinkTransform, DexihDatalinkTransformItem, eTransformItemType, eCompare,\n    DexihDatalinkColumn, FunctionReference, eParameterDirection, eAggregate, eSortDirection, eTypeCode } from '../../../../shared/shared.models';\n\nexport class ValidValue {\n    public valid: boolean;\n    public text: string;\n    public error: string;\n}\n\nexport class ValidParameter {\n    public values: ValidValue[];\n    public name: string;\n}\n\nexport class ValidMapping {\n    public name: string;\n    public parameters: ValidParameter[];\n}\n\n@Component({\n    selector: 'mapping-item',\n    templateUrl: 'mapping-item.component.html'\n})\n\nexport class MappingItemComponent implements OnInit {\n    @Input() transform: DexihDatalinkTransform;\n    @Input() transformItem: DexihDatalinkTransformItem;\n    @Input() allowCondition: boolean;\n\n    private _subscription: Subscription;\n\n    private hubCache: HubCache;\n\n    public label: string;\n    public error: string;\n\n    public source: ValidValue;\n    public target: ValidValue;\n    public compare: string;\n    public inputParameters: ValidParameter[];\n    public outputParameters: ValidParameter[];\n\n    public mapParameters: ValidMapping[];\n\n    constructor(\n        private hubService: HubService) { }\n\n    ngOnInit() {\n        try {\n\n            if (this._subscription) { this._subscription.unsubscribe(); }\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.hubService.getRemoteLibrariesObservable()\n            ).subscribe(result => {\n                this.hubCache = result[0];\n                this.updateMapping();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Mappings');\n        }\n    }\n\n    async updateMapping() {\n        let item = this.transformItem;\n        let itemType = transformItemTypes.find(c => c.key === item.transformItemType);\n\n        switch (item.transformItemType) {\n            case eTransformItemType.BuiltInFunction:\n                if (item.functionClassName) {\n                    let func = await this.hubService.GetFunctionReference(item);\n                    if (func) {\n                        this.label = func.name;\n                        this.addBuiltInFunctionParameters(func);\n                    } else {\n                        this.error = `Error, function ${item.functionClassName}.${item.functionMethodName} not found.`;\n                    }\n                } else if (item.customFunctionKey) {\n                    let func = this.hubCache.hub.dexihCustomFunctions.find(c => c.key === item.customFunctionKey);\n                    if (func) {\n                        this.label = func.name;\n                        this.addCustomFunctionParameters();\n                    } else {\n                        this.error = 'Error, function not found.';\n                    }\n                } else {\n                    this.error = 'Error, function not found';\n                }\n                break;\n            case eTransformItemType.CustomFunction:\n                this.addCustomFunctionParameters();\n                break;\n            case eTransformItemType.AggregatePair:\n                this.label = eAggregate[item.aggregate];\n                break;\n            case eTransformItemType.Sort:\n                this.label = eSortDirection[item.sortDirection];\n                break;\n            case eTransformItemType.UnGroup:\n                this.label = 'UnGroup'\n                this.addUnGroupParameters();\n                break;\n            default:\n                this.label = itemType.name;\n                break;\n        }\n\n        if (itemType.useSource) { this.source = this.columnOrValue(null, item.sourceDatalinkColumn, item.sourceValue); }\n        if (itemType.useTarget) { this.target = this.describeDatalinkColumn(null, item.targetDatalinkColumn); }\n        if (itemType.useJoin) { this.target = this.describeDatalinkColumn(null, item.joinDatalinkColumn); }\n        if (itemType.useFilter) { this.target = this.columnOrValue(null, item.filterDatalinkColumn, item.filterValue)};\n\n        if (itemType.useFilter || itemType.useJoin) {\n            let filterCompare = item.filterCompare;\n            if (filterCompare === null) { filterCompare = eCompare.IsEqual };\n            this.compare = compare.find(c => c.key === filterCompare).name;\n        } else {\n            this.compare = null;\n        }\n    }\n\n    private columnOrValue(expectedDataType: eTypeCode, column: DexihDatalinkColumn, value: string): ValidValue {\n        if (column) {\n            return this.describeDatalinkColumn(expectedDataType, column);\n        } else {\n            return {text: this.describeStaticValue(value), valid: true, error: ''};\n        }\n    }\n\n    // concatenates the arrays together.\n    // node: .concat will append null arrays, where this ignores null arrays.\n    private concat<T>(...args: T[][]): T[] {\n        let array: T[] = [];\n        args.forEach(arg => {\n            if ( arg ) {\n                array = array.concat(arg);\n            }\n        });\n        return array;\n    }\n\n    private addBuiltInFunctionParameters(func: FunctionReference) {\n        let functionInputs = this.concat(func.inputParameters, func.resultInputParameters);\n        let functionOutputs = this.concat(func.outputParameters, func.returnParameters, func.resultOutputParameters,\n            func.resultReturnParameters);\n\n        let inputParams = this.transformItem.dexihFunctionParameters\n            .filter(c =>\n                c.direction === eParameterDirection.Input ||\n                c.direction === eParameterDirection.ResultInput ||\n                c.direction === eParameterDirection.Join);\n\n        this.inputParameters = functionInputs.filter(c => c && !c.linkedName).map<ValidParameter>(param => {\n            let p = inputParams.find(c => c.name === param.parameterName);\n            if (p) {\n                if (p.rank === 0) {\n                    let value = this.columnOrValue(p.dataType, p.datalinkColumn, p.value);\n                    return {name: this.describeParameterName(p), values: [value] };\n                } else {\n                    let values = p.arrayParameters.sort( (a, b) => a.position - b.position).map(ap => {\n                        return this.columnOrValue(ap.dataType, ap.datalinkColumn, ap.value);\n                    });\n                    return {name: this.describeParameterName(p), values: values};\n                }\n            } else {\n                return {name: this.describeParameterName(p), values: [{valid: false, error: 'Not Mapped', text: ''}]  };\n            }\n        });\n\n        let outputParams = this.transformItem.dexihFunctionParameters\n            .filter(\n                c => HubCache.parameterIsOutput(c));\n\n        this.outputParameters = functionOutputs.filter(c => c &&  !c.linkedName).map<ValidParameter>(param => {\n            let p = outputParams.find(c => c.name === param.parameterName);\n            if (p) {\n                if (this.allowCondition &&\n                    (p.direction === eParameterDirection.ReturnValue || p.direction === eParameterDirection.ResultReturnValue)) {\n                    return null;\n                }\n                if (p.rank === 0 || p.datalinkColumn !== null) {\n                    let value = this.describeDatalinkColumn(p.dataType, p.datalinkColumn);\n                    return {name: this.describeParameterName(p), values: [value]};\n                } else {\n                    let values = p.arrayParameters.sort( (a, b) => a.position - b.position).map(ap => {\n                        return this.describeDatalinkColumn(ap.dataType, ap.datalinkColumn);\n                    });\n                    return {name: this.describeParameterName(p), values: values};\n                }\n            } else {\n                // return {name: param.name, values: [{valid: false, text: 'Not mapped'}]  };\n                return null;\n            }\n        }).filter(c => c !== null);\n\n        let linkedNames = Array.from(new Set(this.concat(functionInputs, functionOutputs).map(c => c &&  c.linkedName).filter(c => c)));\n        this.mapParameters = linkedNames.map(name => {\n            let parameters: ValidParameter[] = functionInputs.filter(c => c.linkedName === name).map(param => {\n                let p = inputParams.find(c => c.name === param.parameterName);\n                let values = p.arrayParameters.sort( (a, b) => a.position - b.position).map(ap => {\n                    return this.columnOrValue(ap.dataType, ap.datalinkColumn, ap.value);\n                });\n                return {name: this.describeParameterName(param), values: values};\n            });\n\n            let parameters2: ValidParameter[] = functionOutputs.filter(c => c.linkedName === name).map(param => {\n                let p = outputParams.find(c => c.name === param.parameterName);\n                let values = p.arrayParameters.sort( (a, b) => a.position - b.position).map(ap => {\n                    return this.describeDatalinkColumn(ap.dataType, ap.datalinkColumn);\n                });\n                return {name: this.describeParameterName(param), values: values};\n            });\n\n            return {name: name, parameters: this.concat(parameters, parameters2)};\n        });\n    }\n\n    private addCustomFunctionParameters() {\n\n        let inputParams = this.transformItem.dexihFunctionParameters\n            .filter(c =>\n                c.direction === eParameterDirection.Input ||\n                c.direction === eParameterDirection.ResultInput ||\n                c.direction === eParameterDirection.Join);\n\n        this.inputParameters = inputParams.map<ValidParameter>(p => {\n            if (p.rank === 0) {\n                let value = this.columnOrValue(p.dataType, p.datalinkColumn, p.value);\n                return { name: this.describeParameterName(p), values: [value] };\n            } else {\n                let values = p.arrayParameters.sort((a, b) => a.position - b.position).map(ap => {\n                    return this.columnOrValue(ap.dataType, ap.datalinkColumn, ap.value);\n                });\n                return { name: this.describeParameterName(p), values: values };\n            }\n        });\n\n        let outputParams = this.transformItem.dexihFunctionParameters\n            .filter(c => HubCache.parameterIsOutput(c));\n\n        this.outputParameters = outputParams.map<ValidParameter>(p => {\n            if (p.rank === 0) {\n                let value = this.describeDatalinkColumn(p.dataType, p.datalinkColumn);\n                return { name: this.describeParameterName(p), values: [value] };\n            } else {\n                let values = p.arrayParameters.sort((a, b) => a.position - b.position).map(ap => {\n                    return this.describeDatalinkColumn(ap.dataType, ap.datalinkColumn);\n                });\n                return { name: this.describeParameterName(p), values: values };\n            }\n        });\n    }\n\n    private addUnGroupParameters() {\n\n        let parameters = this.transformItem.dexihFunctionParameters;\n\n        let runTime = this.transform['runTime'];\n        let inputColumns = runTime.inputColumns;\n\n        let sourceColumn = <DexihDatalinkColumn> inputColumns.find(c => c.key === this.transformItem.sourceDatalinkColumn.key);\n\n        if (sourceColumn) {\n            this.outputParameters = parameters.map<ValidParameter>(p => {\n                if (p.datalinkColumn) {\n                    let find = sourceColumn.childColumns.find(c => c.key === p.datalinkColumn.key);\n                    if (find) {\n                        return {name: this.describeParameterName(p), values: [{valid: true, error: '', text: p.datalinkColumn.name}]};\n                    }\n                    return {name: this.describeParameterName(p),\n                        values: [{valid: false, error: '(Invalid column) ', text: p.datalinkColumn.name}]};\n                } else {\n                    return {name: this.describeParameterName(p), values: [{valid: false, error: '(No column)', text: ''}]};\n                }\n            });\n        }\n    }\n\n    private describeParameterName(param): string {\n        return param.name + ' (' + eTypeCode[param.dataType] + ')';\n    }\n\n    private describeDatalinkColumn(expectedDataType: eTypeCode, value: DexihDatalinkColumn): ValidValue {\n        if (!value) {\n            return { error: '(not mapped)', text: '', valid: false };\n        }\n\n        let runTime = this.transform['runTime'];\n        let inputColumns = runTime.inputColumns;\n        let nodeDatalinkColumn = this.transform.nodeDatalinkColumn ? this.transform.nodeDatalinkColumn : null;\n        let nodeDatalinkColumnKey = nodeDatalinkColumn ? nodeDatalinkColumn.key : null;\n\n        let returnValue: string = null;\n\n        let io = new InputOutputColumns();\n        let col = io.findValidColumn(value, nodeDatalinkColumnKey, inputColumns);\n        if (col) {\n            returnValue = (value.columnGroup ? ('(' + value.columnGroup + ')') : '') + value.logicalName;\n        }\n\n        if (!returnValue) {\n            runTime.transformColumns.forEach(column => {\n                if (!returnValue && column.key === value.key) {\n                    returnValue = value.logicalName;\n                }\n            });\n        }\n\n        if (!returnValue && this.transform.joinDatalinkTable) {\n            let joinTable = this.transform.joinDatalinkTable;\n            joinTable.dexihDatalinkColumns.forEach(column => {\n                if (!returnValue && column.key === value.key) {\n                    returnValue = '(' + joinTable.name + ') ' + value.logicalName;\n                }\n            });\n        }\n\n        if (returnValue) {\n            if (expectedDataType == null || value.dataType === expectedDataType) {\n                return { text: returnValue, valid: true, error: '' }\n            } else {\n                return { text: returnValue, error: '(inconsistent datatype ' + eTypeCode[value.dataType] + ')', valid: false }\n            }\n        } else {\n            return { text: value.logicalName, error: '(Invalid column) ', valid: false }\n        }\n    }\n\n    private describeStaticValue(value: string): string {\n        if (value === ' ') {\n            return '<space>';\n        }\n        if (value === '') {\n            return '<blank>';\n        }\n        if (value == null) {\n            return '<null>';\n        }\n        return '\"' + value + '\"';\n    }\n}\n","import { Component, Input, Output, ViewChild, OnInit, OnChanges, OnDestroy, EventEmitter, ElementRef } from '@angular/core';\nimport { Observable, BehaviorSubject, Subscription, combineLatest } from 'rxjs';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { eFunctionType, eTransformType, eTransformItemType, DexihDatalinkTransformItem,\n    DexihDatalinkTransform, DexihDatalinkColumn, eTypeCode, DexihDatalinkTable, eDeltaType, eCleanActionItems, eCompare } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'mapping',\n    templateUrl: './mapping.component.html'\n})\nexport class MappingComponent implements OnInit, OnDestroy, OnChanges {\n    @Input() public datalinkTransformForm: FormGroup;\n    @Input() public allowStandard = false;\n    @Input() public allowMapping = false;\n    @Input() public allowAggregate = false;\n    @Input() public allowRow = false;\n    @Input() public allowCondition = false;\n    @Input() public allowValidation = false;\n    @Input() public allowOutput = false;\n    @Input() public allowGroup = false;\n    @Input() public allowJoin = false;\n    @Input() public allowSort = false;\n    @Input() public allowSeries = false;\n    @Input() public allowJoinNode = false;\n    @Input() public title: string;\n\n    @Output() public addMapping: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public removeMapping: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public updateMapping: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public hasChanged: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public onColumnDrop: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChild('mappingTable', { static: true }) public mappingTable: ElementRef;\n\n    private _subscription: Subscription;\n    private _changesSubscription: Subscription;\n\n    columns: Array<any>;\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    public functionType: eFunctionType;\n    public transformType: eTransformType;\n    public eTransformType = eTransformType;\n    public eTransformItemType = eTransformItemType;\n\n    columnGroups: Array<{group: string, columns: Array<DexihDatalinkColumn>}> = [];\n    inputDateColumns: DexihDatalinkColumn[];\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        private router: Router,\n        private route: ActivatedRoute\n    ) {\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n    }\n\n    ngOnChanges() {\n        try {\n            // this.columns = [{ name: 'function', title: 'Mapping', format: 'Md', class: 'functionClass' }];\n            this.columns = [];\n\n            // if (!this.allowSort) {\n            //     this.columns.push({ name: 'function', title: 'Function Name', format: '', class: 'functionClass' });\n            // }\n\n            // this.columns.push({ name: 'input', title: 'Input(s)', format: 'Md', class: 'inputClass' });\n\n            // if (this.allowOutput || this.allowJoinNode) {\n            //     this.columns.push({ name: 'output', title: 'Output(s)', format: 'Md', class: 'outputClass' });\n            // }\n\n            // if (this.allowSort) {\n            //     this.columns.push({ name: 'sortDirection', title: 'Direction', format: '' });\n            // }\n\n            if (this._subscription) { this._subscription.unsubscribe(); }\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.hubService.getRemoteLibrariesObservable()\n            ).subscribe(() => {\n\n                this.functionType = this.editDatalinkService.getFunctionType(this.datalinkTransformForm.value);\n                this.transformType = this.datalinkTransformForm.value.transformType;\n\n                this.updateTableData();\n\n                if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n                this._changesSubscription = this.datalinkTransformForm.valueChanges.subscribe(() => this.updateTableData());\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Mappings');\n        }\n    }\n\n    updateTableData() {\n        try {\n            if (this.datalinkTransformForm) {\n                let runTime = this.datalinkTransformForm.controls['runTime'].value;\n                let inputColumns = <DexihDatalinkColumn[]> runTime.inputColumns;\n                this.inputDateColumns = inputColumns.filter(c => c.dataType === eTypeCode.DateTime || c.dataType === eTypeCode.Date);\n                this.columnGroups = this.editDatalinkService.getColumnGroups(inputColumns);\n\n                let data = [];\n                let items = <FormArray>this.datalinkTransformForm.controls.dexihDatalinkTransformItems;\n                let filteredItems: Array<any> = [];\n\n                if (this.allowJoinNode) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.JoinNode));\n                }\n\n                if (this.allowGroup) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.Column));\n                }\n\n                if (this.allowStandard || this.allowJoin) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.BuiltInFunction\n                            || d.value.transformItemType === eTransformItemType.CustomFunction));\n                }\n\n                if (this.allowAggregate) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.AggregatePair));\n                }\n\n                if (this.allowMapping) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.ColumnPair));\n                }\n\n                if (this.allowCondition) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.FilterPair));\n                }\n\n                if (this.allowJoin) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.JoinPair));\n                }\n\n                if (this.allowRow) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.UnGroup));\n                }\n\n                if (this.allowSort) {\n                    filteredItems = filteredItems.concat(items.controls\n                        .filter(d => d.value.transformItemType === eTransformItemType.Sort));\n                }\n\n                filteredItems.sort((a, b) => a.value.position - b.value.position).forEach(item => {\n                    const transformItem: DexihDatalinkTransformItem = item.value;\n                    let functionItem = {\n                        datalinkTransformItem: transformItem,\n                        key: transformItem.key,\n                    }\n\n                    data.push(functionItem);\n                });\n\n                this._tableData.next(data);\n            }\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Mappings, update data');\n        }\n\n    }\n\n    private getItemFormGroup(datalinkTransformItemKey: number): FormGroup {\n        let items = <FormArray>this.datalinkTransformForm.controls['dexihDatalinkTransformItems'];\n        let item = <FormGroup>items.controls.find(c => c.value.key === datalinkTransformItemKey);\n        return item;\n    }\n\n    editMapping(item: DexihDatalinkTransformItem) {\n        let key = item.key;\n        let itemForm = this.getItemFormGroup(key);\n        let transformItemType = itemForm.value.transformItemType;\n\n        switch (transformItemType) {\n            case eTransformItemType.BuiltInFunction:\n                this.router.navigate(\n                    ['standard-function-edit', this.functionType, key],\n                    { relativeTo: this.route.parent });\n                break;\n            case eTransformItemType.CustomFunction:\n                this.router.navigate(\n                    ['custom-function-edit', this.functionType, key],\n                    { relativeTo: this.route.parent });\n                break;\n            case eTransformItemType.Column:\n            case eTransformItemType.JoinNode:\n            case eTransformItemType.GroupNode:\n            case eTransformItemType.ColumnPair:\n            case eTransformItemType.Sort:\n            case eTransformItemType.JoinPair:\n            case eTransformItemType.FilterPair:\n            case eTransformItemType.AggregatePair:\n            case eTransformItemType.Series:\n                this.router.navigate(['mapping-edit', transformItemType, key],\n                    { relativeTo: this.route.parent });\n                break;\n            case eTransformItemType.UnGroup:\n                this.router.navigate(['unGroup-edit', key], { relativeTo: this.route.parent });\n                break;\n}\n    }\n\n    deleteMapping(item: DexihDatalinkTransformItem) {\n        this.deleteSelected([item]);\n    }\n\n    deleteSelected(items: Array<DexihDatalinkTransformItem>) {\n        items.forEach(item => {\n            let key = item.key;\n            let itemForm = this.getItemFormGroup(key);\n            this.editDatalinkService.deleteDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n        });\n    }\n\n    // if a sort event has triggered from the table, then reset the positions of the datalink transform items.\n    datalinkItemSortChange(items: Array<DexihDatalinkTransformItem>) {\n        items.forEach((item, index) => {\n            let existingItems = <FormArray>this.datalinkTransformForm.controls.dexihDatalinkTransformItems;\n            let datalinkTransformItem = <FormGroup>existingItems.controls\n                .find(c => c.value.key === item.key);\n            if (datalinkTransformItem) {\n                datalinkTransformItem.controls.position.setValue(index);\n            }\n        });\n    }\n\n    // triggered when a source column is dropped onto the output column\n    newOutputDrop(inputColumn: DexihDatalinkColumn) {\n        this.onColumnDrop.emit({\n            inputColumn: inputColumn,\n            outputColumn: null\n        });\n    }\n\n    createJoinNode() {\n        let items = <FormArray>this.datalinkTransformForm.controls.dexihDatalinkTransformItems;\n        if (items.controls.find(d => d.value.transformItemType === eTransformItemType.JoinNode)) {\n            this.authService.informationDialog('Can not add node',  'Only one join node can be added.');\n            return;\n        }\n\n        let joinTable = this.datalinkTransformForm.value.joinDatalinkTable;\n\n        let item = new DexihDatalinkTransformItem();\n        let outputColumn: DexihDatalinkColumn = new DexihDatalinkColumn();\n        outputColumn.position = 0;\n        outputColumn.key = this.hubService.getHubCache().getNextSequence();\n        outputColumn.name = joinTable.name;\n        outputColumn.logicalName = joinTable.name;\n        let io = new InputOutputColumns();\n        let columns = joinTable.dexihDatalinkColumns.map((col, index) => {\n            let childColumn = io.copyDatalinkColumn(col, index, 'Join Node');\n            childColumn.key = this.hubService.getHubCache().getNextSequence();\n            childColumn.datalinkTableKey = null;\n            return childColumn;\n        });\n        outputColumn.childColumns = columns;\n        outputColumn.dataType = eTypeCode.Node;\n\n        item.position = -1;\n        item.datalinkTransformKey = this.datalinkTransformForm.value.key;\n        item.targetDatalinkColumn = outputColumn;\n        item.isValid = true;\n        item.transformItemType = eTransformItemType.JoinNode;\n\n        let itemForm = this.editDatalinkService.hubFormsService.datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n        this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n    }\n\n    createGroupNode() {\n        let items = <FormArray>this.datalinkTransformForm.controls.dexihDatalinkTransformItems;\n        if (items.controls.find(d => d.value.transformItemType === eTransformItemType.GroupNode)) {\n            this.authService.informationDialog('Can not add node',  'Only one group node can be added.');\n            return;\n        }\n\n        let item = new DexihDatalinkTransformItem();\n        let outputColumn: DexihDatalinkColumn = new DexihDatalinkColumn();\n        outputColumn.position = 0;\n        outputColumn.key = this.hubService.getHubCache().getNextSequence();\n        outputColumn.name = 'Group';\n        outputColumn.logicalName = 'Group';\n        outputColumn.dataType = eTypeCode.Node;\n\n        item.position = -1;\n        item.datalinkTransformKey = this.datalinkTransformForm.value.key;\n        item.targetDatalinkColumn = outputColumn;\n        item.isValid = true;\n        item.transformItemType = eTransformItemType.GroupNode;\n\n        let itemForm = this.editDatalinkService.hubFormsService.datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n        this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n    }\n\n    newMapping(itemType: eTransformItemType) {\n        this.router.navigate(['mapping-edit', itemType], { relativeTo: this.route });\n    }\n\n    addAll() {\n        let runTime = this.datalinkTransformForm.controls['runTime'].value;\n        let inputColumns = <DexihDatalinkColumn[]> runTime.inputColumns;\n\n        inputColumns.forEach(inputColumn => {\n            this.createMapping(inputColumn);\n        });\n    }\n\n    addGroup(group: {group: string, columns: Array<DexihDatalinkColumn>}) {\n        group.columns.forEach(inputColumn => {\n            this.createMapping(inputColumn);\n        });\n    }\n\n    private createMapping(inputColumn: DexihDatalinkColumn) {\n        let runTime = this.datalinkTransformForm.controls['runTime'].value;\n        let outputColumns = <DexihDatalinkColumn[]> runTime.outputColumns;\n\n        if ( outputColumns.findIndex(c => c.name === inputColumn.name) >= 0) {\n            return;\n        }\n\n        let item = new DexihDatalinkTransformItem();\n        let io = new InputOutputColumns();\n        let outputColumn = io.copyDatalinkColumn(inputColumn, 0, 'mapping');\n        outputColumn.key = this.hubService.getHubCache().getNextSequence();\n        if (outputColumn.childColumns) {\n            outputColumn.childColumns.forEach(col => {\n                col.key = this.hubService.getHubCache().getNextSequence();\n            });\n        }\n        outputColumn.datalinkTableKey = null;\n        item.datalinkTransformKey = this.datalinkTransformForm.value.key;\n        item.sourceDatalinkColumn = inputColumn;\n        item.targetDatalinkColumn = outputColumn;\n        item.transformItemType = eTransformItemType.ColumnPair;\n        item.isValid = true;\n        let itemForm = this.editDatalinkService.hubFormsService\n            .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n        this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n    }\n\n    // joins the column to the valid from/to columns\n    addValidFromTo(column: DexihDatalinkColumn) {\n        let joinTable = <DexihDatalinkTable> this.datalinkTransformForm.value.joinDatalinkTable;\n        let validFrom = joinTable.dexihDatalinkColumns.find(c => c.deltaType === eDeltaType.ValidFromDate);\n        let validTo = joinTable.dexihDatalinkColumns.find(c => c.deltaType === eDeltaType.ValidToDate);\n        if ( !validFrom || !validTo ) {\n            this.authService.informationDialog('No valid from',  'The join table does not contain a columns with a valid from/to delta type.');\n            return;\n        }\n\n        let item = new DexihDatalinkTransformItem();\n        item.sourceDatalinkColumn = column;\n        item.joinDatalinkColumn = validFrom;\n        item.transformItemType = eTransformItemType.JoinPair;\n        item.filterCompare = eCompare.GreaterThanEqual;\n        let itemForm = this.editDatalinkService.hubFormsService.datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n        this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n\n        item = new DexihDatalinkTransformItem();\n        item.sourceDatalinkColumn = column;\n        item.joinDatalinkColumn = validTo;\n        item.transformItemType = eTransformItemType.JoinPair;\n        item.filterCompare = eCompare.LessThan;\n        itemForm = this.editDatalinkService.hubFormsService.datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n        this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n\n    }\n}\n","<d-widget [title]=\"title\" [scrollable]=\"true\" [showExpandButton]=\"true\">\n\n    <d-table [enableMultiSelect]=\"true\" [enableManualSort]=\"true\" [columns]=\"columns\" [dataObservable]=\"tableData\" [enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n        (rowClick)=\"editMapping($event)\" (onSortChanged)=\"datalinkItemSortChange($event)\"\n        tableClass=\"table table-striped table-hover m-0\" #mappingTable dropZone (dropData)=\"newOutputDrop($event)\"\n        zone=\"input-column\" dropAllowedClass=\"drop-zone-green\" actionHeading=\"Mappings\">\n\n        <ng-template #selectedItemAction select=\"selectedItemAction\" let-datalinkTransformItem=\"item\">\n            <d-button-edit class=\"mr-1 \" (click)=\"editMapping(datalinkTransformItem)\" title=\"Edit this mapping\">\n            </d-button-edit>\n        </ng-template>\n\n        <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n            <d-button-delete class=\"mr-1 \" (click)=\"deleteSelected(items)\"\n                title=\"Delete selected mapping functions\"></d-button-delete>\n        </ng-template>\n\n        <ng-template #rowAction let-item=\"item\">\n            <mapping-item (click)=\"editMapping(item)\" [transform]=\"datalinkTransformForm.value\"\n                [transformItem]=\"item.datalinkTransformItem\" [allowCondition]=\"allowCondition\"></mapping-item>\n        </ng-template>\n\n        <ng-template #actions let-items=\"items\">\n            <ng-template [ngIf]=\"allowMapping\">\n                <d-button-splitdropdown class=\"mr-1\" (buttonClick)=\"newMapping(eTransformItemType.ColumnPair)\"\n                    buttonClass=\"btn-primary\" iconClass=\"fa fa-map\"\n                    title=\"Create a new mapping, or drop a column to create new mapping.\" text='Mapping'>\n                    <li><a class=\"dropdown-item\"  title=\"Add all\" (click)=\"addAll()\">Add all input columns</a></li>\n                    <li *ngFor=\"let columnGroup of columnGroups\"><a class=\"dropdown-item\"  [title]=\"'Add all ' + columnGroup.group\" (click)=\"addGroup(columnGroup)\">Add all {{columnGroup.group}}</a></li>\n                </d-button-splitdropdown>\n            </ng-template>\n            <ng-template [ngIf]=\"allowCondition && !allowValidation\">\n                <d-button routerLink='mapping-edit/{{eTransformItemType.FilterPair}}'\n                    buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-filter\" title=\"Create a simple filter\">Filter\n                </d-button>\n            </ng-template>\n            <ng-template [ngIf]=\"allowAggregate\">\n                <d-button routerLink='mapping-edit/{{eTransformItemType.AggregatePair}}'\n                    buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-cubes\" title=\"Create a simple aggregate\">\n                    Aggregate</d-button>\n            </ng-template>\n            <ng-template [ngIf]=\"allowStandard || allowAggregate || allowCondition || allowRow || allowValidation\">\n                <d-button [routerLink]=\"['standard-function-edit', functionType]\"\n                    buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-dollar\" title=\"Create a new standard function\">\n                    Standard</d-button>\n                <d-button [routerLink]=\"['custom-function-edit', functionType]\" buttonClass=\"btn-primary mr-1 \"\n                    iconClass=\"fa fa-code\" title=\"Create a new custom function\">Custom</d-button>\n            </ng-template>\n            <ng-template [ngIf]=\"allowRow\">\n                <d-button routerLink='unGroup-edit' buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-map\"\n                    title=\"Un-Group a Node\">Un-Group</d-button>\n            </ng-template>\n            <ng-template [ngIf]=\"allowJoin\">\n                <d-button routerLink='mapping-edit/{{eTransformItemType.JoinPair}}'\n                    buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-link\" title=\"Create a new join\">Join\n                </d-button>\n                <d-button [routerLink]=\"['standard-function-edit', functionType]\"\n                    buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-dollar\" title=\"Use a function to join the table\">\n                    Standard Function\n                </d-button>\n                <d-button [routerLink]=\"['custom-function-edit', functionType]\" buttonClass=\"btn-primary mr-1 \"\n                    iconClass=\"fa fa-code\" title=\"Use a custom-function to join the table\">Custom Function\n                </d-button>\n\n                <d-button-dropdown class=\"mr-1\" buttonClass=\"btn-primary\" iconClass=\"fa fa-calendar\"\n                    title=\"Add a joins between the column and the valid from/to\" text='Valid From/To'>\n                    <li *ngFor=\"let column of inputDateColumns\"><a class=\"dropdown-item\"  [title]=\"column.name\" (click)=\"addValidFromTo(column)\">{{column.name}}</a></li>\n                </d-button-dropdown>\n            </ng-template>\n            <ng-template [ngIf]=\"allowSort\">\n                <d-button routerLink='mapping-edit/{{eTransformItemType.Sort}}' buttonClass=\"btn-primary mr-1 \"\n                    iconClass=\"fa fa-sort-alpha-asc\" title=\"New Sort\">Sort</d-button>\n            </ng-template>\n            <ng-template [ngIf]=\"allowGroup\">\n                <d-button routerLink='mapping-edit/{{eTransformItemType.Column}}'\n                    buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-list\" title=\"New Group\">Group</d-button>\n            </ng-template>\n            <ng-template [ngIf]=\"allowJoinNode\">\n                <d-button (click)=\"createJoinNode()\" buttonClass=\"btn-primary mr-1 \" iconClass=\"fa fa-list\"\n                    title=\"Join Node\">Node</d-button>\n            </ng-template>\n        </ng-template>\n    </d-table>\n</d-widget>","<d-widget-section title='Select a Transform' [padding]=\"true\">\n    <div class=\"d-flex flex-wrap justify-content-around\">\n            <a *ngFor=\"let transform of transforms\" (click)=\"insert(transform.transformReference)\" href=\"javascript:void(0)\" \n            class=\"btn btn-outline-primary p-0 m-3\" style=\"width:400px\">\n                <div class=\"d-flex h-100\">\n                    <div class=\"border-right border-primary p-3\" style=\"min-width:140px\">\n                        <div class=\"d-block\">\n                            {{transform.transformReference.name}}\n                        </div>\n                        <i class=\"fa fa-4x\" [ngClass]=\"transform.icon\"></i>\n                    </div>\n                    <div class=\"p-3 text-left\">\n                        {{transform.transformReference.description}}\n                    </div>\n                </div>\n            </a>\n    </div>\n</d-widget-section>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { TransformReference, transformTypes } from '../../../hub.remote.models';\n\n\n@Component({\n    selector: 'datalink-edit-new-transform',\n    templateUrl: './datalink-edit-new-transform.component.html'\n})\n\nexport class DatalinkEditNewTransformComponent implements OnInit, OnDestroy {\n\n    private _subscription: Subscription;\n\n    public transforms: Array<{transformReference: TransformReference, icon: string}>;\n    public position: number;\n\n    constructor(\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        private authService: AuthService,\n        private route: ActivatedRoute,\n        private router: Router\n\n    ) { }\n\n    ngOnInit() {\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n            ).subscribe(async result => {\n                this.transforms = [];\n                let userConfigTransforms = await this.hubService.GetUserConfigTransformReference();\n\n                userConfigTransforms.forEach(transform => {\n                    let transformType = transformTypes.find(c => c.key === transform.transformType);\n\n                    let icon = '';\n                    if (transformType) {\n                        icon = transformType.icon;\n                    }\n\n                    this.transforms.push({transformReference: transform, icon: icon })\n                })\n\n                this.position = + result[1]['position'];\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'New Transform');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n\n    insert(transform: TransformReference) {\n        let newDatalinkTransformForm = this.editDatalinkService.insertDatalinkTransform(this.position, transform);\n        this.router.navigate(['transform', newDatalinkTransformForm.value.key], { relativeTo: this.route.parent });\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n}\n","export { OutputColumnComponent } from './output-column.component';\nexport { OutputColumnsComponent } from './output-columns.component';\n","import { Component, Input, Output, OnInit, OnChanges, EventEmitter, OnDestroy } from '@angular/core';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { HubCache, eMappingStatus, MappingStatusInfo, lineageMappingStatuses, impactMappingStatuses } from '../../../hub.models';\nimport { eObjectUse, ColumnUsageNode, eDatalinkObjectType } from '../../../hub.lineage.models';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { LogFactory, eLogLevel } from '../../../../../logging';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { DexihDatalinkColumn, DexihTable, eTypeCode } from '../../../../shared/shared.models';\n\n\n@Component({\n\n    selector: 'output-column',\n    templateUrl: './output-column.component.html'\n})\nexport class OutputColumnComponent implements OnInit, OnDestroy, OnChanges {\n    @Input() public column: DexihDatalinkColumn = null;\n    @Input() public datalinkTransformForm: FormGroup;\n    @Input() public inputTables: Array<DexihTable> = null;\n    @Output() public inputOutputDrop: EventEmitter<{inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn}>\n            = new EventEmitter<{inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn}>();\n\n    private _subscription: Subscription;\n\n    private hubCache: HubCache;\n    private datalinkForm: FormGroup;\n\n    eMappingStatus = eMappingStatus;\n\n    public mappingStatusInfoLineage: MappingStatusInfo;\n    public mappingStatusInfoImpact: MappingStatusInfo;\n\n    public mappingStatusLineage: eMappingStatus;\n\n    childColumns: DexihDatalinkColumn[];\n\n    public logger = new LogFactory('output-column.component');\n    public logCount = 0;\n\n    public eTypeCode = eTypeCode;\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n              this.hubCache = result[0];\n              this.datalinkForm = result[1];\n\n              this.logger.LogC(() => `Subscription count: ${this.logCount++}`, eLogLevel.Trace);\n\n\n            this.childColumns = this.column.childColumns;\n\n              this.refreshStatus();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Output Column');\n        }\n    }\n\n    ngOnChanges() {\n        this.refreshStatus();\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    refreshStatus() {\n        if (this.datalinkForm) {\n            let columnUsage = new ColumnUsageNode(\n                eDatalinkObjectType.Transform,\n                eObjectUse.Target,\n                this.datalinkForm.value,\n                this.column,\n                null,\n                this.datalinkTransformForm.value,\n                null,\n                eMappingStatus.NotMapped,\n                this.hubCache\n                );\n\n                this.mappingStatusLineage = columnUsage.createDatalinkLineage(false);\n                this.mappingStatusInfoLineage = lineageMappingStatuses.find(c => c.key === this.mappingStatusLineage);\n\n                let mappingStatusImpact = columnUsage.createDatalinkImpact(true);\n\n                if (this.mappingStatusLineage === eMappingStatus.NotMapped && mappingStatusImpact !== eMappingStatus.AutoGenerate) {\n                    mappingStatusImpact = eMappingStatus.NotMapped;\n                }\n                this.mappingStatusInfoImpact = impactMappingStatuses.find(c => c.key === mappingStatusImpact);\n        }\n    }\n\n\n  editColumn() {\n      if (this.column.key && (this.mappingStatusLineage === eMappingStatus.Mapped\n        || this.mappingStatusLineage === eMappingStatus.MappedToNothing)) {\n        this.router.navigate(['column', this.column.key], { relativeTo: this.route.parent });\n      } else {\n          this.authService.informationDialog('Can not edit column',\n          // tslint:disable-next-line:max-line-length\n          'This column is not created by the current transform (i.e. a pass-through or target column).  To edit a column first create a mapping.')\n      }\n    }\n}\n","<div class=\"list-group-item p-0 rounded-0\" *ngIf=\"mappingStatusInfoLineage.key != eMappingStatus.Mapped\" [title]=\"column.logicalName + ' ' + eTypeCode[column.dataType]\" (click)=\"editColumn()\">\n    <div class=\"d-flex flex-row\">\n\n        <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoLineage.statusClass\" [title]=\"mappingStatusInfoLineage.name\"></i>\n        <span class=\"flex-fill input-group-text ellipsis-overflow rounded-0 border-0\">\n            {{column.logicalName}}\n        </span>\n        <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoImpact.statusClass\" [title]=\"mappingStatusInfoImpact.name\"></i>\n    </div>\n</div>\n<div class=\"list-group-item p-0 rounded-0\" *ngIf=\"mappingStatusInfoLineage.key == eMappingStatus.Mapped\" [title]=\"column.logicalName + ' ' + eTypeCode[column.dataType]\"\n    (click)=\"editColumn()\">\n    <div class=\"d-flex flex-row\">\n\n        <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoLineage.statusClass\" [title]=\"mappingStatusInfoLineage.name\"></i>\n        <span class=\"flex-fill input-group-text ellipsis-overflow rounded-0 border-0\">\n            {{column.logicalName}}\n        </span>\n\n        <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoImpact.statusClass\" [title]=\"mappingStatusInfoImpact.name\"></i>\n    </div>\n</div>\n<!-- <div *ngIf=\"childColumns?.length > 0\" class=\"p-2\">\n    <output-column *ngFor=\"let childColumn of childColumns\" [column]=\"childColumn\" [datalinkTransformForm]=\"datalinkTransformForm\"></output-column>\n</div> -->","import { Component, Input, Output, OnInit, OnChanges, OnDestroy, EventEmitter } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { DexihDatalinkColumn } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'output-columns',\n    templateUrl: './output-columns.component.html'\n})\nexport class OutputColumnsComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() public datalinkTransformForm: FormGroup;\n    @Input() public allowMappingOutputs = true;\n\n    @Output() public inputOutputDrop: EventEmitter<{ inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn }>\n        = new EventEmitter<{ inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn }>();\n\n    private _outputColumnsSubscribe: Subscription;\n    columns: Array<DexihDatalinkColumn> = [];\n    columnGroups: Array<{group: string, columns: Array<DexihDatalinkColumn>}> = [];\n\n    constructor(\n    ) {\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnChanges() {\n        if (this._outputColumnsSubscribe) { this._outputColumnsSubscribe.unsubscribe(); }\n        this.refreshColumns(this.datalinkTransformForm.controls.runTime.value.transformColumns);\n        this._outputColumnsSubscribe = this.datalinkTransformForm.controls.runTime.valueChanges.subscribe(() => {\n            this.refreshColumns(this.datalinkTransformForm.controls.runTime.value.transformColumns);\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._outputColumnsSubscribe) { this._outputColumnsSubscribe.unsubscribe(); }\n    }\n\n    refreshColumns(columns: DexihDatalinkColumn[]) {\n        let previousGroup: string = null;\n\n        let columnGroups: Array<{group: string, columns: Array<DexihDatalinkColumn>}> = [];\n        let cols: Array<DexihDatalinkColumn> = null;\n\n        columns\n            .filter(c => c.isValid)\n            .sort((a, b) => a.position - b.position)\n            .forEach(column => {\n            let group = column.columnGroup ? column.columnGroup : '(un-grouped)';\n            if (group !== previousGroup) {\n                if (cols) {\n                    columnGroups.push({group: previousGroup, columns: cols});\n                }\n                previousGroup = group;\n                cols = [];\n            }\n            cols.push(column);\n        });\n\n        if (cols && cols.length > 0) {\n            columnGroups.push({group: previousGroup, columns: cols});\n        }\n\n        this.columnGroups = columnGroups;\n    }\n\n    // triggered when a source column is dropped onto the output column\n    newOutputDrop(inputColumn: DexihDatalinkColumn) {\n        let outputColumn = this.columns.find(c => c.name === inputColumn.name);\n        this.inputOutputDrop.emit({\n            inputColumn: inputColumn,\n            outputColumn: outputColumn\n        });\n    }\n\n    newInputOutputDrop(inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn) {\n        this.inputOutputDrop.emit({\n            inputColumn: inputColumn,\n            outputColumn: outputColumn\n        });\n    }\n}\n","<div *ngIf=\"datalinkTransformForm\" cdkDropList #cdkDropList=\"cdkDropList\">\n    <li *ngIf=\"allowMappingOutputs\" class=\"list-group-item p-1 dexih-overflow b-0\" style=\"height: 40px;\" title=\"drop to create new mapping...\" dropZone (dropData)=\"newOutputDrop($event)\" [zone]=\"allowMappingOutputs ? 'input-column' : ''\" dropAllowedClass=\"drop-zone-green\">\n        &nbsp;(Drop&nbsp;Column)\n    </li>\n    <d-widget-section *ngFor=\"let columnGroup of columnGroups\" [title]=\"columnGroup.group\" [padding]=\"false\" [showExpandButton]=\"true\">\n        <div *ngFor=\"let column of columnGroup.columns | fieldSort : 'position' | isValidFilter; let i = index\" dropZone (dropData)=\"newInputOutputDrop($event, column)\" [zone]=\"allowMappingOutputs ? 'input-column' : ''\" dropAllowedClass=\"drop-zone-green\" >\n            <output-column [datalinkTransformForm]='datalinkTransformForm' [column]='column'></output-column>\n        </div>\n    </d-widget-section>\n</div>","export * from './input-parameter.component';\nexport * from './output-parameter.component';\n","import { Component, Input, Output, OnInit, OnDestroy, EventEmitter, OnChanges } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Subscription} from 'rxjs';\nimport { TypeCodes, eBasicType, TypeFunctions } from '../../../hub.remote.models';\nimport { HubService } from '../../../hub.service';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { DexihDatalinkColumn, DexihTableColumn, DexihFunctionParameter, eTypeCode, DexihTable, DexihDatalinkTarget } from '../../../../shared/shared.models';\nimport { DatalinkEditService } from '../datalink-edit.service';\n\nexport class InputValues {\n    public staticValue: string;\n    public textItems: string[];\n    public name: string;\n    public inputParameterSubscription: Subscription;\n    public datalinkColumnSubscription: Subscription;\n}\n\n@Component({\n\n    selector: 'input-parameter',\n    templateUrl: './input-parameter.component.html'\n})\nexport class InputParameterComponent implements OnInit, OnDestroy, OnChanges {\n\n    @Input() public allowDataTypeSelect = false;\n    @Input() public allowNameSelect = false;\n    @Input() public allowAdd = false;\n    @Input() public allowRemove = false;\n    @Input() public inputParameterForms: FormGroup[] = [];\n    @Input() public inputColumns: Array<DexihDatalinkColumn> = null;\n    @Input() public updateParameterName = false;\n    @Input() public rank = 0;\n    @Input() public nodeDatalinkColumnKey = null;\n\n    @Input() public outputParameterForms: FormGroup[] = null;\n    @Input() public outputColumns: Array<DexihTableColumn> = null;\n    @Input() public datalinkTargets: Array<DexihDatalinkTarget> = null;\n    @Input() public variables = [];\n\n    @Output() public addParameter: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n    @Output() public removeParameter: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n\n    public type: TypeFunctions;\n    eBasicType = eBasicType;\n    typeCodes = TypeCodes;\n    eTypeCode = eTypeCode;\n\n    public columns: Array<DexihTableColumn>;\n    inputColumnGroups: Array<{group: string, columns: Array<DexihDatalinkColumn>}> = [];\n\n    outputTables: Array<DexihTable>;\n\n    public inputs: InputValues[] = [];\n\n    ignoreChanges = false;\n\n    newColumn: DexihDatalinkColumn;\n\n    public errors;\n\n    constructor(public hubService: HubService, public editDatalinkService: DatalinkEditService) {\n    }\n\n    ngOnInit() {\n        this.inputs = this.inputParameterForms.map(param => new InputValues());\n        this.errors = this.inputParameterForms.map(a => this.editDatalinkService.hubFormsService.getFormErrorMessages(a, true));\n\n        let io = new InputOutputColumns();\n        if (this.nodeDatalinkColumnKey) {\n            this.inputColumns = io.getAvailableColumns(this.inputColumns, this.nodeDatalinkColumnKey, 0);\n        }\n\n        if (this.rank > 0 && this.inputColumns) {\n            let tables = [];\n            this.inputColumns = this.inputColumns.filter(c => c.rank > 0);\n        }\n\n        if (this.inputColumns) {\n            this.inputColumnGroups = this.editDatalinkService.getColumnGroups(this.inputColumns);\n        } else {\n            this.inputColumnGroups = [];\n        }\n\n        for ( let i = 0; i < this.inputParameterForms.length; i++) {\n            let inputParameter: DexihFunctionParameter = this.inputParameterForms[i].value;\n\n            if (inputParameter.datalinkColumn || inputParameter.value === null || inputParameter.value === undefined) {\n                this.inputs[i].staticValue = '';\n            } else {\n                this.inputs[i].staticValue = inputParameter.value;\n            }\n\n            this.inputs[i].textItems = [];\n\n            if (inputParameter.dataType === eTypeCode.Boolean) {\n                this.inputs[i].textItems = this.inputs[i].textItems.concat(['true', 'false' ]);\n                this.inputs[i].staticValue = this.inputs[i].staticValue.toString();\n            }\n\n            if (inputParameter['runTime'] && inputParameter['runTime'].functionParameter.listOfValues) {\n                this.inputs[i].textItems = this.inputs[i].textItems.concat(inputParameter['runTime'].functionParameter.listOfValues);\n            }\n\n            this.inputs[i].textItems = this.inputs[i].textItems.concat(this.variables);\n        }\n\n        this.updateItems();\n\n        for ( let i = 0; i < this.inputParameterForms.length; i++) {\n            let runTime = this.inputParameterForms[i].value.runTime;\n            if (!runTime || !runTime.functionParameter || !runTime.functionParameter.listOfValues) {\n                this.inputs[i].inputParameterSubscription = this.inputParameterForms[i].valueChanges.subscribe(() => {\n                    if (!this.ignoreChanges) {\n                        this.updateItems();\n                        this.ignoreChanges = true;\n                        if (this.inputParameterForms[i].controls.datalinkColumn.value) {\n                            this.inputParameterForms[i].controls.value.setValue(null);\n                        } else {\n                            this.inputParameterForms[i].controls.value.setValue(this.inputs[i].staticValue);\n                        }\n                        this.ignoreChanges = false;\n                    }\n                    this.errors[i] = this.editDatalinkService.hubFormsService.getFormErrorMessages(this.inputParameterForms[i], true);\n                });\n            }\n\n            if (this.updateParameterName) {\n                this.inputs[i].datalinkColumnSubscription\n                    = this.inputParameterForms[i].controls.datalinkColumn.valueChanges.subscribe(value => {\n                    if (value) {\n                        this.inputParameterForms[i].controls.dataType.setValue(value.dataType);\n                        this.inputParameterForms[i].controls.name.setValue(value.name);\n                    } else {\n                        this.inputParameterForms[i].controls.dataType.setValue(eTypeCode.String);\n                        this.inputParameterForms[i].controls.name.setValue('');\n                    }\n                    this.errors[i] = this.editDatalinkService.hubFormsService.getFormErrorMessages(this.inputParameterForms[i], true);\n                });\n            }\n        }\n    }\n\n    updateStatic(event: any, i: number) {\n        this.inputParameterForms[i].controls.value.setValue(event);\n    }\n\n    ngOnDestroy() {\n        if (this.inputs) {\n            this.inputs.forEach(input => {\n                if (input.datalinkColumnSubscription) { input.datalinkColumnSubscription.unsubscribe(); }\n                if (input.inputParameterSubscription) { input.inputParameterSubscription.unsubscribe(); }\n            });\n        }\n    }\n\n    ngOnChanges() {\n        let table = new DexihTable();\n        table.name = 'Output Columns';\n        table.dexihTableColumns = this.outputColumns;\n\n        this.outputTables = [table];\n\n        if (this.datalinkTargets) {\n            this.datalinkTargets.forEach(target => {\n                this.outputTables.push(target['table']);\n            });\n        }\n    }\n\n    updateItems() {\n        for ( let i = 0; i < this.inputParameterForms.length; i++) {\n            let inputParameter: DexihFunctionParameter = this.inputParameterForms[i].value;\n            this.type = new TypeFunctions(inputParameter.dataType, null, null, null);\n\n            if (!this.allowDataTypeSelect && !this.allowNameSelect) {\n                this.inputs[i].name = inputParameter.name + '(' + this.type.dataType + ')' + (this.rank > 0 ? '[]' : '')\n            } else {\n                this.inputs[i].name = inputParameter.name\n            }\n        }\n    }\n\n    add() {\n        this.addParameter.emit(this.inputParameterForms[0]);\n    }\n\n    remove() {\n        this.removeParameter.emit(this.inputParameterForms[0]);\n    }\n\n    updateNewColumn(value: string, i: number) {\n        let current = this.outputParameterForms[i].controls.targetDatalinkColumn.value;\n        if (value && (!current || value !== current.name) ) {\n            if (!this.newColumn) {\n                this.newColumn = new DexihDatalinkColumn();\n                this.newColumn.position = 1000 - this.newColumn.key;\n                this.newColumn.key = this.hubService.getHubCache().getNextSequence();\n            }\n\n            this.newColumn.dataType = this.outputParameterForms[i].controls.dataType.value;\n            this.newColumn.name = value;\n            this.newColumn.logicalName = value;\n\n            this.outputParameterForms[i].controls.datalinkColumn.setValue(this.newColumn);\n\n            this.updateItems();\n        }\n    }\n\n}\n","    <section>\n        <div class=\"input-group d-flex\">\n            <form *ngFor=\"let inputParameterForm of inputParameterForms; let i = index;\" [formGroup]=\"inputParameterForm\" class=\"flex-fill\">\n                <div class=\"input-group\">\n                    <div *ngIf=\"!allowNameSelect\" class=\"input-group-prepend\">\n                        <div class=\"input-group-text\">\n                            {{inputParameterForm.value.runTime?.functionParameter?.name + \"(\" + eTypeCode[type.dataType] + \")\"}} {{rank > 0 ? \"[]\" : \"\"}}\n                        </div>\n                    </div>\n\n                    <div *ngIf=\"allowNameSelect == true\" class=\"form-control p-0\">\n                        <form-input [border]=\"false\" formControlName=\"name\" type=\"text\"\n                            placeholder=\"Enter a name for the parameter\">\n                        </form-input>\n                    </div>\n\n                    <div *ngIf=\"!inputParameterForm.value.runTime?.functionParameter?.isLabel\" class=\"form-control p-0\">\n                        <form-select formControlName=\"datalinkColumn\" [border]=\"false\"\n                            [items]=\"inputColumnGroups\" parentName=\"group\" childItems=\"columns\" itemKey=\"key\" itemName=\"logicalName\" [(textValue)]=\"inputs[i].staticValue\"\n                            [enableKeySelect]=\"false\" [enableTextEntry]=\"rank === 0\" [enableTextEntryMatch]=\"false\" [setTextEntryToValue]=\"false\"\n                            (textValueChange)=\"updateStatic($event, i)\" [allowNullSelect]=\"true\" selectNullMessage=\"Use Null\" [allowBlankSelect]=\"true\" blankSelectMessage=\"Use Blank\"\n                            [textEntryNote]=\"rank > 0 ? 'Select an array type source (otherwise select add to build an array)' : 'Select a column or enter a static value.'\" \n                            [textEntryItems]=\"inputs[i].textItems\" textEntryItemsTitle=\"Variables\"\n                            [errors]=\"errors[i].datalinkColumn\"\n                            >\n                        </form-select>\n                    </div>\n\n                    <div *ngIf=\"inputParameterForm.value.runTime?.functionParameter?.isLabel\" class=\"form-control p-0\">\n                        <form-input [border]=\"false\" [(ngModel)]=\"inputs[i].staticValue\" [ngModelOptions]=\"{standalone: true}\"\n                            type=\"text\" placeholder=\"Enter a static value.\">\n                        </form-input>\n                    </div>\n\n                    <div *ngIf=\"allowDataTypeSelect == false && allowNameSelect == true\" class=\"input-group-text\">\n                        {{\"(\" + eTypeCode[type.dataType] + \")\"}}\n                    </div>\n\n                    <div *ngIf=\"allowDataTypeSelect == true\" class=\"form-control p-0\">\n                        <form-select [border]=\"false\" formControlName=\"dataType\" [items]=\"typeCodes\" itemKey=\"key\"\n                            itemName=\"name\" >\n                        </form-select>\n                    </div>\n                    <div *ngIf=\"allowDataTypeSelect == true\" class=\"form-control\">\n                        <form-checkbox label=\"Allow Null\" [border]=\"false\" formControlName=\"allowNull\"></form-checkbox>\n                    </div>\n\n                </div>\n            </form>\n\n            <form *ngFor=\"let outputParameterForm of outputParameterForms; let i = index;\" [formGroup]=\"outputParameterForm\" class=\"ml-1  flex-fill\">\n                <!-- <form-select class=\"flex-grow-1\" [border]=\"false\" class=\"form-control p-0\"\n                    formControlName=\"datalinkColumn\" [items]=\"outputColumns\" itemName=\"logicalName\" itemKey=\"key\"\n                    [enableKeySelect]=\"false\" [enableTextEntry]=\"true\" textEntryNote=\"Enter a value to add a new column\"\n                    (textValueChange)=\"updateNewColumn($event, i)\">\n                </form-select> -->\n                <form-select class=\"flex-grow-1\" [border]=\"false\" class=\"form-control p-0\" \n                    formControlName=\"datalinkColumn\" [items]=\"outputTables\" parentName=\"name\" childItems=\"dexihTableColumns\" itemKey=\"key\"\n                    itemName=\"logicalName\" [enableKeySelect]=\"false\" [enableTextEntry]=\"true\" [setTextEntryToValue]=\"false\" [allowNullSelect]=\"true\" selectNullMessage=\"Use Null\" [allowBlankSelect]=\"true\" blankSelectMessage=\"Use Blank\"\n                    textEntryNote=\"Enter new column name, or select existing\"\n                    (textValueChange)=\"updateNewColumn($event, i)\">\n                </form-select>\n            </form>\n\n            <div *ngIf=\"allowAdd && allowRemove\" class=\"input-group-append flex-shrink-1 ml-1 \">\n                <button *ngIf=\"allowAdd\" class=\"btn btn-light\" type=\"button\" (click)=\"add()\" [disabled]=\"!allowAdd\" value=\"Add\">\n                    <i class=\"fa fa-plus-square-o\"></i>\n                </button>\n                <button *ngIf=\"allowRemove\" class=\"btn btn-light\" type=\"button\" (click)=\"remove()\" [disabled]=\"!allowRemove\" value=\"Remove\">\n                    <i class=\"fa fa-minus-square-o\"></i>\n                </button>\n            </div>\n        </div>\n        <small *ngIf=\"!allowAdd && inputParameterForms[0].value.runTime?.functionParameter?.description\" class=\"form-text text-muted\">\n            <markdown [data]=\"inputParameterForms[0].value.runTime.functionParameter.description\"></markdown>\n        </small>\n    </section>\n","import { Component, Input, Output, ViewChild, OnInit, OnDestroy, EventEmitter, OnChanges } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { HubService } from '../../../hub.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { TypeFunctions, TypeCodes, eBasicType } from '../../../hub.remote.models';\nimport { DexihTableColumn, DexihDatalinkColumn, eTypeCode, DexihDatalinkTarget, DexihDatalinkTable, DexihTable } from '../../../../shared/shared.models';\nimport { DatalinkEditService } from '../datalink-edit.service';\n\n@Component({\n\n    selector: 'output-parameter',\n    templateUrl: './output-parameter.component.html'\n})\nexport class OutputParameterComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input() public allowDataTypeSelect = false;\n    @Input() public allowNameSelect = false;\n    @Input() public allowAdd = false;\n    @Input() public allowRemove = false;\n    @Input() public outputParameterForm: FormGroup = null;\n    @Input() public outputColumns: Array<DexihTableColumn> = null;\n    @Input() public datalinkTargets: Array<DexihDatalinkTarget> = null;\n    @Input() public updateParameterName = false;\n    @Input() public rank = 0;\n\n    @Output() public addParameter: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public removeParameter: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public hasChanged: EventEmitter<any> = new EventEmitter<any>();\n\n    private _datalinkColumnSubscription: Subscription;\n    private _parameterSubscription: Subscription;\n    private _dataTypeSubscription: Subscription;\n\n    newColumn: DexihDatalinkColumn;\n    tmpColumnKey: number;\n\n    outputTables: Array<DexihTable>;\n\n    type: TypeFunctions;\n    eBasicType = eBasicType;\n    eTypeCode = eTypeCode;\n\n    typeCodes = TypeCodes;\n\n    public errors;\n\n    ignoreChanges = false;\n\n    constructor(public hubService: HubService, public editDatalinkService: DatalinkEditService) {\n    }\n\n    ngOnInit() {\n        this.updateItems();\n        this.errors = this.editDatalinkService.hubFormsService.getFormErrorMessages(this.outputParameterForm, true);\n\n        if (this.updateParameterName) {\n            this._datalinkColumnSubscription = this.outputParameterForm.controls.datalinkColumn.valueChanges.subscribe(value => {\n                this.outputParameterForm.controls.dataType.setValue(value.dataType);\n                this.outputParameterForm.controls.name.setValue(value.name);\n            });\n        }\n        this._parameterSubscription = this.outputParameterForm.valueChanges.subscribe(param => {\n            this.errors = this.editDatalinkService.hubFormsService.getFormErrorMessages(this.outputParameterForm, true);\n            this.updateItems();\n        });\n\n        this._dataTypeSubscription = this.outputParameterForm.controls.dataType.valueChanges.subscribe(dataType => {\n            if (this.newColumn) {\n                this.newColumn.dataType = dataType;\n            }\n        });\n    }\n\n    ngOnChanges() {\n        let table = new DexihTable();\n        table.name = 'Output Columns';\n        table.dexihTableColumns = this.outputColumns;\n\n        this.outputTables = [table];\n\n        if (this.datalinkTargets) {\n            this.datalinkTargets.forEach(target => {\n                this.outputTables.push(target['table']);\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._datalinkColumnSubscription) { this._datalinkColumnSubscription.unsubscribe(); }\n        if (this._parameterSubscription) { this._parameterSubscription.unsubscribe(); }\n        if (this._dataTypeSubscription) { this._dataTypeSubscription.unsubscribe(); }\n    }\n\n    updateItems() {\n        this.type = new TypeFunctions(this.outputParameterForm.value.dataType, null, null, null);\n    }\n\n    add() {\n        this.addParameter.emit(this.outputParameterForm);\n    }\n\n    remove() {\n        this.removeParameter.emit(this.outputParameterForm);\n    }\n\n    fixDataType() {\n        const column = this.outputParameterForm.controls.datalinkColumn.value;\n        column.dataType = this.outputParameterForm.controls.dataType.value;\n    }\n\n    updateNewColumn(value: string) {\n        let current = this.outputParameterForm.controls.datalinkColumn.value;\n        if (value && (!current || current.name !== value)) {\n            if (!this.newColumn) {\n                this.newColumn = new DexihDatalinkColumn();\n                this.newColumn.key = this.hubService.getHubCache().getNextSequence();\n                this.newColumn.position = 1000 - this.newColumn.key;\n            }\n\n            this.newColumn.dataType = this.outputParameterForm.controls.dataType.value;\n            this.newColumn.allowDbNull = true;\n            this.newColumn.name = value;\n            this.newColumn.logicalName = value;\n            this.newColumn.rank = this.rank;\n            this.newColumn.columnGroup = 'mapping';\n\n            this.outputParameterForm.controls.datalinkColumn.setValue(this.newColumn);\n\n            this.updateItems();\n        }\n    }\n}\n","<form [formGroup]=\"outputParameterForm\" class=\"mb-1\">\n    <section>\n        <div class=\"input-group\">\n\n            <div *ngIf=\"allowDataTypeSelect == false && allowNameSelect == false\" class=\"input-group-prepend\">\n                <div class=\"input-group-text\">\n                    {{outputParameterForm.value.runTime?.functionParameter?.name + \"(\" + eTypeCode[type.dataType] + \")\"}}\n                    {{rank > 0 ? \"[]\" : \"\"}}\n                </div>\n            </div>\n\n            <div *ngIf=\"allowDataTypeSelect == true && allowNameSelect == false\" class=\"input-group-prepend\">\n                <div class=\"input-group-text\">\n                    {{outputParameterForm.value.runTime?.functionParameter?.name }}\n                </div>\n            </div>\n\n            <div *ngIf=\"allowNameSelect\" class=\"form-control p-0\">\n                <form-input formControlName=\"name\" [border]=\"false\" type=\"text\" name=\"name\"\n                    placeholder=\"Enter a name for the parameter\">\n                </form-input>\n                <span class=\"input-group-btn\" style=\"width:0px;\"></span>\n            </div>\n\n            <div *ngIf=\"allowDataTypeSelect == false && allowNameSelect == true\" class=\"input-group-text\">\n                {{\"(\" + eTypeCode[type.dataType] + \")\"}}\n            </div>\n\n            <div class=\"form-control p-0\">\n                <form-select [border]=\"false\" formControlName=\"datalinkColumn\" [items]=\"outputTables\" parentName=\"name\" childItems=\"dexihTableColumns\" itemKey=\"key\"\n                    itemName=\"logicalName\" [enableKeySelect]=\"false\" [enableTextEntry]=\"true\" [setTextEntryToValue]=\"false\"\n                    textEntryNote=\"Enter new column name, or select existing\"\n                    (textValueChange)=\"updateNewColumn($event)\"\n                    [errors]=\"errors.datalinkColumn\">\n                </form-select>\n            </div>\n\n            <div *ngIf=\"allowDataTypeSelect == true\" class=\"form-control p-0\">\n                <form-select formControlName=\"dataType\" [border]=\"false\" [items]=\"typeCodes\" itemKey=\"key\"\n                    itemName=\"name\">\n                </form-select>\n            </div>\n            <div *ngIf=\"allowDataTypeSelect == true\" class=\"form-control\">\n                <form-checkbox label=\"Allow Null\" [border]=\"false\" formControlName=\"allowNull\"></form-checkbox>\n            </div>\n\n            <div class=\"input-group-append\">\n                <button *ngIf=\"outputParameterForm.controls.datalinkColumn?.value && outputParameterForm.controls.dataType.value !== outputParameterForm.controls.datalinkColumn?.value?.dataType\" class=\"btn btn-danger\" type=\"button\" (click)=\"fixDataType()\" title=\"fix target column datatype\">\n                    <i class=\"fa fa-medkit\"></i>\n                </button>\n                <button class=\"btn btn-light\" type=\"button\" (click)=\"add()\" [disabled]=\"!allowAdd\" value=\"Add\">\n                    <i class=\"fa fa-plus-square-o\"></i>\n                </button>\n                <button class=\"btn btn-light\" type=\"button\" (click)=\"remove()\" [disabled]=\"!allowRemove\" value=\"Remove\">\n                    <i class=\"fa fa-minus-square-o\"></i>\n                </button>\n            </div>\n        </div>\n\n        <small *ngIf=\"outputParameterForm.value.runTime?.functionParameter?.description\" class=\"form-text text-muted\">\n            <markdown [data]=\"outputParameterForm.value.runTime.functionParameter.description\"></markdown>\n        </small>\n\n    </section>\n</form>","export { PreviewDataComponent } from './preview-data.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup } from '@angular/forms';\nimport { eDataObjectType } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'datalink-preview-data',\n    templateUrl: './preview-data.component.html'\n})\nexport class PreviewDataComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n\n    public datalinkForm: FormGroup;\n    public datalinkTransformForm: FormGroup;\n\n    private hubCache: HubCache;\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    public eDataObjectType = eDataObjectType;\n\n    public error: string;\n\n    datalinkTransformKey: number;\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.hubService.getRemoteAgentObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n                this.datalinkForm = result[4];\n\n                this.action = data['action'];\n                this.pageTitle = data['pageTitle'];\n\n                // load the cache first\n                if (this.hubCache.isLoaded()) {\n                    // get the hub key from the route data, and update the service.\n                    this.datalinkTransformKey = + params['datalinkTransformKey'];\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Preview Transform Data');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n}\n","<d-widget-section title=\"Preview Transform Data\" [showExpandButton]=\"true\" [padding]=\"false\">\n    <ng-template #header>\n        <d-button-close (click)=\"close()\"></d-button-close>\n    </ng-template>\n    <preview-data [datalink]='datalinkForm?.value' [datalinkTransformKey]=\"datalinkTransformKey\" [viewSource]='eDataObjectType.Datalink'></preview-data>\n</d-widget-section>\n","export { PreviewTableComponent } from './preview-table.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { FormGroup } from '@angular/forms';\nimport { eDataObjectType, DexihTable } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'datalink-preview-table',\n    templateUrl: './preview-table.component.html'\n})\nexport class PreviewTableComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n\n    public datalinkForm: FormGroup;\n    public datalinkTransformForm: FormGroup;\n\n    private hubCache: HubCache;\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    public eDataObjectType = eDataObjectType;\n\n    public error: string;\n\n    tableKey: number;\n    datalinkKey: number;\n    \n    name: string;\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n\n                this.action = data['action'];\n                this.pageTitle = data['pageTitle'];\n\n                // load the cache first\n                if (this.hubCache.isLoaded()) {\n                    // get the hub key from the route data, and update the service.\n                    if (params['tableKey']) {\n                        this.tableKey = +params['tableKey'];\n                        let table = this.hubCache.getTable(this.tableKey);\n                        if (table) {\n                            this.name = table.name;\n                        }\n                    } else {\n                        this.datalinkKey = +params['datalinkKey'];\n                        let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key == this.datalinkKey);\n                        if (datalink) {\n                            this.name = datalink.name;\n                        }\n                    }\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Preview Table Data');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n}\n","<d-widget-section [title]=\"'Preview ' + name\" [showExpandButton]=\"false\" [padding]=\"false\">\n    <ng-template #header>\n        <d-button-close (click)=\"close()\"></d-button-close>\n    </ng-template>\n    <preview-data *ngIf=\"tableKey\" [key]='tableKey' [viewSource]='eDataObjectType.Table'></preview-data>\n    <preview-data *ngIf=\"datalinkKey\" [key]='datalinkKey' [viewSource]='eDataObjectType.Datalink'></preview-data>\n</d-widget-section>\n","<d-widget-section title=\"Profile Rules\" [showExpandButton]=\"true\">\n        <form *ngIf=\"datalinkForm\"  [formGroup]=\"datalinkForm\" >\n    <fieldset>\n        <section>\n            <form-input label=\"Profile Table Name\" formControlName=\"profileTableName\" placeholder=\"Enter the profile table name.\" [autocapitalize]=\"true\" iconClass=\"fa fa-list\" \n            note=\"Specify the table name in the 'Audit Connection' to send the profile results to.  If this table does not exist, it will be created on first run.\">\n            </form-input>\n        </section>\n    </fieldset>\n</form>\n\n<d-table \n    [enableMultiSelect]=\"true\" \n    [enableManualSort]=\"false\"\n    [enableFilter]=\"false\"\n    [columns]=\"columns\" \n    [dataObservable]=\"tableData\" \n    [(selectedItems)]=\"selectedProfileRules\" \n    (onSelectedChange)=\"hasChanged($event)\"\n    keyColumn=\"functionMethodName\">\n\n    <ng-template #rowAction select=\"rowAction\" let-item=\"item\">\n        <form-checkbox label=\"Capture Detailed Distribution\" [(ngModel)]=\"item.detailedResults\" name=\"detailedResults\" (change)=\"updateProfileRule(item)\" ></form-checkbox>\n    </ng-template>\n</d-table>\n</d-widget-section>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { Observable, BehaviorSubject, Subscription, combineLatest} from 'rxjs';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { DexihDatalinkProfile, eFunctionType } from '../../../../shared/shared.models';\n\n@Component({\n    selector: 'profile-rules',\n    templateUrl: './profile-rules.component.html'\n})\n\n\nexport class DatalinkEditProfileRulesComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n\n    private hubCache: HubCache;\n\n    private _subscription: Subscription;\n\n    selectedProfileRules: Array<DexihDatalinkProfile> = new Array<DexihDatalinkProfile>();\n\n    columns = [\n        { name: 'name', title: 'Profile Name', format: '' },\n        { name: 'description', title: 'Description', format: '' }\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<DexihDatalinkProfile>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router\n    ) { }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n            ).subscribe(async result => {\n                this.hubCache = result[0];\n                this.datalinkForm = result[1];\n\n                if (this.datalinkForm) {\n                    // load the cache first\n                    if (this.hubCache.isLoaded()) {\n                        this.selectedProfileRules = this.datalinkForm.value.dexihDatalinkProfiles;\n                        let profileRules = (await this.hubService.GetFunctionsByType(eFunctionType.Profile))\n                            .map(profile => {\n\n                                let profileRuleForm = this.selectedProfileRules.find(c =>\n                                    c.functionAssemblyName === profile.functionAssemblyName\n                                    && c.functionClassName === profile.functionClassName\n                                    && c.functionMethodName === profile.functionMethodName);\n\n                                return {\n                                    name: profile.name,\n                                    description: profile.description,\n                                    functionAssemblyName: profile.functionAssemblyName,\n                                    functionClassName: profile.functionClassName,\n                                    functionMethodName: profile.functionMethodName,\n                                    detailedResults: profileRuleForm ? profileRuleForm.detailedResults : false\n                                }\n                        });\n                        this._tableData.next(profileRules);\n                    }\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Edit Custom Function');\n        }\n\n    }\n\n    updateProfileRules() {\n        if (this.datalinkForm) {\n            let profiles = <FormArray>this.datalinkForm.controls.dexihDatalinkProfiles;\n\n            // reset existing profiles.\n            profiles.controls.forEach(profile => {\n                let profileFormGroup = <FormGroup>profile;\n                profileFormGroup.controls.isValid.setValue(false);\n            });\n\n            // add the selected profiles, with isValid = true\n            this.selectedProfileRules.forEach(profile => {\n                let profileRuleForm = <FormGroup>profiles.controls.find(c => c.value.functionAssemblyName === profile.functionAssemblyName\n                    && c.value.functionClassName === profile.functionClassName\n                    && c.value.functionMethodName === profile.functionMethodName);\n\n                if (!profileRuleForm) {\n                    let profileRule = new DexihDatalinkProfile();\n                    profileRule.key = this.hubCache.getNextSequence();\n                    profileRule.datalinkKey = this.datalinkForm.value.key;\n                    profileRule.functionAssemblyName = profile.functionAssemblyName;\n                    profileRule.functionClassName = profile.functionClassName;\n                    profileRule.functionMethodName = profile.functionMethodName;\n                    profileRule.detailedResults = profile.detailedResults;\n                    profileRule.isValid = true;\n                    profileRuleForm = this.editDatalinkService.hubFormsService.datalinkProfileFormGroup(profileRule);\n                    profiles.push(profileRuleForm);\n                } else {\n                    profileRuleForm.controls.isValid.setValue(true);\n                }\n            });\n\n            for (let i = profiles.controls.length - 1; i >= 0; i--) {\n                if (!profiles.controls[i].value.isValid) {\n                    profiles.removeAt(i);\n                }\n            }\n        }\n    }\n\n    updateProfileRule(profile: DexihDatalinkProfile) {\n        let profiles = <FormArray>this.datalinkForm.controls.dexihDatalinkProfiles;\n\n        let profileRuleForm = <FormGroup>profiles.controls.find(c => c.value.functionAssemblyName === profile.functionAssemblyName\n            && c.value.functionClassName === profile.functionClassName\n            && c.value.functionMethodName === profile.functionMethodName);\n\n        profileRuleForm.controls.detailedResults.setValue(profile.detailedResults);\n        this.editDatalinkService.hubFormsService.hasChanged = true;\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.updateProfileRules();\n    }\n\n    hasChanged(items) {\n        if (items) {\n            this.selectedProfileRules = items;\n        }\n        this.updateProfileRules();\n        this.editDatalinkService.hubFormsService.hasChanged = true;\n    }\n\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { eConnectionPurpose, eDatalinkTypeItems, eAlertLevelItems, eAlertLevel } from '../../../../shared/shared.models';\n\n@Component({\n    selector: 'dexih-datalink-edit-properties-form',\n    templateUrl: './datalink-edit-properties.component.html'\n})\nexport class DatalinkEditPropertiesComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n\n    public pageTitle: string;\n    public message: string;\n\n    private _subscription: Subscription;\n\n    public eConnectionPurpose = eConnectionPurpose;\n    eDatalinkTypeItems = eDatalinkTypeItems.filter(c => c.key > 0);\n\n    public eAlertLevelItems = eAlertLevelItems;\n    public eAlertLevel = eAlertLevel;\n\n    constructor(\n        private hubService: HubService,\n        public editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n                this.pageTitle = result[0]['pageTitle'];\n                this.datalinkForm = result[3];\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Properties');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n\n}\n","<d-widget-section title='Properties' [showExpandButton]=\"true\">\n    <form *ngIf=\"datalinkForm\" [formGroup]=\"datalinkForm\">\n        <fieldset>\n            <section>\n                <form-select label=\"Datalink Type\" formControlName=\"datalinkType\" [items]=\"eDatalinkTypeItems\" itemKey=\"key\" itemName=\"description\" iconClass=\"fa fa-database\"\n                    note='Categorize the type of function this datalink is performing.' [enableFilter]=\"false\">\n                </form-select>\n            </section>\n\n            <section>\n                <form-input label=\"Datalink Name\" formControlName=\"name\" placeholder=\"Enter the datalink name.\" iconClass=\"fa fa-list\" [autocapitalize]=\"true\" [errors]=\"editDatalinkService.hubFormsService.formErrors.name\">\n                </form-input>\n            </section>\n\n            <section>\n                <form-textarea label=\"Description\" [showPreview]=\"true\" [isHidden]=\"true\" formControlName=\"description\" placeholder=\"Enter the description.\"\n                    [errors]=\"editDatalinkService.hubFormsService.formErrors.description\">\n                </form-textarea>\n            </section>\n\n            <section>\n                <form-select label=\"Alerting Level\" formControlName=\"alertLevel\" [items]=\"eAlertLevelItems\"\n                    itemKey=\"key\" itemName=\"description\" iconClass=\"fa fa-bell\"\n                    [errors]=\"editDatalinkService.hubFormsService.formErrors.alertLevel\" note=\"When alerts should be sent.\"\n                    [enableFilter]=\"false\">\n                </form-select>\n            </section>\n            \n            <section>\n                <form-checkbox label=\"Datalink is shared in the catalog to users with read access.\" formControlName=\"isShared\">\n                </form-checkbox>\n            </section>\n\n        </fieldset>\n    </form>\n</d-widget-section> \n\n<d-widget-section title='Input Parameters' [showExpandButton]=\"true\">\n    <input-parameters [showEdit]=\"true\" [parameters]=\"datalinkForm.controls.parameters\" [formsService]=\"editDatalinkService.hubFormsService\"></input-parameters>\n</d-widget-section>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'dexih-datalink-run-plan',\n    templateUrl: './datalink-run-plan.component.html'\n})\nexport class DatalinkRunPlanComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n\n    public pageTitle: string;\n    public message: string;\n\n    private _subscription: Subscription;\n\n    public allowSave = false;\n\n    constructor(\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n                this.pageTitle = result[0]['pageTitle'];\n                this.datalinkForm = result[3];\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Run Plan');\n        }\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n}\n","<div class=\"no-padding\">\n    <div class=\"widget-body\">\n\n        <div section class=\"widget-body-toolbar\">\n\n            <div class=\"form-row\">\n                <div class=\"col-sm-6\">\n                    <h4>Run Plan</h4>\n                </div>\n                <div class=\"col-sm-6 text-right\">\n                </div>\n            </div>\n        </div>\n\n        NOT COMPLETED\n\n    </div>\n</div>","<dexih-invalid-form-details class=\"mr-1\" [control]=\"datalinkForm\"></dexih-invalid-form-details>\n<d-button-splitdropdown *ngIf=\"hubCache.canWrite\" [disabled]=\"!editDatalinkService.hubFormsService.hasChanged\" buttonClass=\"btn-primary\" iconClass=\"fa fa-cloud-download\" text=\"Save\" (buttonClick)=\"saveDatalink(false)\" class=\"mr-1\">\n    <li><a class=\"dropdown-item\" (click)=\"saveDatalink(false)\" title=\"Save in the hub\"><i class=\"fa  fa-cloud-download\"></i> Save</a></li>\n    <li><a class=\"dropdown-item\" (click)=\"editDatalinkService.hubFormsService.saveLocal()\" title=\"Export as a local file\"><i class=\"fa fa-floppy-o\"></i> Save as file</a></li>\n    <li><a class=\"dropdown-item\" (click)=\"saveDatalink(true)\" title=\"Save another version\"><i class=\"fa fa-plus-circle\"></i> Save As...</a></li>\n</d-button-splitdropdown>\n<d-button-dropdown class=\"mr-1\" *ngIf=\"hubCache.canWrite && datalinkForm?.controls.dexihDatalinkTargets.value.length > 0\" text=\"Actions\" iconClass=\"fa fa-bolt\" buttonClass=\"btn-primary\" [pullRight]=\"true\">\n    <a class=\"dropdown-item\" (click)=\"fixMappings()\" title=\"Attempt to fix mappings broken when removing/inserting transforms.\">Fix Mappings</a>\n    <a class=\"dropdown-item\" (click)=\"runDatalink(false, false)\" title=\"Run datalink, truncating the target table for each.\">Run</a>\n    <a class=\"dropdown-item\" (click)=\"runDatalink(true, true)\" title=\"Run datalink, truncating the target table for each.\">Run (with truncate)</a>\n    <a class=\"dropdown-item\" (click)=\"runDatalink(false, true)\" title=\"Run datalink, resetting the incremental (i.e. reload all source data rows) \">Run (reset incremental)</a>\n    <a class=\"dropdown-item\" (click)=\"preview(false)\" title=\"Preview the output of this datalink\">Preview Datalink</a>\n    <a class=\"dropdown-item\" (click)=\"preview(true)\" title=\"Preview the delta changes of this datalink\">Preview Datalink (changes)</a>\n    <a class=\"dropdown-item\" (click)=\"download()\" title=\"Download the output from this datalink\">Download Datalink Data</a>\n</d-button-dropdown>\n<cancel-button [formsService]=\"editDatalinkService.hubFormsService\"></cancel-button>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { BehaviorSubject, Subscription, combineLatest} from 'rxjs';\nimport { eUpdateStrategy, DownloadObject, eSourceType, eDownloadFormat, eDataObjectType } from '../../../../shared/shared.models';\nimport { CancelToken } from '../../../../+auth/auth.models';\n\n@Component({\n    selector: 'datalink-save-button',\n    templateUrl: './datalink-edit-save-button.component.html'\n})\n\nexport class DatalinkEditSaveButtonComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n    private cancelToken: CancelToken = new CancelToken();\n\n    datalinkForm: FormGroup;\n    \n\n    hubCache: HubCache;\n    eUpdateStrategy = eUpdateStrategy;\n\n    constructor(\n        public hubService: HubService,\n        public editDatalinkService: DatalinkEditService,\n        public authService: AuthService,\n        public router: Router,\n        public route: ActivatedRoute\n    ) { }\n\n    ngOnInit() {\n\n        try {\n            this._subscription = combineLatest(\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                this.datalinkForm = result[0];\n                this.hubCache = result[1];\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'datalink save button');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    async saveDatalink(saveAs = false) {\n        this.editDatalinkService.savingDatalink.next(true);\n\n        if (this.datalinkForm.controls.dexihDatalinkTargets.dirty) {\n            let targets = <FormArray>this.datalinkForm.controls.dexihDatalinkTargets;\n            let tables = targets.controls.map(c => {\n                let target = <FormGroup>c;\n                let table = target.controls.table;\n                if (table) {\n                    return table;\n                }\n            });\n\n            let tableNames = tables.filter(c => c.value.key > 0 && c.dirty).map(c => c.value.name).join(', ');\n\n            let doSave = async () => {\n                for (let t of targets.controls) {\n                    if (t.dirty) {\n                        let target = <FormGroup>t;\n                        let savedTable = await this.hubService.saveTables([target.controls.table.value]);\n                        target.setControl('table', this.editDatalinkService.hubFormsService.tableForm(savedTable[0]));\n                        target.controls.tableKey.setValue(savedTable[0].key);\n                    }\n                }\n\n                this.editDatalinkService.hubFormsService.save(false, saveAs);\n                this.editDatalinkService.savingDatalink.next(false);\n            }\n\n            // if no tables with key > 0 they are all new, so no need to prompt.\n            if (tableNames.length === 0) {\n                await doSave();\n            } else {\n            this.authService\n                .confirmDialog(`Save Target Tables?`, `The existing target table(s)\n                ${tableNames} have changed.\n                This is a shared object, and may impact other dependencies if changed.\n                Note, this will only save the metadata, use the 'Create Table' function to overwrite the physical table.`)\n                .then(async (confirm) => {\n                    if (confirm) {\n                        await doSave();\n                    }\n                }).catch(() => this.editDatalinkService.savingDatalink.next(false))\n            }\n        } else {\n            this.editDatalinkService.hubFormsService.save(false, saveAs);\n            this.editDatalinkService.savingDatalink.next(false);\n        }\n    }\n\n    preview() {\n        const transformsArray = <FormArray>this.datalinkForm.controls.dexihDatalinkTransforms;\n        let transforms = transformsArray.controls\n//            .filter(c => c.value.transform.allowUserConfig)\n            .sort((a, b) => b.value.position - a.value.position);\n\n        if (transforms.length > 0) {\n            this.router.navigate(['transforms/transform', transforms[0].value.key,\n            'preview-transform-data'], { relativeTo: this.route });\n        }\n    }\n\n    previewChanges() {\n        if (this.editDatalinkService.hubFormsService.hasChanged) {\n            this.authService.confirmDialog('Save Datalink', 'The datalink must be saved before previewing delta changes.  Would you like to save now?')\n                .then(confirm => {\n                    if (confirm) {\n                        this.saveDatalink();\n                        this.editDatalinkService.savingDatalink.toPromise().then(value => {\n                            if (value) {\n                                this.router.navigate(['datalink-preview', this.datalinkForm.controls.key.value, true]);\n                            }\n                        });\n                    }\n                });\n        } else {\n            this.router.navigate(['datalink-preview', this.datalinkForm.controls.key.value, true]);\n        }\n    }\n\n    download() {\n        if (this.datalinkForm.dirty) {\n            this.authService.confirmDialog\n                ('Save Datalink',\n                    'The datalink must be saved before a data download task can be started.  Do you want to save the datalink?')\n                .then(saveDatalink => {\n                    if (saveDatalink) {\n                        this.saveDatalink();\n                        this.doDownload();\n                    }\n                })\n        } else {\n            this.doDownload();\n        }\n    }\n\n    doDownload() {\n        let downloadItems = new Array<DownloadObject>();\n        let downloadObject = new DownloadObject();\n        downloadObject.objectKey = this.datalinkForm.controls.key.value;\n        downloadObject.objectType = eDataObjectType.Datalink;\n        downloadItems.push(downloadObject);\n        this.hubService.downloadData(downloadItems, true, eDownloadFormat.Csv, this.cancelToken)\n    }\n\n    cancel() {\n        this.editDatalinkService.hubFormsService.cancel();\n    }\n\n    runDatalink(truncateTarget: boolean, resetIncremental: boolean) {\n        if (this.editDatalinkService.hubFormsService.hasChanged) {\n            this.authService.confirmDialog('Save Datalink', 'The datalink must be saved before running.  Would you like to save now?')\n                .then(confirm => {\n                    if (confirm) {\n                        this.saveDatalink();\n                        this.editDatalinkService.savingDatalink.toPromise().then(value => {\n                            if (value) {\n                                this.hubService\n                                    .runDatalinks([this.datalinkForm.controls.key.value], truncateTarget, resetIncremental\n                                        , null, null, null, this.cancelToken);\n                            }\n                        });\n                    }\n                });\n        } else {\n            this.hubService.runDatalinks([this.datalinkForm.controls.key.value], truncateTarget, resetIncremental,\n                null, null, null, this.cancelToken);\n        }\n    }\n\n    fixMappings() {\n        this.editDatalinkService.fixMappings(this.datalinkForm);\n    }\n}\n\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubCache, sourceTypes, eMappingStatus, impactMappingStatuses } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { Observable, Subscription, BehaviorSubject , combineLatest} from 'rxjs';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { eObjectUse, ColumnUsageNode, eDatalinkObjectType } from '../../../hub.lineage.models';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { DexihDatalinkTable, eSourceType, DexihDatalinkColumn, eSecurityFlag, eDeltaType } from '../../../../shared/shared.models';\nimport { AuthService } from '../../../../+auth/auth.service';\n\n@Component({\n    selector: 'dexih-datalink-edit-source-table-form',\n    templateUrl: './datalink-edit-source-table.component.html'\n})\nexport class DatalinkEditSourceTableComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n\n    private _subscription: Subscription;\n    private _sourceSubscription: Subscription;\n\n    public sourceTables: DexihDatalinkTable[];\n    private hubCache: HubCache;\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    public eMappingStatus = eMappingStatus;\n\n    public eSourceType = eSourceType;\n    public sourceTypes = sourceTypes;\n\n    columns = [\n        { name: 'position', title: '#', format: '' },\n        { name: 'columnStatus', title: 'Impact', format: 'Html' },\n        { name: 'columnGroup', title: 'Group', format: '' },\n        { name: 'name', title: 'Name', format: '' },\n        { name: 'logicalName', title: 'Logical', format: '' },\n        { name: 'dataType', title: 'Data Type', format: '' },\n        { name: 'deltaType', title: 'Delta Type', format: 'Enum', enum: eDeltaType },\n        { name: 'allowDbNull', title: 'Null?', format: 'Boolean' },\n        { name: 'isIncrementalUpdate', title: 'Incremental?', format: 'Boolean' },\n        { name: 'securityFlag', title: 'Security Flag', format: 'Enum', enum: eSecurityFlag },\n        { name: 'isInput', title: 'Input?', format: 'Boolean' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n                this.pageTitle = result[0]['pageTitle'];\n                this.hubCache = result[2];\n                this.datalinkForm = result[3];\n\n                if (this.datalinkForm) {\n                    this.updateData();\n\n                    if (this._sourceSubscription) { this._sourceSubscription.unsubscribe(); }\n                    this._sourceSubscription = this.datalinkForm.controls.sourceDatalinkTable.valueChanges.subscribe(() => {\n                        this.updateData();\n                    });\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Edit Source Table');\n        }\n\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._sourceSubscription) { this._sourceSubscription.unsubscribe(); }\n    }\n\n    previewData() {\n        let sourceDatalinkTable = <DexihDatalinkTable> this.datalinkForm.controls.sourceDatalinkTable.value;\n\n        switch (sourceDatalinkTable.sourceType) {\n            case eSourceType.Table:\n                let sourceTableKey = sourceDatalinkTable.sourceTableKey;\n                this.router.navigate(['preview-table-data', 'table', sourceTableKey], { relativeTo: this.route });\n                break;\n            case eSourceType.Datalink:\n                let datalinkKey = sourceDatalinkTable.sourceDatalinkKey;\n                this.router.navigate(['preview-table-data', 'datalink', datalinkKey], { relativeTo: this.route });\n                break;\n            default:\n                this.authService.informationDialog('Cannot Preview', 'Previews are only available for tables and datalinks.');\n                break;\n        }\n    }\n\n    columnStatus(column: DexihDatalinkColumn): string {\n        let columnUsage: ColumnUsageNode = new ColumnUsageNode(\n            eDatalinkObjectType.SourceTable,\n            eObjectUse.Source,\n            this.datalinkForm.value,\n            column,\n            null,\n            null,\n            null,\n            eMappingStatus.PassThroughMap,\n            this.hubCache\n        );\n        const lineage = columnUsage.createDatalinkImpact(true);\n        const mappingStatus = impactMappingStatuses.find(c => c.key === lineage);\n        if (mappingStatus) {\n            return `${mappingStatus.name}<i class=\"float-right ${mappingStatus.statusClass}\"></i>`\n        }\n    }\n\n    updateData() {\n        let sourceDatalinkTable = <FormGroup>this.datalinkForm.controls.sourceDatalinkTable;\n        let columnData = [];\n\n        let columnsArray = <FormArray>sourceDatalinkTable.controls.dexihDatalinkColumns;\n\n        columnsArray.controls.filter(c => c.value.isValid)\n            .sort((a, b) => a.value.position - b.value.position)\n            .forEach(columnForm => {\n                let column = <DexihDatalinkColumn> columnForm.value;\n                let newColumn = {\n                    key: column.key,\n                    position: column.position,\n                    columnStatus: this.columnStatus(column),\n                    columnGroup: column.columnGroup,\n                    name: column.name,\n                    dataType: this.hubCache.dataTypeToString(column),\n                    deltaType: column.deltaType,\n                    allowDbNull: column.allowDbNull,\n                    logicalName: column.logicalName,\n                    isIncrementalUpdate: column.isIncrementalUpdate,\n                    securityFlag: column.securityFlag,\n                    isInput: column.isInput\n                };\n\n            columnData.push(newColumn);\n        });\n\n        this._tableData.next(columnData);\n    }\n\n    deleteSelected(columns: Array<DexihDatalinkColumn>) {\n        let sourceDatalinkTable = <FormGroup>this.datalinkForm.controls.sourceDatalinkTable;\n        let columnsArray = <FormArray>sourceDatalinkTable.controls.dexihDatalinkColumns;\n\n        columns.forEach(column => {\n            let index = columnsArray.controls.findIndex(c => c.value.key === column.key);\n            columnsArray.removeAt(index);\n        });\n\n        this.updateData();\n    }\n\n    newColumn() {\n        this.router.navigate(['newcolumn'], { relativeTo: this.route.parent });\n    }\n\n    editColumn(column: DexihDatalinkColumn) {\n        this.router.navigate(['column', column.key], { relativeTo: this.route.parent });\n    }\n\n    columnSortChange(items: Array<DexihDatalinkColumn>) {\n        let sourceDatalinkTable = <FormGroup>this.datalinkForm.controls.sourceDatalinkTable;\n        let existingItems = <FormArray>sourceDatalinkTable.controls.dexihDatalinkColumns;\n\n        let position = 1;\n        items.forEach(item => {\n            let column = <FormGroup>existingItems.controls.find(c => c.value.key === item.key);\n            if (column) {\n                column.controls.position.setValue(position++);\n            }\n        });\n\n        this.updateData();\n    }\n}\n","<d-widget-section title='Source Type' [showExpandButton]=\"true\">\n    <ng-template #header>\n        <d-button-edit class=\"mr-1\"\n            *ngIf=\"datalinkForm.controls.sourceDatalinkTable.value.sourceType == eSourceType.Table && datalinkForm.controls.sourceDatalinkTable.value.sourceTableKey\"\n            [routerLink]=\"['table-edit', datalinkForm.controls.sourceDatalinkTable.value.sourceTableKey]\"> Table\n        </d-button-edit>\n        <d-button-edit class=\"mr-1\"\n            *ngIf=\"datalinkForm.controls.sourceDatalinkTable.value.sourceType == eSourceType.Datalink && datalinkForm.controls.sourceDatalinkTable.value.sourceDatalinkKey\"\n            [routerLink]=\"['../../edit', datalinkForm.controls.sourceDatalinkTable.value.sourceDatalinkKey]\"> Datalink\n        </d-button-edit>\n        <d-button-preview (click)=\"previewData()\"></d-button-preview>\n    </ng-template>\n\n    <datalink-table *ngIf=\"datalinkForm\" [datalinkTableForm]=\"datalinkForm.controls.sourceDatalinkTable\">\n    </datalink-table>\n</d-widget-section>\n\n<d-widget-section title='Columns' [showExpandButton]=\"true\" [padding]=\"false\">\n    <d-table [enableMultiSelect]=\"true\" [enableManualSort]=\"true\" (onSortChanged)=\"columnSortChange($event)\"\n        [columns]=\"columns\" [dataObservable]=\"tableData\" (rowClick)=\"editColumn($event)\">\n\n        <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n            <d-button-delete (click)=\"deleteSelected(items)\" title=\"Delete selected columns\"></d-button-delete>\n        </ng-template>\n\n        <ng-template #actions select=\"actionsTemplate\" let-items=\"items\">\n            <d-button-new (click)=\"newColumn()\" title=\"Create a new column\"></d-button-new>\n        </ng-template>\n\n        <ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n            <d-button-edit (click)=\"editColumn(item)\" title=\"Edit selected column\"></d-button-edit>\n        </ng-template>\n\n    </d-table>\n</d-widget-section>","export * from './standard-function-edit.component';\n","<div *ngIf=\"newDatalinkTransformItemForm && inputColumns && outputColumns\">\n\n\t<d-widget-section  title=\"Edit Function\" [showExpandButton]=\"false\">\n\t\t<ng-template #header>\n\t\t\t<d-button-apply [disabled]=\"newDatalinkTransformItemForm.pristine\" (click)=\"!newDatalinkTransformItemForm.pristine && applyExit()\"\n\t\t\tclass=\"mr-1\"></d-button-apply>\n\t\t\t<d-button-cancel (click)=\"cancel()\"></d-button-cancel>\n\t\t</ng-template>\n\n\t\t<form *ngIf=\"datalinkTransformForm\" [formGroup]=\"newDatalinkTransformItemForm\">\n\t\t\t<fieldset>\n\n\t\t\t\t<section *ngIf=\"hubCache?.hub.dexihCustomFunctions.length > 0\">\n\t\t\t\t\t<form-checkbox label=\"Use a custom function\" [(ngModel)]=\"useCustomFunction\" [ngModelOptions]=\"{standalone: true}\">\n\t\t\t\t\t</form-checkbox>\n\t\t\t\t</section>\n\n\t\t\t\t<ng-template [ngIf]=\"useCustomFunction\">\n\t\t\t\t\t<section [ngStyle]=\"{'z-index': 499, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Select a hub function\" formControlName=\"customFunctionKey\" [items]=\"customFunctions\" itemKey=\"key\"\n\t\t\t\t\t\t itemName=\"name\" itemTitle=\"description\">\n\t\t\t\t\t\t \t<customFunction-edit-button [key]=\"newDatalinkTransformItemForm.controls.customFunctionKey.value\"></customFunction-edit-button>\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template [ngIf]=\"!useCustomFunction\">\n\t\t\t\t\t<section [ngStyle]=\"{'z-index': 500, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Category\" [items]=\"functionCategories\" [allowNullSelect]=\"true\" selectNullMessage=\"(All functions)\"\n\t\t\t\t\t\t [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"functionCategory\" (ngModelChange)=\"updateCategory($event)\" [sortItems]=\"true\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<section [ngStyle]=\"{'z-index': 499, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Select a standard function\" (ngModelChange)=\"selectFunction($event, true)\" [(ngModel)]=\"selectedFunction\"\n\t\t\t\t\t\t [ngModelOptions]=\"{standalone: true}\" [items]=\"filteredFunctions\" [enableKeySelect]=\"false\" itemKey=\"name\" itemName=\"name\" itemTitle=\"description\" [note]=\"selectedFunction?.description\"\n\t\t\t\t\t\t [sortItems]=\"true\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t</ng-template>\n\t\t\t\t<div *ngIf=\"selectedFunction || selectedCustomFunction\" class=\"form-row \">\n\t\t\t\t\t<section *ngIf=\"transformFunctionType != eFunctionType.Validate && transformFunctionType != eFunctionType.Condition\"\n\t\t\t\t\t class=\"col-xs-12 col-sm-6 col-md-3\" [ngStyle]=\"{'z-index': 405, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Action when null\" formControlName=\"onNull\" [items]=\"eErrorActionItems\" itemKey=\"key\" itemName=\"name\"\n\t\t\t\t\t\t iconClass=\"fa fa-database\" [enableFilter]=\"false\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"col-xs-12 col-sm-6 col-md-3\" [ngStyle]=\"{'z-index': 404, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Action when error\" formControlName=\"onError\" [items]=\"eErrorActionItems\" itemKey=\"key\" itemName=\"name\"\n\t\t\t\t\t\t iconClass=\"fa fa-database\" [enableFilter]=\"false\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t\n\t\t\t\t\t<div *ngIf=\"transformFunctionType == eFunctionType.Validate\" class=\"col-xs-12 col-sm-6 col-md-3\" [ngStyle]=\"{'z-index': 402, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-select label=\"Action when false\" formControlName=\"invalidAction\" [items]=\"eInvalidActionItems\" itemKey=\"key\"\n\t\t\t\t\t\t itemName=\"name\" [enableFilter]=\"false\" iconClass=\"fa fa-database\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</div>\n\t\n\t\t\t\t\t<section *ngIf=\"selectedFunction?.genericType !== eGenericType.None\" class=\"col-xs-12 col-sm-6 col-md-3\">\n\t\t\t\t\t\t<form-select label=\"Data Type\" formControlName=\"genericTypeCode\" [items]=\"typeCodes\" itemKey=\"key\" itemName=\"name\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<section  class=\"col-xs-12 col-sm-6 col-md-3\">\n\t\t\t\t\t\t<form-select label=\"Cache Options\" formControlName=\"functionCaching\" [items]=\"functionCache\" itemKey=\"key\" itemName=\"name\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<section *ngIf=\"(selectedFunction?.returnParameters?.length > 0 && selectedFunction?.returnParameters[0].dataType == eTypeCode.Boolean) || (selectedCustomFunction && selectedCustomFunction?.returnType == eTypeCode.Boolean)\" class=\"col-xs-12 col-sm-6 col-md-3 align-self-end\">\n\t\t\t\t\t\t<form-checkbox label=\"Return 'NOT' result\" formControlName=\"notCondition\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div *ngIf=\"(selectedFunction || selectedCustomFunction) && inputParameterControls.length > 0\" class=\"mt-1\">\n\t\t\t\t\t<div class=\"d-flex flex-row mb-1\">\n\t\t\t\t\t\tInput Parameters\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngFor=\"let inputParameter of inputParameterControls; let i = index\" [ngStyle]=\"{'z-index': 300-i, 'position': 'relative'}\" class=\"mb-1\">\n\t\t\t\t\t\t<div *ngIf=\"inputParameter.value.rank > 0 && !inputParameter.value.runTime.functionParameter.linkedName\">\n\t\t\t\t\t\t\t<div class=\"d-flex flex-row mb-1\">\n\t\t\t\t\t\t\t\t<div class=\"input-group-text\">\n\t\t\t\t\t\t\t\t\tArray - {{inputParameter.value.name}}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"ml-auto\">\n\t\t\t\t\t\t\t\t\t<d-button *ngIf=\"selectedFunction.importMethodName\" iconClass=\"fa fa-download\" text=\"Import Mappings\" (click)=\"importInputOutputMappings(inputParameter)\"\n\t\t\t\t\t\t\t\t\t title=\"Attempt to import the mappings from the source data\" class=\"mr-1\"></d-button>\n\t\t\t\t\t\t\t\t\t<d-button iconClass=\"fa fa-plus\" text=\"Add Parameter\" (click)=\"addParameter(inputParameter, eParameterDirection.Input)\" title=\"Add a parameter to the array\"\n\t\t\t\t\t\t\t\t\t class=\"mr-1\"></d-button>\n\t\t\t\t\t\t\t\t\t<d-button iconClass=\"fa fa-columns\" text=\"Add All Inputs\" (click)=\"addAllColumns(inputParameter)\" title=\"Add all the input columns to the array\"\n\t\t\t\t\t\t\t\t\t class=\"mr-1\"></d-button>\n\t\t\t\t\t\t\t\t\t<d-button iconClass=\"fa fa-eraser\" text=\"Clear\" (click)=\"clearArray(inputParameter)\"></d-button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<input-parameter *ngIf=\"inputParameter.controls.arrayParameters.controls.length === 0\" [inputParameterForms]=\"[inputParameter]\" [nodeDatalinkColumnKey]=\"datalinkTransformForm.controls.nodeDatalinkColumn.value?.key\"\n\t\t\t\t\t\t\t [inputColumns]=\"inputColumns\" [allowAdd]=\"false\" [allowRemove]=\"false\" [updateParameterName]=\"false\" [rank]=\"inputParameter.value.rank\"\n\t\t\t\t\t\t\t [variables]=\"variables\">\n\t\t\t\t\t\t\t</input-parameter>\n\t\t\t\t\t\t\t<div *ngFor=\"let arrayParameter of inputParameter.controls.arrayParameters.controls; let j = index, let last = last\" class=\"pl-2 mb-1\"\n\t\t\t\t\t\t\t [ngStyle]=\"{'z-index': 300-j, 'position': 'relative'}\">\n\t\t\t\t\t\t\t\t<input-parameter [inputParameterForms]=\"[arrayParameter]\" [inputColumns]=\"inputColumns\" [allowAdd]=\"true\" [nodeDatalinkColumnKey]=\"datalinkTransformForm.controls.nodeDatalinkColumn.value?.key\"\n\t\t\t\t\t\t\t\t [allowRemove]=\"true\" [updateParameterName]=\"false\" (addParameter)=\"addParameter(inputParameter, eParameterDirection.Input, j)\"\n\t\t\t\t\t\t\t\t (removeParameter)=\"removeParameter(inputParameter, j)\" [variables]=\"variables\">\n\t\t\t\t\t\t\t\t</input-parameter>\n\t\t\t\t\t\t\t\t<small *ngIf=\"last && arrayParameter.value.runTime?.functionParameter?.description\" class=\"form-text text-muted\">\n\t\t\t\t\t\t\t\t\t<markdown [data]=\"arrayParameter.value.runTime.functionParameter.description\"></markdown>\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<input-parameter *ngIf=\"inputParameter.value.rank == 0 && !inputParameter.value.runTime.functionParameter.linkedName\" [inputParameterForms]=\"[inputParameter]\" [inputColumns]=\"inputColumns\" [nodeDatalinkColumnKey]=\"datalinkTransformForm.controls.nodeDatalinkColumn.value?.key\"\n\t\t\t\t\t\t [allowAdd]=\"false\" [allowRemove]=\"false\" [updateParameterName]=\"false\" [variables]=\"variables\">\n\t\t\t\t\t\t</input-parameter>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- When linked array, then place parameters side/side -->\n\t\t\t\t<div *ngFor=\"let arrayParameter of arrayParameters\" class=\"mt-1\">\n\t\t\t\t\t<div class=\"d-flex flex-row mb-1\">\n\t\t\t\t\t\t{{arrayParameter.name}}\n\t\t\t\t\t\t<div class=\"ml-auto\">\n\t\t\t\t\t\t\t<d-button *ngIf=\"selectedFunction.importMethodName\" iconClass=\"fa fa-download\" text=\"Import Mappings\" (click)=\"importInputOutputMappings(arrayParameter)\"\n\t\t\t\t\t\t\t title=\"Attempt to import the mappings from the source data\" class=\"mr-1\"></d-button>\n\t\t\t\t\t\t\t<d-button iconClass=\"fa fa-plus\" text=\"Add Mapping\" (click)=\"addInputOutputParameter(arrayParameter)\"\n\t\t\t\t\t\t\t title=\"Add a parameter to the array\" class=\"mr-1\"></d-button>\n\t\t\t\t\t\t\t<d-button iconClass=\"fa fa-columns\" text=\"Add All Inputs\" (click)=\"addAllInputOutputColumns(arrayParameter)\"\n\t\t\t\t\t\t\t title=\"Add all the input columns to the array\" class=\"mr-1\"></d-button>\n\t\t\t\t\t\t\t<d-button iconClass=\"fa fa-eraser\" text=\"Clear\" (click)=\"clearInputOutputArray(arrayParameter)\"></d-button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngFor=\"let parameterItem of arrayParameter.parameterItems; let j = index\" class=\"pl-2\"\n\t\t\t\t\t [ngStyle]=\"{'z-index': 200-j, 'position': 'relative'}\">\n\t\t\t\t\t\t<input-parameter \n\t\t\t\t\t\t [inputParameterForms]=\"parameterItem.inputItems\" \n\t\t\t\t\t\t [outputParameterForms]=\"parameterItem.outputItems\" \n\t\t\t\t\t\t [nodeDatalinkColumnKey]=\"datalinkTransformForm.controls.nodeDatalinkColumn.value?.key\"\n\t\t\t\t\t\t [inputColumns]=\"inputColumns\" [outputColumns]=\"outputColumns\" [datalinkTargets]=\"datalinkTargets\" [allowAdd]=\"true\" [allowRemove]=\"true\"\n\t\t\t\t\t\t [updateParameterName]=\"false\" (addParameter)=\"addInputOutputParameter(arrayParameter, j)\"\n\t\t\t\t\t\t (removeParameter)=\"removeInputOutputParameter(arrayParameter, j)\"\n\t\t\t\t\t\t [variables]=\"variables\">\n\t\t\t\t\t\t</input-parameter>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div *ngIf=\"(selectedFunction || selectedCustomFunction) && allowOutput\" class=\"mt-1\">\n\t\t\t\t\t<label class=\"d-flex flex-row\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\tOutput Parameters\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"ml-auto\">\n\t\t\t\t\t\t\t<d-button text=\"Auto Map\" buttonClass=\"btn-sm btn-outline-primary\" (click)=\"autoMap()\"></d-button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</label>\n\t\t\t\t\t<div *ngFor=\"let outputParameter of outputParameterControls; let i = index\" [ngStyle]=\"{'z-index': 100-i, 'position': 'relative'}\">\n\t\t\t\t\t\t<div *ngIf=\"outputParameter.value.rank > 0 && !outputParameter.value.runTime.functionParameter.linkedName\">\n\t\t\t\t\t\t\t<div class=\"d-flex flex-row mb-1\">\n\t\t\t\t\t\t\t\t<div class=\"input-group-text\">\n\t\t\t\t\t\t\t\t\tArray - {{outputParameter.value.name}}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"ml-auto\">\n\t\t\t\t\t\t\t\t\t<d-button iconClass=\"fa fa-plus\"  text=\"Add Parameter\" (click)=\"addParameter(outputParameter, eParameterDirection.Output)\" title=\"Add a parameter to the array\"\n\t\t\t\t\t\t\t\t\t class=\"mr-1\"></d-button>\n\t\t\t\t\t\t\t\t\t<d-button iconClass=\"fa fa-eraser\"  text=\"Clear\" (click)=\"clearArray(outputParameter)\"></d-button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<output-parameter *ngIf=\"outputParameter.controls.arrayParameters.controls.length === 0\" [outputParameterForm]=\"outputParameter\"\n\t\t\t\t\t\t\t [outputColumns]=\"outputColumns\" [datalinkTargets]=\"datalinkTargets\" [allowAdd]=\"false\" [allowRemove]=\"false\" [rank]=\"outputParameter.value.rank\">\n\t\t\t\t\t\t\t</output-parameter>\n\t\t\t\t\t\t\t<div *ngFor=\"let arrayParameter of outputParameter.controls.arrayParameters.controls; let j = index\" class=\"pl-2\"\n\t\t\t\t\t\t\t [ngStyle]=\"{'z-index': 200-j, 'position': 'relative'}\">\n\t\t\t\t\t\t\t\t<output-parameter [outputParameterForm]=\"arrayParameter\" [outputColumns]=\"outputColumns\" [datalinkTargets]=\"datalinkTargets\" [allowAdd]=\"true\"\n\t\t\t\t\t\t\t\t [allowRemove]=\"true\" (addParameter)=\"addParameter(outputParameter, eParameterDirection.Output, j)\"\n\t\t\t\t\t\t\t\t (removeParameter)=\"removeParameter(outputParameter, j)\">\n\t\t\t\t\t\t\t\t</output-parameter>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<output-parameter *ngIf=\"outputParameter.value.rank == 0\" [outputParameterForm]=\"outputParameter\" [outputColumns]=\"outputColumns\" [datalinkTargets]=\"datalinkTargets\" \n\t\t\t\t\t\t [allowAdd]=\"false\" [allowRemove]=\"false\">\n\t\t\t\t\t\t</output-parameter>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t</form>\n\t</d-widget-section>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HubCache, InvalidActions, FunctionCache} from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { LogFactory, eLogLevel } from '../../../../../logging';\nimport { TypeCodes } from '../../../hub.remote.models';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { FunctionParameter, eFunctionType, eParameterDirection, eGenericType, DexihDatalinkColumn, FunctionReference,\n  DexihCustomFunction, eTransformType, DexihDatalinkTable, DexihDatalinkTransformItem, eTransformItemType,\n  DexihFunctionParameter, eTypeCode, DexihCustomFunctionParameter,\n  DexihFunctionArrayParameter, RemoteLibraries, eInvalidActionItems, eErrorActionItems, DexihDatalinkTarget } from '../../../../shared/shared.models';\nimport { CancelToken } from '../../../../+auth/auth.models';\n\nexport class ArrayParameter {\n  public name: string;\n  public functionParameter: FunctionParameter;\n\n  public inputParameterForms: FormGroup[] = [];\n  public outputParameterForms: FormGroup[] = [];\n\n  public parameterItems: ArrayParameterItem[] = [];\n\n  public resetItems() {\n    let inputArray = <FormArray>this.inputParameterForms[0].controls.arrayParameters;\n    for (let i = 0; i < inputArray.controls.length; i++) {\n      let item = new ArrayParameterItem();\n      this.inputParameterForms.forEach(inputParameterForm => {\n        let array = <FormArray>inputParameterForm.controls.arrayParameters;\n        item.inputItems.push(<FormGroup>array.controls[i]);\n      });\n      this.outputParameterForms.forEach(outputParameterForm => {\n        let array = <FormArray>outputParameterForm.controls.arrayParameters;\n        item.outputItems.push(<FormGroup>array.controls[i]);\n      });\n\n      this.parameterItems.push(item);\n    }\n  }\n}\n\nexport class ArrayParameterItem {\n  public inputItems: FormGroup[] = [];\n  public outputItems: FormGroup[] = [];\n}\n\n\n@Component({\n\n  selector: 'dexih-function-edit',\n  templateUrl: './standard-function-edit.component.html'\n})\nexport class StandardFunctionEditComponent implements OnInit, OnDestroy {\n  public hubCache: HubCache;\n  public remoteLibraries: RemoteLibraries;\n\n  eFunctionType = eFunctionType;\n  eParameterDirection = eParameterDirection;\n  eTypeCode = eTypeCode;\n  typeCodes = TypeCodes;\n\n  public pageTitle: string;\n\n  private _subscription: Subscription;\n  private _returnParameterSubscription: Subscription;\n  private _functionSubscription: Subscription;\n  private _saveSubscription: Subscription;\n\n  private cancelToken: CancelToken = new CancelToken();\n\n  transformFunctionType: eFunctionType;\n  datalinkTransformItemKey: number;\n  datalinkKey: number;\n  datalinkTransformKey: number;\n\n  datalinkForm: FormGroup;\n  datalinkTransformForm: FormGroup;\n  datalinkTransformItemForm: FormGroup;\n  // returnParameterForm: FormGroup;\n  resultReturnParameterForm: FormGroup;\n\n  useCustomFunction: boolean;\n\n  invalidActions = InvalidActions;\n  functionCache = FunctionCache;\n  eGenericType = eGenericType;\n\n  newDatalinkTransformItemForm: FormGroup;\n\n  inputColumns: Array<DexihDatalinkColumn>;\n  outputColumns: Array<DexihDatalinkColumn>;\n  datalinkTargets: Array<DexihDatalinkTarget>;\n\n  functionCategory: string;\n  functionCategories: Array<string>;\n  functions: Array<FunctionReference>;\n  filteredFunctions: Array<FunctionReference>;\n  selectedFunction: FunctionReference;\n  customFunctions: Array<DexihCustomFunction>;\n  selectedCustomFunction: DexihCustomFunction;\n\n  variables = [];\n\n  allowOutput = false;\n  allowReturn = true;\n\n  inputParameterControls: Array<FormGroup>;\n  outputParameterControls: Array<FormGroup>;\n\n  arrayParameters: ArrayParameter[] = [];\n\n  eInvalidActionItems = eInvalidActionItems.filter(c => c.key > 0);\n  eErrorActionItems = eErrorActionItems.filter(c => c.key > 0);\n\n  logger = new LogFactory('standard-function-edit');\n\n  isJoin = false;\n\n  constructor(\n    private hubService: HubService,\n    private authService: AuthService,\n    private editDatalinkService: DatalinkEditService,\n    private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n        this.hubService.getRemoteLibrariesObservable(),\n        this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n      ).subscribe(result => {\n        this.pageTitle = result[0]['pageTitle'];\n        let params = result[1];\n        this.hubCache = result[2];\n        this.remoteLibraries = result[3]\n        this.datalinkForm = result[4];\n\n        this.logger.LogC(() => `OnInit`, eLogLevel.Trace);\n\n        if (this.hubCache && this.hubCache.isLoaded() && this.datalinkForm\n          && this.remoteLibraries && this.remoteLibraries.functions.length > 0) {\n\n          this.transformFunctionType = +params['functionType'];\n          if (this.transformFunctionType === eFunctionType.Validate) {\n            this.datalinkTransformForm = this.editDatalinkService.getValidationTransform();\n            this.datalinkTransformKey = this.datalinkTransformForm.value.key;\n          } else {\n            this.datalinkTransformKey = +params['datalinkTransformKey'];\n            this.datalinkTransformForm = this.editDatalinkService.getDatalinkTransform(this.datalinkTransformKey);\n          }\n\n          this.variables = this.editDatalinkService.getVariables();\n\n          this.useCustomFunction = this.datalinkTransformForm.controls.customFunctionKey ? true : false;\n          this.datalinkTransformItemKey = +params['datalinkTransformItemKey'];\n\n          this.isJoin = this.datalinkTransformForm.value.transformType === eTransformType.Join ||\n            this.datalinkTransformForm.value.transformType === eTransformType.Lookup;\n\n          // if this is a join transform, then the use the join columns for the input.\n          if (this.isJoin) {\n            const table = <DexihDatalinkTable>this.datalinkTransformForm.controls.joinDatalinkTable.value;\n            if (!table) {\n              this.hubService.addHubErrorMessage('The join table could not be found.');\n              this.authService.navigateUp();\n              return;\n            }\n\n            this.inputColumns = table.dexihDatalinkColumns;\n          } else {\n            let nodeDatalinkColumn = <DexihDatalinkColumn> this.datalinkTransformForm.controls.nodeDatalinkColumn.value;\n            let nodeDatalinkColumnKey = nodeDatalinkColumn ? nodeDatalinkColumn.key : null;\n            let io = new InputOutputColumns();\n            if (nodeDatalinkColumnKey) {\n              let inputColumns = <DexihDatalinkColumn[]> this.datalinkTransformForm.controls.runTime.value.inputColumns;\n              this.inputColumns = io.getAvailableColumns(inputColumns, nodeDatalinkColumnKey, 0);\n            } else {\n              this.inputColumns = this.datalinkTransformForm.controls.runTime.value.inputColumns;\n            }\n          }\n\n          this.outputColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n          this.datalinkTargets = this.datalinkForm.controls.dexihDatalinkTargets.value;\n\n          if (this.datalinkTransformItemKey) {\n            this.datalinkTransformItemForm = this.editDatalinkService\n              .getDatalinkTransformItem(this.datalinkTransformForm, this.datalinkTransformItemKey);\n\n            if (!this.datalinkTransformItemForm) {\n              this.authService.navigateUp();\n              return;\n            }\n\n            // create a copy of the form item to allow for cancel.\n            this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n              .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, this.datalinkTransformItemForm.value);\n\n            if (this.datalinkTransformItemForm.controls.customFunctionKey.value) {\n                this.selectCustomFunction(this.datalinkTransformItemForm.value.customFunctionKey, false);\n            } else {\n            let selectedFunction = this.remoteLibraries.functions.find(c =>\n              c.functionClassName === this.datalinkTransformItemForm.value.functionClassName &&\n              c.functionMethodName === this.datalinkTransformItemForm.value.functionMethodName &&\n              c.functionAssemblyName === this.datalinkTransformItemForm.value.functionAssemblyName\n            );\n\n            // this.selectedFunction = selectedFunction;\n              this.selectFunction(selectedFunction, false);\n            // this.refreshParameters();\n            }\n\n          } else {\n            let newItem = new DexihDatalinkTransformItem();\n            newItem.datalinkTransformKey = this.datalinkTransformKey;\n            newItem.transformItemType = eTransformItemType.BuiltInFunction;\n\n            this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n              .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, newItem);\n          }\n\n          switch (this.transformFunctionType) {\n            case eFunctionType.Condition:\n            case eFunctionType.JoinCondition:\n              this.functions = this.remoteLibraries.functions.filter(c => c.functionType === eFunctionType.Condition);\n              this.allowOutput = false;\n              break;\n            case eFunctionType.Validate:\n              this.functions = this.remoteLibraries.functions\n                .filter(c => c.functionType === eFunctionType.Condition || c.functionType === eFunctionType.Validate);\n              this.allowOutput = true;\n              break;\n            case eFunctionType.Map:\n              this.functions = this.remoteLibraries.functions\n                .filter(c => c.functionType === eFunctionType.Condition ||\n                  c.functionType === eFunctionType.Validate ||\n                  c.functionType === eFunctionType.Map);\n\n              this.allowOutput = true;\n              break;\n            case eFunctionType.Aggregate:\n              this.functions = this.remoteLibraries.functions.filter(c => c.functionType === eFunctionType.Aggregate);\n              this.allowOutput = true;\n              break;\n            case eFunctionType.Series:\n              this.functions = this.remoteLibraries.functions.filter(c => c.functionType === eFunctionType.Series ||\n                c.functionType === eFunctionType.Aggregate);\n              this.allowOutput = true;\n              break;\n            case eFunctionType.Rows:\n              this.functions = this.remoteLibraries.functions.filter(c => c.functionType === eFunctionType.Rows);\n              this.allowOutput = true;\n              this.allowReturn = false;\n              break;\n            case eFunctionType.Profile:\n              this.functions = this.remoteLibraries.functions.filter(c => c.functionType === eFunctionType.Profile);\n              this.allowOutput = false;\n              break;\n            default:\n              this.functions = null;\n          }\n\n          this.functionCategories = Array.from(new Set(this.functions.map(c => c.category)));\n          this.filteredFunctions = this.functions;\n          this.customFunctions = this.hubCache.hub.dexihCustomFunctions;\n          if (this.datalinkTransformItemForm && this.datalinkTransformItemForm.value.customFunctionKey) {\n            this.useCustomFunction = true;\n            this.selectedCustomFunction = this.hubCache.hub.dexihCustomFunctions\n              .find(c => c.key === this.datalinkTransformItemForm.value.customFunctionKey);\n          }\n\n          if (this._functionSubscription) { this._functionSubscription.unsubscribe(); }\n          this._functionSubscription = this.newDatalinkTransformItemForm.controls.customFunctionKey.valueChanges\n            .subscribe(customFunctionKey => {\n              this.selectCustomFunction(customFunctionKey, false);\n            });\n        }\n\n        if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n        this._saveSubscription = this.editDatalinkService.savingDatalink.subscribe(value => {\n            if(value) {\n                this.apply();\n            }\n        });\n\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Standard Function Edit');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._returnParameterSubscription) { this._returnParameterSubscription.unsubscribe(); }\n    if (this._functionSubscription) { this._functionSubscription.unsubscribe(); }\n    if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n    this.cancelToken.cancel();\n  }\n\n  updateCategory(value) {\n    if (value) {\n      this.filteredFunctions = this.functions.filter(c => c.category === value);\n    } else {\n      this.filteredFunctions = this.functions;\n    }\n  }\n\n  canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      if (this.newDatalinkTransformItemForm && !this.newDatalinkTransformItemForm.pristine) {\n        this.authService.confirmDialog('The function has changed',\n          'The function has changed.  Do you want to discard the changes and continue?')\n          .then((confirm) => {\n              resolve(confirm);\n            }).catch(() => {\n              resolve(false);\n            });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  private parametersArray() {\n    return <FormArray>this.newDatalinkTransformItemForm.controls.dexihFunctionParameters;\n  }\n\n  refreshParameters() {\n    let parametersArray = this.parametersArray();\n\n    // convoluted sort below allows sorting by the direction then the position\n    this.inputParameterControls = <FormGroup[]>parametersArray.controls\n      .sort((a, b) => a.value.position - b.value.position)\n      .filter(c => (c.value.direction === eParameterDirection.Input || c.value.direction === eParameterDirection.ResultInput\n        || c.value.direction === eParameterDirection.Join));\n\n    // convoluted sort below allows sorting by the direction then the position\n    this.outputParameterControls = <FormGroup[]>parametersArray.controls\n      .sort((a, b) => a.value.position - b.value.position)\n      .filter(c => HubCache.parameterIsOutput(c.value));\n\n    // don't include return value (which will determine pass/fail) for validation transforms.\n    if (this.transformFunctionType === eFunctionType.Validate) {\n      this.outputParameterControls = this.outputParameterControls.filter(c => c.value.direction !== eParameterDirection.ReturnValue);\n    }\n\n    this.arrayParameters = [];\n\n    if (this.selectedFunction) {\n\n      this.selectedFunction.inputParameters?.filter(c => c.linkedName).forEach(parameter => {\n        this.addArrayParameter(parameter, true);\n      });\n\n      this.selectedFunction.outputParameters?.filter(c => c.linkedName).forEach(parameter => {\n        this.addArrayParameter(parameter, false);\n      });\n\n      this.selectedFunction.resultInputParameters?.filter(c => c.linkedName).forEach(parameter => {\n        this.addArrayParameter(parameter, true);\n      });\n\n      this.selectedFunction.resultOutputParameters?.filter(c => c.linkedName).forEach(parameter => {\n        this.addArrayParameter(parameter, false);\n      });\n\n      this.selectedFunction.resultReturnParameters?.filter(c => c.linkedName).forEach(parameter => {\n        this.addArrayParameter(parameter, false);\n      });\n\n    }\n\n    this.arrayParameters.forEach(arrayParameter => arrayParameter.resetItems());\n  }\n\n  private addArrayParameter(parameter: FunctionParameter, isInput: boolean) {\n    let arrayParameter = this.arrayParameters.find(c => c.name === parameter.linkedName);\n    if (!arrayParameter) {\n      arrayParameter = new ArrayParameter();\n      arrayParameter.name = parameter.linkedName;\n      arrayParameter.functionParameter = parameter;\n      this.arrayParameters.push(arrayParameter);\n    }\n\n    if (isInput) {\n      let controls = this.inputParameterControls.find(c => c.controls.name.value === parameter.name);\n      arrayParameter.inputParameterForms.push(controls);\n    } else {\n      let controls = this.outputParameterControls.find(c => c.controls.name.value === parameter.name);\n      arrayParameter.outputParameterForms.push(controls);\n    }\n\n  }\n\n  // when a new standard function is selected\n  // reset all the parameters\n  selectFunction(value: FunctionReference, markAsDirty: boolean) {\n    this.selectedFunction = value;\n\n    if (value === null || value === undefined) { return; }\n\n    this.newDatalinkTransformItemForm.controls.functionAssemblyName.setValue(this.selectedFunction.functionAssemblyName);\n    this.newDatalinkTransformItemForm.controls.functionClassName.setValue(this.selectedFunction.functionClassName);\n    this.newDatalinkTransformItemForm.controls.functionMethodName.setValue(this.selectedFunction.functionMethodName);\n    this.newDatalinkTransformItemForm.controls.targetDatalinkColumn.setValue(null);\n\n    if (!this.newDatalinkTransformItemForm.controls.genericTypeCode.value) {\n      if (this.selectedFunction.genericTypeDefault) {\n        this.newDatalinkTransformItemForm.controls.genericTypeCode.setValue(this.selectedFunction.genericTypeDefault);\n      } else {\n        if (this.selectedFunction.genericType === eGenericType.Numeric) {\n          this.newDatalinkTransformItemForm.controls.genericTypeCode.setValue(eTypeCode.Decimal);\n        } else {\n          this.newDatalinkTransformItemForm.controls.genericTypeCode.setValue(eTypeCode.String);\n        }\n      }\n    }\n\n    switch (this.selectedFunction.genericType) {\n      case eGenericType.All:\n        this.typeCodes = TypeCodes;\n        break;\n      case eGenericType.Numeric:\n        this.typeCodes = TypeCodes.filter(c => c.isNumeric);\n        break;\n      case eGenericType.String:\n        this.typeCodes = TypeCodes.filter(c => c.isString);\n        break;\n      case eGenericType.None:\n        this.typeCodes = [];\n    }\n\n    if (this.selectedFunction) {\n      let parameters = this.parametersArray();\n      let existingParameters: any[] = [];\n\n      while (parameters.length) {\n        existingParameters.push(parameters.value[0])\n        parameters.removeAt(0);\n      }\n\n      if (this.selectedFunction.inputParameters) {\n        this.selectedFunction.inputParameters.forEach((param: FunctionParameter, index: number) => {\n          if (param) {\n            parameters.push(\n                this.newParameter(existingParameters, param, index, this.isJoin ? eParameterDirection.Join : eParameterDirection.Input,\n                    this.selectedFunction.genericTypeDefault));\n          }\n        });\n      }\n\n      if (this.selectedFunction.outputParameters) {\n        this.selectedFunction.outputParameters.forEach((param: FunctionParameter, index: number) => {\n          if (param) {\n            if (param) {\n              parameters.push(this.newParameter(existingParameters, param, index + 100, eParameterDirection.Output,\n                this.selectedFunction.genericTypeDefault));\n            }\n          }\n        });\n      }\n\n      if (this.selectedFunction.resultInputParameters) {\n        this.selectedFunction.resultInputParameters.forEach((param: FunctionParameter, index: number) => {\n          if (param) {\n            parameters.push(\n                this.newParameter(existingParameters, param, index + 200, eParameterDirection.ResultInput,\n                  this.selectedFunction.genericTypeDefault));\n          }\n        });\n      }\n\n      if (this.selectedFunction.resultOutputParameters) {\n        this.selectedFunction.resultOutputParameters.forEach((param: FunctionParameter, index: number) => {\n          if (param) {\n            if (param) {\n              parameters.push(\n                  this.newParameter(existingParameters, param, index + 300, eParameterDirection.ResultOutput,\n                    this.selectedFunction.genericTypeDefault));\n            }\n          }\n        });\n      }\n\n      if (this.selectedFunction.returnParameters) {\n        if (this.allowReturn && this.selectedFunction.returnParameters.length > 0) {\n          this.selectedFunction.returnParameters.forEach((parameter: FunctionParameter, index: number) => {\n            parameters.push(this.newParameter(existingParameters, parameter, index + 400,\n              eParameterDirection.ReturnValue, this.selectedFunction.genericTypeDefault ));\n          });\n        }\n      }\n\n      if (this.selectedFunction.resultReturnParameters) {\n        if (this.allowReturn && this.selectedFunction.resultReturnParameters.length > 0) {\n            this.selectedFunction.resultReturnParameters.forEach(parameter => {\n            parameters.push(this.newParameter(existingParameters, parameter, 0,\n                eParameterDirection.ResultReturnValue, this.selectedFunction.genericTypeDefault));\n          });\n        }\n      }\n\n      this.refreshParameters();\n\n      if (markAsDirty) {\n        this.newDatalinkTransformItemForm.markAsDirty();\n      }\n    } else {\n      this.selectedFunction = null;\n    }\n  }\n\n  private newParameter(existingParameters: DexihFunctionParameter[],\n    param: any, index: number, direction: eParameterDirection, genericTypeDefault: eTypeCode): FormGroup {\n\n    let existingValue = existingParameters.find(c => c.name === param.parameterName)\n\n    let newParameter = new DexihFunctionParameter();\n    // newParameter.datalinkTransformItemKey = this.datalinkTransformItemKey;\n    newParameter.name = param.parameterName;\n    newParameter.rank = param.rank;\n    newParameter.direction = direction;\n    newParameter.isGeneric = param.isGeneric;\n    newParameter.position = index;\n    newParameter.key = this.hubCache.getNextSequence();\n    newParameter['runTime'] = {functionParameter: param};\n\n    if (existingValue) {\n      newParameter.key = existingValue.key;\n      newParameter.datalinkColumn = existingValue.datalinkColumn;\n      newParameter.value = existingValue.value;\n      newParameter.dataType = param.isGeneric ? existingValue.dataType : param.dataType;\n      existingValue.arrayParameters.forEach(p => {\n        p['runTime'] = {functionParameter: param};\n      });\n      newParameter.arrayParameters = existingValue.arrayParameters;\n    } else {\n      newParameter.value = param.defaultValue;\n      newParameter.dataType = param.isGeneric ? genericTypeDefault : param.dataType;\n    }\n\n    newParameter.isValid = true;\n\n    let newParameterForm = this.editDatalinkService.hubFormsService.datalinkFunctionParametersFormGroup(newParameter);\n    return newParameterForm;\n  }\n\n  // when a new standard function is selected\n  // reset all the parameters\n  selectCustomFunction(customFunctionKey: number, markAsDirty: boolean) {\n    this.selectedCustomFunction = this.hubCache.hub.dexihCustomFunctions.find(c => c.key === customFunctionKey);\n\n    if (this.selectedCustomFunction) {\n      let parameters = this.parametersArray();\n      let existingParameters: any[] = [];\n\n      while (parameters.length) {\n        existingParameters.push(parameters.value[0]);\n        parameters.removeAt(0);\n      }\n\n      this.selectedCustomFunction.dexihCustomFunctionParameters\n        .filter(c => (c.direction === eParameterDirection.Input || c.direction === eParameterDirection.Join)  && c.isValid)\n        .forEach((param: DexihCustomFunctionParameter, index: number) => {\n          if (param) {\n            let newParameterForm =\n              this.newParameter(existingParameters, param, index, this.isJoin ? eParameterDirection.Join : eParameterDirection.Input,\n                this.selectedCustomFunction.genericTypeDefault);\n            parameters.push(newParameterForm);\n          }\n        });\n\n      this.selectedCustomFunction.dexihCustomFunctionParameters.filter(c => c.direction === eParameterDirection.Output && c.isValid)\n        .forEach((param: DexihCustomFunctionParameter, index: number) => {\n          if (param) {\n            let newParameterForm =\n              this.newParameter(existingParameters, param, index, eParameterDirection.Output,\n                this.selectedCustomFunction.genericTypeDefault);\n            parameters.push(newParameterForm);\n          }\n        });\n\n        let returnParameter = new DexihFunctionParameter();\n        returnParameter.dataType = this.selectedCustomFunction.returnType;\n        returnParameter.name = 'Return';\n        returnParameter.direction = eParameterDirection.Output;\n        returnParameter.rank = 0;\n        returnParameter.position = -1;\n        returnParameter.isValid = true;\n        let newParameterForm2 = this.newParameter(existingParameters, returnParameter, 0, eParameterDirection.ReturnValue,\n          this.selectedCustomFunction.genericTypeDefault);\n        parameters.push(newParameterForm2);\n\n      this.refreshParameters();\n\n      if (markAsDirty) {\n        this.newDatalinkTransformItemForm.markAsDirty();\n      }\n    }\n  }\n\n  private createArrayParameter(parentParameter: DexihFunctionArrayParameter,\n    direction: eParameterDirection, position: number = null, genericTypeDefault: eTypeCode):\n    DexihFunctionArrayParameter {\n    let param = parentParameter['runTime'].functionParameter;\n    let newParameter = new DexihFunctionArrayParameter();\n    newParameter.isGeneric = param.isGeneric;\n    newParameter.dataType = param.isGeneric ? genericTypeDefault : parentParameter.dataType;\n    newParameter.position = position ? position + 1 : 10000000;\n    newParameter.name = param.name;\n    newParameter.direction = direction;\n    newParameter.rank = 0;\n    newParameter.key = this.hubCache.getNextSequence();\n    newParameter.datalinkColumn = null;\n    newParameter.isValid = true;\n    newParameter['runTime'] = {functionParameter: param};\n\n    return newParameter;\n  }\n\n  addParameter(parentParameterForm: FormGroup, direction: eParameterDirection, position: number = null): FormGroup {\n    if (direction === eParameterDirection.Input && this.isJoin) { direction = eParameterDirection.Join; }\n    let parentParameter = parentParameterForm.value;\n    let newParameter = this.createArrayParameter(parentParameter, direction, 0,\n      this.newDatalinkTransformItemForm.controls.genericTypeCode.value);\n    let newParameterForm = this.editDatalinkService.hubFormsService.datalinkFunctionArrayParametersFormGroup(newParameter);\n    let arrayForm = <FormArray>parentParameterForm.controls.arrayParameters;\n    if (position !== null) {\n      arrayForm.insert(position + 1, newParameterForm);\n    } else {\n      arrayForm.push(newParameterForm);\n    }\n\n    // reset the positions\n    arrayForm.controls.forEach((p, index) => {\n      (<FormGroup>p).controls.position.setValue(index * 10);\n    });\n\n    this.refreshParameters()\n    return newParameterForm;\n  }\n\n  addInputOutputParameter(arrayParameter: ArrayParameter, position: number = null) {\n    let item = new ArrayParameterItem();\n\n    arrayParameter.inputParameterForms.forEach(parameterForm => {\n      let parameter = this.addParameter(parameterForm, this.isJoin ? eParameterDirection.Join : eParameterDirection.Input, position);\n      item.inputItems.push(parameter);\n    });\n\n    arrayParameter.outputParameterForms.forEach(parameterForm => {\n      let parameter = this.addParameter(parameterForm, eParameterDirection.Output, position);\n      item.outputItems.push(parameter);\n    });\n\n    if (position !== null) {\n      arrayParameter.parameterItems.splice(position, 0, item);\n    } else {\n      arrayParameter.parameterItems.push(item);\n    }\n  }\n\n  removeParameter(parentParameterForm: FormGroup, position: number) {\n    let arrayForm = <FormArray>parentParameterForm.controls.arrayParameters;\n    if (position > -1) {\n      arrayForm.removeAt(position);\n      this.newDatalinkTransformItemForm.markAsDirty();\n      this.refreshParameters();\n    }\n  }\n\n  removeInputOutputParameter(arrayParameter: ArrayParameter, position: number = null) {\n\n    arrayParameter.inputParameterForms.forEach(parameterForm => {\n      this.removeParameter(parameterForm, position);\n    });\n\n    arrayParameter.outputParameterForms.forEach(parameterForm => {\n      this.removeParameter(parameterForm, position);\n    });\n\n    if (position !== null) {\n      arrayParameter.parameterItems.splice(position, 1);\n    } else {\n      arrayParameter.parameterItems.splice(arrayParameter.parameterItems.length - 1, 1);\n    }\n  }\n\n  addAllColumns(parentParameterForm: FormGroup) {\n    this.clearArray(parentParameterForm);\n\n    let isLabel = parentParameterForm.value.runTime.functionParameter.isLabel;\n    let parentParameter = parentParameterForm.value;\n    let arrayForm = <FormArray>parentParameterForm.controls.arrayParameters;\n    let position = 1;\n    this.inputColumns.forEach(column => {\n      let newParameter = this.createArrayParameter(parentParameter,\n        this.isJoin ? eParameterDirection.Join : eParameterDirection.Input, position++, this.selectedFunction.genericTypeDefault);\n        if (isLabel) {\n          newParameter.value = column.name;\n        } else {\n          newParameter.datalinkColumn = column;\n        }\n\n      let newParameterForm = this.editDatalinkService.hubFormsService.datalinkFunctionArrayParametersFormGroup(newParameter);\n      arrayForm.push(newParameterForm);\n    });\n    this.refreshParameters();\n  }\n\n  addAllInputOutputColumns(arrayParameter: ArrayParameter) {\n    // add the first parameter\n    this.addAllColumns(arrayParameter.inputParameterForms[0]);\n    let inputArrayForm = <FormArray>arrayParameter.inputParameterForms[0].controls.arrayParameters;\n\n    if (arrayParameter.inputParameterForms.length > 1) {\n      this.clearArray(arrayParameter.inputParameterForms[1]);\n      for (let i = 0; i < inputArrayForm.length; i++) {\n        let parameter = this.addParameter(arrayParameter.inputParameterForms[1],\n          this.isJoin ? eParameterDirection.Join : eParameterDirection.Input);\n\n        // if the first parameter is a label, then map the matching column to the second input parameter\n        if (arrayParameter.inputParameterForms[0].value.runTime.functionParameter.isLabel) {\n          parameter.controls.datalinkColumn.setValue(this.inputColumns[i]);\n        }\n      }\n\n      // add any other parameters with default values.\n      for (let i = 2; i < arrayParameter.inputParameterForms.length; i++) {\n        this.clearArray(arrayParameter.inputParameterForms[i]);\n        for (let j = 0; j < inputArrayForm.length; j++) {\n          let parameter = this.addParameter(arrayParameter.inputParameterForms[i],\n            this.isJoin ? eParameterDirection.Join : eParameterDirection.Input);\n            parameter.controls.value.setValue(arrayParameter.inputParameterForms[i].value.runTime.functionParameter.defaultValue);\n        }\n      }\n    }\n\n    // add any output columns of the same length.\n    if (arrayParameter.outputParameterForms.length > 0) {\n      for (let i = 0; i < arrayParameter.outputParameterForms.length; i++) {\n        this.clearArray(arrayParameter.outputParameterForms[i]);\n        for (let j = 0; j < inputArrayForm.length; j++) {\n        }\n      }\n    }\n\n    arrayParameter.resetItems();\n  }\n\n  clearArray(parameterForm: FormGroup) {\n    let arrayForm = <FormArray>parameterForm.controls.arrayParameters;\n    for (let i = arrayForm.controls.length - 1; i >= 0; i--) {\n      arrayForm.removeAt(i);\n    }\n    this.refreshParameters();\n  }\n\n  clearInputOutputArray(arrayParameter: ArrayParameter) {\n    arrayParameter.inputParameterForms.forEach(form => {\n      this.clearArray(form);\n    });\n\n    arrayParameter.outputParameterForms.forEach(form => {\n      this.clearArray(form);\n    });\n  }\n\n\n  async importInputOutputMappings(arrayParameter: ArrayParameter) {\n    let result = await this.editDatalinkService\n      .importFunctionMappings(this.datalinkTransformKey, this.newDatalinkTransformItemForm.value, this.cancelToken);\n\n      if (result === null) { return; }\n\n      let inputArrayForm = <FormArray>arrayParameter.inputParameterForms[0].controls.arrayParameters;\n\n      this.clearArray(arrayParameter.inputParameterForms[0]);\n      for (let i = 0; i < result.length; i++) {\n        let parameter = this.addParameter(arrayParameter.inputParameterForms[0],\n          this.isJoin ? eParameterDirection.Join : eParameterDirection.Input);\n\n          parameter.controls.value.setValue(result[i]);\n\n        // // if the first parameter is a label, then map the matching column to the second input parameter\n        // if (arrayParameter.inputParameterForms[0].value.runTime.functionParameter.isLabel) {\n        //   parameter.controls.datalinkColumn.setValue(this.inputColumns[i]);\n        // }\n      }\n\n      // add any other parameters with default values.\n      for (let i = 1; i < arrayParameter.inputParameterForms.length; i++) {\n        this.clearArray(arrayParameter.inputParameterForms[i]);\n        for (let j = 0; j < inputArrayForm.length; j++) {\n          let parameter = this.addParameter(arrayParameter.inputParameterForms[i],\n            this.isJoin ? eParameterDirection.Join : eParameterDirection.Input);\n            parameter.controls.value.setValue(arrayParameter.inputParameterForms[i].value.runTime.functionParameter.defaultValue);\n        }\n      }\n\n      // add any output columns of the same length.\n      if (arrayParameter.outputParameterForms.length > 0) {\n        for (let i = 0; i < arrayParameter.outputParameterForms.length; i++) {\n          this.clearArray(arrayParameter.outputParameterForms[i]);\n          for (let j = 0; j < inputArrayForm.length; j++) {\n          }\n        }\n      }\n\n      arrayParameter.resetItems();\n  }\n\n  autoMap() {\n    this.outputParameterControls.forEach(param => {\n      let newColumn = new DexihDatalinkColumn();\n      newColumn.key = this.hubService.getHubCache().getNextSequence();\n      newColumn.position = 1000 - newColumn.key;\n\n      let paramValue = <DexihFunctionParameter> param.value;\n\n      newColumn.dataType = paramValue.dataType;\n      newColumn.allowDbNull = true;\n      newColumn.name = paramValue['runTime'].functionParameter.name;\n      newColumn.logicalName = paramValue['runTime'].functionParameter.name;\n      newColumn.rank = paramValue.rank;\n\n      param.controls.datalinkColumn.setValue(newColumn);\n      this.newDatalinkTransformItemForm.markAsDirty();\n    })\n  }\n\n  cancel() {\n    this.authService.navigateUp();\n  }\n\n  apply() {\n    this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, this.newDatalinkTransformItemForm);\n    this.newDatalinkTransformItemForm.markAsPristine();\n  }\n\n  applyExit() {\n    this.apply();\n    this.authService.navigateUp();\n  }\n\n}\n\n","export { TargetColumnComponent } from './target-column.component';\nexport { TargetColumnsComponent } from './target-columns.component';\n","import { Component, Input, Output, OnInit, OnChanges, EventEmitter, OnDestroy } from '@angular/core';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { HubCache, eMappingStatus, MappingStatusInfo, lineageMappingStatuses } from '../../../hub.models';\nimport { eObjectUse, ColumnUsageNode, eDatalinkObjectType } from '../../../hub.lineage.models';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { LogFactory, eLogLevel } from '../../../../../logging';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { DexihTableColumn, DexihTable, DexihDatalinkColumn, eTypeCode } from '../../../../shared/shared.models';\n\n\n@Component({\n\n    selector: 'target-column',\n    templateUrl: './target-column.component.html'\n})\nexport class TargetColumnComponent implements OnInit, OnDestroy, OnChanges {\n    @Input() public column: DexihTableColumn = null;\n    @Input() public datalinkTransformForm: FormGroup;\n    @Input() public inputTables: Array<DexihTable> = null;\n    @Output() public inputOutputDrop: EventEmitter<{inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn}>\n            = new EventEmitter<{inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn}>();\n\n    private _subscription: Subscription;\n\n    private hubCache: HubCache;\n    private datalinkForm: FormGroup;\n\n    eMappingStatus = eMappingStatus;\n\n    eTypeCode = eTypeCode;\n\n    public mappingStatusInfoLineage: MappingStatusInfo;\n    public mappingStatusInfoImpact: MappingStatusInfo;\n\n    public mappingStatusLineage: eMappingStatus;\n\n    childColumns: DexihTableColumn[];\n\n    public logger = new LogFactory('output-column.component');\n    public logCount = 0;\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n            ).subscribe(result => {\n              this.hubCache = result[0];\n              this.datalinkForm = result[1];\n\n              this.logger.LogC(() => `Subscription count: ${this.logCount++}`, eLogLevel.Trace);\n\n\n            this.childColumns = this.column.childColumns;\n\n              this.refreshStatus();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Output Column');\n        }\n    }\n\n    ngOnChanges() {\n        this.refreshStatus();\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    refreshStatus() {\n        if (this.datalinkForm) {\n            let columnUsage: ColumnUsageNode = new ColumnUsageNode(\n            eDatalinkObjectType.TargetTable, eObjectUse.Target,\n            this.datalinkForm.value, null, this.column, null, null, eMappingStatus.NotMapped, this.hubCache);\n            this.mappingStatusLineage = columnUsage.createDatalinkLineage(true);\n            this.mappingStatusInfoLineage = lineageMappingStatuses.find(c => c.key === this.mappingStatusLineage);\n        }\n    }\n\n\n  editColumn() {\n      if (this.column.key && (this.mappingStatusLineage === eMappingStatus.Mapped\n        || this.mappingStatusLineage === eMappingStatus.MappedToNothing)) {\n        this.router.navigate(['column', this.column.key], { relativeTo: this.route.parent });\n      } else {\n          this.authService.informationDialog('Can not edit column',\n          // tslint:disable-next-line:max-line-length\n          'This column is not created by the current transform (i.e. a pass-through or target column).  To edit a column first create a mapping.')\n      }\n    }\n}\n","<div class=\"list-group-item p-0 rounded-0\" *ngIf=\"mappingStatusInfoLineage.key != eMappingStatus.Mapped\" [title]=\"column.logicalName + ' ' + eTypeCode[column.dataType]\" (click)=\"editColumn()\">\n    <div class=\"d-flex flex-row\">\n\n        <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoLineage.statusClass\" [title]=\"mappingStatusInfoLineage.name\"></i>\n        <span class=\"flex-fill input-group-text ellipsis-overflow rounded-0 border-0\">\n            {{column.logicalName}}\n        </span>\n    </div>\n</div>\n<div class=\"list-group-item p-0 rounded-0\" *ngIf=\"mappingStatusInfoLineage.key == eMappingStatus.Mapped\" [title]=\"column.logicalName + ' ' + eTypeCode[column.dataType]\"\n    (click)=\"editColumn()\">\n    <div class=\"d-flex flex-row\">\n\n        <i class=\"input-group-text rounded-0  border-0 border-r1\" [ngClass]=\"mappingStatusInfoLineage.statusClass\" [title]=\"mappingStatusInfoLineage.name\"></i>\n        <span class=\"flex-fill input-group-text ellipsis-overflow rounded-0 border-0\">\n            {{column.logicalName}}\n        </span>\n    </div>\n</div>\n<!-- <div *ngIf=\"childColumns?.length > 0\" class=\"p-2\">\n    <output-column *ngFor=\"let childColumn of childColumns\" [column]=\"childColumn\" [datalinkTransformForm]=\"datalinkTransformForm\"></output-column>\n</div> -->","import { Component, Input, Output, OnInit, OnChanges, OnDestroy, EventEmitter } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { DexihDatalinkColumn, DexihDatalinkTarget } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'target-columns',\n    templateUrl: './target-columns.component.html'\n})\nexport class TargetColumnsComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() public datalinkTransformForm: FormGroup;\n    @Input() public targets: DexihDatalinkTarget[];\n    @Input() public allowMappingOutputs = true;\n\n    @Output() public inputOutputDrop: EventEmitter<{ inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn }>\n        = new EventEmitter<{ inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn }>();\n\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n    ngOnChanges() {\n    }\n\n    ngOnDestroy() {\n    }\n\n    newInputOutputDrop(inputColumn: DexihDatalinkColumn, outputColumn: DexihDatalinkColumn) {\n        this.inputOutputDrop.emit({\n            inputColumn: inputColumn,\n            outputColumn: outputColumn\n        });\n    }\n}\n","<div *ngIf=\"targets\" cdkDropList #cdkDropList=\"cdkDropList\">\n    <d-widget-section *ngFor=\"let target of targets\" [title]=\"'Target (' + target['table']?.name + ')'\" [padding]=\"false\" [showExpandButton]=\"true\">\n        <div *ngFor=\"let column of target['table'].dexihTableColumns | fieldSort : 'position' | isValidFilter; let i = index\" dropZone (dropData)=\"newInputOutputDrop($event, column)\" [zone]=\"allowMappingOutputs ? 'input-column' : ''\" dropAllowedClass=\"drop-zone-green\" >\n            <target-column [datalinkTransformForm]='datalinkTransformForm' [column]='column'></target-column>\n        </div>\n    </d-widget-section>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubFormsService } from '../../../hub.forms.service';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { eDeltaType } from '../../../../shared/shared.models';\n\n@Component({\n    selector: 'target-table-column',\n    templateUrl: './target-table-column.component.html'\n})\n\nexport class TargetTableColumnComponent implements OnInit, OnDestroy {\n    private _currentFormSubscription: Subscription;\n\n    public targetKey: number;\n    public columnKey: number;\n    public deltaType: eDeltaType;\n    public tableForm: FormGroup;\n\n    constructor(\n        private authService: AuthService,\n        private formsService: HubFormsService,\n        private route: ActivatedRoute,\n    ) { }\n\n    ngOnInit() {\n        this._currentFormSubscription = this.route.params.subscribe(params => {\n            this.targetKey = + params['targetKey'];\n            this.columnKey = + params['columnKey'];\n            this.deltaType = params['deltaType'];\n\n            this.formsService.getCurrentFormObservable().subscribe(datalinkForm => {\n                if (datalinkForm) {\n                    let targets = <FormArray> datalinkForm.controls.dexihDatalinkTargets;\n\n                    let targetForm = <FormGroup> targets.controls.find(c => c.value.key === this.targetKey);\n                    this.tableForm = <FormGroup>targetForm.controls.table;\n                }\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._currentFormSubscription) { this._currentFormSubscription.unsubscribe(); }\n    }\n\n    columnUpdated() {\n        this.authService.navigateUp();\n    }\n}\n","<column-edit [columnKey]=\"columnKey\" [tableForm]=\"tableForm\" [deltaType]='deltaType' (isUpdated)=\"columnUpdated()\"></column-edit>","<div *ngIf=\"!showColumn\">\n\n<d-widget-section title=\"Edit Target Table\" [showExpandButton]=\"true\">\n    <ng-template #header>\n        <d-button-preview class=\"mr-1\" (click)=\"previewData()\"></d-button-preview>\n        <d-button class=\"mr-1\" (click)=\"importTable()\" buttonClass=\"btn-primary\" iconClass=\"fa fa-refresh\" title=\"Re-import table from connection.\">\n            Re-Import\n        </d-button>\n        <d-button (click)=\"createTable()\" class=\"mr-1\" buttonClass=\"btn-primary\" iconClass=\"fa fa-bullseye\" title=\"Drop & re-create the table on the connection.  Warning: This remove all data from the table!\">\n            Drop & Create\n        </d-button>\n\n        <d-button-apply class=\"mr-1\" (click)=\"apply()\" [disabled]=\"!this.targetTableForm?.dirty\"></d-button-apply>\n        <cancel-button [formsService]=\"tableFormService\"></cancel-button>\n    </ng-template>\n\n    <form *ngIf=\"targetTableForm\"  [formGroup]=\"targetTableForm\">\n        <fieldset>\n            <section>\n                <form-checkbox label=\"Create a new table\" [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"newTable\" (ngModelChange)=\"toggleNewTable($event)\"></form-checkbox>\n            </section>\n            <section *ngIf=\"!newTable\">\n                <form-select label=\"Target Table\" formControlName=\"tableKey\" [items]=\"connectionTables\" parentName=\"name\" childItems=\"dexihTables\"\n                    itemKey=\"key\" itemName=\"logicalName\" note='Select the target table'>\n                </form-select>\n            </section>\n            <section *ngIf=\"nodes?.length > 0\">\n                <form-select label=\"Node level\" formControlName=\"nodeDatalinkColumn\" [items]=\"nodes\" [enableKeySelect]=\"false\" itemKey=\"key\" itemName=\"name\" node='Specify the node where the transform should be applied to.' [allowNullSelect]=\"true\" selectNullMessage='Use top level'>\n                </form-select>\n            </section>\n        </fieldset>\n    </form>\n</d-widget-section>\n\n<dexih-table-edit-properties *ngIf=\"tableFormService.currentForm.value\" [formsService]=\"tableFormService\" [isExpanded]=\"newTable\"></dexih-table-edit-properties>\n\n<ng-template [ngIf]=\"targetTableForm?.controls.table.value\">\n        <d-widget-section title=\"Columns\" [showExpandButton]=\"true\" [padding]=\"false\">\n        <d-table [enableMultiSelect]=\"true\"\n            [enableManualSort]=\"true\" [enableSort]=\"false\" [enableFilter]=\"false\" (onSortChanged)=\"columnSortChange($event)\" [columns]=\"columns\"\n            [dataObservable]=\"tableData\" (rowClick)=\"editColumn($event)\" [enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\">\n    \n            <ng-template #actions let-items=\"items\">\n                <d-button-splitdropdown text=\"Add Column\" title=\"Create a new column\" iconClass=\"fa fa-plus-square\" buttonClass=\"btn-primary\"\n                    (buttonClick)=\"newColumn(null)\">\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.AutoIncrement)\">Add Auto Incrementing Key Column</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.ValidFromDate)\">Add Valid from Date</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.ValidToDate)\">Add Valid to Date</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.IsCurrentField)\">Add Is Current Column</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.CreateAuditKey)\">Add Create Audit Key</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.UpdateAuditKey)\">Add Update Audit Key</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.CreateDate)\">Add Create Date</a>\n                    </li>\n                    <li>\n                        <a class=\"dropdown-item\" (click)=\"newColumn(eDeltaType.UpdateDate)\">Add Update Date</a>\n                    </li>\n                </d-button-splitdropdown>\n\n                <d-button iconClass=\"fa fa-retweet\" class=\"ml-1\" (click)=\"resetColumns()\">Reset All Columns</d-button>\n                <d-button-preview class=\"ml-1\" (click)=\"previewData()\"></d-button-preview>\n                <d-button class=\"ml-1\" (click)=\"importTable()\" buttonClass=\"btn-primary\" iconClass=\"fa fa-refresh\" title=\"Re-import table from connection.\">\n                    Re-Import\n                </d-button>\n                <d-button (click)=\"createTable()\" class=\"ml-1\" buttonClass=\"btn-primary\" iconClass=\"fa fa-bullseye\" title=\"Drop & re-create the table on the connection.  Warning: This remove all data from the table!\">\n                    Drop & Create\n                </d-button>\n            </ng-template>\n    \n            <ng-template #tableHeader let-items=\"items\">\n                <column-edit-bulk *ngIf=\"showBulkEdit && items.length > 0\" [columns]=\"items\" [columnsFormArray]=\"targetTableForm.controls.table.controls.dexihTableColumns\" (updated)=\"updateDeltaColumns()\" ></column-edit-bulk>\n            </ng-template>\n            \n            <ng-template #selectedItemAction select=\"selectedItemAction\" let-column=\"item\">\n                <d-button-edit (click)=\"editColumn(column)\" class=\"ml-1\"></d-button-edit>\n            </ng-template>\n    \n            <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n                <d-button-delete (click)=\"deleteColumns(items)\" class=\"ml-1\"></d-button-delete>\n                <d-button iconClass=\"fa fa-th-list\" class=\"ml-1\" (click)=\"showBulkEdit=!showBulkEdit\">{{showBulkEdit ? 'Hide Bulk Edit' : 'Show Bulk Edit'}} </d-button>\n            </ng-template>\n    \n    \n        </d-table>\n        </d-widget-section>\n\n        <d-widget-section title=\"Unused Columns\" [showExpandButton]=\"true\" [padding]=\"false\">\n        <d-table [enableMultiSelect]=\"true\"\n            sortColumn=\"position\" [enableFilter]=\"false\" [columns]=\"columns\" [dataObservable]=\"missingColumnsData\"\n            [enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\">\n            <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n                <d-button (click)=\"addMissing(items)\" buttonClass=\"btn-primary\" iconClass=\"fa fa-plus-square\" title=\"Add selected outputs to the target table\">Add To Table</d-button>\n            </ng-template>\n    \n        </d-table>\n        </d-widget-section>\n    </ng-template>\n</div>\n\n<div *ngIf=\"showColumn\">\n    <column-edit [columnKey]=\"columnKey\" [tableForm]=\"this.targetTableForm.controls.table\" [deltaType]='deltaType' (isUpdated)=\"columnUpdated()\"></column-edit>\n</div>\n","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { InputOutputColumns, eObjectUse, ColumnUsageNode, eDatalinkObjectType } from '../../../hub.lineage.models';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Observable, Subscription, BehaviorSubject , combineLatest} from 'rxjs';\nimport { FormGroup, FormArray, FormBuilder } from '@angular/forms';\nimport { HubFormsService } from '../../../hub.forms.service';\nimport { LogFactory, eLogLevel } from '../../../../../logging';\nimport { HubCache, eMappingStatus, updateStrategies, loadStrategies, ConnectionTables, lineageMappingStatuses, deltaTypes } from '../../../hub.models';\nimport { eDeltaType, eUpdateStrategy, eTransformWriterMethod, DexihConnection,\n    DexihDatalinkColumn, DexihDatalinkTarget, DexihTable, DexihTableColumn, DexihDatalinkTable, eTypeCode, eSecurityFlag } from '../../../../shared/shared.models';\nimport { CancelToken } from '../../../../+auth/auth.models';\n\n@Component({\n\n    selector: 'dexih-datalink-edit-target-table',\n    templateUrl: './datalink-edit-target-table.component.html'\n})\nexport class DatalinkEditTargetTableComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n    private hubCache: HubCache;\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    private _subscription: Subscription;\n    private _loadStrategySubscription: Subscription;\n    private _tableFormSubscription: Subscription;\n    private _saveSubscription: Subscription;\n\n    private cancelToken: CancelToken = new CancelToken();\n\n    public eMappingStatus = eMappingStatus;\n    public eDeltaType = eDeltaType;\n\n    public tableFormService: HubFormsService;\n\n    public eUpdateStrategy = eUpdateStrategy;\n    public updateStrategies = updateStrategies;\n\n    public eTransformWriterMethod = eTransformWriterMethod;\n    public loadStrategies = loadStrategies;\n\n    public managedConnections: DexihConnection[];\n    public connectionTables: ConnectionTables[];\n\n    public showTableProperties = false;\n    public showColumn = false;\n\n    private ignoreUpdateTable = false;\n\n    public nodes = [];\n\n    public newTable = false;\n\n    public inputColumns: DexihDatalinkColumn[];\n\n    public targetKey: number;\n    public targetTableForm: FormGroup;\n\n    public columnKey: number;\n    public deltaType: eDeltaType;\n\n    public showBulkEdit = false;\n\n    private canExit = false;\n\n    public logger = new LogFactory('datalink-edit-target-table');\n\n    columns = [\n        { name: 'position', title: '#', format: '' },\n        { name: 'columnStatus', title: 'Lineage', format: 'Html' },\n        { name: 'name', title: 'Name', format: '' },\n        { name: 'logicalName', title: 'Logical', format: '' },\n        { name: 'dataType', title: 'Data Type', format: '' },\n        { name: 'deltaType', title: 'Delta Type', format: '' },\n        { name: 'allowDbNull', title: 'Null?', format: 'Boolean' },\n        { name: 'defaultValue', title: 'Default Value', format: '' },\n        { name: 'securityFlag', title: 'Security Flag', format: 'Enum', enum: eSecurityFlag },\n        { name: 'columnValidation', title: 'Validation', format: '', class: 'columnValidationClass', tooltip: 'columnValidationTooltip' }\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    private _missingColumnsData = new BehaviorSubject<Array<any>>(null);\n    missingColumnsData: Observable<Array<any>> = this._missingColumnsData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private fb: FormBuilder) {\n\n        this.tableFormService = new HubFormsService(fb, hubService, authService);\n    }\n\n    ngOnInit() {\n        this.logger.LogC(() => `ngOnInit`, eLogLevel.Trace);\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n                this.datalinkForm = result[3];\n\n                this.action = data['action'];\n                this.pageTitle = data['pageTitle'];\n\n                const ioColumns = new InputOutputColumns();\n                this.inputColumns = ioColumns.getDatalinkOutputColumns(this.datalinkForm.value);\n\n                if (this.action === 'edit') {\n                    this.targetKey = +params['targetKey'];\n                    let targets = <FormArray>this.datalinkForm.controls.dexihDatalinkTargets;\n\n                    // create a copy of the target form.\n                    let originalTargetTableForm = <FormGroup> targets.controls.find(c => c.value.key === this.targetKey);\n\n                    if (originalTargetTableForm && originalTargetTableForm.controls.key.value <= 0) {\n                        this.newTable = true;\n                    }\n\n                    // if the table is not found, then navigate back to the parent.\n                    if (originalTargetTableForm === undefined) {\n                        this.canExit = true;\n                        this.authService.navigateUp();\n                        return;\n                    }\n\n                    this.targetTableForm = this.editDatalinkService.hubFormsService\n                        .datalinkTargetFormGroup(originalTargetTableForm.value, originalTargetTableForm.controls.table.value);\n\n                } else if (this.action === 'new') {\n                    let target = new DexihDatalinkTarget();\n                    target.key = this.hubCache.getNextSequence();\n                    this.targetTableForm = this.editDatalinkService.hubFormsService.datalinkTargetFormGroup(target);\n\n                } else {\n                    this.hubService.addHubErrorMessage('Invalid action ' + this.action);\n                }\n\n                if (this.hubCache.isLoaded() && this.datalinkForm) {\n                    this.connectionTables = this.hubCache.getConnectionTables();\n                    this.managedConnections = this.hubCache.getManagedConnections();\n\n                    this.updateData();\n                    this.resetSubscription();\n\n\n                    this.logger.LogC(() => `ngOnInit - completed`, eLogLevel.Trace);\n                }\n\n                if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n                this._saveSubscription = this.editDatalinkService.savingDatalink.subscribe(value => {\n                    if(value) {\n                        this.apply();\n                    }\n                });\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Edit Target Table');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._loadStrategySubscription) { this._loadStrategySubscription.unsubscribe(); }\n        if (this._tableFormSubscription) { this._tableFormSubscription.unsubscribe(); }\n        if (this._saveSubscription) { this._saveSubscription.unsubscribe(); }\n    }\n\n    canDeactivate(): Promise<boolean> {\n        return new Promise<boolean>(resolve => {\n          if (!this.canExit && this.targetTableForm?.dirty) {\n            this.authService.confirmDialog('Target Table Changed',\n            'The table has changed.  Would you like to discard the changes and return to the previous screen?  Otherwise, use the apply button to save the changes.'\n            ).then(confirm => {\n              resolve(confirm);\n            }).catch(reason => {\n              resolve(false);\n            });\n          } else {\n            resolve(true);\n          }\n        });\n      }\n\n    resetSubscription() {\n        if (this._tableFormSubscription) { this._tableFormSubscription.unsubscribe(); }\n        this._tableFormSubscription = this.targetTableForm.controls.tableKey.valueChanges.subscribe(() => {\n            this.updateData();\n        });\n    }\n\n    previewData() {\n        this.router.navigate(['preview-table-data', this.targetTableForm.controls.tableKey.value], { relativeTo: this.route });\n    }\n\n    columnStatus(table: DexihTable, column: DexihTableColumn): string {\n        let columnUsage: ColumnUsageNode = new ColumnUsageNode(\n            eDatalinkObjectType.TargetTable, eObjectUse.Target,\n            this.datalinkForm.value, null, column, null, null, eMappingStatus.NotMapped, this.hubCache);\n        const lineage = columnUsage.createDatalinkLineage(true);\n        const mappingStatus = lineageMappingStatuses.find(c => c.key === lineage);\n        if (mappingStatus) {\n            return `<i class=\"${mappingStatus.statusClass}\"></i>&nbsp;${mappingStatus.name}`\n        }\n    }\n\n    datalinkColumnStatus(table: DexihDatalinkTable, column: DexihDatalinkColumn): string {\n        let columnUsage: ColumnUsageNode = new ColumnUsageNode(\n            eDatalinkObjectType.TargetTable, eObjectUse.Target,\n            this.datalinkForm.value, column, null, null, null, eMappingStatus.NotMapped, this.hubCache);\n        const lineage = columnUsage.createDatalinkLineage(true);\n        const mappingStatus = lineageMappingStatuses.find(c => c.key === lineage);\n        if (mappingStatus) {\n            return `<i class=\"${mappingStatus.statusClass}\"></i>&nbsp;${mappingStatus.name}`\n        }\n    }\n\n    private addNodeColumns(columns: DexihDatalinkColumn[], path: string) {\n        if (!path) {\n            this.nodes = [];\n        }\n        if (columns) {\n            columns.filter(c => c.dataType === eTypeCode.Node && c.isValid).forEach(col => {\n                let name = path ? (path + '.' + col.logicalName) : col.logicalName;\n                this.nodes.push({key: col.key, name: name});\n\n                if (col.childColumns && col.childColumns.length > 0) {\n                    this.addNodeColumns(col.childColumns, name);\n                }\n            });\n        }\n    }\n\n    updateData() {\n        if (this.ignoreUpdateTable) {\n            return;\n        }\n\n        this.logger.LogC(() => `updateData started`, eLogLevel.Trace);\n        this.showBulkEdit = false;\n\n        let validation = this.editDatalinkService.getValidationTransform()\n\n        this.tableFormService.startForm(<FormGroup>this.targetTableForm.controls.table)\n        if (this.targetTableForm.controls.table) {\n\n            if (!this.targetTableForm.controls.table.value) {\n                this.logger.LogC(() => `updateData no targetTable specified.`, eLogLevel.Trace);\n                this._tableData.next(null);\n            } else {\n                const table = this.targetTableForm.controls.table.value;\n                this.logger.LogC(() => `updateData targetTable ${table.name}`, eLogLevel.Trace);\n\n                let columnData = [];\n                table.dexihTableColumns\n                    .filter(c => c.isValid)\n                    .sort((a, b) => a.position - b.position)\n                    .forEach(column => {\n                        let deltaType = deltaTypes.find(c => c.key === column.deltaType);\n                        let newColumn = {\n                            key: column.key,\n                            position: column.position,\n                            columnStatus: this.columnStatus(table, column),\n                            name: column.name,\n                            dataType: this.hubCache.dataTypeToString(column),\n                            deltaType: deltaType ? deltaType.name : 'Not specified',\n                            allowDbNull: column.allowDbNull,\n                            logicalName: column.logicalName,\n                            isIncrementalUpdate: column.isIncrementalUpdate,\n                            securityFlag: column.securityFlag,\n                            defaultValue: column.defaultValue,\n                            columnValidation: this.hubCache.getColumnValidation(column.columnValidationKey).name,\n                            columnValidationClass: column.columnValidationKey && !validation ? 'dexih-error-icon' : '',\n                            columnValidationTooltip: column.columnValidationKey && !validation ?\n                                'Enabled the validation transform for this to function' : '',\n                        };\n\n                        columnData.push(newColumn);\n                    });\n\n                this._tableData.next(columnData);\n\n                let validColumns = this.validColumns();\n\n                if (validColumns) {\n                    this.addNodeColumns(validColumns, '');\n\n                    let missingColumnData = [];\n                    let position = 0;\n                    validColumns.forEach(column => {\n                        if (table.dexihTableColumns.findIndex(c => c.name === column.name) < 0 &&\n                            missingColumnData.findIndex(c => c.name === column.name) < 0) {\n                            let deltaType = deltaTypes.find(c => c.key === column.deltaType);\n                            let newColumn = {\n                                key: column.key,\n                                position: column.position + position,\n                                columnStatus: this.datalinkColumnStatus(table, column),\n                                name: column.name,\n                                dataType: this.hubCache\n                                    .dataTypeToString(column),\n                                deltaType: deltaType ? deltaType.name : 'Not specified',\n                                allowDbNull: column.allowDbNull,\n                                logicalName: column.logicalName,\n                                isIncrementalUpdate: column.isIncrementalUpdate,\n                                securityFlag: column.securityFlag,\n                                defaultValue: column.defaultValue,\n                                columnValidation: '',\n                            };\n                            missingColumnData.push(newColumn);\n                        }\n                        position += 1000;\n                    });\n                    this._missingColumnsData.next(missingColumnData);\n                }\n\n                this.logger.LogC(() => `updateData columns loaded`, eLogLevel.Trace);\n            }\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    validColumns(): DexihDatalinkColumn[] {\n        let validColumns = this.inputColumns;\n\n        if (this.targetTableForm.controls.nodeDatalinkColumn && this.targetTableForm.controls.nodeDatalinkColumn.value) {\n            let io = new InputOutputColumns();\n            validColumns =  io.validColumns(this.targetTableForm.controls.nodeDatalinkColumn.value.key,\n                    this.inputColumns);\n        }\n\n        return validColumns;\n    }\n\n    addMissing(items: Array<DexihDatalinkColumn>) {\n        this.logger.LogC(() => `addMissing started`, eLogLevel.Trace);\n\n        const tableForm = <FormGroup>this.targetTableForm.controls.table;\n\n        // const ioColumns = new InputOutputColumns();\n        // const outputColumns = ioColumns.getDatalinkOutputColumns(this.datalinkForm.value);\n\n        const outputColumns = this.validColumns();\n\n        if (tableForm && outputColumns) {\n            const tableColumns = <FormArray>tableForm.controls.dexihTableColumns;\n            items.forEach(item => {\n                let missingColumn: DexihDatalinkColumn = null;\n                outputColumns.forEach(column => {\n                    if (!missingColumn && item.key === column.key) {\n                        missingColumn = column;\n                    }\n                });\n                if (missingColumn) {\n                    const newColumn = new DexihTableColumn();\n\n                    Object.assign(newColumn, missingColumn);\n\n                    this.resetColumnKeys(newColumn);\n                    let positions = tableColumns.controls.map<number>(c => <number>c.value.position);\n                    let position = positions.length === 0 ? 0 : Math.max(...positions) + 1; // add the the last position\n                    newColumn.position = position;\n                    const columnForm = this.editDatalinkService.hubFormsService.tableColumn(tableColumns.value, newColumn);\n                    tableColumns.push(columnForm);\n                    tableForm.markAsDirty();\n                    this.targetTableForm.markAsDirty();\n                }\n            });\n            this.updateData();\n        }\n        this.logger.LogC(() => `addMissing completed`, eLogLevel.Trace);\n    }\n\n    resetColumnKeys(column: DexihTableColumn) {\n        column.key = this.hubCache.getNextSequence();\n\n        if (column.childColumns) {\n            column.childColumns.forEach(childColumn => this.resetColumnKeys(childColumn));\n        }\n    }\n\n    toggleNewTable() {\n        this.logger.LogC(() => `newTable started`, eLogLevel.Trace);\n\n        if (this.newTable) {\n            const newTable = new DexihTable();\n            this.targetTableForm.setControl('table', this.editDatalinkService.hubFormsService.tableForm(newTable));\n            this.targetTableForm.controls.tableKey.setValue(0);\n            this.resetSubscription();\n            this.addMissing(this._missingColumnsData.value);\n\n            this.showTableProperties = true;\n        }\n\n        this.logger.LogC(() => `newTable completed`, eLogLevel.Trace);\n    }\n\n    editColumn(column: DexihTableColumn) {\n        this.columnKey = column.key;\n        this.showColumn = true;\n    }\n\n    newColumn(deltaType: eDeltaType) {\n        if (deltaType !== null) {\n            const tableForm = <FormGroup>this.targetTableForm.controls.table;\n            const tableColumns = <FormArray>tableForm.controls.dexihTableColumns;\n            let newColumn = this.hubCache.newColumn(tableForm.value, deltaType);\n            if (newColumn === null) {\n                this.authService.informationDialog('Invalid column.', `The column ${deltaType} could not be added as it already exists.`);\n                return;\n            }\n            const columnForm = this.editDatalinkService.hubFormsService.tableColumn(tableColumns.value, newColumn);\n            tableColumns.push(columnForm);\n            tableForm.markAsDirty();\n            this.targetTableForm.markAsDirty();\n        } else {\n            this.columnKey = null;\n            this.deltaType = deltaType;\n            this.showColumn = true;\n        }\n\n        this.updateData();\n    }\n\n    updateDeltaColumns() {\n        this.targetTableForm.markAsDirty();\n        this.updateData();\n    }\n\n    async resetColumns() {\n        let confirm = await this.authService.confirmDialog('Warning reset columns',\n            'This will remove and reload all the columns in this table using the last mapped outputs.  Continue?')\n\n        if (confirm) {\n            const tableForm = <FormGroup>this.targetTableForm.controls.table;\n            const tableColumns = <FormArray>tableForm.controls.dexihTableColumns;\n\n            while (tableColumns.length !== 0) {\n                tableColumns.removeAt(0)\n              }\n            }\n\n            this.addMissing(this.validColumns());\n    }\n\n    deleteColumns(columns: Array<DexihTableColumn>) {\n        columns.forEach(column => {\n            const tableForm = <FormGroup>this.targetTableForm.controls.table;\n            const tableColumns = <FormArray>tableForm.controls.dexihTableColumns;\n            const index = tableColumns.controls.findIndex(c => c.value.key === column.key);\n            if (index >= 0) {\n                tableColumns.removeAt(index);\n                tableForm.markAsDirty();\n            }\n        });\n\n        this.updateData();\n    }\n\n    importTable() {\n        const table: DexihTable = this.targetTableForm.controls.table.value;\n        const connection = this.hubCache.getConnection(table.connectionKey)\n        this.hubService.importTables([table], false, this.cancelToken)\n            .then(tables => {\n                if (!tables || tables.length === 0) { return; }\n                const returnTable: any = tables[0];\n                returnTable.useLogical =\n                    this.hubCache.defaultTableLogicalName(returnTable.schema, returnTable.name) !== returnTable.logicalName;\n                let tableForm = this.editDatalinkService.hubFormsService.tableForm(returnTable);\n                this.targetTableForm.controls.tableKey.setValue(returnTable.key);\n                this.targetTableForm.setControl('table', tableForm);\n            }).catch(reason => {\n                // this.hubService.addHubErrorMessage(reason);\n            });\n    }\n\n    createTable() {\n        const table: DexihTable = this.targetTableForm.controls.table.value;\n        const connection = this.hubCache.getConnection(table.connectionKey)\n        this.hubService.createTables([table], this.cancelToken)\n            .then(tables => {\n                this.hubService.addHubSuccessMessage('The table was created successfully.');\n                // this.targetTableForm.controls.table.setValue(returnTable);\n            }).catch(reason => {\n                // this.hubService.addHubErrorMessage(reason);\n            });\n    }\n\n    columnSortChange(items: Array<DexihTableColumn>) {\n        this.logger.LogC(() => `columns sort change - started `, eLogLevel.Trace);\n        this.tableFormService.IgnoreFormChange = true;\n        this.editDatalinkService.hubFormsService.IgnoreFormChange = true;\n        this.ignoreUpdateTable = true;\n        const tableForm = <FormGroup>this.targetTableForm.controls.table;\n        let columnsArray = <FormArray>tableForm.controls.dexihTableColumns;\n        let position = 1;\n        items.forEach(c => {\n            let column = <FormGroup>columnsArray.controls.find(control => control.value.key === c.key);\n            column.controls.position.setValue(position++);\n        });\n\n        tableForm.markAsDirty();\n        this.editDatalinkService.hubFormsService.IgnoreFormChange = false;\n        this.tableFormService.IgnoreFormChange = false;\n        this.ignoreUpdateTable = false;\n        this.updateData();\n        this.logger.LogC(() => `columns sort change - finished `, eLogLevel.Trace);\n    }\n\n    columnUpdated() {\n        this.showColumn = false;\n        this.updateData();\n    }\n\n    saveTable() {\n        const table: DexihTable = this.targetTableForm.controls.table.value;\n        this.hubService.saveTables([table]).then(savedTables => {\n            let savedTable = savedTables[0];\n            this.targetTableForm.setControl('table', this.editDatalinkService.hubFormsService.tableForm(savedTable));\n            this.targetTableForm.controls.tableKey.setValue(savedTable.key);\n            this.resetSubscription();\n            this.editDatalinkService.hubFormsService.save(false);\n        });\n    }\n\n    apply() {\n        if (this.targetTableForm.dirty) {\n            let targets = <FormArray>this.datalinkForm.controls.dexihDatalinkTargets;\n            let index = targets.length;\n            if (this.action === 'edit') {\n                index = targets.controls.findIndex(c => c.value.key === this.targetKey);\n                targets.removeAt(index);\n            }\n            targets.insert(index, this.targetTableForm);\n            targets.markAsDirty();\n            this.canExit = true;\n            this.authService.navigateUp();\n        }\n    }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { HubFormsService } from '../../../hub.forms.service';\nimport { LogFactory, eLogLevel } from '../../../../../logging';\nimport { HubCache, eMappingStatus, updateStrategies, loadStrategies, ConnectionTables } from '../../../hub.models';\nimport { eDeltaType, eUpdateStrategy, eTransformWriterMethod,\n    DexihConnection, DexihDatalinkTarget } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'dexih-datalink-edit-target-form',\n    templateUrl: './datalink-edit-target.component.html'\n})\nexport class DatalinkEditTargetComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n    private hubCache: HubCache;\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    private _subscription: Subscription;\n    private _loadStrategySubscription: Subscription;\n\n    public eMappingStatus = eMappingStatus;\n    public eDeltaType = eDeltaType;\n\n    public tableFormService: HubFormsService;\n\n    public eUpdateStrategy = eUpdateStrategy;\n    public updateStrategies = updateStrategies;\n\n    public eTransformWriterMethod = eTransformWriterMethod;\n    public loadStrategies = loadStrategies;\n\n    public managedConnections: DexihConnection[];\n    public connectionTables: ConnectionTables[];\n\n    public showTableProperties = false;\n\n    public targets: DexihDatalinkTarget[] = [];\n\n    public logger = new LogFactory('datalink-edit-target-table');\n\n    public targetTableColumns = [\n        { name: 'table.name', title: 'Name', format: '' },\n        { name: 'table.logicalName', title: 'Logical', format: '' },\n        { name: 'nodeDatalinkColumn.logicalName', title: 'Node', format: ''}\n    ];\n\n    constructor(\n        private hubService: HubService,\n        authService: AuthService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router,\n        fb: FormBuilder) {\n\n        this.tableFormService = new HubFormsService(fb, hubService, authService);\n    }\n\n    ngOnInit() {\n        this.logger.LogC(() => `ngOnInit`, eLogLevel.Trace);\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n                this.hubService.getRemoteLibrariesObservable()\n            ).subscribe(result => {\n                let data = result[0];\n                this.hubCache = result[2];\n                this.datalinkForm = result[3];\n\n                this.action = data['action'];\n                this.pageTitle = data['pageTitle'];\n\n                if (this.hubCache.isLoaded() && this.datalinkForm) {\n                    this.connectionTables = this.hubCache.getConnectionTables();\n                    this.managedConnections = this.hubCache.getManagedConnections();\n                    this.logger.LogC(() => `ngOnInit - completed`, eLogLevel.Trace);\n                }\n\n                this.updateTargets();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Edit Target Table');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._loadStrategySubscription) { this._loadStrategySubscription.unsubscribe(); }\n    }\n\n    private updateTargets() {\n        this.targets = this.datalinkForm.controls.dexihDatalinkTargets.value.sort((a, b) => a.position - b.position);\n    }\n\n    editTable(target: DexihDatalinkTarget) {\n        this.router.navigate(['table-edit', target.key], { relativeTo: this.route });\n    }\n\n    addTable() {\n        this.router.navigate(['table-new'], { relativeTo: this.route });\n    }\n\n    deleteTables(targets: DexihDatalinkTarget[]) {\n        targets.forEach(target => {\n            this.editDatalinkService.deleteDatalinkTarget(this.datalinkForm, target.key);\n            this.updateTargets();\n        });\n    }\n\n    targetSortChange(targets: DexihDatalinkTarget[]) {\n        let position = 1;\n        targets.forEach(target => {\n            target.position = position++;\n        });\n        this.updateTargets();\n    }\n\n}\n","\n<d-widget-section title=\"Target Load Rules\" [showExpandButton]=\"true\">\n    <form *ngIf=\"datalinkForm\" [formGroup]=\"datalinkForm\">\n        <fieldset>\n            <form-checkbox label=\"Datalink is a query and does not populate target tables.\"\n                formControlName=\"isQuery\" [errors]=\"editDatalinkService.hubFormsService.formErrors.isQuery\">\n            </form-checkbox>\n\n            <span *ngIf=\"!datalinkForm?.controls.isQuery.value\">\n                <section>\n                    <form-select label=\"Load Strategy\" formControlName=\"loadStrategy\" [items]=\"loadStrategies\" itemKey=\"key\"\n                        itemName=\"description\" iconClass=\"fa fa-database\" note='Specify processing method for target table(s).'\n                        [errors]=\"editDatalinkService.hubFormsService.formErrors.loadStrategy\">\n                    </form-select>\n                </section>\n                    <section>\n                    <form-select label=\"Update Strategy\" formControlName=\"updateStrategy\" [items]=\"updateStrategies\"\n                        itemKey=\"key\" itemName=\"description\" iconClass=\"fa fa-database\" note='Specify how records should be inserted/updated in the target table.'\n                        [errors]=\"editDatalinkService.hubFormsService.formErrors.updateStrategy\">\n                    </form-select>\n                </section>\n\n                <section>\n                    <form-select label=\"Audit Connection\" formControlName=\"auditConnectionKey\" [items]=\"this.managedConnections\"\n                        itemKey=\"key\" itemName=\"name\" iconClass=\"fa fa-database\" [errors]=\"editDatalinkService.hubFormsService.formErrors.auditConnectionKey\"\n                        note='Specify the connection where audit data (such as job results) should be written to.'>\n                        <connection-edit-button [key]=\"datalinkForm.controls.auditConnectionKey.value\"></connection-edit-button>\n                    </form-select>\n                </section>\n\n                <div class=\"form-row\">\n                    <section class=\"form-group col-md-6\">\n                        <form-input label=\"Maximum Rows Per Commit\" type=\"number\" formControlName=\"rowsPerCommit\"\n                            placeholder=\"Enter maximum rows per commit\" iconClass=\"fa fa-list\" [errors]=\"editDatalinkService.hubFormsService.formErrors.rowsPerCommit\">\n                        </form-input>\n                    </section>\n                    <section class=\"form-group col-md-6\">\n                        <form-input label=\"Maximum Rows Per Progress Update\" type=\"number\" formControlName=\"rowsPerProgress\"\n                            placeholder=\"Enter maximum rows per progress update\" iconClass=\"fa fa-list\" [errors]=\"editDatalinkService.hubFormsService.formErrors.rowsPerProgress\">\n                        </form-input>\n                    </section>\n                </div>\n\n                <div class=\"form-row mb-2\">\n                    <form-checkbox label=\"Add a default row to the target table.  Edit the 'Default Value' of the target columns determine the value to populate.\"\n                        formControlName=\"addDefaultRow\" [errors]=\"editDatalinkService.hubFormsService.formErrors.addDefaultRow\">\n                    </form-checkbox>\n                </div>\n            </span>\n        </fieldset>\n    </form>\n</d-widget-section>\n\n\n<d-widget-section title=\"Tables\" [showExpandButton]=\"true\" [padding]=\"false\" *ngIf=\"!datalinkForm?.controls.isQuery.value\">\n    <d-table [enableMultiSelect]=\"true\" [enableManualSort]=\"true\" [enableSort]=\"false\"\n        [enableFilter]=\"false\" (onSortChanged)=\"targetSortChange($event)\" [columns]=\"targetTableColumns\" [data]=\"targets\"\n        (rowClick)=\"editTable($event)\">\n\n        <ng-template #actions let-items=\"items\">\n            <d-button-new class=\"mr-1\" (click)=\"addTable()\"></d-button-new>\n        </ng-template>\n\n        <ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n            <d-button-edit class=\"mr-1\" (click)=\"editTable(item)\"></d-button-edit>\n        </ng-template>\n\n        <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n            <d-button-delete class=\"mr-1\" (click)=\"deleteTables(items)\"></d-button-delete>\n        </ng-template>\n\n    </d-table>\n</d-widget-section>\n\n<router-outlet></router-outlet>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'transform-step',\n    templateUrl: 'transform-step.component.html',\n    styleUrls: ['./transforms.scss']\n\n})\nexport class TransformStepComponent implements OnInit {\n    @Input() routerLinkBefore: any;\n    @Input() routerLinkAfter: any;\n    @Input() routerLinkCurrent: any;\n    @Input() routerLinkPreview: any;\n    @Input() name: string;\n    @Input() title: string;\n    @Input() icon: string;\n    @Input() control;\n    @Input() showArrow = true;\n\n    @Input() showDelete = false;\n    @Input() isLast = false;\n\n    @Output() onDelete = new EventEmitter();\n    \n    \n    constructor() { }\n\n    ngOnInit() { \n    }\n}","<div class=\"d-flex\">\n    <li class=\"d-flex align-items-stretch p-0\">\n        <a *ngIf=\"routerLinkBefore\" [routerLink]=\"routerLinkBefore\" class=\"insert-before btn btn-sm btn-primary\"\n            title=\"Insert a transform before this\"><i class=\"fa fa-plus\"></i>\n        </a>\n\n        <a *ngIf=\"routerLinkAfter\" [routerLink]=\"routerLinkAfter\" class=\"insert-after btn btn-sm btn-primary\"\n            title=\"Insert a transform after this\"><i class=\"fa fa-plus\"></i>\n        </a>\n\n        <a *ngIf=\"showDelete\" class=\"delete btn btn-sm btn-danger mr-1\" href=\"javascript:void(0)\"\n            (click)=\"onDelete.emit()\" title=\"Delete\"><i class=\"fa fa-remove\"></i>\n        </a>\n\n        <a [routerLink]=\"routerLinkCurrent\" routerLinkActive=\"btn-outline-success\" class=\"btn btn-outline-primary\"\n            style=\"width:100%\" [title]=\"title\">\n            <div class=\"d-block\">\n                <div class=\"text-truncate\" style=\"max-width: 150px;\">\n                    {{name}}\n                </div>\n                <div>\n                    <span class=\"fa-4x\" [ngClass]=\"icon\"></span>\n                    <dexih-invalid-form-icon [control]=\"control\">\n                    </dexih-invalid-form-icon>\n                </div>\n            </div>\n        </a>\n    </li>\n\n    <li *ngIf=\"!isLast && showArrow\">\n        <div class=\"bg-primary\" [ngClass]=\"{'arrow': !isLast, 'arrow-last': isLast }\">\n            <a *ngIf=\"routerLinkPreview\" class=\"btn btn-sm btn-primary  mr-1\"\n                [ngClass]=\"{'preview': !isLast, 'preview-last': isLast}\" [routerLink]=\"routerLinkPreview\"\n                title=\"Preview transform data\"><i class=\"fa fa-search\"></i></a>\n\n            <div *ngIf=\"!isLast\" class=\"arrow-head\">\n\n            </div>\n        </div>\n    </li>\n    <li *ngIf=\"!showArrow\" class=\"no-arrow\">\n    </li>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { deltaTypes, securityFlags, HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { AuthService} from '../../../../+auth/auth.service';\nimport { Observable, Subscription, BehaviorSubject, combineLatest} from 'rxjs';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { TypeCodes } from '../../../hub.remote.models';\nimport { DexihTableColumn, eConnectionPurpose } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'transform-table-edit-form',\n    templateUrl: './transform-table-edit.component.html',\n})\nexport class TransformTableEditComponent implements OnInit, OnDestroy {\n\n    private _subscription: Subscription;\n\n    public canEdit = false;\n    public tableKey: number;\n\n    private hubCache: HubCache;\n    public action: string; // new or edit\n    public pageTitle: string;\n\n    public mainForm: FormGroup;\n\n    typeCodes = TypeCodes;\n    deltaTypes = deltaTypes;\n    securityFlags = securityFlags;\n\n    inputColumns: Array<DexihTableColumn>;\n\n    eConnectionPurpose = eConnectionPurpose;\n\n    datalinkTransformKey: number;\n    datalinkTransformForm: FormGroup;\n    transformTableForm: FormGroup;\n\n    columns = [\n        { name: 'position', title: '#', format: ''},\n        { control: 'name', title: 'Column Name', format: '', tooltip: 'description'},\n        { name: 'dataType', title: 'Data Type', format: ''},\n        { name: 'allowDbNull', title: 'Null?', format: 'Boolean'},\n        { name: 'logicalName', title: 'Logical Name', format: ''},\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar'},\n    ];\n\n    private _columnData = new BehaviorSubject<Array<DexihTableColumn>>(null);\n    columnData: Observable<Array<DexihTableColumn>> = this._columnData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router,\n        ) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                this.pageTitle = result[0]['pageTitle'];\n                let params = result[1];\n                this.hubCache = result[2];\n\n                this.datalinkTransformKey = +params['datalinkTransformKey'];\n                this.datalinkTransformForm = this.editDatalinkService.getDatalinkTransform(this.datalinkTransformKey);\n\n                this.transformTableForm = <FormGroup>this.datalinkTransformForm.controls.transformTable\n                this.updateColumnData();\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Transform Table Edit');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    updateColumnData() {\n        let tableData = [];\n\n        let tableColumns = <FormArray>this.transformTableForm.controls.dexihTableColumns;\n        tableColumns.controls\n        .filter(c => c.value.isValid)\n        .sort((a, b) => a.value.position - b.value.position)\n        .forEach(column => {\n            const columnForm = <FormGroup>column;\n            tableData.push({\n                key: column.value.key,\n                position: column.value.position,\n                name: columnForm.controls.name,\n                description: column.value.description,\n                dataType: column.value.dataType,\n                allowDbNull: column.value.allowDbNull,\n                logicalName: column.value.logicalName,\n                updateDate: column.value.updateDate,\n            });\n        });\n        this._columnData.next(tableData);\n    }\n\n  deleteColumn(column: DexihTableColumn) {\n      this.deleteSelected([column]);\n  }\n\n  deleteSelected(columns: Array<DexihTableColumn>) {\n      const columnsArray = <FormArray>this.transformTableForm.controls.dexihTableColumns;\n\n    columns.forEach(column => {\n        let columnIndex = columnsArray.controls.findIndex(c => c.value.key === column.key);\n        if (columnIndex >= 0) {\n            columnsArray.removeAt(columnIndex);\n        }\n        this.updateColumnData();\n    });\n  }\n\n  newColumn() {\n    this.router.navigate(['column'], { relativeTo: this.route.parent });\n  }\n\n  editColumn(column: DexihTableColumn) {\n    this.router.navigate(['column', column.key], { relativeTo: this.route.parent });\n  }\n\n  columnSortChange(items: Array<any>) {\n        let columnsArray = <FormArray>this.transformTableForm.controls.dexihTableColumns;\n      let position = 1;\n      items.forEach(c => {\n        let column = <FormGroup>columnsArray.controls.find(control => control.value.key === c.key);\n        column.controls.position.setValue(position++);\n      });\n\n      this.updateColumnData();\n  }\n\n  close() {\n      this.authService.navigateUp();\n  }\n\n}\n","<div>\n\t<div class=\"widget-body-toolbar\">\n\t\t<div class=\"form-row\">\n\t\t\t<div class=\"col-sm-6\">\n\t\t\t\t<h5>Transform Output Columns</h5>\n\t\t\t</div>\n\t\t\t<div class=\"col-sm-6 text-right\">\n                <d-button-close (click)=\"close()\"></d-button-close>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n    <d-table \n        [enableMultiSelect]=\"true\"\n        [enableManualSort]=\"true\"\n        (onSortChanged)=\"columnSortChange($event)\"\n        sortColumn=\"position\"\n        [columns]=\"columns\"\n        [dataObservable]=\"columnData\"\n        >\n            <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n                <d-button-delete (click)=\"deleteSelected(items)\" title=\"Delete selected columns\"></d-button-delete>\n            </ng-template>\n\n            <ng-template #selectedItemAction select=\"selectedItemAction\" let-column=\"item\">\n                <d-button-edit (click)=\"editColumn(column)\" title=\"Edit the column\"></d-button-edit>\n            </ng-template>\n\n            <ng-template #actions select=\"actionsTemplate\" let-items=\"items\">\n                <d-button-new (click)=\"deleteSelected(items)\" title=\"Create a new column\"></d-button-new>\n            </ng-template>\n\n    </d-table>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { seriesGrains } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Observable, Subscription, combineLatest } from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { LogFactory, eLogLevel } from '../../../../../logging';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { eTransformType, eTransformItemType, DexihDatalinkColumn, DexihDatalinkTransform,\n    eTypeCode, DexihDatalinkTransformItem, eAggregate, eSortDirection, eJoinNotFoundStrategyItems,\n    eDuplicateStrategyItems, eSeriesGrain, eJoinStrategyItems, eTransformTypeItems } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'dexih-datalink-edit-transform-form',\n    templateUrl: './datalink-edit-transform.component.html',\n})\nexport class DatalinkEditTransformComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n    public datalinkTransformForm: FormGroup;\n    public seriesForm: FormGroup;\n\n    private _subscription: Subscription;\n    private _datalinkFormSubscription: Subscription;\n    private _transformsArraySubscription: Subscription;\n\n    public action: string; // new or edit\n    public pageTitle = 'Transform';\n    public message: string;\n    public datalinkTransformKey: number;\n\n    public showName = false;\n    public showDescription = false;\n\n    eTransformType = eTransformType;\n    eTransformItemType = eTransformItemType;\n    eDuplicateStrategyItems = eDuplicateStrategyItems;\n    eJoinNotFoundStrategyItems = eJoinNotFoundStrategyItems;\n    eJoinStrategyItems = eJoinStrategyItems;\n    \n    public allowMappingOutputs: boolean;\n    inputColumns: Array<DexihDatalinkColumn>;\n\n    eSeriesGrain = eSeriesGrain;\n    seriesGrains = seriesGrains;\n\n    public allowNode = false;\n    public nodeName = '';\n    public nodeType: eTransformItemType;\n\n    public logger = new LogFactory('datalink-edit-transform');\n\n    public nodes = [];\n\n    public formErrors: any = {};\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute,\n        private router: Router\n    ) { }\n\n    ngOnInit() {\n        this.logger.LogC(() => `OnInit`, eLogLevel.Trace);\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n            ).subscribe(result => {\n\n                this.action = result[0]['action'];\n                this.pageTitle = result[0]['pageTitle'];\n                this.datalinkTransformKey = + result[1]['datalinkTransformKey'];\n                this.datalinkForm = result[2];\n\n                if (this.datalinkForm) {\n\n                    let transformsArray = <FormArray>this.datalinkForm.controls.dexihDatalinkTransforms;\n\n                    if (this._transformsArraySubscription) { this._transformsArraySubscription.unsubscribe(); }\n                    this._transformsArraySubscription = transformsArray.valueChanges.subscribe(transforms => {\n                        let tmpDatalinkTransformForm = transforms\n                            .find(c => c.datalinkTransformKey === this.datalinkTransformKey);\n\n                        if (!tmpDatalinkTransformForm) {\n                            this.router.navigate(['properties'], { relativeTo: this.route.parent.parent });\n                        }\n                    });\n\n                    this.datalinkTransformForm = <FormGroup>transformsArray.controls\n                        .find(c => c.value.key === this.datalinkTransformKey);\n\n                    // if the transform isn't found, this is probably due to a save/reload which changes the keys.\n                    // navigate up one level when this happens.\n                    if (!this.datalinkTransformForm) {\n                        this.router.navigate(['properties'], { relativeTo: this.route.parent.parent });\n//                        this.authService.navigateUp();\n                        return;\n                    }\n\n                    let datalinkTransform = <DexihDatalinkTransform> this.datalinkTransformForm.value;\n\n                    let items = <FormArray>this.datalinkTransformForm.controls.dexihDatalinkTransformItems;\n\n                    if (datalinkTransform.transformType === eTransformType.Series) {\n                        this.seriesForm = <FormGroup>items.controls\n                            .filter(d => d.value.transformItemType === eTransformItemType.Series)[0];\n                    }\n\n                    if (datalinkTransform.transformType === eTransformType.Aggregate) {\n                        this.nodeType = eTransformItemType.GroupNode;\n                    }\n\n                    if (datalinkTransform.transformType === eTransformType.Lookup\n                        || datalinkTransform.transformType === eTransformType.Join) {\n                        this.nodeType = eTransformItemType.JoinNode;\n                    }\n\n                    if (this.nodeType) {\n                        let node = datalinkTransform.dexihDatalinkTransformItems\n                        .find(d => d.transformItemType === this.nodeType);\n\n                        if (node) {\n                            this.allowNode = true;\n                            this.nodeName = node.targetDatalinkColumn.name;\n                        } else {\n                            this.allowNode = false;\n                        }\n                    }\n\n                    this.inputColumns = datalinkTransform['runTime'].inputColumns;\n\n                    this.nodes = [];\n                    this.addNodeColumns(this.inputColumns, '');\n\n                    let transformType = datalinkTransform.transformType;\n                    this.allowMappingOutputs =\n                        // transformType === eTransformType.Group ||\n                        transformType === eTransformType.Series ||\n                        // transformType === eTransformType.Aggregate ||\n                        transformType === eTransformType.Rows ||\n                        transformType === eTransformType.Mapping ||\n                        transformType === eTransformType.Validation;\n\n                    if (this._datalinkFormSubscription) { this._datalinkFormSubscription.unsubscribe(); }\n                    this._datalinkFormSubscription = this.datalinkForm.valueChanges.subscribe(value => {\n                        this.formErrors = this.editDatalinkService.hubFormsService.getFormErrorMessages(this.datalinkForm, true);\n                    });\n\n                    if (!this.datalinkTransformForm) {\n                        this.router.navigate(['properties'], { relativeTo: this.route.parent.parent });\n                    }\n\n                    this.logger.LogC(() => `datalink form is loaded`, eLogLevel.Trace);\n                }\n            });\n\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Edit Transform');\n        }\n    }\n\n    private addNodeColumns(columns: DexihDatalinkColumn[], path: string) {\n        if (columns) {\n            columns.filter(c => c.dataType === eTypeCode.Node && c.isValid).forEach(col => {\n                let name = path ? (path + '.' + col.logicalName) : col.logicalName;\n                this.nodes.push({key: col.key, name: name});\n\n                if (col.childColumns && col.childColumns.length > 0) {\n                    this.addNodeColumns(col.childColumns, name);\n                }\n            });\n        }\n    }\n\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._transformsArraySubscription) { this._transformsArraySubscription.unsubscribe(); }\n        if (this._datalinkFormSubscription) { this._datalinkFormSubscription.unsubscribe(); }\n    }\n\n    // deleteTransform() {\n    //     this.logger.LogC(() => `deleteTransform`, eLogLevel.Trace);\n    //     this.editDatalinkService.deleteDatalinkTransform(this.datalinkTransformForm.value);\n    //     this.router.navigate(['properties'], { relativeTo: this.route });\n    // }\n\n    previewData() {\n        this.router.navigate(['preview-transform-data'], { relativeTo: this.route.parent });\n    }\n\n    toggleNode(allowNode: boolean) {\n        let items = <FormArray>this.datalinkTransformForm.controls.dexihDatalinkTransformItems;\n        let nodeItem = <FormGroup> items.controls.find(d => d.value.transformItemType === this.nodeType);\n        if (allowNode) {\n            if (!this.nodeName) {\n                this.nodeName = eTransformItemType[this.nodeType];\n            }\n\n            if (nodeItem) {\n                this.authService.informationDialog('Can not add node',  'Only one node can be added per transform.');\n                return;\n            }\n\n            let item = new DexihDatalinkTransformItem();\n            let outputColumn: DexihDatalinkColumn = new DexihDatalinkColumn();\n            outputColumn.position = 0;\n            outputColumn.key = this.hubService.getHubCache().getNextSequence();\n            outputColumn.name = this.nodeName;\n            outputColumn.logicalName = this.nodeName;\n            outputColumn.dataType = eTypeCode.Node;\n\n            item.position = -1;\n            item.datalinkTransformKey = this.datalinkTransformForm.value.key;\n            item.targetDatalinkColumn = outputColumn;\n            item.isValid = true;\n            item.transformItemType = this.nodeType;\n\n            let itemForm = this.editDatalinkService.hubFormsService\n                .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n            this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n        } else {\n            this.editDatalinkService.deleteDatalinkTransformItem(this.datalinkTransformForm, nodeItem);\n        }\n    }\n\n    updateNode(name: string) {\n        let items = <FormArray>this.datalinkTransformForm.controls.dexihDatalinkTransformItems;\n        let nodeItem = <FormGroup> items.controls.find(d => d.value.transformItemType === this.nodeType);\n        if (nodeItem) {\n            let column = <DexihDatalinkColumn> nodeItem.controls.targetDatalinkColumn.value;\n            if (column) {\n                column.name = name;\n                column.logicalName = name;\n                nodeItem.controls.targetDatalinkColumn.setValue(column);\n            }\n        }\n    }\n\n    newDragDropMapping(itemType: eTransformItemType, $event) {\n        let item = new DexihDatalinkTransformItem();\n        let outputColumn: DexihDatalinkColumn = $event.outputColumn;\n        let inputColumn: DexihDatalinkColumn = $event.inputColumn;\n        let io = new InputOutputColumns();\n\n\n        switch (itemType) {\n            case eTransformItemType.ColumnPair:\n                if (!outputColumn) {\n                    outputColumn = io.copyDatalinkColumn(inputColumn, 0, 'mapping');\n                }\n\n                outputColumn.key = this.hubService.getHubCache().getNextSequence();\n                if (outputColumn.childColumns) {\n                    outputColumn.childColumns.forEach(col => {\n                        col.key = this.hubService.getHubCache().getNextSequence();\n                    });\n                }\n                outputColumn.datalinkTableKey = null;\n                break;\n            case eTransformItemType.Sort:\n                item.sortDirection = eSortDirection.Ascending;\n                break;\n            case eTransformItemType.AggregatePair:\n                if (!outputColumn) {\n                    outputColumn = io.copyDatalinkColumn(inputColumn, 0, 'mapping');\n                }\n\n                outputColumn.key = this.hubService.getHubCache().getNextSequence();\n                if (outputColumn.childColumns) {\n                    outputColumn.childColumns.forEach(col => {\n                        col.key = this.hubService.getHubCache().getNextSequence();\n                    });\n                }\n                outputColumn.datalinkTableKey = null;\n                // outputColumn.name = 'Sum ' + outputColumn.name;\n                item.aggregate = eAggregate.Sum;\n                break;\n        }\n\n        if (itemType) {\n\n            item.datalinkTransformKey = this.datalinkTransformForm.value.key;\n            item.sourceDatalinkColumn = inputColumn;\n            item.targetDatalinkColumn = outputColumn;\n            item.isValid = true;\n\n            item.transformItemType = itemType;\n            let itemForm = this.editDatalinkService.hubFormsService\n                .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n            this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n        }\n    }\n\n    newDragDropJoin($event) {\n        let transformType = this.datalinkTransformForm.value.transformType;\n\n        if (transformType === eTransformType.Join\n            || transformType === eTransformType.Lookup) {\n            let joinColumn: DexihDatalinkColumn = $event.joinColumn;\n            let inputColumn: DexihDatalinkColumn = $event.inputColumn;\n            let item = new DexihDatalinkTransformItem();\n            item.transformItemType = eTransformItemType.JoinPair;\n            item.datalinkTransformKey = this.datalinkTransformForm.value.key;\n            item.sourceDatalinkColumn = inputColumn;\n            item.joinDatalinkColumn = joinColumn;\n            item.isValid = true;\n            let itemForm = this.editDatalinkService.hubFormsService\n                .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, item);\n\n            this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, itemForm);\n        }\n    }\n}\n","\n<d-widget-section title=\"Properties\" [showExpandButton]=\"true\" [isExpanded]=\"false\">\n<form *ngIf=\"datalinkTransformForm\"  [formGroup]=\"datalinkTransformForm\">\n        <fieldset>\n            <section>\n                <form-input label=\"Transform Name\" formControlName=\"name\" placeholder=\"Enter a name for the transform\" [autocapitalize]=\"true\" iconClass=\"fa fa-list\"\n                    [errors]=\"formErrors.name\">\n                </form-input>\n            </section>\n            <section>\n                <form-textarea  label=\"Description\" formControlName=\"description\"  [isHidden]=\"true\" [showPreview]=\"true\" placeholder=\"Enter the description.\"\n                    [errors]=\"formErrors.description\">\n                </form-textarea>\n            </section>\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Aggregate || this.datalinkTransformForm.value.transformType == eTransformType.Series || this.datalinkTransformForm.value.transformType == eTransformType.Rows || this.datalinkTransformForm.value.transformType == eTransformType.Mapping\">\n                <section>\n                    <form-checkbox label=\"Allow unmapped input columns to pass through to the next transform.\" formControlName=\"passThroughColumns\">\n                    </form-checkbox>\n                </section>\n            </div>\n            \n            <section *ngIf=\"nodes?.length > 0\">\n                <form-select label=\"Node level\" formControlName=\"nodeDatalinkColumn\" [items]=\"nodes\" [enableKeySelect]=\"false\" itemKey=\"key\" itemName=\"name\" node='Specify the node where the transform should be applied to.' [allowNullSelect]=\"true\" selectNullMessage='Use top level'>\n                </form-select>\n            </section>\n\n            <div class=\"form-row\">\n                <section class=\"form-group col-md-6\">\n                    <form-input type=\"number\" formControlName=\"maxInputRows\" label=\"Maximum number of rows to input into the transform (0 = unlimited)\"></form-input>\n                </section>\n                <section class=\"form-group col-md-6\">\n                    <form-input type=\"number\" formControlName=\"maxOutputRows\" label=\"Maximum number of rows to output into the transform (0 = unlimited)\"></form-input>\n                </section>\n            </div>\n        </fieldset>\n    </form>\n</d-widget-section>\n<d-widget-section *ngIf=\"datalinkTransformForm && (this.datalinkTransformForm.value.transformType == eTransformType.Join || this.datalinkTransformForm.value.transformType == eTransformType.Lookup)\" title=\"Join Settings\" [showExpandButton]=\"true\">\n    <form [formGroup]=\"datalinkTransformForm\">\n        <fieldset>\n            <datalink-table [datalinkTableForm]=\"datalinkTransformForm.controls.joinDatalinkTable\"></datalink-table>\n\n            <div class=\"form-row\">\n                <section class=\"form-group col-md-4\" *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Join\">\n                    <form-select label=\"Join strategy\" formControlName=\"joinStrategy\" [items]=\"eJoinStrategyItems\"\n                        itemKey=\"key\" itemName=\"name\">\n                    </form-select>\n                </section>\n\n                <section class=\"form-group col-md-4\">\n                    <form-select [label]=\"'Strategy when ' + eTransformType[this.datalinkTransformForm.value.transformType] + ' produces duplicate matches'\" formControlName=\"joinDuplicateStrategy\" [items]=\"eDuplicateStrategyItems\"\n                        itemKey=\"key\" itemName=\"name\">\n                    </form-select>\n                </section>\n\n                <section class=\"form-group col-md-4\">\n                    <form-select [label]=\"'Strategy when ' + eTransformType[this.datalinkTransformForm.value.transformType] + ' produces no match '\" formControlName=\"joinNotFoundStrategy\" [items]=\"eJoinNotFoundStrategyItems\"\n                        itemKey=\"key\" itemName=\"description\">\n                    </form-select>\n                </section>\n            </div>\n        </fieldset>\n    </form>\n</d-widget-section>\n\n<d-widget-section *ngIf=\"datalinkTransformForm && this.datalinkTransformForm.value.transformType == eTransformType.Concatenate\" title=\"Concatenate Settings\" [showExpandButton]=\"true\">\n    <form [formGroup]=\"datalinkTransformForm\">\n        <fieldset>\n            <datalink-table [datalinkTableForm]=\"datalinkTransformForm.controls.joinDatalinkTable\"></datalink-table>\n        </fieldset>\n    </form>\n</d-widget-section>\n\n<d-widget-section *ngIf=\"datalinkTransformForm && this.datalinkTransformForm.value.transformType == eTransformType.Series\" title=\"Series Settings\" [showExpandButton]=\"true\">\n    <form [formGroup]=\"seriesForm\">\n        <fieldset>\n            <div class=\"form-row\">\n                <section class=\"form-group col-md-6\">\n                    <form-select label=\"Series Grain\" formControlName=\"seriesGrain\" [items]=\"seriesGrains\" itemKey=\"key\" itemName=\"name\">\n                    </form-select>\n                </section>\n                <section class=\"form-group col-md-6\">\n                    <form-select label=\"Input Column\" formControlName=\"sourceDatalinkColumn\" [items]=\"inputColumns\"\n                    [enableKeySelect]=\"false\" itemKey=\"key\" itemName=\"name\">\n                    </form-select>\n                </section>\n            </div>\n\n            <form-checkbox label=\"Fill empty series values\" formControlName=\"seriesFill\"></form-checkbox>\n\n            <div class=\"form-row\" *ngIf=\"seriesForm.controls.seriesFill.value && seriesForm.controls.seriesGrain.value !== eSeriesGrain.Number\">\n                <section class=\"form-group col-md-6\">\n                    <form-input type=\"date\" formControlName=\"seriesStart\" label=\"Series Start Date (empty to use first value)\"></form-input>\n                </section>\n                <section class=\"form-group col-md-6\">\n                    <form-input type=\"date\" formControlName=\"seriesFinish\" label=\"Series Finish Date (empty to use last value)\"></form-input>\n                </section>\n            </div>\n\n            <div class=\"form-row\" *ngIf=\"seriesForm.controls.seriesFill.value && seriesForm.controls.seriesGrain.value === eSeriesGrain.Number\">\n                <section class=\"form-group col-md-6\">\n                    <form-input formControlName=\"seriesStart\" label=\"Series Start Number (empty to use first value)\"></form-input>\n                </section>\n                <section class=\"form-group col-md-6\">\n                    <form-input formControlName=\"seriesFinish\" label=\"Series Finish Number (empty to use last value)\"></form-input>\n                </section>\n            </div>\n        </fieldset>\n    </form>\n</d-widget-section>\n\n<d-widget-section *ngIf=\"datalinkTransformForm && this.nodeType === eTransformItemType.GroupNode\" title=\"Group Node\" [showExpandButton]=\"true\">\n    <form>\n        <fieldset>\n            <form-checkbox label=\"Group rows under a node\" [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"allowNode\" (ngModelChange)=\"toggleNode($event)\"></form-checkbox>\n            <section *ngIf=\"allowNode\" class=\"form-group col-md-6\">\n                <form-input [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"nodeName\" (ngModelChange)=\"updateNode($event)\" label=\"Name of the node\"></form-input>\n            </section>\n        </fieldset>\n    </form>\n</d-widget-section>\n\n<div class=\"list-group-item p-1\">\n\n<div *ngIf=\"datalinkTransformForm\" class=\"d-flex\" cdkDropListGroup>\n        <d-widget class=\"d-none d-lg-inline\" title=\"Inputs\" height=\"80vh\" style=\"width:300px\" [scrollable]=\"true\">\n            <input-columns [datalinkTransformForm]='datalinkTransformForm'></input-columns>\n\n            <div class=\"mt-1\"  *ngIf=\"datalinkTransformForm.controls.joinDatalinkTable.value\">\n                <join-columns [datalinkTransformForm]='datalinkTransformForm' (inputJoinDrop)=\"newDragDropJoin($event)\"></join-columns>\n            </div>\n        </d-widget>\n\n        <div class=\"w-100 mr-1 ml-1\">\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Join || this.datalinkTransformForm.value.transformType == eTransformType.Lookup\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowJoin]=\"true\" title=\"{{eTransformType[this.datalinkTransformForm.value.transformType]}} Table\"  >\n                </mapping>\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Mapping\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowStandard]=\"true\" [allowMapping]=\"true\" [allowOutput]=\"true\" title=\"Mapping Functions\" (onColumnDrop)=\"newDragDropMapping(eTransformItemType.ColumnPair, $event)\">\n                </mapping>\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Sort\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowSort]=\"true\" title=\"Sort Columns\" (onColumnDrop)=\"newDragDropMapping(eTransformItemType.Sort, $event)\">\n                </mapping>\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Group || this.datalinkTransformForm.value.transformType == eTransformType.Aggregate  || this.datalinkTransformForm.value.transformType == eTransformType.Series  || this.datalinkTransformForm.value.transformType == eTransformType.Rows\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" title=\"Group Columns\"  [allowGroup]=\"true\" [allowSeries]=\"this.datalinkTransformForm.value.transformType == eTransformType.Series\"\n                    (onColumnDrop)=\"newDragDropMapping(eTransformItemType.Column, $event)\">\n                </mapping>\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Group\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowStandard]=\"true\" [allowAggregate]=\"true\" [allowOutput]=\"true\" title=\"Aggregate Functions\" (onColumnDrop)=\"newDragDropMapping(eTransformItemType.AggregatePair, $event)\">\n                </mapping>\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Series\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowStandard]=\"true\" [allowAggregate]=\"true\" [allowSeries]=\"true\" [allowOutput]=\"true\" title=\"Series/Aggregate Functions\" (onColumnDrop)=\"newDragDropMapping(eTransformItemType.AggregatePair, $event)\">\n                </mapping>\n\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowMapping]=\"true\" [allowOutput]=\"true\" title=\"Mappings\" (onColumnDrop)=\"newDragDropMapping(eTransformItemType.ColumnPair, $event)\">\n                </mapping>\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Aggregate\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowStandard]=\"true\" [allowAggregate]=\"true\" [allowOutput]=\"true\" title=\"Aggregate Functions\" (onColumnDrop)=\"newDragDropMapping(eTransformItemType.AggregatePair, $event)\">\n                </mapping>\n\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowMapping]=\"true\" [allowOutput]=\"true\" title=\"Mappings\" (onColumnDrop)=\"newDragDropMapping(eTransformItemType.ColumnPair, $event)\">\n                </mapping>\n\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Filter\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowStandard]=\"true\" [allowCondition]=\"true\" [allowOutput]=\"false\" title=\"Filters\" >\n                </mapping>\n            </div>\n\n            <div *ngIf=\"this.datalinkTransformForm.value.transformType == eTransformType.Rows\">\n                <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowRow]=\"true\" [allowStandard]=\"true\" [allowJoinNode]=\"false\" [allowOutput]=\"true\" [allowCondition]=\"true\" title=\"Row Functions\">\n                </mapping>\n            </div>\n        </div>\n\n        <d-widget class=\"d-none d-lg-inline\" [title]=\"'Outputs' + (datalinkTransformForm.controls.nodeDatalinkColumn?.value ? '(@' + datalinkTransformForm.controls.nodeDatalinkColumn.value.name + ')' : '')\"  height=\"80vh\" style=\"width:300px\"  [scrollable]=\"true\">\n            <output-columns [datalinkTransformForm]='datalinkTransformForm' [allowMappingOutputs]=\"allowMappingOutputs\" (inputOutputDrop)=\"newDragDropMapping(eTransformItemType.ColumnPair, $event)\"></output-columns>\n            <target-columns [datalinkTransformForm]='datalinkTransformForm' [targets]=\"datalinkForm.controls.dexihDatalinkTargets.value\" [allowMappingOutputs]=\"allowMappingOutputs\" (inputOutputDrop)=\"newDragDropMapping(eTransformItemType.ColumnPair, $event)\"></target-columns>\n        </d-widget>\n    </div>\n</div>","export * from './unGroup-edit.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HubCache } from '../../../hub.models';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { LogFactory, eLogLevel } from '../../../../../logging';\nimport { TypeCodes } from '../../../hub.remote.models';\nimport { InputOutputColumns } from '../../../hub.lineage.models';\nimport { eFunctionType, eParameterDirection, DexihDatalinkColumn, DexihDatalinkTransformItem, eTransformItemType, DexihFunctionParameter, FunctionParameter, eTypeCode } from '../../../../shared/shared.models';\n\n@Component({\n\n  selector: 'dexih-unGroup-edit',\n  templateUrl: './unGroup-edit.component.html'\n})\nexport class UnGroupEditComponent implements OnInit, OnDestroy {\n  public hubCache: HubCache;\n\n  eFunctionType = eFunctionType;\n  eParameterDirection = eParameterDirection;\n  typeCodes = TypeCodes;\n\n  public pageTitle: string;\n\n  private _subscription: Subscription;\n  private _nodeSubscription: Subscription;\n\n  transformFunctionType: eFunctionType;\n  datalinkTransformItemKey: number;\n  datalinkKey: number;\n  datalinkTransformKey: number;\n\n  datalinkForm: FormGroup;\n  datalinkTransformForm: FormGroup;\n  datalinkTransformItemForm: FormGroup;\n\n  newDatalinkTransformItemForm: FormGroup;\n\n  inputColumns: Array<DexihDatalinkColumn>;\n  outputColumns: Array<DexihDatalinkColumn>;\n\n  variables = [];\n\n  allowOutput = false;\n  allowReturn = true;\n\n  logger = new LogFactory('unGroup-edit');\n\n  constructor(\n    private hubService: HubService,\n    private authService: AuthService,\n    private editDatalinkService: DatalinkEditService,\n    private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n        this.editDatalinkService.hubFormsService.getCurrentFormObservable()\n      ).subscribe(result => {\n        this.pageTitle = result[0]['pageTitle'];\n        let params = result[1];\n        this.hubCache = result[2];\n        this.datalinkForm = result[3];\n\n        this.logger.LogC(() => `OnInit`, eLogLevel.Trace);\n\n        if (this.hubCache && this.hubCache.isLoaded() && this.datalinkForm) {\n            this.datalinkTransformKey = +params['datalinkTransformKey'];\n            this.datalinkTransformItemKey = +params['datalinkTransformItemKey'];\n            this.datalinkTransformForm = this.editDatalinkService.getDatalinkTransform(this.datalinkTransformKey);\n\n            this.variables = this.editDatalinkService.getVariables();\n\n            let nodeDatalinkColumn = this.datalinkTransformForm.controls.nodeDatalinkColumn.value;\n            let nodeDatalinkColumnKey = nodeDatalinkColumn ? nodeDatalinkColumn.key : null;\n            let io = new InputOutputColumns();\n            if (nodeDatalinkColumnKey) {\n              let inputColumns = <DexihDatalinkColumn[]> this.datalinkTransformForm.controls.runTime.value.inputColumns;\n              this.inputColumns = io.getAvailableColumns(inputColumns, nodeDatalinkColumnKey, 0);\n              this.outputColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n            } else {\n              this.inputColumns = this.datalinkTransformForm.controls.runTime.value.inputColumns;\n              this.outputColumns = this.datalinkTransformForm.controls.runTime.value.transformColumns;\n            }\n\n            this.inputColumns = this.inputColumns.filter(c => c.dataType === eTypeCode.Node);\n\n            if (this.datalinkTransformItemKey) {\n            this.datalinkTransformItemForm = this.editDatalinkService\n              .getDatalinkTransformItem(this.datalinkTransformForm, this.datalinkTransformItemKey);\n\n            if (!this.datalinkTransformItemForm) {\n              this.authService.navigateUp();\n              return;\n            }\n\n            // create a copy of the form item to allow for cancel.\n            this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n              .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, this.datalinkTransformItemForm.value);\n\n              let parameters = <FormArray>this.newDatalinkTransformItemForm.controls.dexihFunctionParameters;\n              parameters.controls.forEach((control: FormGroup) => {\n                let runTime = {};\n                runTime['functionParameter'] = new FunctionParameter();\n                if (control.value.datalinkColumn) {\n                  runTime['functionParameter'].name = control.value.datalinkColumn.name;\n                }\n                control.controls['runTime'].setValue(runTime);\n              });\n\n          } else {\n            let newItem = new DexihDatalinkTransformItem();\n            newItem.datalinkTransformKey = this.datalinkTransformKey;\n            newItem.transformItemType = eTransformItemType.UnGroup;\n            this.datalinkTransformItemKey = 0;\n\n            this.newDatalinkTransformItemForm = this.editDatalinkService.hubFormsService\n              .datalinkDatalinkTransformItemFormGroup(this.datalinkTransformForm, newItem);\n          }\n\n          if (this._nodeSubscription) { this._nodeSubscription.unsubscribe(); }\n          this._nodeSubscription = this.newDatalinkTransformItemForm.controls.sourceDatalinkColumn.valueChanges\n            .subscribe(sourceDatalinkColumn => {\n              let parameters = <FormArray>this.newDatalinkTransformItemForm.controls.dexihFunctionParameters;\n              // clear previous parameters\n              while (parameters.length) {\n                parameters.removeAt(0);\n              }\n              let column = <DexihDatalinkColumn> sourceDatalinkColumn;\n              // add a paramter for each childColumn\n              if (column.childColumns && column.childColumns.length > 0) {\n                column.childColumns.forEach((childColumn, index) => {\n                  let outputColumn = io.copyDatalinkColumn(childColumn, 0, 'un-group')\n                  let newParameter = new DexihFunctionParameter();\n                  newParameter.datalinkTransformItemKey = this.datalinkTransformItemKey;\n                  newParameter.name = childColumn.name;\n                  newParameter.rank = childColumn.rank;\n                  newParameter.direction = eParameterDirection.Output;\n                  newParameter.dataType = childColumn.dataType;\n                  newParameter.position = index;\n                  newParameter.key = this.hubCache.getNextSequence();\n                  newParameter.datalinkColumn = outputColumn\n                  newParameter.isValid = true;\n                  newParameter['runTime'] = {};\n                  newParameter['runTime'].functionParameter = new FunctionParameter();\n                  newParameter['runTime'].functionParameter.name = childColumn.name;\n\n                  let newParameterForm = this.editDatalinkService.hubFormsService.datalinkFunctionParametersFormGroup(newParameter);\n                  parameters.push(newParameterForm);\n                });\n              }\n            });\n        }\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'UnGroup Node Edit');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._nodeSubscription) { this._nodeSubscription.unsubscribe(); }\n  }\n\n  canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      if (this.newDatalinkTransformItemForm && !this.newDatalinkTransformItemForm.pristine) {\n        this.authService.confirmDialog('The function has changed',\n          'The function has changed.  Do you want to discard the changes and continue?')\n          .then((confirm) => {\n              resolve(confirm);\n            }).catch(() => {\n              resolve(false);\n            });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  cancel() {\n    this.authService.navigateUp();\n  }\n\n  apply() {\n    this.editDatalinkService.insertDatalinkTransformItem(this.datalinkTransformForm, this.newDatalinkTransformItemForm);\n    this.newDatalinkTransformItemForm.markAsPristine();\n  }\n\n  applyExit() {\n    this.apply();\n    this.authService.navigateUp();\n  }\n\n}\n\n","<div *ngIf=\"newDatalinkTransformItemForm && inputColumns && outputColumns\">\n\n\t<div class=\"list-group-item list-group-item-info rounded-0\">\n\t\t<div class=\"d-flex flex-row\">\n\t\t\t<h5>Un-Group Column Node</h5>\n\t\t\t<div class=\"ml-auto\">\n\t\t\t\t<d-button-apply [disabled]=\"newDatalinkTransformItemForm.pristine\" (click)=\"!newDatalinkTransformItemForm.pristine && applyExit()\"\n\t\t\t\t class=\"mr-1\"></d-button-apply>\n\t\t\t\t<d-button-cancel (click)=\"cancel()\"></d-button-cancel>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<div class=\"container  mt-3 mb-3\" *ngIf=\"datalinkTransformForm\">\n\n\t\t<form [formGroup]=\"newDatalinkTransformItemForm\">\n\t\t\t<fieldset>\n\t\t\t\t<section class=\"col col-xs-12\">\n\t\t\t\t\t<form-select label=\"Column Node\" \n\t\t\t\t\t\tformControlName=\"sourceDatalinkColumn\" \n\t\t\t\t\t\t[items]=\"inputColumns\" \n\t\t\t\t\t\t[enableTextEntry]=\"true\"\n\t\t\t\t\t\t[enableTextEntryMatch]=\"false\"\n\t\t\t\t\t\t[enableKeySelect]=\"false\"\n\t\t\t\t\t\titemKey=\"key\"\n\t\t\t\t\t\titemName=\"logicalName\"\n\t\t\t\t\t\t>\n\t\t\t\t\t</form-select>\n\t\t\t\t</section>\n\n\t\t\t\t<div class=\"mt-1\">\n\n\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<div class=\"col border bg-primary text-white font-weight-bold text-truncate\">UnGroup Column</div>\n\t\t\t\t\t\t</div>\n\t\t\t\n\t\t\t\t\t\t<div *ngFor=\"let parameter of newDatalinkTransformItemForm.controls.dexihFunctionParameters.controls; let i = index;\" class=\"row\">\n\t\t\t\t\t\t\t<div class=\"col border bg-secondary text-white text-truncate\">\n\t\t\t\t\t\t\t\t<div>{{parameter.controls.name.value}}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t</form>\n\t</div>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubService } from '../../../hub.service';\nimport { DatalinkEditService } from '../datalink-edit.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { FormGroup } from '@angular/forms';\nimport { HubCache } from '../../../hub.models';\nimport { DexihTable, DexihTableColumn, eTransformType, RemoteLibraries } from '../../../../shared/shared.models';\n\n@Component({\n\n    selector: 'dexih-datalink-edit-validation-form',\n    templateUrl: './datalink-edit-validation.component.html',\n})\nexport class DatalinkEditValidationComponent implements OnInit, OnDestroy {\n    public datalinkForm: FormGroup;\n    public datalinkTransformForm: FormGroup;\n\n    private _subscription: Subscription;\n    private _transformsChange: Subscription;\n\n    private hubCache: HubCache;\n    private remoteLibraries: RemoteLibraries;\n    public action: string; // new or edit\n    public pageTitle = 'Validation';\n    public message: string;\n\n    public showName = false;\n    public showDescription = false;\n\n    public inputColumns: Array<DexihTable>;\n    public outputColumns: Array<DexihTableColumn>;\n\n    constructor(\n        private hubService: HubService,\n        private editDatalinkService: DatalinkEditService,\n        private route: ActivatedRoute    ) { }\n\n    ngOnInit() {\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.hubService.getHubCacheObservable(),\n                this.editDatalinkService.hubFormsService.getCurrentFormObservable(),\n                this.hubService.getRemoteLibrariesObservable()\n            ).subscribe(result => {\n                this.pageTitle = result[0]['pageTitle'];\n                this.hubCache = result[1];\n                this.datalinkForm = result[2];\n                this.remoteLibraries = result[3];\n\n                if (this.hubCache.isLoaded() && this.datalinkForm) {\n                    this.datalinkTransformForm = this.editDatalinkService.getValidationTransform();\n\n                    this._transformsChange = this.datalinkForm.controls.dexihDatalinkTransforms.valueChanges\n                    .subscribe(() => this.datalinkTransformForm = this.editDatalinkService.getValidationTransform());\n                }\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Edit Validation');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._transformsChange) { this._transformsChange.unsubscribe(); }\n    }\n\n    enableValidation() {\n        let transform = this.remoteLibraries.transforms.find(c => c.transformType === eTransformType.Validation);\n        this.datalinkTransformForm = this.editDatalinkService.insertDatalinkTransform(1, transform);\n    }\n\n    disableValidation() {\n        this.editDatalinkService.deleteDatalinkTransform(this.datalinkTransformForm.value);\n        this.datalinkTransformForm = null;\n    }\n}\n","<d-widget-section title='Validation' [showExpandButton]=\"false\">\n<div *ngIf=\"!datalinkTransformForm\">\n    <div class=\"alert alert-danger m-3\">\n        Target column validation is not enabled.\n        <hr>\n        <d-button *ngIf=\"!datalinkTransformForm\" (click)=\"enableValidation()\" buttonClass=\"btn btn-success\" iconClass=\"fa fa-check\"  [autoCompact]=\"false\"\n            title=\"Enable the validation on the target table.\">Enable</d-button>\n    </div>\n</div>\n\n<div *ngIf=\"datalinkTransformForm\">\n\n    <form *ngIf=\"datalinkTransformForm\" [formGroup]=\"datalinkTransformForm\">\n        <fieldset>\n            <section>\n                <d-button (click)=\"disableValidation()\" buttonClass=\"btn btn-success\" iconClass=\"fa fa-check\" [autoCompact]=\"false\"\n                    title=\"Enable the validation on the target table.\">Disable Validation</d-button>\n            </section>\n            <section>\n                <form-textarea label=\"Description\" formControlName=\"description\" [showPreview]=\"true\"  [isHidden]=\"true\" placeholder=\"Enter the description.\">\n                </form-textarea>\n            </section>\n        </fieldset>\n    </form>\n</div>\n</d-widget-section>\n\n<div class=\"list-group-item p-1\">\n\n    <div *ngIf=\"datalinkTransformForm\" class=\"d-flex\">\n        <div class=\"mr-1 d-none d-md-inline\">\n            <div>\n                <div class=\"alert alert-primary mb-1\">\n                    <h4>Inputs</h4>\n                </div>\n                <div>\n                    <input-columns [datalinkTransformForm]='datalinkTransformForm'></input-columns>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"w-100\">\n            <mapping [datalinkTransformForm]=\"datalinkTransformForm\" [allowCondition]=\"true\" [allowOutput]=\"true\"\n               [allowStandard]=\"true\" [allowValidation]=\"true\" title=\"Validation\">\n            </mapping>\n        </div>\n\n        <div class=\"ml-1 d-none d-md-inline\">\n            <div class=\"alert alert-primary mb-1\">\n                <h4>Outputs\n                    <div class=\"float-right\">\n                    </div>\n                </h4>\n            </div>\n            <output-columns [datalinkTransformForm]='datalinkTransformForm' [allowMappingOutputs]=\"false\"></output-columns>\n        </div>\n\n    </div>\n</div>\n"]}