{"version":3,"sources":["webpack:///src/app/+hub/search/object-type.pipe.ts","webpack:///src/app/+hub/results/results-view/profile-results.component.ts","webpack:///src/app/+hub/results/results-view/profile-results.component.html","webpack:///src/app/+hub/files/files-bulk-load/files-bulk-load.component.html","webpack:///src/app/+hub/files/files-bulk-load/files-bulk-load.component.ts","webpack:///src/app/+hub/connection/connection-import/connection-import.component.html","webpack:///src/app/+hub/connection/connection-import/connection-import.component.ts","webpack:///src/app/+hub/test/datalinkTest-index/datalinkTest-index.component.ts","webpack:///src/app/+hub/test/datalinkTest-index/datalinkTest-index.component.html","webpack:///src/app/+hub/datalink/datalink-preview-data/datalink-preview-data.component.ts","webpack:///src/app/+hub/datalink/datalink-preview-data/datalink-preview-data.component.html","webpack:///src/app/+hub/results/results-view/preview-results.component.ts","webpack:///src/app/+hub/results/results-view/preview-results.component.html","webpack:///src/app/+hub/copy/index.ts","webpack:///src/app/+hub/hubVariable/hubVariable-index/hubVariable-index.component.ts","webpack:///src/app/+hub/hubVariable/hubVariable-index/hubVariable-index.component.html","webpack:///src/app/+hub/api/api-index/api-index.component.ts","webpack:///src/app/+hub/api/api-index/api-index.component.html","webpack:///src/app/+hub/datajob/datajob-index/index.ts","webpack:///src/app/+hub/manage/manage-users-index/manage-users-index.component.ts","webpack:///src/app/+hub/manage/manage-users-index/manage-users-index.component.html","webpack:///src/app/+hub/listOfValues/listOfValues-index/listOfValues-index.component.ts","webpack:///src/app/+hub/listOfValues/listOfValues-index/listOfValues-index.component.html","webpack:///src/app/+hub/sharedData/sharedData-index.component.ts","webpack:///src/app/+hub/sharedData/sharedData-index.component.html","webpack:///src/app/+hub/columnValidation/columnValidation-edit/columnValidation-edit.component.ts","webpack:///src/app/+hub/columnValidation/columnValidation-edit/columnValidation-edit.component.html","webpack:///src/app/+hub/files/files-manage/files-manage.component.ts","webpack:///src/app/+hub/files/files-manage/files-manage.component.html","webpack:///src/app/+hub/columnValidation/columnValidation-index/columnValidation-index.component.ts","webpack:///src/app/+hub/columnValidation/columnValidation-index/columnValidation-index.component.html","webpack:///src/app/+hub/customFunction/customFunction-edit/index.ts","webpack:///src/app/+hub/listOfValues/listOfValues-edit/listOfValues-edit.component.ts","webpack:///src/app/+hub/listOfValues/listOfValues-edit/listOfValues-edit.component.html","webpack:///src/app/+hub/dashboard/dashboard-edit/index.ts","webpack:///src/app/+hub/api/api-edit/api-edit.component.ts","webpack:///src/app/+hub/api/api-edit/api-edit.component.html","webpack:///src/app/+hub/results/results-view/progress.component.ts","webpack:///src/app/+hub/results/results-view/progress.component.html","webpack:///src/app/+hub/connection/connection-edit/index.ts","webpack:///src/app/+hub/dashboard/dashboard-edit/dashboard-edit.component.ts","webpack:///src/app/+hub/dashboard/dashboard-edit/dashboard-edit.component.html","webpack:///src/app/+hub/dashboard/dashboard-edit/item/dashboard-item.component.ts","webpack:///src/app/+hub/dashboard/dashboard-edit/item/dashboard-item.component.html","webpack:///src/app/+hub/search/index.ts","webpack:///src/app/+hub/connection/connection-index/index.ts","webpack:///src/app/+hub/tags/tags.component.ts","webpack:///src/app/+hub/tags/tags.component.html","webpack:///src/app/+hub/connection/index.ts","webpack:///src/app/+hub/results/results-view/results-view.component.ts","webpack:///src/app/+hub/results/results-view/results-view.component.html","webpack:///src/app/+hub/datajob/datajob-run/datajob-run.component.ts","webpack:///src/app/+hub/datajob/datajob-run/datajob-run.component.html","webpack:///src/app/+hub/copy/import/import.component.ts","webpack:///src/app/+hub/copy/import/import.component.html","webpack:///src/app/+hub/columnValidation/index.ts","webpack:///src/app/+hub/hub.base.routing.ts","webpack:///src/app/+hub/connection/connection-import/index.ts","webpack:///src/app/+hub/customFunction/customFunction-index/customFunction-index.component.ts","webpack:///src/app/+hub/customFunction/customFunction-index/customFunction-index.component.html","webpack:///src/app/+hub/datalink/datalink-run/datalink-run.component.ts","webpack:///src/app/+hub/datalink/datalink-run/datalink-run.component.html","webpack:///src/app/+hub/customFunction/customFunction-edit/customFunction-edit.component.ts","webpack:///src/app/+hub/customFunction/customFunction-edit/customFunction-edit.component.html","webpack:///src/app/+hub/datalink/datalink-preview-data/index.ts","webpack:///src/app/+hub/datajob/datajob-index/datajob-index.component.ts","webpack:///src/app/+hub/datajob/datajob-index/datajob-index.component.html","webpack:///src/app/+hub/copy/export/export.component.ts","webpack:///src/app/+hub/copy/export/export.component.html","webpack:///src/app/+hub/datalink/index.ts","webpack:///src/app/+hub/search/search.component.ts","webpack:///src/app/+hub/search/search.component.html","webpack:///src/app/+hub/remoteAgent/remoteAgent-index/remoteAgent-index.component.html","webpack:///src/app/+hub/remoteAgent/remoteAgent-index/remoteAgent-index.component.ts","webpack:///src/app/+hub/test/datalinkTest-new/datalinkTest-new.component.html","webpack:///src/app/+hub/test/datalinkTest-new/datalinkTest-new.component.ts","webpack:///src/app/+hub/results/results-view/stats.component.ts","webpack:///src/app/+hub/results/results-view/stats.component.html","webpack:///src/app/+hub/datalink/datalink-new/index.ts","webpack:///src/app/+hub/datajob/datajob-edit/datajob-edit.component.ts","webpack:///src/app/+hub/datajob/datajob-edit/datajob-edit.component.html","webpack:///src/app/+hub/table/table-preview-data/index.ts","webpack:///src/app/+hub/hub.base.module.ts","webpack:///src/app/+hub/results/results-index/results-index.component.ts","webpack:///src/app/+hub/results/results-index/results-index.component.html","webpack:///src/app/+hub/view/view-index/index.ts","webpack:///src/app/+hub/listOfValues/listOfValues-edit/index.ts","webpack:///src/app/+hub/datalink/datalink-index/datalink-index.component.ts","webpack:///src/app/+hub/datalink/datalink-index/datalink-index.component.html","webpack:///src/app/+hub/table/table-index/index.ts","webpack:///src/app/+hub/datalink/datalink-new/datalink-new.component.ts","webpack:///src/app/+hub/datalink/datalink-new/datalink-new.component.html","webpack:///src/app/+hub/connection/connection-index/connection-index.component.html","webpack:///src/app/+hub/connection/connection-index/connection-index.component.ts","webpack:///src/app/+hub/hubVariable/index.ts","webpack:///src/app/+hub/hubVariable/hubVariable-edit/hubVariable-edit.component.html","webpack:///src/app/+hub/hubVariable/hubVariable-edit/hubVariable-edit.component.ts","webpack:///src/app/+hub/connection/connection-edit/connection-edit.component.html","webpack:///src/app/+hub/connection/connection-edit/connection-edit.component.ts","webpack:///src/app/+hub/customFunction/customFunction-edit/customFunction-parameter.component.ts","webpack:///src/app/+hub/customFunction/customFunction-edit/customFunction-parameter.component.html","webpack:///src/app/+hub/remoteAgent/remoteAgent-edit/remoteAgent-edit.component.ts","webpack:///src/app/+hub/remoteAgent/remoteAgent-edit/remoteAgent-edit.component.html","webpack:///src/app/+hub/api/api-edit/index.ts","webpack:///src/app/+hub/listOfValues/listOfValues-index/index.ts","webpack:///src/app/+hub/table/table-index/table-index.component.html","webpack:///src/app/+hub/table/table-index/table-index.component.ts","webpack:///src/app/+hub/results/results-view/results-view.module.ts","webpack:///src/app/+hub/customFunction/index.ts","webpack:///src/app/+hub/datajob/index.ts","webpack:///src/app/+hub/remoteAgent/index.ts","webpack:///src/app/+hub/dashboard/dashboard-index/index.ts","webpack:///src/app/+hub/search/search.module.ts","webpack:///src/app/+hub/results/results-index/index.ts","webpack:///src/app/+hub/datalink/datalink-index/index.ts","webpack:///src/app/+hub/dashboard/index.ts","webpack:///src/app/+hub/results/index.ts","webpack:///src/app/+hub/view/view-edit/index.ts","webpack:///src/app/+hub/files/index.ts","webpack:///src/app/+hub/results/results-view/index.ts","webpack:///src/app/+hub/dashboard/dashboard-index/dashboard-index.component.ts","webpack:///src/app/+hub/dashboard/dashboard-index/dashboard-index.component.html","webpack:///src/app/+hub/api/api-index/index.ts","webpack:///src/app/+hub/test/index.ts"],"names":["ObjectTypePipe","value","find","c","key","name","ProfileResultsComponent","authService","hubService","showDetailed","cancelToken","refresh","cancel","previewProfileData","auditResult","then","result","columns","data","reason","downloadProfileData","selector","templateUrl","FilesBulkLoadComponent","route","router","formsService","fb","entityType","canEdit","formatTypes","eTypeCode","eFileStatus","automaticUpload","uploadedFiles","reference","tables","currentTable","pageTitle","showPage","showPageMessage","tableColumns","title","format","footer","uploadColumns","_subscription","queryParams","getHubCacheObservable","getRemoteLibrariesObservable","subscribe","hubCache","remoteLibraries","fileConnections","hub","dexihConnections","filter","ref","connections","con","connectionAssemblyName","connectionClassName","connectionCategory","File","purpose","Source","connectionKey","length","bulkLoadForm","group","Text","updateConnection","_connectionKeySubscription","unsubscribe","controls","valueChanges","_flatFilesSubscription","getFlatFilesObservable","flatFileReady","message","success","addHubMessage","e","addHubClientErrorMessage","navigateUp","connection","getConnection","addHubErrorMessage","event","files","srcElement","doUpload","Array","prototype","forEach","call","file","bulkLoad","bulkUploadFiles","fileFormatKey","formatType","loadData","includeFileName","includeFileDate","includeFileRowNumber","url","fileHandler","concat","upload","status","addHubSuccessMessage","table","navigate","relativeTo","hasChanged","currentForm","Object","assign","items","newTables","keys","i","saveTables","savedTable","push","index","findIndex","t","splice","tableKeys","join","hubKey","root","item","id","Promise","resolve","confirmDialog","confirm","$event","returnValue","unloadNotification","ConnectionImportComponent","_tableData","tableData","asObservable","tableFilter","viewFilter","params","getRemoteAgentObservable","remoteAgent","close","isLoaded","GetConnectionReference","connectionReference","getTables","watchChanges","updateFilter","_hubCacheChangeSubscription","tableType","View","Table","next","getDatabaseTableNames","cacheTables","dexihTables","cacheTable","schema","defaultSchema","entityStatus","importTables","importResult","mergeTables","isBusy","lastStatus","Error","deleteTables","selected","selectedTables","informationDialog","parent","map","getHubCacheChangeObservable","hubCacheChange","changeClass","changeType","Replace","New","Delete","deletedTable","previousTable","updateDate","createDate","editTable","styles","DatalinkTestIndexComponent","eSharedObjectType","tags","update","deleteDatalinkTests","runDatalinkTestSnapshot","runDatalinkTests","dexihDatalinkTests","isValid","description","getObjectTags","DatalinkTest","tests","cache","createHub","filename","exportHub","TagObjects","edit","DatalinkPreviewDataComponent","eDataObjectType","action","previewUpdates","PreviewResultsComponent","selectQuery","refreshDataSubject","refreshDataObservable","_hubCacheSubscription","auditType","targetTable","getTable","referenceKey","datalink","dexihDatalinks","dexihDatalinkTargets","tableKey","testStep","getDatalinkTestStep","testDatalink","datalinkKey","testTable","JSON","parse","stringify","errorTableName","errorSchema","errorConnectionKey","dexihTableColumns","column","deltaType","NonTrackingField","auditCol","dataType","Int64","CreateAuditKey","opCol","CharArray","maxLength","DatabaseOperation","reasonCol","String","UpdateReason","runningQuery","createAuditColumn","updateAuditColumn","UpdateAuditKey","column1","operator","IsEqual","value2","auditKey","andOr","Or","compareDataType","filters","rows","createSelectQuery","query","previewTableDataQuery","downloadObject","objectKey","objectType","downloadData","Csv","HubVariableIndexComponent","updateVariables","variables","deleteHubVariables","dexihHubVariables","isEncrypted","HubVariable","variable","vars","d","ApiIndexComponent","iconClass","tooltip","width","align","updateApis","api","apis","dexihApis","apiSource","getSourceDetails","sharedIcon","isShared","sharedToolTip","ColumnValidation","sourceType","sourceTableKey","sourceDatalinkKey","Api","editApi","ManageUsersIndexComponent","ePermission","ePermissionItems","permission","PublishReader","emails","sendInvites","refreshUsers","getHubUsers","users","userNames","userName","setUserPermissions","dexihMessage","addSuccessMessage","alertEmail","userIds","setUserAlerts","removeUsers","ListOfValuesIndexComponent","lov","deleteListOfValues","listOfValues","dexihListOfValues","ListOfValues","lovItem","getListOfValuesCache","SharedDataIndexComponent","typeFilter","snapshot","updateSharedData","objects","objectTypeName","Datalink","logicalName","dexihViews","view","dexihDashboards","dashboard","Dashboard","dataObjects","dataObject","datalinkKeys","shareItems","preview","ColumnValidationEditComponent","eInvalidAction","eCleanAction","InvalidActions","CleanActions","typeCodes","invalidActions","cleanActions","lookupColumnValue","eCacheStatus","Loaded","load","_formChangeSubscription","_lookupColumnSubscription","getConnectionTables","columnValidationKey","dexihColumnValidations","validation","getCurrentFormObservable","form","history","pushState","newUrl","window","location","pathname","replace","navigateByUrl","getValidationLookupColumn","lookupColumnKey","getColumn","testColumnValidation","testValue","testResult","providers","FilesManageComponent","updateStrategy","Reload","updateStrategies","path","None","eFlatFilePath","eFlatFilePathItems","connectionTables","fc","Incoming","queryParamsHandling","refreshFiles","allowsFlatFiles","getFileList","fileName","deleteFiles","toPath","moveFiles","downloadFiles","uploadFile","ColumnValidationIndexComponent","updateValidations","validations","deleteColumnValidations","cacheAddColumnValidation","ListOfValuesEditComponent","eLOVObjectType","datalinks","sourceTypes","_sourceChangeSubscription","listOfValuesKey","refreshColumns","ioColumns","buildInputOutput","getDatalinkOutputColumns","previewListOfValues","listOfValuesItem","staticData","insert","removeAt","pristine","ApiEditComponent","eSourceType","apiKey","getColumns","_changesSubscription","reset","apiForm","inputColumns","getInputColumns","sourceDatalinkTable","dexihDatalinkColumns","isInput","rank","defaultValue","previewDatalinkKeyData","parameters","previewTableKeyData","ProgressComponent","percent","total","toString","caption","color","DashboardEditComponent","isRefreshing","refreshComplete","views","dashboardKey","minCols","maxCols","minRows","maxRows","autoRefresh","runTime","showEdit","previewDashboard","dexihDashboardItems","dashboardItemKey","getRemoteResponse","dataKey","constructDataTableColumns","setValue","lock","viewKey","getNextSequence","cols","x","y","found","row","col","occupied","currentItem","formGroup","dashboardItem","updateDashboardItemView","downloadObjects","dashboardItems","DashboardItemComponent","showPreview","isMaximized","onRemove","onMaximize","eViewType","firstLoad","dialogOpen","dataRows","isHubCacheLoaded","_refreshDataSubscription","dataResult","viewConfig","animateConfig","parentParameters","_parametersSubscription","_viewKeySubscription","changes","itemChange","newItem","currentValue","previewViewKey","results","preventDefault","stopPropagation","emit","removeItem","styleUrls","refreshData","widget","TagsComponent","state","colors","tag","dexihTags","editTag","document","body","scrollTop","documentElement","deleteTags","save","hide","search","cacheAddTag","Tags","height","overflow","animations","ResultsViewComponent","auditConnectionKey","getResultDetail","r","_transformWriterResultChangeSubscription","getTransformWriterResultChangeObservable","writerResult","DatajobRunComponent","truncateTable","resetIncremental","resetValue","datajobKeys","datajobs","datajobKeyArray","split","datajobKey","datajob","dexihDatajobs","p","runDatajobs","activateDatajobs","ImportComponent","hubFormsService","importActions","importOptions","type","FormData","append","postForm","refreshImport","doImport","o","property","importAction","newImport","importPackage","fileInput","resultViewRoute","children","pathMatch","component","tableRoutes","loadChildren","m","TableEditModule","datalinkRoutes","DatalinkEditModule","tablesRoute","connectionRoutes","canDeactivate","connectionsRoute","agentRoutes","agentsRoute","resultRoutes","manageRoute","importRoute","exportRoute","sharedDataRoute","DashboardEditModule","customFunctionRoutes","customFunctionRoute","columnValidationRoutes","columnValidationsRoute","fileFormatRoutes","fileFormatsRoute","viewRoutes","viewRoute","dashboardRoutes","dashboardRoute","lovRoutes","lovRoute","apiRoutes","apiRoute","hubVariableRoutes","hubVariablesRoute","tagsRoute","datalinkTestRoutes","DatalinkTestEditModule","datalinkTestsRoute","filesRoutes","FilesBulkLoadModule","filesRoute","datalinksRoute","datajobRoutes","DatajobEditModule","datajobsRoute","searchRoute","redirectTo","HubBaseModule","routes","BaseRouting","forChild","CustomFunctionIndexComponent","updateCustomFunctions","functions","deleteCustomFunctions","dexihCustomFunctions","CustomFunction","customFunction","cacheAddCustomFunction","DatalinkRunComponent","datalinkKeyArray","datalinkName","runDatalinks","CustomFunctionEditComponent","eParameterDirection","outputParameters","inputParameters","outputParameterValues","inputParameterValues","functionTypes","eFunctionType","_functionTypeSubscription","customFunctionKey","functionType","Condition","JoinCondition","Validate","returnType","Boolean","updateParameters","dexihCustomFunctionParameters","parametersArray","sort","a","b","position","direction","Input","Output","parameter","newParameter","oldParameter","newParameterForm","customFunctionParametersFormGroup","valueIndex","isArray","indexOf","tmpTransform","createDataTransformItem","downloadCustomFunction","testCustomFunction","syntaxMessage","returnParameterValue","converted","stack","selectedCustomFunction","functionCode","methodCode","functionResultCode","resultCode","transformItemType","param","datalinkTransformItemKey","returnParam","ReturnValue","dexihFunctionParameters","DatajobIndexComponent","updateDatajobs","Datajob","editDatajob","ExportComponent","getSharedObjects","cacheAddObject","label","SearchComponent","searchObjectTypes","eSearchObjectType","isFirst","searchObject","searchForm","updateSearch","_searchSubscription","pipe","newValue","searchResults","searchString","getHubUrl","RemoteAgentIndexComponent","getRemoteAgentsObservable","remoteAgents","statusFilter","updateRemoteAgents","dexihRemoteAgentHubs","remoteAgentKey","activeAgent","remoteAgentHubKey","connected","isAuthorized","user","dataPrivacyStatus","ipAddress","lastLoginDateTime","lastLoginIpAddress","remoteAgentId","RemoteAgent","agentHub","isDefault","saveRemoteAgent","agent","deleteRemoteAgent","DatalinkTestNewComponent","showAllErrors","saving","formErrors","validationMessages","managedConnections","Managed","sourceDatalinkKeys","sourceDatalinks","targetConnection","targetConnectionKey","sourceConnectionKey","buildForm","_valueChangesSubscription","mainForm","onValueChanged","field","control","get","dirty","valid","messages","errors","newDatalinkTest","snapshotData","back","StatsComponent","exceptionHidden","barChartOptions","responsive","scales","xAxes","yAxes","ticks","callback","numberWithCommas","plugins","datalabels","anchor","formatter","ctx","v","toFixed","barChartLabels","barChartType","barChartLegend","barChartPlugins","barChartData","fail","eRunStatus","eTriggerMethod","endTime","Date","valueOf","startTime","runStatus","Running","RunningErrors","Started","Abended","Cancelled","Failed","FinishedErrors","Finished","Passed","rowsPerSecond","rowsReadPrimary","rowsReadReference","readTicks","rowsTotal","processingTicks","writeTicks","backgroundColor","parts","DatajobEditComponent","ngOnDestroy","newDatajob","createDefaultDatajob","ngModule","imports","declarations","exports","ResultsIndexComponent","auditTypes","datalinkTests","hubPath","datalinkKeysString","datajobKeysString","datalinkTestsKeysString","connectionKeys","uniqueKeys","ar","getAuditResults","existingResult","showResult","DatalinkIndexComponent","eDatalinkType","eDatalinkTypeItems","updateDatalinks","newDatalinks","datalinkType","datalinkData","sourceName","targetName","sourceTable","sourceDatalink","Rows","isQuery","editDatalink","DatalinkNewComponent","addSourceColumns","eConnectionPurpose","auditColumnTypes","AutoIncrement","IsCurrentField","Version","ValidFromDate","ValidToDate","CreateDate","UpdateDate","allAuditColumns","savingDatalink","managedTargetConnections","Target","updateTables","General","sourceTableKeys","sourceTables","required","auditColumns","createDatalinks","openDatalink","iteration","setTimeout","ConnectionIndexComponent","eConnectionPurposeItems","purposeFilter","updateConnections","deleteConnections","Connection","cacheAddConnection","editConnection","HubVariableEditComponent","_isEncryptedSubscription","hubVariableKey","hubVariable","valueRaw","encrypt","ConnectionEditComponent","savingConnection","refreshingConnection","revealingConnectionString","creatingDatabase","databases","eConnectionCategory","logger","LogC","Trace","_purposeSubscription","Warning","updateDatabaseTypes","defaultDatabase","updateUrl","previousConnectionKey","previousConnection","substr","connectionTypes","allowsSourceConnection","allowsManagedConnection","allowsTargetConnection","Hub","server","uri","protocol","hostname","port","username","getUser","email","connectionString","connectionStringDisplay","decrypt","password","passwordDisplay","encryptConnection","refreshConnection","textValue","promptDialog","createDatabase","passwordRaw","connectionStringRaw","getRoute","CustomFunctionParameterComponent","customFunctionParameterForm","addParameter","removeParameter","eBasicType","ignoreChanges","add","remove","RemoteAgentEditComponent","isNew","remoteAgentHub","ipAddressesControl","ipAddresses","TableIndexComponent","connectionName","updateTableData","Query","defaultTableLogicalName","tableName","connectionType","isFile","ResultsViewModule","SearchModule","DashboardIndexComponent","updateDashboards","deleteDashboards","dashboards","cacheAddDashboard"],"mappings":"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","file":"6-es5.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { eSearchObjectType, SearchObjectTypes } from '../hub.models';\n\n@Pipe({\n  name: 'objectTypeName'\n})\nexport class ObjectTypePipe implements PipeTransform {\n\n  transform(value: eSearchObjectType): any {\n    return SearchObjectTypes.find(c => c.key === value).name;\n  }\n}\n","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubService } from '../../hub.service';\nimport { CancelToken } from '../../../+auth/auth.models';\nimport { TransformWriterResult } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'profile-results',\n    templateUrl: './profile-results.component.html'\n})\n\nexport class ProfileResultsComponent implements OnInit, OnDestroy {\n    @Input() auditResult: TransformWriterResult;\n\n    columns: Array<any>;\n    data: Array<any>;\n\n    showDetailed = false;\n\n    private cancelToken = new CancelToken();\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService\n    ) {\n\n    }\n\n    ngOnInit() {\n        this.refresh();\n    }\n\n    ngOnDestroy(): void {\n        this.cancelToken.cancel();\n    }\n\n    refresh() {\n        this.hubService.previewProfileData(this.auditResult, !this.showDetailed, this.cancelToken).then(result => {\n            this.columns = result.columns;\n            this.data = result.data;\n        }).catch(reason => {\n          // this.hubService.addHubMessage(reason);\n        });\n    }\n\n    download() {\n        this.hubService.downloadProfileData(this.auditResult, this.cancelToken);\n    }\n}\n","<d-table [enableMultiSelect]=\"false\" [columns]=\"columns\" [data]=\"data\">\n\n    <ng-template #actions let-items=\"items\">\n        <d-button-refresh (click)=\"refresh()\" text=\"Reload\"></d-button-refresh>\n        <d-button-download class=\"ml-1\" (click)=\"download()\"></d-button-download>\n\n        <div class=\"d-flex flex-wrap\">\n            <div class=\"flex-fill pl-1\" >\n                <form-checkbox label=\"Show Detailed Results\" [(ngModel)]=\"showDetailed\" [border]=\"true\" (change)=\"refresh()\"></form-checkbox>\n            </div>\n        </div>\n    </ng-template>\n</d-table>","<section *ngIf=\"hubCache?.hub && (!fileConnections || fileConnections.length === 0)\">\n    <div class=\"alert alert-danger m-3\">\n        There are no files configured.  Create a file based connection, and add at least one file definition.\n        <hr>\n        <div>\n            <a class=\"btn btn-sm btn-primary text-white\" routerLink=\"/hub/{{hubCache.hub.hubKey}}/connections/connection-new/Source\" [title]=\"\">New Connection</a>\n        </div>\n    </div>\n</section>\n\n<div *ngIf=\"fileConnections && fileConnections.length > 0\" class=\"container\">\n    <d-widget *ngIf=\"!currentTable\" [title]=\"'Bulk Load: ' + connection?.name\" iconClass=\"fa fa-lg fa-fw fa-files-o\" [showCloseButton]=\"true\" (close)=\"close()\">\n        <form *ngIf=\"bulkLoadForm\" [formGroup]=\"bulkLoadForm\">\n        <div class=\"m-3\">\n            <section>\n                <form-select label=\"Connection\" formControlName=\"connectionKey\" [items]=\"fileConnections\" itemKey=\"key\"\n                    itemName=\"name\" iconClass=\"fa fa-database\" note='The connection where the files will be uploaded to.'>\n                    <a routerLink=\"//hub/{{hubCache.hub.hubKey}}/connections/connection-new/Source\">(<i class=\"fa fa-sticky-note-o\"></i> New )</a>\n                </form-select>\n            </section>\n\n            <div class=\"form-row\">\n                <section class=\"col-md-6\">\n                    <form-select label=\"Format Type\" formControlName=\"formatType\" [items]=\"formatTypes\" itemKey=\"key\"\n                        itemName=\"name\" iconClass=\"fa fa-text\" note='The format of data.'>\n                    </form-select>\n                </section>\n\n                <section class=\"col-md-6\" *ngIf=\"bulkLoadForm.controls.formatType.value == eTypeCode.Text\">\n                    <form-select label=\"File Format\" formControlName=\"fileFormatKey\" placeholder=\"File Format\"\n                        [items]=\"hubCache.hub.dexihFileFormats\" itemKey=\"key\" itemName=\"name\" [enableFilter]=\"false\"\n                        note=\"Specify the file format to use, if not specified, a csv (command separated) format will be used.\"\n                        [allowNullSelect]=\"true\" selectNullMessage=\"Use default (csv) format\">\n                        <a routerLink=\"/hub/{{hubCache.hub.hubKey}}/fileFormats/fileFormat-new\">(<i class=\"fa fa-sticky-note-o\"></i> New )</a>\n                    </form-select>\n                </section>\n            </div>\n\n            <section >\n                <form-checkbox label=\"Create physical table and load data\" formControlName=\"loadData\"></form-checkbox>\n                <form-checkbox label=\"Include file name field\" formControlName=\"includeFileName\"></form-checkbox>\n                <form-checkbox label=\"Include file date field\" formControlName=\"includeFileDate\"></form-checkbox>\n                <form-checkbox label=\"Include file row field\" formControlName=\"includeFileRowNumber\"></form-checkbox>\n            </section>\n        </div>\n    </form>\n\n        <ul *ngIf=\"connection\" class=\"list-group\">\n            <d-widget-section title='Drop Files to Load' [showExpandButton]=\"true\">\n                <div class=\"well my-drop-zone\" dropZone [requireFiles]=\"true\" (dropFiles)=\"filesDrop($event)\" dropAllowedClass=\"nv-file-over\">\n                    Drop Files to Load Here\n                    <div class=\"custom-file w-25 float-right\">\n                        <input type=\"file\" class=\"custom-file-input\" onclick=\"this.value=null\" (change)=\"uploadFile($event)\">\n                        <label class=\"custom-file-label\" for=\"inputGroupFile01\">Choose files</label>\n                    </div>\n                </div>\n            </d-widget-section>\n\n            <d-widget-section title='Upload Queues' [showExpandButton]=\"true\" [padding]=\"false\">\n                <d-table [enableMultiSelect]=\"true\" [columns]=\"uploadColumns\" [data]=\"uploadedFiles\">\n\n                    <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n                        <d-button class=\"mr-1\" iconClass=\"fa fa-upload\" buttonClass='btn-primary' (click)=\"uploadSelected(items)\">Upload</d-button>\n                        <d-button-cancel class=\"mr-1\" (click)=\"cancelSelected(items)\"></d-button-cancel>\n                        <d-button-delete (click)=\"removeSelected(items)\" text=\"Remove\"></d-button-delete>\n                    </ng-template>\n\n                    <ng-template #actions let-items=\"items\">\n                        <div class=\"d-flex align-items-center h-100\">\n                        <form-checkbox [(ngModel)]=\"automaticUpload\" label=\"Automatically upload files when added to the queue.\"></form-checkbox>\n                        </div>\n                    </ng-template>\n\n                    <ng-template #rowStatus select=\"rowStatus\" let-item=\"item\">\n                        <div *ngIf=\"item.isRunning()\" class=\"progress\" style=\"margin-bottom: 0;\">\n                            <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': item.progress + '%' }\"></div>\n                        </div>\n                        <span>\n                            <i class='fa' [ngClass]=\"{\n                                'fa-check': item.status === eFileStatus.Complete, \n                                'fa-exclamation-circle': item.status === eFileStatus.Error,\n                                'fa-ban': item.status === eFileStatus.Cancelled}\"></i>{{item.status}}</span>\n                    </ng-template>\n                </d-table>            \n            </d-widget-section>\n    \n            <d-widget-section title='Edit and Save Tables' [showExpandButton]=\"true\" [padding]=\"false\">\n                <d-table [enableMultiSelect]=\"true\" [columns]=\"tableColumns\" [data]=\"tables\" (rowClick)=\"editTable($event)\">\n\n                    <ng-template select=\"selectedItemsAction\" #selectedItemsAction let-items=\"items\">\n                        <d-button-save class=\"ml-1\" (click)=\"saveTables(items)\" title=\"Save the selected tables.\"></d-button-save>\n                        <d-button class=\"ml-1\" (click)=\"createDatalinks(items)\" iconClass=\"fa fa-exchange\" title=\"Save the selected tables, and create datalinks to load them into a staging area.\">Create Datalinks</d-button>\n                        <d-button-delete class=\"ml-1\"  (click)=\"discardTables(items)\" title=\"Discard the selected tables.\" text=\"Discard\"></d-button-delete>\n                    </ng-template>\n    \n                </d-table>\n            </d-widget-section>\n        </ul>\n    </d-widget>\n\n    <d-widget *ngIf=\"currentTable\" [title]=\"'Edit table: ' + formsService.currentForm.controls.name.value\" [showCloseButton]=\"true\" (close)=\"cancel()\">\n        <ng-template #header>\n            <d-button-apply (click)=\"applyChanges()\"></d-button-apply>\n            <d-button-cancel class=\"ml-1\" (click)=\"cancel()\"></d-button-cancel>\n        </ng-template>\n        <router-outlet></router-outlet>\n    </d-widget>\n</div>","import { Component, OnInit, OnDestroy, HostListener } from '@angular/core';\nimport { FileHandler, eFileStatus, CancelToken } from '../../../+auth/auth.models';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { HubCache, eCacheStatus, formatTypes } from '../../hub.models';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubService } from '../..';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { DexihConnection, eTypeCode, DexihTable, eConnectionCategory, eConnectionPurpose } from '../../../shared/shared.models';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'files-bulk-load',\n    templateUrl: 'files-bulk-load.component.html'\n})\n\nexport class FilesBulkLoadComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n    private _connectionKeySubscription: Subscription;\n    private _flatFilesSubscription: Subscription;\n\n    public entityType = 'Table';\n\n    public canEdit = false;\n    public connection: DexihConnection;\n\n    public bulkLoadForm: FormGroup;\n\n    public formatTypes = formatTypes;\n    public eTypeCode = eTypeCode;\n    public eFileStatus = eFileStatus;\n\n    public hubCache: HubCache;\n\n    public automaticUpload = true;\n\n    public uploadedFiles: FileHandler[] = [];\n\n    private reference: string = null;\n    public tables: DexihTable[] = []\n\n    public currentTable: DexihTable = null;\n\n    private cancelToken = new CancelToken();\n\n    pageTitle = 'Manage Files';\n    showPage = false;\n    showPageMessage = 'Loading...';\n\n    tableColumns = [\n        { name: 'logicalName', title: 'Logical Name', format: 'Md', footer: 'description' },\n        { name: 'name', title: 'Table Name'  },\n    ];\n\n    uploadColumns = [\n        { name: 'file.name', title: 'File Name', format: '' },\n        { name: 'file.size', title: 'Size', format: '' },\n    ];\n\n    public fileConnections: DexihConnection[];\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private route: ActivatedRoute,\n        private router: Router,\n        public formsService: HubFormsService,\n        private fb: FormBuilder) { }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.queryParams,\n                this.hubService.getHubCacheObservable(true),\n                this.hubService.getRemoteLibrariesObservable()\n            ).subscribe(result => {\n                let queryParams = result[0];\n                this.hubCache = result[1];\n                let remoteLibraries = result[2];\n\n                this.fileConnections = this.hubCache.hub.dexihConnections\n                    .filter(c => {\n                        let ref = remoteLibraries.connections.find(con =>\n                            c.connectionAssemblyName === con.connectionAssemblyName\n                            && c.connectionClassName === con.connectionClassName);\n\n                        if (ref) {\n                            return (ref.connectionCategory === eConnectionCategory.File || c.purpose !== eConnectionPurpose.Source);\n                        } else {\n                            return false;\n                        }\n                    });\n\n                let connectionKey = +queryParams['connectionKey'];\n                if (!connectionKey) {\n                    if (this.fileConnections.length > 0) {\n                        connectionKey = this.fileConnections[0].key;\n                    }\n                }\n\n                this.bulkLoadForm = this.fb.group({\n                    'connectionKey': [connectionKey],\n                    'formatType': [eTypeCode.Text],\n                    'fileFormatKey': [],\n                    'loadData': [true],\n                    'includeFileName': [false],\n                    'includeFileDate': [false],\n                    'includeFileRowNumber': [false]\n                  });\n\n                this.updateConnection(connectionKey);\n\n                if (this._connectionKeySubscription) { this._connectionKeySubscription.unsubscribe(); }\n                this._connectionKeySubscription = this.bulkLoadForm.controls.connectionKey.valueChanges.subscribe(key => {\n                    this.updateConnection(key);\n                });\n            });\n\n            if (this._flatFilesSubscription) { this._flatFilesSubscription.unsubscribe(); }\n            this._flatFilesSubscription = this.hubService.getFlatFilesObservable().subscribe(flatFileReady => {\n                if (flatFileReady.reference === this.reference) {\n                    if (!flatFileReady.message.success) {\n                        this.hubService.addHubMessage(flatFileReady.message);\n                    }\n                    \n                    this.tables = flatFileReady.tables;\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Files Manage');\n        }\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._flatFilesSubscription) { this._flatFilesSubscription.unsubscribe(); }\n        if (this._connectionKeySubscription) { this._connectionKeySubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    public close() {\n        this.authService.navigateUp();\n    }\n\n    private updateConnection(connectionKey) {\n        this.connection = this.hubCache.getConnection(connectionKey);\n\n        if (!this.connection && connectionKey) {\n            this.hubService.addHubErrorMessage(`The connection with the key ${connectionKey} could not be found.`);\n        } else if (this.connection) {\n            this.pageTitle = 'Load files for ' + this.connection.name;\n            this.showPage = true;\n        }\n    }\n\n    public uploadFile(event) {\n        let files = event.srcElement.files;\n        this.doUpload(files);\n        return false;\n    }\n\n    public filesDrop(files: any) {\n        this.doUpload(files);\n    }\n\n    public doUpload(files) {\n        Array.prototype.forEach.call(files, file => {\n            let bulkLoad = this.bulkLoadForm.value;\n            this.hubService.bulkUploadFiles(bulkLoad.connectionKey, bulkLoad.fileFormatKey, bulkLoad.formatType, bulkLoad.loadData,\n                bulkLoad.includeFileName, bulkLoad.includeFileDate, bulkLoad.includeFileRowNumber, file.name,\n                this.cancelToken).then(result => {\n                let url = result.url;\n                this.reference = result.reference;\n\n                let fileHandler = new FileHandler(file, url);\n                this.uploadedFiles = this.uploadedFiles.concat(fileHandler);\n                // this.uploadedFiles.push(fileHandler);\n\n                if (this.automaticUpload) {\n                    this.authService.upload(fileHandler).then(status => {\n                        if (status.success) {\n                            this.hubService.addHubSuccessMessage(file.name + ' uploaded.');\n                        } else {\n                            this.hubService.addHubMessage(status);\n                        }\n                    }).catch(reason => {\n                        this.hubService.addHubMessage(reason);\n                    });\n                }\n            }).catch(reason => {\n                this.hubService.addHubMessage(reason);\n            });\n        });\n    }\n\n    public editTable(table: DexihTable) {\n        this.currentTable = table;\n        this.formsService.table(table);\n        this.router.navigate(['table-edit'], { relativeTo: this.route });\n    }\n\n    public applyChanges() {\n        if (this.formsService.hasChanged) {\n            let table = this.formsService.currentForm.value;\n            Object.assign(this.currentTable, table);\n        }\n        this.currentTable = null;\n        this.authService.navigateUp();\n    }\n\n    public cancel() {\n        this.currentTable = null;\n        this.authService.navigateUp();\n    }\n\n    public async saveTables(items: DexihTable[]): Promise<number[]> {\n        let newTables = Object.assign([], this.tables);\n        let keys: number[] = [];\n        for (let i = 0; i < items.length; i++ ) {\n            let table = items[i];\n            let savedTable = await this.hubService.saveTables([table]);\n\n            keys.push(savedTable[0].key);\n\n            // after table is saved, remove from unsaved list.\n            let index = this.tables.findIndex(t => table.key === t.key);\n            newTables.splice(index, 1);\n        };\n\n        this.tables = newTables;\n        return keys;\n    }\n\n    public async createDatalinks(items: DexihTable[]) {\n        let keys = await this.saveTables(items);\n        let tableKeys = keys.join('|');\n        this.router.navigate(['/hub', this.hubCache.hub.hubKey, 'tables', 'datalink-new', tableKeys, 0],\n            { relativeTo: this.route.root });\n    }\n\n    public discardTables(items: DexihTable[]) {\n        let newTables = Object.assign([], this.tables);\n        for (let i = 0; i < items.length; i++ ) {\n            let table = items[i];\n            let index = this.tables.findIndex(t => table.key === t.key);\n            newTables.splice(index, 1);\n        };\n        this.tables = newTables;\n    }\n\n\n    public uploadSelected(items: Array<FileHandler>) {\n        items.forEach(item => {\n            this.authService.upload(item).then(status => {\n                this.hubService.addHubMessage(status);\n            }).catch(reason => {\n                this.hubService.addHubMessage(reason);\n            });\n        });\n    }\n\n    public removeSelected(items: Array<FileHandler>) {\n        items.forEach(item => {\n            let index = this.uploadedFiles.findIndex(c => c.id === item.id);\n            if (index >= 0) {\n                this.uploadedFiles.splice(index, 1);\n            }\n        });\n    }\n\n    public cancelSelected(items: Array<FileHandler>) {\n        items.forEach(item => item.cancel());\n    }\n\n    public canDeactivate(): Promise<boolean> {\n        return new Promise<boolean>((resolve) => {\n            if (this.tables.length > 0) {\n                this.authService.confirmDialog('Unsaved tables!',\n              'Table(s) have not been saved, this action will discard unsaved tables.  Do you want to discard the changes and exit?')\n              .then((confirm) => {\n                  resolve(confirm);\n                }).catch(() => {\n                  resolve(false);\n                });\n          } else {\n            resolve(true);\n          }\n        });\n      }\n\n      // @HostListener allows is to guard against browser refresh, close, etc.\n      @HostListener('window:beforeunload', ['$event'])\n      unloadNotification($event: any) {\n        if (this.tables.length > 0) {\n          $event.returnValue =\n            'Table(s) have not been saved, this action will discard unsaved tables.  Do you want to discard the changes and exit?';\n        }\n      }\n}\n","<div class=\"container\">\n    <d-widget [title]=\"'Import Tables for ' + connection?.name\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-database\" \n\t\t[showIf]=\"showPage\"\n\t\t[loadingMessage]=\"showPageMessage\"\n\t\t[showCloseButton] = \"true\"\n\t\t(close)=\"close()\"\n\t\t[padding]=\"false\"\n\t>\n\n\t\t<d-table \n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[dataObservable]=\"tableData\"\n\t\t\t(rowClick)=\"editTable($event)\"\n\t\t\t>\n\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t<d-button-splitdropdown class=\"mr-1\" *ngIf=\"hubCache.canWrite\" text=\"Import\" buttonClass=\"btn btn-success\" iconClass=\"fa fa-cloud-download\" (buttonClick)=\"importSelected(items)\" title=\"Import selected tables\" >\n\t\t\t\t\t\t<a class=\"dropdown-item\" (click)=\"newDatalinks(items)\" title=\"Import tables and create default staging datalinks\">Import &amp; Create Datalinks</a>\n\t\t\t\t\t</d-button-splitdropdown>\n\t\t\t\t\t\t\t\n\t\t\t\t\t<d-button-delete (click)=\"deleteSelected(items)\" title=\"Delete selected tables\"></d-button-delete>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-table=\"item\">\n\t\t\t\t\t<d-button-edit class=\"mr-1\"  *ngIf=\"table.key\" [routerLink]=\"['table-edit', table.key]\" queryParamsHandling preserveFragment title=\"Edit this table\"></d-button-edit>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #filter select=\"filter\" let-items=\"items\">\n\t\t\t\t\t<d-button-dropdown class=\"mr-1\" buttonClass=\"btn-primary\" iconClass=\"fa fa-download\" [text]=\"tableFilter\" title=\"Filter by import status\" [pullRight]=\"true\">\n\t\t\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"tableFilter=='All'\" (click)=\"setTableFilter('All')\">All</a>\n\t\t\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"tableFilter=='Imported'\" (click)=\"setTableFilter('Imported')\">Imported</a>\n\t\t\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"tableFilter=='NonImported'\" (click)=\"setTableFilter('NonImported')\">Non Imported</a>\n\t\t\t\t\t</d-button-dropdown>\n\t\n\t\t\t\t\t<d-button-dropdown class=\"mr-1\" buttonClass=\"btn-primary\" iconClass=\"fa fa-table\" [text]=\"viewFilter\" title=\"Filter by tables/views\" [pullRight]=\"true\">\n\t\t\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"viewFilter=='All'\" (click)=\"setViewFilter('All')\">All</a>\n\t\t\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"viewFilter=='Imported'\" (click)=\"setViewFilter('Tables')\">Tables</a>\n\t\t\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"viewFilter=='NonImported'\" (click)=\"setViewFilter('Views')\">Views</a>\n\t\t\t\t\t</d-button-dropdown>\n\t\t\t\t</ng-template>\n\t\t</d-table>\n\n    </d-widget>\n</div>\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { HubCache, EntityStatus } from '../../hub.models';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable, BehaviorSubject, Subscription, combineLatest} from 'rxjs';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { DexihConnection, DexihTable, eTableType, eStatus, eImportAction, eSharedObjectType, ConnectionReference } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n    selector: 'connections',\n    templateUrl: './connection-import.component.html',\n    styles: []\n})\nexport class ConnectionImportComponent implements OnInit, OnDestroy {\n    @Input() public hubKey: number;\n\n    private _subscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n\n    hubCache: HubCache;\n    connectionKey: number;\n    connection: DexihConnection;\n    connectionReference: ConnectionReference;\n    names: Array<string>;\n    tables: Array<DexihTable>;\n\n    showPage = false;\n    showPageMessage = 'Loading...';\n\n    tableFilter: string;\n    viewFilter: string;\n\n    private cancelToken = new CancelToken();\n\n    columns = [\n        { name: 'schema', title: 'Schema', format: '' },\n        { name: 'name', title: 'Name', format: '' },\n        { name: 'tableType', title: 'Type', enum: eTableType, format: 'Enum' },\n        { name: 'entityStatus.message', title: 'Latest Status' },\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<DexihTable>> = this._tableData.asObservable();\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private router: Router,\n        private route: ActivatedRoute\n    ) {\n        this.tableFilter = 'All';\n        this.viewFilter = 'Tables';\n    }\n\n    ngOnInit() {\n        this.showPageMessage = 'Querying source database tables.  Please wait...';\n\n        try {\n            this._subscription = combineLatest([\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.hubService.getRemoteAgentObservable()]\n            ).subscribe(async result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n                let remoteAgent = result[3];\n\n                this.connectionKey = + params['connectionKey'];\n\n                if (!this.connectionKey) {\n                    this.hubService.addHubErrorMessage('There was no connection specified to import tables.');\n                    this.close();\n                } else {\n                    if (this.hubCache.isLoaded()) {\n                        this.connection = this.hubCache.hub.dexihConnections\n                            .find(connection => connection.key === this.connectionKey);\n\n                        this.connectionReference = await this.hubService.GetConnectionReference(this.connection);\n\n                        this.showPage = false;\n\n                        if (remoteAgent) {\n                            if (this.connection) {\n                                this.getTables(this.connection);\n                            } else {\n                                this.hubService.addHubErrorMessage('The connection could not be found.');\n                                this.close();\n                            }\n                        } else {\n                            this.showPageMessage = 'Waiting for an active remote agent...';\n                        }\n                    }\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Connection Import');\n        }\n\n        // watch for any changes in the connections.\n        this.watchChanges();\n    }\n\n    setTableFilter(tableFilter) {\n        this.tableFilter = tableFilter;\n        this.updateFilter();\n    }\n\n    setViewFilter(viewFilter) {\n        this.viewFilter = viewFilter;\n        this.updateFilter();\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    updateFilter() {\n        let tables;\n        switch (this.tableFilter) {\n            case 'Imported':\n                tables = this.tables.filter(c => c.key > 0);\n                break;\n            case 'NonImported':\n                tables = this.tables.filter(c => c.key === 0 || !c.key);\n                break;\n            default:\n                tables = this.tables;\n                break;\n        }\n\n        switch (this.viewFilter) {\n            case 'Views':\n                tables = tables.filter(c => c.tableType === eTableType.View);\n                break;\n            case 'Tables':\n                tables = tables.filter(c => c.tableType === eTableType.Table);\n                break;\n        }\n\n        this._tableData.next(tables);\n    }\n\n    getTables(connection: DexihConnection) {\n        this.showPage = false;\n        this.showPageMessage = 'Importing tables from remote database...';\n\n        this.hubService.getDatabaseTableNames(connection, this.cancelToken)\n            .then(tables => {\n                this.tables = tables;\n\n                let cacheTables = this.hubCache.hub.dexihTables.filter(c => c.connectionKey === connection.key);\n\n                for (let i = 0; i < tables.length; i++) {\n                    let cacheTable = null;\n                    let table = tables[i];\n\n                    if (cacheTables) {\n                        cacheTable = cacheTables.find(t => t.name === table.name && t.schema === table.schema);\n\n                        if (!cacheTable && this.connectionReference && this.connectionReference.defaultSchema === table.schema) {\n                            cacheTable = cacheTables.find(t => t.name === table.name && !t.schema)\n                        }\n                    }\n\n                    if (cacheTable) {\n                        this.tables[i] = cacheTable;\n                    } else {\n                        table.connectionKey = connection.key;\n                        table.tableType = <eTableType>table.tableType;\n                        table.entityStatus = new EntityStatus();\n                    }\n                }\n\n                this.showPage = true;\n                this.showPageMessage = '';\n\n                this.updateFilter();\n\n\n            }).catch(reason => {\n                this.hubService.addHubMessage(reason);\n            });\n    }\n\n\n    import(table: DexihTable) {\n        this.hubService.importTables([table], true, this.cancelToken).then(importResult => {\n            this.mergeTables(importResult);\n            // if (importResult) {\n            //     importResult[0].entityStatus.isBusy = false;\n            // }\n        }).catch(reason => {\n            table.entityStatus.isBusy = false;\n            table.entityStatus.lastStatus = eStatus.Error;\n            table.entityStatus.message = reason.message;\n        });\n    }\n\n    deleteTable(table: DexihTable) {\n        this.hubService.deleteTables([table]).then(result => {\n            table.entityStatus.isBusy = false;\n        }).catch(reason => {\n            table.entityStatus.isBusy = false;\n            table.entityStatus.lastStatus = eStatus.Error;\n            table.entityStatus.message = reason.message;\n        });\n    }\n\n    importSelected(selected: Array<DexihTable>) {\n        let selectedTables = selected.filter(t => !t.entityStatus.isBusy);\n        selectedTables.forEach(t => t.entityStatus.isBusy = true);\n        this.hubService.importTables(selectedTables, true, this.cancelToken).then(result => {\n            this.mergeTables(result);\n            // selectedTables.forEach(t => t.entityStatus.isBusy = false);\n        }).catch(reason => {\n            selectedTables.forEach(t => t.entityStatus.isBusy = false);\n        });\n    }\n\n    mergeTables(tables: Array<DexihTable>) {\n        if (!tables) { return; }\n        tables.forEach(table => {\n            let index = this.tables.findIndex(t => t.name === table.name && t.schema === table.schema);\n\n            if (index >= 0) {\n                this.tables[index] = table;\n            }\n        });\n\n        this.updateFilter();\n    }\n\n    deleteSelected(selected: Array<DexihTable>) {\n        let selectedTables = selected.filter(t => !t.entityStatus.isBusy && t.key > 0);\n\n        if (selectedTables.length === 0) {\n            this.authService.informationDialog(\n                'Can not delete', 'None of the selected tables can be deleted, as they are either busy, or have not been imported.');\n        }\n        selectedTables.forEach(t => t.entityStatus.isBusy = true);\n        this.hubService.deleteTables(selectedTables).then(result => {\n            selectedTables.forEach(t => t.entityStatus.isBusy = false);\n        }).catch(reason => {\n            selectedTables.forEach(t => t.entityStatus.isBusy = false);\n        });\n    }\n\n    editTable(table: DexihTable) {\n        if (table && table.key) {\n            this.router.navigate(['table-edit', table.key], { relativeTo: this.route.parent });\n        }\n    }\n\n    newDatalinks(items: Array<DexihTable>) {\n        let selectedTables = items.filter(t => !t.entityStatus.isBusy);\n        selectedTables.forEach(t => t.entityStatus.isBusy = true);\n        this.hubService.importTables(selectedTables, true, this.cancelToken).then(result => {\n            this.mergeTables(result);\n\n            let tableKeys = result.map(c => c.key).join('|');\n            this.router.navigate(['datalink-new', tableKeys, 0], { relativeTo: this.route.parent });\n\n        }).catch(reason => {\n            selectedTables.forEach(t => t.entityStatus.isBusy = false);\n        });\n\n    }\n\n    watchChanges() {\n        // watch the current connection in case it is changed in another session.\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n            if (hubCacheChange.changeClass === eSharedObjectType.Table) {\n                if (hubCacheChange.changeType === eImportAction.Replace || hubCacheChange.changeType === eImportAction.New) {\n                    let table: DexihTable = hubCacheChange.data;\n\n                    if (table.connectionKey === this.connectionKey) {\n                        let index = this.tables.findIndex(t => t.name === table.name && t.schema === table.schema);\n                        if (index >= 0) {\n                            this.tables[index] = table;\n                            this.updateFilter();\n                        }\n                    }\n                }\n                if (hubCacheChange.changeType === eImportAction.Delete) {\n                    let deletedTable: DexihTable = hubCacheChange.data;\n                    if (deletedTable.connectionKey === this.connectionKey) {\n                        let previousTable = this.tables.find(t => t.key === deletedTable.key);\n                        if (previousTable) {\n                            // table has been delete, so clear key attributes so it appears deleted.\n                            previousTable.key = null;\n                            previousTable.entityStatus.isBusy = false;\n                            previousTable.updateDate = null;\n                            previousTable.createDate = null;\n                            this.updateFilter();\n                        }\n                    }\n                }\n            }\n        });\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n}\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Observable, Subscription, BehaviorSubject, combineLatest} from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubCache } from '../../hub.models';\nimport { DexihDatalinkTest, DexihHub, eSharedObjectType } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n  selector: 'datalink-test',\n  templateUrl: './datalinkTest-index.component.html',\n  styles: []\n})\nexport class DatalinkTestIndexComponent implements OnInit, OnDestroy {\n  private _subscription: Subscription;\n  private _hubCacheChangeSubscription: Subscription;\n\n    hubCache: HubCache;\n    private cancelToken: CancelToken = new CancelToken();\n\n    datalinkTests: Array<DexihDatalinkTest>;\n    public eSharedObjectType = eSharedObjectType;\n\n    columns = [\n        { name: 'name', title: 'Name', format: '', tags: 'tags'},\n        { name: 'description', title: 'Description', format: ''},\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar'},\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n        // watch for any changes in the validations.\n        this.watchChanges();\n\n        this._subscription = combineLatest(\n            this.hubService.getHubCacheObservable()\n        ).subscribe(result => {\n          this.hubCache = result[0];\n          this.update();\n        });\n    } catch (e) {\n        this.hubService.addHubClientErrorMessage(e, 'Datalink Tests Index');\n      }\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    delete(items: Array<DexihDatalinkTest>) {\n        this.hubService.deleteDatalinkTests(items);\n    }\n\n    snapshot(items: Array<DexihDatalinkTest>) {\n        this.hubService.runDatalinkTestSnapshot(items, this.cancelToken);\n    }\n\n    run(items: Array<DexihDatalinkTest>) {\n        let keys = items.map(c => c.key);\n        this.hubService.runDatalinkTests(keys, this.cancelToken);\n    }\n\n    update() {\n        if (this.hubCache && this.hubCache.isLoaded()) {\n            let items = this.hubCache.hub.dexihDatalinkTests.filter(c => c.isValid).map(c => {\n                return {\n                    key: c.key,\n                    name: c.name,\n                    description: c.description,\n                    updateDate: c.updateDate,\n                    tags: this.hubCache.getObjectTags(eSharedObjectType.DatalinkTest, c.key)\n                }\n            });\n            this._tableData.next(items);\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    edit(item: DexihDatalinkTest) {\n        this.router.navigate(['datalinkTest-edit', item.key], { relativeTo: this.route});\n    }\n\n    export(tests: Array<DexihDatalinkTest>) {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        hub.dexihDatalinkTests = tests;\n        let filename = 'datalink_tests.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n\n    watchChanges() {\n      // watch the current validation in case it is changed in another session.\n      this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n          if (hubCacheChange.changeClass === eSharedObjectType.DatalinkTest ||\n            hubCacheChange.changeClass === eSharedObjectType.TagObjects) {\n            this.update();\n          }\n      });\n  }\n}\n","<div class=\"container\">\n    <d-widget title=\"Datalink Tests\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-flag-checkered\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\t>\n \n\n\t\t<d-table \n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[dataObservable]=\"tableData\"\n\t\t\t(rowClick)=\"edit($event)\"\n\t\t\t[tags]=\"this.hubCache.hub.dexihTags\"\n\t\t\t>\n\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n\t\t\t\t<dependent-items-button class=\"ml-1\" [key]=\"item.key\" [objectType]='eSharedObjectType.DatalinkTest'></dependent-items-button>\n\t\t\t</ng-template>\n\n\n\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t<tags-update-button class=\"ml-1\" [objectType]=\"eSharedObjectType.DatalinkTest\" [objects]=\"items\" ></tags-update-button>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<actions-datalinkTest-button [datalinkTests]=\"items\"></actions-datalinkTest-button>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #rowStatus select=\"rowStatus\" let-item=\"item\">\n\t\t\t\t\t<datalink-status [datalinkTestKey]='item?.key'></datalink-status>\n\t\t\t\t</ng-template>\n\t\n\t\t</d-table>\n\n\t</d-widget>\n\t\n\t<dexih-help class=\"m-3\" title=\"Datalink Test\" path=\"/assets/help/reference/datalinkTest.md\"></dexih-help>\n\n</div>\n\n\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { eDataObjectType } from '../../../shared/shared.models';\n\n@Component({\n\n    selector: 'datalink-preview-data',\n    templateUrl: './datalink-preview-data.component.html'\n})\nexport class DatalinkPreviewDataComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n\n    public key: number;\n    public previewUpdates: boolean;\n\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    public eDataObjectType = eDataObjectType;\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private route: ActivatedRoute) {\n\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n\n                this.action = data['action'];\n                this.pageTitle = data['pageTitle'];\n                this.key = +params['datalinkKey'];\n                this.previewUpdates = params['previewUpdates'] === 'true';\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Preview');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n}\n","<div class=\"container-fluid\">\n\n    <d-widget title=\"Preview Datalink\" iconClass=\"fa fa-lg fa-fw fa-exchange\" [showCloseButton]=\"true\"\n        (close)=\"close()\">\n        <preview-data [key]='key' [previewUpdates]='previewUpdates' [viewSource]='eDataObjectType.Datalink'></preview-data>\n    </d-widget>\n</div>","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { PreviewResults, HubCache } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { Subscription, Subject} from 'rxjs';\nimport { PromiseWithCancel, CancelToken } from '../../../+auth/auth.models';\nimport { TransformWriterResult, DexihDatalink, DexihTable, SelectQuery, eDeltaType, Filter, eCompare,\n    eAndOr, eTypeCode, DownloadObject, eSourceType, eDownloadFormat, DexihDatalinkColumn,\n    TableColumn, eDataObjectType, DexihTableColumn } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'preview-results',\n    templateUrl: './preview-results.component.html'\n})\n\nexport class PreviewResultsComponent implements OnInit, OnDestroy {\n    @Input() auditResult: TransformWriterResult;\n\n    _hubCacheSubscription: Subscription;\n\n    private cache: HubCache;\n\n    public targetTable: DexihTable;\n    public columns: Array<any>;\n    public data: Array<any>;\n    public selectQuery = new SelectQuery();\n\n    private refreshDataSubject: Subject<void> = new Subject<void>();\n    public refreshDataObservable = this.refreshDataSubject.asObservable();\n    \n    private runningQuery: PromiseWithCancel<PreviewResults>;\n    private cancelToken = new CancelToken();\n\n    constructor(\n        private hubService: HubService\n    ) {\n    }\n\n    ngOnInit() {\n        this._hubCacheSubscription = this.hubService.getHubCacheObservable().subscribe(cache => {\n            this.cache = cache;\n\n            switch (this.auditResult.auditType) {\n                case 'Table':\n                    this.targetTable = this.cache.getTable(this.auditResult.referenceKey);\n                    this.refresh();\n                    break;\n                case 'Datalink':\n                case 'DatalinkStep':\n                    let datalink = this.cache.hub.dexihDatalinks.find(c => c.key === this.auditResult.referenceKey);\n\n                    if (!datalink) {\n                        this.hubService.addHubErrorMessage(`The datalink with the key ${this.auditResult.referenceKey} cannot be found.`)\n                        return;\n                    }\n\n                    if (datalink.dexihDatalinkTargets.length >= 1) {\n                        this.targetTable = this.cache.getTable(datalink.dexihDatalinkTargets[0].tableKey);\n                    } else {\n                        this.hubService.addHubErrorMessage(`There is no target table for this datalink.`)\n                        return;\n                    }\n                    this.refresh();\n                    break;\n                case 'DatalinkTestStep':\n                    let testStep = this.cache.getDatalinkTestStep(this.auditResult.referenceKey);\n\n                    if (!testStep) {\n                        this.hubService.addHubErrorMessage(`The test step with the key ${this.auditResult.referenceKey} cannot be found.`)\n                        return;\n                    }\n\n                    let testDatalink = this.cache.hub.dexihDatalinks.find(c => c.key === testStep.datalinkKey);\n\n                    if (testDatalink.dexihDatalinkTargets.length >= 1) {\n                        let table = this.cache.getTable(testDatalink.dexihDatalinkTargets[0].tableKey);\n                        let testTable = JSON.parse(JSON.stringify(table));\n                        testTable.name = testStep.errorTableName;\n                        testTable.schema = testStep.errorSchema;\n                        testTable.connectionKey = testStep.errorConnectionKey;\n\n                        for (let column of testTable.dexihTableColumns) {\n                            column.deltaType = eDeltaType.NonTrackingField;\n                        }\n                        let auditCol = new DexihTableColumn();\n                        auditCol.name = 'error_audit_key';\n                        auditCol.dataType = eTypeCode.Int64;\n                        auditCol.deltaType = eDeltaType.CreateAuditKey;\n\n                        let opCol = new DexihTableColumn();\n                        opCol.name = 'error_operation';\n                        opCol.dataType = eTypeCode.CharArray;\n                        opCol.maxLength = 1;\n                        opCol.deltaType = eDeltaType.DatabaseOperation;\n\n\n                        let reasonCol = new DexihTableColumn();\n                        reasonCol.name = 'mismatch_reason';\n                        reasonCol.dataType = eTypeCode.String;\n                        reasonCol.deltaType = eDeltaType.UpdateReason;\n\n                        testTable.dexihTableColumns.push(auditCol);\n                        testTable.dexihTableColumns.push(opCol);\n                        testTable.dexihTableColumns.push(reasonCol);\n\n                        this.targetTable = testTable;\n                    } else {\n                        this.hubService.addHubErrorMessage(`There is no target table for this datalink.`)\n                        return;\n                    }\n                    this.refresh();\n                    break;\n                case 'datajob':\n                break;\n            }\n\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription ) { this._hubCacheSubscription.unsubscribe(); }\n        if (this.runningQuery) { this.runningQuery.cancel(); }\n        this.cancelToken.cancel();\n    }\n\n    createSelectQuery(): SelectQuery {\n        const createAuditColumn = this.targetTable.dexihTableColumns.find(c => c.deltaType === eDeltaType.CreateAuditKey);\n        const updateAuditColumn = this.targetTable.dexihTableColumns.find(c => c.deltaType === eDeltaType.UpdateAuditKey);\n\n        if (!createAuditColumn && !updateAuditColumn) {\n            this.hubService.addHubErrorMessage(\n            // tslint:disable-next-line:max-line-length\n            `The table ${this.targetTable.name} does not contain a create or update audit column which is required to connect to an audit.`);\n            return;\n        }\n\n        // clone the query, and add the audit filter columns\n        let selectQuery = JSON.parse(JSON.stringify(this.selectQuery));\n\n        if (createAuditColumn) {\n            let filter = new Filter();\n            filter.column1 = new TableColumn();\n            Object.assign(filter.column1, createAuditColumn);\n            filter.operator = eCompare.IsEqual;\n            filter.value2 = this.auditResult.auditKey;\n            filter.andOr = eAndOr.Or\n            filter.compareDataType = eTypeCode.Int64;\n            selectQuery.filters.push(filter);\n        }\n\n        if (updateAuditColumn) {\n            let filter = new Filter();\n            filter.column1 = new TableColumn();\n            Object.assign(filter.column1, updateAuditColumn);\n            filter.operator = eCompare.IsEqual;\n            filter.value2 = this.auditResult.auditKey;\n            filter.andOr = eAndOr.Or\n            filter.compareDataType = eTypeCode.Int64;\n            selectQuery.filters.push(filter);\n        }\n\n        selectQuery.rows = 100;\n\n        return selectQuery;\n    }\n\n    refresh() {\n        let selectQuery = this.createSelectQuery();\n\n        let query = this.hubService.previewTableDataQuery(this.targetTable, false, selectQuery, null, null, this.cancelToken);\n\n        query.then(result => {\n            this.refreshDataSubject.next();\n            this.columns = result.columns;\n            this.data = result.data;\n        }).catch(() => {\n            // this.hubService.addHubErrorMessage(reason);\n        });\n\n        this.runningQuery = query;\n    }\n\n    download() {\n        let selectQuery = this.createSelectQuery();\n        let downloadObject = new DownloadObject();\n        downloadObject.objectKey = this.targetTable.key;\n        downloadObject.objectType = eDataObjectType.Table;\n        downloadObject.query = selectQuery;\n        this.hubService.downloadData([downloadObject], false, eDownloadFormat.Csv, this.cancelToken)\n    }\n}\n","<d-table [enableMultiSelect]=\"false\" [columns]=\"columns\" [data]=\"data\">\n\n    <ng-template #actions let-items=\"items\">\n        <d-button-refresh (click)=\"refresh()\" text=\"Reload\"></d-button-refresh>\n        <d-button-download class=\"ml-1\" (click)=\"download()\"></d-button-download>\n    </ng-template>\n    <ng-template #tableHeader>\n        <query-builder [selectQuery]=\"selectQuery\" [columns]=\"targetTable.dexihTableColumns\" [refreshEvent]=\"refreshDataObservable\" (onRefreshData)=\"refresh()\"></query-builder>\n    </ng-template>\n</d-table>","export { ImportComponent } from './import/import.component';\nexport { ExportComponent } from './export/export.component';\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { HubCache } from '../../hub.models';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Observable, Subscription, BehaviorSubject, combineLatest} from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DexihHubVariable, DexihHub, eSharedObjectType } from '../../../shared/shared.models';\n\n@Component({\n  selector: 'hubVariable',\n  templateUrl: './hubVariable-index.component.html',\n  styles: []\n})\nexport class HubVariableIndexComponent implements OnInit, OnDestroy {\n  private _subscription: Subscription;\n  private _hubCacheChangeSubscription: Subscription;\n\n    hubCache: HubCache;\n\n    hubVariables: Array<DexihHubVariable>;\n    public eSharedObjectType = eSharedObjectType;\n\n    columns = [\n        { name: 'name', title: 'Name', format: '', tags: 'tags'},\n        { name: 'value', title: 'Value', format: ''},\n        { name: 'isEncrypted', title: 'Encrypted?', format: 'Boolean'},\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar'},\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n        // watch for any changes in the validations.\n        this.watchChanges();\n\n        this._subscription = combineLatest(\n            this.hubService.getHubCacheObservable()\n        ).subscribe(result => {\n          this.hubCache = result[0];\n          this.updateVariables();\n        });\n    } catch (e) {\n        this.hubService.addHubClientErrorMessage(e, 'Hub Variables Index');\n      }\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    deleteHubVariables(variables: Array<DexihHubVariable>) {\n        this.hubService.deleteHubVariables(variables);\n    }\n\n    updateVariables() {\n        if (this.hubCache && this.hubCache.isLoaded()) {\n            let variables = this.hubCache.hub.dexihHubVariables.filter(c => c.isValid).map(c => {\n                return {\n                    key: c.key,\n                    name: c.name,\n                    description: c.description,\n                    updateDate: c.updateDate,\n                    value: c.isEncrypted ? '(Encrypted)' : c.value,\n                    isEncrypted: c.isEncrypted,\n                    tags: this.hubCache.getObjectTags(eSharedObjectType.HubVariable, c.key)\n                }\n            });\n            this._tableData.next(variables);\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    edit(variable: DexihHubVariable) {\n        this.router.navigate(['hubVariable-edit', variable.key], { relativeTo: this.route});\n    }\n\n    export(variables: Array<DexihHubVariable>) {\n        let vars = this.hubCache.hub.dexihHubVariables.filter(c => {\n            return variables.findIndex(d => d.key === c.key) >= 0\n        });\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        hub.dexihHubVariables = vars;\n        let filename = 'hub_variables.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n\n    watchChanges() {\n      // watch the current validation in case it is changed in another session.\n      this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n          if (hubCacheChange.changeClass === eSharedObjectType.HubVariable || hubCacheChange.changeClass === eSharedObjectType.TagObjects) {\n            this.updateVariables();\n          }\n      });\n  }\n}\n","<div class=\"container\">\n    <d-widget title=\"Hub Variables\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-at\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\t>\n \n\n\t\t<d-table \n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[dataObservable]=\"tableData\"\n\t\t\t(rowClick)=\"edit($event)\"\n\t\t\t[tags]=\"this.hubCache.hub.dexihTags\"\n\t\t\t>\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-hubVariable=\"item\">\n\t\t\t\t\t<d-button-edit class=\"mr-1\" [routerLink]=\"['hubVariable-edit', hubVariable.key]\" queryParamsHandling preserveFragment></d-button-edit>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t<d-button-save-local class=\"mr-1\" (click)=\"export(items)\"></d-button-save-local>\n\t\t\t\t\t<d-button-delete *ngIf=\"hubCache.canWrite\" class=\"mr-1\" (click)=\"deleteHubVariables(items)\"></d-button-delete>\n\t\t\t\t\t<tags-update-button class=\"mr-1\" [objectType]=\"eSharedObjectType.HubVariable\" [objects]=\"items\" ></tags-update-button>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<d-button-new *ngIf=\"hubCache.canWrite\" class=\"mr-1\" [routerLink]=\"['hubVariable-new']\"></d-button-new>\n\t\t\t\t</ng-template>\n\t\t</d-table>\n\n\t</d-widget>\n\t\n\t<dexih-help class=\"m-3\" title=\"Hub Variables\" path=\"/assets/help/reference/hubVariable.md\"></dexih-help>\n\n</div>\n\n\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { HubCache } from '../../hub.models';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { DexihApi, eSourceType, eSharedObjectType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'apis',\n    templateUrl: './api-index.component.html',\n    styles: []\n})\nexport class ApiIndexComponent implements OnInit, OnDestroy {\n    @Input() public hubKey: number;\n\n    private _subscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n\n    hubCache: HubCache;\n\n    apis: Array<DexihApi>;\n\n    public eSharedObjectType = eSharedObjectType;\n\n    columns = [\n        { iconClass: 'sharedIcon', tooltip: 'sharedToolTip', width: '1%', align: 'center' },\n        { name: 'name', title: 'Name', footer: 'description', format: 'Md', tags: 'tags' },\n        { name: 'apiSource', title: 'Api Source' },\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        // watch for any changes in the validations.\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n\n                this.updateApis();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'View Index');\n        }\n\n\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    editApi(api: DexihApi) {\n        this.router.navigate(['api-edit', api.key], { relativeTo: this.route });\n    }\n\n    updateApis() {\n        if (this.hubCache.isLoaded()) {\n            let apis: Array<DexihApi>;\n            apis = this.hubCache.hub.dexihApis.filter(c => c.isValid);\n\n            let tableData = apis.map(api => {\n                return {\n                    key: api.key,\n                    name: api.name,\n                    apiSource: this.getSourceDetails(api),\n                    updateDate: api.updateDate,\n                    sharedIcon: api.isShared ? 'fa fa-group' : 'fa fa-user-secret',\n                    sharedToolTip: api.isShared ? 'Table is shared' : 'Table is private',\n                    tags: this.hubCache.getObjectTags(eSharedObjectType.ColumnValidation, api.key)\n                };\n            });\n            this._tableData.next(tableData);\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    getSourceDetails(api: DexihApi): string {\n        if (api.sourceType === eSourceType.Table) {\n            let table = this.hubCache.getTable(api.sourceTableKey);\n            if (table) {\n                return 'Table: ' + table.name;\n            } else {\n                return 'Error: Table not found';\n            }\n        } else {\n            let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === api.sourceDatalinkKey);\n            if (datalink) {\n                return 'Datalink: ' + datalink.name;\n            } else {\n                return 'Error: Datalink not found';\n            }\n        }\n\n        return 'Error: Source not configured';\n    }\n\n\n\n    watchChanges() {\n        // watch the current validation in case it is changed in another session.\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n            if (hubCacheChange.changeClass === eSharedObjectType.Api || hubCacheChange.changeClass === eSharedObjectType.TagObjects) {\n                this.updateApis();\n            }\n        });\n    }\n}\n","<div class=\"container\">\n    <d-widget title=\"Api's\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-feed\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\t>\n\t\t\t<d-table \n\t\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t\t[columns]=\"columns\"\n\t\t\t\t[dataObservable]=\"tableData\"\n\t\t\t\t(rowClick)=\"editApi($event)\"\n\t\t\t\t[tags]=\"this.hubCache.hub.dexihTags\"\n\t\t\t\t>\n\t\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t\t<tags-update-button class=\"ml-1\" [objectType]=\"eSharedObjectType.ColumnValidation\" [objects]=\"items\" ></tags-update-button>\n\t\t\t\t\t</ng-template>\n\n\t\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n\t\t\t\t\t\t<dependent-items-button class=\"ml-1\" [key]=\"item.key\" [objectType]='eSharedObjectType.Api'></dependent-items-button>\n\t\t\t\t\t</ng-template>\n\t\n\n\t\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t\t<actions-api-button [apis]=\"items\"></actions-api-button>\n\t\t\t\t\t</ng-template>\n\n\t\t\t\t\t<ng-template #rowStatus select=\"rowStatus\" let-item=\"item\">\n\t\t\t\t\t\t<api-status [apiKey]='item?.key'></api-status>\n\t\t\t\t\t</ng-template>\n\t\t\t</d-table>\n\n\t\t</d-widget>\n\t\t\n\t\t<dexih-help class=\"m-3\"  title=\"Connections\" path=\"/assets/help/reference/api.md\"></dexih-help>\n</div>\n\n\n","export * from './datajob-index.component';\n","import { Component, OnInit, OnDestroy, Input, ViewChild } from '@angular/core';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubService } from '../../hub.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { DexihMessageComponent } from  '../../../shared/ui/dexihMessage/dexih-message.component';\nimport { UserAuthorization } from '../../../+admin/admin.models';\nimport { ePermission, ePermissionItems } from '../../../shared/shared.models';\n\n@Component({\n  selector: 'users',\n  templateUrl: './manage-users-index.component.html',\n  styles: []\n})\nexport class ManageUsersIndexComponent implements OnInit, OnDestroy {\n  @ViewChild('DexihMessage', { static: true }) public dexihMessage: DexihMessageComponent;\n\n    columns = [\n        { name: 'userName', title: 'User Name', format: ''},\n        { name: 'firstName', title: 'First Name', format: ''},\n        { name: 'lastName', title: 'Last Name', format: ''},\n        { name: 'permission', title: 'Permission', enum: ePermission, format: 'Enum'},\n        { name: 'receiveAlerts', title: 'Receives Alert Emails', format: 'Boolean'}\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    ePermission = ePermission;\n    ePermissionItems = ePermissionItems;\n    permission = ePermission.PublishReader;\n    emails: string[] = [];\n    sendInvites = true;\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.refreshUsers();\n    }\n\n    ngOnDestroy() {\n    }\n\n    refreshUsers() {\n        this.hubService.getHubUsers().then(result => {\n            this._tableData.next(result);\n        });\n    }\n\n    setPermission(permission: ePermission, users: Array<UserAuthorization>) {\n        const userNames = users.map(c => c.userName);\n\n        this.authService.confirmDialog('Confirm Permission Change',\n            `This action will change the selected user(s) hub permission to ${ePermission[this.permission]}.  Proceed?`).then(confirm => {\n                if (confirm) {\n                    this.hubService.setUserPermissions(userNames, permission, false).then(result => {\n                        this.dexihMessage.addSuccessMessage('The specified user(s) permission have been updated.');\n                        this.refreshUsers();\n                    });\n                }\n            });\n    }\n\n    setUserAlert(alertEmail: boolean, users: Array<UserAuthorization>) {\n        const userIds = users.map(c => c.id);\n\n        this.hubService.setUserAlerts(userIds, alertEmail, false).then(result => {\n            this.dexihMessage.addSuccessMessage('The specified user(s) alert email status have been updated.');\n            this.refreshUsers();\n        });\n    }\n\n    deleteUsers(users: Array<UserAuthorization>) {\n        const emails = users.map(c => c.userName);\n\n        this.authService.confirmDialog('Confirm Delete Users',\n        `This action will delete the selected user(s) from using this hub.  Proceed?`).then(confirm => {\n            if (confirm) {\n                this.hubService.removeUsers(emails).then(result => {\n                    this.dexihMessage.addSuccessMessage('The specified users have been removed from the hub.');\n                    this.refreshUsers();\n                });\n            }\n        });\n    }\n\n    addUsers() {\n        if (this.emails.length > 0 && this.permission) {\n            this.authService.confirmDialog('Add Users',\n            // tslint:disable-next-line:max-line-length\n            `This action will added users with the specified emails to this hub with permission ${ePermission[this.permission]}.  Proceed?`).then(confirm => {\n                if (confirm) {\n                    this.hubService.setUserPermissions(this.emails, this.permission, this.sendInvites).then(result => {\n                        this.emails = [];\n                        this.dexihMessage.addSuccessMessage('The specified users have been added to the hub.');\n                        this.refreshUsers();\n                    });\n                }\n            });\n        }\n    }\n}\n","<dexih-message class=\"p-3\" #DexihMessage></dexih-message>\n\n<div class=\"container\">\n\t<d-widget-vertical>\n\t<d-widget title=\"Invite Users\" iconClass=\"fa fa-lg fa-fw fa-birthday-cake\" [padding]=\"true\">\n\t\t\n\t\t<ng-template #subHeader>\n\t\t\t<d-button-save [disabled]=\"emails.length == 0\" (click)=\"addUsers()\" text=\"Add User(s)\"></d-button-save>\n\t\t</ng-template>\n\n\t\t<form >\n\t\t\t<fieldset>\n\t\t\t\t<section>\n\t\t\t\t\t<form-select label=\"Permission\" [(ngModel)]=\"permission\" name=\"permission\" [items]=\"ePermissionItems\" itemKey=\"key\" itemName=\"name\" note='Permission level to grant to emails' [enableFilter]=\"false\">\n\t\t\t\t\t</form-select>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-tags label=\"Email Addresses / User names\" [(ngModel)]=\"emails\" name=\"emails\" note=\"Provide a list of user names or email addresses of users to join the hub.\">\n\t\t\t\t\t</form-tags>\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<form-checkbox label=\"Send invites\" [(ngModel)]=\"sendInvites\" name=\"sendInvites\" note=\"Emails which are not registered to use the integration hub will be sent an invite to join.\">\n\t\t\t\t\t</form-checkbox>\n\t\t\t\t</section>\n\t\t\t</fieldset>\n\t\t</form>\n\t</d-widget>\n\n\t<d-widget title=\"Current Users\" iconClass=\"fa fa-lg fa-fw fa-group\">\n\t\t<d-table [enableMultiSelect]=\"true\" [columns]=\"columns\"\n\t\t [dataObservable]=\"tableData\">\n\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t<d-button-delete class=\"mr-1\" (click)=\"deleteUsers(items)\"></d-button-delete>\n\t\t\t\t<d-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-lock\" text=\"Set Permission\">\n\t\t\t\t\t<a *ngFor=\"let permission of ePermissionItems\" class=\"dropdown-item\" (click)=\"setPermission(permission.key, items)\">{{permission.name}}</a>\n\t\t\t\t</d-button-dropdown>\n\t\t\t\t<d-button-dropdown buttonClass=\"btn-primary\" iconClass=\"fa fa-bell\" text=\"Set User Alert\" class=\"ml-1\">\n\t\t\t\t\t<a class=\"dropdown-item\" (click)=\"setUserAlert(true, items)\">Receive alert emails</a>\n\t\t\t\t\t<a class=\"dropdown-item\" (click)=\"setUserAlert(false, items)\">Do not receive alert emails.</a>\n\t\t\t\t</d-button-dropdown>\n\t\t\t</ng-template>\n\t\t</d-table>\n\n\t</d-widget>\n\t</d-widget-vertical>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { HubCache } from '../../hub.models';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Observable, Subscription, BehaviorSubject, combineLatest} from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DexihListOfValues, eSharedObjectType, eLOVObjectType } from '../../../shared/shared.models';\n\n@Component({\n  selector: 'listOfValues',\n  templateUrl: './listOfValues-index.component.html',\n  styles: []\n})\nexport class ListOfValuesIndexComponent implements OnInit, OnDestroy {\n  private _subscription: Subscription;\n  private _hubCacheChangeSubscription: Subscription;\n\n    hubCache: HubCache;\n\n    listOfValues: Array<DexihListOfValues>;\n    public eSharedObjectType = eSharedObjectType;\n\n    columns = [\n        { name: 'name', title: 'Name', format: '', tags: 'tags'},\n        { name: 'sourceType', title: 'Source Type', format: 'Enum', enum: eLOVObjectType},\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar'},\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n        // watch for any changes in the validations.\n        this.watchChanges();\n\n        this._subscription = combineLatest(\n            this.hubService.getHubCacheObservable()\n        ).subscribe(result => {\n          this.hubCache = result[0];\n          this.update();\n        });\n    } catch (e) {\n        this.hubService.addHubClientErrorMessage(e, 'Hub List of Values Index');\n      }\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    delete(lov: Array<DexihListOfValues>) {\n        this.hubService.deleteListOfValues(lov);\n    }\n\n    update() {\n        if (this.hubCache && this.hubCache.isLoaded()) {\n            let listOfValues = this.hubCache.hub.dexihListOfValues.filter(c => c.isValid).map(c => {\n                return {\n                    key: c.key,\n                    name: c.name,\n                    description: c.description,\n                    updateDate: c.updateDate,\n                    tags: this.hubCache.getObjectTags(eSharedObjectType.ListOfValues, c.key)\n                }\n            });\n            this._tableData.next(listOfValues);\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    edit(lov: DexihListOfValues) {\n        this.router.navigate(['listOfValues-edit', lov.key], { relativeTo: this.route});\n    }\n\n    export(lov: Array<DexihListOfValues>) {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(cache.hub.hubKey, '');\n        hub.dexihListOfValues = lov;\n        lov.forEach(lovItem => {\n            cache.getListOfValuesCache(lovItem, hub);\n        });\n        let filename = 'list_of_values.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n\n    watchChanges() {\n      // watch the current validation in case it is changed in another session.\n      this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n          if (hubCacheChange.changeClass === eSharedObjectType.ListOfValues || hubCacheChange.changeClass === eSharedObjectType.TagObjects) {\n            this.update();\n          }\n      });\n  }\n}\n","<div class=\"container\">\n    <d-widget title=\"List Of Values\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-list-alt\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\t>\n\t\t<d-table \n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[dataObservable]=\"tableData\"\n\t\t\t(rowClick)=\"edit($event)\"\n\t\t\t[tags]=\"this.hubCache.hub.dexihTags\"\n\t\t\t>\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n\t\t\t\t\t<d-button-edit class=\"mr-1\" [routerLink]=\"['listOfValues-edit', item.key]\" queryParamsHandling preserveFragment></d-button-edit>\n\t\t\t\t\t<dependent-items-button class=\"ml-1\" [key]=\"item.key\" [objectType]='eSharedObjectType.ListOfValues'></dependent-items-button>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t<d-button-save-local class=\"mr-1\" (click)=\"export(items)\"></d-button-save-local>\n\t\t\t\t\t<d-button-delete *ngIf=\"hubCache.canWrite\" class=\"mr-1\" (click)=\"delete(items)\"></d-button-delete>\n\t\t\t\t\t<tags-update-button class=\"mr-1\" [objectType]=\"eSharedObjectType.ListOfValues\" [objects]=\"items\" ></tags-update-button>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<d-button-new *ngIf=\"hubCache.canWrite\" class=\"mr-1\" [routerLink]=\"['listOfValues-new']\"></d-button-new>\n\t\t\t\t</ng-template>\n\t\t</d-table>\n\t</d-widget>\n</div>\n\n\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubService } from '../hub.service';\nimport { HubCache } from '../hub.models';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable, BehaviorSubject, Subscription, combineLatest} from 'rxjs';\nimport { AuthService } from '../../+auth/auth.service';\nimport { DexihDatalink, eSourceType, eDownloadFormat, DownloadObject,\n    eDataObjectType, eSharedObjectType } from '../../shared/shared.models';\nimport { CancelToken } from '../../+auth/auth.models';\n\n@Component({\n    selector: 'sharedData-index',\n    templateUrl: './sharedData-index.component.html',\n    styles: []\n})\nexport class SharedDataIndexComponent implements OnInit, OnDestroy {\n    hubCache: HubCache;\n\n    private _subscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n    private cancelToken: CancelToken = new CancelToken();\n\n    public eSharedObjectType = eSharedObjectType;\n\n    columns = [\n        { name: 'objectTypeName', title: 'Type', format: '' },\n        { name: 'name', title: 'Name', format: '', tags: 'tags' },\n        { name: 'description', title: 'Description', format: 'Md' },\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    typeFilter: string;\n\n    private _tableData = new BehaviorSubject<Array<DexihDatalink>>(null);\n    tableData: Observable<Array<DexihDatalink>> = this._tableData.asObservable();\n\n    constructor(private hubService: HubService, private authService: AuthService, private router: Router, private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.route.queryParams,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                let queryParams = result[2];\n                this.hubCache = result[3];\n\n                this.watchChanges();\n\n                this.typeFilter = queryParams['typeFilter'];\n                if (!this.typeFilter) {\n                    this.typeFilter = 'All';\n                }\n\n                this.route.snapshot.data['pageTitle'] =  this.typeFilter;\n\n                this.updateSharedData();\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Shared Data Index');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    private updateSharedData() {\n        let objects = new Array<any>();\n        if (this.hubCache && this.hubCache.isLoaded()) {\n            if (!this.hubCache.hub.dexihDatalinks && !this.hubCache.hub.dexihConnections) {\n                this._tableData.next(new Array<DexihDatalink>());\n            } else {\n                if (this.typeFilter === 'All' || this.typeFilter === 'Datalink') {\n                    this.hubCache.hub.dexihDatalinks.filter(d => d.isShared).forEach(datalink => {\n                        objects.push({\n                            objectKey: datalink.key,\n                            objectTypeName: eDataObjectType[eDataObjectType.Datalink],\n                            objectType: eDataObjectType.Datalink,\n                            name: datalink.name,\n                            description: datalink.description,\n                            updateDate: datalink.updateDate,\n                            tags: this.hubCache.getObjectTags(eSharedObjectType.Datalink, datalink.key)\n                        });\n                    });\n                }\n\n                if (this.typeFilter === 'All' || this.typeFilter === 'Table') {\n                    this.hubCache.hub.dexihTables.filter(c => c.isShared).forEach(table => {\n                        objects.push({\n                            objectKey: table.key,\n                            objectTypeName: eDataObjectType[eDataObjectType.Table],\n                            objectType: eDataObjectType.Table,\n                            name: table.logicalName + ' (' + table.name + ')',\n                            description: table.description,\n                            updateDate: table.updateDate,\n                            tags: this.hubCache.getObjectTags(eSharedObjectType.TagObjects, table.key)\n                        });\n                    });\n                }\n\n                if (this.typeFilter === 'All' || this.typeFilter === 'View') {\n                    this.hubCache.hub.dexihViews.filter(c => c.isShared).forEach(view => {\n                        objects.push({\n                            objectKey: view.key,\n                            objectTypeName: eDataObjectType[eDataObjectType.View],\n                            objectType: eDataObjectType.View,\n                            name: view.name,\n                            description: view.description,\n                            updateDate: view.updateDate,\n                            tags: this.hubCache.getObjectTags(eSharedObjectType.View, view.key)\n                        });\n                    });\n                }\n\n                if (this.typeFilter === 'All' || this.typeFilter === 'Dashboard') {\n                    this.hubCache.hub.dexihDashboards.filter(c => c.isShared).forEach(dashboard => {\n                        objects.push({\n                            objectKey: dashboard.key,\n                            objectTypeName: eDataObjectType[eDataObjectType.Dashboard],\n                            objectType: eDataObjectType.Dashboard,\n                            name: dashboard.name,\n                            description: dashboard.description,\n                            updateDate: dashboard.updateDate,\n                            tags: this.hubCache.getObjectTags(eSharedObjectType.Dashboard, dashboard.key)\n                        });\n                    });\n                }\n\n                if (this.typeFilter === 'All' || this.typeFilter === 'Api') {\n                    this.hubCache.hub.dexihApis.filter(c => c.isShared).forEach(api => {\n                        objects.push({\n                            objectKey: api.key,\n                            objectTypeName: eDataObjectType[eDataObjectType.Api],\n                            objectType: eDataObjectType.Api,\n                            name: api.name,\n                            description: api.description,\n                            updateDate: api.updateDate,\n                            tags: this.hubCache.getObjectTags(eSharedObjectType.Api, api.key)\n                        });\n                    });\n                }\n\n                this._tableData.next(objects);\n            }\n        }\n\n    }\n\n    public downloadData(dataObjects: Array<any>) {\n        this.hubService.downloadData(dataObjects, true, eDownloadFormat.Csv, this.cancelToken).then(() => {\n            this.hubService.addHubSuccessMessage('The specified data is being downloaded.');\n        }).catch(() => {\n            //            this.hubService.addHubErrorMessage(reason);\n        });\n    }\n\n    public preview(dataObject: DownloadObject) {\n        if (dataObject.objectType === eDataObjectType.Table) {\n            this.router.navigate(['table-preview', dataObject.objectKey], { relativeTo: this.route });\n        }\n        if (dataObject.objectType === eDataObjectType.Datalink) {\n            this.router.navigate(['datalink-preview', dataObject.objectKey], { relativeTo: this.route });\n        }\n        if (dataObject.objectType === eDataObjectType.View) {\n            this.router.navigate(['view-preview', dataObject.objectKey], { relativeTo: this.route });\n        }\n        if (dataObject.objectType === eDataObjectType.Dashboard) {\n            this.router.navigate(['dashboard-preview', dataObject.objectKey], { relativeTo: this.route });\n        }\n        if (dataObject.objectType === eDataObjectType.Api) {\n            this.router.navigate(['api-preview', dataObject.objectKey], { relativeTo: this.route });\n        }\n    }\n\n    public unshareSelectedTables(dataObjects: Array<DownloadObject>) {\n        let datalinkKeys = dataObjects.filter(c => c.objectType === eDataObjectType.Datalink).map(c => c.objectKey);\n        if (datalinkKeys.length > 0) {\n            this.hubService.shareItems(datalinkKeys, eDataObjectType.Datalink, false);\n        }\n\n        let tableKeys = dataObjects.filter(c => c.objectType === eDataObjectType.Table).map(c => c.objectKey);\n        if (tableKeys.length > 0) {\n            this.hubService.shareItems(tableKeys, eDataObjectType.Table, false);\n        }\n    }\n\n    watchChanges() {\n        // watch the current connection in case it is changed in another session.\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n            if (hubCacheChange.changeClass === eSharedObjectType.Datalink || hubCacheChange.changeClass === eSharedObjectType.Table) {\n                this.updateSharedData();\n            }\n        });\n\n    }\n}\n\n\n","<div class=\"container\">\n    <d-widget title=\"Shared Data\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-newspaper-o\" \n\t\t[showCloseButton]=\"true\"\n\t\t[padding]=\"false\"\n\t\t(close)=\"close()\"\n\t>\n\n\t<d-table \n\t\t[enableMultiSelect]=\"true\"\n\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t[columns]=\"columns\"\n\t\t[dataObservable]=\"tableData\"\n\t\t(rowClick)=\"preview($event)\"\n\t\t[tags]=\"this.hubCache.hub.dexihTags\"\n\t\t>\n\n\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n\t\t\t\t<d-button-preview (click)=\"preview(item)\"></d-button-preview>\n\t\t\t</ng-template>\n\n\t\t\t<ng-template #rowStatus select=\"rowStatus\" let-item=\"item\">\n\t\t\t</ng-template>\n\n\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-objects=\"items\">\n\t\t\t\t<d-button-download class=\"mr-1\" (click)=\"downloadData(objects)\"></d-button-download>\n\t\t\t\t<d-button-private *ngIf=\"hubCache.canWrite\"  (click)=\"unshareSelectedTables(objects)\"></d-button-private>\n\t\t\t</ng-template>\n\n\t\t\t<ng-template #filter select=\"filter\" let-items=\"items\">\n\t\t\t\t<d-button-dropdown buttonClass=\"btn-primary mr-1\" iconClass=\"fa fa-filter\" [text]=\"typeFilter\" title=\"Filter by a purpose\" [pullRight]=\"true\">\n\t\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"typeFilter=='All'\" routerLink='.' [queryParams]=\"{typeFilter: 'All'}\" title=\"All Items\">All</a>\n\t\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"typeFilter=='Datalink'\" routerLink='.' [queryParams]=\"{typeFilter: 'Datalink'}\" title=\"Datalinks\">Datalinks</a>\n\t\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"typeFilter=='Table'\" routerLink='.' [queryParams]=\"{typeFilter: 'Table'}\" title=\"Tables\">Tables</a>\n\t\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"typeFilter=='View'\" routerLink='.' [queryParams]=\"{typeFilter: 'View'}\" title=\"Views\">Views</a>\n\t\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"typeFilter=='Dashboard'\" routerLink='.' [queryParams]=\"{typeFilter: 'Dashboard'}\" title=\"Dashboards\">Dashboards</a>\n\t\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"typeFilter=='Api'\" routerLink='.' [queryParams]=\"{typeFilter: 'Api'}\" title=\"Apis\">Apis</a>\n\t\t\t\t</d-button-dropdown>\n\t\t\t</ng-template>\n\t</d-table>\n\n    </d-widget>\n</div>\n\n","import { Component, OnInit, OnDestroy, HostListener } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { HubCache, InvalidActions, CleanActions, eCacheStatus } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { TypeCodes } from '../../hub.remote.models';\nimport { eInvalidAction, eCleanAction, eTypeCode, DexihConnection, DexihColumnValidation } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n\n  selector: 'dexih-columnValidation-edit-form',\n  templateUrl: './columnValidation-edit.component.html',\n  providers: [HubFormsService]\n})\nexport class ColumnValidationEditComponent implements OnInit, OnDestroy {\n\n  private columnValidationKey: number;\n\n  public hubCache: HubCache;\n  public action: string; // new or edit\n  public params: Params;\n  public pageTitle: string;\n\n  eInvalidAction = eInvalidAction;\n  eCleanAction = eCleanAction;\n  eTypeCode = eTypeCode;\n  InvalidActions = InvalidActions;\n  CleanActions = CleanActions;\n\n  typeCodes = TypeCodes;\n  invalidActions = InvalidActions;\n  cleanActions = CleanActions;\n\n  public testValue: string;\n  public testResult: any;\n\n  public lookupColumnValue = '';\n\n  public connections: Array<DexihConnection>;\n  private isLoaded = false;\n\n  public eCacheStatus = eCacheStatus;\n  public cancelToken: CancelToken = new CancelToken();\n\n  private _subscription: Subscription;\n  private _formChangeSubscription: Subscription;\n  private _hubCacheChangeSubscription: Subscription;\n  private _lookupColumnSubscription: Subscription;\n\n  constructor(private hubService: HubService,\n    private authService: AuthService,\n    public formsService: HubFormsService,\n    private route: ActivatedRoute,\n    private router: Router) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n      ).subscribe(result => {\n        let data = result[0];\n        this.params = result[1];\n        this.hubCache = result[2];\n\n        this.action = data['action'];\n        this.pageTitle = data['pageTitle'];\n\n        if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded ) { return; }\n\n        if (this.isLoaded && this.action === 'new') { return; }\n\n        if (this.isLoaded && this.formsService.hasChanged) {\n            this.authService.confirmDialog('Synchronization warning',\n            'The hub was disconnected, meaning this edit could have been changed by another session.  Would you like to discard the current changes, and reload the latest version?')\n            .then(confirm => {\n                if (confirm) {\n                    this.load();\n                }\n            }).catch(reason => {\n                return;\n            });\n        } else {\n            this.load();\n        }\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Column Validation');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._formChangeSubscription) { this._formChangeSubscription.unsubscribe(); }\n    if (this._lookupColumnSubscription) { this._lookupColumnSubscription.unsubscribe(); }\n    this.cancelToken.cancel();\n  }\n\n  private load() {\n    this.connections = this.hubCache.getConnectionTables();\n\n    if (this.action === 'edit') {\n      // get the hub key from the route data, and update the service.\n      this.columnValidationKey = +this.params['validationKey'];\n\n      if (!this.columnValidationKey) {\n        this.hubService.addHubErrorMessage('There was no validation specified to edit.');\n        // this.errorMessage = 'There was no validation specified to edit.';\n      } else {\n        if (!this.hubCache.hub || !this.hubCache.hub.dexihColumnValidations) {\n          this.hubService.addHubErrorMessage('The hub cache is not loaded.');\n        } else {\n          let validation = this.hubCache.hub.dexihColumnValidations.find(c => c.key === this.columnValidationKey);\n          this.formsService.validation(validation);\n        }\n      }\n    }\n\n    if (this.action === 'new') {\n      let validation = new DexihColumnValidation();\n      this.formsService.validation(validation);\n\n      // update the url with the saved key\n      this._formChangeSubscription = this.formsService.getCurrentFormObservable().subscribe(form => {\n        let key = form.controls.key.value;\n        if (key) {\n          if (history.pushState) {\n            let newUrl = window.location.pathname.replace('/columnValidation-new', `/columnValidation-edit/${key}`)\n            this.router.navigateByUrl(newUrl);\n            this._formChangeSubscription.unsubscribe();\n          }\n        }\n      });\n    }\n\n    this.isLoaded = true;\n\n    this.getValidationLookupColumn();\n    if (this._lookupColumnSubscription) { this._lookupColumnSubscription.unsubscribe(); }\n    this._lookupColumnSubscription = this.formsService.currentForm.controls.lookupColumnKey.valueChanges.subscribe(() => {\n      this.getValidationLookupColumn();\n    });\n  }\n\n  getValidationLookupColumn() {\n    let lookupColumnKey = this.formsService.currentForm.controls.lookupColumnKey.value;\n    if (lookupColumnKey) {\n      let column = this.hubCache.getColumn(lookupColumnKey);\n      if (column) {\n        let table = this.hubCache.getTable(column.tableKey);\n        this.lookupColumnValue = 'Exists in table:' + table.name + ', column:' + column.name;\n      } else {\n        this.lookupColumnValue = 'Column not found.  Re-select a valid column.';\n      }\n    } else {\n      this.lookupColumnValue = '';\n    }\n  }\n\n  test() {\n    this.hubService.testColumnValidation(this.formsService.currentForm.value, this.testValue, this.cancelToken).then(result => {\n      this.testResult = result;\n    });\n  }\n\n  close() {\n    this.authService.navigateUp();\n  }\n\n  public canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>((resolve) => {\n      if (this.formsService.hasChanged) {\n        this.authService.confirmDialog('The view has not been saved',\n          'The column validation changes have not been saved.  Do you want to discard the changes and exit?')\n          .then((confirm) => {\n              resolve(confirm);\n            }).catch(() => {\n              resolve(false);\n            });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  // @HostListener allows is to guard against browser refresh, close, etc.\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.formsService.hasChanged) {\n      $event.returnValue = 'The column validation changes have not been saved.  Do you want to discard the changes and exit?';\n    }\n  }\n}\n","\t<div class=\"container\">\n\t<d-widget \n\ttitle=\"Edit Validation\" \n\ticonClass=\"fa fa-lg fa-fw fa-check-square-o\" \n\t[showCloseButton]=\"true\"\n\t(close)=\"close()\"\n\t[padding]=\"true\"\n\t>\n        <ng-template #header>\n\t\t\t<div class=\"d-inline-flex\">\n\t\t\t\t<ng-template [ngIf]=\"hubCache && hubCache.status === eCacheStatus.Loaded\">\n\t\t\t\t\t<dexih-invalid-form-details class=\"mr-1\" [control]=\"formsService.currentForm\" (click)=\"formsService.showErrors()\"></dexih-invalid-form-details>\n\t\t\t\t\t<div *ngIf=\"hubCache.canWrite\" >\n\t\t\t\t\t\t<div class=\"input-group mr-1\">\n\t\t\t\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t\t\t\t<button class=\"btn btn-primary\" type=\"button\" (click)=\"test()\"><i\tclass=\"fa fa-check-circle-o\"></i></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" placeholder=\"Test value\" [(ngModel)]=\"testValue\" style=\"max-width: 100px\" aria-label=\"\" aria-describedby=\"basic-addon1\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<save-button class=\"mr-1\" *ngIf=\"hubCache.canWrite\" [formsService]=\"formsService\"></save-button>\n\t\t\t\t</ng-template>\n\t\t\t\t<cancel-button class=\"mr-1\" [formsService]=\"formsService\"></cancel-button>\n\t\t\t</div>\n        </ng-template>\n\n\t\t<form *ngIf=\"formsService.currentForm\"  [formGroup]=\"formsService.currentForm\">\n\t\t\t<fieldset>\n\t\t\t\t<section *ngIf=\"testResult\">\n\t\t\t\t\t<div class=\"alert \" [class.alert-danger]=\"testResult.success == false\" [class.alert-success]=\"testResult.success == true\">\n\t\t\t\t\t\tTest Result = {{testResult.success}} \n\t\t\t\t\t\t<div *ngIf=\"testResult.cleanedValue\">Cleaned Value = {{testResult.cleanedValue}} </div>\n\t\t\t\t\t\t<div *ngIf=\"testResult.rejectReason\">Reject Reason = {{testResult.rejectReason}} </div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Column Validation Name\" formControlName=\"name\" placeholder=\"Enter the name.\" iconClass=\"fa fa-list\" [autocapitalize]=\"true\" [errors]=\"formsService.formErrors['name']\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-select label=\"Data Type\" formControlName=\"dataType\" [items]=\"typeCodes\" itemKey=\"key\" itemName=\"name\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t<section>\n\t\t\t\t<form-textarea label=\"Description\" [showPreview]=\"true\"  [isHidden]=\"true\" formControlName=\"description\" placeholder=\"Enter the description.\" >\n\t\t\t\t</form-textarea>\n\t\t\t</section>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-select label=\"Validation Fail Action\" formControlName=\"invalidAction\" [items]=\"InvalidActions\" itemKey=\"key\" itemName=\"name\"\n\t\t\t\t\t\t\tnote='Action to take when the validation fails.'>\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section *ngIf=\"formsService.currentForm.value.invalidAction==eInvalidAction.Clean || formsService.currentForm.value.invalidAction==eInvalidAction.RejectClean\" class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-select label=\"Clean Action\" formControlName=\"cleanAction\" [items]=\"cleanActions\" itemKey=\"key\" itemName=\"name\"\n\t\t\t\t\t\t\tnote='Clean Action to apply'>\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<section *ngIf=\"(formsService.currentForm.value.invalidAction == eInvalidAction.RejectClean || formsService.currentForm.value.invalidAction == eInvalidAction.Clean) && formsService.currentForm.value.cleanAction == eCleanAction.CleanValue\" >\n\t\t\t\t\t<form-input label=\"Clean Value\" formControlName=\"cleanValue\" placeholder=\"Enter the clean value.\" iconClass=\"fa fa-list\" >\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\n\t\t\t\t<section >\n\t\t\t\t\t<form-checkbox label=\"Ignore null values.\" formControlName=\"allowDbNull\" >\n\t\t\t\t\t</form-checkbox>\n\t\t\t\t</section>\n\n\t\t\t\t<div class=\"form-row\" *ngIf=\"formsService.currentForm.value.dataType==eTypeCode.String || formsService.currentForm.value.dataType==eTypeCode.Char\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Minimum String Length\" formControlName=\"minLength\" placeholder=\"Enter the minimum string length\" type=\"number\" iconClass=\"fa fa-list\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Maximum String Length\" formControlName=\"maxLength\" placeholder=\"Enter the maximum string length\" type=\"number\" iconClass=\"fa fa-list\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<section *ngIf=\"formsService.currentForm.value.dataType==eTypeCode.String || formsService.currentForm.value.dataType==eTypeCode.Char\" >\n\t\t\t\t\t\t<form-input label=\"Simple Pattern Match\" formControlName=\"patternMatch\" placeholder=\"Provide a match string\" iconClass=\"fa fa-list\"\n\t\t\t\t\t\tnote=\"Simple pattern match, use the format - A=Upper, a=Lower, Z=Any Character, 9=numeric.  (For example: AA999 matches AS123)\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\t\t\t\t<section *ngIf=\"formsService.currentForm.value.dataType==eTypeCode.String || formsService.currentForm.value.dataType==eTypeCode.Char\" >\n\t\t\t\t\t\t<form-input label=\"Regular Expression Match\" formControlName=\"regexMatch\" placeholder=\"Provide a regular expression\" iconClass=\"fa fa-list\"\n\t\t\t\t\t\tnote=\"Use a standard regular expression to validate.  For example [A-Za-z0-9] will ensure string only contains characters and numbers.\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\n\n\t\t\t\t<div class=\"form-row\" *ngIf=\"formsService.currentForm.value.dataType!=eTypeCode.String && formsService.currentForm.value.dataType!=eTypeCode.Char\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Minimum Value\" formControlName=\"minValue\" placeholder=\"Enter the minimum value\" type=\"number\" iconClass=\"fa fa-list\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Maximum Value\" formControlName=\"maxValue\" placeholder=\"Enter the maximum value\" type=\"number\" iconClass=\"fa fa-list\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-tags label=\"Restrict to list of values\" formControlName=\"listOfValues\" placeholder=\"Provide a list of values which are valid.\" >\n\t\t\t\t\t</form-tags>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-tags label=\"Excluded list of values\" formControlName=\"listOfNotValues\" placeholder=\"Provide a list of values which are valid.\" >\n\t\t\t\t\t</form-tags>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-select label=\"Restrict to values that exist in a lookup table column\" \n\t\t\t\t\t\tformControlName=\"lookupColumnKey\" \n\t\t\t\t\t\t[items]=\"connections\" \n\t\t\t\t\t\tgrandParentName=\"name\"\n\t\t\t\t\t\tparentName=\"name\"\n\t\t\t\t\t\titemKey=\"key\"\n\t\t\t\t\t\titemName=\"name\"\n\t\t\t\t\t\tchildItems=\"dexihTables\"\n\t\t\t\t\t\tgrandChildItems=\"dexihTableColumns\"\n\t\t\t\t\t\t[allowNullSelect]=\"true\"\n\t\t\t\t\t\tnote='Checks the selected table column, and ensures the value contains at least one match.'>\n\t\t\t\t\t</form-select>\n\t\t\t\t</section>\n\n\t\t\t\t<section >\n\t\t\t\t\t<form-checkbox label=\"Only lookup values where the 'is current' column is true.\" formControlName=\"lookupIsValid\" >\n\t\t\t\t\t</form-checkbox>\n\t\t\t\t</section>\n\n\t\t\t\t<section >\n\t\t\t\t\t<form-checkbox label=\"Allow valid when lookup returns multiple rows.\" formControlName=\"lookupMultipleRecords\" >\n\t\t\t\t\t</form-checkbox>\n\t\t\t\t</section>\n\t\t\t\t\n\t\t\t</fieldset>\n\t\t</form>\n \n    </d-widget>\n\n</div>","import { Component, OnInit, OnDestroy, HostListener } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubService } from '../../hub.service';\nimport { Observable, BehaviorSubject, Subscription, combineLatest} from 'rxjs';\nimport { HubCache, FileProperties, eCacheStatus, ConnectionTables, updateStrategies } from '../../hub.models';\nimport { Message, FileHandler, eFileStatus, CancelToken } from '../../../+auth/auth.models';\nimport { DexihTable, eFlatFilePath, DexihConnection, eConnectionCategory, eFlatFilePathItems, eConnectionPurpose,\n    ConnectionReference, RemoteLibraries, eUpdateStrategy, eUpdateStrategyItems } from '../../../shared/shared.models';\n\n\n@Component({\n    selector: 'files-manage',\n    templateUrl: './files-manage.component.html'\n})\nexport class FilesManageComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n\n    public entityType = 'Table';\n\n    public canEdit = false;\n    public tableKey: number;\n    public table: DexihTable;\n    public connectionReference: ConnectionReference;\n    public updateStrategy: eUpdateStrategy = eUpdateStrategy.Reload;\n\n    public updateStrategies = updateStrategies;\n\n    public path = eFlatFilePath.None;\n    public localPath: string;\n    public eFlatFilePath = eFlatFilePath;\n    public eFlatFilePathItems = eFlatFilePathItems.filter(c => c.key > 0);\n    public eFileStatus = eFileStatus;\n\n    public connectionTables: ConnectionTables[];\n\n    public remoteLibraries: RemoteLibraries;\n\n    public hubCache: HubCache;\n\n    public automaticUpload = true;\n\n    public uploadedFiles: FileHandler[] = [];\n    public cancelToken: CancelToken = new CancelToken();\n\n    pageTitle = 'Manage Files';\n    showPage = false;\n    showPageMessage = 'Loading...';\n\n    columns = [\n        { name: 'fileName', title: 'File Name', format: '' },\n        { name: 'length', title: 'Size', format: '' },\n        { name: 'lastModified', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<FileProperties>>(null);\n    tableData: Observable<Array<FileProperties>> = this._tableData.asObservable();\n\n    uploadColumns = [\n        { name: 'file.name', title: 'File Name', format: '' },\n        { name: 'file.size', title: 'Size', format: '' },\n    ];\n\n    public fileConnections: DexihConnection[];\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        private route: ActivatedRoute,\n        private router: Router) { }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.params,\n                this.route.queryParams,\n                this.hubService.getHubCacheObservable(true),\n                this.hubService.getRemoteLibrariesObservable(),\n            ).subscribe(result => {\n                let params = result[0];\n                let queryParams = result[1];\n                this.hubCache = result[2];\n                this.remoteLibraries = result[3];\n\n                // if (this.hubCache.status !== eCacheStatus.Loaded) { return; }\n\n                // if the connection is a file connection or not a source connection\n                this.fileConnections = this.hubCache.hub.dexihConnections\n                    .filter(c => {\n                        let ref = this.remoteLibraries.connections.find(con =>\n                            c.connectionAssemblyName === con.connectionAssemblyName\n                            && c.connectionClassName === con.connectionClassName);\n                        if (ref) {\n                            return (ref.connectionCategory === eConnectionCategory.File || c.purpose !== eConnectionPurpose.Source);\n                        } else {\n                            return false;\n                        }\n                    });\n\n                let connectionTables = this.hubCache.getConnectionTables();\n\n                this.connectionTables = connectionTables.filter(c => {\n                    if (c.dexihTables.length > 0) {\n                        return this.fileConnections.find(fc => c.key === fc.key) == null ? false : true;\n                    }\n                });\n\n                let hasChanged = false;\n                this.tableKey = +queryParams['tableKey'];\n                if (!this.tableKey) {\n                    if (this.connectionTables.length > 0 && this.connectionTables[0].dexihTables.length > 0) {\n                        this.tableKey = this.connectionTables[0].dexihTables[0].key;\n                        hasChanged = true;\n                    }\n                }\n\n                this.path = +queryParams['path'];\n                if (!this.path) {\n                    this.path = eFlatFilePath.Incoming;\n                    hasChanged = true;\n                }\n\n                if (hasChanged) {\n                    this.router.navigate(\n                        [],\n                        {\n                          relativeTo: this.route,\n                          queryParams: { tableKey: this.tableKey, path: this.path},\n                          queryParamsHandling: 'merge', // remove to replace all query params by provided\n                        });\n                        return;\n                }\n\n                this.table = this.hubCache.getTable(this.tableKey);\n                let connection = this.hubCache.getConnection(this.table.connectionKey);\n                this.connectionReference = this.remoteLibraries.connections.find(con =>\n                    connection.connectionAssemblyName === con.connectionAssemblyName\n                    && connection.connectionClassName === con.connectionClassName);\n\n                if (!this.table && this.tableKey) {\n                    this.hubService.addHubErrorMessage(`The table with the key ${this.tableKey} could not be found.`);\n                } else if (this.table) {\n                    this.pageTitle = 'Manage files for ' + this.table.name;\n                    this.showPage = true;\n                    this.refreshFiles();\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Files Manage');\n        }\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    updateTable(tableKey: number) {\n        this.router.navigate(\n            [],\n            {\n              relativeTo: this.route,\n              queryParams: { tableKey: tableKey, path: 'incoming'},\n              queryParamsHandling: 'merge', // remove to replace all query params by provided\n            });\n    }\n\n    refreshFiles() {\n        if (this.connectionReference.allowsFlatFiles) {\n            this.hubService.getFileList(this.table, this.path, this.cancelToken).then(result => {\n                this._tableData.next(result);\n            }).catch(reason => {\n                this._tableData.next([]);\n            });\n        }\n    }\n\n    public uploadSelected(items: Array<FileHandler>) {\n        items.forEach(item => {\n            this.authService.upload(item).then(status => {\n                if (status.success) {\n                    this.hubService.addHubSuccessMessage(`File ${item.file.name} uploaded successfully.`)\n                    this.refreshFiles();\n                } else {\n                    this.hubService.addHubMessage(status);\n                }\n            }).catch(reason => {\n                this.hubService.addHubMessage(reason);\n            });\n        });\n    }\n\n    public removeSelected(items: Array<FileHandler>) {\n        items.forEach(item => {\n            let index = this.uploadedFiles.findIndex(c => c.id === item.id);\n            if (index >= 0) {\n                this.uploadedFiles.splice(index, 1);\n            }\n        });\n    }\n\n    public cancelSelected(items: Array<FileHandler>) {\n        items.forEach(item => item.cancel());\n    }\n\n    public deleteSelected(items: Array<FileProperties>) {\n        let files = items.map(c => c.fileName);\n        this.hubService.deleteFiles(this.table, this.path, files, this.cancelToken).then(c => {\n            if (c) {\n                this.refreshFiles();\n            }\n        }).catch();\n    }\n\n    public moveSelected(items: Array<FileProperties>, toPath: eFlatFilePath) {\n        let files = items.map(c => c.fileName);\n        this.hubService.moveFiles(this.table, this.path, toPath, files, this.cancelToken).then(c => {\n            if (c) {\n                this.refreshFiles();\n            }\n        }).catch(reason => {\n            this.hubService.addHubMessage(status);\n        });\n}\n\n    public downloadSelected(items: Array<FileProperties>) {\n        let files = items.map(c => c.fileName);\n        this.hubService.downloadFiles(this.table, this.path, files, this.cancelToken).then(c => {\n            if (c) {\n                this.refreshFiles();\n            }\n        }).catch();\n    }\n\n    public preview(item: FileProperties) {\n        this.router.navigate(['hub', this.hubCache.hub.hubKey, 'summary', 'files', 'manage', this.tableKey, this.path, item.fileName]);\n    }\n\n    public close() {\n        this.authService.navigateUp();\n    }\n\n    public uploadFile(event) {\n        let files = event.srcElement.files;\n        this.doUpload(files);\n        return false;\n    }\n\n    public doUpload(files) {\n        Array.prototype.forEach.call(files, file => {\n            this.hubService.uploadFile(this.table, this.path, this.updateStrategy, file.name, this.cancelToken).then(url => {\n                let fileHandler = new FileHandler(file, url);\n                if (this.automaticUpload) {\n                    this.authService.upload(fileHandler).then(status => {\n                        if (status.success) {\n                            this.hubService.addHubSuccessMessage(`File ${file.name} uploaded successfully.`)\n                            this.refreshFiles();\n                        } else {\n                            this.hubService.addHubMessage(status);\n                        }\n                    }).catch(reason => {\n                        this.hubService.addHubMessage(reason);\n                    });\n\n                }\n                this.uploadedFiles.push(fileHandler);\n                this.uploadedFiles = [...this.uploadedFiles];\n            }).catch(reason => {\n                this.hubService.addHubMessage(reason);\n            });\n        });\n    }\n\n    public filesDrop(files: any) {\n        this.doUpload(files);\n    }\n}\n","<div *ngIf=\"!connectionTables || connectionTables.length === 0\" class=\"alert alert-danger m-3\">\n    There are no files configured.  Create a file based connection, and add at least one file definition.\n    <hr>\n    <div>\n        <d-button-new routerLink=\"/hub/{{hubCache?.hub.hubKey}}/connections/connection-new/Source\" text=\"New Connection\" [autoCompact]=\"false\"></d-button-new>\n        <d-button *ngFor=\"let connection of fileConnections\" routerLink=\"/hub/{{hubCache?.hub.hubKey}}/connections/tables/table-new/{{connection.key}}\" [autoCompact]=\"false\" [title]=\"\">New Table ({{connection.name}})</d-button>\n    </div>\n</div>\n\n<div *ngIf=\"connectionTables && connectionTables.length > 0\" class=\"container\">\n    <d-widget [title]=\"'Manage Files: ' + table?.name\" iconClass=\"fa fa-lg fa-fw fa-table\" [showCloseButton]=\"true\"\n        (close)=\"close()\"     >\n        <ng-template #header>\n            <d-button-dropdown class=\"mr-1\" iconClass=\"fa fa-file-o\" text=\"New File\">\n                    <a *ngFor=\"let connection of fileConnections\" class=\"dropdown-item\" routerLink=\"/hub/{{hubCache?.hub.hubKey}}/connections/tables/table-new/{{connection.key}}\" [title]=\"\">{{connection.name}}</a>\n            </d-button-dropdown>\n            <d-button-dropdown *ngIf=\"connectionReference?.allowsFlatFiles && table?.autoManageFiles\" iconClass=\"fa fa-filter\" [text]=\"eFlatFilePath[path]\" title=\"Select the file location\" [pullRight]=\"true\">\n                    <a *ngFor=\"let item of eFlatFilePathItems\" class=\"dropdown-item\" [class.active]=\"path === item.key\" routerLinkActive=\"active\" data-toggle=\"tab\" routerLink=\".\" [queryParams]=\"{tableKey: tableKey, path: item.key}\">\n                            <i class=\"fa fa-elipsis-h\"></i>{{item.name}}</a>\n            </d-button-dropdown>\n        </ng-template>\n\n        <ul *ngIf=\"table\" class=\"list-group\">\n            <li class=\"list-group-item\">\n                <section>\n                    <form-select label=\"Flat File\" [(ngModel)]=\"tableKey\" [ngModelOptions]=\"{standalone: true}\"\n                        (ngModelChange)=\"updateTable($event)\" [items]=\"connectionTables\" parentName=\"name\" childItems=\"dexihTables\"\n                        itemKey=\"key\" itemName=\"logicalName\" note=\"Select the flat file to manage\">\n                    </form-select>\n                </section>\n                <section *ngIf=\"!connectionReference?.allowsFlatFiles\">\n                    <form-select label=\"Update Strategy\" [(ngModel)]=\"updateStrategy\" [ngModelOptions]=\"{standalone: true}\"\n                        [items]=\"updateStrategies\" itemKey=\"key\" itemName=\"description\" iconClass=\"fa fa-database\"\n                        note='Specify how records should be inserted/updated in the target table.'\n                        >\n                    </form-select>\n                </section>\n            </li>\n            <li class=\"list-group-item list-group-item-info rounded-0\">\n                <h5>Drop Files to Upload</h5>\n            </li>\n            <li class=\"list-group-item \">\n                <div class=\"well my-drop-zone\" dropZone [requireFiles]=\"true\" (dropFiles)=\"filesDrop($event)\" dropAllowedClass=\"nv-file-over\">\n                    Drop Files to Upload Here\n                    <div class=\"custom-file w-25 float-right\">\n                        <input type=\"file\" class=\"custom-file-input\" onclick=\"this.value=null\" (change)=\"uploadFile($event)\">\n                        <label class=\"custom-file-label\" for=\"inputGroupFile01\">Choose files</label>\n                    </div>\n                </div>\n            </li>\n            <li class=\"list-group-item list-group-item-info  rounded-0\">\n                <h5>Upload Queue</h5>\n            </li>\n            <li class=\"list-group-item p-0\">\n                <d-table [enableMultiSelect]=\"true\" [columns]=\"uploadColumns\" [data]=\"uploadedFiles\">\n\n                    <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n                        <d-button class=\"mr-1\" iconClass=\"fa fa-upload\" buttonClass='btn-primary' (click)=\"uploadSelected(items)\">Upload</d-button>\n                        <d-button-cancel class=\"mr-1\" (click)=\"cancelSelected(items)\"></d-button-cancel>\n                        <d-button-delete (click)=\"removeSelected(items)\" text=\"Remove\"></d-button-delete>\n                    </ng-template>\n\n                    <ng-template #actions let-items=\"items\">\n                        <section>\n                            <form-checkbox [(ngModel)]=\"automaticUpload\" label=\"Automatically upload files when added to the queue.\"></form-checkbox>\n                        </section>\n                    </ng-template>\n\n                    <ng-template #rowStatus select=\"rowStatus\" let-item=\"item\">\n                        <div *ngIf=\"item.isRunning()\" class=\"progress\" style=\"margin-bottom: 0;\">\n                            <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': item.progress + '%' }\"></div>\n                        </div>\n                        <span >\n                            <i class='fa' [ngClass]=\"{\n                                'fa-check': item.status === eFileStatus.Complete, \n                                'fa-exclamation-circle': item.status === eFileStatus.Error,\n                                'fa-ban': item.status === eFileStatus.Cancelled}\"></i>{{item.status}}</span>\n                    </ng-template>\n                </d-table>\n            </li>\n            <ng-template [ngIf]=\"connectionReference?.allowsFlatFiles\">\n            <li class=\"list-group-item list-group-item-info rounded-0\">\n                <h5>Files (Local directory:\n                    <a href='file://///{{localPath}}'>{{localPath}}</a>)</h5>\n\n            </li>\n            <li class=\"list-group-item p-0\">\n                <d-table [enableMultiSelect]=\"true\" [columns]=\"columns\" [dataObservable]=\"tableData\">\n\n                    <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n                        <d-button-delete class=\"mr-1\" (click)=\"deleteSelected(items)\"></d-button-delete>\n                        <d-button-download class=\"mr-1\" (click)=\"downloadSelected(items)\"></d-button-download>\n                        <d-button-dropdown class=\"mr-1\" iconClass=\"fa fa-mail-forward\" text=\"Move\" [pullRight]=\"true\">\n                            <a class=\"dropdown-item\" *ngIf=\"path != eFlatFilePath.Incoming\" (click)=\"moveSelected(items, eFlatFilePath.Incoming)\">To Incoming</a>\n                            <a class=\"dropdown-item\" *ngIf=\"path != eFlatFilePath.Outgoing\" (click)=\"moveSelected(items, eFlatFilePath.Outgoing)\">To Processed</a>\n                            <a class=\"dropdown-item\" *ngIf=\"path != eFlatFilePath.Processed\" (click)=\"moveSelected(items, eFlatFilePath.Processed)\">To Processed</a>\n                            <a class=\"dropdown-item\" *ngIf=\"path != eFlatFilePath.Rejected\" (click)=\"moveSelected(items, eFlatFilePath.Rejected)\">To Rejected</a>\n                        </d-button-dropdown>\n                    </ng-template>\n\n                    <ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n                        <d-button-preview [routerLink]=\"['/hub', hubCache?.hub.hubKey, 'summary', 'files', 'manage', tableKey, 'file-preview', path, item.fileName]\"></d-button-preview>\n                    </ng-template>\n\n                    <ng-template #actions let-items=\"items\">\n                        <d-button-dropdown *ngIf=\"table?.autoManageFiles\" class=\"mr-1\" buttonClass=\"btn-primary\" iconClass=\"fa fa-filter\" [text]=\"eFlatFilePath[path]\"\n                            title=\"Select the file location\" [pullRight]=\"true\">\n                            <a *ngFor=\"let item of eFlatFilePathItems\" class=\"dropdown-item\" [class.active]=\"path === item.key\" routerLinkActive=\"active\" data-toggle=\"tab\" routerLink=\".\" [queryParams]=\"{tableKey: tableKey, path: item.key}\">\n                                <i class=\"fa fa-elipsis-h\"></i>{{item.name}}</a>\n                        </d-button-dropdown>\n                        <d-button-refresh (click)=\"refreshFiles()\"></d-button-refresh>\n                    </ng-template>\n                </d-table>\n            </li>\n        </ng-template>\n        </ul>\n    </d-widget>\n</div>","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { HubCache } from '../../hub.models';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { DexihColumnValidation, DexihHub, eSharedObjectType } from '../../../shared/shared.models';\n\n@Component({\n  selector: 'columnValidations',\n  templateUrl: './columnValidation-index.component.html',\n  styles: []\n})\nexport class ColumnValidationIndexComponent implements OnInit, OnDestroy {\n    @Input() public hubKey: number;\n\n  private _subscription: Subscription;\n  private _hubCacheChangeSubscription: Subscription;\n\n    hubCache: HubCache;\n\n    validations: Array<DexihColumnValidation>;\n    public eSharedObjectType = eSharedObjectType;\n\n    columns = [\n        { name: 'name', title: 'Name', footer: 'description', format: 'Md', tags: 'tags' },\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar'},\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        // watch for any changes in the validations.\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                this.hubCache = result[0];\n                this.updateValidations();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Column Validation Index');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    deleteValidations(validations: Array<DexihColumnValidation>) {\n        this.hubService.deleteColumnValidations(validations);\n    }\n\n    updateValidations() {\n        if (this.hubCache && this.hubCache.isLoaded()) {\n            let validations = this.hubCache.hub.dexihColumnValidations.filter(c => c.isValid)\n                .map(c => {\n                    return {\n                        key: c.key,\n                        name: c.name,\n                        description: c.description,\n                        updateDate: c.updateDate,\n                        tags: this.hubCache.getObjectTags(eSharedObjectType.ColumnValidation, c.key)\n                    }\n                });\n            this._tableData.next(validations);\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    edit(validation: DexihColumnValidation) {\n        this.router.navigate(['columnValidation-edit', validation.key], { relativeTo: this.route});\n    }\n\n    export(items: Array<DexihColumnValidation>) {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        items.forEach(item => { this.hubCache.cacheAddColumnValidation(item.key, hub); });\n\n        let filename = items.length === 1 ? 'ColumnValidation - ' + items[0].name + '.json' : 'columnValidations.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    watchChanges() {\n      // watch the current validation in case it is changed in another session.\n      this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n          if (hubCacheChange.changeClass === eSharedObjectType.ColumnValidation\n            || hubCacheChange.changeClass === eSharedObjectType.TagObjects) {\n            this.updateValidations();\n          }\n      });\n  }\n}\n","<div class=\"container\">\n    <d-widget title=\"Validation Rules\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-check-square-o\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\t>\n\t\t<d-table \n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[dataObservable]=\"tableData\"\n\t\t\t(rowClick)=\"edit($event)\"\n\t\t\t[tags]=\"this.hubCache.hub.dexihTags\"\n\t\t\t>\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n\t\t\t\t\t<actions-columnValidation-button [columnValidation]=\"item\" class=\"mr-1\"></actions-columnValidation-button>\n\t\t\t\t\t<dependent-items-button class=\"mr-1\" [key]=\"item.key\" [objectType]='eSharedObjectType.ColumnValidation'></dependent-items-button>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t<d-button-save-local class=\"mr-1\" (click)=\"export(items)\"></d-button-save-local>\n\t\t\t\t\t<d-button-delete class=\"mr-1\" *ngIf=\"hubCache.canWrite\" (click)=\"deleteValidations(items)\"></d-button-delete>\n\t\t\t\t\t<tags-update-button class=\"mr-1\" [objectType]=\"eSharedObjectType.ColumnValidation\" [objects]=\"items\" ></tags-update-button>\n\t\t\t\t</ng-template>\n\t\t\t\t\n\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<d-button-new *ngIf=\"hubCache.canWrite\" [routerLink]=\"['columnValidation-new']\" class=\"mr-1\"></d-button-new>\n\t\t\t\t</ng-template>\n\t\t</d-table>\n\n    </d-widget>\n</div>\n\n\n","export {CustomFunctionEditComponent} from './customFunction-edit.component';\nexport {CustomFunctionParameterComponent} from './customFunction-parameter.component';\n","import { Component, OnInit, OnDestroy, HostListener } from '@angular/core';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\nimport { HubCache, eCacheStatus, ConnectionTables } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest, merge, Subject} from 'rxjs';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { DexihListOfValues, DexihDatalink, eLOVObjectType,\n  DexihColumnBase, eLOVObjectTypeItems, SelectQuery, ListOfValuesItem } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\nimport { InputOutputColumns } from '../../hub.lineage.models';\nimport { FormGroup, FormArray } from '@angular/forms';\n\n@Component({\n\n  selector: 'dexih-listOfValues-edit-form',\n  templateUrl: './listOfValues-edit.component.html',\n  providers: [HubFormsService]\n})\nexport class ListOfValuesEditComponent implements OnInit, OnDestroy {\n\n  private listOfValuesKey: number;\n\n  public hubCache: HubCache;\n  public action: string; // new or edit\n  public pageTitle: string;\n  public params: Params;\n\n  private _subscription: Subscription;\n  private _formChangeSubscription: Subscription;\n  private _sourceChangeSubscription: Subscription;\n  private isLoaded = false;\n\n  private refreshDataSubject: Subject<void> = new Subject<void>();\n  public refreshDataObservable = this.refreshDataSubject.asObservable();\n  \n  private cancelToken = new CancelToken();\n\n  public eLOVObjectType = eLOVObjectType;\n  public connectionTables: ConnectionTables[] = [];\n  public datalinks: DexihDatalink[] = [];\n\n  public tableColumns: DexihColumnBase[];\n  public sourceTypes = eLOVObjectTypeItems.filter( c => c.key > 0);\n\n  columns = [\n    { name: 'key', title: 'Key'},\n    { name: 'name', title: 'Name'},\n    { name: 'description', title: 'Description'},\n];\n  public data: Array<any>;\n\n  constructor(private hubService: HubService,\n    private authService: AuthService,\n    public formsService: HubFormsService,\n    private route: ActivatedRoute,\n    private router: Router) {\n  }\n\n  ngOnInit() {\n\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n      ).subscribe(result => {\n        let data = result[0];\n        this.params = result[1];\n        this.hubCache = result[2];\n\n        this.pageTitle = data['pageTitle'];\n        this.action = data['action'];\n\n        if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded ) { return; }\n\n        if (this.isLoaded && this.action === 'new') { return; }\n\n        if (this.isLoaded && this.formsService.hasChanged) {\n            this.authService.confirmDialog('Synchronization warning',\n            'The hub was disconnected, meaning this edit could have been changed by another session.  Would you like to discard the current changes, and reload the latest version?')\n            .then(confirm => {\n                if (confirm) {\n                    this.load();\n                }\n            }).catch(reason => {\n                return;\n            });\n        } else {\n            this.load();\n        }\n\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Edit List Of Values');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._formChangeSubscription) { this._formChangeSubscription.unsubscribe(); }\n    if (this._sourceChangeSubscription) { this._sourceChangeSubscription.unsubscribe(); }\n    this.cancelToken.cancel();\n  }\n\n  load() {\n    this.isLoaded = true;\n\n    this.connectionTables = this.hubCache.getConnectionTables();\n    this.datalinks = this.hubCache.hub.dexihDatalinks;\n\n    if (this.action === 'edit') {\n      // get the hub key from the route data, and update the service.\n      this.listOfValuesKey = + this.params['listOfValuesKey'];\n\n      if (!this.listOfValuesKey) {\n        this.hubService.addHubErrorMessage('There was no list of values specified to edit.');\n        // this.errorMessage = 'There was no validation specified to edit.';\n      } else {\n        if (!this.hubCache.hub || !this.hubCache.hub.dexihListOfValues) {\n          this.hubService.addHubErrorMessage('The hub cache is not loaded.');\n        } else {\n          let listOfValues = this.hubCache.hub.dexihListOfValues.find(c => c.key === this.listOfValuesKey);\n          if (! listOfValues.selectQuery) {\n            listOfValues.selectQuery = new SelectQuery();\n          }\n          this.formsService.listOfValues(listOfValues);\n        }\n      }\n    }\n\n    if (this.action === 'new') {\n      let listOfValues = new DexihListOfValues();\n      listOfValues.selectQuery = new SelectQuery();\n      this.formsService.listOfValues(listOfValues);\n\n      // update the url with the saved key\n      this._formChangeSubscription = this.formsService.getCurrentFormObservable().subscribe(form => {\n        let key = form.controls.key.value;\n        if (key) {\n          if (history.pushState) {\n            let newUrl = window.location.pathname.replace('/listOfValues-new', `/listOfValues-edit/${key}`);\n            this.router.navigateByUrl(newUrl);\n            this._formChangeSubscription.unsubscribe();\n          }\n        }\n      });\n    }\n\n    this.refreshColumns();\n\n    let currentForm = this.formsService.currentForm;\n\n    // if any source table/datalink changed, refresh the columns.\n    this._sourceChangeSubscription = merge(\n      currentForm.controls.sourceType.valueChanges,\n      currentForm.controls.sourceTableKey.valueChanges,\n      currentForm.controls.sourceDatalinkKey.valueChanges).subscribe(() => {\n        this.refreshColumns();\n    });\n  }\n\n  refreshColumns() {\n    let currentForm = this.formsService.currentForm;\n    let sourceType = <eLOVObjectType> currentForm.controls.sourceType.value;\n\n    switch (sourceType) {\n      case eLOVObjectType.Datalink:\n        let datalinkKey = currentForm.controls.sourceDatalinkKey.value;\n        let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === datalinkKey);\n        if (datalink) {\n          // get the outputs from the last transform in the datalink\n          const ioColumns = new InputOutputColumns();\n          ioColumns.buildInputOutput(datalink);\n          this.tableColumns = ioColumns.getDatalinkOutputColumns(datalink);\n        } else {\n          if (datalinkKey > 0) {\n            this.hubService.addHubErrorMessage(`The datalink with the key ${datalinkKey} could not be found.`);\n          }\n          this.tableColumns = null;\n        }\n        break;\n      case eLOVObjectType.Table:\n        let tableKey = currentForm.controls.sourceTableKey.value;\n        let table = this.hubCache.hub.dexihTables.find(c => c.key === tableKey);\n        if (table) {\n          this.tableColumns = table.dexihTableColumns;\n        } else {\n          if (tableKey > 0) {\n            this.hubService.addHubErrorMessage(`The table with the key ${tableKey} could not be found.`);\n          }\n          this.tableColumns = null;\n        }\n        break;\n      }\n  }\n\n  refreshData() {\n    let form = this.formsService.currentForm;\n\n    let listOfValues = <DexihListOfValues>form.value;\n\n    this.hubService.previewListOfValues(listOfValues, true, this.cancelToken).then((data) => {\n      this.data = data;\n      this.refreshDataSubject.next();\n    }).catch((reason) => {\n      this.hubService.addHubMessage(reason);\n    });\n  }\n\n  hasChanged() {\n\n  }\n\n  add(index: number) {\n    let currentForm = <FormGroup> this.formsService.currentForm;\n    let item = this.formsService.listOfValuesItem(new ListOfValuesItem());\n    let staticData = <FormArray> currentForm.controls.staticData;\n    staticData.insert(index + 1, item);\n  }\n\n  remove(index: number) {\n    let currentForm = <FormGroup> this.formsService.currentForm;\n    let staticData = <FormArray> currentForm.controls.staticData;\n    staticData.removeAt(index);\n  }\n\n  clear() {\n    let currentForm = <FormGroup> this.formsService.currentForm;\n    let staticData = <FormArray> currentForm.controls.staticData;\n    while(staticData.controls.length > 0) {\n      staticData.removeAt(0);\n    }\n  }\n\n  close() {\n    this.authService.navigateUp();\n  }\n\n  canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      if (this.formsService.currentForm && !this.formsService.currentForm.pristine) {\n        this.authService.confirmDialog('List of Values has changed',\n        'The list of values has changed.  Would you like to discard the changes and return to the previous screen?'\n        ).then(confirm => {\n          resolve(confirm);\n        }).catch(reason => {\n          resolve(false);\n        });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  // @HostListener allows is to guard against browser refresh, close, etc.\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.formsService.hasChanged) {\n      $event.returnValue = 'The list of values changes have not been saved.  Do you want to discard the changes and exit?';\n    }\n  }\n\n}\n","<div class=\"container\" *ngIf=\"formsService.currentForm\">\n\t<d-widget title=\"Edit List of Values\" iconClass=\"fa fa-lg fa-list-alt\" [showCloseButton]=\"true\" [padding]=\"false\"\n\t\t(close)=\"close()\">\n\t\t<ng-template #header>\n\t\t\t<dexih-invalid-form-details [control]=\"formsService.currentForm\" (click)=\"formsService.showErrors()\" class=\"mr-1\"></dexih-invalid-form-details>\n\t\t\t<save-button *ngIf=\"hubCache.canWrite\" [formsService]=\"formsService\" class=\"mr-1\"></save-button>\n\t\t\t<cancel-button [formsService]=\"formsService\"></cancel-button>\n\t\t</ng-template>\n\n\t\t<form [formGroup]=\"formsService.currentForm\" class=\"m-3\">\n\t\t\t<fieldset>\n\t\t\t\t<section>\n\t\t\t\t\t<form-input label=\"List of Values\" formControlName=\"name\"\n\t\t\t\t\t\tplaceholder=\"Enter the list of values name.\" [autocapitalize]=\"false\" iconClass=\"fa fa-list\"\n\t\t\t\t\t\t[errors]=\"formsService.formErrors['name']\">\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<form-textarea label=\"Description\" [showPreview]=\"true\" [isHidden]=\"true\" formControlName=\"description\"\n\t\t\t\t\t\tplaceholder=\"Enter the description.\">\n\t\t\t\t\t</form-textarea>\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t<form-select label=\"Data Source Type\" formControlName=\"sourceType\" [items]=\"sourceTypes\"\n\t\t\t\t\t\t\t\titemKey=\"key\" itemName=\"name\" iconClass=\"fa fa-database\"\n\t\t\t\t\t\t\t\tnote='Specify the source type for this view' [enableFilter]=\"false\">\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<section class=\"form-group col-md-6\"\n\t\t\t\t\t\t\t*ngIf=\"formsService.currentForm.value.sourceType == eLOVObjectType.Table\">\n\t\t\t\t\t\t\t<form-select label=\"Source Table\" formControlName=\"sourceTableKey\"\n\t\t\t\t\t\t\t\t[errors]=\"formsService.formErrors?.sourceTableKey\" [items]=\"connectionTables\" parentName=\"name\"\n\t\t\t\t\t\t\t\tchildItems=\"dexihTables\" itemKey=\"key\" itemName=\"logicalName\"\n\t\t\t\t\t\t\t\tnote=\"Select the source table\">\n\t\t\t\t\t\t\t\t<table-edit-button [key]=\"formsService.currentForm.controls.sourceTableKey.value\"></table-edit-button>\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<section class=\"form-group col-md-6\"\n\t\t\t\t\t\t\t*ngIf=\"formsService.currentForm.value.sourceType == eLOVObjectType.Datalink\">\n\t\t\t\t\t\t\t<form-select label=\"Source Datalink\" formControlName=\"sourceDatalinkKey\"\n\t\t\t\t\t\t\t\t[errors]=\"formsService.formErrors?.sourceDatalinkKey\" [items]=\"datalinks\" itemKey=\"key\" itemName=\"name\"\n\t\t\t\t\t\t\t\tnote='Select the source datalink'>\n\t\t\t\t\t\t\t\t<datalink-edit-button [key]=\"formsService.currentForm.controls.sourceDatalinkKey.value\"></datalink-edit-button>\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"form-row\" *ngIf=\"tableColumns\">\n\t\t\t\t\t\t<section class=\"form-group col-md-4\">\n\t\t\t\t\t\t\t<form-select label=\"Key Column\" formControlName=\"keyColumn\" [items]=\"tableColumns\"\n\t\t\t\t\t\t\t\titemKey=\"name\" itemName=\"name\" iconClass=\"fa fa-key\" [allowNullSelect]=\"true\" [enableFilter]=\"false\">\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<section class=\"form-group col-md-4\">\n\t\t\t\t\t\t\t<form-select label=\"Name Column\" formControlName=\"nameColumn\" [items]=\"tableColumns\"\n\t\t\t\t\t\t\t\titemKey=\"name\" itemName=\"name\" iconClass=\"fa fa-circle-o\" [allowNullSelect]=\"true\" [enableFilter]=\"false\">\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<section class=\"form-group col-md-4\">\n\t\t\t\t\t\t\t<form-select label=\"Description Column\" formControlName=\"descriptionColumn\"\n\t\t\t\t\t\t\t\t[items]=\"tableColumns\" itemKey=\"name\" itemName=\"name\" [allowNullSelect]=\"true\" iconClass=\"fa fa-comment-o\"\n\t\t\t\t\t\t\t\t[enableFilter]=\"false\">\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div class=\"form-row\" *ngIf=\"tableColumns\">\n\t\t\t\t\t\t<section class=\"form-group col-md-12\">\n\t\t\t\t\t\t\t<div class=\"d-flex flex-wrap pt-1\">\n\t\t\t\t\t\t\t\t<form-checkbox class=\"input-group-prepend\" label=\"Cache Lookup\" formControlName=\"cache\" [border]=\"true\"></form-checkbox>\n\t\t\t\t\t\t\t\t<form-input type=\"number\" class=\"pl-1\" *ngIf=\"formsService.currentForm.controls.cache.value\" labelLeft=\"Cache Seconds\" placeholder=\"seconds\" title=\"Specify the number of seconds to cache the lookup\" formControlName=\"cacheSeconds\"></form-input>\n\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t</fieldset>\n\t\t</form>\n\n\t\t<d-widget-section *ngIf=\"formsService.currentForm.value.sourceType == eLOVObjectType.Static\" title=\"Static Values\"\n\t\t\t[showExpandButton]=\"true\">\n\t\t\t<ng-template #sectionHeader>\n\t\t\t\t<d-button class=\"mr-1\" (click)=\"add(-1)\" iconClass=\"fa fa-plus\">Insert Item</d-button>\n\t\t\t\t<d-button-delete (click)=\"clear()\" text=\"Clear All\"></d-button-delete>\n\t\t\t</ng-template>\n\t\t\n\t\t\t<form *ngFor=\"let itemForm of formsService.currentForm.controls.staticData['controls']; let i = index;\"\n\t\t\t\t[formGroup]=\"itemForm\" class=\"flex-fill\">\n\t\t\t\t<div class=\"input-group\">\t\t\n\t\t\t\t\t<div class=\"form-control p-0\">\n\t\t\t\t\t\t<form-input [border]=\"false\" formControlName=\"key\" type=\"text\" placeholder=\"Key Value\">\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"form-control p-0\">\n\t\t\t\t\t\t<form-input [border]=\"false\" formControlName=\"name\" type=\"text\" placeholder=\"Item name\">\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"form-control p-0\">\n\t\t\t\t\t\t<form-input [border]=\"false\" formControlName=\"key\" type=\"text\" placeholder=\"Description\">\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"input-group-append flex-shrink-1 ml-1 \">\n\t\t\t\t\t\t<button class=\"btn btn-light\" type=\"button\" (click)=\"add(i)\"  value=\"Add\">\n\t\t\t\t\t\t\t<i class=\"fa fa-plus-square-o\"></i>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button class=\"btn btn-light\" type=\"button\" (click)=\"remove(i)\"  value=\"Remove\">\n\t\t\t\t\t\t\t<i class=\"fa fa-minus-square-o\"></i>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\n\t\t</d-widget-section>\n\t\t\n\t\t<ng-template [ngIf]=\"formsService.currentForm.value.sourceType !== eLOVObjectType.Static\">\n\t\t\t<d-widget-section title=\"Query Configuration\" [showExpandButton]=\"true\">\n\t\t\t\t<query-builder [selectQuery]=\"formsService.currentForm.controls.selectQuery.value\" [columns]=\"tableColumns\"\n\t\t\t\t\t[parameters]=\"null\" (hasChanged)=\"hasChanged()\" [refreshEvent]=\"refreshDataObservable\" (onRefreshData)=\"refreshData()\"></query-builder>\n\t\t\t</d-widget-section>\n\t\t\n\t\t\t<div *ngIf=\"!data\" class=\"m-3\">\n\t\t\t\t<d-button-refresh (click)=\"refreshData()\" text=\"Reload\" [autoCompact]=\"false\"></d-button-refresh>\n\t\t\t</div>\n\t\t\n\t\t\t<d-table *ngIf=\"data\" [enableMultiSelect]=\"false\" [enableSaveCsv]=\"true\" csvFileName=\"formsService.currentForm?.controls.name.value + '.csv'\" [columns]=\"columns\" [data]=\"data\">\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<d-button-refresh class=\"mr-1\" (click)=\"refreshData()\" text=\"Reload\"></d-button-refresh>\n\t\t\t\t</ng-template>\n\t\t\t</d-table>\n\t\t</ng-template>\n\t</d-widget>\n\n</div>","export {DashboardEditComponent} from './dashboard-edit.component';\nexport {DashboardItemComponent} from './item/dashboard-item.component';\n","import { Component, OnInit, OnDestroy, HostListener } from '@angular/core';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\nimport { HubCache, eCacheStatus, ConnectionTables } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { Subscription, combineLatest, merge, Subject} from 'rxjs';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { InputOutputColumns } from '../../hub.lineage.models';\nimport { CancelToken } from '../../../+auth/auth.models';\nimport { eSourceType, DexihDatalink, InputColumn, DexihColumnBase, SelectQuery, DexihApi, DownloadObject, eDataObjectType } from '../../../shared/shared.models';\n\n@Component({\n  selector: 'dexih-api-edit-form',\n  templateUrl: './api-edit.component.html',\n  providers: [HubFormsService]\n})\nexport class ApiEditComponent implements OnInit, OnDestroy {\n  public apiKey: number;\n\n  public hubCache: HubCache;\n  public action: string; // new or edit\n  public pageTitle: string;\n  public params: Params;\n\n  private _subscription: Subscription;\n  private _formChangeSubscription: Subscription;\n  private _changesSubscription: Subscription;\n\n  public refreshDataSubject: Subject<void> = new Subject<void>();\n  public refreshDataObservable = this.refreshDataSubject.asObservable();\n\n  sourceTypes = [\n    { key: eSourceType.Datalink, name: 'Datalink' },\n    { key: eSourceType.Table, name: 'Table' }\n  ];\n\n  eSourceType = eSourceType;\n\n  public connectionTables: ConnectionTables[] = [];\n  public datalinks: DexihDatalink[] = [];\n\n  public inputColumns: InputColumn[];\n  public tableColumns: DexihColumnBase[];\n  selectQuery: SelectQuery = new SelectQuery();\n\n  columns: Array<any>;\n  public data: Array<any> = [];\n  private isLoaded = false;\n\n  private cancelToken = new CancelToken();\n\n  constructor(\n    private hubService: HubService,\n    private authService: AuthService,\n    public formsService: HubFormsService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n      ).subscribe(result => {\n        let data = result[0];\n        this.params = result[1];\n        this.hubCache = result[2];\n\n        this.action = data['action'];\n        this.pageTitle = data['pageTitle'];\n\n        if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded ) { return; }\n\n        if (this.hubCache && this.hubCache.isLoaded()) {\n          this.connectionTables = this.hubCache.getConnectionTables();\n          this.datalinks = this.hubCache.hub.dexihDatalinks;\n        }\n\n        if (this.isLoaded && this.action === 'new') { return; }\n\n        if (this.isLoaded && this.formsService.hasChanged) {\n            this.authService.confirmDialog('Synchronization warning',\n            'The hub was disconnected, meaning this edit could have been changed by another session.  Would you like to discard the current changes, and reload the latest version?')\n            .then(confirm => {\n                if (confirm) {\n                    this.load();\n                }\n            }).catch(reason => {\n                return;\n            });\n        } else {\n            this.load();\n        }\n\n        if (this.hubCache.isLoaded()) {\n          if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded || this.isLoaded) { return; }\n          this.isLoaded = true;\n        }\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Api Edit');\n    }\n  }\n\n  load() {\n    if (this.action === 'edit') {\n      // get the hub key from the route data, and update the service.\n      this.apiKey = + this.params['apiKey'];\n\n      if (!this.apiKey) {\n        this.hubService.addHubErrorMessage('There was no api specified to edit.');\n      } else {\n        if (!this.hubCache.hub || !this.hubCache.hub.dexihApis) {\n          this.hubService.addHubErrorMessage('The hub cache is not loaded.');\n        } else {\n\n          let api = this.hubCache.hub.dexihApis.find(c => c.key === this.apiKey);\n\n          this.selectQuery = api.selectQuery;\n          if (!this.selectQuery) { this.selectQuery = new SelectQuery(); }\n\n          this.formsService.api(api);\n          this.watchChanges();\n\n          this.getColumns();\n          // this.refresh();\n        }\n      }\n    }\n\n    if (this.action === 'new') {\n      let api = new DexihApi();\n      this.formsService.api(api);\n      this.watchChanges();\n\n      // update the url with the saved key\n      this._formChangeSubscription = this.formsService.getCurrentFormObservable().subscribe(form => {\n        let key = form.controls.key.value;\n        if (key) {\n          if (history.pushState) {\n            let newUrl = window.location.pathname.replace('/api-new', `/api-edit/${key}`)\n            this.router.navigateByUrl(newUrl);\n            this._formChangeSubscription.unsubscribe();\n          }\n        }\n      });\n    }\n  }\n\n  watchChanges() {\n    if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n    this._changesSubscription = merge(\n      this.formsService.currentForm.controls.sourceDatalinkKey.valueChanges,\n      this.formsService.currentForm.controls.sourceTableKey.valueChanges\n    ).subscribe(() => {\n      this.reset();\n      this.selectQuery = new SelectQuery();\n      this.getColumns();\n  //    this.refresh();\n  });\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._formChangeSubscription) { this._formChangeSubscription.unsubscribe(); }\n    if (this._changesSubscription) { this._changesSubscription.unsubscribe(); }\n    this.cancelToken.cancel();\n  }\n\n  close() {\n    this.authService.navigateUp();\n  }\n\n  getColumns() {\n    let apiForm = this.formsService.currentForm;\n\n    if (apiForm.controls.sourceType.value === eSourceType.Table && apiForm.controls.sourceTableKey.value > 0) {\n      let table = this.hubCache.getTable(apiForm.controls.sourceTableKey.value);\n      if (table) {\n        this.tableColumns = table.dexihTableColumns;\n        this.inputColumns = this.getInputColumns(table.dexihTableColumns);\n        return;\n      } else {\n        this.reset();\n      }\n    } else {\n      this.reset();\n    }\n\n    if (apiForm.controls.sourceType.value === eSourceType.Datalink && apiForm.controls.sourceDatalinkKey.value > 0) {\n      let datalink = this.datalinks.find(c => c.key === apiForm.controls.sourceDatalinkKey.value);\n      if (datalink) {\n        const ioColumns = new InputOutputColumns();\n        ioColumns.buildInputOutput(datalink);\n        this.tableColumns = ioColumns.getDatalinkOutputColumns(datalink);\n        this.inputColumns = this.getInputColumns(datalink.sourceDatalinkTable.dexihDatalinkColumns);\n      } else {\n        this.reset();\n      }\n    } else {\n      this.reset();\n    }\n  }\n\n  getInputColumns(columns: DexihColumnBase[]): InputColumn[] {\n    let inputColumns = columns.filter(c => c.isInput).map(c => {\n      return <InputColumn>  {\n          name: c.name, logicalName: c.logicalName, dataType: c.dataType, rank: c.rank, value: c.defaultValue};\n    });\n\n    return inputColumns;\n  }\n\n  reset() {\n    this.tableColumns = [];\n    this.inputColumns = [];\n    this.columns = null;\n    this.data = null;\n  }\n\n  refresh() {\n    let apiForm = this.formsService.currentForm;\n    if (apiForm.controls.sourceType.value === eSourceType.Datalink) {\n      this.hubService.previewDatalinkKeyData(apiForm.controls.sourceDatalinkKey.value, false,\n        this.selectQuery, this.inputColumns, apiForm.controls.parameters.value, this.cancelToken).then((result) => {\n        this.refreshDataSubject.next();\n        this.columns = result.columns;\n        this.data = result.data;\n      }).catch(() => {\n      });\n\n    }\n    if (apiForm.controls.sourceType.value === eSourceType.Table) {\n      this.hubService.previewTableKeyData(apiForm.controls.sourceTableKey.value,\n          false, this.selectQuery, this.inputColumns, apiForm.controls.parameters.value, this.cancelToken).then((result) => {\n        this.columns = result.columns;\n        this.data = result.data;\n      }).catch(() => {\n      });\n    }\n  }\n\n  download(format) {\n    let api = <DexihApi>this.formsService.currentForm.value;\n    let downloadObject = new DownloadObject();\n    if (api.sourceType === eSourceType.Table) {\n      downloadObject.objectKey = api.sourceDatalinkKey;\n      downloadObject.objectType = eDataObjectType.Datalink;\n    }\n    if (api.sourceType === eSourceType.Table) {\n      downloadObject.objectKey = api.sourceTableKey;\n      downloadObject.objectType = eDataObjectType.Table;\n    }\n\n    downloadObject.query = this.selectQuery;\n    this.hubService.downloadData([downloadObject], false, format, this.cancelToken)\n  }\n\n  public canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>((resolve) => {\n      if (this.formsService.hasChanged) {\n        this.authService.confirmDialog('The api has not been saved',\n          'The api changes have not been saved.  Do you want to discard the changes and exit?')\n          .then((confirm) => {\n              resolve(confirm);\n            }).catch(() => {\n              resolve(false);\n            });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  // @HostListener allows is to guard against browser refresh, close, etc.\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.formsService.hasChanged) {\n      $event.returnValue = 'The api changes have not been saved.  Do you want to discard the changes and exit?';\n    }\n  }\n}\n","<div class=\"container\">\n\t<d-widget title=\"Edit API\" iconClass=\"fa fa-lg fa-fw fa-feed\" [showCloseButton]=\"true\" [padding]=\"false\"\n\t\t(close)=\"close()\">\n\t\t<ng-template #header>\n\t\t\t<dexih-invalid-form-details [control]=\"formsService.currentForm\" (click)=\"formsService.showErrors()\"\n\t\t\t\tclass=\"mr-1\"></dexih-invalid-form-details>\n\t\t\t<download-button class=\"mr-1\" (download)=\"download($event)\"></download-button>\n\t\t\t<save-button *ngIf=\"hubCache.canWrite\" [formsService]=\"formsService\" class=\"mr-1\"></save-button>\n\t\t\t<cancel-button [formsService]=\"formsService\"></cancel-button>\n\t\t</ng-template>\n\n\t\t<d-widget-section title=\"Properties\" [showExpandButton]=\"true\">\n\t\t\t<form *ngIf=\"formsService.currentForm\" [formGroup]=\"formsService.currentForm\">\n\t\t\t\t<fieldset>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<form-input label=\"Api Name\" formControlName=\"name\" placeholder=\"Enter the api name.\"\n\t\t\t\t\t\t\t[autocapitalize]=\"true\" iconClass=\"fa fa-list\" [errors]=\"formsService.formErrors['name']\">\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<form-textarea label=\"Description\" [showPreview]=\"true\" [isHidden]=\"true\" formControlName=\"description\"\n\t\t\t\t\t\t\tplaceholder=\"Enter the description.\">\n\t\t\t\t\t\t</form-textarea>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t\t<form-checkbox label=\"Auto Start\" formControlName=\"autoStart\"\n\t\t\t\t\t\t\t\t\tnote=\"Re-start the API when the remote agent is restarted.\">\n\t\t\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t\t<form-input label=\"Log Directory\" formControlName=\"logDirectory\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter a directory to log api updates.\" iconClass=\"fa fa-list\"\n\t\t\t\t\t\t\t\t\t[errors]=\"formsService.formErrors['logDirectory']\"\n\t\t\t\t\t\t\t\t\tnote=\"Directory to create detailed logs of API calls.  Leave blank to exclude file logging.\">\n\t\t\t\t\t\t\t\t</form-input>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t\t<form-checkbox label=\"Cache Queries\" formControlName=\"cacheQueries\"\n\t\t\t\t\t\t\t\t\tnote=\"Cache API called to improve performance\">\n\t\t\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t\t<form-time label=\"Reset Cache Interval\" formControlName=\"cacheResetInterval\"\n\t\t\t\t\t\t\t\t\t[errors]=\"formsService.formErrors['resetCacheInterval']\"\n\t\t\t\t\t\t\t\t\tnote=\"The interval to reset the cache (forcing a reload of new data).\">\n\t\t\t\t\t\t\t\t</form-time>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t\t<form-select label=\"Data Source Type\" formControlName=\"sourceType\" [items]=\"sourceTypes\"\n\t\t\t\t\t\t\t\t\titemKey=\"key\" itemName=\"name\" iconClass=\"fa fa-database\"\n\t\t\t\t\t\t\t\t\tnote='Specify the source type for this view' [enableFilter]=\"false\">\n\t\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t<section class=\"form-group col-md-6\"\n\t\t\t\t\t\t\t\t*ngIf=\"formsService.currentForm.value.sourceType == eSourceType.Table\">\n\t\t\t\t\t\t\t\t<form-select label=\"Source Table\" formControlName=\"sourceTableKey\"\n\t\t\t\t\t\t\t\t\t[errors]=\"formsService.formErrors.sourceTableKey\" [items]=\"connectionTables\" parentName=\"name\"\n\t\t\t\t\t\t\t\t\tchildItems=\"dexihTables\" itemKey=\"key\" itemName=\"logicalName\"\n\t\t\t\t\t\t\t\t\tnote=\"Select the source table\">\n\t\t\t\t\t\t\t\t\t<table-edit-button [key]=\"formsService.currentForm.controls.sourceTableKey.value\"></table-edit-button>\n\t\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t<section class=\"form-group col-md-6\"\n\t\t\t\t\t\t\t\t*ngIf=\"formsService.currentForm.value.sourceType == eSourceType.Datalink\">\n\t\t\t\t\t\t\t\t<form-select label=\"Source Datalink\" formControlName=\"sourceDatalinkKey\"\n\t\t\t\t\t\t\t\t\t[errors]=\"formsService.formErrors.sourceDatalinkKey\" [items]=\"datalinks\" itemKey=\"key\"\n\t\t\t\t\t\t\t\t\titemName=\"name\" note='Select the source datalink'>\n\t\t\t\t\t\t\t\t\t<datalink-edit-button [key]=\"formsService.currentForm.controls.sourceDatalinkKey.value\"></datalink-edit-button>\n\t\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t</fieldset>\n\t\t\t</form>\n\t\t</d-widget-section>\n\n\t\t<d-widget-section *ngIf=\"formsService.currentForm\"  title=\"Parameters\" [showExpandButton]=\"true\" [padding]=\"true\">\n\t\t\t<input-parameters [showEdit]=\"true\" [parameters]=\"formsService.currentForm.controls.parameters\"\n\t\t\t\t[formsService]=\"formsService\">\n\t\t\t</input-parameters>\n\t\t</d-widget-section>\n\n\t\t<d-widget-section title=\"Data\" [showExpandButton]=\"true\">\n\n\t\t\t<div class=\"d-flex flex-wrap pt-1\" *ngIf=\"inputColumns && inputColumns.length > 0\">\n\t\t\t\t<span *ngFor=\"let column of inputColumns; let i = index\" class=\"input-group\">\n\t\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t\t<div class=\"input-group-text\">\n\t\t\t\t\t\t\t{{column.logicalName}}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<form-input name=\"column{{i}}\" class=\"form-control p-0\"\n\t\t\t\t\t\t[placeholder]=\"'Enter ' + column.logicalName\" [(ngModel)]=\"column.value\"></form-input>\n\t\t\t\t</span>\n\t\t\t</div>\n\n\t\t\t<section>\n\t\t\t\t<h5>Data Configuration</h5>\n\t\t\t\t<query-builder [selectQuery]=\"selectQuery\" [columns]=\"tableColumns\" [inputColumns]=\"inputColumns\" [parameters]=\"formsService?.currentForm?.controls.parameters.value\" [refreshEvent]=\"refreshDataObservable\" (onRefreshData)=\"refresh()\">\n\t\t\t\t</query-builder>\n\t\t\t</section>\n\n\t\t\t<d-table [enableMultiSelect]=\"false\" [enableSaveCsv]=\"true\" [csvFileName]=\"formsService.currentForm?.controls.name.value + '.csv'\"  [columns]=\"columns\" [data]=\"data\">\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<d-button-refresh class=\"mr-1\" (click)=\"refresh()\" text=\"Reload\"></d-button-refresh>\n\t\t\t\t</ng-template>\n\t\t\t</d-table>\n\t\t</d-widget-section>\n\t</d-widget>\n\n\t<dexih-help class=\"m-3\" title=\"Connections\" path=\"/assets/help/reference/api.md\"></dexih-help>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { TransformWriterResult } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'result-progress',\n    templateUrl: './progress.component.html'\n})\n\nexport class ProgressComponent implements OnInit {\n    @Input() public value: number;\n    @Input() public total: number;\n    @Input() public caption: string;\n    @Input() public color: string;\n\n    percent = '0%';\n\n    constructor() {\n\n    }\n\n    ngOnInit() {\n        if (this.value === 0) {\n            this.percent = '0%';\n        } else if (this.total === 0) {\n            this.percent = '100%';\n        } else {\n            let percent = 100 * this.value / this.total;\n            if (percent < 0) { percent = 0; }\n            if (percent > 100) { percent = 100; }\n            this.percent = percent.toString() + '%';\n        }\n    }\n}\n","<div class=\"\">\n    <span class=\"text\">  {{caption}}\n        <span class=\"float-right\">{{value}}/{{total}}</span> \n    </span>\n    <div class=\"progress\" style=\"width:100%\">\n        <div [ngClass]=\"['progress-bar', color]\" [ngStyle]=\"{width: percent}\">&nbsp;</div>\n    </div>\n</div>\n","export * from './connection-edit.component';\n","import { Component, OnInit, OnDestroy, HostListener, QueryList, ViewChildren } from '@angular/core';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\nimport { HubService } from '../../hub.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { FormArray, FormGroup } from '@angular/forms';\nimport { DashboardItemComponent } from './item/dashboard-item.component';\nimport { EventEmitter } from 'selenium-webdriver';\nimport { CancelToken } from '../../../+auth/auth.models';\nimport { HubCache, eCacheStatus, DataCache, PreviewResults } from '../../hub.models';\nimport { DexihView, DexihDashboard, DexihDashboardItem, DexihActiveAgent, DownloadObject, eDataObjectType } from '../../../shared/shared.models';\n\n@Component({\n  selector: 'dexih-dashboard-edit-form',\n  templateUrl: './dashboard-edit.component.html',\n  providers: [HubFormsService]\n})\nexport class DashboardEditComponent implements OnInit, OnDestroy {\n  @ViewChildren('dashboardItem') dashboardItems: QueryList<DashboardItemComponent>;\n\n  public dashboardKey: number;\n\n  public hubCache: HubCache;\n  public action: string; // new or edit\n  public pageTitle: string;\n  public params: Params;\n  public remoteAgent: DexihActiveAgent;\n\n  private _subscription: Subscription;\n  private _formChangeSubscription: Subscription;\n  private isLoaded = false;\n\n  public isRefreshing = false;\n  private refreshComplete = false;\n  private cancelToken = new CancelToken();\n\n  views: DexihView[];\n\n  constructor(\n    private hubService: HubService,\n    private authService: AuthService,\n    public formsService: HubFormsService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest([\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n        this.hubService.getRemoteAgentObservable()]\n      ).subscribe(result => {\n        let data = result[0];\n        this.params = result[1];\n        this.hubCache = result[2];\n        this.remoteAgent = result[3];\n\n        this.action = data['action'];\n        this.pageTitle = data['pageTitle'];\n\n        if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded ) { return; }\n\n        if (this.isLoaded && this.action === 'new') { return; }\n\n        this.views = this.hubCache.hub.dexihViews;\n\n        if (this.isLoaded && this.formsService.hasChanged) {\n            this.authService.confirmDialog('Synchronization warning',\n            'The hub was disconnected, meaning this edit could have been changed by another session.  Would you like to discard the current changes, and reload the latest version?')\n            .then(confirm => {\n                if (confirm) {\n                    this.load();\n                }\n            }).catch(reason => {\n                return;\n            });\n        } else {\n            this.load();\n        }\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Dashboard Edit');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._formChangeSubscription) { this._formChangeSubscription.unsubscribe(); }\n    this.cancelToken.cancel();\n  }\n\n  close() {\n    this.authService.navigateUp();\n  }\n\n  load() {\n    this.isLoaded = true;\n\n\n    if (this.action === 'edit') {\n      // get the hub key from the route data, and update the service.\n      this.dashboardKey = +this.params['dashboardKey'];\n\n      if (!this.dashboardKey) {\n        this.hubService.addHubErrorMessage('There was no dashboard specified to edit.');\n      } else {\n        if (!this.hubCache.hub || !this.hubCache.hub.dexihColumnValidations) {\n          this.hubService.addHubErrorMessage('The hub cache is not loaded.');\n        } else {\n          let dashboard = this.hubCache.hub.dexihDashboards.find(c => c.key === this.dashboardKey);\n\n          // create a copy of the dashboard to avoid changes to the hub cache.\n          dashboard = JSON.parse(JSON.stringify(dashboard));\n          this.formsService.dashboard(dashboard);\n        }\n      }\n    }\n\n    if (this.action === 'new') {\n      this.refreshComplete = true;\n      let dashboard = new DexihDashboard();\n      dashboard.minCols = 4;\n      dashboard.maxCols = 100;\n      dashboard.minRows = 4;\n      dashboard.maxRows = 100;\n      dashboard.autoRefresh = true;\n\n      this.formsService.dashboard(dashboard);\n      let runTime = this.formsService.currentForm.controls.runTime.value;\n      runTime.showEdit = true;\n      // this.formsService.currentForm.controls.runTime.setValue(runTime);\n      // this.add();\n\n      // update the url with the saved key\n      this._formChangeSubscription = this.formsService.getCurrentFormObservable().subscribe(form => {\n        let key = form.controls.key.value;\n        if (key) {\n          if (history.pushState) {\n            let newUrl = window.location.pathname.replace('/dashboard-new', `/dashboard-edit/${key}`)\n            this.router.navigateByUrl(newUrl);\n            this._formChangeSubscription.unsubscribe();\n          }\n        }\n      });\n    }\n\n    if (this.formsService.currentForm.controls.autoRefresh.value && this.remoteAgent && !this.refreshComplete) {\n      this.refreshComplete = true;\n      this.refresh();\n    }\n  }\n\n  // add() {\n  //   let form = this.formsService.currentForm;\n  //   let items = <FormArray> form.controls.dexihDashboardItems;\n  //   let item = new DexihDashboardItem();\n  //   item.cols = 1;\n  //   item.rows = 1;\n  //   item.x = 0;\n  //   item.y = 0;\n  //   let control = this.formsService.dashboardItem(item);\n  //   items.push(control);\n  // }\n\n  refresh() {\n    this.hubService.previewDashboard(this.formsService.currentForm.value,\n      this.formsService.currentForm.value.parameters, this.cancelToken).then(keys => {\n      let items = <FormArray> this.formsService.currentForm.controls.dexihDashboardItems;\n\n      keys.forEach(url => {\n        let item = <FormGroup> items.controls.find((form: FormGroup) => form.controls.key.value === url.dashboardItemKey);\n        if (item) {\n          let data = <DataCache> item.controls.runTime.value.data;\n          data.isRefreshing = true;\n          this.hubService.getRemoteResponse<PreviewResults>(url.dataKey, this.cancelToken).then(result => {\n            result.columns = this.authService.constructDataTableColumns(result.columns);\n            data.data.next(result);\n            data.isRefreshing = false;\n          }).catch();\n        }\n      });\n    });\n  }\n\n  public toggleEdit() {\n    let runTime = this.formsService.currentForm.controls.runTime.value;\n    runTime.showEdit = !runTime.showEdit;\n    this.formsService.currentForm.controls.runTime.setValue(runTime);\n  }\n\n  public toggleLock() {\n    let runTime = this.formsService.currentForm.controls.runTime.value;\n    runTime.lock = !runTime.lock;\n    this.formsService.currentForm.controls.runTime.setValue(runTime);\n  }\n\n  add(viewKey) {\n    let view = this.hubCache.hub.dexihViews.find(c => c.key === viewKey);\n    if (!view) { return; }\n    let form = this.formsService.currentForm;\n    let items = <FormArray> form.controls.dexihDashboardItems;\n    let item = new DexihDashboardItem();\n    item.key = this.hubCache.getNextSequence();\n\n    item.cols = 1;\n    item.rows = 1;\n    item.x = -1;\n    item.y = -1;\n\n    // look for an empty cell\n    found:\n    for (let row = 0; row < form.controls.maxRows.value; row++) {\n      for (let col = 0; col < form.controls.maxCols.value; col++) {\n        let occupied = false;\n        for (let i = 0; i < items.controls.length; i++) {\n          let currentItem = <DexihDashboardItem> items.controls[i].value;\n          if (currentItem.x <= col && (currentItem.x + currentItem.cols) > col &&\n            currentItem.y <= row && (currentItem.y + currentItem.rows) > row) {\n              occupied = true;\n              break;\n          }\n        }\n\n        if (!occupied) {\n          item.x = col;\n          item.y = row;\n\n          break found;\n        }\n      }\n    }\n    item.viewKey = viewKey;\n    item.name = view.name;\n    let formGroup = this.formsService.dashboardItem(item);\n    this.formsService.updateDashboardItemView(formGroup);\n    items.push(formGroup);\n  }\n\n  public newView() {\n    this.router.navigate(['view-new'], { relativeTo: this.route } )\n  }\n\n  download(format) {\n    let items = <DexihDashboardItem[]> this.formsService.currentForm.controls.dexihDashboardItems.value;\n\n    let downloadObjects = items.filter(c => c.viewKey).map(item => {\n      let view = this.hubCache.hub.dexihViews.find(c => c.key === item.viewKey);\n\n      let downloadObject = new DownloadObject();\n      if (view.sourceType === eDataObjectType.Datalink) {\n        downloadObject.objectKey = view.sourceDatalinkKey;\n        downloadObject.objectType = eDataObjectType.Datalink;\n      }\n      if (view.sourceType === eDataObjectType.Table) {\n        downloadObject.objectKey = view.sourceTableKey;\n        downloadObject.objectType = eDataObjectType.Table;\n      }\n      downloadObject.query = view.selectQuery;\n\n      return downloadObject;\n    })\n\n    this.hubService.downloadData(downloadObjects, false, format, this.cancelToken)\n  }\n\n  public canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>((resolve) => {\n      if (this.formsService.hasChanged) {\n        this.authService.confirmDialog('The dashboard has not been saved',\n          'The dashboard changes have not been saved.  Do you want to discard the changes and exit?')\n          .then((confirm) => {\n              resolve(confirm);\n            }).catch(() => {\n              resolve(false);\n            });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  // @HostListener allows is to guard against browser refresh, close, etc.\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.formsService.hasChanged) {\n      $event.returnValue = 'The dashboard changes have not been saved.  Do you want to discard the changes and exit?';\n    }\n  }\n}\n","<div class=\"container-fluid\" >\n\t<d-widget title=\"Dashboard - {{formsService?.currentForm?.controls.name.value}}\" iconClass=\"fa fa-lg fa-fw fa-pie-chart\" [showCloseButton]=\"true\" [padding]=\"false\"\n\t (close)=\"close()\">\n\t\t<ng-template #header>\n\t\t\t<dexih-invalid-form-details [control]=\"formsService.currentForm\" (click)=\"formsService.showErrors()\" class=\"mr-1\"></dexih-invalid-form-details>\n\t\t\t<d-button-edit class=\"mr-1\" (click)=\"toggleEdit()\" [text]=\"formsService.currentForm?.controls.runTime.value.showEdit ? 'Hide Edit' : 'Edit'\"></d-button-edit>\n\t\t\t<d-button [iconClass]=\"formsService.currentForm?.controls.runTime.value.lock ? 'fa fa-lock' : 'fa fa-unlock'\" class=\"mr-1\" (click)=\"toggleLock()\" [text]=\"formsService.currentForm?.controls.runTime.value.lock ? 'Unlock' : 'Lock'\"></d-button>\n\t\t\t<d-button-refresh class=\"mr-1\"  (click)=\"refresh()\"></d-button-refresh>\n\t\t\t<d-button-dropdown class=\"mr-1\" iconClass=\"fa fa-plus\" text=\"Add\">\n\t\t\t\t<a class=\"dropdown-item\" (click)=\"newView()\">(New View)</a>\n\t\t\t\t<li *ngFor=\"let view of views\"><a class=\"dropdown-item\" (click)=\"add(view.key)\">{{view.name}}</a></li>\n\t\t\t</d-button-dropdown>\n\t\t\t<download-button class=\"mr-1\" (download)=\"download($event)\"></download-button>\n\t\t\t<save-button *ngIf=\"hubCache.canWrite\" [formsService]=\"formsService\" class=\"mr-1\"></save-button>\n\t\t\t<cancel-button [formsService]=\"formsService\"></cancel-button>\n\t\t</ng-template>\n\n\t\t<router-outlet></router-outlet>\n\n\t</d-widget>\n</div>","import { Component, OnInit, Input, OnDestroy, Output, EventEmitter,\n    ViewChild, OnChanges, SimpleChanges } from '@angular/core';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { HubService } from '../../..';\nimport { Subscription, combineLatest, Subject } from 'rxjs';\nimport { HubCache, DexihInputParameter, DataCache, PreviewResults } from '../../../hub.models';\nimport { HubFormsService } from '../../../hub.forms.service';\nimport { DWidgetComponent } from 'ngx-d-components';\nimport { CancelToken } from '../../../../+auth/auth.models';\nimport { DexihView, InputParameterBase, InputParameter, eDataObjectType, eViewType, DexihActiveAgent } from '../../../../shared/shared.models';\nimport { AuthService } from '../../../../+auth/auth.service';\nimport { FormsService } from '../../../../shared/forms/forms.service';\n\n@Component({\n    selector: 'dashboard-item',\n    templateUrl: 'dashboard-item.component.html',\n    styleUrls: ['./dashboard-item.component.scss']\n})\n\nexport class DashboardItemComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() item: FormGroup;\n    @Input() showEdit = true;\n    @Input() showPreview = false;\n    @Input() refreshData: EventEmitter<string>;\n    @Input() isMaximized = false;\n\n    @Output() onRemove = new EventEmitter();\n    @Output() onMaximize = new EventEmitter<FormGroup>();\n\n    @ViewChild('widget', {static: true}) public widget: DWidgetComponent;\n\n    private _subscription: Subscription;\n    private _viewKeySubscription: Subscription;\n    private _refreshDataSubscription: Subscription;\n    private _parametersSubscription: Subscription;\n\n    hubCache: HubCache;\n    remoteAgent: DexihActiveAgent;\n\n    eViewType = eViewType;\n\n    views: DexihView[];\n    view: DexihView;\n    parameters: DexihInputParameter[];\n\n    private firstLoad = true;\n    private dialogOpen = false;\n\n    data: DataCache;\n    dataResult: PreviewResults;\n    public dataRows = [];\n\n    private refreshDataSubject: Subject<void> = new Subject<void>();\n    public refreshDataObservable = this.refreshDataSubject.asObservable();\n    \n    private cancelToken = new CancelToken();\n\n    public parentParameters;\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        public formsService: HubFormsService) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest([\n                this.hubService.getHubCacheObservable(),\n                this.hubService.getRemoteAgentObservable()]\n            ).subscribe(result => {\n                this.hubCache = result[0];\n                this.remoteAgent = result[1];\n\n                if (this.hubService.isHubCacheLoaded) {\n                    this.views = this.hubCache.hub.dexihViews;\n                    if (this.item?.controls.viewKey) {\n                        this.view = this.hubCache.hub.dexihViews.find(c => c.key === this.item.controls.viewKey.value);\n\n                        this.data = <DataCache> this.item.controls.runTime.value.data;\n\n                        if (this.data) {\n                            this._refreshDataSubscription = this.data.data.subscribe(dataResult => {\n                                if (!dataResult) {\n                                    return;\n                                }\n\n                                this.dataResult = dataResult;\n\n                                if (!dataResult.viewConfig.animateConfig) {\n                                    this.dataRows = this.dataResult.data;\n                                }\n\n                                if (dataResult.status) {\n                                    this.hubService.addHubMessage(dataResult.status, false, this.view.name);\n                                }\n                            });\n\n                        } else if (this.remoteAgent) {\n                            if (!this.firstLoad) {\n                                if (!this.dialogOpen) {\n                                    this.dialogOpen = true;\n                                    this.authService.confirmDialog('Remote Agent Available',\n                                        'A remote agent is available, would you like to refresh the data?').then(confirm => {\n                                            if (confirm) {\n                                                this.refresh();\n                                            }\n                                            this.dialogOpen = false;\n                                        });\n                                }\n                            } else {\n                                this.refresh();\n                            }\n\n                            this.firstLoad = false;\n                        }\n                    }\n\n                    this.parentParameters = this.formsService.currentForm.controls.parameters.value;\n                    if (this._parametersSubscription) { this._parametersSubscription.unsubscribe(); }\n                    this._parametersSubscription = this.formsService.currentForm.controls.parameters.valueChanges.subscribe(value => {\n                        this.parentParameters = value;\n                    });\n                }\n            });\n\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'View Index');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._viewKeySubscription) { this._viewKeySubscription.unsubscribe(); }\n        if (this._refreshDataSubscription) { this._refreshDataSubscription.unsubscribe(); }\n        if (this._parametersSubscription) { this._parametersSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        let itemChange = changes['item'];\n        if (itemChange) {\n            let newItem = <FormGroup> itemChange.currentValue;\n\n            if (this.views && newItem.value) {\n                this.view = this.hubCache.hub.dexihViews.find(c => c.key === newItem.value);\n            }\n            if (this._viewKeySubscription) { this._viewKeySubscription.unsubscribe(); }\n            this._viewKeySubscription = newItem.controls.viewKey.valueChanges.subscribe(viewKey => {\n                this.formsService.updateDashboardItemView(newItem);\n            });\n        }\n    }\n\n    // public updateView(viewKey) {\n    //     if (this.views && viewKey) {\n    //         this.view = this.hubCache.hub.dexihViews.find(c => c.key === viewKey);\n    //         if (this.view) {\n    //             this.item.controls.name.setValue(this.view.name);\n    //             this.item.controls.runTime.value.data = new DataCache();\n\n    //             // reset parameters.\n    //             let formParameters = <FormArray> this.item.controls.parameters;\n    //             let currentParameters = <DexihInputParameter[]> formParameters.value;\n\n    //             formParameters.clear();\n\n    //             let parameters = <InputParameterBase[]> this.view.parameters;\n    //             if (this.view.sourceType === eDataObjectType.Datalink) {\n    //                 let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === this.view.sourceDatalinkKey);\n    //                 if (datalink && datalink.parameters) {\n    //                     parameters = parameters.concat(datalink.parameters);\n    //                 }\n    //             }\n\n    //             parameters.forEach(parameter => {\n    //                 let currentParameter = currentParameters.find( c => c.name === parameter.name);\n    //                 let newParameter = new InputParameterBase();\n    //                 if (currentParameter) {\n    //                     newParameter.name = currentParameter.name;\n    //                     newParameter.value = currentParameter.value;\n    //                 } else {\n    //                     newParameter.name = parameter.name;\n    //                     newParameter.value = parameter.value;\n    //                 }\n    //                 let newFormParameter = this.formsService.parameter(newParameter);\n    //                 formParameters.push(newFormParameter);\n    //             });\n    //         }\n    //     }\n    // }\n\n    public refresh() {\n        let preview = this.hubService.previewViewKey(this.item.controls.viewKey.value, null,\n            this.formsService.currentForm.controls.parameters.value,\n        this.item.controls.parameters.value, this.cancelToken);\n        this.data = <DataCache> this.item.controls.runTime.value.data;\n        this.data.refresh(preview);\n        preview.then(results => {\n            this.refreshDataSubject.next();\n            this.dataResult = results;\n            if (!this.dataResult.viewConfig.animateConfig) {\n                this.dataRows = this.dataResult.data;\n            }\n        }).catch(reason => {\n            this.hubService.addHubMessage(reason);\n        });\n    }\n\n    parameterChange() {\n        this.refresh();\n    }\n\n    public toggleEdit() {\n        this.showEdit = !this.showEdit;\n    }\n\n    removeItem($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        this.onRemove.emit();\n    }\n\n    public maximise() {\n        this.onMaximize.emit(this.item);\n    }\n}\n","<div class=\"side-menu\">\n    <div class=\"side-menu-content\">\n        <div class=\"spin-icon\">\n            <i class=\"fa fa-cog fa-spin\"></i>\n        </div>\n        <div class=\"side-menu-box\">\n            <div class=\"bg-light rounded p-1\">\n                <div>\n                    <d-button-refresh [compact]=\"true\" (click)=\"refresh()\"></d-button-refresh>\n                    <d-button-edit *ngIf=\"!this.showEdit\" class=\"ml-1\" [compact]=\"true\" (click)=\"toggleEdit()\">\n                    </d-button-edit>\n                    <d-button-preview *ngIf=\"this.showEdit\" class=\"ml-1\" [compact]=\"true\" (click)=\"toggleEdit()\">\n                    </d-button-preview>\n                    <d-button *ngIf=\"!isMaximized\" class=\"ml-1\" buttonClass=\"btn btn-primary\"\n                        iconClass=\"fa fa-window-maximize text-white\" (click)=\"maximise()\" tooltip=\"Maximize window\">\n                    </d-button>\n                    <d-button *ngIf=\"isMaximized\" class=\"ml-1\" buttonClass=\"btn btn-primary\"\n                        iconClass=\"fa fa-window-minimize text-white\" (click)=\"maximise()\" tooltip=\"Minimize window\">\n                    </d-button>\n                    <d-button-delete class=\"ml-1\" (click)=\"removeItem($event)\" [compact]=\"true\">\n                    </d-button-delete>\n                </div>\n\n                <div *ngIf=\"!showEdit && !showPreview && view\">\n\n                    <!-- <div class=\"m-1\" *ngIf=\"inputColumns && inputColumns.length > 0\">\n                        <span *ngFor=\"let column of inputColumns; let i = index\" class=\"input-group\">\n                            <div class=\"input-group-prepend\">\n                                <div class=\"input-group-text\">\n                                    {{column.logicalName}}\n                                </div>\n                            </div>\n                            <form-input name=\"column{{i}}\" class=\"form-control p-0\"\n                                [placeholder]=\"'Enter ' + column.logicalName\" [(ngModel)]=\"column.value\"></form-input>\n                        </span>\n                    </div> -->\n                    <div class=\"m-1\" *ngIf=\"item.controls.parameters.controls.length > 0\">\n                        <input-parameters [showEdit]=\"false\" [parameters]=\"item.controls.parameters\"\n                            [formsService]=\"formsService\" [parentParameters]=\"parentParameters\"\n                            (onRefreshData)=\"refresh()\" [refreshEvent]=\"refreshDataObservable\">\n                        </input-parameters>\n                    </div>\n\n                    <div *ngIf=\"!data?.isRefreshing && dataResult?.columns?.length > 0 && dataResult?.viewConfig && dataResult?.data\"\n                        class=\"m-1\" style=\"z-index: 99999;\">\n                        <series-animate \n                            [animateConfig]=\"dataResult?.viewConfig.animateConfig\" [columns]=\"dataResult?.columns\"\n                             [baseData]=\"dataResult?.data\" [(data)]=\"dataRows\">\n                        </series-animate>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"showEdit\" class=\"p-3 gridster-item-content\">\n    <form [formGroup]=\"item\">\n        <section>\n            <form-input label=\"Item Name\" formControlName=\"name\" placeholder=\"Enter the dashboard item name.\"\n                [autocapitalize]=\"on\" iconClass=\"fa fa-list\">\n            </form-input>\n        </section>\n        <section>\n            <form-textarea label=\"Description\" [showPreview]=\"true\"  [isHidden]=\"true\" formControlName=\"description\"\n                placeholder=\"Enter the description.\">\n            </form-textarea>\n        </section>\n        <section>\n            <form-select label=\"Select View\" formControlName=\"viewKey\" [items]=\"views\" itemKey=\"key\" itemName=\"name\">\n                <view-edit-button [key]=\"item.controls.viewKey.value\"></view-edit-button>\n            </form-select>\n        </section>\n        <section>\n            <form-checkbox label=\"Show Header\" formControlName=\"header\">\n            </form-checkbox>\n            <form-checkbox label=\"Allow Scrolling\" formControlName=\"scrollable\">\n            </form-checkbox>\n        </section>\n    </form>\n\n    <input-parameters [showEdit]=\"showEdit\" [allowAddRemove]=\"false\" [parameters]=\"item.controls.parameters\" [formsService]=\"formsService\"\n        [parentParameters]=\"parentParameters\" (onRefreshData)=\"refresh()\" [refreshEvent]=\"refreshDataObservable\">\n    </input-parameters>\n\n</div>\n\n<ng-template [ngIf]=\"!showEdit\">\n\n    <div *ngIf=\"!showPreview && view\" class=\"box\" [ngStyle]=\"{'overflow': item.controls.scrollable.value ? 'scroll' : 'hidden'}\">\n        <div *ngIf=\"data?.isRefreshing; else notRefreshing\" class=\"p-3\">\n            <div class=\"dexih-loader\"></div> Refreshing, please wait...\n        </div>\n        \n        <ng-template #notRefreshing>\n\n            <div *ngIf=\"item.controls.header.value\" class=\"box-header bg-secondary text-white\">\n                <div class=\"m-3\">\n                    <b>{{item.controls.name.value}}</b>\n                </div>\n            </div>\n        \n            <div *ngIf=\"item.controls.description.value\" class=\"box-header\">\n                <div class=\"m-1\">\n                    <markdown [data]=\"item.controls.description.value\"></markdown>\n                </div>\n            </div>\n    \n\n            <div class=\"box-content\"\n                *ngIf=\"!data?.isRefreshing && dataResult?.columns?.length > 0 && dataResult?.data?.length > 0; else elseBlock\">\n\n                <d-table *ngIf=\"view.viewType == eViewType.Table\" [enableMultiSelect]=\"false\" [enableResponsive]=\"false\"\n                    [enableSaveCsv]=\"false\" [csvFileName]=\"item.controls.name.value + '.csv'\" [enableFilter]=\"false\" [columns]=\"dataResult.columns\" [data]=\"dataRows\">\n                </d-table>\n\n                <div class=\"h-100\">\n                    <chart-view [responsive]=\"true\" *ngIf=\"view.viewType == eViewType.Chart\" [columns]=\"dataResult.columns\"\n                        [data]=\"dataRows\" [config]=\"view.chartConfig\">\n                    </chart-view>\n                </div>\n            </div>\n            <ng-template #elseBlock>\n                <div class=\"alert alert-info\" (click)=\"refresh()\">\n                    <i class=\"fa fa-warning\"></i>\n                    Select to refresh the view.\n                </div>\n            </ng-template>\n        </ng-template>\n    </div>\n</ng-template>","\nexport {SearchComponent} from './search.component';\nexport {SearchModule} from './search.module';\n","export * from './connection-index.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject, Observable, combineLatest } from 'rxjs';\nimport { HubCache } from '../hub.models';\nimport { DexihTag, eSharedObjectType } from '../../shared/shared.models';\nimport { HubService } from '..';\nimport { AuthService } from '../../+auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HubFormsService } from '../hub.forms.service';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n@Component({\n    selector: 'tags',\n    templateUrl: 'tags.component.html',\n    providers: [HubFormsService],\n    animations: [\n        // trigger name for attaching this animation to an element using the [@triggerName] syntax\n        trigger('slideDown', [\n            state('hide', style({ height: 0, overflow: 'hidden' })),\n            state('show', style({ height: '*', overflow: 'unset' })),\n            transition('hide <=> show', animate('200ms ease-in')),\n        ])\n        ]\n})\nexport class TagsComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n\n    hubCache: HubCache;\n\n    tags: Array<DexihTag>;\n    state = 'hide';\n\n    colors = [\n        { name: 'primary', color: '#3a5f8d' },\n        { name: 'secondary', color : '#89B3BF'},\n        { name: 'success', color : '#479762'},\n        { name: 'warning', color : '#c4872a' },\n        { name: 'danger', color : '#f44336' },\n        { name: 'yellow', color : 'yellow'},\n        { name: 'pink', color : 'pink'},\n        { name: 'purple', color : 'purple'},\n        { name: 'dark', color : '#1F2624'},\n    ]\n\n    columns = [\n        { name: 'name', title: 'Name', footer: 'description', format: 'Md' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        public formsService: HubFormsService,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        // watch for any changes in the validations.\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest(\n                this.route.queryParams,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                let params = result[0];\n                this.hubCache = result[1];\n\n                if (params['key']) {\n                    let tag = this.hubCache.hub.dexihTags.find(c => c.key === +params['key']);\n                    if (tag) {\n                        let editTag = this.hubCache.hub.dexihTags.find(c => c.key === tag.key);\n                        this.formsService.tag(editTag);\n                        this.state = 'show';\n                    }\n                }\n\n                this.update();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'View Index');\n        }\n\n\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n\n    update() {\n        if (this.hubCache && this.hubCache.isLoaded()) {\n            let tags: Array<DexihTag>;\n            tags = this.hubCache.hub.dexihTags.filter(c => c.isValid);\n            let tableData = tags.map(tag => {\n                return {\n                    key: tag.key,\n                    name: tag.name,\n                    description: tag.description,\n                    color: tag.color,\n                    updateDate: tag.updateDate,\n                };\n            });\n            this._tableData.next(tableData);\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    new() {\n        let tag = new DexihTag();\n        this.formsService.tag(tag);\n        this.state = 'show';\n    }\n\n    edit(tag: DexihTag) {\n        let editTag = this.hubCache.hub.dexihTags.find(c => c.key === tag.key);\n        this.formsService.tag(editTag);\n        this.state = 'show';\n        if (history.pushState) {\n            this.router.navigateByUrl(window.location.pathname + `?key=${tag.key}`);\n        }\n        document.body.scrollTop = 0; // For Safari\n        document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\n    }\n\n    delete(tags: DexihTag[]) {\n        this.hubService.deleteTags(tags);\n    }\n\n    save() {\n        this.formsService.save(false).then(() => {\n            this.hide();\n        }).catch();\n    }\n\n    cancel() {\n        this.hide();\n    }\n\n    hide() {\n        this.state = 'hide';\n        if (history.pushState) {\n            if (window.location.search) {\n                this.router.navigateByUrl(window.location.pathname);\n            }\n          }\n    }\n\n    selectColor(color) {\n        this.formsService.currentForm.controls.color.setValue(color.color);\n    }\n\n    export(items: Array<DexihTag>) {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(cache.hub.hubKey, '');\n        items.forEach(item => { cache.cacheAddTag(item.key, hub); });\n\n        let filename = items.length === 1 ? 'Tag - ' + items[0].name + '.json' : 'tags.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    watchChanges() {\n        // watch the current validation in case it is changed in another session.\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n            if (hubCacheChange.changeClass === eSharedObjectType.Tags) {\n                this.update();\n            }\n        });\n    }\n}\n","<div class=\"container\">\n    <d-widget title=\"Tags\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-tags\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\t>\n\t\t\t<d-table \n\t\t\t\t[enableMultiSelect]=\"true\"\n                [enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n                [columns]=\"columns\"\n\t\t\t\t[dataObservable]=\"tableData\"\n                (rowClick)=\"edit($event)\"\n                rowStatusHeading=\"Color\"\n\t\t\t\t>\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n\t\t\t\t\t<d-button-edit class=\"mr-1\" (click)=\"edit(item)\"></d-button-edit>\n\t\t\t\t</ng-template>\n\n                    <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n                        <d-button-save-local class=\"mr-1\" (click)=\"export(items)\"></d-button-save-local>\n                        <d-button-delete class=\"mr-1\" *ngIf=\"hubCache.canWrite\" (click)=\"delete(items)\"></d-button-delete>\n                    </ng-template>\n    \n                    <ng-template #actions let-items=\"items\">\n                        <d-button-new class=\"mr-1\" *ngIf=\"hubCache.canWrite\" (click)=\"new()\"></d-button-new>\n                    </ng-template>\n\n                    <ng-template #rowStatus select=\"rowStatus\" let-item=\"item\">\n\t\t\t\t\t\t<div (click)=\"edit(item)\" class=\"alert p-1 text-center\" [ngStyle]=\"{'background-color': item.color, 'margin-bottom': '0' }\">\n                            <span class=\"blend-text  font-weight-bold\">{{item.name}}</span>\n                        </div>\n\t\t\t\t\t</ng-template>\n    \n                    <ng-template #tableHeader>\n                        <div [@slideDown]='state' class=\"card mt-2\" style=\"width: 100%;\">\n                            <div class=\"card-header text-white bg-primary\">\n                                <b>Add/Edit Tag</b>\n                            </div>\n                            <div class=\"card-body\">\n                                <form *ngIf=\"formsService.currentForm\" [formGroup]=\"formsService.currentForm\">\n                                    <div class=\"form-row\">\n                                        <section class=\"form-group col-md-3\">\n                                            <form-input label=\"Tag Name\" formControlName=\"name\" placeholder=\"Enter the name.\"\n                                                [autocapitalize]=\"true\" iconClass=\"fa fa-list\" [errors]=\"formsService.formErrors['name']\">\n                                            </form-input>\n                                        </section>\n                                        <section class=\"form-group col-md-9\">\n                                            <div>\n                                                <label class=\"mt-1\">Color</label>\n                        \n                                                <div class=\"input-group m-0\">\n                                                    <label class=\"btn mr-1\" style=\"height: '38px'; width: '76px'\" [style.background-color]=\"formsService.currentForm.controls.color.value\">\n                                                        <input formControlName=\"color\" hidden type=\"color\">\n                                                    </label>\n                                                    <form-input class=\"mr-3\" style=\"height: '38px'; width: '90px'\" formControlName=\"color\" placeholder=\"color\"></form-input>\n                                                    <div class=\"btn-group-toggle\" data-toggle=\"buttons\">\n                                                        <button *ngFor=\"let color of colors\" class=\"btn mr-1\" (click)=\"selectColor(color)\" [style.background-color]=\"color.color\" style=\"height: '38px'; width: '38px'\"></button>\n                                                    </div>\n                                                </div>\n                        \n                                            </div>\n                                        </section>\n                                    </div>\n                                    <div class=\"form-row\">\n                                        <section class=\"col-md-12\">\n                                            <form-textarea label=\"Description\" [showPreview]=\"true\" [isHidden]=\"true\" formControlName=\"description\" placeholder=\"Enter the description.\" >\n                                            </form-textarea>\n                                        </section>\n                                    </div>\n                        \n                                </form>\n                            </div>\n                            <div class=\"card-footer\">\n                                <d-button-save class=\"mr-1\" (click)=\"save()\"></d-button-save>\n                                <d-button-cancel class=\"mr-1\" (click)=\"cancel()\"></d-button-cancel>\n                            </div>\n                        </div>\n                    </ng-template>\n    \n\t\t\t</d-table>\n\n\t</d-widget>\n\t\n\t<dexih-help class=\"m-3\" title=\"Views\" path=\"/assets/help/reference/tag.md\"></dexih-help>\n\n</div>\n\n\n","export * from './connection-index/connection-index.component';\nexport * from './connection-edit/connection-edit.component';\nexport * from './connection-import/connection-import.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubService } from '../../hub.service';\nimport { HubCache } from '../../hub.models';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable, Subscription, combineLatest} from 'rxjs';\nimport { CancelToken } from '../../../+auth/auth.models';\nimport { TransformWriterResult, eSharedObjectType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'results-view',\n    templateUrl: './results-view.component.html',\n    styles: []\n})\nexport class ResultsViewComponent implements OnInit, OnDestroy {\n    hubCache: HubCache;\n    referenceKeys: Array<number>;\n\n    private _subscription: Subscription;\n    private _transformWriterResultChangeSubscription: Subscription;\n\n    public auditResult: TransformWriterResult;\n\n    showPage = false;\n    showPageMessage = 'Loading...';\n    view: string;\n\n    resultChartData: Array<any>;\n\n    private cancelToken = new CancelToken();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.route.queryParams,\n                this.hubService.getHubCacheObservable(true),\n                this.hubService.getRemoteAgentObservable(true)\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                let queryParams = result[2];\n                this.hubCache = result[3];\n                let remoteAgent = result[4]\n\n                let auditConnectionKey = +params['auditConnectionKey'];\n                let auditKey = +params['auditKey'];\n\n                this.showPage = false;\n                this.showPageMessage = 'Waiting for an active remote agent...';\n\n                this.view = queryParams['view'];\n                if (!this.view) { this.view = 'Stats'; }\n\n                if (remoteAgent) {\n                    this.showPage = true;\n                    this.showPageMessage = '';\n                    this.hubService.getResultDetail(auditConnectionKey, auditKey, this.cancelToken).then(r => {\n                        this.auditResult = r[0];\n                    });\n                }\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Results View');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._transformWriterResultChangeSubscription) { this._transformWriterResultChangeSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    watchChanges() {\n        // watch the current connection in case it is changed in another session.\n        if (this._transformWriterResultChangeSubscription) { this._transformWriterResultChangeSubscription.unsubscribe(); }\n        this._transformWriterResultChangeSubscription = this.hubService.getTransformWriterResultChangeObservable()\n        .subscribe(writerResult => {\n            if (this.auditResult && writerResult.auditConnectionKey === this.auditResult.auditConnectionKey &&\n                    writerResult.auditKey === this.auditResult.auditKey) {\n                this.auditResult = writerResult;\n            }\n        });\n    }\n\n}\n\n\n","<div class=\"container-fluid\">\n\t<d-widget *ngIf=\"auditResult\" [title]=\"auditResult?.referenceName\" iconClass=\"fa fa-lg fa-fw fa-trophy\"\n\t[showCloseButton]=\"true\" (close)=\"close()\">\n\n\t\t<ng-template #header>\n\t\t\t\t<ul class=\"nav nav-tabs card-header-tabs\">\n\t\t\t\t<li class=\"nav-item\" >\n\t\t\t\t\t<a class=\"nav-link\" [class.active]=\"view=='Stats'\" routerLink=\".\" [queryParams]=\"{view: 'Stats'}\"><i class=\"fa fa-clock-o\"></i> <span class=\"ml-1 d-none d-md-inline\">Execution Stats</span></a>\n\t\t\t\t</li>\n\n\t\t\t\t<li class=\"nav-item\" *ngIf=\"auditResult.profileTableName && ( auditResult?.auditType == 'DatalinkStep' || auditResult?.auditType == 'Datalink')\" >\n\t\t\t\t\t<a class=\"nav-link\" [class.active]=\"view=='Profile'\" routerLink=\".\" [queryParams]=\"{view: 'Profile'}\"><i class=\"fa fa-tachometer\" ></i> <span class=\"ml-1 d-none d-md-inline\">Profile Data</span></a>\n\t\t\t\t</li>\n\n\t\t\t\t<li class=\"nav-item\" *ngIf=\"auditResult?.auditType == 'DatalinkStep' || auditResult?.auditType == 'Datalink' || auditResult?.auditType == 'Table' || auditResult?.auditType == 'DatalinkTestStep'\" >\n\t\t\t\t\t<a class=\"nav-link\" [class.active]=\"view=='Preview'\" routerLink=\".\" [queryParams]=\"{view: 'Preview'}\"><i class=\"fa fa-table\" ></i> <span class=\"ml-1 d-none d-md-inline\">Preview</span></a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</ng-template>\n\t\t<div [ngSwitch]=\"view\">\n\t\t\t<div *ngSwitchCase=\"'Stats'\">\n\t\t\t\t<stats [auditResult]=\"auditResult\"></stats>\n\t\t\t</div>\n\t\t\t<div *ngSwitchCase=\"'Profile'\">\n\t\t\t\t<profile-results [auditResult]=\"auditResult\"></profile-results>\n\t\t\t</div>\n\t\t\t<div *ngSwitchCase=\"'Preview'\">\n\t\t\t\t<preview-results [auditResult]=\"auditResult\"></preview-results>\n\t\t\t</div>\n\t\t</div>\n\t</d-widget>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { DexihDatajob, InputParameter } from '../../../shared/shared.models';\nimport { HubCache } from '../../hub.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n\n    selector: 'datajob-run',\n    templateUrl: './datajob-run.component.html'\n})\nexport class DatajobRunComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n    private cancelToken: CancelToken = new CancelToken();\n\n    public datajobs: DexihDatajob[];\n    private hubCache: HubCache;\n\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n\n    public truncateTable = false;\n    public resetIncremental = false;\n    public resetValue = '';\n\n    parameters: InputParameter[];\n\n    isRefreshing = false;\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private route: ActivatedRoute) {\n\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest([\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.hubService.getRemoteAgentObservable()]\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n\n                this.action = data['action'];\n                this.pageTitle = data['pageTitle'];\n\n                if (this.hubCache.isLoaded()) {\n                    let datajobKeys: string = params['datajobKeys'];\n                    this.datajobs = new Array<DexihDatajob>();\n\n                    if (datajobKeys) {\n                        this.parameters = [];\n                        let datajobKeyArray = datajobKeys.split('|').map(c => +c);\n                        datajobKeyArray.forEach(datajobKey => {\n                            let datajob = this.hubCache.hub.dexihDatajobs.find(c => c.key === datajobKey);\n                            this.datajobs.push(datajob);\n                            datajob.parameters.forEach(c => {\n                                if (this.parameters.findIndex(p => c.name === p.name) < 0) {\n                                    this.parameters.push({name: c.name, value: c.value, rank: c.rank});\n                                }\n                            });\n                        });\n                    }\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datajob Run');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    run() {\n        this.hubService.runDatajobs(this.datajobs, this.truncateTable,\n            this.resetIncremental, this.resetValue, this.parameters, this.cancelToken);\n        this.authService.navigateUp();\n    }\n\n    activate() {\n        this.hubService.activateDatajobs(this.datajobs, this.parameters, this.cancelToken);\n        this.authService.navigateUp();\n    }\n\n}\n","<div class=\"container\">\n    <d-widget title=\"Datajob Options\" iconClass=\"fa fa-lg fa-fw fa-exchange\"  [showCloseButton]=\"true\" (close)=\"close()\" [padding]=\"true\">\n            <ng-template #header>\n                <d-button-refresh class=\"mr-1\" (click)=\"run()\" text=\"Run Now\"></d-button-refresh>\n                <d-button-refresh class=\"mr-1\" (click)=\"activate()\" text=\"Activate Triggers\"></d-button-refresh>\n                <d-button-cancel (click)=\"close()\"></d-button-cancel>\n            </ng-template>\n\n        <ng-template #subHeader>\n            <label class=\"label\">Run the following datajobs(s):</label>\n            <div>\n                <div class=\"row\">\n                    <span class=\"col alert alert-primary m-1\" *ngFor=\"let datajob of datajobs | fieldSort: 'name'\">\n                        {{datajob.name}}\n                    </span>\n                </div>\n            </div>\n        </ng-template>\n            \n\t\t<form>\n\t\t\t<fieldset>\n\t\t\t\t<section>\n\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t<section class=\"col\">\n\t\t\t\t\t\t\t<form-checkbox label=\"Truncate all target tables before execution.\" [(ngModel)]=\"truncateTable\" [ngModelOptions]=\"{standalone: true}\"></form-checkbox>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\n                    <div class=\"form-row\">\n                        <section class=\"col\">\n                                <form-checkbox label=\"Reset the source incremental value, and load all source rows.\" [(ngModel)]=\"resetIncremental\" [ngModelOptions]=\"{standalone: true}\"></form-checkbox>\n                            </section>\n                        </div>\n\n                    <div class=\"form-row\">\n                        <section class=\"col\">\n                            <form-input label=\"Incremental Value\" [(ngModel)]=\"resetValue\" [ngModelOptions]=\"{standalone: true}\" placeholder=\"\" iconClass=\"fa fa-list\" note=\"Use a specific incremental value to start loading source rows from (leave empty for null value)\" >\n                                </form-input>\n                        </section>\n                    </div>\n    \n    \n                    <div class=\"d-flex flex-wrap pt-1\" *ngIf=\"parameters && parameters.length > 0\" >\n                        <div class=\"input-group-text\">\n                            Input Parameters\n                        </div>\n                \n                        <input-parameters-view [parameters]=\"parameters\"></input-parameters-view>\n                    </div>\n\t\t\t\t</section>\n\t\t\t</fieldset>\n\t\t</form>\n\n    </d-widget>\n</div>","import { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubService } from '../../hub.service';\nimport { Observable, BehaviorSubject, Subscription} from 'rxjs';\nimport { importActions, HubCache, sharedObjectProperties } from '../../hub.models';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { Import, eImportAction, ImportAction, eSharedObjectType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'import',\n    templateUrl: './import.component.html',\n    providers: [HubFormsService]\n})\n\nexport class ImportComponent implements OnInit, OnDestroy {\n    @ViewChild('fileInput', { static: true }) fileInput: ElementRef;\n\n    private _hubCacheSubscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n\n    private hubCache: HubCache;\n\n    public automaticUpload = true;\n\n    pageTitle = 'Import Objects';\n    showPage = false;\n    showPageMessage = 'Loading...';\n    messageId: string;\n\n    importActions = importActions;\n\n    public import: Import;\n    public importOptions: ImportAction[];\n    eSharedObjectType = eSharedObjectType;\n\n    columns = [\n        { name: 'name', title: 'Name', format: 'Md', description: 'description' },\n        { name: 'objectType', title: 'Type', format: '' },\n        { name: 'importAction', title: 'Action', format: 'Enum', enum: eImportAction },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        public hubFormsService: HubFormsService\n    ) { }\n\n    ngOnInit() {\n        this.importOptions = sharedObjectProperties.map(c => <ImportAction> { action: eImportAction.Replace, objectType: c.type })\n\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheObservable().subscribe(hubCache => {\n            this.hubCache = hubCache;\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheSubscription) { this._hubCacheSubscription.unsubscribe(); }\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    public doImport(file: File) {\n\n        const form: FormData = new FormData();\n        form.append('file', file, file.name);\n        form.append('hubKey', this.hubCache.hub.hubKey.toString());\n\n        for (let i = 0; i < this.importOptions.length; i++) {\n            form.append(`importActions[${i}].action`, this.importOptions[i].action.toString());\n            form.append(`importActions[${i}].objectType`, this.importOptions[i].objectType.toString());\n        }\n\n        this.authService.postForm('/api/Hub/ImportPlan', form).then(result => {\n            this.import = result;\n            this.refreshImport();\n        });\n    }\n\n    public uploadFile(event) {\n        let files = event.srcElement.files;\n        this.doImport(files[0]);\n        // this.fileInput.nativeElement.value = '';\n    }\n\n    public filesDrop(files: any) {\n        this.doImport(files[0]);\n    }\n\n    public refreshImport() {\n        let objects = [];\n\n        sharedObjectProperties.forEach(o => {\n            let items = this.import[o.property];\n\n            items.forEach(item => {\n                objects.push({\n                    objectType: o.property,\n                    name: item.item.name,\n                    importAction: item.importAction,\n                    item: item,\n                })\n            });\n        });\n\n        this._tableData.next(objects);\n    }\n\n    public reset() {\n        this._tableData.next(null);\n    }\n\n    public importSelected(items) {\n        let newImport = new Import();\n\n        items.forEach(item => {\n            if (!newImport[item.objectType]) {\n                newImport[item.objectType] = [];\n            }\n            newImport[item.objectType].push(item.item);\n        });\n\n        this.hubService.importPackage(newImport).then(() => {\n            this.authService.navigateUp();\n        });\n    }\n\n    public importAll() {\n        this.hubService.importPackage(this.import).then(() => {\n            this.authService.navigateUp();\n        });\n    }\n\n}\n","<div class=\"container\">\n    <d-widget *ngIf=\"!(tableData | async)?.length\" title=\"Import Objects\"  iconClass=\"fa fa-lg fa-fw fa-level-down\"  [showCloseButton]=\"true\"\n        (close)=\"close()\"     >\n        <ul class=\"list-group\">\n            <li class=\"list-group-item list-group-item-info rounded-0\">\n                <h5>Drop Export Files</h5>\n            </li>\n            <li class=\"list-group-item \">\n                <div class=\"well my-drop-zone\" dropZone [requireFiles]=\"true\" (dropFiles)=\"filesDrop($event)\" dropAllowedClass=\"nv-file-over\">\n                    <div class=\"form-row\">\n                        <section class=\"form-group col-md-6\">\n                            Drop import files\n                        </section>\n                        <section class=\"form-group col-md-6\">\n                            <div class=\"custom-file w-auto pull-right\">\n                                <input #fileInput type=\"file\" class=\"custom-file-input \" (change)=\"uploadFile($event)\">\n                                <label class=\"custom-file-label\" for=\"inputGroupFile01\">Choose file</label>\n                            </div>\n                        </section>\n                    </div>\n                </div>\n            </li>\n            <li class=\"list-group-item list-group-item-info\">\n                <h5>Import Options</h5>\n            </li>\n            <li class=\"list-group-item \">\n                    <fieldset>\n                        <div class=\"form-row\">\n                            <section *ngFor=\"let action of importOptions\" class=\"form-group col-md-6\">\n                                <form-select label=\"{{eSharedObjectType[action.objectType]}} Action\" [(ngModel)]=\"action.action\" [items]=\"importActions\" itemKey=\"key\" itemName=\"name\"\n                                    note='Action when importing {{eSharedObjectType[action.objectType]}}'>\n                                </form-select>\n                            </section>\n                        </div>\n                    </fieldset>\n            </li>\n        </ul>\n\n    </d-widget>\n\n    <d-widget *ngIf=\"(tableData | async)?.length > 0\" title=\"Import Package\" iconClass=\"fa fa-lg fa-fw fa-level-down\" [showCloseButton]=\"true\" (close)=\"reset()\">\n        <div *ngIf=\"import?.warnings?.length > 0\" class=\"alert alert-warning\" >\n            <ul *ngFor=\"let warning of import.warnings\" class=\"list-item\">\n                Warning: {{warning}}\n            </ul>\n        </div>\n\n        <d-table [enableMultiSelect]=\"true\" [columns]=\"columns\" [dataObservable]=\"tableData\">\n            <ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n                <d-button iconClass=\"fa fa-upload\" buttonClass=\"btn-primary\" (click)=\"importSelected(items)\" text=\"Import Selected\" class=\"ml-1\"></d-button>\n            </ng-template>\n            \n            <ng-template #actions let-items=\"items\">\n                    <d-button iconClass=\"fa fa-cloud-upload\" buttonClass=\"btn-primary\" (click)=\"importAll()\" text=\"Import All\"></d-button>\n                    <d-button-close class=\"ml-1\" (click)=\"reset()\"></d-button-close>\n                </ng-template>\n            </d-table>\n\n    </d-widget>\n\n</div>","export * from './columnValidation-index/columnValidation-index.component';\nexport * from './columnValidation-edit/columnValidation-edit.component';\n","import { Route, RouterModule, Routes } from '@angular/router';\n\nimport { ColumnValidationEditComponent, ColumnValidationIndexComponent } from './columnValidation';\nimport { ConnectionEditComponent } from './connection/connection-edit';\nimport { ConnectionImportComponent } from './connection/connection-import';\nimport { ConnectionIndexComponent } from './connection/connection-index';\nimport { ImportComponent, ExportComponent } from './copy';\nimport { DatajobIndexComponent } from './datajob/datajob-index';\nimport { DatalinkIndexComponent } from './datalink/datalink-index';\nimport { DatalinkNewComponent } from './datalink/datalink-new';\nimport { DatalinkPreviewDataComponent } from './datalink/datalink-preview-data';\nimport { FileFormatEditComponent, FileFormatIndexComponent } from './fileFormat';\nimport { FilesManageComponent, FilesBulkLoadComponent } from './files';\nimport { HubVariableEditComponent, HubVariableIndexComponent } from './hubVariable';\nimport { ManageUsersIndexComponent } from './manage/manage-users-index/manage-users-index.component';\nimport { RemoteAgentEditComponent, RemoteAgentIndexComponent } from './remoteAgent';\nimport { ResultsIndexComponent, ResultsViewComponent } from './results';\nimport { SharedDataIndexComponent } from './sharedData/sharedData-index.component';\nimport { TableIndexComponent } from './table/table-index';\nimport { TablePreviewDataComponent } from './table/table-preview-data';\nimport { CustomFunctionIndexComponent, CustomFunctionEditComponent } from './customFunction';\nimport { ItemEditGuard } from './item-edit.guard';\nimport { DatalinkTestIndexComponent, DatalinkTestNewComponent } from './test'\nimport { ViewEditComponent } from './view/view-edit';\nimport { ViewIndexComponent } from './view/view-index';\nimport { ApiEditComponent } from './api/api-edit';\nimport { ApiIndexComponent } from './api/api-index';\nimport { DatalinkRunComponent } from './datalink/datalink-run/datalink-run.component';\nimport { SearchComponent } from './search';\nimport { DashboardEditComponent, DashboardIndexComponent } from './dashboard';\nimport { DatajobRunComponent } from './datajob/datajob-run/datajob-run.component';\nimport { DexihDashboard, DexihView, DexihApi } from '../shared/shared.models';\nimport { ListOfValuesEditComponent } from './listOfValues/listOfValues-edit';\nimport { ListOfValuesIndexComponent } from './listOfValues/listOfValues-index';\nimport { TagsComponent } from './tags/tags.component';\n\nconst resultViewRoute: Route = { path: 'result-view/:auditConnectionKey/:auditKey', children: [\n        {path: '', pathMatch: 'full', component: ResultsViewComponent, data: { pageTitle: 'Detailed Result' }},\n        { path: 'result-view/:auditConnectionKey/:auditKey', children: [\n            {path: '', pathMatch: 'full', component: ResultsViewComponent, data: { pageTitle: 'Child Result' }},\n            { path: 'result-view/:auditConnectionKey/:auditKey', children: [\n                {path: '', pathMatch: 'full', component: ResultsViewComponent, data: { pageTitle: 'GrandChild Result' }},\n            ]\n        }\n        ]\n    }\n    ]\n};\n\nconst tableRoutes: Routes = [\n    { path: 'table-edit/:tableKey', data: { pageTitle: 'Edit Table', action: 'edit'},\n        loadChildren: () => import('./table/table-edit/table-edit.module').then(m => m.TableEditModule)},\n    { path: 'table-new',  data: {  pageTitle: 'New Table', action: 'new'},\n        loadChildren: () => import('./table/table-edit/table-edit.module').then(m => m.TableEditModule)},\n    { path: 'table-new/:connectionKey',  data: {  pageTitle: 'New Table', action: 'new'},\n        loadChildren: () => import('./table/table-edit/table-edit.module').then(m => m.TableEditModule)},\n    { path: 'datalink-new/:sourceTableKeys/:targetConnectionKey',\n        component: DatalinkNewComponent, data: { action: 'new', pageTitle: 'New Datalink' } },\n    { path: 'table-preview/:tableKey', component: TablePreviewDataComponent, data: { pageTitle: 'Preview Table' } },\n];\n\nconst datalinkRoutes: Routes = [\n    { path: 'datalink-edit', loadChildren: () => import('./datalink/datalink-edit/datalink-edit.module').then(m => m.DatalinkEditModule)},\n    { path: 'datalink-preview/:datalinkKey/:previewUpdates', component: DatalinkPreviewDataComponent,\n        data: { pageTitle: 'Preview Datalink' } },\n    { path: 'table-preview/:tableKey', component: TablePreviewDataComponent, data: { pageTitle: 'Preview Table' } },\n    { path: 'datalink-run/:datalinkKeys', component: DatalinkRunComponent, data: { pageTitle: 'Run Datalink' } },\n    resultViewRoute\n];\n\nconst tablesRoute: Route = { path: 'tables', data: { pageTitle: 'Tables' }, children: (<Routes>[\n    {path: '', pathMatch: 'full', component: TableIndexComponent, data: { pageTitle: 'Tables' }},\n    {path: '', children: (<Routes>tableRoutes)},\n    {path: '', children: (<Routes>datalinkRoutes)},\n    ])\n};\n\nconst connectionRoutes: Routes = [\n    { path: 'connection-edit/:connectionKey', component: ConnectionEditComponent, canDeactivate: [ItemEditGuard],\n        data: {action: 'edit', pageTitle: 'Edit Connection' }},\n    { path: 'connection-import/:connectionKey', data: { pageTitle: 'Import Tables'}, children: [\n        {path: '', pathMatch: 'full', component: ConnectionImportComponent, data: { pageTitle: 'Import Tables' }} ,\n        { path: 'table-edit/:tableKey', data: { pageTitle: 'Edit Table', action: 'edit'},\n                loadChildren: () => import('./table/table-edit/table-edit.module').then(m => m.TableEditModule)},\n        { path: 'datalink-new/:sourceTableKeys/:targetConnectionKey',\n        component: DatalinkNewComponent, data: { action: 'new', pageTitle: 'New Datalink' } },\n    ]},\n    { path: 'connection-new/:purpose', component: ConnectionEditComponent, canDeactivate: [ItemEditGuard], data: {action: 'new', pageTitle: 'New Connection' }},\n    { path: 'connection-copy/:connectionKey', component: ConnectionEditComponent, canDeactivate: [ItemEditGuard], data: {action: 'copy', pageTitle: 'New Connection' }}\n];\n\nconst connectionsRoute: Route =  { path: 'connections', data: {pageTitle: 'Connections' }, children: (<Routes>[\n    {path: '', pathMatch: 'full', component: ConnectionIndexComponent, data: {pageTitle: 'Connections' }},\n    {path: '', children: (<Routes>connectionRoutes)},\n    tablesRoute\n    ])\n};\n\nconst agentRoutes: Routes = [\n    { path: '', pathMatch: 'full', component: RemoteAgentIndexComponent, data: { pageTitle: 'Remote Agents' }},\n    { path: 'agent-edit/:remoteAgentKey/:remoteAgentHubKey', component: RemoteAgentEditComponent, data: { pageTitle: 'Edit Agent' }}\n];\n\nconst agentsRoute: Route = { path: 'agents', data: { pageTitle: 'Remote Agents' }, children: agentRoutes\n};\n\nconst resultRoutes: Routes = [\n    { path: 'results', data: { pageTitle: 'Execution Results' }, children: [\n        {path: '', pathMatch: 'full', component: ResultsIndexComponent, data: { pageTitle: 'Execution Results' } },\n        resultViewRoute\n    ] },\n    resultViewRoute\n];\n\nconst manageRoute: Route = { path: 'manage', children: (<Routes>[\n    { path: 'manage-users', component: ManageUsersIndexComponent, data: {pageTitle: 'Manage Users'}}\n    ])\n};\n\nconst importRoute: Route = { path: 'import', children: (<Routes>[\n    { path: '', pathMatch: 'full', component: ImportComponent, data: {pageTitle: 'Import Objects'}}\n    ])\n};\n\nconst exportRoute: Route = { path: 'export', children: (<Routes>[\n    { path: '', pathMatch: 'full', component: ExportComponent, data: {pageTitle: 'Export Objects'}}\n    ])\n};\n\nconst sharedDataRoute: Route = { path: 'sharedData', data: { pageTitle: 'Shared Data' }, children: (<Routes>[\n    {path: '', pathMatch: 'full', component: SharedDataIndexComponent},\n    {path: '', children: [\n        { path: 'table-preview/:tableKey', component: TablePreviewDataComponent, data: { pageTitle: 'Preview Table' } },\n        { path: 'datalink-preview/:datalinkKey', component: DatalinkPreviewDataComponent, data: { pageTitle: 'Preview Datalink' } },\n        { path: 'dashboard-preview/:dashboardKey', data: { pageTitle: 'Preview Dashboard', action: 'edit'},\n        loadChildren: () => import('./dashboard/dashboard-edit/dashboard-edit.module').then(m => m.DashboardEditModule)},\n        { path: 'view-preview/:viewKey', component: ViewEditComponent, data: { pageTitle: 'Preview View', action: 'edit' } },\n        { path: 'api-preview/:apiKey', component: ApiEditComponent, data: { pageTitle: 'Preview Api', action: 'edit' } }\n    ]}])\n};\n\nconst customFunctionRoutes: Routes = [\n    { path: 'customFunction-edit/:customFunctionKey', component: CustomFunctionEditComponent, canDeactivate: [ItemEditGuard],\n        data: { action: 'edit', pageTitle: 'Edit Custom Function'}},\n    { path: 'customFunction-new', component: CustomFunctionEditComponent, canDeactivate: [ItemEditGuard], data: { action: 'new', pageTitle: 'New Custom Function'}},\n];\n\nconst customFunctionRoute: Route = { path: 'customFunctions', data: { pageTitle: 'Custom Functions' }, children: (<Routes>[\n    {path: '', pathMatch: 'full', component: CustomFunctionIndexComponent},\n    {path: '', children: (<Routes>customFunctionRoutes)},\n    ])\n};\n\nconst columnValidationRoutes: Routes = [\n    { path: 'columnValidation-edit/:validationKey', component: ColumnValidationEditComponent, canDeactivate: [ItemEditGuard],\n        data: { action: 'edit', pageTitle: 'Edit Validation'}},\n    { path: 'columnValidation-new', component: ColumnValidationEditComponent, canDeactivate: [ItemEditGuard], data: { action: 'new', pageTitle: 'New Validation'}},\n];\n\nconst columnValidationsRoute: Route = { path: 'columnValidations', data: { pageTitle: 'Column Validations' }, children: (<Routes>[\n    {path: '', pathMatch: 'full', component: ColumnValidationIndexComponent},\n    {path: '', children: (<Routes>columnValidationRoutes)},\n    ])\n};\n\nconst fileFormatRoutes: Routes = [\n    { path: 'fileFormat-edit/:fileFormatKey', component: FileFormatEditComponent, canDeactivate: [ItemEditGuard],\n        data: { action: 'edit', pageTitle: 'Edit FileFormat'}},\n    { path: 'fileFormat-new', component: FileFormatEditComponent, canDeactivate: [ItemEditGuard], data: { action: 'new', pageTitle: 'New FileFormat'}},\n];\n\nconst fileFormatsRoute: Route = { path: 'fileFormats', data: { pageTitle: 'File Formats' }, children: (<Routes>[\n    {path: '', pathMatch: 'full', component: FileFormatIndexComponent},\n    {path: '', children: (<Routes>fileFormatRoutes)}\n    ])\n};\n\nconst viewRoutes: Routes = [\n    { path: 'view-edit/:viewKey', component: ViewEditComponent, canDeactivate: [ItemEditGuard],\n        data: { action: 'edit', pageTitle: 'Edit View'}},\n    { path: 'view-new', component: ViewEditComponent, canDeactivate: [ItemEditGuard], data: { action: 'new', pageTitle: 'New View'}},\n];\n\nconst viewRoute: Route = { path: 'views', data: { pageTitle: 'Views' }, children: (<Routes>[\n    {path: '', pathMatch: 'full', component: ViewIndexComponent},\n    {path: '', children: (<Routes>viewRoutes)}\n    ])\n};\n\nconst dashboardRoutes: Routes = [\n    { path: 'dashboard-edit/:dashboardKey', data: { pageTitle: 'Edit Dashboard', action: 'edit'},\n        loadChildren: () => import('./dashboard/dashboard-edit/dashboard-edit.module').then(m => m.DashboardEditModule)},\n    { path: 'dashboard-new',  data: {  pageTitle: 'New Dashboard', action: 'new'},\n        loadChildren: () => import('./dashboard/dashboard-edit/dashboard-edit.module').then(m => m.DashboardEditModule)},\n];\n\nconst dashboardRoute: Route = { path: 'dashboards', data: { pageTitle: 'Dashboards' }, children: (<Routes>[\n    {path: '', pathMatch: 'full', component: DashboardIndexComponent},\n    {path: '', children: (<Routes>dashboardRoutes)}\n    ])\n};\n\nconst lovRoutes: Routes = [\n    { path: 'listOfValues-edit/:listOfValuesKey', component: ListOfValuesEditComponent, canDeactivate: [ItemEditGuard],\n        data: { action: 'edit', pageTitle: 'Edit List Of Values'}},\n    { path: 'listOfValues-new', component: ListOfValuesEditComponent, canDeactivate: [ItemEditGuard], data: { action: 'new', pageTitle: 'New List of Values'}},\n];\n\nconst lovRoute: Route = { path: 'listOfValues', data: { pageTitle: 'List of Values' }, children: (<Routes>[\n    {path: '', pathMatch: 'full', component: ListOfValuesIndexComponent},\n    {path: '', children: (<Routes>lovRoutes)}\n    ])\n};\n\nconst apiRoutes: Routes = [\n    { path: 'api-edit/:apiKey', component: ApiEditComponent, canDeactivate: [ItemEditGuard],\n        data: { action: 'edit', pageTitle: 'Edit Api'}},\n    { path: 'api-new', component: ApiEditComponent, canDeactivate: [ItemEditGuard], data: { action: 'new', pageTitle: 'New Api'}},\n];\n\nconst apiRoute: Route = { path: 'apis', data: { pageTitle: 'Apis' }, children: (<Routes>[\n    {path: '', pathMatch: 'full', component: ApiIndexComponent},\n    {path: '', children: (<Routes>apiRoutes)}\n    ])\n};\nconst hubVariableRoutes: Routes = [\n    { path: 'hubVariable-edit/:hubVariableKey', component: HubVariableEditComponent, data: { action: 'edit',\n        pageTitle: 'Edit Hub Variable'}},\n    { path: 'hubVariable-new', component: HubVariableEditComponent, data: { action: 'new', pageTitle: 'New Hub Variable'}},\n];\n\nconst hubVariablesRoute: Route = { path: 'hubVariables', data: { pageTitle: 'Hub Variables' }, children: (<Routes>[\n    {path: '', pathMatch: 'full', component: HubVariableIndexComponent},\n    {path: '', children: (<Routes>hubVariableRoutes)}\n    ])\n};\n\nconst tagsRoute: Route = { path: 'tags', component: TagsComponent}\n\nconst datalinkTestRoutes: Routes = [\n    { path: 'datalinkTest-edit/:datalinkTestKey', data: { pageTitle: 'Edit Datalink Test', action: 'edit'},\n            loadChildren: () => import('./test/datalinkTest-edit/datalinkTest-edit.module').then(m => m.DatalinkTestEditModule)},\n    { path: 'datalinkTest-new',  data: {  pageTitle: 'New Datalink Test', action: 'new'},\n            loadChildren: () => import('./test/datalinkTest-edit/datalinkTest-edit.module').then(m => m.DatalinkTestEditModule)},\n    { path: 'datalinkTest-new/:datalinkKeys', component: DatalinkTestNewComponent,\n        data: {  pageTitle: 'New Datalink Test', action: 'new'}},\n    resultViewRoute\n];\n\nconst datalinkTestsRoute: Route = { path: 'datalinkTests', data: { pageTitle: 'Datalink Tests' }, children: (<Routes>[\n    {path: '', pathMatch: 'full', component: DatalinkTestIndexComponent},\n    {path: '', children: (<Routes>datalinkTestRoutes)},\n    {path: '', children: (<Routes>resultRoutes)},\n    ])\n};\n\nconst filesRoutes: Routes = [\n    { path: 'manage', children: (<Routes> [\n        { path: '', component: FilesManageComponent, data: { action: 'edit', pageTitle: 'Manage Files'}},\n        { path: ':tableKey', data: { action: 'edit', pageTitle: 'Manage Files'}, children: (<Routes> [\n            { path: '', component: FilesManageComponent, data: { action: 'edit', pageTitle: 'Manage Files'}},\n            { path: 'file-preview/:path/:fileName', component: TablePreviewDataComponent, data: { pageTitle: 'Preview File' } }\n        ])}\n    ])},\n    { path: 'bulk-load', children: (<Routes> [\n       {path: '', data: { action: 'new', pageTitle: 'Bulk Load Files'},\n        loadChildren: () => import('./files/files-bulk-load/files-bulk-load.module').then(m => m.FilesBulkLoadModule)},\n       {path: ':connectionKey', data: { action: 'new', pageTitle: 'Bulk Load Files'},\n        loadChildren: () => import('./files/files-bulk-load/files-bulk-load.module').then(m => m.FilesBulkLoadModule)},\n    ])},\n];\n\nconst filesRoute: Route = { path: 'files', data: { pageTitle: 'Files' }, children: (<Routes>[\n    {path: '', children: (<Routes>filesRoutes)}\n    ])\n};\n\nconst datalinksRoute = { path: 'datalinks', data: { pageTitle: 'Data Links' }, children: (<Routes>[\n    {path: '', pathMatch: 'full', data: { pageTitle: 'Data Links' }, component: DatalinkIndexComponent},\n    {path: '', children: (<Routes>datalinkRoutes)},\n    {path: '', children: (<Routes>resultRoutes)},\n    ])\n};\n\n// const publishedRoute: Route = { path: 'published', children: (<Routes>[\n//     { path: '', redirectTo: 'All'},\n//     { path: ':typeFilter', children: (<Routes> [\n//         {path: '', pathMatch: 'full', component: DatalinkIndexComponent, data: { pageTitle: 'Published' }},\n//     {path: '', children: (<Routes>datalinkRoutes)},\n//     {path: '', children: (<Routes>resultRoutes)},\n//     ])}\n//     ])\n// };\n\nconst datajobRoutes: Routes = [\n    { path: 'datajob-edit/:datajobKey', data: { pageTitle: 'Edit Data Job', action: 'edit'},\n            loadChildren: () => import('./datajob/datajob-edit/datajob-edit.module').then(m => m.DatajobEditModule)},\n    { path: 'datajob-new',  data: {  pageTitle: 'New Data Job', action: 'new'},\n            loadChildren: () => import('./datajob/datajob-edit/datajob-edit.module').then(m => m.DatajobEditModule)},\n    { path: 'datajob-run/:datajobKeys', component: DatajobRunComponent, data: { pageTitle: 'Run datajobs' } },\n\n];\n\nconst datajobsRoute: Route = { path: 'datajobs', data: { pageTitle: 'Data Jobs' }, children: (<Routes>[\n    {path: '', pathMatch: 'full', component: DatajobIndexComponent},\n    {path: '', children: (<Routes>datajobRoutes)},\n    {path: '', children: (<Routes>resultRoutes)},\n    ])\n};\n\nconst searchRoute: Route =  { path: 'search',  data: {pageTitle: 'Search'}, children: (<Routes> [\n    { path: '', pathMatch: 'full', redirectTo: '0/' },\n\n    // { path: '', loadChildren: './hub.base.module#HubBaseModule' },\n     { path: ':searchObject/:search', pathMatch: 'full', component: SearchComponent, },\n     { path: ':searchObject/:search', loadChildren: () => import('./hub.base.module').then(m => m.HubBaseModule) }\n  ])\n };\n\nconst routes: Routes = (<Routes>[\n    agentsRoute,\n    connectionsRoute,\n//    publishedRoute,\n    datalinksRoute,\n    tablesRoute,\n    datajobsRoute,\n  // resultsRoute,\n    columnValidationsRoute,\n    customFunctionRoute,\n    fileFormatsRoute,\n    viewRoute,\n    dashboardRoute,\n    lovRoute,\n    apiRoute,\n    hubVariablesRoute,\n    manageRoute,\n    importRoute,\n    exportRoute,\n    sharedDataRoute,\n    filesRoute,\n    datalinkTestsRoute,\n    tagsRoute,\n    searchRoute,\n    { path: '', children : connectionRoutes},\n    { path: '', children : datalinkRoutes},\n    { path: '', children : tableRoutes},\n    { path: '', children : datajobRoutes},\n    { path: '', children : resultRoutes},\n    { path: '', children : customFunctionRoutes},\n    { path: '', children : columnValidationRoutes},\n    { path: '', children : fileFormatRoutes},\n    { path: '', children : viewRoutes},\n    { path: '', children : dashboardRoutes},\n    { path: '', children : lovRoutes},\n    { path: '', children : apiRoutes},\n    { path: '', children : hubVariableRoutes},\n    { path: '', children : filesRoutes},\n    { path: '', children : agentRoutes},\n    { path: '', children : datalinkTestRoutes},\n]);\n\nexport const BaseRouting = RouterModule.forChild(routes);\n","export * from './connection-import.component';\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { HubCache } from '../../hub.models';\nimport { DexihCustomFunction, DexihHub, eSharedObjectType } from '../../../shared/shared.models';\n\n@Component({\n  selector: 'customFunction',\n  templateUrl: './customFunction-index.component.html',\n  styles: []\n})\nexport class CustomFunctionIndexComponent implements OnInit, OnDestroy {\n    @Input() public hubKey: number;\n\n  private _subscription: Subscription;\n  private _hubCacheChangeSubscription: Subscription;\n\n    hubCache: HubCache;\n\n    customFunctions: Array<DexihCustomFunction>;\n    public eSharedObjectType = eSharedObjectType;\n\n    columns = [\n        { name: 'name', title: 'Name', footer: 'description', format: 'Md', tags: 'tags'},\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar'},\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        // watch for any changes in the validations.\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                this.hubCache = result[0];\n                this.updateCustomFunctions();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Column Validation Index');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    deleteCustomFunctions(functions: Array<DexihCustomFunction>) {\n        this.hubService.deleteCustomFunctions(functions);\n    }\n\n    updateCustomFunctions() {\n        if (this.hubCache && this.hubCache.isLoaded()) {\n            let functions = this.hubCache.hub.dexihCustomFunctions.filter(c => c.isValid)\n                .map(c => {\n                    return {\n                        key: c.key,\n                        name: c.name,\n                        description: c.description,\n                        updateDate: c.updateDate,\n                        tags: this.hubCache.getObjectTags(eSharedObjectType.CustomFunction, c.key)\n                    }\n                });\n            this._tableData.next(functions);\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    edit(customFunction: DexihCustomFunction) {\n        this.router.navigate(['customFunction-edit', customFunction.key], { relativeTo: this.route});\n    }\n\n    export(items: Array<DexihCustomFunction>) {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        items.forEach(item => { this.hubCache.cacheAddCustomFunction(item.key, hub); });\n\n        let filename = items.length === 1 ? 'CustomFunction - ' + items[0].name + '.json' : 'customFunctions.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    watchChanges() {\n      // watch the current validation in case it is changed in another session.\n      this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n          if (hubCacheChange.changeClass === eSharedObjectType.CustomFunction ||\n            hubCacheChange.changeClass === eSharedObjectType.TagObjects) {\n            this.updateCustomFunctions();\n          }\n      });\n  }\n}\n","<div class=\"container\">\n    <d-widget title=\"Custom Functions\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-code\" \n\t\t[showCloseButton]=\"true\"\n\t\t[padding]=\"false\"\n\t\t(close)=\"close()\"\n\t>\n\t\t<d-table \n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[dataObservable]=\"tableData\"\n\t\t\t(rowClick)=\"edit($event)\"\n\t\t\t[tags]=\"this.hubCache.hub.dexihTags\"\n\t\t\t>\n\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t<d-button-save-local class=\"mr-1\" (click)=\"export(items)\"></d-button-save-local>\n\t\t\t\t\t<d-button-delete class=\"mr-1\" *ngIf=\"hubCache.canWrite\" (click)=\"deleteCustomFunctions(items)\"></d-button-delete>\n\t\t\t\t\t<tags-update-button class=\"ml-1\" [objectType]=\"eSharedObjectType.CustomFunction\" [objects]=\"items\" ></tags-update-button>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<d-button-new *ngIf=\"hubCache.canWrite\" class=\"mr-1\" [routerLink]=\"['customFunction-new']\"></d-button-new>\n\t\t\t\t</ng-template>\n\t\t</d-table>\n\n\t</d-widget>\n\t\n\t<dexih-help class=\"m-3\" title=\"Custom Functions\" path=\"/assets/help/reference/function.md\"></dexih-help>\n\n</div>\n\n\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubCache } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { DexihDatalink, InputColumn, InputParameter, InputParameterBase } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n\n    selector: 'datalink-run',\n    templateUrl: './datalink-run.component.html'\n})\nexport class DatalinkRunComponent implements OnInit, OnDestroy {\n    private _subscription: Subscription;\n    private cancelToken: CancelToken = new CancelToken();\n\n    public datalinks: DexihDatalink[];\n    private hubCache: HubCache;\n\n    public action: string; // new or edit\n    public pageTitle: string;\n    public message: string;\n\n    public inputColumns: InputColumn[];\n    public parameters: InputParameterBase[];\n\n    public truncateTable = false;\n    public resetIncremental = false;\n    public resetValue = '';\n\n    isRefreshing = false;\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private route: ActivatedRoute) {\n\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.hubService.getRemoteAgentObservable()\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n\n                this.action = data['action'];\n                this.pageTitle = data['pageTitle'];\n\n                if (this.hubCache.isLoaded()) {\n                    let datalinkKeys: string = params['datalinkKeys'];\n                    this.datalinks = new Array<DexihDatalink>();\n\n                    if (datalinkKeys) {\n                        this.inputColumns = [];\n                        this.parameters = [];\n                        let datalinkKeyArray = datalinkKeys.split('|').map(c => +c);\n                        datalinkKeyArray.forEach(datalinkKey => {\n                            let datalink = this.hubCache.hub.dexihDatalinks.find(c => c.key === datalinkKey);\n                            this.datalinks.push(datalink);\n                            datalink.sourceDatalinkTable.dexihDatalinkColumns.filter(c => c.isInput).forEach(c => {\n                                this.inputColumns.push({datalinkKey: datalinkKey, datalinkName: datalink.name,\n                                    name: c.name, logicalName: c.logicalName,\n                                    dataType: c.dataType, rank: c.rank, value: c.defaultValue, defaultValue: c.defaultValue });\n                            });\n                            datalink.parameters.forEach( c => {\n                                if (this.parameters.findIndex( p => p.name === c.name ) < 0) {\n                                    this.parameters.push(c);\n                                }\n                            });\n                        });\n                    }\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Preview');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    runDatalinks() {\n        this.hubService.runDatalinks(this.datalinks.map(c => c.key), this.truncateTable,\n            this.resetIncremental, this.resetValue, this.inputColumns, this.parameters, this.cancelToken);\n        this.authService.navigateUp();\n    }\n}\n","<div class=\"container\">\n    <d-widget title=\"Datalink Options\" iconClass=\"fa fa-lg fa-fw fa-exchange\"  [showCloseButton]=\"true\" (close)=\"close()\" [padding]=\"true\">\n            <ng-template #header>\n                <d-button class=\"mr-1\" iconClass=\"fa fa-bolt\" (click)=\"runDatalinks()\" text=\"Run Now\"></d-button>\n                <d-button-cancel (click)=\"close()\"></d-button-cancel>\n            </ng-template>\n\n        <ng-template #subHeader>\n            <label class=\"label\">Run the following datalink(s):</label>\n            <div class=\"d-flex flex-wrap\">\n                <div class=\"alert alert-primary m-1\" *ngFor=\"let datalink of datalinks | fieldSort: 'name'\">\n                    {{datalink.name}}\n                </div>\n            </div>\n        </ng-template>\n            \n\t\t<form>\n\t\t\t<fieldset>\n\t\t\t\t<section>\n\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t<section class=\"col\">\n\t\t\t\t\t\t\t<form-checkbox label=\"Truncate all target tables before execution.\" [(ngModel)]=\"truncateTable\" [ngModelOptions]=\"{standalone: true}\"></form-checkbox>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\n                    <div class=\"form-row\">\n                        <section class=\"col\">\n                                <form-checkbox label=\"Reset the source incremental value, and load all source rows.\" [(ngModel)]=\"resetIncremental\" [ngModelOptions]=\"{standalone: true}\"></form-checkbox>\n                            </section>\n                        </div>\n\n                    <div class=\"form-row\">\n                        <section class=\"col\">\n                            <form-input label=\"Incremental Value\" [(ngModel)]=\"resetValue\" [ngModelOptions]=\"{standalone: true}\" placeholder=\"\" iconClass=\"fa fa-list\" note=\"Use a specific incremental value to start loading source rows from (leave empty for null value)\" >\n                                </form-input>\n                        </section>\n                    </div>\n    \n    \n                    <div class=\"d-flex flex-wrap pt-1\" *ngIf=\"inputColumns && inputColumns.length > 0\" >\n                        <div class=\"input-group-text\">\n                            Input Values\n                        </div>\n                \n                        <span *ngFor=\"let column of inputColumns; let i = index\" class=\"input-group\">\n                            <div class=\"input-group-prepend\">\n                                <div class=\"input-group-text\">\n                                    {{column.logicalName}}\n                                </div>\n                            </div>\n                            <form-input name=\"column{{i}}\" class=\"form-control p-0\" [placeholder]=\"column.logicalName\" [(ngModel)]=\"column.value\"></form-input>\n                        </span>\n                    </div>\n\n                    <div *ngIf=\"parameters && parameters.length > 0\" >\n                        <label class=\"label\">Parameters:</label>\n                        <input-parameters-view [parameters]=\"parameters\"></input-parameters-view>\n                    </div>\n\t\t\t\t</section>\n\t\t\t</fieldset>\n\t\t</form>\n\n    </d-widget>\n</div>","import { Component, OnInit, OnDestroy, ViewChild, HostListener } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { HubCache, eCacheStatus} from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Observable ,  Subscription, combineLatest} from 'rxjs';\nimport { Location } from '@angular/common';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { TypeCodes, functionTypes } from '../../hub.remote.models';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { Message, CancelToken } from '../../../+auth/auth.models';\nimport { eParameterDirection, eFunctionType, DexihCustomFunction, eTypeCode,\n  DexihCustomFunctionParameter, DexihDatalinkTransformItem, eTransformItemType, DexihFunctionParameter } from '../../../shared/shared.models';\n\n@Component({\n\n  selector: 'dexih-customFunction-edit-form',\n  templateUrl: './customFunction-edit.component.html',\n  providers: [HubFormsService]\n})\nexport class CustomFunctionEditComponent implements OnInit, OnDestroy {\n\n  private customFunctionKey: number;\n\n  public hubCache: HubCache;\n  public action: string; // new or edit\n  public pageTitle: string;\n  public params: Params;\n\n  typeCodes = TypeCodes;\n  eParameterDirection = eParameterDirection;\n\n  outputParameters = [];\n  inputParameters = [];\n\n  outputParameterValues = [];\n  inputParameterValues = [];\n  returnParameterValue;\n\n  functionType: eFunctionType;\n  functionTypes = functionTypes;\n  eFunctionType = eFunctionType;\n\n  syntaxMessage: Message;\n\n  public testValue: string;\n  public testResult: any;\n\n  public lookupColumnValue = '';\n  private isLoaded = false;\n\n  public cancelToken: CancelToken = new CancelToken();\n\n  private _subscription: Subscription;\n  private _formChangeSubscription: Subscription;\n  private _functionTypeSubscription: Subscription;\n  private _hubCacheChangeSubscription: Subscription;\n\n  constructor(private hubService: HubService,\n    private authService: AuthService,\n    public formsService: HubFormsService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest([\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable()]\n      ).subscribe(result => {\n        let data = result[0];\n        this.params = result[1];\n        this.hubCache = result[2];\n\n        this.action = data['action'];\n        this.pageTitle = data['pageTitle'];\n\n        if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded ) { return; }\n\n        if (this.isLoaded && this.action === 'new') { return; }\n\n        if (this.isLoaded && this.formsService.hasChanged) {\n            this.authService.confirmDialog('Synchronization warning',\n            'The hub was disconnected, meaning this edit could have been changed by another session.  Would you like to discard the current changes, and reload the latest version?')\n            .then(confirm => {\n                if (confirm) {\n                    this.load();\n                }\n            }).catch(reason => {\n                return;\n            });\n        } else {\n            this.load();\n        }\n\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Column Validation');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._formChangeSubscription) { this._formChangeSubscription.unsubscribe(); }\n    if (this._functionTypeSubscription) { this._functionTypeSubscription.unsubscribe(); }\n    this.cancelToken.cancel();\n  }\n\n  private load() {\n    this.isLoaded = true;\n\n    if (this.action === 'edit') {\n      // get the hub key from the route data, and update the service.\n      this.customFunctionKey = + this.params['customFunctionKey'];\n\n      if (!this.customFunctionKey) {\n        this.hubService.addHubErrorMessage('There was no custom function specified to edit.');\n        // this.errorMessage = 'There was no validation specified to edit.';\n      } else {\n        if (!this.hubCache.hub || !this.hubCache.hub.dexihCustomFunctions) {\n          this.hubService.addHubErrorMessage('The hub cache is not loaded.');\n        } else {\n          let customFunction = this.hubCache.hub.dexihCustomFunctions.find(c => c.key === this.customFunctionKey);\n          this.formsService.customFunction(customFunction);\n          this.functionType = this.formsService.currentForm.controls.functionType.value;\n        }\n      }\n    }\n\n    if (this.action === 'new') {\n      let customFunction = new DexihCustomFunction();\n      customFunction.key = this.hubCache.getNextSequence();\n      this.formsService.customFunction(customFunction);\n\n      // update the url with the saved key\n      this._formChangeSubscription = this.formsService.getCurrentFormObservable().subscribe(form => {\n        let key = form.controls.key.value;\n        if (key >= 0) {\n          if (history.pushState) {\n            let newUrl = window.location.pathname.replace('/customFunction-new', `/customFunction-edit/${key}`)\n            this.router.navigateByUrl(newUrl);\n            this._formChangeSubscription.unsubscribe();\n          }\n        }\n      });\n\n      this.functionType = this.formsService.currentForm.controls.functionType.value;\n    }\n\n    this._functionTypeSubscription = this.formsService.currentForm.controls.functionType.valueChanges.subscribe(functionType => {\n      this.functionType = functionType;\n      if (this.functionType === eFunctionType.Condition\n        || this.functionType === eFunctionType.JoinCondition || this.functionType === eFunctionType.Validate) {\n        this.formsService.currentForm.controls.returnType.setValue(eTypeCode.Boolean);\n        this.updateParameters();\n      }\n    });\n\n    this.updateParameters();\n  }\n\n  canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      if (this.formsService.currentForm && !this.formsService.currentForm.pristine) {\n        this.authService.confirmDialog('Function has changed',\n        'The function has changed.  Would you like to discard the changes and return to the previous screen?'\n        ).then(confirm => {\n          resolve(confirm);\n        }).catch(reason => {\n          resolve(false);\n        });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  parametersArray(): FormArray {\n    return <FormArray> this.formsService.currentForm.controls.dexihCustomFunctionParameters;\n  }\n\n  private updateParameters() {\n    let parameters = this.parametersArray();\n    this.inputParameters = parameters.controls.sort((a, b) => a.value.position - b.value.position)\n      .filter(c => c.value.direction === eParameterDirection.Input);\n\n  this.outputParameters = parameters.controls.sort((a, b) => a.value.position - b.value.position)\n    .filter(c => c.value.direction === eParameterDirection.Output);\n\n    this.inputParameterValues.length = this.inputParameters.length;\n    this.outputParameterValues.length = this.outputParameters.length;\n  }\n\n  addParameter(parameter: FormGroup, direction: eParameterDirection) {\n    try {\n      let newParameter = new DexihCustomFunctionParameter();\n      if (parameter) {\n        let oldParameter = parameter.value;\n        newParameter.dataType = oldParameter.dataType;\n        newParameter.name = oldParameter.name;\n        newParameter.position = oldParameter.position + 1;\n      }\n\n      newParameter.key = this.hubCache.getNextSequence();\n      newParameter.name = '';\n      newParameter.direction = direction;\n      newParameter.rank = 0;\n      newParameter.isValid = true;\n\n      let parameters = this.parametersArray();\n      let newParameterForm = this.formsService.customFunctionParametersFormGroup(newParameter);\n      parameters.push(newParameterForm);\n\n      // reset the positions\n      parameters.controls.sort((a, b) => a.value.position - b.value.position).forEach((p, index) => {\n        (<FormGroup>p).controls.position.setValue(index * 10);\n      });\n\n      this.updateParameters();\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Edit Custom Function, add parameter');\n    }\n\n  }\n\n  addParameterValue(index: number, valueIndex: number) {\n    if (Array.isArray(this.inputParameterValues[index])) {\n      this.inputParameterValues[index].splice(valueIndex + 1, 0, '');\n    } else {\n      this.inputParameterValues[index] = new Array(1);\n    }\n  }\n\n  removeParameterValue(index: number, valueIndex: number) {\n    this.inputParameterValues[index].splice(valueIndex, 1);\n  }\n\n  removeParameter(parameter: FormGroup) {\n    try {\n      let inputParameters = this.parametersArray();\n      let index: number = inputParameters.controls.indexOf(parameter);\n      if (index > -1) {\n        inputParameters.removeAt(index);\n      }\n\n      this.updateParameters();\n\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Edit Custom Function, remove parameter');\n    }\n  }\n\n  downloadCode(parameters = null) {\n    let tmpTransform = this.createDataTransformItem();\n\n    this.hubService.downloadCustomFunction(tmpTransform, parameters);\n  }\n\n  test(parameters = null) {\n    let tmpTransform = this.createDataTransformItem();\n\n    this.hubService.testCustomFunction(tmpTransform, parameters, this.cancelToken).then(result => {\n      this.syntaxMessage = new Message(true, 'The function has successfully compiled.', null, null);\n\n      if (result && result.length > 0) {\n        result.forEach((value, index) => {\n          if (index === 0) {\n            this.returnParameterValue = value;\n          } else {\n            this.outputParameterValues[index - 1] = value;\n          }\n        });\n      } else {\n        this.returnParameterValue = null;\n        this.outputParameterValues.forEach(c => c = null );\n     }\n    }).catch(reason => {\n      let converted = reason;\n      if (reason.stack) {\n          converted = new Message(false, 'Client Error: ' + reason.message, reason.stack, '');\n      }\n      this.syntaxMessage = converted;\n      this.returnParameterValue = null;\n      this.outputParameterValues.forEach(c => c = null );\n    });\n  }\n\n  createDataTransformItem(): DexihDatalinkTransformItem {\n    let selectedCustomFunction: DexihCustomFunction = this.formsService.currentForm.value;\n\n    let item = new DexihDatalinkTransformItem();\n    item.functionCode = selectedCustomFunction.methodCode;\n    item.functionResultCode = selectedCustomFunction.resultCode;\n    item.transformItemType = eTransformItemType.CustomFunction;\n\n    let parameters: DexihFunctionParameter[] = [];\n\n      selectedCustomFunction.dexihCustomFunctionParameters.sort((a, b) => a.position - b.position)\n        .forEach((param: DexihCustomFunctionParameter, index: number) => {\n        if (param) {\n          let newParameter = new DexihFunctionParameter();\n          newParameter.key = 0;\n          newParameter.datalinkTransformItemKey = 0;\n          newParameter.name = param.name;\n          newParameter.rank = param.rank;\n          newParameter.direction = param.direction;\n          newParameter.dataType = param.dataType;\n          newParameter.position = index;\n          newParameter.isValid = true;\n\n          parameters.push(newParameter);\n        }\n      });\n\n      let returnParam = new DexihFunctionParameter();\n      returnParam.key = 0;\n      returnParam.datalinkTransformItemKey = 0;\n      returnParam.name = 'Return';\n      returnParam.rank = 0;\n      returnParam.direction = eParameterDirection.ReturnValue;\n      returnParam.dataType = selectedCustomFunction.returnType;\n      returnParam.position = 0;\n      returnParam.isValid = true;\n      parameters.push(returnParam);\n\n      // item.returnType = selectedCustomFunction.returnType;\n      item.dexihFunctionParameters = parameters;\n\n      return item;\n\n  }\n\n  close() {\n    this.authService.navigateUp();\n  }\n\n  // @HostListener allows is to guard against browser refresh, close, etc.\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.formsService.hasChanged) {\n      $event.returnValue = 'The custom function changes have not been saved.  Do you want to discard the changes and exit?';\n    }\n  }\n\n}\n","<div class=\"container\">\n\t<d-widget-vertical>\n\t<d-widget \n\t\ttitle=\"Edit Function\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-code\" \n\t\t[showCloseButton]=\"true\"\n\t\t[padding]=\"true\"\n\t\t(close)=\"close()\"\n\t>\n\t\t<ng-template #header>\n\t\t\t<dexih-invalid-form-details [control]=\"formsService.currentForm\" (click)=\"formsService.showErrors()\" class=\"mr-1\"></dexih-invalid-form-details>\n\t\t\t<save-button *ngIf=\"hubCache.canWrite\" [formsService]=\"formsService\" class=\"mr-1\"></save-button>\n\t\t\t<cancel-button [formsService]=\"formsService\"></cancel-button>\n\t\t</ng-template>\n\n\t\t<form *ngIf=\"formsService.currentForm\"  [formGroup]=\"formsService.currentForm\">\n\t\t\t<fieldset>\n\t\t\t\t<section *ngIf=\"testResult\">\n\t\t\t\t\t<div class=\"alert \" [class.alert-danger]=\"testResult.success == false\" [class.alert-success]=\"testResult.success == true\">\n\t\t\t\t\t\tTest Result = {{testResult.success}}\n\t\t\t\t\t\t<div *ngIf=\"testResult.cleanedValue\">Cleaned Value = {{testResult.cleanedValue}} </div>\n\t\t\t\t\t\t<div *ngIf=\"testResult.rejectReason\">Reject Reason = {{testResult.rejectReason}} </div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-select label=\"Function Type\" formControlName=\"functionType\" [items]=\"functionTypes\" itemKey=\"key\" itemName=\"name\" iconClass=\"fa fa-question\">\n\t\t\t\t\t</form-select>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-input label=\"Custom Function Name\" formControlName=\"name\" placeholder=\"Enter the name.\" iconClass=\"fa fa-list\" [autocapitalize]=\"true\" [errors]=\"formsService.formErrors['name']\">\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-textarea label=\"Description\" [showPreview]=\"true\"  [isHidden]=\"true\" formControlName=\"description\" placeholder=\"Enter the description.\">\n\t\t\t\t\t</form-textarea>\n\t\t\t\t</section>\n\n\t\t\t\t<ng-template [ngIf]=\"functionType\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div class=\"label mb-1\">\n\t\t\t\t\t\t\tInput Parameters\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div *ngIf=\"inputParameters.length === 0\" class=\"mb-1\">\n\t\t\t\t\t\t\t<d-button\n\t\t\t\t\t\t\t\t(click)=\"addParameter(null, eParameterDirection.Input)\"\n\t\t\t\t\t\t\t\ticonClass=\"fa fa-plus-square-o\"\n\t\t\t\t\t\t\t\ttitle=\"Click to add a parameter\" >Add Parameter\n\t\t\t\t\t\t\t</d-button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div *ngFor=\"let parameter of inputParameters; let i = index\" [ngStyle]=\"{'z-index': 200-i, 'position': 'relative'}\">\n\t\t\t\t\t\t\t<customFunction-parameter [customFunctionParameterForm]=\"parameter\" (addParameter)=\"addParameter($event, eParameterDirection.Input)\"\n\t\t\t\t\t\t\t (removeParameter)=\"removeParameter($event)\"></customFunction-parameter>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngIf=\"functionType != eFunctionType.Condition\">\n\t\t\t\t\t\t<div class=\"label mb-1\">\n\t\t\t\t\t\t\tOutput Parameters\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div [ngStyle]=\"{'z-index': 101, 'position': 'relative'}\">\n\t\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t\t<div class=\"input-group mb-1\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<input class=\"form-control\" readonly value=\"Return Data Type\" />\n\t\t\t\t\t\t\t\t\t<form-select [border]=\"false\" class=\"form-control p-0\"  formControlName=\"returnType\" [items]=\"typeCodes\" itemKey=\"key\" itemName=\"name\">\n\t\t\t\t\t\t\t\t\t\t</form-select>\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</section>\n\n\t\t\t\t\t\t\t<div *ngIf=\"outputParameters.length === 0\">\n\t\t\t\t\t\t\t\t\t<d-button\n\t\t\t\t\t\t\t\t\t(click)=\"addParameter(null, eParameterDirection.Output)\"\n\t\t\t\t\t\t\t\t\ticonClass=\"fa fa-plus-square-o\"\n\t\t\t\t\t\t\t\t\ttitle=\"Click to add a parameter\" >Add Parameter</d-button>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div *ngFor=\"let parameter of outputParameters; let i = index\" [ngStyle]=\"{'z-index': 100-i, 'position': 'relative'}\">\n\t\t\t\t\t\t\t\t<customFunction-parameter [customFunctionParameterForm]=\"parameter\" (addParameter)=\"addParameter($event, eParameterDirection.Output)\"\n\t\t\t\t\t\t\t\t (removeParameter)=\"removeParameter($event)\"></customFunction-parameter>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<br>\n\t\t\t\t\t</div>\n\t\t\t\t\tFunction Code\n\t\t\t\t\t<textarea class='form-control' rows=\"20\" width=\"100%\" spellcheck=\"false\" formControlName=\"methodCode\"></textarea>\n\t\t\t</ng-template>\n\t\t\t</fieldset>\n\t\t</form>\n\t\t</d-widget>\n\t\t<d-widget title=\"Test Function\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-code\" [padding]=\"true\" >\n\n\t\t<ng-template #header>\n\t\t\t<d-button class=\"mr-1\" buttonClass=\"btn btn-success\" (click)=\"test()\">Syntax Check</d-button>\n\t\t\t<d-button class=\"mr-1\" buttonClass=\"btn btn-success\" (click)=\"test(inputParameterValues)\">Run</d-button>\n\t\t\t<d-button-save-local (click)=\"downloadCode(inputParameterValues)\" text=\"Sample Code\"></d-button-save-local>\n\t\t</ng-template>\n\n\t\t<dexih-message [message]=\"syntaxMessage\"></dexih-message>\n\n\t\t<form>\n\t\t\t<fieldset>\n\t\t\t\t<div>\n\t\t\t\t\t<div class=\"label\" *ngIf=\"inputParameters.length > 0\">\n\t\t\t\t\t\tInput Parameters\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngFor=\"let inputParameter of inputParameters; let i = index\" [ngStyle]=\"{'z-index': 200-i, 'position': 'relative'}\">\n\t\t\t\t\t\t<div *ngIf=\"inputParameter.controls.rank.value > 0; else showValue\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<d-button\n\t\t\t\t\t\t\t\t\t(click)=\"addParameterValue(i)\"\n\t\t\t\t\t\t\t\t\ticonClass=\"fa fa-plus-square-o\"\n\t\t\t\t\t\t\t\t\ttitle=\"Click to add a parameter\" >\n\t\t\t\t\t\t\t\t\tAdd {{inputParameter.controls.name.value}} value\n\t\t\t\t\t\t\t\t</d-button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div *ngFor=\"let value of inputParameterValues[i]; let j = index\">\n\n\t\t\t\t\t\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-control\">\n\t\t\t\t\t\t\t\t\t\t\t{{inputParameter.controls.name.value + '[' + j + ']'}}\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t<form-input [border]=\"false\" class=\"form-control p-0\" [(ngModel)]=\"inputParameterValues[i][j]\" [name]=\"'inputParameterValues-' + i + '-' + j\" type=\"text\" placeholder=\"Enter a test value for the parameter\"></form-input>\n\n\t\t\t\t\t\t\t\t\t\t<div class=\"input-group-text p-0\">\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" (click)=\"addParameterValue(i, j)\" class=\"btn btn-sm border-0 bg-transparent\" value=\"Add\">\n\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-plus-square-o\"></i>\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"input-group-text p-0\">\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" (click)=\"removeParameterValue(i, j)\" class=\"btn btn-sm border-0 bg-transparent\" value=\"Remove\">\n\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-minus-square-o\"></i>\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<ng-template #showValue>\n\t\t\t\t\t\t\t<form-input [label]=\"inputParameter.controls.name.value\" [(ngModel)]=\"inputParameterValues[i]\" [name]=\"'inputParameterValues' + i\"\n\t\t\t\t\t\t\t type=\"text\" placeholder=\"Enter a test value for the parameter\"></form-input>\n\t\t\t\t\t\t</ng-template>\n\t\t\t\t\t</div>\n\t\t\t\t\t<form-input label=\"Return Value\" [disabled]=\"true\" [(ngModel)]=\"returnParameterValue\" name=\"returnParameterValue\" type=\"text\"></form-input>\n\t\t\t\t\t<div class=\"label\" *ngIf=\"outputParameters.length > 0\">\n\t\t\t\t\t\tOutputs Parameters\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngFor=\"let outputParameter of outputParameters; let i = index\" [ngStyle]=\"{'z-index': 200-i, 'position': 'relative'}\">\n\t\t\t\t\t\t<form-input [disabled]=\"true\" [label]=\"outputParameter.controls.name.value\" [(ngModel)]=\"outputParameterValues[i]\"\n\t\t\t\t\t\t [name]=\"'outputParameterValues' + i\" type=\"text\"></form-input>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t</form>\n\t</d-widget>\n\n\t<dexih-help class=\"m-3\" title=\"Custom Functions\" path=\"/assets/help/reference/function.md\"></dexih-help>\n\n</d-widget-vertical>\n</div>","export { DatalinkPreviewDataComponent } from './datalink-preview-data.component';\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { HubCache } from '../../hub.models';\nimport { DexihDatajob, eSharedObjectType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'datajobs',\n    templateUrl: './datajob-index.component.html',\n    styles: []\n})\nexport class DatajobIndexComponent implements OnInit, OnDestroy {\n    @Input() public hubKey: number;\n\n    private _subscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n\n    hubCache: HubCache;\n\n    datajobs: Array<DexihDatajob>;\n    public eSharedObjectType = eSharedObjectType;\n\n    columns = [\n        { name: 'name', title: 'Name', footer: 'description', format: 'Md', tags: 'tags' },\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        // watch for any changes in the datajobs.\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n\n                this.updateDatajobs();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datajob Index');\n        }\n\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    // deleteDatajob(datajob: DexihDatajob) {\n    //     this.hubService.deleteDatajobs([datajob]).catch(reason => {\n    //     });\n    // }\n\n    // deleteDatajobs(datajobs: Array<DexihDatajob>) {\n    //     this.hubService.deleteDatajobs(datajobs);\n    // }\n\n    updateDatajobs() {\n        if (this.hubCache && this.hubCache.isLoaded()) {\n            let datajobs = this.hubCache.hub.dexihDatajobs\n            .filter(c => c.isValid)\n            .map(c => {\n                return {\n                    key: c.key,\n                    name: c.name,\n                    description: c.description,\n                    updateDate: c.updateDate,\n                    tags: this.hubCache.getObjectTags(eSharedObjectType.Datajob, c.key)\n                }\n            });\n            this._tableData.next(datajobs);\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    // runDatajobs(datajobs, truncateTarget, resetIncremental) {\n    //     this.hubService.runDatajobs(datajobs, truncateTarget, resetIncremental, null);\n    // }\n\n    // activateDatajobs(datajobs) {\n    //     this.hubService.activateDatajobs(datajobs);\n    // }\n\n    // cancelDatajobs(datajobs: Array<DexihDatajob>) {\n    //     this.hubService.deactivateDatajobs(datajobs.map(c => c.key));\n    // }\n\n    editDatajob(datajob: DexihDatajob) {\n        this.router.navigate(['datajob-edit', datajob.key], { relativeTo: this.route });\n    }\n\n    // exportDatajobs(datajobs: Array<DexihDatajob>) {\n    //     const cache = this.hubCache;\n    //     const hub = new DexihHub(this.hubCache.hub.hubKey, '');\n    //     datajobs.forEach(datajob => { this.hubCache.cacheAddDatajob(datajob.key, hub); });\n\n    //     let filename = datajobs.length === 1 ? 'Datajob - ' + datajobs[0].name + '.json' : 'datajobs.json';\n\n    //     this.hubService.exportHub(hub, filename);\n    // }\n\n    watchChanges() {\n        // watch the current datajob in case it is changed in another session.\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n            if (hubCacheChange.changeClass === eSharedObjectType.Datajob || hubCacheChange.changeClass === eSharedObjectType.TagObjects) {\n                this.updateDatajobs();\n            }\n        });\n    }\n}\n","<div class=\"container\">\n\t<d-widget title=\"Data Jobs\" iconClass=\"fa fa-lg fa-fw fa-calendar\"\n\t[showCloseButton]=\"true\"\n\t(close)=\"close()\"\n\t>\n\n\n\t\t<d-table \n\t\t\t[enableMultiSelect]=\"true\" \n\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t[columns]=\"columns\" \n\t\t\t[dataObservable]=\"tableData\" \n\t\t\t(rowClick)=\"editDatajob($event)\"\n\t\t\t[tags]=\"this.hubCache.hub.dexihTags\"\n\t\t>\n\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n\t\t\t<dependent-items-button class=\"ml-1\" [key]=\"item.key\" [objectType]='eSharedObjectType.Datajob'></dependent-items-button>\n\t\t</ng-template>\n\n\t\t\t<ng-template #rowStatus select=\"rowStatus\" let-datajob=\"item\">\n\t\t\t\t<datalink-status [datajobKey]='datajob?.key'></datalink-status>\n\t\t\t</ng-template>\n\n\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t<tags-update-button class=\"ml-1\" [objectType]=\"eSharedObjectType.Datajob\" [objects]=\"items\" ></tags-update-button>\n\t\t\t</ng-template>\n\n\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t<actions-datajob-button [datajobs]=\"items\"></actions-datajob-button>\n\t\t\t</ng-template>\n\t\t</d-table>\n\n\t</d-widget>\n\n\t<dexih-help class=\"m-3\" title=\"Datalinks\" path=\"/assets/help/reference/datajob.md\"></dexih-help>\n\n</div>","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { HubCache, SharedObject } from '../../hub.models';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { DexihApi, DexihHub } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'export',\n    templateUrl: './export.component.html',\n    styles: []\n})\nexport class ExportComponent implements OnInit, OnDestroy {\n    @Input() public hubKey: number;\n\n    private _subscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n\n    hubCache: HubCache;\n\n    columns = [\n        { name: 'name', title: 'Name', footer: 'description', format: 'Md', tags: 'tags' },\n        { name: 'label', title: 'Item Type'},\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    public data: Array<SharedObject>;\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                this.hubCache = result[0];\n\n                if (!this.hubCache.isLoaded()) { return; }\n\n\n                let data: SharedObject[] = this.hubCache.getSharedObjects();\n                this.data = data;\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'View Index');\n        }\n    }\n\n    exportAll() {\n        this.export(this.data);\n    }\n\n    export(items: Array<SharedObject>) {\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        items.forEach(item => {\n            this.hubCache.cacheAddObject(item.type, item.item, hub);\n        });\n\n        let filename = items.length === 1 ? `${items[0].label}-${items[0].type}.json` : `hub-${this.hubCache.hub.name}.json`;\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n}\n","<div class=\"container\">\n    <d-widget title=\"Export\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-feed\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\t>\n\t\t\t<d-table \n\t\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t\t[columns]=\"columns\"\n\t\t\t\t[data]=\"data\"\n\t\t\t\t[tags]=\"this.hubCache.hub.dexihTags\"\n\t\t\t\t>\n\t\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t\t\t<d-button-save-local class=\"mr-1\" text=\"Export Selected\" (click)=\"export(items)\"></d-button-save-local>\n\t\t\t\t\t\t</ng-template>\n\n\t\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-api=\"item\">\n\t\t\t\t\t</ng-template>\n\n\t\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t\t\t<d-button-save-local class=\"mr-1\" text=\"Export All\" (click)=\"exportAll()\"></d-button-save-local>\n\t\t\t\t\t</ng-template>\n\n\t\t\t</d-table>\n\n\t\t</d-widget>\n\t\t\n</div>\n\n\n","export { DatalinkIndexComponent } from './datalink-index';\nexport { DatalinkNewComponent } from './datalink-new/datalink-new.component';\nexport { DatalinkPreviewDataComponent } from './datalink-preview-data';\n\n","import { HostListener, Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { HubService } from '../hub.service';\nimport { AuthService } from '../../+auth/auth.service';\nimport { HubCache, SearchResult, eSearchObjectType, SearchObjectTypes } from '../hub.models';\nimport { Observable, Subscription, combineLatest} from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n    selector: 'search',\n    templateUrl: './search.component.html',\n})\n\nexport class SearchComponent implements OnInit, OnDestroy {\n\n    private _subscription: Subscription;\n    private _searchSubscription: Subscription;\n    public hubCache: HubCache;\n\n    public searchForm: FormGroup;\n\n    searchObjectTypes = SearchObjectTypes;\n    eSearchObjectType = eSearchObjectType;\n\n    private isFirst = false;\n\n    searchResults: Array<SearchResult>;\n\n    constructor(public hubService: HubService,\n        private authService: AuthService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private fb: FormBuilder\n    ) { }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                let params = result[0];\n                this.hubCache = result[1];\n\n                if (!this.isFirst) {\n                    this.isFirst = false;\n                    let searchObject = +params['searchObject'];\n                    if (!searchObject) {\n                        searchObject = 0;\n                    }\n\n                    this.searchForm = this.fb.group({\n                        'searchString': [params['search'], [\n                        ]],\n                        'searchObject': [searchObject, [\n                        ]],\n                    });\n\n                    this.updateSearch();\n\n                    if (this._searchSubscription) { this._searchSubscription.unsubscribe(); }\n                    this._searchSubscription = this.searchForm.valueChanges\n                        .pipe(debounceTime(500))\n                        .subscribe(newValue => {\n                            this.updateSearch();\n                        });\n                }\n\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Search');\n        }\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._searchSubscription) { this._searchSubscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    updateSearch() {\n        if (!this.hubCache.isLoaded()) { return; }\n\n        this.searchResults = this.hubCache.search(this.searchForm.value.searchString, this.searchForm.value.searchObject);\n\n        if (history.pushState) {\n            let newUrl = this.hubCache.getHubUrl() + '/search';\n            let searchString = this.searchForm.value.searchString;\n            let searchObject = this.searchForm.value.searchObject;\n            if (searchString) {\n                newUrl += '/' + searchObject + '/' + searchString;\n            }\n            this.router.navigateByUrl(newUrl);\n        }\n    }\n}\n\n\n","<div class=\"container\">\n\t<d-widget title=\"Search Results\" iconClass=\"fa fa-lg fa-fw fa-search\" [showCloseButton]=\"true\" [padding]=\"true\" (close)=\"close()\">\n\t\t<form *ngIf=\"searchForm\" [formGroup]=\"searchForm\">\n\t\t\t<fieldset>\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Search Term\" formControlName=\"searchString\" placeholder=\"Search...\" iconClass=\"fa fa-search\">\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-select label=\"Restrict to\" formControlName=\"searchObject\" [items]=\"searchObjectTypes\" itemKey=\"key\" itemName=\"name\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t</form>\n\n\t\t<div role=\"content\">\n\t\t\t<div class=\"well\" *ngIf=\"!searchResults || searchResults?.length == 0\">\n\t\t\t\t<h5>No search results available.</h5>\n\t\t\t</div>\n\n\t\t\t<div class=\"well\">\n\t\t\t\t<ul class=\"list-group \">\n\t\t\t\t\t<li *ngFor=\"let searchResult of searchResults\" class=\"list-group-item\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h5>{{searchResult.objectType | objectTypeName }}</h5>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-xs-9\" [ngSwitch]=\"searchResult.objectType\">\n\t\t\t\t\t\t\t<datajob-view *ngSwitchCase=\"eSearchObjectType.Datajob\" [datajob]=\"searchResult.object\"></datajob-view>\n\t\t\t\t\t\t\t<datalink-view *ngSwitchCase=\"eSearchObjectType.Datalink\" [datalink]=\"searchResult.object\"></datalink-view>\n\t\t\t\t\t\t\t<connection-view *ngSwitchCase=\"eSearchObjectType.Connection\" [connection]=\"searchResult.object\"></connection-view>\n\t\t\t\t\t\t\t<table-view *ngSwitchCase=\"eSearchObjectType.Table\" [connection]=\"searchResult.objectParent\" [table]=\"searchResult.object\"></table-view>\n\t\t\t\t\t\t\t<table-column-view *ngSwitchCase=\"eSearchObjectType.TableColumn\" [table]=\"searchResult.objectParent\" [column]=\"searchResult.object\"></table-column-view>\n\t\t\t\t\t\t\t<columnValidation-view *ngSwitchCase=\"eSearchObjectType.ColumnValidation\" [columnValidation]=\"searchResult.object\"></columnValidation-view>\n\t\t\t\t\t\t\t<fileFormat-view *ngSwitchCase=\"eSearchObjectType.FileFormat\" [fileFormat]=\"searchResult.object\"></fileFormat-view>\n\t\t\t\t\t\t\t<view-view *ngSwitchCase=\"eSearchObjectType.View\" [view]=\"searchResult.object\"></view-view>\n\t\t\t\t\t\t\t<api-view *ngSwitchCase=\"eSearchObjectType.Api\" [api]=\"searchResult.object\"></api-view>\n\t\t\t\t\t\t\t<dashboard-view *ngSwitchCase=\"eSearchObjectType.Dashboard\" [dashboard]=\"searchResult.object\"></dashboard-view>\n\t\t\t\t\t\t\t<listOfValues-view *ngSwitchCase=\"eSearchObjectType.ListOfValues\" [listOfValues]=\"searchResult.object\"></listOfValues-view>\n\t\t\t\t\t\t\t<datalinkTest-view *ngSwitchCase=\"eSearchObjectType.DatalinkTest\" [datalinkTest]=\"searchResult.object\"></datalinkTest-view>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t</d-widget>\n</div>","<div class=\"container\">\n\t<d-widget title=\"Hub Remote Agents\"\n\t\ticonClass=\"fa fa-lg fa-fw fa-wifi\"\n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\t\t>\n\t\t<ng-template #header>\n\t\t\t<d-button-dropdown buttonClass=\"btn btn-sm btn-outline-secondary\" iconClass=\"fa fa-filter\" [text]=\"statusFilter\" title=\"Filter by a status\" [pullRight]=\"true\">\n\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"statusFilter=='All'\" routerLink='.' [queryParams]=\"{statusFilter: 'All'}\" title=\"All Items\">All</a>\n\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"statusFilter=='Ready'\" routerLink='.' [queryParams]=\"{statusFilter: 'Ready'}\" title=\"Ready\">Ready</a>\n\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"statusFilter=='Offline'\" routerLink='.' [queryParams]=\"{statusFilter: 'Offline'}\" title=\"Offline Items\">Offline</a>\n\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"statusFilter=='Unauthorized'\" routerLink='.' [queryParams]=\"{statusFilter: 'Unauthorized'}\" title=\"Unauthorized Items\">Unauthorized</a>\n\t\t\t</d-button-dropdown>\n        </ng-template>\n\n\t\t<d-table \n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[dataObservable]=\"tableData\"\n\t\t\t(rowClick)=\"edit($event)\"\n\t\t\t>\n\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t<d-button-delete class=\"mr-1\" (click)=\"deleteSelected(items)\" title=\"Delete selected remote agents\"></d-button-delete>\n\t\t\t\t\t<d-button class=\"mr-1\" iconClass=\"fa fa-check\" buttonClass=\"btn-primary\" (click)=\"authorize(items)\" title=\"Authorize the selected agents for this hub\">Authorize</d-button>\n\t\t\t\t\t<d-button class=\"mr-1\" iconClass=\"fa fa-times\" buttonClass=\"btn-danger\" (click)=\"deAuthorize(items)\" title=\"De-Authorize the selected agents\">De-Authorize</d-button>\n\t\t\t\t</ng-template>\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-remoteItem=\"item\">\n\t\t\t\t\t<d-button-edit [routerLink]=\"['agent-edit', remoteItem.remoteAgentKey, remoteItem.remoteAgentHubKey]\" class=\"mr-1\" ></d-button-edit>\n\t\t\t\t</ng-template>\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<d-button-download [routerLink]=\"['/hubs/index/agents/download']\" iconClass=\"fa fa-download\" text=\"Download Agent\" class=\"mr-1\" ></d-button-download>\n\t\t\t\t</ng-template>\n\t\t</d-table>\n\t</d-widget>\n</div>","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { HubCache } from '../../hub.models';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { DexihRemoteAgent, DexihRemoteAgentHub, eSharedObjectType, eDataPrivacyStatus } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'remoteagents',\n    templateUrl: './remoteAgent-index.component.html',\n    styles: []\n})\nexport class RemoteAgentIndexComponent implements OnInit, OnDestroy {\n    @Input() public hubKey: number;\n\n    private _subscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n\n    remoteAgents: Array<DexihRemoteAgent>;\n    hubCache: HubCache;\n\n    statusFilter: string;\n\n    columns = [\n        { name: 'name', title: 'Name', format: '' },\n        { name: 'connected', title: 'Connected', format: 'Boolean' },\n        { name: 'isAuthorized', title: 'Authorized?', format: 'Boolean' },\n        { name: 'user', title: 'User', format: ''},\n        { name: 'dataPrivacyStatus', title: 'Data Privacy', format: 'Enum', enum: eDataPrivacyStatus },\n        { name: 'isEncrypted', title: 'Encrypted?', format: 'Boolean' },\n        { name: 'ipAddress', title: 'Current IP Address', format: '' },\n        { name: 'remoteAgentId', title: 'Id', format: '' },\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n        { name: 'lastLoginDateTime', title: 'Last Login', format: 'Calendar' },\n        { name: 'lastLoginIpAddress', title: 'Last IP Address', format: '' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(private hubService: HubService, private authService: AuthService, private router: Router, private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        // watch for any changes.\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest(\n                this.route.queryParams,\n                this.hubService.getHubCacheObservable(),\n                this.authService.getRemoteAgentsObservable(),\n                this.hubService.getRemoteAgentObservable() // this is included to ensure refresh when active agent changes.\n            ).subscribe(result => {\n                let queryParams = result[0];\n                this.hubCache = result[1];\n                this.remoteAgents = result[2];\n\n                if (!this.hubCache.isLoaded()) { return; }\n\n                this.statusFilter = queryParams['statusFilter'];\n                if (!this.statusFilter) { this.statusFilter = 'All'; }\n\n                this.updateRemoteAgents();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Remote Agent index');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    private updateRemoteAgents() {\n        if (!(this.hubCache && this.hubCache.hub)) { return; }\n\n        let data: any[] = this.hubCache.hub.dexihRemoteAgentHubs.map(a => {\n            let remoteAgent = this.remoteAgents ? this.remoteAgents.find(c => c.remoteAgentKey === a.remoteAgentKey) : null;\n            let activeAgent = remoteAgent && remoteAgent['activeAgents'] && remoteAgent['activeAgents'].length > 0\n                ? remoteAgent['activeAgents'][0] : null;\n\n            return {\n                remoteAgentHubKey: a.remoteAgentHubKey,\n                connected: activeAgent !== null,\n                isAuthorized: a.isAuthorized,\n                name: activeAgent ? activeAgent.name : ( remoteAgent ? remoteAgent.name : 'Unknown') ,\n                user: activeAgent ? activeAgent.user : '',\n                dataPrivacyStatus: activeAgent ? activeAgent.dataPrivacyStatus : '',\n                isEncrypted: activeAgent ? activeAgent.isEncrypted : '',\n                ipAddress: activeAgent ? activeAgent.ipAddress : '',\n                remoteAgentKey: a.remoteAgentKey,\n                updateDate: a.updateDate,\n                lastLoginDateTime: remoteAgent ? remoteAgent.lastLoginDateTime : '',\n                lastLoginIpAddress: remoteAgent ? remoteAgent.lastLoginIpAddress : '',\n                remoteAgentId: remoteAgent ? remoteAgent.remoteAgentId : ''\n            };\n        });\n\n        if (this.remoteAgents) {\n            this.remoteAgents.forEach(a => {\n                let activeAgent = a['activeAgents'] && a['activeAgents'].length > 0 ? a['activeAgents'][0] : null;\n\n                if (activeAgent && data.findIndex(d => d.remoteAgentKey === a.remoteAgentKey) < 0) {\n                    data.push({\n                        remoteAgentHubKey: 0,\n                        connected: true,\n                        isAuthorized: false,\n                        name: activeAgent.name,\n                        user:  activeAgent.user,\n                        dataPrivacyStatus: activeAgent.dataPrivacyStatus,\n                        isEncrypted: activeAgent.isEncrypted,\n                        ipAddress: activeAgent.ipAddress,\n                        remoteAgentKey: a.remoteAgentKey,\n                        remoteAgentId: a.remoteAgentId,\n                        updateDate: '',\n                        });\n                }\n            });\n        }\n        this._tableData.next(data);\n    }\n\n    watchChanges() {\n        // watch the current remote hubs\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n            if (hubCacheChange.changeClass === eSharedObjectType.RemoteAgent) {\n                this.updateRemoteAgents();\n            }\n        });\n    }\n\n    async authorize(remoteAgents: Array<any>) {\n        for await (const remoteAgent of remoteAgents) {\n            if (!remoteAgent.isAuthorized) {\n                let agentHub: DexihRemoteAgentHub;\n                if (remoteAgent.remoteAgentHubKey) {\n                    agentHub = this.hubCache.hub.dexihRemoteAgentHubs.find(c => c.remoteAgentHubKey === remoteAgent.remoteAgentHubKey);\n                    agentHub.isAuthorized = true;\n                } else {\n                    agentHub = {\n                        hubKey: this.hubCache.hub.hubKey,\n                        remoteAgentHubKey: 0,\n                        remoteAgentKey: remoteAgent.remoteAgentKey,\n                        isAuthorized: true,\n                        isValid: true,\n                        createDate: null,\n                        isDefault: false,\n                        updateDate: null\n                    }\n                    agentHub['allowExternalConnect'] = true;\n                    agentHub['isSelected'] = false;\n                }\n                await this.hubService.saveRemoteAgent(agentHub);\n            }\n        };\n    }\n\n    deAuthorize(remoteAgents: Array<DexihRemoteAgentHub>) {\n        remoteAgents.forEach(remoteAgent => {\n            if (remoteAgent.isAuthorized) {\n                if (remoteAgent.remoteAgentHubKey) {\n                    let agent = this.hubCache.hub.dexihRemoteAgentHubs.find(c => c.remoteAgentHubKey === remoteAgent.remoteAgentHubKey);\n                    if (agent) {\n                        agent.isAuthorized = false;\n                        this.hubService.saveRemoteAgent(agent);\n                    }\n                }\n            }\n        });\n    }\n\n    deleteSelected(remoteAgents: Array<DexihRemoteAgentHub>) {\n        remoteAgents.forEach(remoteAgent => {\n            if (remoteAgent.remoteAgentHubKey) {\n                let agent = this.hubCache.hub.dexihRemoteAgentHubs.find(c => c.remoteAgentHubKey === remoteAgent.remoteAgentHubKey);\n                if (agent) {\n                    agent.isAuthorized = false;\n                    this.hubService.deleteRemoteAgent(agent);\n                }\n            }\n        });\n    }\n\n    edit(remoteAgent: DexihRemoteAgentHub) {\n        this.router.navigate(['agent-edit', remoteAgent.remoteAgentKey, remoteAgent.remoteAgentHubKey], { relativeTo: this.route });\n    }\n}\n","<div class=\"container\">\n\t<d-widget title=\"New Datalink Test(s)\"    iconClass=\"fa fa-lg fa-fw fa-exchange\" [showCloseButton]=\"true\" (close)=\"!saving && cancel()\"\n\t [padding]=\"true\">\n\t\t<ng-template #header>\n\t\t\t<d-button-save class=\"mr-1\" (click)=\"!saving && save()\" [busy]=\"saving\"></d-button-save>\n\t\t\t<d-button-cancel (click)=\"!saving && cancel()\" [busy]=\"saving\"></d-button-cancel>\n\t\t</ng-template>\n\n\t\t<ng-template #subHeader>\n\t\t\t<label class=\"label\">Create automatic tests for the following datalink(s):</label>\n\t\t\t<div>\n\t\t\t\t<div class=\"list-group d-inline-block\">\n\t\t\t\t\t<span class=\"list-group-item\" *ngFor=\"let datalink of sourceDatalinks\">\n\t\t\t\t\t\t{{datalink.name}}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</ng-template>\n\n\t\t<form *ngIf=\"sourceDatalinkKeys\" [formGroup]=\"mainForm\">\n\n\t\t\t<fieldset>\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input *ngIf=\"sourceDatalinks.length == 1\" label=\"Test Name\" formControlName=\"name\" placeholder=\"Test name (leave blank for auto naming)\"\n\t\t\t\t\t\t iconClass=\"fa fa-comment\" [errors]=\"formErrors.name\"></form-input>\n\t\t\t\t\t\t<form-input *ngIf=\"sourceDatalinks.length > 1\" disabled label=\"Test Name\" placeholder=\"Test name can not be specified when creating multiple tests.\"\n\t\t\t\t\t\t iconClass=\"fa fa-comment\"></form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-select label=\"Audit Connection\" formControlName=\"auditConnectionKey\" [items]=\"hubCache.hub.dexihConnections\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"name\" [errors]=\"formErrors.auditConnectionKey\" iconClass=\"fa fa-database\"\n\t\t\t\t\t\t\tnote=\"Connection where test results are stored.\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-select formControlName=\"sourceConnectionKey\" label=\"Input Connection\" [items]=\"managedConnections\" itemKey=\"key\"\n\t\t\t\t\t\t itemName=\"name\" note=\"Specify the connection to use for any datalink source data.\" [errors]=\"formErrors.sourceConnectionKey\"\n\t\t\t\t\t\t [allowNullSelect]=\"true\" selectNullMessage=\"No source table\"></form-select>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-select formControlName=\"targetConnectionKey\" label=\"Target Connection\" [items]=\"managedConnections\" itemKey=\"key\"\n\t\t\t\t\t\t itemName=\"name\" note=\"Specify the connection for target data.\" [errors]=\"formErrors.targetConnectionKey\"\n\t\t\t\t\t\t [allowNullSelect]=\"true\" selectNullMessage=\"No target table\"></form-select>\n\t\t\t\t\t</section>\n\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\n\t\t\t<fieldset>\n\t\t\t\t<section>\n\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t<section class=\"col col-11\">\n\t\t\t\t\t\t\t<form-checkbox label=\"Snapshot and copy current source/target data into the test connections.\" formControlName=\"snapshotData\"\n\t\t\t\t\t\t\t name=\"snapshotData\"></form-checkbox>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t</fieldset>\n\t\t</form>\n\n\t</d-widget>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { HubService } from '../../hub.service';\nimport { Observable, Subscription, combineLatest } from 'rxjs';\nimport { Location } from '@angular/common';\nimport { HubCache, eCacheStatus } from '../../hub.models';\nimport { DexihConnection, DexihDatalink, eConnectionPurpose } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n\n  selector: 'dexih-datalinkTest-new-form',\n  templateUrl: './datalinkTest-new.component.html'\n})\nexport class DatalinkTestNewComponent implements OnInit, OnDestroy {\n\n  private _subscription: Subscription;\n  private _valueChangesSubscription: Subscription;\n  private cancelToken: CancelToken = new CancelToken();\n\n  public hubCache: HubCache;\n\n  public pageTitle: string;\n\n  hasChanged = false;\n  showAllErrors = false;\n\n  public name: string;\n  public auditConnectionKey: number;\n  public sourceConnectionKey: number;\n  public targetConnectionKey: number;\n\n  public managedConnections: Array<DexihConnection>;\n\n  public sourceDatalinkKeys: Array<number>;\n  public sourceDatalinks: Array<DexihDatalink>;\n\n  public saving = false;\n\n  mainForm: FormGroup;\n\n  formErrors = {\n    'name': '',\n    'auditConnectionKey': '',\n    'sourceConnectionKey': '',\n    'targetConnectionKey': '',\n    'snapshotData': '',\n  };\n\n  validationMessages = {\n    'name': {\n      'required': 'Name is required.',\n      'minlength': 'Name must be at least 4 characters long.',\n      'maxlength': 'Name cannot be more than 50 characters long.',\n    },\n    'auditConnectionKey': {\n    },\n    'targetConnectionKey': {\n    },\n    'sourceConnectionKey': {\n    },\n    'snapshotData': {\n    },\n  };\n\n\n  constructor(\n    private hubService: HubService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private fb: FormBuilder) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n      ).subscribe(result => {\n        let data = result[0];\n        let params = result[1];\n        this.hubCache = result[2];\n\n        this.managedConnections = this.hubCache.hub.dexihConnections\n          .filter(c => c.purpose === eConnectionPurpose.Managed)\n\n        if (this.hubCache.status === eCacheStatus.Loaded) {\n          let datalinkKeys: string = params['datalinkKeys'];\n          this.sourceDatalinkKeys = new Array<number>();\n          this.sourceDatalinks = new Array<DexihDatalink>();\n\n          if (datalinkKeys && this.hubCache.hub.dexihConnections) {\n            let datalinkKeyArray = datalinkKeys.split('|');\n            this.hubCache.hub.dexihDatalinks.forEach(datalink => {\n              if (datalinkKeyArray.findIndex(t => t === datalink.key.toString()) >= 0) {\n                this.sourceDatalinkKeys.push(datalink.key);\n                this.sourceDatalinks.push(datalink);\n              }\n            });\n          }\n\n          let targetConnection = this.hubCache.hub.dexihConnections.find(c => c.purpose === eConnectionPurpose.Managed);\n          if (targetConnection) {\n            this.targetConnectionKey = targetConnection.key;\n          }\n          this.sourceConnectionKey = this.targetConnectionKey;\n          this.auditConnectionKey = this.targetConnectionKey;\n\n          this.buildForm();\n        }\n\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Datalink New');\n    }\n\n\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._valueChangesSubscription) { this._valueChangesSubscription.unsubscribe(); }\n    this.cancelToken.cancel();\n  }\n\n  buildForm(): void {\n    this.mainForm = this.fb.group({\n      'name': [this.name, [\n      ]],\n      'auditConnectionKey': [this.auditConnectionKey > 0 ? this.auditConnectionKey : null, [\n        // Validators.required,\n      ]],\n      'targetConnectionKey': [this.targetConnectionKey > 0 ? this.targetConnectionKey : null, [\n        // Validators.required,\n      ]],\n      'sourceConnectionKey': [this.sourceConnectionKey > 0 ? this.sourceConnectionKey : null, [\n        // Validators.required,\n      ]],\n      'snapshotData': [true, [\n        // Validators.required,\n      ]],\n    });\n\n    if (this._valueChangesSubscription) { this._valueChangesSubscription.unsubscribe(); }\n    this._valueChangesSubscription = this.mainForm.valueChanges.subscribe(data => this.onValueChanged(data));\n    this.onValueChanged(); // (re)set validation messages now\n    this.hasChanged = false;\n  }\n\n  onValueChanged(data?: any) {\n    if (!this.mainForm) { return; }\n    const form = this.mainForm;\n\n    this.hasChanged = true;\n\n    for (const field of Object.keys(this.formErrors)) {\n      // clear previous error message (if any)\n      this.formErrors[field] = '';\n      const control = form.get(field);\n\n      if (control && (control.dirty || this.showAllErrors) && !control.valid) {\n        const messages = this.validationMessages[field];\n        for (const key of Object.keys(control.errors)) {\n          this.formErrors[field] += messages[key] + ' ';\n        }\n      }\n    }\n  }\n\n  save() {\n    if (this.mainForm.valid) {\n      let value = this.mainForm.value;\n      this.saving = true;\n      this.hubService.newDatalinkTest(\n        this.name,\n        this.sourceDatalinkKeys,\n        value.auditConnectionKey,\n        value.targetConnectionKey,\n        value.sourceConnectionKey\n      ).then(async result => {\n        if (value.snapshotData) {\n          await this.hubService.runDatalinkTestSnapshot([result], this.cancelToken);\n        }\n          this.router.navigate(['/hub', this.hubCache.hub.hubKey, 'datalinkTests', 'datalinkTest-edit', result.key],\n            { relativeTo: this.route.root });\n      }).catch(reason => {\n        this.saving = false;\n      });\n    } else {\n      this.showAllErrors = true;\n      this.onValueChanged();\n    }\n  }\n\n  cancel() {\n    this.location.back();\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\nimport { Label } from 'ng2-charts';\nimport { TransformWriterResult, eRunStatus, eTriggerMethod } from '../../../shared/shared.models';\nimport * as pluginDataLabels from 'chartjs-plugin-datalabels';\nimport { formatNumber } from '@angular/common';\nimport { Functions } from '../../../shared/utils/functions';\n\n@Component({\n    selector: 'stats',\n    templateUrl: './stats.component.html'\n})\n\nexport class StatsComponent implements OnInit {\n    @Input() auditResult: TransformWriterResult;\n\n    exceptionHidden = true;\n\n    columns: Array<any>;\n\n    public barChartOptions: ChartOptions = {\n        responsive: true,\n        // We use these empty structures as placeholders for dynamic theming.\n        scales: { xAxes: [{}], yAxes: [{\n            ticks: {\n                callback: (value) => {\n                    return Functions.numberWithCommas(value);\n                }\n            }\n        }] },\n        plugins: {\n          datalabels: {\n            anchor: 'end',\n            align: 'end',\n            formatter: (value: number, ctx) => {\n                let v = value.toFixed(2);\n                return Functions.numberWithCommas(v);\n            }\n          }\n        }\n      };\n      public barChartLabels: Label[] = ['Reading', 'Processing', 'Writing'];\n      public barChartType: ChartType = 'bar';\n      public barChartLegend = true;\n      public barChartPlugins = [pluginDataLabels];\n    \n      public barChartData: ChartDataSets[] = [];\n\n      public runTime: number;\n\n    public fail = false;\n    public success = false;\n    eRunStatus = eRunStatus;\n    eTriggerMethod = eTriggerMethod;\n\n\n    constructor(public route: ActivatedRoute, public router: Router\n    ) {\n\n    }\n\n    ngOnInit() {\n\n        if (this.auditResult.endTime) {\n            this.runTime = ( (new Date(this.auditResult.endTime)).valueOf() - (new Date(this.auditResult.startTime)).valueOf()) / 1000;\n        } else {\n            if (this.auditResult.runStatus === eRunStatus.Running ||\n                this.auditResult.runStatus === eRunStatus.RunningErrors ||\n                this.auditResult.runStatus === eRunStatus.Started) {\n                    this.runTime = ( (new Date()).valueOf() -\n                        (new Date(this.auditResult.startTime)).valueOf()) / 1000;\n                } else {\n                this.runTime = null;\n            }\n        }\n\n        switch (this.auditResult.runStatus) {\n            case eRunStatus.Abended:\n            case eRunStatus.Cancelled:\n            case eRunStatus.Failed:\n            case eRunStatus.FinishedErrors:\n                this.fail = true;\n                break;\n            case eRunStatus.Finished:\n            case eRunStatus.Passed:\n                this.success = true;\n\n        }\n\n        this.barChartData = [\n            { data: [\n                this.rowsPerSecond(this.auditResult.rowsReadPrimary + this.auditResult.rowsReadReference, this.auditResult.readTicks),\n                this.rowsPerSecond(this.auditResult.rowsTotal, this.auditResult.processingTicks),\n                this.rowsPerSecond(this.auditResult.rowsTotal, this.auditResult.writeTicks)\n            ], label: 'Rows / Second', backgroundColor: 'lightblue'}\n        ];\n\n    }\n\n    numberWithCommas(x) {\n        const parts = x.toString().split('.');\n        parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n        return parts.join('.');\n    }\n\n    rowsPerSecond(rows, ticks) {\n        if (ticks === 0) {\n            return 0;\n        }\n        return rows / (ticks / 10000000);\n    }\n\n    openResult(auditKey) {\n        this.router.navigate(['..', auditKey], { relativeTo: this.route });\n    }\n\n}\n","<ul class=\"list-group\">\n    <li class=\"list-group-item list-group-item-danger\" *ngIf=\"fail\">\n        <h5>Error encountered!</h5>\n    </li>\n    <li class=\"list-group-item list-group-item-success\" *ngIf=\"success\">\n        <h5>Finished Successfully</h5>\n    </li>\n    <li class=\"list-group-item\" *ngIf=\"auditResult?.message\">\n        <div class=\"d-flex mb-2\">\n            {{auditResult.message}}\n            <div class=\"ml-auto\">\n                <d-button *ngIf=\"auditResult.exceptionDetails\" (click)='exceptionHidden = !exceptionHidden'>Details</d-button>\n            </div>\n        </div>\n        <div>\n            <pre *ngIf=\"!exceptionHidden && auditResult.exceptionDetails\">{{auditResult.exceptionDetails}}</pre>\n        </div>\n    </li>\n    <li class=\"list-group-item list-group-item-info rounded-0\">\n        <h5>Running Time</h5>\n    </li>\n    <li class=\"list-group-item \">\n            <div class=\"container\">\n                <div class=\"row rounded text-white bg-secondary\">\n                    <ng-template [ngIf]=\"auditResult.targetTableName\">\n                            <div class=\"col border border-white\">Target Table</div>\n                            <div class=\"col border border-white\">{{auditResult.targetTableName}}</div>\n                            <div class=\"w-100\"></div>\n                    </ng-template>                    \n                    <div class=\"col border border-white\">Run Status</div>\n                    <div class=\"col border border-white\">{{eRunStatus[auditResult.runStatus]}}</div>\n                    <div class=\"w-100\"></div>                    \n                    <div class=\"col border border-white\">Start Date</div>\n                    <div class=\"col border border-white\">{{auditResult.initializeTime | calendar}}</div>\n                    <div class=\"w-100\"></div>\n                    <ng-template [ngIf]=\"auditResult.scheduledTime\">\n                        <div class=\"col border border-white\">Scheduled Time</div>\n                        <div class=\"col border border-white\">{{auditResult.scheduledTime | calendar}}</div>\n                        <div class=\"w-100\"></div>\n                    </ng-template>\n\n                    <div class=\"col border border-white\">Initialized</div>\n                    <div class=\"col border border-white\">{{auditResult.initializeTime | calendar}}</div>\n                    <div class=\"w-100\"></div>\n                    <div class=\"col border border-white\">Started</div>\n                    <div class=\"col border border-white\">{{auditResult.startTime | calendar}}</div>\n                    <div class=\"w-100\"></div>\n                    <div class=\"col border border-white\">Finished</div>\n                    <div class=\"col border border-white\">{{auditResult.endTime | calendar}}</div>\n                    <div class=\"w-100\"></div>\n                    <div class=\"col border border-white\">Run Time</div>\n                    <div class=\"col border border-white\">{{runTime | number: '1.2-2'}} seconds</div>\n                    <div class=\"w-100\"></div>\n                    <div class=\"col border border-white\">Triggered By</div>\n                    <div class=\"col border border-white\">{{eTriggerMethod[auditResult.triggerMethod]}}</div>\n                </div>\n            </div>\n    </li>\n    <li *ngIf=\"auditResult.childResults?.length > 0\" class=\"list-group-item list-group-item-info\">\n        <h5>Child Results</h5>\n    </li>\n    <li *ngIf=\"auditResult.childResults?.length > 0\" class=\"list-group-item \">\n        <div *ngFor=\"let result of auditResult.childResults\">\n            <div class=\"\">\n                <span class=\"text\">  {{result.auditType ==='Table' ? result.targetTableName : result.referenceName}}\n                </span>\n                <datalink-status [writerResult]=\"result\"></datalink-status>\n            </div>\n        </div>\n    </li>\n    <li class=\"list-group-item list-group-item-info\">\n        <h5>Row Distribution</h5>\n    </li>\n    <li class=\"list-group-item \">\n            <result-progress *ngIf=\"auditResult.rowsReadPrimary > 0\" [value]=\"auditResult.rowsReadPrimary\" [total]=\"auditResult.rowsReadPrimary + auditResult.rowsReadReference\"\n                caption=\"Source Rows\" color=\"bg-color-blueDark\"></result-progress>\n            <result-progress *ngIf=\"auditResult.rowsReadReference > 0\" [value]=\"auditResult.rowsReadReference\" [total]=\"auditResult.rowsReadPrimary + auditResult.rowsReadReference\"\n                caption=\"Joined Rows\" color=\"bg-color-blueLight\"></result-progress>\n            <result-progress *ngIf=\"auditResult.rowsCreated > 0\" [value]=\"auditResult.rowsCreated\" [total]=\"auditResult.rowsTotal\" caption=\"Created\"\n                color=\"bg-color-greenDark\"></result-progress>\n            <result-progress *ngIf=\"auditResult.rowsUpdated > 0\" [value]=\"auditResult.rowsUpdated\" [total]=\"auditResult.rowsTotal\" caption=\"Updated\"\n                color=\"bg-color-blueDark\"></result-progress>\n            <result-progress *ngIf=\"auditResult.rowsDeleted > 0\" [value]=\"auditResult.rowsDeleted\" [total]=\"auditResult.rowsTotal\" caption=\"Deleted\"\n                color=\"bg-color-magenta\"></result-progress>\n            <result-progress *ngIf=\"auditResult.rowsRejected > 0\" [value]=\"auditResult.rowsRejected\" [total]=\"auditResult.rowsTotal\"\n                caption=\"Rejected\" color=\"bg-color-red\"></result-progress>\n            <result-progress *ngIf=\"auditResult.rowsPreserved > 0\" [value]=\"auditResult.rowsPreserved\" [total]=\"auditResult.rowsTotal\"\n                caption=\"Preserved\" color=\"bg-color-pinkDark\"></result-progress>\n            <result-progress *ngIf=\"auditResult.rowsIgnored > 0\" [value]=\"auditResult.rowsIgnored\" [total]=\"auditResult.rowsTotal\" caption=\"Ignored\"\n                color=\"bg-color-grayDark\"></result-progress>\n            <result-progress *ngIf=\"auditResult.passed > 0\" [value]=\"auditResult.passed\" [total]=\"auditResult.rowsTotal\" caption=\"Passed\"\n                color=\"bg-color-greenDark\"></result-progress>\n            <result-progress *ngIf=\"auditResult.failed > 0\" [value]=\"auditResult.failed\" [total]=\"auditResult.rowsTotal\" caption=\"Failed\"\n                color=\"bg-color-magenta\"></result-progress>\n        </li>\n    <li class=\"list-group-item list-group-item-info\">\n        <h5>Performance Estimates (rows/second)</h5>\n    </li>\n    <li class=\"list-group-item \">\n            <div class=\"row rounded text-white bg-secondary\">\n                <ng-template ngFor let-item [ngForOf]=\"auditResult.performanceSummary\">\n                        <div class=\"col border border-white\">{{item.transformName}}</div>\n                        <div class=\"col border border-white\">{{item.seconds == 0 ? 'N/A' : ((item.rows / item.seconds) | number: '1.2-2')}} rows/second</div>\n                        <div class=\"w-100\"></div>\n                </ng-template>                    \n            </div>\n        <div style=\"display: grid\">\n            <canvas baseChart\n                [datasets]=\"barChartData\"\n                [labels]=\"barChartLabels\"\n                [options]=\"barChartOptions\"\n                [plugins]=\"barChartPlugins\"\n                [legend]=\"barChartLegend\"\n                [chartType]=\"barChartType\">\n          </canvas>\n\n        </div>\n    </li>\n</ul>","export * from './datalink-new.component';\n","import { HostListener, Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Route, Router, Params } from '@angular/router';\nimport { HubCache, eCacheStatus } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { DexihDatajob } from '../../../shared/shared.models';\n\n@Component({\n  selector: 'dexih-datajob-edit-form',\n  templateUrl: './datajob-edit.component.html'\n})\nexport class DatajobEditComponent implements OnInit, OnDestroy {\n  public datajobKey: number;\n\n  public hubCache: HubCache;\n  public action: string; // new or edit\n  public pageTitle: string;\n  public params: Params;\n\n  private _subscription: Subscription;\n  private _formChangeSubscription: Subscription;\n  private _hubCacheChangeSubscription: Subscription;\n  private isLoaded = false;\n\n\n  constructor(private hubService: HubService,\n    public formsService: HubFormsService,\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router: Router) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(true),\n      ).subscribe(result => {\n        let data = result[0];\n        this.params = result[1];\n        this.hubCache = result[2];\n\n        this.action = data['action'];\n        this.pageTitle = data['pageTitle'];\n\n        if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded ) { return; }\n\n        if (this.isLoaded && this.action === 'new') { return; }\n\n        if (this.isLoaded && this.formsService.hasChanged) {\n            this.authService.confirmDialog('Synchronization warning',\n            'The hub was disconnected, meaning this edit could have been changed by another session.  Would you like to discard the current changes, and reload the latest version?')\n            .then(confirm => {\n                if (confirm) {\n                    this.load();\n                }\n            }).catch(reason => {\n                return;\n            });\n        } else {\n            this.load();\n        }\n\n\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Datajob Edit');\n    }\n\n\n  }\n\n  ngOnDestroy() {\n    if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._formChangeSubscription) { this._formChangeSubscription.unsubscribe(); }\n\n    this.formsService.ngOnDestroy();\n  }\n\n  load() {\n    this.isLoaded = true;\n\n    if (this.action === 'edit') {\n      // get the hub key from the route data, and update the service.\n      this.datajobKey = + this.params['datajobKey'];\n\n      if (!this.datajobKey) {\n        this.hubService.addHubErrorMessage('There was no datajob specified to edit.');\n      } else {\n        if (!this.hubCache.hub || !this.hubCache.hub.dexihDatajobs) {\n          this.hubService.addHubErrorMessage('The hub cache is not loaded.');\n        } else {\n\n          let datajob = this.hubCache.hub.dexihDatajobs.find(c => c.key === this.datajobKey);\n          if (!datajob) {\n            this.hubService.addHubErrorMessage('The specified datajob could not be found.');\n          } else {\n            this.formsService.datajob(datajob);\n          }\n        }\n      }\n    }\n\n    if (this.action === 'new') {\n      let datajob: DexihDatajob;\n      if (this.hubService.newDatajob) {\n        datajob = this.hubService.newDatajob;\n        this.hubService.newDatajob = null;\n      } else {\n        datajob = this.hubService.createDefaultDatajob();\n        datajob.key = 0;\n      }\n\n      this.formsService.datajob(datajob);\n\n      // update the url with the saved key\n      this._formChangeSubscription = this.formsService.getCurrentFormObservable().subscribe(form => {\n        let key = form.controls.key.value;\n        if (key) {\n          if (history.pushState) {\n            let newUrl = window.location.pathname.replace('/datajob-new', `/datajob-edit/${key}`)\n            this.router.navigateByUrl(newUrl);\n            this._formChangeSubscription.unsubscribe();\n          }\n        }\n      });\n    }\n  }\n\n  public canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>((resolve) => {\n      if (this.formsService.hasChanged) {\n        this.authService.confirmDialog('The data job has not been saved',\n          'The datajob changes have not been saved.  Do you want to discard the changes and exit?')\n          .then((confirm) => {\n              resolve(confirm);\n            }).catch(() => {\n              resolve(false);\n            });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  // @HostListener allows is to guard against browser refresh, close, etc.\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.formsService.hasChanged) {\n      $event.returnValue = 'The datajob changes have not been saved.  Do you want to discard the changes and exit?';\n    }\n  }\n}\n","<div class=\"container\">\n    <d-widget title=\"Edit Job\" iconClass=\"fa fa-lg fa-fw fa-cog\">\n\n        <ng-template #header>\n            <dexih-invalid-form-details class=\"mr-1\" [control]=\"formsService.currentForm\"\n                (click)=\"formsService.showErrors()\"></dexih-invalid-form-details>\n            <save-button *ngIf=\"hubCache?.canWrite\" class=\"mr-1\" [formsService]=\"formsService\"></save-button>\n            <cancel-button class=\"mr-1\" [formsService]=\"formsService\"></cancel-button>\n        </ng-template>\n\n        <div>\n            <router-outlet></router-outlet>\n        </div>\n    </d-widget>\n</div>\n","export { TablePreviewDataComponent } from './table-preview-data.component';\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { ColumnValidationEditComponent, ColumnValidationIndexComponent } from './columnValidation';\nimport { ConnectionEditComponent, ConnectionImportComponent, ConnectionIndexComponent } from './connection';\nimport { ImportComponent, ExportComponent } from './copy';\nimport { DatajobIndexComponent } from './datajob';\nimport { DatalinkIndexComponent, DatalinkNewComponent } from './datalink';\nimport { DatalinkPreviewDataComponent } from './datalink/datalink-preview-data';\nimport { FileFormatIndexComponent } from './fileFormat';\nimport { FilesManageComponent, FilesBulkLoadComponent } from './files';\nimport { BaseRouting } from './hub.base.routing';\nimport { HubService } from './hub.service';\nimport { HubSharedModule } from './hub.shared.module';\nimport { HubVariableEditComponent, HubVariableIndexComponent } from './hubVariable';\nimport { ItemEditGuard } from './item-edit.guard';\nimport { ManageUsersIndexComponent } from './manage/manage-users-index/manage-users-index.component';\nimport { RemoteAgentEditComponent, RemoteAgentIndexComponent } from './remoteAgent';\nimport { ResultsIndexComponent } from './results';\nimport { ResultsViewModule } from './results/results-view/results-view.module';\nimport { SharedDataIndexComponent } from './sharedData/sharedData-index.component';\nimport { TableIndexComponent } from './table/table-index';\nimport { CustomFunctionIndexComponent, CustomFunctionEditComponent, CustomFunctionParameterComponent } from './customFunction';\nimport { DatalinkTestIndexComponent, DatalinkTestNewComponent } from './test'\nimport { ViewIndexComponent } from './view/view-index';\nimport { ViewEditComponent } from './view/view-edit';\nimport { DashboardIndexComponent } from './dashboard';\nimport { ApiIndexComponent } from './api/api-index';\nimport { ApiEditComponent } from './api/api-edit';\nimport { DatalinkRunComponent } from './datalink/datalink-run/datalink-run.component';\nimport { SearchModule} from './search';\nimport { DatajobRunComponent } from './datajob/datajob-run/datajob-run.component';\nimport { ListOfValuesEditComponent } from './listOfValues/listOfValues-edit';\nimport { ListOfValuesIndexComponent } from './listOfValues/listOfValues-index';\nimport { TagsComponent } from './tags/tags.component';\n\n@NgModule({\n    imports: [\n        SharedModule,\n        BaseRouting,\n        ReactiveFormsModule,\n        HubSharedModule,\n        ResultsViewModule,\n        SearchModule,\n    ],\n    declarations: [\n        ConnectionIndexComponent,\n        ConnectionEditComponent,\n        ConnectionImportComponent,\n        DatalinkIndexComponent,\n        DatalinkPreviewDataComponent,\n        DatalinkRunComponent,\n        DatajobRunComponent,\n        TableIndexComponent,\n        DatalinkNewComponent,\n        RemoteAgentIndexComponent,\n        RemoteAgentEditComponent,\n        ResultsIndexComponent,\n        DatajobIndexComponent,\n        ColumnValidationIndexComponent, ColumnValidationEditComponent,\n        FileFormatIndexComponent,\n        ViewIndexComponent,\n        ApiIndexComponent, ApiEditComponent,\n        HubVariableEditComponent, HubVariableIndexComponent,\n        ImportComponent, ExportComponent,\n        FilesManageComponent,\n        ManageUsersIndexComponent,\n        SharedDataIndexComponent,\n        CustomFunctionIndexComponent, CustomFunctionEditComponent, CustomFunctionParameterComponent,\n        DatalinkTestIndexComponent, DatalinkTestNewComponent,\n        DashboardIndexComponent,\n        ListOfValuesEditComponent, ListOfValuesIndexComponent,\n        TagsComponent\n    ],\n    providers: [ ItemEditGuard ],\n    exports: [ ]\n})\nexport class HubBaseModule {\n\n    static forRoot(): ModuleWithProviders<HubBaseModule> {\n        return {\n            ngModule: HubBaseModule,\n            providers: [HubService, ItemEditGuard]\n        };\n    }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { HubCache } from '../../hub.models';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable, BehaviorSubject, Subscription, combineLatest} from 'rxjs';\nimport { CancelToken } from '../../../+auth/auth.models';\nimport { TransformWriterResult, eConnectionPurpose } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'results-index',\n    templateUrl: './results-index.component.html',\n    styles: []\n})\nexport class ResultsIndexComponent implements OnInit, OnDestroy {\n    hubCache: HubCache;\n\n    private _subscription: Subscription;\n    private _transformWriterResultChangeSubscription: Subscription;\n\n    public hubPath;\n    public rows = 20;\n    private datalinkStatus: Map<number, TransformWriterResult>;\n\n    private cancelToken = new CancelToken();\n\n    showPage = false;\n    showPageMessage = 'Loading...';\n\n    columns = [\n        { name: 'auditKey', title: '#', format: '' },\n        { name: 'auditType', title: 'Type', format: '' },\n        { name: 'referenceName', title: 'Name', format: '' },\n        { name: 'rowsTotal', title: 'Rows Total', format: '' },\n        { name: 'startTime', title: 'Start Date', format: 'Calendar' },\n        { name: 'startTime', title: 'Time', format: 'Time' },\n        { name: 'endTime', title: 'Finished At', format: 'Time' },\n        { name: 'message', title: 'Message', format: '' },\n    ];\n\n    auditTypes = [ 'Datalink', 'Datajob', 'DatalinkTest' ];\n\n    private _tableData = new BehaviorSubject<Array<TransformWriterResult>>(null);\n    tableData: Observable<Array<TransformWriterResult>> = this._tableData.asObservable();\n\n    datalinks: Array<number> = [];\n    datajobs: Array<number> = [];\n    datalinkTests: Array<number> = [];\n\n    auditType: string = null;\n\n    constructor(private hubService: HubService, private router: Router, private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.route.queryParams,\n                this.hubService.getHubCacheObservable(),\n                this.hubService.getRemoteAgentObservable()\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                let queryParams = result[2];\n                this.hubCache = result[3];\n                let remoteAgent = result[4];\n\n                this.showPage = false;\n                this.showPageMessage = 'Waiting for an active remote agent...';\n\n                if (this.hubCache.isLoaded() && remoteAgent) {\n                    this.hubPath = this.hubCache.getHubUrl();\n\n                    let datalinkKeysString = queryParams['datalinkKeys'];\n                    let datajobKeysString = queryParams['datajobKeys'];\n                    let datalinkTestsKeysString = queryParams['datalinkTestKeys'];\n\n                    if (datalinkKeysString) {\n                        this.datalinks = (datalinkKeysString + '').split(',').map(c => +c);\n                        this.auditType = 'Datalink';\n                    }\n                    if (datajobKeysString) {\n                        this.datajobs = (datajobKeysString + '').split(',').map(c => +c);\n                        this.auditType = 'Datajob';\n                    }\n                    if (datalinkTestsKeysString) {\n                        this.datalinkTests = (datalinkTestsKeysString + '').split(',').map(c => +c);\n                        this.auditType = 'DatalinkTest';\n                    }\n\n                    this.refresh();\n\n                    this.showPage = true;\n                    this.showPageMessage = '';\n                }\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Results Index');\n        }\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._transformWriterResultChangeSubscription) { this._transformWriterResultChangeSubscription.unsubscribe(); }\n        this.cancelToken.cancel();\n    }\n\n    showResult(result: TransformWriterResult) {\n        this.router.navigate(['result-view', result.auditConnectionKey, result.auditKey], { relativeTo: this.route })\n    }\n\n    refresh() {\n        let data = [];\n\n        let keys: number[];\n        let connectionKeys: number[] = [];\n\n        switch (this.auditType) {\n            case 'Datalink':\n                keys = this.datalinks;\n                connectionKeys = this.datalinks.map(c => this.hubCache.hub.dexihDatalinks.find(d => d.key === c).auditConnectionKey);\n                break;\n            case 'Datajob':\n                keys = this.datajobs;\n                connectionKeys = this.datajobs.map(c => this.hubCache.hub.dexihDatajobs.find(d => d.key === c).auditConnectionKey);\n                break;\n            case 'DatalinkTest':\n                keys = this.datalinkTests;\n                connectionKeys = this.datalinkTests.map(c => this.hubCache.hub.dexihDatalinkTests\n                    .find(d => d.key === c).auditConnectionKey);\n                break;\n            default:\n                keys = null;\n                break;\n        }\n\n        let uniqueKeys = connectionKeys.filter(function(item, i, ar) { return ar.indexOf(item) === i; });\n\n        if (uniqueKeys.length === 0) {\n            uniqueKeys = this.hubCache.hub.dexihConnections.filter(c => c.purpose === eConnectionPurpose.Managed).map(c => c.key);\n        }\n\n        this.hubService.getAuditResults(this.auditType, uniqueKeys, keys, true, this.rows, this.cancelToken)\n        .then(results => {\n            this._tableData.next(results);\n            this.watchChanges();\n            return;\n        });\n    }\n\n    watchChanges() {\n        // watch the current connection in case it is changed in another session.\n        if (this._transformWriterResultChangeSubscription) { this._transformWriterResultChangeSubscription.unsubscribe(); }\n        this._transformWriterResultChangeSubscription =\n            this.hubService.getTransformWriterResultChangeObservable().subscribe(writerResult => {\n                let results: TransformWriterResult[] = this._tableData.value;\n\n                if (this.datalinks && this.datalinks.findIndex(c => c === writerResult.referenceKey) >= 0) {\n                    let existingResult = results.find(c => c.auditKey === writerResult.auditKey);\n                    if (existingResult) {\n                        Object.assign(existingResult, writerResult);\n                        this._tableData.next(results);\n                    } else {\n                        this._tableData.next([writerResult].concat(results));\n                    }\n                }\n                if (this.datajobs && this.datajobs.findIndex(c => c === writerResult.referenceKey) >= 0) {\n                    let existingResult = results.find(c => c.auditKey === writerResult.auditKey);\n                    if (existingResult) {\n                        Object.assign(existingResult, writerResult);\n                        this._tableData.next(results);\n                    } else {\n                        this._tableData.next([writerResult].concat(results));\n                    }\n                }\n\n                if (this.datalinkTests && this.datalinkTests.findIndex(c => c === writerResult.referenceKey) >= 0) {\n                    let existingResult = results.find(c => c.auditKey === writerResult.auditKey);\n                    if (existingResult) {\n                        Object.assign(existingResult, writerResult);\n                        this._tableData.next(results);\n                    } else {\n                        this._tableData.next([writerResult].concat(results));\n                    }\n                }\n        });\n    }\n}\n\n\n","<div class=\"container\">\n    <d-widget title=\"Execution Results\" \n        iconClass=\"fa fa-lg fa-fw fa-exchange\" \n    >\n\t\t<d-table \n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[dataObservable]=\"tableData\"\n\t\t\t[enableSaveCsv]=\"true\" \n\t\t\tcsvFileName=\"execution_results.csv\"\n\t\t\t(rowClick)=\"showResult($event)\"\n\t\t\t>\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<div class=\"d-flex flex-wrap\">\n\t\t\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t\t\t<d-button-refresh class=\"input-group-prepend\" (click)=\"refresh()\" text=\"Reload\"></d-button-refresh>\n\t\t\t\t\t\t\t<input type=\"number\" class=\"form-control\" placeholder=\"Maximum rows...\"\n\t\t\t\t\t\t\t\ttitle=\"Specify the maximum rows to return\" [(ngModel)]=\"rows\" style=\"width: 100%; max-width: 100px\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t\t\t<div class=\"flex-fill ml-1\">\n\t\t\t\t\t\t\t<form-select labelLeft=\"Type\" [(ngModel)]=\"auditType\" [border]=\"false\" class=\"form-control p-0\"\n\t\t\t\t\t\t\t\t[items]=\"auditTypes\" [enableTextEntry]=\"false\" [allowNullSelect]=\"true\" selectNullMessage=\"All types\">\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #tableHeader>\n\t\t\t\t\t<div class=\"d-flex flex-wrap pt-1\" *ngIf=\"auditType === 'Datalink'\">\n\t\t\t\t\t\t<form-tags-dropdown labelLeft=\"Datalinks\" [(ngModel)]=\"datalinks\" [items]=\"hubCache.hub.dexihDatalinks\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"name\" [enableAddAll]=\"true\">\n\t\t\t\t\t\t</form-tags-dropdown>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"d-flex flex-wrap pt-1\" *ngIf=\"auditType === 'Datajob'\">\n\t\t\t\t\t\t<form-tags-dropdown labelLeft=\"Datajobs\" [(ngModel)]=\"datajobs\" [items]=\"hubCache.hub.dexihDatajobs\"\n\t\t\t\t\t\t\titemKey=\"key\" itemName=\"name\" [enableAddAll]=\"true\">\n\t\t\t\t\t\t</form-tags-dropdown>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"d-flex flex-wrap pt-1\" *ngIf=\"auditType === 'DatalinkTest'\">\n\t\t\t\t\t\t<form-tags-dropdown labelLeft=\"DatalinkTests\" [(ngModel)]=\"datalinkTests\"\n\t\t\t\t\t\t\t[items]=\"hubCache.hub.dexihDatalinkTests\" itemKey=\"key\" itemName=\"name\" [enableAddAll]=\"true\">\n\t\t\t\t\t\t</form-tags-dropdown>\n\t\t\t\t\t</div>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-result=\"item\">\n\t\t\t\t\t<d-button-edit class=\"mr-1\" [routerLink]=\"[hubPath, 'datalink-edit', 'edit', result.referenceKey]\" text='Edit Datalink'></d-button-edit>\n\t\t\t\t\t<d-button-view [routerLink]=\"['result-view', result.auditConnectionKey, result.auditKey]\" queryParamsHandling=\"merge\"></d-button-view>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #rowStatus select=\"rowStatus\" let-result=\"item\">\n\t\t\t\t\t<datalink-status [writerResult]=\"result\"></datalink-status>\n\t\t\t\t</ng-template>\n\n\t\t</d-table>\n    </d-widget>\n</div>\n\n\n","export * from './view-index.component';\n","export * from './listOfValues-edit.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { HubCache } from '../../hub.models';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Observable, BehaviorSubject, Subscription, combineLatest} from 'rxjs';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { eDatalinkType, DexihDatalink, eSourceType, eSharedObjectType, eDatalinkTypeItems, DexihTag } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'datalink-index',\n    templateUrl: './datalink-index.component.html',\n    styles: []\n})\nexport class DatalinkIndexComponent implements OnInit, OnDestroy {\n    hubCache: HubCache;\n    typeFilter: eDatalinkType;\n\n    private _subscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n\n    public eSharedObjectType = eSharedObjectType;\n    public eDatalinkType = eDatalinkType;\n    public eDatalinkTypeItems = eDatalinkTypeItems;\n\n    columns = [\n        { name: 'name', title: 'Name', format: 'Md', footer: 'description', tags: 'tags' },\n        { iconClass: 'sharedIcon', tooltip: 'sharedToolTip', width: '1%', align: 'center' },\n        { name: 'datalinkType', title: 'Datalink Type', format: '' },\n        { name: 'sourceName', title: 'Source', format: '' },\n        { name: 'targetName', title: 'Target', format: '' },\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<DexihDatalink>>(null);\n    tableData: Observable<Array<DexihDatalink>> = this._tableData.asObservable();\n\n    constructor(private hubService: HubService, private authService: AuthService, private router: Router, private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.route.queryParams,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(result => {\n                let queryParams = result[2];\n                this.hubCache = result[3];\n\n                if (!this.hubCache.isLoaded()) { return; }\n\n                this.typeFilter = + queryParams['typeFilter'];\n                if (!this.typeFilter) {\n                    this.typeFilter = 0;\n                }\n                this.updateDatalinks();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Datalink Index');\n        }\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    private updateDatalinks() {\n        let newDatalinks: Array<DexihDatalink>;\n        if (this.hubCache.isLoaded()) {\n            if (!this.hubCache.hub.dexihDatalinks) {\n                this._tableData.next(new Array<DexihDatalink>());\n            } else {\n\n                if (this.typeFilter === 0 || !this.typeFilter) {\n                    newDatalinks = this.hubCache.hub.dexihDatalinks;\n                } else {\n                    newDatalinks = this.hubCache.hub.dexihDatalinks.filter(d => d.datalinkType === this.typeFilter);\n                }\n\n                let datalinkData = new Array<any>();\n\n                newDatalinks.forEach(d => {\n                    let sourceName = '';\n                    let targetName = '';\n\n                    switch (d.sourceDatalinkTable.sourceType) {\n                        case eSourceType.Table:\n                            let sourceTable = this.hubCache.getTable(d.sourceDatalinkTable.sourceTableKey);\n                            sourceName = sourceTable ? sourceTable.logicalName : 'Error, not found';\n                            break;\n                        case eSourceType.Datalink:\n                            let sourceDatalink = this.hubCache.hub.dexihDatalinks\n                                .find(c => c.key === d.sourceDatalinkTable.sourceDatalinkKey);\n                            sourceName = sourceDatalink ? 'Datalink: ' + sourceDatalink.name : 'Error, not found';\n                            break;\n                        case eSourceType.Rows:\n                            sourceName = 'Static Rows';\n                            break;\n                    }\n\n                    if (d.isQuery) {\n                        targetName = 'None specified.';\n                    } else {\n                        targetName = d.dexihDatalinkTargets.filter(t => t.isValid).map(c => {\n                            let table = this.hubCache.getTable(c.tableKey);\n                            return table && table.logicalName || 'Error, not found';\n                        }).join(', ');\n                    }\n\n                    datalinkData.push({\n                        key: d.key,\n                        datalinkType: this.eDatalinkType[d.datalinkType],\n                        name: d.name,\n                        tags: this.hubCache.getObjectTags(eSharedObjectType.Datalink, d.key),\n                        description: d.description,\n                        sourceName: sourceName,\n                        targetName: targetName,\n                        updateDate: d.updateDate,\n                        sharedIcon: d.isShared ? 'fa fa-group' : 'fa fa-user-secret',\n                        sharedToolTip: d.isShared ? 'Table is shared' : 'Table is private'\n                    });\n                });\n\n                this._tableData.next(datalinkData);\n            }\n        }\n\n    }\n\n    // ngOnDestroy() {\n    //    this.hubSubscription.unsubscribe();\n    // }\n\n    editDatalink(datalink: DexihDatalink) {\n        this.router.navigate(['datalink-edit', 'edit', datalink.key],\n            { queryParamsHandling: 'merge', relativeTo: this.route.parent });\n    }\n\n    watchChanges() {\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n\n        // watch the current connection in case it is changed in another session.\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n            if (hubCacheChange.changeClass === eSharedObjectType.Datalink || hubCacheChange.changeClass === eSharedObjectType.TagObjects) {\n                this.updateDatalinks();\n            }\n        });\n    }\n}\n\n\n","<div class=\"container\">\n    <d-widget title=\"Datalinks\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-exchange\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\t>\n\t\t<d-table \n\t\t\ttableClass=\"table table-striped table-hover m-0\"\n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[enableStickyToolbar]=\"true\" [toolbarZIndex]=\"100\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[dataObservable]=\"tableData\"\n\t\t\t(rowClick)=\"editDatalink($event)\"\n\t\t\t[tags]=\"this.hubCache.hub.dexihTags\"\n\t\t\t>\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<actions-datalink-button [datalinks]=\"items\" ></actions-datalink-button>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #filter select=\"filter\" let-items=\"items\">\n\t\t\t\t\t<d-button-dropdown class=\"mr-1\" [autoCompact]=\"false\" buttonClass=\"btn btn-primary\" iconClass=\"fa fa-filter\" [text]=\"eDatalinkType[typeFilter]\" title=\"Filter by a purpose\" [pullRight]=\"true\">\n\t\t\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"typeFilter=='All'\" routerLink='.' [queryParams]=\"{typeFilter: 'All'}\" title=\"All Datalinks\">All</a>\n\t\t\t\t\t\t<a *ngFor=\"let datalinkType of eDatalinkTypeItems | gtFilter: 'key': 0\" [class.active]=\"typeFilter==datalinkType.key\" class=\"dropdown-item\" routerLink='.' [queryParams]=\"{typeFilter: datalinkType.key}\" [title]=\"datalinkType.name\">{{datalinkType.name}}</a>\n\t\t\t\t\t</d-button-dropdown>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t<tags-update-button class=\"ml-1\" [objectType]=\"eSharedObjectType.Datalink\" [objects]=\"items\" ></tags-update-button>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #rowStatus select=\"rowStatus\" let-item=\"item\">\n\t\t\t\t\t<datalink-status [datalinkKey]='item?.key'></datalink-status>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n\t\t\t\t\t<dependent-items-button class=\"ml-1\" [key]=\"item.key\" [objectType]='eSharedObjectType.Datalink'></dependent-items-button>\n\t\t\t\t</ng-template>\n\t\t</d-table>\n\n\t</d-widget>\n\t\n\t<dexih-help class=\"m-3\" title=\"Datalinks\" path=\"/assets/help/reference/datalink.md\"></dexih-help>\n</div>\n\n","export * from './table-index.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HubService } from '../../hub.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { Location } from '@angular/common';\nimport { HubCache, eCacheStatus } from '../../hub.models';\nimport { eDatalinkType, DexihConnection, DexihTable, eConnectionPurpose, eDeltaType, eSharedObjectType, eDatalinkTypeItems } from '../../../shared/shared.models';\n\n@Component({\n\n  selector: 'dexih-datalink-new-form',\n  templateUrl: './datalink-new.component.html'\n})\nexport class DatalinkNewComponent implements OnInit, OnDestroy {\n\n  private _subscription: Subscription;\n  private _valueChangesSubscription: Subscription;\n  private _hubCacheChangeSubscription: Subscription;\n\n  private hubCache: HubCache;\n\n  public pageTitle: string;\n\n  hasChanged = false;\n  showAllErrors = false;\n\n  private tableKeys: Array<number>;\n\n  public sourceTableKeys: Array<number>;\n  public name: string;\n  public datalinkType: eDatalinkType;\n  public targetConnectionKey: number;\n  public auditConnectionKey: number;\n  public addSourceColumns = true;\n\n  public managedTargetConnections: Array<DexihConnection>;\n  public managedConnections: Array<DexihConnection>;\n\n  public sourceTables: Array<DexihTable>;\n\n  public eConnectionPurpose = eConnectionPurpose;\n\n  public auditColumnTypes = [\n    { key: eDeltaType.AutoIncrement, name: 'Auto Incrementing Key', value: false },\n    { key: eDeltaType.IsCurrentField, name: 'Is Current Flag', value: false },\n    { key: eDeltaType.Version, name: 'Record Version', value: false },\n    { key: eDeltaType.ValidFromDate, name: 'Valid From Date', value: false },\n    { key: eDeltaType.ValidToDate, name: 'Valid To Date', value: false },\n    { key: eDeltaType.CreateDate, name: 'Created Date', value: false },\n    { key: eDeltaType.UpdateDate, name: 'Updated Date', value: false },\n    { key: eDeltaType.CreateAuditKey, name: 'Created by AuditKey Reference', value: false },\n    { key: eDeltaType.UpdateAuditKey, name: 'Updated by AuditKey Reference', value: false }\n  ];\n\n  public allAuditColumns = false;\n\n  eDatalinkTypeItems = eDatalinkTypeItems;\n\n  public savingDatalink = false;\n\n  mainForm: FormGroup;\n\n  formErrors = {\n    'name': '',\n    'targetConnectionKey': '',\n    'auditConnectionKey': '',\n    'datalinkType': ''\n  };\n\n  validationMessages = {\n    'name': {\n      'required': 'Name is required.',\n      'minlength': 'Name must be at least 4 characters long.',\n      'maxlength': 'Name cannot be more than 50 characters long.',\n    },\n    'targetConnectionKey': {\n    },\n    'auditConnectionKey': {\n    },\n    'datalinkType': {\n      'required': 'Datalink Type is required.',\n    },\n  };\n\n\n  constructor(\n    private hubService: HubService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private fb: FormBuilder) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n      ).subscribe(result => {\n        let params = result[1];\n        this.hubCache = result[2];\n\n        this.managedTargetConnections = this.hubCache.hub.dexihConnections\n          .filter(c => c.purpose === eConnectionPurpose.Managed || c.purpose === eConnectionPurpose.Target)\n\n        this.managedConnections = this.hubCache.hub.dexihConnections\n          .filter(c => c.purpose === eConnectionPurpose.Managed)\n\n        let tableKeys: string = params['sourceTableKeys'];\n        this.tableKeys = tableKeys.split('|').map(c => +c);\n\n        if (this.hubCache.status === eCacheStatus.Loaded) {\n          this.updateTables();\n\n          this.targetConnectionKey = +params['targetConnectionKey'];\n\n          if (!this.targetConnectionKey) {\n            let targetConnection = this.hubCache.hub.dexihConnections.find(c => c.purpose === eConnectionPurpose.Managed);\n            if (targetConnection) {\n              this.targetConnectionKey = targetConnection.key;\n            }\n          }\n          this.auditConnectionKey = this.targetConnectionKey;\n          this.datalinkType = eDatalinkType.General;\n\n          this.buildForm();\n\n          this.watchChanges();\n        }\n\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Datalink New');\n    }\n\n\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._valueChangesSubscription) { this._valueChangesSubscription.unsubscribe(); }\n    if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n  }\n\n  updateTables() {\n\n    this.sourceTableKeys = new Array<number>();\n    this.sourceTables = new Array<DexihTable>();\n\n    if (this.tableKeys && this.hubCache.hub.dexihConnections) {\n      this.hubCache.hub.dexihTables.forEach(table => {\n        if (this.tableKeys.findIndex(t => t === table.key) >= 0) {\n          this.sourceTableKeys.push(table.key);\n          this.sourceTables.push(table);\n        }\n      });\n    }\n  }\n\n  buildForm(): void {\n    this.mainForm = this.fb.group({\n      'name': [this.name, [\n      ]],\n      'targetConnectionKey': [this.targetConnectionKey > 0 ? this.targetConnectionKey : null, [\n        // Validators.required,\n      ]],\n      'auditConnectionKey': [this.auditConnectionKey > 0 ? this.auditConnectionKey : null, [\n        // Validators.required,\n      ]],\n      'datalinkType': [this.datalinkType, [\n        Validators.required,\n      ]],\n    });\n\n    if (this._valueChangesSubscription) { this._valueChangesSubscription.unsubscribe(); }\n    this._valueChangesSubscription = this.mainForm.valueChanges.subscribe(data => this.onValueChanged());\n    this.onValueChanged(); // (re)set validation messages now\n\n\n    this.hasChanged = false;\n  }\n\n  onValueChanged() {\n    if (!this.mainForm) { return; }\n    const form = this.mainForm;\n\n    this.hasChanged = true;\n\n    for (const field of Object.keys(this.formErrors)) {\n      // clear previous error message (if any)\n      this.formErrors[field] = '';\n      const control = form.get(field);\n\n      if (control && (control.dirty || this.showAllErrors) && !control.valid) {\n        const messages = this.validationMessages[field];\n        for (const key of Object.keys(control.errors)) {\n          this.formErrors[field] += messages[key] + ' ';\n        }\n      }\n    }\n  }\n\n  selectAllAuditColumns() {\n    this.allAuditColumns = !this.allAuditColumns;\n    this.auditColumnTypes.forEach(c => c.value = this.allAuditColumns);\n  }\n\n  saveDatalink() {\n    if (this.mainForm.valid) {\n\n      let value = this.mainForm.value;\n      this.savingDatalink = true;\n      let auditColumns = this.auditColumnTypes.filter(c => c.value).map(c => c.key);\n      this.hubService.createDatalinks(\n        this.sourceTableKeys,\n        value.name,\n        value.datalinkType,\n        value.targetConnectionKey,\n        null,\n        null,\n        value.auditConnectionKey,\n        this.addSourceColumns,\n        auditColumns).then(result => {\n          this.savingDatalink = false;\n          if (result.length === 1) {\n            this.openDatalink(result[0].key);\n          } else {\n            this.router.navigate(['/hub', this.hubCache.hub.hubKey, 'datalinks'], { relativeTo: this.route.root });\n          }\n        }).catch(() => {\n          this.savingDatalink = false;\n        });\n    } else {\n      this.showAllErrors = true;\n      this.onValueChanged();\n    }\n  }\n\n  cancel() {\n    this.location.back();\n  }\n\n  // delay the open datalink until the hub cache is updated with the new datalink.\n  openDatalink(key: number, iteration = 0) {\n    if (iteration >= 10 ) {\n      this.router.navigate(['/hub', this.hubCache.hub.hubKey, 'datalinks'], { relativeTo: this.route.root });\n    }\n    setTimeout(() => {\n      if (this.hubCache.hub.dexihDatalinks.findIndex(c => c.key === key) >= 0) {\n        this.router.navigate(['/hub', this.hubCache.hub.hubKey, 'datalinks', 'datalink-edit', 'edit', key],\n        { relativeTo: this.route.root });\n      } else {\n        this.openDatalink(key, iteration++);\n      }\n    }, 500);\n  }\n\n  watchChanges() {\n    // watch the current connection in case it is changed in another session.\n    this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n        if (hubCacheChange.changeClass === eSharedObjectType.Table) {\n            this.updateTables();\n        }\n    });\n}\n}\n","<div class=\"container\">\n\t<d-widget title=\"New Datalink(s)\"  \n\t\ticonClass=\"fa fa-lg fa-fw fa-exchange\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"!savingDatalink && cancel()\"\n\t\t[padding]=\"true\"\n\t\t>\n\t\t<ng-template #header>\n\t\t\t<d-button-save class=\"mr-1\" (click)=\"!savingDatalink && saveDatalink()\" [busy]=\"savingDatalink\"></d-button-save>\n\t\t\t<d-button-cancel (click)=\"!savingDatalink && cancel()\" [busy]=\"savingDatalink\"></d-button-cancel>\n\t\t</ng-template>\n\n\t\t<ng-template #subHeader>\n\t\t\t<label class=\"label\">Create datalinks for the following source table(s):</label>\n\t\t\t<div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<span class=\"col alert alert-primary m-1\" *ngFor=\"let sourceTable of sourceTables | fieldSort: 'name'\">\n\t\t\t\t\t\t{{sourceTable.name}}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</ng-template>\n\n\t\t<form *ngIf=\"sourceTableKeys\"  [formGroup]=\"mainForm\">\n\n\t\t\t<fieldset>\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input *ngIf=\"sourceTables.length == 1\" label=\"Datalink Name\" formControlName=\"name\" placeholder=\"Datalink name (leave blank for auto naming)\" [autocapitalize]=\"true\"\n\t\t\t\t\t\t iconClass=\"fa fa-comment\" [errors]=\"formErrors.name\"></form-input>\n\t\t\t\t\t\t<form-input *ngIf=\"sourceTables.length > 1\" disabled label=\"Datalink Name\" placeholder=\"Datalink name can not be specified when creating multiple datalinks.\"\n\t\t\t\t\t\t iconClass=\"fa fa-comment\"></form-input>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-select formControlName=\"datalinkType\" label=\"Type\" [items]=\"eDatalinkTypeItems\" itemKey=\"key\" itemName=\"description\" [errors]=\"formErrors.datalinkType\"></form-select>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-select formControlName=\"targetConnectionKey\" label=\"Target Connection\" [items]=\"managedConnections\" itemKey=\"key\"\n\t\t\t\t\t\t itemName=\"name\" note=\"Specify the connection for the target table.\" [errors]=\"formErrors.targetConnectionKey\" [allowNullSelect]=\"true\" selectNullMessage=\"No target table\"></form-select>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-select formControlName=\"auditConnectionKey\" label=\"Audit Connection\" [items]=\"managedConnections\" itemKey=\"key\"\n\t\t\t\t\t\t itemName=\"name\" note=\"Specify the connection to store execution results.\" [errors]=\"formErrors.auditConnectionKey\"\n\t\t\t\t\t\t [allowNullSelect]=\"true\" selectNullMessage=\"No datalink auditing\"></form-select>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t</fieldset>\n\t\t</form>\n\n\t\t<form *ngIf=\"sourceTableKeys\" >\n\t\t\t<fieldset>\n\t\t\t\t<section>\n\n\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t<section class=\"col col-11\">\n\t\t\t\t\t\t\t<form-checkbox label=\"Include source columns in target table\" [ngModel]=\"addSourceColumns\" name=\"addSourceColumns\"></form-checkbox>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t<section class=\"col col-11\">\n\t\t\t\t\t\t\t<label class=\"label\">\n\t\t\t\t\t\t\t\tSpecify the audit columns (in addition to source columns) to be included in the target table.\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<form-checkbox label=\"Select All/None\" (ngModelChange)=\"selectAllAuditColumns()\" [ngModel]=\"allAuditColumns\" name=\"selectAllAuditColumns\"></form-checkbox>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t<section *ngFor=\"let auditColumnType of auditColumnTypes\" class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t<form-checkbox [label]=\"auditColumnType.name\" [(ngModel)]=\"auditColumnType.value\" [ngModelOptions]=\"{standalone: true}\"></form-checkbox>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t</fieldset>\n\t\t</form>\n\t</d-widget>\n</div>","<div class=\"container\">\n\t<d-widget title=\"Connections\" iconClass=\"fa fa-lg fa-fw fa-database\" [showCloseButton]=\"true\" (close)=\"close()\">\n\t\t<d-table \n\t\t\t[enableMultiSelect]=\"true\" \n\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t[columns]=\"columns\" \n\t\t\t[dataObservable]=\"tableData\" \n\t\t\t(rowClick)=\"editConnection($event)\" \t\t\t\n\t\t\t[tags]=\"this.hubCache.hub.dexihTags\"\n\t\t>\n\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t<actions-connection-button [connections]=\"items\"></actions-connection-button>\n\t\t\t</ng-template>\n\n\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t<tags-update-button class=\"ml-1\" [objectType]=\"eSharedObjectType.Connection\" [objects]=\"items\" ></tags-update-button>\n\t\t\t</ng-template>\n\n\t\t\t<ng-template #filter select=\"filter\" let-items=\"items\">\n\t\t\t\t<d-button-dropdown class=\"mr-1\" [autoCompact]=\"false\" buttonClass=\"btn-primary\" iconClass=\"fa fa-filter\" [text]=\"eConnectionPurpose[purposeFilter]\" title=\"Filter by a purpose\"\n\t\t\t\t[pullRight]=\"true\">\n\t\t\t\t   <a class=\"dropdown-item\" [class.active]=\"purposeFilter=='All'\" routerLink='.' [queryParams]=\"{purposeFilter: 'All'}\" title=\"All Connections\">All</a>\n\t\t\t\t   <a *ngFor=\"let purpose of eConnectionPurposeItems | gtFilter:'key':0\" [class.active]=\"purposeFilter==purpose.key\" class=\"dropdown-item\" routerLink='.'\n\t\t\t\t\t[queryParams]=\"{purposeFilter: purpose.key}\" [title]=\"purpose.name\">{{purpose.name}}</a>\n\t\t\t   </d-button-dropdown>\t\t\t</ng-template>\n\n\t\t</d-table>\n\n\t</d-widget>\n\n\t<dexih-help class=\"m-3\"  title=\"Connections\" path=\"/assets/help/reference/connection.md\"></dexih-help>\n\n</div>","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { HubCache } from '../../hub.models';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { DexihConnection, eConnectionPurpose, DexihHub, eSharedObjectType, eConnectionPurposeItems } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'connections',\n    templateUrl: './connection-index.component.html',\n    styles: []\n})\nexport class ConnectionIndexComponent implements OnInit, OnDestroy {\n    @Input() public hubKey: number;\n\n    private _subscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n\n    pageTitle: string;\n\n    hubCache: HubCache;\n    purposeFilter: eConnectionPurpose;\n    eConnectionPurpose = eConnectionPurpose;\n    eConnectionPurposeItems = eConnectionPurposeItems;\n    public eSharedObjectType = eSharedObjectType;\n    connections: Array<DexihConnection>;\n\n    columns = [\n        { name: 'name', title: 'Name', format: 'Md', footer: 'description', tags: 'tags' },\n        { name: 'purpose', title: 'Purpose', format: '' },\n        { name: 'type', title: 'Type', format: '' },\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        // watch for any changes in the connections.\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest([\n                this.route.data,\n                this.route.params,\n                this.route.queryParams,\n                this.hubService.getHubCacheObservable()]\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                let queryParams = result[2];\n                this.hubCache = result[3];\n\n                this.purposeFilter = + queryParams['purposeFilter'];\n                if (!this.purposeFilter) { this.purposeFilter = 0; }\n\n                this.pageTitle = eConnectionPurpose[this.purposeFilter] + ' Connections';\n                this.updateConnections();\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Connection Index');\n        }\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    deleteConnection(connection: DexihConnection) {\n        this.hubService.deleteConnections([connection]).catch(reason => {\n        });\n    }\n\n    deleteConnections(connections: Array<DexihConnection>) {\n        this.hubService.deleteConnections(connections);\n    }\n\n    editConnection(connection) {\n        this.router.navigate(['connection-edit', connection.key], { relativeTo: this.route });\n    }\n\n    async updateConnections() {\n        if (this.hubCache && this.hubCache.isLoaded()) {\n            let connections: Array<DexihConnection>;\n            if (this.purposeFilter === 0 || !this.purposeFilter) {\n                connections = this.hubCache.hub.dexihConnections;\n            } else {\n                connections = this.hubCache.hub.dexihConnections\n                    .filter(c => c.purpose === this.purposeFilter);\n            }\n\n            let tableData = []\n            for await (const connection of connections)  {\n                let connectionReference = await this.hubService.GetConnectionReference(connection);\n                tableData.push({\n                    key: connection.key,\n                    connectionAssemblyName: connection.connectionAssemblyName,\n                    connectionClassName: connection.connectionClassName,\n                    purpose: eConnectionPurpose[connection.purpose],\n                    type: connectionReference ? connectionReference.name : 'Unknown (' + connection.connectionClassName + ')',\n                    name: connection.name,\n                    tags: this.hubCache.getObjectTags(eSharedObjectType.Connection, connection.key),\n                    description: connection.description,\n                    updateDate: connection.updateDate\n                });\n            };\n            this._tableData.next(tableData);\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    export(connections: Array<DexihConnection>) {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(this.hubCache.hub.hubKey, '');\n        connections.forEach(connection => { this.hubCache.cacheAddConnection(connection.key, hub); });\n\n        let filename = connections.length === 1 ? 'Connection - ' + connections[0].name + '.json' : 'connections.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    watchChanges() {\n        // watch the current connection in case it is changed in another session.\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n            if (hubCacheChange.changeClass === eSharedObjectType.Connection\n                || hubCacheChange.changeClass === eSharedObjectType.TagObjects) {\n                this.updateConnections();\n            }\n        });\n    }\n}\n","export * from './hubVariable-index/hubVariable-index.component';\nexport * from './hubVariable-edit/hubVariable-edit.component';\n","<div class=\"container\">\n\t<d-widget \n\ttitle=\"Edit Variable\" \n\ticonClass=\"fa fa-lg fa-fw fa-at\" \n\t[showCloseButton]=\"true\"\n\t[padding]=\"true\"\n\t(close)=\"close()\"\n\t>\n        <ng-template #header>\n            <d-button-save *ngIf=\"hubCache.canWrite\" class=\"mr-1\" (click)=\"save()\"></d-button-save>\n            <cancel-button [formsService]=\"formsService\"></cancel-button>\n        </ng-template>\n\n\t\t<form *ngIf=\"formsService.currentForm\"  [formGroup]=\"formsService.currentForm\" >\n\t\t\t<!--dummy hidden password to stop chrome/firefox autocompletion password.-->\n\t\t\t<input id=\"fake_user_name\" name=\"fake_user[name]\" style=\"position:absolute; top:-5000px;\" type=\"text\" value=\"Fake Auto-fill\">\n\t\t\t<input id=\"fake_password\" type=\"password\" name=\"fake_password[password]\" style=\"position:absolute; top:-5000px;\" type=\"text\" value=\"Fake Auto-fill\">\n\n\t\t\t<fieldset>\n\n\t\t\t\t\t\t\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Hub Variable Name\" formControlName=\"name\" placeholder=\"Enter the name.\" [autocapitalize]=\"true\" iconClass=\"fa fa-list\" [errors]=\"formsService.formErrors['name']\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input [label]=\"formsService.currentForm.controls.isEnvironmentVariable.value ? 'Environment Variable Name' : 'Hub Variable Value'\" [type]=\"formsService.currentForm.controls.isEncrypted.value ? 'password' : 'text'\" formControlName=\"valueRaw\" placeholder=\"Enter the value.\" iconClass=\"fa fa-list\" [errors]=\"formsService.formErrors['value']\" autocomplete=\"off\">\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<section >\n\t\t\t\t\t<form-checkbox label=\"Encrypt value\" formControlName=\"isEncrypted\" >\n\t\t\t\t\t</form-checkbox>\n\t\t\t\t</section>\n\n\t\t\t\t<section >\n\t\t\t\t\t<form-checkbox label=\"Use an environment variable on the remote agent\" formControlName=\"isEnvironmentVariable\" >\n\t\t\t\t\t</form-checkbox>\n\t\t\t\t</section>\n\n\t\t\t</fieldset>\n\t\t</form>\n \n\t</d-widget>\n\n\t<dexih-help class=\"m-3\"  title=\"Hub Variables\" path=\"/assets/help/reference/hubVariable.md\"></dexih-help>\n\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\nimport { HubCache, eCacheStatus } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { DexihHubVariable } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n\n  selector: 'dexih-hubVariable-edit-form',\n  templateUrl: './hubVariable-edit.component.html',\n  providers: [HubFormsService]\n})\nexport class HubVariableEditComponent implements OnInit, OnDestroy {\n\n  private hubVariableKey: number;\n\n  private hubCache: HubCache;\n  public action: string; // new or edit\n  public pageTitle: string;\n  public params: Params;\n\n  private _subscription: Subscription;\n  private _formChangeSubscription: Subscription;\n  private _isEncryptedSubscription: Subscription;\n  private isLoaded = false;\n\n  private cancelToken = new CancelToken();\n\n  constructor(private hubService: HubService,\n    private authService: AuthService,\n    public formsService: HubFormsService,\n    private route: ActivatedRoute,\n    private router: Router) {\n  }\n\n  ngOnInit() {\n\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n      ).subscribe(result => {\n        let data = result[0];\n        this.params = result[1];\n        this.hubCache = result[2];\n\n        this.pageTitle = data['pageTitle'];\n        this.action = data['action'];\n\n        if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded ) { return; }\n\n        if (this.isLoaded && this.action === 'new') { return; }\n\n        if (this.isLoaded && this.formsService.hasChanged) {\n            this.authService.confirmDialog('Synchronization warning',\n            'The hub was disconnected, meaning this edit could have been changed by another session.  Would you like to discard the current changes, and reload the latest version?')\n            .then(confirm => {\n                if (confirm) {\n                    this.load();\n                }\n            }).catch(reason => {\n                return;\n            });\n        } else {\n            this.load();\n        }\n\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Edit Variables');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._formChangeSubscription) { this._formChangeSubscription.unsubscribe(); }\n    if (this._isEncryptedSubscription) { this._isEncryptedSubscription.unsubscribe(); }\n    this.cancelToken.cancel();\n  }\n\n  load() {\n    this.isLoaded = true;\n\n    if (this.action === 'edit') {\n      // get the hub key from the route data, and update the service.\n      this.hubVariableKey = + this.params['hubVariableKey'];\n\n      if (!this.hubVariableKey) {\n        this.hubService.addHubErrorMessage('There was no variable specified to edit.');\n        // this.errorMessage = 'There was no validation specified to edit.';\n      } else {\n        if (!this.hubCache.hub || !this.hubCache.hub.dexihHubVariables) {\n          this.hubService.addHubErrorMessage('The hub cache is not loaded.');\n        } else {\n          let hubVariable = this.hubCache.hub.dexihHubVariables.find(c => c.key === this.hubVariableKey);\n          this.formsService.hubVariable(hubVariable);\n        }\n      }\n    }\n\n    if (this.action === 'new') {\n      let hubVariable = new DexihHubVariable();\n      hubVariable.value = '';\n      hubVariable.name = '';\n      this.formsService.hubVariable(hubVariable);\n\n      // update the url with the saved key\n      this._formChangeSubscription = this.formsService.getCurrentFormObservable().subscribe(form => {\n        let key = form.controls.key.value;\n        if (key) {\n          if (history.pushState) {\n            let newUrl = window.location.pathname.replace('/hubVariable-new', `/hubVariable-edit/${key}`)\n            this.router.navigateByUrl(newUrl);\n            this._formChangeSubscription.unsubscribe();\n          }\n        }\n      });\n    }\n\n    this._isEncryptedSubscription = this.formsService.currentForm.controls.isEncrypted.valueChanges.subscribe(isEncrypted => {\n      if (!isEncrypted) {\n        this.formsService.currentForm.controls.valueRaw.setValue('');\n      }\n    });\n  }\n\n  async save() {\n    let form = this.formsService.currentForm;\n\n    let isEncrypted = form.controls.isEncrypted.value;\n    if (isEncrypted) {\n      let valueRaw = form.controls.valueRaw.value;\n        if (valueRaw) {\n          let value = await this.hubService.encrypt(valueRaw, this.cancelToken);\n          form.controls.value.setValue(value);\n          form.controls.valueRaw.setValue(null);\n        }\n      } else {\n        let valueRaw = form.controls.valueRaw.value;\n        form.controls.value.setValue(valueRaw);\n      }\n\n    await this.formsService.save();\n  }\n\n  close() {\n    this.authService.navigateUp();\n  }\n\n}\n","<div class=\"container\">\n\t<d-widget \n\t\ttitle=\"Edit Connection\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-database\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\t\t[padding]=\"true\"\n\t\t>\n        <ng-template #header>\n\t\t\t<dexih-invalid-form-details class=\"mr-1\" [control]=\"formsService.currentForm\" (click)=\"formsService.showErrors()\"></dexih-invalid-form-details>\n\t\t\t<d-button class=\"mr-1\" *ngIf=\"hubCache.canWrite\" buttonClass=\"btn btn-success\" [busy]=\"refreshingConnection\" iconClass=\"fa fa-thumbs-o-up\" (click)=\"!refreshingConnection && refreshConnection()\" title=\"Test the connection against the source.\">Test</d-button>\n\t\t\t<save-button *ngIf=\"hubCache.canWrite\" [formsService]=\"formsService\" class=\"mr-1\"></save-button>\n\n\t\t\t<ng-template [ngIf]=\"hubCache.canWrite && connectionReference\">\n\t\t\t\t<ng-template [ngIf]=\"connectionReference.connectionCategory == eConnectionCategory.SqlDatabase || connectionReference.connectionCategory == eConnectionCategory.DatabaseFile || connectionReference.connectionCategory == eConnectionCategory.NoSqlDatabase || connectionReference.connectionCategory == eConnectionCategory.Hub\">\n\t\t\t\t\t<d-button class=\"mr-1\" *ngIf=\"formsService.currentForm.controls.key.value\" [routerLink]=\"['../../connection-import', formsService.currentForm.controls.key.value]\" iconClass=\"fa fa-plus\">Import Tables</d-button>\n\t\t\t\t</ng-template>\n\t\t\t\t<ng-template [ngIf]=\"connectionReference.connectionCategory == eConnectionCategory.File\">\n\t\t\t\t\t<d-button class=\"mr-1\" *ngIf=\"formsService.currentForm.controls.key.value\" [routerLink]=\"['../../../tables', 'table-new', formsService.currentForm.controls.key.value]\" iconClass=\"fa fa-plus\">New File</d-button>\n\t\t\t\t</ng-template>\n\t\t\t\t<ng-template [ngIf]=\"connectionReference.connectionCategory == eConnectionCategory.WebService\">\n\t\t\t\t\t<d-button class=\"mr-1\" *ngIf=\"formsService.currentForm.controls.key.value\" [routerLink]=\"['../../../tables', 'table-new', formsService.currentForm.controls.key.value]\"  iconClass=\"fa fa-plus\">New WebService</d-button>\n\t\t\t\t</ng-template>\n\t\t\t</ng-template>\n\n\t\t\t<cancel-button [formsService]=\"formsService\"></cancel-button>\n        </ng-template>\n\n\t\t<form *ngIf=\"formsService.currentForm\"  [formGroup]=\"formsService.currentForm\">\n\t\t\t<!--dummy hidden password to stop chrome/firefox/safari autocompletion password.-->\n\t\t\t<input id=\"fake_user_name\" name=\"fake_user[name]\" style=\"position:absolute; top:-5000px;\" type=\"text\" value=\"Fake Auto-fill\">\n\t\t\t<input id=\"fake_password\" type=\"password\" name=\"fake_password[password]\" style=\"position:absolute; top:-5000px;\" type=\"text\" value=\"Fake Auto-fill\">\n\n\t\t\t<fieldset>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<form-select label=\"Purpose\" formControlName=\"purpose\" placeholder=\"Connection purpose\" iconClass=\"fa fa-database\"\n\t\t\t\t\t\t\t[items]=\"eConnectionPurposeItems\" itemName=\"name\" itemKey=\"key\" [enableFilter]=\"false\"\n\t\t\t\t\t\t\t[errors]=\"formsService.formErrors.purpose\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Name\" formControlName=\"name\" placeholder=\"Enter a name for the connection\" [autocapitalize]=\"true\" iconClass=\"fa fa-database\"\n\t\t\t\t\t\t\t[errors]=\"formsService.formErrors.name\">\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-select label=\"Database Type\" [(ngModel)]=\"connectionReference\" [ngModelOptions]=\"{standalone: true}\" (ngModelChange)=\"selectDatabaseType($event)\" \n\t\t\t\t\t\t\t[items]=\"connectionTypes\" itemName=\"name\" itemKey=\"name\" [enableKeySelect]=\"false\"\n\t\t\t\t\t\t\ticonClass=\"fa fa-database\" [sortItems]=\"true\">\n\t\t\t\t\t\t</form-select>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<section>\n                    <form-textarea label=\"Description\" formControlName=\"description\" [showPreview]=\"true\"  [isHidden]=\"true\" placeholder=\"Enter the description.\"  [errors]=\"formsService.formErrors.description\">\n                    </form-textarea>\n                </section>\n\n\t\t\t\t<span *ngIf=\"connectionReference\">\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<markdown [data]=\"connectionReference.description\" (click)=\"getRoute($event)\"></markdown>\n\t\t\t\t\t</section>\n\n\t\t\t\t\t<span *ngIf=\"connectionReference.allowsConnectionString == true\">\n\t\t\t\t\t\t<section >\n\t\t\t\t\t\t\t<form-checkbox label=\"Use a connection string\" formControlName=\"useConnectionString\" >\n\t\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t\t</section>\n\n\t\t\t\t\t\t<section *ngIf=\"formsService.currentForm.controls.useConnectionString.value == true\">\n\t\t\t\t\t\t\t<form-input *ngIf=\"!formsService.currentForm.controls.useConnectionStringVariable.value\"\n\t\t\t\t\t\t\t\tlabel=\"Connection String\" (keydown)=\"connectionStringChanged()\" formControlName=\"connectionStringDisplay\" placeholder=\"Enter a the connection string\" iconClass=\"fa fa-database\" [errors]=\"formsService.formErrors.connectionStringDisplay\">\n\t\t\t\t\t\t\t\t<span *ngIf=\"!formsService.formErrors.connectionStringRaw\"> (<a href=\"javascript:void(0)\" *ngIf=\"revealingConnectionString == false\" (click)=\"revealConnectionString()\"> <i class=\"fa fa-refresh\"></i> Reveal </a>\n\t\t\t\t\t\t\t\t<span *ngIf=\"revealingConnectionString == true\" > <i class=\"fa fa-spin fa-refresh\"></i> Revealing... please wait </span>)</span>\n\t\t\t\t\t\t\t</form-input>\n\n\t\t\t\t\t\t\t<form-select *ngIf=\"formsService.currentForm.controls.useConnectionStringVariable.value\"\n\t\t\t\t\t\t\t\tlabel=\"Connection String\" \n\t\t\t\t\t\t\t\tformControlName=\"connectionString\" \n\t\t\t\t\t\t\t\t[items]=\"variables\" \n\t\t\t\t\t\t\t\ticonClass=\"fa fa-at\" \n\t\t\t\t\t\t\t\t[sortItems]=\"true\" \n\t\t\t\t\t\t\t\t[enableTextEntry]=\"true\"\n\t\t\t\t\t\t\t\ttextEntryNote=\"Enter the variable name surrounded by {}\">\n\t\t\t\t\t\t\t</form-select>\n\n\t\t\t\t\t\t\t<form-checkbox label=\"Use a variable for connection string\" formControlName=\"useConnectionStringVariable\" (click)=\"clearConnectionString()\" >\n\t\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t</span>\n\n\t\t\t\t\t<span *ngIf=\"formsService.currentForm.controls.useConnectionString.value == false\">\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<form-select \n\t\t\t\t\t\t\t\t[enableTextEntry]=\"true\" \n\t\t\t\t\t\t\t\t[label]=\"connectionReference.serverDescription\" \n\t\t\t\t\t\t\t\tformControlName=\"server\" \n\t\t\t\t\t\t\t\tplaceholder=\"Enter the details.\" \n\t\t\t\t\t\t\t\ticonClass=\"fa fa-server\" \n\t\t\t\t\t\t\t\t[errors]=\"formsService.formErrors.server\"\n\t\t\t\t\t\t\t\t[items]=\"variables\" \n\t\t\t\t\t\t\t\t[enableFilter]=\"true\"\n\t\t\t\t\t\t\t\t[note]=\"connectionReference.serverHelp\"\n\t\t\t\t\t\t\t></form-select> \n\t\t\t\t\t\t</section>\n\n\t\t\t\t\t\t<section *ngIf=\"connectionReference.allowsWindowsAuth == true\">\n\t\t\t\t\t\t\t<form-checkbox label=\"Use windows authentication\" formControlName=\"useWindowsAuth\">\n\t\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t\t</section>\n\n\t\t\t\t\t\t<div *ngIf=\"connectionReference.allowsUserPassword && (formsService.currentForm.controls.useWindowsAuth.value == false || connectionReference.allowsWindowsAuth == false)\" class=\"form-row\">\n\t\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t\t<form-select \n\t\t\t\t\t\t\t\t\t[enableTextEntry]=\"true\" \n\t\t\t\t\t\t\t\t\tlabel=\"User Name\" \n\t\t\t\t\t\t\t\t\tformControlName=\"username\" \n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter user name\" \n\t\t\t\t\t\t\t\t\ticonClass=\"fa fa-user\" \n\t\t\t\t\t\t\t\t\t[errors]=\"formsService.formErrors.username\"\n\t\t\t\t\t\t\t\t\t[items]=\"variables\" \n\t\t\t\t\t\t\t\t\t[enableFilter]=\"true\"\n\t\t\t\t\t\t\t\t></form-select> \n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t\t<form-input *ngIf=\"formsService.currentForm.controls.usePasswordVariable.value == false\" label=\"Password\" (keydown)=\"passwordChanged()\" formControlName=\"passwordDisplay\" type=\"password\" placeholder=\"Enter a password\"  iconClass=\"fa fa-lock\" [errors]=\"formsService.formErrors.password\">\n\t\t\t\t\t\t\t\t</form-input>\n\n\t\t\t\t\t\t\t\t<form-select *ngIf=\"formsService.currentForm.controls.usePasswordVariable.value\"\n\t\t\t\t\t\t\t\t\tlabel=\"Password\" \n\t\t\t\t\t\t\t\t\tformControlName=\"password\" \n\t\t\t\t\t\t\t\t\t[items]=\"variables\" \n\t\t\t\t\t\t\t\t\ticonClass=\"fa fa-at\" \n\t\t\t\t\t\t\t\t\t[sortItems]=\"true\" \n\t\t\t\t\t\t\t\t\t[enableTextEntry]=\"true\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t</form-select>\n\n\t\t\t\t\t\t\t\t<form-checkbox label=\"Use a variable for password\" formControlName=\"usePasswordVariable\" (click)=\"clearPassword()\" >\n\t\t\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div *ngIf=\"connectionReference.allowsToken && (formsService.currentForm.controls.useWindowsAuth.value == false || connectionReference.allowsWindowsAuth == false)\" class=\"form-row\">\n\t\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t\t<form-input *ngIf=\"formsService.currentForm.controls.usePasswordVariable.value == false\" label=\"Secure Token\" (keydown)=\"passwordChanged()\" formControlName=\"passwordDisplay\" type=\"password\" placeholder=\"Enter secure token\"  iconClass=\"fa fa-lock\" [errors]=\"formsService.formErrors.password\">\n\t\t\t\t\t\t\t\t</form-input>\n\n\t\t\t\t\t\t\t\t<form-select *ngIf=\"formsService.currentForm.controls.usePasswordVariable.value\"\n\t\t\t\t\t\t\t\t\tlabel=\"Secure Token\" \n\t\t\t\t\t\t\t\t\tformControlName=\"password\" \n\t\t\t\t\t\t\t\t\t[items]=\"variables\" \n\t\t\t\t\t\t\t\t\ticonClass=\"fa fa-at\" \n\t\t\t\t\t\t\t\t\t[sortItems]=\"true\" \n\t\t\t\t\t\t\t\t\t[enableTextEntry]=\"true\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t</form-select>\n\n\t\t\t\t\t\t\t\t<form-checkbox label=\"Use a variable for token\" formControlName=\"usePasswordVariable\" (click)=\"clearPassword()\" >\n\t\t\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<section *ngIf=\"connectionReference.requiresDatabase\" ng-disabled=\"refreshingConnection || creatingDatabase\" >\n\t\t\t\t\t\t\t<form-select \n\t\t\t\t\t\t\t\t[label]=\"connectionReference.databaseDescription\" \n\t\t\t\t\t\t\t\tformControlName=\"defaultDatabase\" \n\t\t\t\t\t\t\t\t[items]=\"databases\" \n\t\t\t\t\t\t\t\t[defaultItem]=\"formsService.currentForm.value.defaultDatabase\" \n\t\t\t\t\t\t\t\ticonClass=\"fa fa-database\" \n\t\t\t\t\t\t\t\t[sortItems]=\"true\" \n\t\t\t\t\t\t\t\t[enableTextEntry]=\"true\"\n\t\t\t\t\t\t\t\ttextEntryNote=\"Enter the database name\"\n\t\t\t\t\t\t\t\t(valueChange)=\"newDatabaseName($event)\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t(<a href=\"javascript:void(0)\" *ngIf=\"refreshingConnection == false\" (click)=\"refreshConnection()\"> <i class=\"fa fa-refresh\"></i> Refresh </a>\n\t\t\t\t\t\t\t<span *ngIf=\"refreshingConnection == true\" > <i class=\"fa fa-spin fa-refresh\"></i> Refreshing... please wait </span>) (\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\" *ngIf=\"creatingDatabase == false\" (click)=\"createDatabase()\"> <i class=\"fa fa-edit\"></i> New Database </a>\n\t\t\t\t\t\t\t\t<span *ngIf=\"creatingDatabase == true\"> <i class=\"fa fa-spin fa-refresh\"></i> Creating database... please wait </span>)\n\t\t\t\t\t\t\t</form-select>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</span>\n\n\t\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t<form-input  type=\"number\" label=\"Connection Timeout\" formControlName=\"connectionTimeout\" iconClass=\"fa fa-clock-o\"\t[errors]=\"formsService.formErrors.connectionTimeout\"\n\t\t\t\t\t\t\tnote=\"The duration in seconds the remote agent will wait to establish a connection.\">\n\t\t\t\t\t\t\t</form-input>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t\t<form-input type=\"number\" label=\"Command Timeout\" formControlName=\"commandTimeout\" iconClass=\"fa fa-clock-o\"\t[errors]=\"formsService.formErrors.commandTimeout\"\n\t\t\t\t\t\t\tnote=\"The duration in seconds the remote agent will for a command to start returning a result.\">\n\t\t\t\t\t\t\t</form-input>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<section *ngIf=\"formsService.currentForm.controls.purpose.value == 'Managed'\">\n\t\t\t\t\t\t<form-checkbox label=\"Multi-use Managed Database (table keys will be added to table names to allow multiple hubs to use same database)\"\n\t\t\t\t\t\t\tformControlName=\"embedTableKey\" [errors]=\"formsService.formErrors.embedTableKey\">\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\n\t\t\t\t</span>\n\t\t\t</fieldset>\n\n\t\t</form>\n\t</d-widget>\n\t\n\t<dexih-help class=\"m-3\" title=\"Connections\" path=\"/assets/help/reference/connection.md\"></dexih-help>\n\n</div>","import { Component, OnInit, OnDestroy, HostListener } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { HubCache, eCacheStatus } from '../../hub.models';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { LogFactory, eLogLevel } from '../../../../logging';\nimport { eConnectionPurpose, eConnectionCategory, ConnectionReference, DexihConnection, RemoteLibraries, eConnectionPurposeItems } from '../../../shared/shared.models';\nimport { CancelToken } from '../../../+auth/auth.models';\n\n@Component({\n\n  selector: 'dexih-connection-edit-form',\n  templateUrl: './connection-edit.component.html',\n  providers: [HubFormsService]\n})\nexport class ConnectionEditComponent implements OnInit, OnDestroy {\n\n  public connectionKey: number;\n  private connectionTypes: Array<ConnectionReference>;\n  public hubCache: HubCache;\n  private remoteLibraries: RemoteLibraries;\n  public action: string; // new or edit\n  public pageTitle: string;\n  public params: Params\n\n  private _subscription: Subscription;\n  private _formChangeSubscription: Subscription;\n  private _purposeSubscription: Subscription;\n\n  public savingConnection = false;\n  public refreshingConnection = false;\n  public revealingConnectionString = false;\n  public creatingDatabase = false;\n\n  public databases: Array<string> = [];\n\n  public eConnectionPurposeItems = eConnectionPurposeItems.filter( c => c.key > 0);\n  public eConnectionPurpose = eConnectionPurpose;\n  public eConnectionCategory = eConnectionCategory;\n\n  public cancelToken: CancelToken = new CancelToken();\n\n  public connectionReference: ConnectionReference;\n  private isLoaded = false;\n\n  public variables = [];\n\n  private logger = new LogFactory('connection-edit');\n\n  constructor(private hubService: HubService,\n    private authService: AuthService,\n    public formsService: HubFormsService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit() {\n    this.logger.LogC(() => `OnInit`, eLogLevel.Trace);\n\n    try {\n      this._subscription = combineLatest([\n        this.route.data,\n        this.route.params,\n        this.hubService.getHubCacheObservable(),\n        this.hubService.getRemoteLibrariesObservable()]\n      ).subscribe(async result => {\n        let data = result[0];\n        this.params = result[1];\n        this.hubCache = result[2];\n        this.remoteLibraries = result[3];\n\n        this.action = data['action'];\n        this.pageTitle = data['pageTitle'];\n\n        this.variables = this.hubCache.hub.dexihHubVariables.map(c => '{' + c.name + '}');\n\n        if (!this.hubCache || this.hubCache.status !== eCacheStatus.Loaded ) { return; }\n\n        if (this.isLoaded && this.action === 'new') { return; }\n\n        if (this.isLoaded && this.formsService.hasChanged) {\n            this.authService.confirmDialog('Synchronization warning',\n            'The hub was disconnected, meaning this edit could have been changed by another session.  Would you like to discard the current changes, and reload the latest version?')\n            .then(async confirm => {\n                if (confirm) {\n                    await this.load();\n                }\n            }).catch(reason => {\n                return;\n            });\n        } else {\n            await this.load();\n        }\n      });\n    } catch (e) {\n      this.hubService.addHubClientErrorMessage(e, 'Connection Edit');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n    if (this._formChangeSubscription) { this._formChangeSubscription.unsubscribe(); }\n    if (this._purposeSubscription) { this._purposeSubscription.unsubscribe(); }\n    this.cancelToken.cancel();\n  }\n\n  private async load() {\n    this.isLoaded = true;\n\n    if (this.action === 'edit') {\n      // get the hub key from the route data, and update the service.\n      this.connectionKey = + this.params['connectionKey'];\n\n      this.logger.LogC(() => `edit connection key ${this.connectionKey}.`, eLogLevel.Trace);\n\n      if (!this.connectionKey) {\n        this.hubService.addHubErrorMessage('There was no connection specified to edit.');\n      } else {\n        if (!this.hubCache.hub || !this.hubCache.hub.dexihConnections) {\n          this.hubService.addHubErrorMessage('The hub cache is not loaded.');\n        } else {\n          let connection = this.hubCache.hub.dexihConnections.find(c => c.key === this.connectionKey);\n          if (!connection) {\n            this.hubService.addHubErrorMessage('The specified connection could not be found.');\n            this.logger.LogC(() => `edit connection with key ${this.connectionKey} not found.`, eLogLevel.Warning);\n          } else {\n            this.updateDatabaseTypes(connection.purpose);\n            this.connectionReference = await this.hubService.GetConnectionReference(connection);\n            this.formsService.connection(connection);\n            if (connection.defaultDatabase) {\n              this.databases = [connection.defaultDatabase];\n            }\n            this.logger.LogC(() => `edit connection, form loaded.`, eLogLevel.Trace);\n          }\n        }\n      }\n    }\n\n    if (this.action === 'new') {\n      let connection = new DexihConnection();\n      connection.purpose = +this.params['purpose'];\n\n      this.logger.LogC(() => `new connection, purpose ${connection.purpose}.`, eLogLevel.Trace);\n\n      this.updateDatabaseTypes(connection.purpose);\n      this.formsService.connection(connection);\n\n      this.updateUrl();\n\n      this.logger.LogC(() => `new connection, form loaded.`, eLogLevel.Trace);\n    }\n\n    if (this.action === 'copy') {\n\n      let connection = new DexihConnection();\n\n      let previousConnectionKey = + this.params['connectionKey'];\n      let previousConnection = this.hubCache.hub.dexihConnections.find(c => c.key === previousConnectionKey);\n      Object.assign(connection, previousConnection);\n      connection.name += ' (copy)';\n      connection.key = null;\n      this.connectionReference = await this.hubService.GetConnectionReference(connection);\n\n      this.logger.LogC(() => `copy connection, connectionKey ${previousConnectionKey}.`, eLogLevel.Trace);\n      this.updateDatabaseTypes(connection.purpose);\n      this.formsService.connection(connection);\n\n      this.updateUrl();\n\n      this.logger.LogC(() => `new connection, form loaded.`, eLogLevel.Trace);\n    }\n\n    if (this._purposeSubscription) { this._purposeSubscription.unsubscribe(); }\n    this._purposeSubscription = this.formsService.currentForm.controls.purpose.valueChanges.subscribe(purpose => {\n        this.updateDatabaseTypes(purpose);\n    });\n  }\n\n  private updateUrl() {\n      // update the url with the saved key\n      this._formChangeSubscription = this.formsService.getCurrentFormObservable().subscribe(form => {\n        let key = form.controls.key.value;\n        if (key) {\n          if (history.pushState) {\n            let url = window.location.pathname;\n            let index = url.indexOf('/connection-new');\n            if (index > 0) {\n              let newUrl = url.substr(0, index) + `/connection-edit/${key}`;\n              this.router.navigateByUrl(newUrl);\n            }\n            this._formChangeSubscription.unsubscribe();\n          }\n        }\n      });\n  }\n\n  private updateDatabaseTypes(purpose: eConnectionPurpose) {\n    this.connectionTypes = this.remoteLibraries.connections.filter(d =>\n      (purpose === eConnectionPurpose.Source && d.allowsSourceConnection) ||\n      (purpose === eConnectionPurpose.Managed && d.allowsManagedConnection) ||\n      (purpose === eConnectionPurpose.Target && d.allowsTargetConnection));\n  }\n\n  async selectDatabaseType(connectionReference: ConnectionReference) {\n    this.formsService.currentForm.controls.connectionClassName.setValue(connectionReference.connectionClassName);\n    this.formsService.currentForm.controls.connectionAssemblyName.setValue(connectionReference.connectionAssemblyName);\n\n    // For integration hub connections, pre-fill some information.\n    if (this.connectionReference.connectionCategory === eConnectionCategory.Hub) {\n      if (!this.formsService.currentForm.controls.server.value) {\n        const uri = location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '');\n        this.formsService.currentForm.controls.server.setValue(uri);\n      }\n      if (!this.formsService.currentForm.controls.username.value) {\n        const user = this.authService.getUser()\n        if (user) {\n          this.formsService.currentForm.controls.username.setValue(user.email);\n        }\n      }\n    }\n  }\n\n  connectionStringChanged() {\n    this.logger.LogC(() => `connectionStringChanged.`, eLogLevel.Trace);\n    if (this.formsService.currentForm.controls.connectionString.value) {\n      this.formsService.currentForm.controls.connectionString.setValue(null);\n      this.formsService.currentForm.controls.connectionStringDisplay.setValue('');\n    }\n  }\n\n  clearConnectionString() {\n    this.formsService.currentForm.controls.connectionString.setValue(null);\n    this.formsService.currentForm.controls.connectionStringDisplay.setValue('');\n  }\n\n  revealConnectionString() {\n    this.logger.LogC(() => `revealConnectionString.`, eLogLevel.Trace);\n    this.revealingConnectionString = true;\n\n    this.hubService.decrypt(this.formsService.currentForm.controls.connectionString.value, this.cancelToken)\n      .then(result => {\n        this.formsService.currentForm.controls.connectionStringDisplay.setValue(result);\n        this.revealingConnectionString = false;\n      }).catch(reason => {\n        this.hubService.addHubMessage(reason);\n        this.revealingConnectionString = false;\n      });\n  }\n\n  passwordChanged() {\n    this.logger.LogC(() => `passwordChanged.`, eLogLevel.Trace);\n\n    if (this.formsService.currentForm.controls.password.value) {\n      this.formsService.currentForm.controls.password.setValue(null);\n      this.formsService.currentForm.controls.passwordDisplay.setValue('');\n    }\n  }\n\n  clearPassword() {\n    this.formsService.currentForm.controls.password.setValue(null);\n    this.formsService.currentForm.controls.passwordDisplay.setValue('');\n  }\n\n  async refreshConnection() {\n    this.logger.LogC(() => `refreshConnection.`, eLogLevel.Trace);\n\n    await this.encryptConnection();\n\n    this.refreshingConnection = true;\n    this.hubService.refreshConnection(this.formsService.currentForm.value, this.cancelToken)\n      .then(result => {\n        this.hubService.addHubSuccessMessage('The connection was successful.');\n        this.databases = result;\n        this.refreshingConnection = false;\n      }).catch(reason => {\n        this.hubService.addHubMessage(reason);\n        this.refreshingConnection = false;\n      });\n  }\n\n  newDatabaseName(value: {textValue: string, item: any}) {\n    this.formsService.currentForm.controls.defaultDatabase.setValue(value.textValue);\n  }\n\n  createDatabase() {\n    this.creatingDatabase = true;\n\n    this.authService.promptDialog('Create Database', 'Enter the name for the new database?').then(async result => {\n      if (result) {\n        await this.encryptConnection();\n\n        let connection = Object.assign({}, this.formsService.currentForm.value);\n        connection.defaultDatabase = result;\n\n        this.hubService.createDatabase(connection, this.cancelToken)\n          .then(() => {\n            this.hubService.addHubSuccessMessage('The database was created successfully.');\n            this.databases = [result];\n            this.formsService.currentForm.controls.defaultDatabase.setValue(result);\n            this.creatingDatabase = false;\n          }).catch(reason => {\n            this.hubService.addHubMessage(reason);\n            this.creatingDatabase = false;\n          });\n      } else {\n        this.creatingDatabase = false;\n      }\n    }).catch(() => {\n      this.creatingDatabase = false;\n    });\n  }\n\n  async encryptConnection() {\n    let form = this.formsService.currentForm;\n\n    let passwordRaw = form.controls.passwordRaw.value;\n    if (passwordRaw) {\n      let password = await this.hubService.encrypt(passwordRaw, this.cancelToken);\n      form.controls.password.setValue(password);\n      form.controls.passwordRaw.setValue(null);\n    }\n\n    let connectionStringRaw = form.controls.connectionStringRaw.value;\n    if (connectionStringRaw) {\n      let connectionString = await this.hubService.encrypt(connectionStringRaw, this.cancelToken);\n      form.controls.connectionString.setValue(connectionString);\n      form.controls.connectionStringRaw.setValue(null);\n    }\n  }\n\n  async save() {\n    await this.encryptConnection();\n    await this.formsService.save();\n  }\n\n  close() {\n    this.authService.navigateUp();\n  }\n\n  public canDeactivate(): Promise<boolean> {\n    return new Promise<boolean>((resolve) => {\n      if (this.formsService.hasChanged) {\n        this.authService.confirmDialog('The connection has not been saved',\n          'The connection changes have not been saved.  Do you want to discard the changes and exit?')\n          .then((confirm) => {\n              resolve(confirm);\n            }).catch(() => {\n              resolve(false);\n            });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n\n  public getRoute(event) {\n    this.authService.getRoute(event);\n  }\n\n  // @HostListener allows is to guard against browser refresh, close, etc.\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.formsService.hasChanged) {\n      $event.returnValue = 'The connection changes have not been saved.  Do you want to discard the changes and exit?';\n    }\n  }\n}\n","import { Component, Input, Output, ViewChild, OnInit, OnDestroy, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { TypeFunctions, TypeCodes, eBasicType } from '../../hub.remote.models';\n\n@Component({\n\n    selector: 'customFunction-parameter',\n    templateUrl: './customFunction-parameter.component.html'\n})\nexport class CustomFunctionParameterComponent implements OnInit, OnDestroy {\n\n    @Input() public customFunctionParameterForm: FormGroup = null;\n\n    @Output() public addParameter: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n    @Output() public removeParameter: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n\n\n    private type: TypeFunctions;\n    eBasicType = eBasicType;\n    typeCodes = TypeCodes;\n\n    public staticValue: string;\n\n    ignoreChanges = false;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnDestroy() {\n    }\n\n    add() {\n        this.addParameter.emit(this.customFunctionParameterForm);\n    }\n\n    remove() {\n        this.removeParameter.emit(this.customFunctionParameterForm);\n    }\n\n}\n","<form [formGroup]=\"customFunctionParameterForm\" class=\"mb-1\">\n        <div class=\"input-group\">\n            <input type=\"text\" class=\"form-control\" formControlName=\"name\" placeholder=\"Enter a name for the parameter\">\n\n            <!-- <form-input [border]=\"false\" class=\"form-control p-0\" formControlName=\"name\" type=\"text\" placeholder=\"Enter a name for the parameter\"></form-input> -->\n\n            <form-select [border]=\"false\" class=\"form-control p-0\" formControlName=\"dataType\" [items]=\"typeCodes\" itemKey=\"key\" itemName=\"name\">\n            </form-select>\n\n            <div class=\"input-group-append\">\n                <div class=\"input-group-text p-0\">\n                    <span class=\"p-1\">Array Dimensions (0-non array)</span>\n                    <input class=\" mx-1\" type=\"number\" formControlName=\"rank\">\n                </div>\n                <div class=\"input-group-text p-0\">\n                    <button type=\"button\" (click)=\"add()\" class=\"btn btn-sm border-0 bg-transparent\" value=\"Add\">\n                        <i class=\"fa fa-plus-square-o\"></i>\n                    </button>\n                </div>\n                <div class=\"input-group-text p-0\">\n                    <button type=\"button\" (click)=\"remove()\" class=\"btn btn-sm border-0 bg-transparent\" value=\"Remove\">\n                        <i class=\"fa fa-minus-square-o\"></i>\n                    </button>\n                </div>\n            </div>\n        </div>\n</form>","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { HubCache } from '../../hub.models';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { HubFormsService } from '../../hub.forms.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { DexihRemoteAgentHub, DexihRemoteAgent } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'remote-agents',\n    templateUrl: './remoteAgent-edit.component.html',\n    providers: [HubFormsService]\n})\nexport class RemoteAgentEditComponent implements OnInit, OnDestroy {\n    @Input() public hubKey: number;\n\n    private _subscription: Subscription;\n\n    public remoteAgentKey: number;\n    private remoteAgentHubKey: number;\n\n    hubCache: HubCache;\n    name: string;\n\n    remoteAgents: DexihRemoteAgent[];\n    remoteAgentHub: DexihRemoteAgentHub;\n\n    public isNew = false;\n\n    ipAddress: string;\n\n    constructor(\n        private authService: AuthService,\n        private hubService: HubService,\n        public formsService: HubFormsService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable(),\n                this.authService.getRemoteAgentsObservable(),\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n                this.remoteAgents = result[3];\n\n                if (!this.hubCache.isLoaded() || !this.remoteAgents) { return; }\n\n                this.remoteAgentKey = +params['remoteAgentKey'];\n                this.remoteAgentHubKey = +params['remoteAgentHubKey'];\n\n                if (!this.remoteAgentKey) {\n                    this.hubService.addHubErrorMessage('There was no remote agent specified to edit.');\n                    // this.errorMessage = 'There was no validation specified to edit.';\n                } else {\n                    let remoteAgent = this.remoteAgents.find(c => c.remoteAgentKey === this.remoteAgentKey);\n                    let activeAgent = remoteAgent['activeAgents'] &&\n                        remoteAgent['activeAgents'].length > 0 ? remoteAgent['activeAgents'][0] : null;\n                    this.name = activeAgent ? activeAgent.name : '';\n                    this.ipAddress = activeAgent ? activeAgent.ipAddress : null;\n                    this.remoteAgentHub = this.hubCache.hub.dexihRemoteAgentHubs.find(c => c.remoteAgentHubKey === this.remoteAgentHubKey);\n\n                    if (!this.remoteAgentHub) {\n                        this.remoteAgentHub = {\n                            hubKey: this.hubCache.hub.hubKey,\n                            remoteAgentHubKey: 0,\n                            remoteAgentKey: remoteAgent.remoteAgentKey,\n                            isAuthorized: true,\n                            isValid: true,\n                            createDate: null,\n                            isDefault: false,\n                            updateDate: null\n                        }\n                        this.remoteAgentHub['allowExternalConnect'] = true;\n                        this.remoteAgentHub['isSelected'] = false;\n                        this.isNew = true;\n                    }\n\n                    this.formsService.remoteAgent(this.remoteAgentHub);\n\n                    if (this.remoteAgentHub.remoteAgentHubKey === 0) {\n                        this.formsService.hasChanged = true;\n                    }\n                }\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Remote Agent Edit');\n        }\n\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    addCurrentIp() {\n        if (this.ipAddress) {\n            let form = this.formsService.currentForm;\n            let ipAddressesControl = form.controls.ipAddresses;\n            let ipAddresses = <string[]> ipAddressesControl.value;\n\n            if (ipAddresses.findIndex(c => c === this.ipAddress) < 0) {\n                ipAddresses.push(this.ipAddress);\n                ipAddressesControl.setValue(ipAddresses);\n            }\n        }\n    }\n\n    save() {\n        let form = this.formsService.currentForm;\n        let remoteAgentHub = form.value;\n        this.hubService.saveRemoteAgent(remoteAgentHub).then((success) => {\n            if (success) {\n                this.hubService.addHubSuccessMessage('The remote agent updated successfully.');\n                this.authService.navigateUp();\n            }\n        });\n    }\n}\n","<dexih-message #DexihMessage></dexih-message>\n\n<div class=\"container\">\n    <d-widget \n\t\ttitle=\"Edit Hub Remote Agent\" \n        iconClass=\"fa fa-lg fa-fw fa-database\" \n        [padding]=\"true\"\n        [showCloseButton]=\"true\"\n        (close)=\"close()\"\n    >\n        <ng-template #header>\n            <d-button-edit [routerLink]=\"['/hubs', 'index', 'agents', 'edit', remoteAgentKey]\"></d-button-edit>\n            <d-button-save [disabled]=\"!formsService.hasChanged\" (click)=\"save()\" class=\"pl-1\"></d-button-save>\n            <cancel-button [formsService]=\"formsService\" class=\"pl-1\"></cancel-button>\n        </ng-template>\n\n        <div *ngIf=\"isNew\" class=\"alert alert-primary\">\n            Creating a new hub -> remote agent authorization\n        </div>\n\n        <form *ngIf=\"formsService.currentForm\"  [formGroup]=\"formsService.currentForm\">\n            <fieldset>\n                <section >\n                    <form-input label=\"Agent name\" [disabled]=\"true\" note=\"This can be changed in the agents appsettings.json config file.\" [(ngModel)]=\"name\" [ngModelOptions]=\"{standalone: true}\" iconClass=\"fa fa-comment\"></form-input>\n                </section>\n\n                <section>\n\t\t\t\t\t<form-checkbox label=\"Is default agent for this Hub\" formControlName=\"isDefault\" >\n\t\t\t\t\t</form-checkbox>\n                </section>\n\n                <section>\n\t\t\t\t\t<form-checkbox label=\"Is Authorized for this Hub.\" formControlName=\"isAuthorized\" >\n\t\t\t\t\t</form-checkbox>\n                </section>\n            </fieldset>\n        </form>\n    </d-widget>\n</div>\n","export * from './api-edit.component';\n","export * from './listOfValues-index.component';\n","<div class=\"container\">\n    <d-widget [title]=\"title\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-table\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\t\t[showIf]=\"hubCache?.hub\"\n\t>\n\n\t\t<d-table \n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[dataObservable]=\"tableData\"\n\t\t\t(rowClick)=\"editTable($event)\"\n\t\t\t[tags]=\"this.hubCache.hub.dexihTags\"\n\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t>\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<actions-table-button [tables]=\"items\" [refreshTables]=\"true\" ></actions-table-button>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #rowStatus select=\"rowStatus\" let-table=\"item\">\n\t\t\t\t\t<datalink-status [tableKey]='table?.key'></datalink-status>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #filter select=\"filter\" let-items=\"items\">\n\t\t\t\t\t<d-button-dropdown *ngIf=\"hubCache?.hub\" class=\"mr-1\"[autoCompact]=\"false\" buttonClass=\"btn btn-primary\" iconClass=\"fa fa-database\" [text]=\"connectionName\" title=\"Filter by a connection\" [pullRight]=\"true\">\n\t\t\t\t\t\t<a *ngFor=\"let connection of (hubCache.hub.dexihConnections | equalFilter :'isValid':true )\" class=\"dropdown-item\" routerLink=\".\" [queryParams]=\"{connectionKey: connection.key}\">{{connection.name}}</a>\n\t\t\t\t\t</d-button-dropdown>\n\t\t\n\t\t\t\t\t<d-button-dropdown class=\"mr-1\" [autoCompact]=\"false\" buttonClass=\"btn btn-primary\" iconClass=\"fa fa-filter\" [text]=\"eConnectionPurpose[purposeFilter]\" title=\"Filter by a purpose\" [pullRight]=\"true\">\n\t\t\t\t\t\t<a class=\"dropdown-item\" [class.active]=\"purposeFilter=='0'\" routerLink='.' [queryParams]=\"{purposeFilter: 'All'}\" title=\"All Connections\">All</a>\n\t\t\t\t\t\t<a *ngFor=\"let purpose of eConnectionPurposeItems | gtFilter:'key':0\" [class.active]=\"purposeFilter==purpose.key\" class=\"dropdown-item\" routerLink='.' [queryParams]=\"{purposeFilter: purpose.key}\" [title]=\"purpose.name\">{{purpose.name}}</a>\n\t\t\t\t\t</d-button-dropdown>\n\t\t\t\t</ng-template>\n\t\t\t\t\n\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t<tags-update-button class=\"ml-1\" [objectType]=\"eSharedObjectType.Table\" [objects]=\"items\" ></tags-update-button>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n\t\t\t\t\t<dependent-items-button class=\"ml-1\" [key]=\"item.key\" [objectType]='eSharedObjectType.Table'></dependent-items-button>\n\t\t\t\t</ng-template>\n\n\t\t</d-table>\n\n\t</d-widget>\n\t\n\t<dexih-help class=\"m-3\" title=\"Datalinks\" path=\"/assets/help/reference/table.md\"></dexih-help>\n\n</div>\n\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { HubCache } from '../../hub.models';\nimport { DexihTable, eConnectionCategory, eSharedObjectType, eConnectionPurposeItems, eConnectionPurpose, eTableType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'table-index',\n    templateUrl: './table-index.component.html',\n    styles: []\n})\nexport class TableIndexComponent implements OnInit, OnDestroy {\n    private _hubCacheChangeSubscription: Subscription;\n    private _subscription: Subscription;\n\n    hubCache: HubCache;\n    purposeFilter: string;\n    connectionKey: number;\n    connectionName: string;\n    eConnectionPurposeItems = eConnectionPurposeItems;\n    eConnectionPurpose = eConnectionPurpose;\n    eSharedObjectType = eSharedObjectType;\n\n    title: string;\n\n    columns = [\n        { name: 'logicalName', title: 'Logical Name', format: 'Md', footer: 'description', tags: 'tags' },\n        { iconClass: 'sharedIcon', tooltip: 'sharedToolTip', width: '1%', align: 'center' },\n        { name: 'tableType', title: 'Table Type', format: 'Enum', enum: eTableType },\n        { name: 'connectionName', title: 'Connection', footer: 'connectionType', format: '' },\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<DexihTable>>(null);\n    tableData: Observable<Array<DexihTable>> = this._tableData.asObservable();\n\n\n    constructor(private hubService: HubService, private authService: AuthService, private router: Router, private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        try {\n            this._subscription = combineLatest(\n                this.route.data,\n                this.route.params,\n                this.route.queryParams,\n                this.hubService.getHubCacheObservable(),\n            ).subscribe(async result => {\n                let data = result[0];\n                let params = result[1];\n                let queryParams = result[2];\n                this.hubCache = result[3];\n\n                if (!this.hubCache.isLoaded()) { return; }\n                this.purposeFilter = queryParams['purposeFilter'];\n                if (!this.purposeFilter) { this.purposeFilter = 'All' }\n\n                this.connectionKey = +queryParams['connectionKey'];\n                if (this.connectionKey) {\n                    let connection = this.hubCache.hub.dexihConnections.find(c => c.key === this.connectionKey);\n                    if (connection) {\n                        this.connectionName = connection.name;\n                    }\n                } else {\n                    this.connectionName = 'All';\n                }\n\n                await this.updateTableData();\n\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Table Index');\n        }\n\n        // watch for any changes in the connections.\n        this.watchChanges();\n    }\n\n    ngOnDestroy() {\n        if (this._subscription) { this._subscription.unsubscribe(); }\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    async updateTableData() {\n        this.title = 'Tables ';\n        this.connectionName = 'All';\n\n        if (this.purposeFilter && this.purposeFilter !== 'All') {\n            this.title += ': ' + eConnectionPurpose[this.purposeFilter];\n        }\n        if (this.hubCache && this.hubCache.isLoaded()) {\n            let tableData = [];\n            for await (const table of this.hubCache.hub.dexihTables) {\n                let connection = this.hubCache.hub.dexihConnections.find(c => c.key === table.connectionKey);\n                let connectionReference = await this.hubService.GetConnectionReference(connection);\n\n                if (\n                    ((this.purposeFilter === 'All' || !this.purposeFilter) ||\n                        (connection && connection.purpose.toString() === this.purposeFilter)) &&\n                    (!this.connectionKey || table.connectionKey === this.connectionKey)\n                ) {\n                    let name: string;\n                    if (table.tableType === eTableType.Query) {\n                        name = '(Sql Query)';\n                    } else {\n                        if (table.schema) {\n                            name = table.schema + '.' + table.name;\n                        } else {\n                            name = table.name;\n                        }\n                    }\n\n                    let tableName;\n                    if (this.hubCache.defaultTableLogicalName(table.schema, table.name) === table.logicalName) {\n                        tableName = table.logicalName\n                    } else {\n                        tableName = `${table.logicalName} (${table.name})`\n                    }\n\n                    let description = '';\n                    if ( table.logicalName !== table.name) { description = `Name: ${table.name}`}\n                    if (description) { description += '<br>' }\n                    if (table.description ) { description += table.description; }\n\n                    tableData.push({\n                        key: table.key,\n                        connectionType: connection ? eConnectionPurpose[connection.purpose] : 'undefined',\n                        connectionName: connection ? connection.name : 'undefined',\n                        description: description,\n                        tableType: table.tableType,\n                        name: name,\n                        logicalName: table.logicalName,\n                        tags: this.hubCache.getObjectTags(eSharedObjectType.Table, table.key),\n                        updateDate: table.updateDate,\n                        connectionKey: connection ? connection.key : '',\n                        isFile: connectionReference ? connectionReference.connectionCategory === eConnectionCategory.File : false,\n                        sharedIcon: table.isShared ? 'fa fa-group' : 'fa fa-user-secret',\n                        sharedToolTip: table.isShared ? 'Table is shared' : 'Table is private'\n                    });\n                }\n            };\n\n            if (this.connectionKey) {\n                let connection = this.hubCache.hub.dexihConnections.find(c => c.key === this.connectionKey);\n                if (connection) {\n                    this.connectionName = connection.name;\n                    this.title += ' for connection - ' + connection.name;\n                }\n            }\n\n            this._tableData.next(tableData);\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    routeSibling(path) {\n        this.router.navigate(['..', path]);\n    }\n\n\n    editTable(table: DexihTable) {\n        this.router.navigate(['table-edit', table.key], { queryParamsHandling: 'merge', relativeTo: this.route.parent });\n    }\n\n\n    getConnection(connectionKey: number) {\n        return this.hubCache.hub.dexihConnections.find(c => c.key === connectionKey);\n    }\n\n    watchChanges() {\n        // watch the current connection in case it is changed in another session.\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n            if (hubCacheChange.changeClass === eSharedObjectType.Table || hubCacheChange.changeClass === eSharedObjectType.TagObjects) {\n                this.updateTableData();\n            }\n        });\n    }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../../shared/shared.module';\n\nimport { ResultsViewComponent } from './results-view.component';\nimport { StatsComponent } from './stats.component';\nimport { ProgressComponent } from './progress.component';\nimport { ProfileResultsComponent } from './profile-results.component';\nimport { PreviewResultsComponent } from './preview-results.component';\nimport { HubSharedModule } from '../../hub.shared.module';\n\n\n@NgModule({\n    imports: [SharedModule, HubSharedModule],\n    exports: [\n        ResultsViewComponent\n    ],\n    declarations: [\n        ResultsViewComponent,\n        ProgressComponent,\n        StatsComponent,\n        ProfileResultsComponent,\n        PreviewResultsComponent\n    ],\n    providers: [],\n})\nexport class ResultsViewModule { }\n","export * from './customFunction-index/customFunction-index.component';\nexport {CustomFunctionEditComponent, CustomFunctionParameterComponent} from './customFunction-edit';\n","export * from './datajob-index/datajob-index.component';\nexport * from './datajob-edit/datajob-edit.component';\n","export * from './remoteAgent-index/remoteAgent-index.component';\nexport * from './remoteAgent-edit/remoteAgent-edit.component';\n","export * from './dashboard-index.component';\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../../shared/shared.module';\nimport { SearchComponent } from './search.component';\nimport { ObjectTypePipe } from './object-type.pipe';\nimport { HubSharedModule} from '../hub.shared.module';\n\n@NgModule({\n    imports: [\n        SharedModule,\n        HubSharedModule,\n        ReactiveFormsModule\n    ],\n    exports: [],\n    declarations: [SearchComponent, ObjectTypePipe],\n    providers: [],\n})\nexport class SearchModule { }\n","export * from './results-index.component';\n","export * from './datalink-index.component';\n","export * from './dashboard-index/';\nexport {DashboardEditComponent, DashboardItemComponent} from './dashboard-edit/';\n","export * from './results-index';\nexport * from './results-view';\n","export * from './view-edit.component';\n","export { FilesManageComponent } from './files-manage/files-manage.component';\nexport { FilesBulkLoadComponent } from './files-bulk-load/files-bulk-load.component';\n","export * from './results-view.component';","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { HubService } from '../../hub.service';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { HubCache } from '../../hub.models';\nimport { DexihDashboard, DexihHub, eSharedObjectType } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'dashboards',\n    templateUrl: './dashboard-index.component.html',\n    styles: []\n})\nexport class DashboardIndexComponent implements OnInit, OnDestroy {\n    @Input() public hubKey: number;\n\n    private _subscription: Subscription;\n    private _hubCacheChangeSubscription: Subscription;\n\n    hubCache: HubCache;\n\n    dashboards: Array<DexihDashboard>;\n    public eSharedObjectType = eSharedObjectType;\n\n    columns = [\n        { name: 'name', title: 'Name', footer: 'description', format: 'Md', tags: 'tags' },\n        { iconClass: 'sharedIcon', tooltip: 'sharedToolTip', width: '1%', align: 'center' },\n        { name: 'updateDate', title: 'Last Modified', format: 'Calendar' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private hubService: HubService,\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        // watch for any changes in the validations.\n        this.watchChanges();\n\n        try {\n            this._subscription = combineLatest([\n                this.route.data,\n                this.route.params,\n                this.hubService.getHubCacheObservable()]\n            ).subscribe(result => {\n                let data = result[0];\n                let params = result[1];\n                this.hubCache = result[2];\n\n                this.updateDashboards();\n            });\n        } catch (e) {\n            this.hubService.addHubClientErrorMessage(e, 'Dashboard Index');\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._hubCacheChangeSubscription) { this._hubCacheChangeSubscription.unsubscribe(); }\n        if (this._subscription) { this._subscription.unsubscribe(); }\n    }\n\n    close() {\n        this.authService.navigateUp();\n    }\n\n    delete(dashboard: Array<DexihDashboard>) {\n        // TDB\n        this.hubService.deleteDashboards(dashboard);\n    }\n\n    updateDashboards() {\n        if (this.hubCache && this.hubCache.isLoaded()) {\n            let dashboards: Array<DexihDashboard>;\n            dashboards = this.hubCache.hub.dexihDashboards.filter(c => c.isValid);\n            let tableData = dashboards.map(dashboard => {\n                return {\n                    key: dashboard.key,\n                    name: dashboard.name,\n                    tags: this.hubCache.getObjectTags(eSharedObjectType.Dashboard, dashboard.key),\n                    updateDate: dashboard.updateDate,\n                    sharedIcon: dashboard.isShared ? 'fa fa-group' : 'fa fa-user-secret',\n                    sharedToolTip: dashboard.isShared ? 'Table is shared' : 'Table is private'\n                };\n            });\n            this._tableData.next(tableData);\n        } else {\n            this._tableData.next(null);\n        }\n    }\n\n    edit(dashboard: DexihDashboard) {\n        this.router.navigate(['dashboard-edit', dashboard.key], { relativeTo: this.route });\n    }\n\n    // TBD\n    export(items: Array<DexihDashboard>) {\n        const cache = this.hubCache;\n        const hub = this.hubService.createHub(cache.hub.hubKey, '');\n        items.forEach(item => { cache.cacheAddDashboard(item.key, hub); });\n\n        let filename = items.length === 1 ? 'Dashboard - ' + items[0].name + '.json' : 'dashboards.json';\n\n        this.hubService.exportHub(hub, filename);\n    }\n\n    // TBD\n    watchChanges() {\n        // watch the current validation in case it is changed in another session.\n        this._hubCacheChangeSubscription = this.hubService.getHubCacheChangeObservable().subscribe(hubCacheChange => {\n            if (hubCacheChange.changeClass === eSharedObjectType.Dashboard || hubCacheChange.changeClass === eSharedObjectType.TagObjects) {\n                this.updateDashboards();\n            }\n        });\n    }\n}\n","<div class=\"container\">\n    <d-widget title=\"Dashboards\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-pie-chart\" \n\t\t[showCloseButton]=\"true\"\n\t\t(close)=\"close()\"\n\t>\n\t\t\t<d-table \n\t\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t\t[enableStickyToolbar]=\"true\"  [toolbarZIndex]=\"100\"\n\t\t\t\t[columns]=\"columns\"\n\t\t\t\t[dataObservable]=\"tableData\"\n\t\t\t\t(rowClick)=\"edit($event)\"\n\t\t\t\t[tags]=\"this.hubCache.hub.dexihTags\"\n\t\t\t\t>\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-item=\"item\">\n\t\t\t\t\t<dependent-items-button class=\"ml-1\" [key]=\"item.key\" [objectType]='eSharedObjectType.Dashboard'></dependent-items-button>\n\t\t\t\t</ng-template>\n\n\t\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t\t<tags-update-button class=\"ml-1\" [objectType]=\"eSharedObjectType.Dashboard\" [objects]=\"items\" ></tags-update-button>\n\t\t\t\t\t</ng-template>\n\n\t\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t\t<actions-dashboard-button [dashboards]=\"items\"></actions-dashboard-button>\n\t\t\t\t\t</ng-template>\n\t\t\t</d-table>\n\n\t</d-widget>\n\t\n\t<dexih-help class=\"m-3\" title=\"Dashboards\" path=\"/assets/help/reference/dashboard.md\"></dexih-help>\n</div>\n\n\n","export * from './api-index.component';\n","export * from './datalinkTest-index/datalinkTest-index.component';\nexport * from './datalinkTest-new/datalinkTest-new.component';\n"]}