{"version":3,"sources":["webpack:///src/app/+admin/admin-main.component.ts","webpack:///src/app/+admin/admin-main.component.html","webpack:///src/app/+admin/users/users-index/users-index.component.html","webpack:///src/app/+admin/users/users-index/users-index.component.ts","webpack:///src/app/+admin/admin.models.ts","webpack:///src/app/+admin/users/user-edit/user-edit.component.html","webpack:///src/app/+admin/users/user-edit/user-edit.component.ts","webpack:///src/app/+admin/users/users-invite/users-invite.component.html","webpack:///src/app/+admin/admin.routing.ts","webpack:///src/app/+admin/users/users-invite/users-invite.component.ts","webpack:///src/app/+admin/admin.module.ts"],"names":["AdminMainComponent","UsersIndexComponent","authService","router","route","columns","name","title","format","_tableData","BehaviorSubject","tableData","this","asObservable","refreshUsers","post","searchString","maxResults","then","result","next","catch","reason","dexihMessage","addMessage","users","emails","map","c","userName","confirmDialog","join","confirm","addSuccessMessage","user","navigate","queryParamsHandling","relativeTo","parent","editUser","UserAuthorization","hubQuota","inviteQuota","firstName","lastName","terms","subscription","isEnabled","isRegistered","isInvited","accessFailedCount","email","emailConfirmed","id","lockoutEnabled","lockoutEnd","twoFactorEnabled","phoneNumber","phoneNumberConfirmed","Invites","role","eRole","User","Administrator","Manager","Viewer","None","roles","key","UserEditComponent","formsService","location","_subscription","combineLatest","data","params","subscribe","action","createDefault","navigateUp","refreshForm","e","message","unsubscribe","logins","currentForm","value","sendInvite","login","provider","loginProvider","providerKey","Routing","forChild","path","component","children","pageTitle","UsersInviteComponent","_routeDataSubscription","inviteUsers","AdminModule"],"mappings":"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","file":"x","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n    selector: 'admin-main',\n    templateUrl: './admin-main.component.html'\n})\nexport class AdminMainComponent implements OnInit {\n\n    constructor() {\n    }\n\n    ngOnInit() {\n\n    }\n\n}\n","<div id=\"content\">\n    <router-outlet></router-outlet>\n</div>\n","<dexih-message #DexihMessage></dexih-message>\n\n<div class=\"container-fluid\">\n    <dexih-widget title=\"Users\" \n\t\ticonClass=\"fa fa-lg fa-fw fa-group\" \n\t\t\n\t>\n\t\t<dexih-table \n\t\t\t[enableMultiSelect]=\"true\"\n\t\t\t[columns]=\"columns\"\n\t\t\t[dataObservable]=\"tableData\"\n\t\t\t(rowClick)=\"editUser($event)\"\n\t\t\t>\n\t\t\t\t<ng-template #selectedItemsAction select=\"selectedItemsAction\" let-items=\"items\">\n\t\t\t\t\t<dexih-button class=\"mr-1\" (click)=\"reinviteUsers(items)\" iconClass=\"fa fa-envelope\" buttonClass=\"btn-primary\" title=\"invite or resend invite to selected users.\">Resend Invite</dexih-button>\n\t\t\t\t\t<dexih-button-delete class=\"mr-1\" title=\"Delete selected users\" (click)=\"deleteUsers(items)\"></dexih-button-delete>\n\t\t\t\t\t<dexih-button class=\"mr-1\" (click)=\"revokeUsers(items)\" iconClass=\"fa fa-lock\" buttonClass=\"btn-danger\" title=\"Revoke selected users access.\">Revoke</dexih-button>\n\t\t\t\t\t<dexih-button (click)=\"enableUsers(items)\" iconClass=\"fa fa-unlock\" buttonClass=\"btn-success\" title=\"Re-enable selected users access\">Enable</dexih-button>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #selectedItemAction select=\"selectedItemAction\" let-user=\"item\">\n\t\t\t\t\t<dexih-button-edit title=\"Edit User\" [routerLink]=\"['edit-user', user.userName]\"></dexih-button-edit>\n\t\t\t\t</ng-template>\n\n\t\t\t\t<ng-template #actions let-items=\"items\">\n\t\t\t\t\t<dexih-button-new class=\"mr-1\" title=\"Create a new user\" [routerLink]=\"['new-user']\"></dexih-button-new>\n\t\t\t\t\t<dexih-button [routerLink]=\"['invite-users']\" iconClass=\"fa fa-envelope\" buttonClass=\"btn-primary\" title=\"Invite users\">Invite</dexih-button>\n\t\t\t\t</ng-template>\n\t\t</dexih-table>\n\n    </dexih-widget>\n</div>\n\n\n","import { Component, OnInit, OnDestroy, Input, ViewChild } from '@angular/core';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription, Observable, BehaviorSubject, combineLatest } from 'rxjs';\nimport { UserAuthorization } from '../../admin.models';\nimport { DexihMessageComponent } from '../../../shared/ui/dexihMessage';\nimport { ApplicationUser } from '../../../shared/shared.models';\n\n@Component({\n    selector: 'users',\n    templateUrl: './users-index.component.html',\n    styles: []\n})\nexport class UsersIndexComponent implements OnInit, OnDestroy {\n    @ViewChild('DexihMessage', { static: true }) public dexihMessage: DexihMessageComponent;\n\n    users: Array<UserAuthorization>;\n\n    columns = [\n        { name: 'email', title: 'Email', format: '' },\n        { name: 'firstName', title: 'First Name', format: '' },\n        { name: 'lastName', title: 'Last Name', format: '' },\n        { name: 'isInvited', title: 'Is Invited', format: 'Boolean' },\n        { name: 'emailConfirmed', title: 'Email Confirmed', format: 'Boolean' },\n        { name: 'isRegistered', title: 'Is Registered', format: 'Boolean' },\n        { name: 'isEnabled', title: 'Is Enabled', format: 'Boolean' },\n        { name: 'lockoutEnd', title: 'Lockout End', format: 'Time' },\n        { name: 'terms', title: 'Agreed terms', format: 'Boolean' },\n        { name: 'subscription', title: 'Agreed subscription', format: 'Boolean' },\n    ];\n\n    private _tableData = new BehaviorSubject<Array<any>>(null);\n    tableData: Observable<Array<any>> = this._tableData.asObservable();\n\n    constructor(\n        private authService: AuthService,\n        private router: Router,\n        private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.refreshUsers();\n    }\n\n    ngOnDestroy() {\n    }\n\n    refreshUsers() {\n        this.authService.post<ApplicationUser[]>('/api/Admin/GetUsers', {\n            searchString: '',\n            maxResults: 100,\n        }, 'Getting user details...').then(result => {\n            this._tableData.next(result);\n        }).catch(reason => {\n            this.dexihMessage.addMessage(reason);\n        });\n    }\n\n    deleteUsers(users: Array<UserAuthorization>) {\n        const emails = users.map(c => c.userName);\n\n        this.authService.confirmDialog('Delete users?', 'This action will delete users with the following emails: <p>' +\n            emails.join('</p><p>') + '</p>  <p></p>Are you sure?').then(confirm => {\n                if (confirm) {\n                    this.authService.post('/api/Admin/DeleteUsers', {\n                        emails: emails\n                    }, 'Deleting users...').then(result => {\n                        this.refreshUsers();\n                    }).catch(reason => {\n                        this.dexihMessage.addMessage(reason);\n                    });\n                }\n            });\n    }\n\n    revokeUsers(users: Array<UserAuthorization>) {\n        const emails = users.map(c => c.userName);\n\n        this.authService.confirmDialog('Revoke users?', 'This action will revoke users with the following emails: <p>' +\n            emails.join('</p><p>') + '</p>  <p></p>Are you sure?').then(confirm => {\n                if (confirm) {\n\n                    this.authService.post('/api/Admin/RevokeUsers', {\n                        emails: users.map(c => c.userName)\n                    }, 'Revoking users...').then(result => {\n                        this.refreshUsers();\n                    }).catch(reason => {\n                        this.dexihMessage.addMessage(reason);\n                    });\n                }\n            });\n    }\n\n    enableUsers(users: Array<UserAuthorization>) {\n        const emails = users.map(c => c.userName);\n\n        this.authService.confirmDialog('Enable users?', 'This action will re-enable logins for users with the following emails: <p>' +\n            emails.join('</p><p>') + '</p>  <p></p>Are you sure?').then(confirm => {\n                if (confirm) {\n\n                    this.authService.post('/api/Admin/EnableUsers', {\n                        emails: users.map(c => c.userName)\n                    }, 'Enabling users...').then(result => {\n                        this.refreshUsers();\n                    }).catch(reason => {\n                        this.dexihMessage.addMessage(reason);\n                    });\n                }\n            });\n    }\n\n    reinviteUsers(users: Array<UserAuthorization>) {\n        this.authService.post('/api/Admin/ReInviteUsers', {\n            emails: users.map(c => c.userName)\n        }, 'Inviting users...').then(result => {\n            this.dexihMessage.addSuccessMessage('Emails have been sent to the selected users.');\n        }).catch(reason => {\n            this.dexihMessage.addMessage(reason);\n        });\n    }\n\n    editUser(user: UserAuthorization) {\n        this.router.navigate(['edit-user', user.userName], { queryParamsHandling: 'merge', relativeTo: this.route.parent });\n    }\n\n}\n","export class UserAuthorization {\n    public hubQuota = 1;\n    public inviteQuota = 5;\n    public firstName: string = null;\n    public lastName: string = null;\n    public terms = false;\n    public subscription = false;\n    public isEnabled = false;\n    public isRegistered = false;\n    public isInvited = false;\n\n    public accessFailedCount = 0;\n\n    public email: string = null;\n    public emailConfirmed = false;\n\n    public userName: string = null;\n\n    public id: string = null;\n\n    public lockoutEnabled = false;\n    public lockoutEnd: Date = null;\n\n    public logins: UserLogin[];\n    public claims: UserClaim[];\n\n    public twoFactorEnabled = false;\n    public phoneNumber: string = null;\n    public phoneNumberConfirmed = false;\n\n    public roles: string[];\n\n}\n\nexport class UserLogin {\n    public loginProvider: string = null;\n    public providerDisplayName: string = null;\n    public providerKey: string = null;\n    public userId: string = null;\n}\n\nexport class UserClaim {\n    public issuer: string = null;\n    public originalIssuer: string = null;\n    public type: string = null;\n    public valueType: string = null;\n    public value: string = null;\n}\n\nexport class Invites {\n    public emails: string[] = [];\n    public hubQuota = 1;\n    public inviteQuota = 5;\n    public role = eRole.User;\n}\n\nexport enum eRole {\n    Administrator = 1,\n    Manager = 2,\n    User = 3,\n    Viewer = 4,\n    None = 5\n}\nexport const roles = [\n    {key: eRole.Administrator, name: 'Administrator'},\n    {key: eRole.Manager, name: 'Manager'},\n    {key: eRole.User, name: 'User'},\n    {key: eRole.Viewer, name: 'Viewer'},\n    {key: eRole.None, name: 'None'},\n];\n","<dexih-message #DexihMessage></dexih-message>\n\n<div class=\"container pt-3\">\n\t<dexih-widget-vertical>\n    <dexih-widget title=\"User Details\" iconClass=\"fa fa-lg fa-fw fa-user\"  [padding]=\"true\">\n        <ng-template #header>\n\t\t\t<dexih-button-save class=\"mr-1\" [busy]=\"formsService.formSaving\" (click)=\"save()\"></dexih-button-save>\n\t\t\t<dexih-button-cancel (click)=\"cancel()\"></dexih-button-cancel>\n        </ng-template>\n\n\t\t<form *ngIf=\"formsService.currentForm\"  [formGroup]=\"formsService.currentForm\">\n\t\t\t<fieldset>\n\t\t\t\t<section>\n\t\t\t\t\t<form-input label=\"Email Address\" formControlName=\"email\" placeholder=\"Enter the email.\" iconClass=\"fa fa-list\" >\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-input label=\"User Name\" formControlName=\"userName\" placeholder=\"Enter the user name.\" iconClass=\"fa fa-list\" >\n\t\t\t\t\t</form-input>\n\t\t\t\t</section>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"First Name\" formControlName=\"firstName\" placeholder=\"First Name\" [autocapitalize]=\"true\">\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Last Name\" formControlName=\"lastName\" placeholder=\"Last Name\" [autocapitalize]=\"true\">\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Agreed Terms\" formControlName=\"terms\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Agreed Subscription\" formControlName=\"subscription\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input type=\"number\" label=\"Maximum Personal Hubs\" formControlName=\"hubQuota\" placeholder=\"Enter the number of hubs\" iconClass=\"fa fa-list\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input type=\"number\" label=\"Number of invites\" formControlName=\"inviteQuota\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Is Invited\" formControlName=\"isInvited\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"IsRegistered\" formControlName=\"isRegistered\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Is Enabled\" formControlName=\"isEnabled\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Email is confirmed\" formControlName=\"emailConfirmed\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Lockout Enabled\" formControlName=\"lockoutEnabled\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input type=\"date\" label=\"Lockout End\" formControlName=\"lockoutEnd\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input label=\"Phone Number\" formControlName=\"phoneNumber\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Phone Number Confirmed\" formControlName=\"phoneNumberConfirmed\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-checkbox label=\"Two Factor Enabled\" formControlName=\"twoFactorEnabled\" >\n\t\t\t\t\t\t</form-checkbox>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t</fieldset>\n\t\t</form>\n \n    </dexih-widget>\n\n\t<dexih-widget title=\"Logins\" subTitle=\"The following login providers are available for this login\" iconClass=\"fa fa-lg fa-fw fa-life-saver\"  [padding]=\"true\">\n\t\t<ng-template #tools>\n\n\t\t</ng-template>\n\n\t\t<ul class=\"list-group\">\n\n\t\t\t<li *ngFor=\"let login of logins\" class=\"list-group-item\">\n\t\t\t\t<h3>Provider: {{login.loginProvider}}</h3>\n\t\t\t\t<hr>\n\t\t\t\t<div>\n\t\t\t\t\t<a class=\"btn btn-danger text-white\" (click)=\"deleteLogin(login)\" title=\"Remove the following login\">Delete</a>\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t</ul>\n\t</dexih-widget>\n</dexih-widget-vertical>\n</div>\n","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { UserLoginInfo, User } from '../../../+auth/auth.models';\nimport { Subscription,  Observable, combineLatest} from 'rxjs';\nimport { Location } from '@angular/common';\nimport { FormsService } from '../../../shared/forms/forms.service';\nimport { UserAuthorization, UserLogin } from '../../admin.models';\nimport { DexihMessageComponent } from '../../../shared/ui/dexihMessage';\nimport { UserModel } from '../../../shared/shared.models';\n\n@Component({\n\n  selector: 'user-edit-form',\n  templateUrl: './user-edit.component.html',\n  providers: [FormsService]\n})\nexport class UserEditComponent implements OnInit, OnDestroy {\n  @ViewChild('DexihMessage', { static: true }) public dexihMessage: DexihMessageComponent;\n\n  private _subscription: Subscription;\n\n  private action: string;\n  email: string;\n  logins: Array<UserLogin>;\n\n  constructor(\n    private authService: AuthService,\n    public formsService: FormsService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location) {\n  }\n\n  ngOnInit() {\n    try {\n      this._subscription = combineLatest(\n        this.route.data,\n        this.route.params,\n      ).subscribe(result => {\n        let data = result[0];\n        let params = result[1];\n\n        this.action = data['action'];\n\n        if (this.action === 'new') {\n          const user = new UserAuthorization();\n          this.formsService.createDefault(user, user);\n        } else {\n          this.email = params['userName'];\n\n          if (!this.email) {\n            this.authService.navigateUp();\n            return;\n          }\n          this.refreshForm();\n        }\n      });\n    } catch (e) {\n      this.dexihMessage.addMessage(e.message);\n    }\n\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) { this._subscription.unsubscribe(); }\n  }\n\n  refreshForm() {\n    this.authService.post<UserModel>('/api/Admin/GetUser', {\n      email: this.email,\n    }, 'Getting user details...').then(result => {\n      this.logins = result.logins;\n      this.formsService.createDefault(result, new UserAuthorization());\n    }).catch(reason => {\n      this.dexihMessage.addMessage(reason);\n    });\n\n  }\n  save() {\n    const user = this.formsService.currentForm.value;\n\n    if (this.action === 'new') {\n      this.authService.post('/api/Admin/AddUsers', {\n        users: [user],\n        sendInvite: true\n      }, 'Adding users...').then(result => {\n        this.authService.navigateUp();\n      }).catch(reason => {\n        this.dexihMessage.addMessage(reason);\n      });\n    } else {\n      this.authService.post('/api/Admin/UpdateUsers', {\n        users: [user],\n      }, 'Updating users...').then(result => {\n        this.authService.navigateUp();\n      }).catch(reason => {\n        this.dexihMessage.addMessage(reason);\n      });\n\n    }\n  }\n\n  cancel() {\n    this.authService.navigateUp();\n  }\n\n  deleteLogin(login: UserLogin) {\n    const user = this.formsService.currentForm.value;\n\n    this.authService.post('/api/Admin/RemoveExternalLogin', {\n      email: user.email,\n      provider: login.loginProvider,\n      providerKey: login.providerKey\n    }, 'Removing external login...').then(result => {\n      this.refreshForm();\n    }).catch(reason => {\n      this.dexihMessage.addMessage(reason);\n    });\n  }\n\n}\n","<dexih-message #DexihMessage></dexih-message>\n\n<div class=\"container-fluid\">\n    <dexih-widget title=\"Invite Users\" iconClass=\"fa fa-lg fa-fw fa-user\" [padding]=\"true\">\n        <ng-template #tools>\n\t\t\t\t<button \n\t\t\t\t\tclass=\"btn btn-primary mr-1\" \n\t\t\t\t\t[ngClass]=\"{disabled : formsService.formSaving || !formsService.hasChanged }\" \n\t\t\t\t\t(click)=\"save()\">\n\t\t\t\t\t<i *ngIf=\"formsService.formSaving\" class=\"fa fa-spin fa-cog\"></i> Send Invites\n\t\t\t\t</button>\t\t\t\t\n\t\t\t\t<dexih-button-cancel (click)=\"cancel()\"></dexih-button-cancel>\n        </ng-template>\n\n\t\t<form *ngIf=\"formsService.currentForm\"  [formGroup]=\"formsService.currentForm\">\n\t\t\t<fieldset>\n\t\t\t\t<section>\n\t\t\t\t\t<form-tags label=\"Email Addresses\" formControlName=\"emails\" placeholder=\"Provide emails to invite.\" note=\"Enter email addresses of users to invite to join the integration hub.\" >\n\t\t\t\t\t</form-tags>\n\t\t\t\t</section>\n\n\t\t\t\t<div class=\"form-row\">\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input type=\"number\" label=\"Maximum Personal Hubs\" formControlName=\"hubQuota\" placeholder=\"Enter the number of hubs.\" iconClass=\"fa fa-list\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section class=\"form-group col-md-6\">\n\t\t\t\t\t\t<form-input type=\"number\" label=\"Number of invites\" formControlName=\"inviteQuota\" placeholder=\"Enter the number of invites.\" >\n\t\t\t\t\t\t</form-input>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t\t<section>\n\t\t\t\t\t<form-select label=\"Default Role\" formControlName=\"role\" [items]=\"roles\" itemName=\"name\" itemKey=\"key\" [enableFilter]=\"false\"\n\t\t\t\t\tnote=\"Enter the role provided to the invited users.\" >\n\t\t\t\t\t</form-select>\n\t\t\t\t</section>\n\n\t\t\t</fieldset>\n\t\t</form>\n \n    </dexih-widget>\n","import { Routes, RouterModule } from '@angular/router';\nimport { AdminMainComponent } from './admin-main.component';\nimport { UsersIndexComponent } from './users/users-index/users-index.component';\nimport { UserEditComponent } from './users/user-edit/user-edit.component';\nimport { UsersInviteComponent } from './users/users-invite/users-invite.component';\n\nexport const routes: Routes = [\n    { path: '', component: AdminMainComponent, children: [\n    { path: 'users', data: { pageTitle: 'Users' }, children : [\n        { path: '', component: UsersIndexComponent, data: { pageTitle: 'Users Summary' } },\n        { path: 'edit-user/:userName', component: UserEditComponent, data: { action: 'edit', pageTitle: 'Edit User' } },\n        { path: 'new-user', component: UserEditComponent, data: { action: 'new', pageTitle: 'New User' } },\n        { path: 'invite-users', component: UsersInviteComponent, data: { pageTitle: 'Invite Users' } },\n    ] },\n    ]}\n];\n\nexport const Routing = RouterModule.forChild(routes);\n","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../../+auth/auth.service';\nimport { Subscription, combineLatest} from 'rxjs';\nimport { Location } from '@angular/common';\nimport { FormsService } from '../../../shared/forms/forms.service';\nimport { Invites, roles } from '../../admin.models';\nimport { DexihMessageComponent } from '../../../shared/ui/dexihMessage';\n\n@Component({\n\n  selector: 'users-invite-form',\n  templateUrl: './users-invite.component.html',\n  providers: [ FormsService ]\n})\nexport class UsersInviteComponent implements OnInit, OnDestroy {\n@ViewChild('DexihMessage', { static: true }) public dexihMessage: DexihMessageComponent;\n\n  private _routeDataSubscription: Subscription;\n\n  private action: string;\n\n  roles = roles;\n\n  constructor(\n    private authService: AuthService,\n    public formsService: FormsService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location) {\n  }\n\n  ngOnInit() {\n\n    this._routeDataSubscription = this.route.data.subscribe(data => {\n      this.action = data['action'];\n\n      const inviteUsers = new Invites();\n      this.formsService.createDefault(inviteUsers, inviteUsers);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this._routeDataSubscription) { this._routeDataSubscription.unsubscribe(); }\n  }\n\n  save() {\n    const emails = this.formsService.currentForm.value.emails;\n    const hubQuota = this.formsService.currentForm.value.hubQuota;\n      const inviteQuota = this.formsService.currentForm.value.inviteQuota;\n      const role = this.formsService.currentForm.value.role;\n      this.authService.post('/api/Admin/InviteUsers', {\n              emails: emails,\n              hubQuota: hubQuota,\n              inviteQuota: inviteQuota,\n              role: role\n          }, 'Inviting users...').then(result => {\n            this.authService.navigateUp();\n        }).catch(reason => {\n          this.dexihMessage.addMessage(reason);\n      });\n  }\n\n  cancel() {\n    this.authService.navigateUp();\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { Routing } from './admin.routing';\nimport { SharedModule } from '../shared/shared.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AdminMainComponent } from './admin-main.component';\nimport { UsersIndexComponent } from './users/users-index/users-index.component';\nimport { UserEditComponent } from './users/user-edit/user-edit.component';\nimport { UsersInviteComponent } from './users/users-invite/users-invite.component';\n\n@NgModule({\n    imports: [\n        SharedModule,\n        Routing,\n        ReactiveFormsModule\n    ],\n    exports: [],\n    declarations: [\n        AdminMainComponent,\n        UsersIndexComponent,\n        UserEditComponent,\n        UsersInviteComponent\n    ],\n    providers: [],\n})\nexport class AdminModule { }\n"]}